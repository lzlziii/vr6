using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq.Expressions;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;
using System.Xml;
using AK.Wwise;
using Bhaptics.Tact.Unity;
using CacheUtils;
using CodeStage.AntiCheat.ObscuredTypes;
using DG.Tweening;
using Dissonance.Networking;
using Exploder;
using Flat;
using FlatBuffers;
using Il2CppDummyDll;
using NodeCanvas.BehaviourTrees;
using NodeCanvas.Framework;
using NodeCanvas.Framework.Internal;
using NodeCanvas.Tasks.Actions;
using NodeCanvas.Tasks.Conditions;
using ParadoxNotion;
using PostProcess;
using RootMotion;
using RootMotion.FinalIK;
using SSA;
using SWS;
using TMPro;
using UniRx;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Experimental.Rendering.Universal;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Profiling;
using UnityEngine.Rendering.Universal.Internal;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using VRNetLib;
using VRPlatformLib;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AltTrackingManager : MonoSingleton<AltTrackingManager>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isEnableMarker;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x16075FC", Offset = "0x16075FC", VA = "0x16075FC")]
	public void SetMarkerActive()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1607734", Offset = "0x1607734", VA = "0x1607734")]
	public void RestartTracking()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1607864", Offset = "0x1607864", VA = "0x1607864")]
	public void SetAltTrackingActive()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x16078EC", Offset = "0x16078EC", VA = "0x16078EC")]
	private void SetAltTracking(bool isActive)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1607B84", Offset = "0x1607B84", VA = "0x1607B84")]
	public AltTrackingManager()
	{
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFCFAA0", Offset = "0xFCFAA0")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000468")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001A9E")]
		MouseXAndY,
		[Token(Token = "0x4001A9F")]
		MouseX,
		[Token(Token = "0x4001AA0")]
		MouseY
	}

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x14C1E8C", Offset = "0x14C1E8C", VA = "0x14C1E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x14C20EC", Offset = "0x14C20EC", VA = "0x14C20EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x14C21AC", Offset = "0x14C21AC", VA = "0x14C21AC")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
public class ChinarMirror : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mirrorPlane;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera mainCamera;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera mirrorCamera;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x144A13C", Offset = "0x144A13C", VA = "0x144A13C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x144A19C", Offset = "0x144A19C", VA = "0x144A19C")]
	private void Update()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x144A344", Offset = "0x144A344", VA = "0x144A344")]
	public ChinarMirror()
	{
	}
}
[Token(Token = "0x2000005")]
[ExecuteInEditMode]
public class ChinarMirrorPlane : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mirrorPlane;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool estimateViewFrustum;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool setNearClipPlane;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float nearClipDistanceOffset;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera mirrorCamera;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 vn;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float l;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float r;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float b;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float t;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float d;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float n;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float f;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 pa;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 pb;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 pc;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 pe;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 va;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 vb;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 vc;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 vr;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 vu;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Matrix4x4 p;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Matrix4x4 rm;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Matrix4x4 tm;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Quaternion q;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 lb_p;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Vector3 rb_p;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 lt_p;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x144A34C", Offset = "0x144A34C", VA = "0x144A34C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x144A3AC", Offset = "0x144A3AC", VA = "0x144A3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x144B1DC", Offset = "0x144B1DC", VA = "0x144B1DC")]
	public ChinarMirrorPlane()
	{
	}
}
[Token(Token = "0x2000006")]
public class MirrorAutoInit : MonoBehaviour
{
	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChinarMirror Mirror;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChinarMirrorPlane MirrorPlane;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x14B3784", Offset = "0x14B3784", VA = "0x14B3784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x14B38C0", Offset = "0x14B38C0", VA = "0x14B38C0")]
	public MirrorAutoInit()
	{
	}
}
[Token(Token = "0x2000007")]
public class LaserControl : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer lineRender;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6110", Offset = "0xFD6110")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x400002E")]
	private const int posCount = 2;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 endPosDefault;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem pts;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RaycastHit hit;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int activeLayer;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1482A60", Offset = "0x1482A60", VA = "0x1482A60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1482C70", Offset = "0x1482C70", VA = "0x1482C70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1482EDC", Offset = "0x1482EDC", VA = "0x1482EDC")]
	public LaserControl()
	{
	}
}
[Token(Token = "0x2000008")]
public class LaserControl_Infrared : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer[] lineRenders;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem pts;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD617C", Offset = "0xFD617C")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RaycastHit hit;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool IsPlay;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1482EEC", Offset = "0x1482EEC", VA = "0x1482EEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1482FEC", Offset = "0x1482FEC", VA = "0x1482FEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x14832DC", Offset = "0x14832DC", VA = "0x14832DC")]
	public LaserControl_Infrared()
	{
	}
}
[Token(Token = "0x2000009")]
public class ForceSyncTransform : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform srcRoot;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform dstRoot;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x15F29F8", Offset = "0x15F29F8", VA = "0x15F29F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x15F2B00", Offset = "0x15F2B00", VA = "0x15F2B00")]
	public ForceSyncTransform()
	{
	}
}
[Token(Token = "0x200000A")]
public class HoldPos : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform VRCamera;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x14F6EDC", Offset = "0x14F6EDC", VA = "0x14F6EDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x14F6FA0", Offset = "0x14F6FA0", VA = "0x14F6FA0")]
	public HoldPos()
	{
	}
}
[Token(Token = "0x200000B")]
public class RoadTest : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new GameObject gameObject;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1561328", Offset = "0x1561328", VA = "0x1561328")]
	private void Update()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x15615A0", Offset = "0x15615A0", VA = "0x15615A0")]
	public RoadTest()
	{
	}
}
[Token(Token = "0x200000C")]
public class SpeedManager : MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraRoot;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cameraT;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 lastPos;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 curPos;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MOM;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 targetPos;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float lerpSpeed;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1418738", Offset = "0x1418738", VA = "0x1418738")]
	private void Start()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1418798", Offset = "0x1418798", VA = "0x1418798")]
	private void Update()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1418A90", Offset = "0x1418A90", VA = "0x1418A90")]
	private Vector3 Format(Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1418B54", Offset = "0x1418B54", VA = "0x1418B54")]
	public SpeedManager()
	{
	}
}
[Token(Token = "0x200000D")]
public class SpeedScale : MonoBehaviour
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform VRCamera;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Scale;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1418B64", Offset = "0x1418B64", VA = "0x1418B64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1418C24", Offset = "0x1418C24", VA = "0x1418C24")]
	public SpeedScale()
	{
	}
}
[Token(Token = "0x200000E")]
public class manager : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> rooms;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> switchGears;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x29F4674", Offset = "0x29F4674", VA = "0x29F4674")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x29F4990", Offset = "0x29F4990", VA = "0x29F4990")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x29F482C", Offset = "0x29F482C", VA = "0x29F482C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x29F49CC", Offset = "0x29F49CC", VA = "0x29F49CC")]
	public void SwitchRoom(int _index)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x29F4AE0", Offset = "0x29F4AE0", VA = "0x29F4AE0")]
	private void OnTriggerEnterCB(Collider collider_1, Collider collider_2)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x29F4B90", Offset = "0x29F4B90", VA = "0x29F4B90")]
	public manager()
	{
	}
}
[Token(Token = "0x200000F")]
public class RecordCamera : MonoBehaviour
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cube;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform mainCamera;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera subCamera;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sensitivity;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotaSensitivity;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fieldOfViewSensitivity;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float MouseSensitivity;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float MoveSensitivity;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseXAxis;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mouseYAxis;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float moveXAxis;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float moveYAxis;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_RotationMouseInput;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_Vector3YAxisUp;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_tempVector3YAxisUp;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_Vector3YAxisDown;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_tempVector3YAxisDown;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_Vector3YAxisLeft;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_tempVector3YAxisLeft;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_Vector3YAxisRight;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_tempVector3YAxisRight;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float Vector3YAxisFor;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float tempVector3YAxisFor;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float Vector3YAxisBack;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float tempVector3YAxisBack;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float Vector3YAxisUp;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float tempVector3YAxisUp;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float Vector3YAxisDown;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float tempVector3YAxisDown;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float Vector3YAxisLeft;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float tempVector3YAxisLeft;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float Vector3YAxisRight;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float tempVector3YAxisRight;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float minimumY;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float maximumY;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float movespeed;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float rotationspeed;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float depthOfFieldspeed;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float rotationX;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float rotationY;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 MoveX;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 MoveY;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float depth;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool is1;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool is2;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool is3;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	private bool is4;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x155EB74", Offset = "0x155EB74", VA = "0x155EB74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x155EB80", Offset = "0x155EB80", VA = "0x155EB80")]
	private void Start()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x155EC4C", Offset = "0x155EC4C", VA = "0x155EC4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x155FF68", Offset = "0x155FF68", VA = "0x155FF68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x155FF6C", Offset = "0x155FF6C", VA = "0x155FF6C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDBD50", Offset = "0xFDBD50")]
	public void Test()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x155FF70", Offset = "0x155FF70", VA = "0x155FF70")]
	public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1560070", Offset = "0x1560070", VA = "0x1560070")]
	public RecordCamera()
	{
	}
}
[Token(Token = "0x2000010")]
public class RecordCameraAudioControl : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float Music;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Voice;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x15600A0", Offset = "0x15600A0", VA = "0x15600A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1560454", Offset = "0x1560454", VA = "0x1560454")]
	public RecordCameraAudioControl()
	{
	}
}
[Token(Token = "0x2000011")]
public class Bird : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int animCount;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedX;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedY;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speedZ;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float amplitudeX;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float amplitudeY;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float amplitudeZ;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool canChangeAnim;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float angleX;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float angleY;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float angleZ;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x163B950", Offset = "0x163B950", VA = "0x163B950")]
	public Bird()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x163B960", Offset = "0x163B960", VA = "0x163B960")]
	private Vector3 GetNewPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x163BA1C", Offset = "0x163BA1C", VA = "0x163BA1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x163BA20", Offset = "0x163BA20", VA = "0x163BA20")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x163BC18", Offset = "0x163BC18", VA = "0x163BC18")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000012")]
public class TestAgentBlock : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxBlockTime;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float blockDistance;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float totalDistance;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshAgent aiagent;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float curBlockTime;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool isBlock;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 oldPos;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 newPos;

	[Token(Token = "0x17000001")]
	public bool IsBlock
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x145BB3C", Offset = "0x145BB3C", VA = "0x145BB3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x145BB30", Offset = "0x145BB30", VA = "0x145BB30")]
		set
		{
		}
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x145BB44", Offset = "0x145BB44", VA = "0x145BB44")]
	private void Start()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x145BBE0", Offset = "0x145BBE0", VA = "0x145BBE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x145BC30", Offset = "0x145BC30", VA = "0x145BC30")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x145BC34", Offset = "0x145BC34", VA = "0x145BC34")]
	private void TestBlock2()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x145BDE4", Offset = "0x145BDE4", VA = "0x145BDE4")]
	private void TestBlock()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x145BF20", Offset = "0x145BF20", VA = "0x145BF20")]
	public TestAgentBlock()
	{
	}
}
[Token(Token = "0x2000013")]
public enum eAIState
{
	[Token(Token = "0x4000090")]
	Idle,
	[Token(Token = "0x4000091")]
	Patrol,
	[Token(Token = "0x4000092")]
	Squat,
	[Token(Token = "0x4000093")]
	Attack1,
	[Token(Token = "0x4000094")]
	Attack2,
	[Token(Token = "0x4000095")]
	WarningAwake,
	[Token(Token = "0x4000096")]
	Move,
	[Token(Token = "0x4000097")]
	Run,
	[Token(Token = "0x4000098")]
	Teleport
}
[Token(Token = "0x2000014")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFAF8", Offset = "0xFCFAF8")]
public class GetSpawnPointData : ActionTask
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> index;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<SpawnPointInfo> spawnPointInfo;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Transform> spawnPoint;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<MoveTargetType> moveType;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<Transform> targetRange;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> speed;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<float> highOfDistance;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BBParameter<eMonsterAttackType> attackType;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BBParameter<eMonsterAttackDirType> attackDirType;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x14EED40", Offset = "0x14EED40", VA = "0x14EED40", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x14EEF30", Offset = "0x14EEF30", VA = "0x14EEF30")]
	public GetSpawnPointData()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFB30", Offset = "0xFCFB30")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFB30", Offset = "0xFCFB30")]
public class LookAtPosition : ActionTask<Transform>
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isHorizontal;

	[Token(Token = "0x17000002")]
	protected override string info
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0x14AEBF0", Offset = "0x14AEBF0", VA = "0x14AEBF0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x14AEC44", Offset = "0x14AEC44", VA = "0x14AEC44", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x14AED1C", Offset = "0x14AED1C", VA = "0x14AED1C")]
	public LookAtPosition()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFB94", Offset = "0xFCFB94")]
public class ReturnBool : ActionTask
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<bool> retState;

	[Token(Token = "0x17000003")]
	protected override string info
	{
		[Token(Token = "0x6000044")]
		[Address(RVA = "0x1560E68", Offset = "0x1560E68", VA = "0x1560E68", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1560F00", Offset = "0x1560F00", VA = "0x1560F00", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1560F68", Offset = "0x1560F68", VA = "0x1560F68")]
	public ReturnBool()
	{
	}
}
[Token(Token = "0x2000017")]
public enum Direction
{
	[Token(Token = "0x40000A7")]
	Left,
	[Token(Token = "0x40000A8")]
	Right
}
[Token(Token = "0x2000018")]
public enum BornDirection
{
	[Token(Token = "0x40000AA")]
	Front,
	[Token(Token = "0x40000AB")]
	Left,
	[Token(Token = "0x40000AC")]
	Right,
	[Token(Token = "0x40000AD")]
	Top
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFBCC", Offset = "0xFCFBCC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFBCC", Offset = "0xFCFBCC")]
public class CheckDirection : ActionTask<Transform>
{
	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> refPos;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<BornDirection> direction;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x14456F4", Offset = "0x14456F4", VA = "0x14456F4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x14458C4", Offset = "0x14458C4", VA = "0x14458C4")]
	public CheckDirection()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFC30", Offset = "0xFCFC30")]
public class ComponentSwitch<T> : ActionTask<T> where T : Behaviour
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<bool> enable;

	[Token(Token = "0x17000004")]
	protected override string info
	{
		[Token(Token = "0x6000049")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004A")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600004B")]
	public ComponentSwitch()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFC68", Offset = "0xFCFC68")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFC68", Offset = "0xFCFC68")]
public class CreateList<T> : ActionTask
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<string> varName;

	[Token(Token = "0x17000005")]
	protected override string info
	{
		[Token(Token = "0x600004C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004D")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600004E")]
	public CreateList()
	{
	}
}
[Token(Token = "0x200001C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFCCC", Offset = "0xFCFCCC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFCCC", Offset = "0xFCFCCC")]
public class CreateVariable<T> : ActionTask
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<string> varName;

	[Token(Token = "0x17000006")]
	protected override string info
	{
		[Token(Token = "0x600004F")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000050")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000051")]
	public CreateVariable()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFD30", Offset = "0xFCFD30")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFD30", Offset = "0xFCFD30")]
public class ExtractGameObject : ActionTask
{
	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> tunit;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> resultObject;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x15E10E4", Offset = "0x15E10E4", VA = "0x15E10E4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x15E11E8", Offset = "0x15E11E8", VA = "0x15E11E8")]
	public ExtractGameObject()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFD94", Offset = "0xFCFD94")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFD94", Offset = "0xFCFD94")]
public class FindAttackPosWUnit : ActionTask<Transform>
{
	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> tunit;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> radius;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x15E9F48", Offset = "0x15E9F48", VA = "0x15E9F48", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x15EA1C4", Offset = "0x15EA1C4", VA = "0x15EA1C4")]
	public FindAttackPosWUnit()
	{
	}
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFDF8", Offset = "0xFCFDF8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFDF8", Offset = "0xFCFDF8")]
public class FindAttackPosTranform : ActionTask<Transform>
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> tunit;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> radius;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x15E9924", Offset = "0x15E9924", VA = "0x15E9924", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x15E9BD0", Offset = "0x15E9BD0", VA = "0x15E9BD0")]
	public FindAttackPosTranform()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFE5C", Offset = "0xFCFE5C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFE5C", Offset = "0xFCFE5C")]
public class FindAttackPosTranformH : ActionTask<Transform>
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> tunit;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> radius;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> high;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<bool> isRefPos;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<Vector3> refPos;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 offset;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x15E9C20", Offset = "0x15E9C20", VA = "0x15E9C20", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x15E9EF8", Offset = "0x15E9EF8", VA = "0x15E9EF8")]
	public FindAttackPosTranformH()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFEC0", Offset = "0xFCFEC0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFEC0", Offset = "0xFCFEC0")]
public class FindMinFloatIndex : ActionTask
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<float>> valueList;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<int> index;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x15EA214", Offset = "0x15EA214", VA = "0x15EA214", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x15EA3F4", Offset = "0x15EA3F4", VA = "0x15EA3F4")]
	public FindMinFloatIndex()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFF24", Offset = "0xFCFF24")]
public class FindNearPlayer : ActionTask<Transform>
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x15EAC60", Offset = "0x15EAC60", VA = "0x15EAC60", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x15EADE4", Offset = "0x15EADE4", VA = "0x15EADE4")]
	public FindNearPlayer()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFCFF5C", Offset = "0xFCFF5C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFF5C", Offset = "0xFCFF5C")]
public class FindPointInRect : ActionTask
{
	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> rect;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> euler;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Vector3> scale;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x15EB270", Offset = "0x15EB270", VA = "0x15EB270", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x15EB5C4", Offset = "0x15EB5C4", VA = "0x15EB5C4")]
	public static Vector3 FindPointInRectTransform(Transform transf)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x15EB748", Offset = "0x15EB748", VA = "0x15EB748")]
	public FindPointInRect()
	{
	}
}
[Token(Token = "0x2000024")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFFC0", Offset = "0xFCFFC0")]
public class FindRandomPlayer : ActionTask
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> saveAsTargetUnit;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x15EBD54", Offset = "0x15EBD54", VA = "0x15EBD54", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x15EBE94", Offset = "0x15EBE94", VA = "0x15EBE94")]
	public FindRandomPlayer()
	{
	}
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFCFFF8", Offset = "0xFCFFF8")]
public class FindRandomPointInLine : ActionTask<Transform>
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<GameObject> target;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> minDistance;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> maxDistance;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<Vector3> saveAsTargetPos;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x15EBE9C", Offset = "0x15EBE9C", VA = "0x15EBE9C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x15EC180", Offset = "0x15EC180", VA = "0x15EC180")]
	public FindRandomPointInLine()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0030", Offset = "0xFD0030")]
public class FindSpawnPoint : ActionTask<Transform>
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> spawnId;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Vector3> saveAsStrafePosition;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x15EC49C", Offset = "0x15EC49C", VA = "0x15EC49C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x15EC4D0", Offset = "0x15EC4D0", VA = "0x15EC4D0")]
	public FindSpawnPoint()
	{
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0068", Offset = "0xFD0068")]
public class GetChildTransform : ActionTask
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> rootTransform;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<List<Transform>> childContainer;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x14EDB00", Offset = "0x14EDB00", VA = "0x14EDB00", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x14EDC88", Offset = "0x14EDC88", VA = "0x14EDC88")]
	public GetChildTransform()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD00A0", Offset = "0xFD00A0")]
public class GetNearTransform : ActionTask<Transform>
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<Transform>> transforms;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Transform> result;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x14EE178", Offset = "0x14EE178", VA = "0x14EE178", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x14EE4A8", Offset = "0x14EE4A8", VA = "0x14EE4A8")]
	public GetNearTransform()
	{
	}
}
[Token(Token = "0x2000029")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD00D8", Offset = "0xFD00D8")]
public class RandomChildTransform : ActionTask
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> rootTransform;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Transform> result;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x155CBD4", Offset = "0x155CBD4", VA = "0x155CBD4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x155CD24", Offset = "0x155CD24", VA = "0x155CD24")]
	public RandomChildTransform()
	{
	}
}
[Token(Token = "0x200002A")]
public class JumpMoveData : MonoBehaviour
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMoving;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float currentTime;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GoSpline path;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x147BD40", Offset = "0x147BD40", VA = "0x147BD40")]
	public JumpMoveData()
	{
	}
}
[Token(Token = "0x200002B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0110", Offset = "0xFD0110")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0110", Offset = "0xFD0110")]
public class JumpPointStraight : ActionTask<Transform>
{
	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5794", Offset = "0xFD5794")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JumpPointStraight <>4__this;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float percent;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GoSpline path;

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x147C088", Offset = "0x147C088", VA = "0x147C088")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x147C4A0", Offset = "0x147C4A0", VA = "0x147C4A0")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> highOfDistance;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> high;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> speed;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> time;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Action updateAction;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x147BD48", Offset = "0x147BD48", VA = "0x147BD48", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x147C3E4", Offset = "0x147C3E4", VA = "0x147C3E4", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x147C3F8", Offset = "0x147C3F8", VA = "0x147C3F8", Slot = "14")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x147C090", Offset = "0x147C090", VA = "0x147C090")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x147C42C", Offset = "0x147C42C", VA = "0x147C42C")]
	public JumpPointStraight()
	{
	}
}
[Token(Token = "0x200002C")]
public enum e_type_jump_rotation
{
	[Token(Token = "0x40000E5")]
	None,
	[Token(Token = "0x40000E6")]
	LookAt,
	[Token(Token = "0x40000E7")]
	TwoPointDir,
	[Token(Token = "0x40000E8")]
	PointDirAndRotate
}
[Token(Token = "0x200002D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0174", Offset = "0xFD0174")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0174", Offset = "0xFD0174")]
public class JumpPointStraightOhter : ActionTask<Transform>
{
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD57A4", Offset = "0xFD57A4")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JumpPointStraightOhter <>4__this;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GoSpline path;

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x147CA1C", Offset = "0x147CA1C", VA = "0x147CA1C")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x147D5CC", Offset = "0x147D5CC", VA = "0x147D5CC")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD62C8", Offset = "0xFD62C8")]
	public BBParameter<float> targetPercent;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> highOfDistance;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> high;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> speed;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> time;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<float> curPercent;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public e_type_jump_rotation direction;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BBParameter<Vector3> lookAtPos;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD62E0", Offset = "0xFD62E0")]
	public BBParameter<float> exchangeRotio;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD62F8", Offset = "0xFD62F8")]
	public BBParameter<float> middleRatio;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BBParameter<AnimationCurve> exchangeCurve;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BBParameter<float> dirPointRatio;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BBParameter<bool> isRefParent;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Action updateAction;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 beginPos;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 prePoint;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 endDir;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float curRotateRatio;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x147C630", Offset = "0x147C630", VA = "0x147C630", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x147CF48", Offset = "0x147CF48", VA = "0x147CF48", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x147CF5C", Offset = "0x147CF5C", VA = "0x147CF5C", Slot = "14")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x147CA24", Offset = "0x147CA24", VA = "0x147CA24")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x147CD9C", Offset = "0x147CD9C", VA = "0x147CD9C")]
	private void InitDirection()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x147CF90", Offset = "0x147CF90", VA = "0x147CF90")]
	private void SetDirection()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x147D498", Offset = "0x147D498", VA = "0x147D498")]
	public JumpPointStraightOhter()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD01D8", Offset = "0xFD01D8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD01D8", Offset = "0xFD01D8")]
public class JumpPointStraightTime : ActionTask<Transform>
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> time;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x147DA10", Offset = "0x147DA10", VA = "0x147DA10", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x147DBA0", Offset = "0x147DBA0", VA = "0x147DBA0")]
	public JumpPointStraightTime()
	{
	}
}
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD023C", Offset = "0xFD023C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD023C", Offset = "0xFD023C")]
public class CheckNavmeshWalkPoint : ConditionTask
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> fromPoint;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> toPoint;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> radius;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> checkNavRadius;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD6310", Offset = "0xFD6310")]
	public BBParameter<int> checkMaxNum;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD6328", Offset = "0xFD6328")]
	public BBParameter<int> checkNum;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<float> randDis;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<Vector3> returnPos;

	[Token(Token = "0x17000007")]
	protected override string info
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x1447380", Offset = "0x1447380", VA = "0x1447380", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x14473C8", Offset = "0x14473C8", VA = "0x14473C8", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1447B1C", Offset = "0x1447B1C", VA = "0x1447B1C")]
	public CheckNavmeshWalkPoint()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD02A0", Offset = "0xFD02A0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD02A0", Offset = "0xFD02A0")]
public class Bullet1 : ActionTask<Transform>
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<bool> isChild;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<bool> isTarget;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<Transform> target;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[BlackboardOnly]
	public BBParameter<MonsterBullet> msBullet;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x164A480", Offset = "0x164A480", VA = "0x164A480", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x164AA2C", Offset = "0x164AA2C", VA = "0x164AA2C")]
	public Bullet1()
	{
	}
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0304", Offset = "0xFD0304")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0304", Offset = "0xFD0304")]
public class KillBullet : ActionTask
{
	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<MonsterBullet> bullet;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x147E2E8", Offset = "0x147E2E8", VA = "0x147E2E8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x147E360", Offset = "0x147E360", VA = "0x147E360")]
	public KillBullet()
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0368", Offset = "0xFD0368")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0368", Offset = "0xFD0368")]
public class BulletNOnTarget : ActionTask<Transform>
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> bulletNum;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<List<Transform>> targetList;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x164E588", Offset = "0x164E588", VA = "0x164E588", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x164E908", Offset = "0x164E908", VA = "0x164E908")]
	public BulletNOnTarget()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD03CC", Offset = "0xFD03CC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD03CC", Offset = "0xFD03CC")]
public class BulletN : ActionTask<Transform>
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> bulletNum;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> posDistance;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> radius;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x164DFAC", Offset = "0x164DFAC", VA = "0x164DFAC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x164E4F0", Offset = "0x164E4F0", VA = "0x164E4F0")]
	public BulletN()
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0430", Offset = "0xFD0430")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0430", Offset = "0xFD0430")]
public class MonsterAttack : ActionTask
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> damage;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x14B49B0", Offset = "0x14B49B0", VA = "0x14B49B0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x14B4BB0", Offset = "0x14B4BB0", VA = "0x14B4BB0")]
	public MonsterAttack()
	{
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0494", Offset = "0xFD0494")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0494", Offset = "0xFD0494")]
public class MonsterSuicide : ActionTask
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x14C0B1C", Offset = "0x14C0B1C", VA = "0x14C0B1C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x14C0BB8", Offset = "0x14C0BB8", VA = "0x14C0BB8")]
	public MonsterSuicide()
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD04F8", Offset = "0xFD04F8")]
public class MonsterAttackDelay : ActionTask<Animator>
{
	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD6350", Offset = "0xFD6350")]
	public BBParameter<float> timePercent;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<string> stateName;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> timeout;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<int> damage;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float attackTimePoint;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Action update;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x14B4BB8", Offset = "0x14B4BB8", VA = "0x14B4BB8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x14B4C30", Offset = "0x14B4C30", VA = "0x14B4C30", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x14B4C4C", Offset = "0x14B4C4C", VA = "0x14B4C4C")]
	public MonsterAttackDelay()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x14B4CC0", Offset = "0x14B4CC0", VA = "0x14B4CC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBD88", Offset = "0xFDBD88")]
	private void <OnExecute>b__8_0()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x14B4E58", Offset = "0x14B4E58", VA = "0x14B4E58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBD98", Offset = "0xFDBD98")]
	private void <OnExecute>b__8_1()
	{
	}
}
[Token(Token = "0x2000037")]
public class MonsterBulletManager
{
	[Serializable]
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD57B4", Offset = "0xFD57B4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Transform> <>9__2_0;

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x14B86D4", Offset = "0x14B86D4", VA = "0x14B86D4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x14B86DC", Offset = "0x14B86DC", VA = "0x14B86DC")]
		internal void <ClientMonsterFire>b__2_0(Transform child)
		{
		}
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x14B7BBC", Offset = "0x14B7BBC", VA = "0x14B7BBC")]
	public static void ServerMonsterFire(WUnit owner, Vector3 firePos, Quaternion fireRot, int bulletAssetID, WUnit target, Vector3 targetPos, int randomSeed)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x14B7CF8", Offset = "0x14B7CF8", VA = "0x14B7CF8")]
	public static void ServerMonsterFire(WUnit owner, Transform firePos, Vector3 firePosOffset, int bulletAssetID, WUnit target, Vector3 targetPos, Vector3 targetOffset)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x14B7F24", Offset = "0x14B7F24", VA = "0x14B7F24")]
	public static void ClientMonsterFire(int ownerID, Vector3 firePos, Quaternion fireRot, int bulletAssetID, int targetID, Vector3 targetPos, int randomSeed)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x14B8664", Offset = "0x14B8664", VA = "0x14B8664")]
	public MonsterBulletManager()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0530", Offset = "0xFD0530")]
public class SummonMonster : ActionTask
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> waveIndex;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x15CDC64", Offset = "0x15CDC64", VA = "0x15CDC64", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x15CDD40", Offset = "0x15CDD40", VA = "0x15CDD40")]
	public SummonMonster()
	{
	}
}
[Token(Token = "0x2000039")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0568", Offset = "0xFD0568")]
public class SummonMonsterWaveNum : ActionTask
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<int> result;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x15CDD48", Offset = "0x15CDD48", VA = "0x15CDD48", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x15CDD50", Offset = "0x15CDD50", VA = "0x15CDD50")]
	public SummonMonsterWaveNum()
	{
	}
}
[Token(Token = "0x200003A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD05A0", Offset = "0xFD05A0")]
public class SummonBulletMonster : ActionTask
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletModelID;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<WUnit> target;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool rightFire;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x15CD810", Offset = "0x15CD810", VA = "0x15CD810", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x15CD9FC", Offset = "0x15CD9FC", VA = "0x15CD9FC")]
	public SummonBulletMonster()
	{
	}
}
[Token(Token = "0x200003B")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD05D8", Offset = "0xFD05D8")]
public class SummonBulletMonsterN : ActionTask
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletModelID;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<List<Transform>> targets;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool rightFire;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x15CDA04", Offset = "0x15CDA04", VA = "0x15CDA04", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x15CDC5C", Offset = "0x15CDC5C", VA = "0x15CDC5C")]
	public SummonBulletMonsterN()
	{
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0610", Offset = "0xFD0610")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0610", Offset = "0xFD0610")]
public class SyncBullet : ActionTask
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<bool> isTarget;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<WUnit> target;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x15CE880", Offset = "0x15CE880", VA = "0x15CE880", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x15CEB60", Offset = "0x15CEB60", VA = "0x15CEB60")]
	public SyncBullet()
	{
	}
}
[Token(Token = "0x200003D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0674", Offset = "0xFD0674")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0674", Offset = "0xFD0674")]
public class SyncBulletN : ActionTask
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<List<Transform>> targetList;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x15CEB68", Offset = "0x15CEB68", VA = "0x15CEB68", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x15CED4C", Offset = "0x15CED4C", VA = "0x15CED4C")]
	public SyncBulletN()
	{
	}
}
[Token(Token = "0x200003E")]
internal struct ActionTaskDeltaTime
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float oldElapsedTime;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1110750", Offset = "0x1110750", VA = "0x1110750")]
	public void InitDeltaTime(float elapsedTime)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1110758", Offset = "0x1110758", VA = "0x1110758")]
	public float GetDeltaTime(float elapsedTime)
	{
		return default(float);
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD06D8", Offset = "0xFD06D8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD06D8", Offset = "0xFD06D8")]
public class MoveToPosition : ActionTask<Transform>
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> speed;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float moveTime;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float curTime;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 originPos;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float percent;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 targetPos;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float deltaTime;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float oldElapsedTime;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x149069C", Offset = "0x149069C", VA = "0x149069C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x149089C", Offset = "0x149089C", VA = "0x149089C", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1490A30", Offset = "0x1490A30", VA = "0x1490A30")]
	public MoveToPosition()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD073C", Offset = "0xFD073C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD073C", Offset = "0xFD073C")]
public class MoveToPositionTime : ActionTask<Transform>
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> moveTime;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1490CBC", Offset = "0x1490CBC", VA = "0x1490CBC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1490DF0", Offset = "0x1490DF0", VA = "0x1490DF0")]
	public MoveToPositionTime()
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD07A0", Offset = "0xFD07A0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD07A0", Offset = "0xFD07A0")]
public class MoveToPositionSpeed : ActionTask<Transform>
{
	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> baseSpeed;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> baseMoveTime;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> outputSpeed;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1490A80", Offset = "0x1490A80", VA = "0x1490A80", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1490C48", Offset = "0x1490C48", VA = "0x1490C48")]
	public MoveToPositionSpeed()
	{
	}
}
[Token(Token = "0x2000042")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0804", Offset = "0xFD0804")]
public class PlayAnimator : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> layerIndex;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD6378", Offset = "0xFD6378")]
	public BBParameter<string> stateName;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isUseTransitTime;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD6388", Offset = "0xFD6388")]
	public float transitTime;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool waitUntilFinish;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private AnimatorStateInfo stateInfo;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool played;

	[Token(Token = "0x17000008")]
	protected override string info
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x13A0DAC", Offset = "0x13A0DAC", VA = "0x13A0DAC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x13A0E28", Offset = "0x13A0E28", VA = "0x13A0E28", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x13A0FAC", Offset = "0x13A0FAC", VA = "0x13A0FAC", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x13A1108", Offset = "0x13A1108", VA = "0x13A1108")]
	public PlayAnimator()
	{
	}
}
[Token(Token = "0x2000043")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD083C", Offset = "0xFD083C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD083C", Offset = "0xFD083C")]
public class RemoveBBParam : ActionTask
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<string> varName;

	[Token(Token = "0x17000009")]
	protected override string info
	{
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x1560ACC", Offset = "0x1560ACC", VA = "0x1560ACC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1560B4C", Offset = "0x1560B4C", VA = "0x1560B4C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1560C38", Offset = "0x1560C38", VA = "0x1560C38")]
	public RemoveBBParam()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD08A0", Offset = "0xFD08A0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD08A0", Offset = "0xFD08A0")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD08A0", Offset = "0xFD08A0")]
public class ResetRagdoll : ActionTask<Transform>
{
	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1560D50", Offset = "0x1560D50", VA = "0x1560D50", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1560E18", Offset = "0x1560E18", VA = "0x1560E18")]
	public ResetRagdoll()
	{
	}
}
[Token(Token = "0x2000045")]
public enum ParticleOp
{
	[Token(Token = "0x4000164")]
	Play,
	[Token(Token = "0x4000165")]
	Stop,
	[Token(Token = "0x4000166")]
	Pause
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0928", Offset = "0xFD0928")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0928", Offset = "0xFD0928")]
public class RunParticles : ActionTask
{
	[Serializable]
	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD57C4", Offset = "0xFD57C4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Transform> <>9__2_0;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Transform> <>9__2_1;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Transform> <>9__2_2;

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x156C790", Offset = "0x156C790", VA = "0x156C790")]
		public <>c()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x156C798", Offset = "0x156C798", VA = "0x156C798")]
		internal void <OnExecute>b__2_0(Transform child)
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x156C844", Offset = "0x156C844", VA = "0x156C844")]
		internal void <OnExecute>b__2_1(Transform child)
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x156C8F0", Offset = "0x156C8F0", VA = "0x156C8F0")]
		internal void <OnExecute>b__2_2(Transform child)
		{
		}
	}

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> effectRoot;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<ParticleOp> operation;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x156C404", Offset = "0x156C404", VA = "0x156C404", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x156C720", Offset = "0x156C720", VA = "0x156C720")]
	public RunParticles()
	{
	}
}
[Token(Token = "0x2000047")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD098C", Offset = "0xFD098C")]
public class SetVector3Part : ActionTask
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> srcVec;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> valueVec;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool changeX;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool changeY;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool changeZ;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<Vector3> resultVec;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x140FEEC", Offset = "0x140FEEC", VA = "0x140FEEC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x140FFE0", Offset = "0x140FFE0", VA = "0x140FFE0")]
	public SetVector3Part()
	{
	}
}
[Token(Token = "0x2000048")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD09C4", Offset = "0xFD09C4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD09C4", Offset = "0xFD09C4")]
public class LookTarget_AimIK : ActionTask
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<string> aimAimation;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> r_aimSuccessTime;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x14AEF48", Offset = "0x14AEF48", VA = "0x14AEF48", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x14AF174", Offset = "0x14AF174", VA = "0x14AF174")]
	public LookTarget_AimIK()
	{
	}
}
[Token(Token = "0x2000049")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0A28", Offset = "0xFD0A28")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0A28", Offset = "0xFD0A28")]
public class UnlookTarget_AimIK : ActionTask
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x159740C", Offset = "0x159740C", VA = "0x159740C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x159755C", Offset = "0x159755C", VA = "0x159755C")]
	public UnlookTarget_AimIK()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0A8C", Offset = "0xFD0A8C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0A8C", Offset = "0xFD0A8C")]
public class UpdateTarget_AimIK : ActionTask
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x1597564", Offset = "0x1597564", VA = "0x1597564", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x15976CC", Offset = "0x15976CC", VA = "0x15976CC")]
	public UpdateTarget_AimIK()
	{
	}
}
[Token(Token = "0x200004B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0AF0", Offset = "0xFD0AF0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0AF0", Offset = "0xFD0AF0")]
public class BossMagicCircle : ActionTask
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<bool> isShow;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1642584", Offset = "0x1642584", VA = "0x1642584", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x164270C", Offset = "0x164270C", VA = "0x164270C")]
	public BossMagicCircle()
	{
	}
}
[Token(Token = "0x200004C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0B54", Offset = "0xFD0B54")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0B54", Offset = "0xFD0B54")]
public class FindNearGroupTargetUnit : ActionTask<Transform>
{
	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x15EA3FC", Offset = "0x15EA3FC", VA = "0x15EA3FC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x15EA744", Offset = "0x15EA744", VA = "0x15EA744")]
	public FindNearGroupTargetUnit()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0BB8", Offset = "0xFD0BB8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0BB8", Offset = "0xFD0BB8")]
public class FindNearGroupTargetUnitAndInRoom : ActionTask<Transform>
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x15EA794", Offset = "0x15EA794", VA = "0x15EA794", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x15EAA88", Offset = "0x15EAA88", VA = "0x15EAA88")]
	private WUnit FindClosestInRoomTarget(List<WUnit>.Enumerator enumerator, WUnit attacker)
	{
		return null;
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x15EAC10", Offset = "0x15EAC10", VA = "0x15EAC10")]
	public FindNearGroupTargetUnitAndInRoom()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0C1C", Offset = "0xFD0C1C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0C1C", Offset = "0xFD0C1C")]
public class FindRandomGroupTargetUnit : ActionTask<Transform>
{
	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<e_type_role> targetRoleType;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x15EB750", Offset = "0x15EB750", VA = "0x15EB750", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x15EBB20", Offset = "0x15EBB20", VA = "0x15EBB20")]
	public FindRandomGroupTargetUnit()
	{
	}
}
[Token(Token = "0x200004F")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0C80", Offset = "0xFD0C80")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0C80", Offset = "0xFD0C80")]
public class FindRandomHostileGroup : ActionTask<Transform>
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<e_group_type> hostileGroup;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x15EBB94", Offset = "0x15EBB94", VA = "0x15EBB94", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x15EBD04", Offset = "0x15EBD04", VA = "0x15EBD04")]
	public FindRandomHostileGroup()
	{
	}
}
[Token(Token = "0x2000050")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0CE4", Offset = "0xFD0CE4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0CE4", Offset = "0xFD0CE4")]
public class FindSoldierMovePoint : ActionTask<Transform>
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Transform> r_moveTarget;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x15EC1D0", Offset = "0x15EC1D0", VA = "0x15EC1D0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x15EC2AC", Offset = "0x15EC2AC", VA = "0x15EC2AC")]
	public FindSoldierMovePoint()
	{
	}
}
[Token(Token = "0x2000051")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0D48", Offset = "0xFD0D48")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0D48", Offset = "0xFD0D48")]
public class FindSoldierPathHostileUnit : ActionTask<Transform>
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<e_group_type> hostileUnit;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<WUnit> r_targetUnit;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<GameObject> r_targetObj;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x15EC2FC", Offset = "0x15EC2FC", VA = "0x15EC2FC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x15EC44C", Offset = "0x15EC44C", VA = "0x15EC44C")]
	public FindSoldierPathHostileUnit()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0DAC", Offset = "0xFD0DAC")]
public class GetPointInRange : ActionTask
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> forwardValue;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> rightValue;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> upValue;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<Vector3> resultPos;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x14EE4F8", Offset = "0x14EE4F8", VA = "0x14EE4F8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x14EE74C", Offset = "0x14EE74C", VA = "0x14EE74C")]
	public GetPointInRange()
	{
	}
}
[Token(Token = "0x2000053")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0DE4", Offset = "0xFD0DE4")]
public class GetRandomPointInTra : ActionTask
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> sourceTra;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> saveasPos;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x14EEC44", Offset = "0x14EEC44", VA = "0x14EEC44", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x14EED38", Offset = "0x14EED38", VA = "0x14EED38")]
	public GetRandomPointInTra()
	{
	}
}
[Token(Token = "0x2000054")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0E1C", Offset = "0xFD0E1C")]
public class GetPointInRangeVec : ActionTask
{
	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> offsetVec;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> resultPos;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x14EE754", Offset = "0x14EE754", VA = "0x14EE754", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x14EE9A8", Offset = "0x14EE9A8", VA = "0x14EE9A8")]
	public GetPointInRangeVec()
	{
	}
}
[Token(Token = "0x2000055")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0E54", Offset = "0xFD0E54")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0E54", Offset = "0xFD0E54")]
public class GetUnitByHurtDefine : ActionTask<Transform>
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> unitObj;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x14EEF38", Offset = "0x14EEF38", VA = "0x14EEF38", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x14EF0D4", Offset = "0x14EF0D4", VA = "0x14EF0D4")]
	public GetUnitByHurtDefine()
	{
	}
}
[Token(Token = "0x2000056")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0EB8", Offset = "0xFD0EB8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0EB8", Offset = "0xFD0EB8")]
public class LookAimTarget : ActionTask
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> aimTarget;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> minHeight;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> maxHeight;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> minWidth;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> maxWidth;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x14AE92C", Offset = "0x14AE92C", VA = "0x14AE92C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x14AEBE8", Offset = "0x14AEBE8", VA = "0x14AEBE8")]
	public LookAimTarget()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0F1C", Offset = "0xFD0F1C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0F1C", Offset = "0xFD0F1C")]
public class LookTarget_Aim : ActionTask
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x14AED6C", Offset = "0x14AED6C", VA = "0x14AED6C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x14AEF40", Offset = "0x14AEF40", VA = "0x14AEF40")]
	public LookTarget_Aim()
	{
	}
}
[Token(Token = "0x2000058")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0F80", Offset = "0xFD0F80")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0F80", Offset = "0xFD0F80")]
public class LookTarget_Rot : ActionTask
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> firePoint;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Quaternion> forwardRot;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x14AF17C", Offset = "0x14AF17C", VA = "0x14AF17C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x14AF2C0", Offset = "0x14AF2C0", VA = "0x14AF2C0")]
	public LookTarget_Rot()
	{
	}
}
[Token(Token = "0x2000059")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD0FE4", Offset = "0xFD0FE4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD0FE4", Offset = "0xFD0FE4")]
public class LookTarget_Skill_Rot : ActionTask
{
	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<e_Skill_State_Type> skillState;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Quaternion> forwardRot;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x14AF2C8", Offset = "0x14AF2C8", VA = "0x14AF2C8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x14AF5B4", Offset = "0x14AF5B4", VA = "0x14AF5B4")]
	public LookTarget_Skill_Rot()
	{
	}
}
[Token(Token = "0x200005A")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD1048", Offset = "0xFD1048")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1048", Offset = "0xFD1048")]
public class MonsterChangeSkill : ActionTask
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<e_Skill_State_Type> skillState;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> pos;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Quaternion> rot;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<Vector3> TargetPos;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<GameObject> TargetObj;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x14B9074", Offset = "0x14B9074", VA = "0x14B9074", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x14B9250", Offset = "0x14B9250", VA = "0x14B9250")]
	public MonsterChangeSkill()
	{
	}
}
[Token(Token = "0x200005B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD10AC", Offset = "0xFD10AC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD10AC", Offset = "0xFD10AC")]
public class MonsterCleanBeHit : ActionTask
{
	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x14B9258", Offset = "0x14B9258", VA = "0x14B9258", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x14B93AC", Offset = "0x14B93AC", VA = "0x14B93AC")]
	public MonsterCleanBeHit()
	{
	}
}
[Token(Token = "0x200005C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD1110", Offset = "0xFD1110")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1110", Offset = "0xFD1110")]
public class MonsterCreateSkill : ActionTask
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x14B93B4", Offset = "0x14B93B4", VA = "0x14B93B4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x14B948C", Offset = "0x14B948C", VA = "0x14B948C")]
	public MonsterCreateSkill()
	{
	}
}
[Token(Token = "0x200005D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD1174", Offset = "0xFD1174")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1174", Offset = "0xFD1174")]
public class MonsterReBirth : ActionTask
{
	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x14BB23C", Offset = "0x14BB23C", VA = "0x14BB23C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x14BB3AC", Offset = "0x14BB3AC", VA = "0x14BB3AC")]
	public MonsterReBirth()
	{
	}
}
[Token(Token = "0x200005E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD11D8", Offset = "0xFD11D8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD11D8", Offset = "0xFD11D8")]
public class MonsterStopSkill : ActionTask
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x14C0A40", Offset = "0x14C0A40", VA = "0x14C0A40", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x14C0B14", Offset = "0x14C0B14", VA = "0x14C0B14")]
	public MonsterStopSkill()
	{
	}
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD123C", Offset = "0xFD123C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD123C", Offset = "0xFD123C")]
public class MonsterTransfer : ActionTask
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> tran;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> pos;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Quaternion> rot;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<bool> isAppear;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x14C0BC0", Offset = "0x14C0BC0", VA = "0x14C0BC0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x14C0F60", Offset = "0x14C0F60", VA = "0x14C0F60")]
	public MonsterTransfer()
	{
	}
}
[Token(Token = "0x2000060")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD12A0", Offset = "0xFD12A0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD12A0", Offset = "0xFD12A0")]
public class NPCFire : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> duration;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timer;

	[Token(Token = "0x1700000A")]
	protected override string info
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x149202C", Offset = "0x149202C", VA = "0x149202C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x14921E8", Offset = "0x14921E8", VA = "0x14921E8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1492290", Offset = "0x1492290", VA = "0x1492290", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x14923B4", Offset = "0x14923B4", VA = "0x14923B4")]
	public NPCFire()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD1304", Offset = "0xFD1304")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1304", Offset = "0xFD1304")]
public class NPCFireCeaselessly : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1492404", Offset = "0x1492404", VA = "0x1492404", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1492474", Offset = "0x1492474", VA = "0x1492474")]
	public NPCFireCeaselessly()
	{
	}
}
[Token(Token = "0x2000062")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD1368", Offset = "0xFD1368")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1368", Offset = "0xFD1368")]
public class NPCFireStop : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1492584", Offset = "0x1492584", VA = "0x1492584", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x14925F4", Offset = "0x14925F4", VA = "0x14925F4")]
	public NPCFireStop()
	{
	}
}
[Token(Token = "0x2000063")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD13CC", Offset = "0xFD13CC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD13CC", Offset = "0xFD13CC")]
public class NPCFireNow : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x14924C4", Offset = "0x14924C4", VA = "0x14924C4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1492534", Offset = "0x1492534", VA = "0x1492534")]
	public NPCFireNow()
	{
	}
}
[Token(Token = "0x2000064")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD1430", Offset = "0xFD1430")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1430", Offset = "0xFD1430")]
public class UnityPause : ActionTask
{
	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1597394", Offset = "0x1597394", VA = "0x1597394", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1597404", Offset = "0x1597404", VA = "0x1597404")]
	public UnityPause()
	{
	}
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD1494", Offset = "0xFD1494")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1494", Offset = "0xFD1494")]
public class NavMeshPriorityDistribution : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<int> minPriority;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<int> maxPriority;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1497D6C", Offset = "0x1497D6C", VA = "0x1497D6C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1497EBC", Offset = "0x1497EBC", VA = "0x1497EBC")]
	public NavMeshPriorityDistribution()
	{
	}
}
[Token(Token = "0x2000066")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD14F8", Offset = "0xFD14F8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD14F8", Offset = "0xFD14F8")]
public class RandomSolidierTargetPoint : ActionTask
{
	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> rTargetPoint;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x155D140", Offset = "0x155D140", VA = "0x155D140", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x155D2D0", Offset = "0x155D2D0", VA = "0x155D2D0")]
	public RandomSolidierTargetPoint()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD155C", Offset = "0xFD155C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD155C", Offset = "0xFD155C")]
public class UnLookAimTarget : ActionTask
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x14688D4", Offset = "0x14688D4", VA = "0x14688D4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1468A24", Offset = "0x1468A24", VA = "0x1468A24")]
	public UnLookAimTarget()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD15C0", Offset = "0xFD15C0")]
public class SurroundToTarget : ActionTask<Transform>
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<Vector3> saveAsSuroundPosition;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x15CE4C8", Offset = "0x15CE4C8", VA = "0x15CE4C8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x15CE828", Offset = "0x15CE828", VA = "0x15CE828")]
	public SurroundToTarget()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD15F8", Offset = "0xFD15F8")]
public class CheckAIBlock : ConditionTask<NavMeshAgent>
{
	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x144569C", Offset = "0x144569C", VA = "0x144569C", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x14456A4", Offset = "0x14456A4", VA = "0x14456A4")]
	public CheckAIBlock()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1630", Offset = "0xFD1630")]
public class CheckMonsterCurHP : ConditionTask
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CompareMethod checkType;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> targetValuePer;

	[Token(Token = "0x1700000B")]
	protected override string info
	{
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x1446D18", Offset = "0x1446D18", VA = "0x1446D18", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1446ED8", Offset = "0x1446ED8", VA = "0x1446ED8", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1446FE8", Offset = "0x1446FE8", VA = "0x1446FE8")]
	public CheckMonsterCurHP()
	{
	}
}
[Token(Token = "0x200006B")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1668", Offset = "0xFD1668")]
public class CheckMonsterStrategyCount : ConditionTask
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<e_type_monster> monsterType;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<string> BBVarName;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> BBVarValue;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> targetValue;

	[Token(Token = "0x1700000C")]
	protected override string info
	{
		[Token(Token = "0x6000100")]
		[Address(RVA = "0x1446FF0", Offset = "0x1446FF0", VA = "0x1446FF0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1447224", Offset = "0x1447224", VA = "0x1447224", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1447378", Offset = "0x1447378", VA = "0x1447378")]
	public CheckMonsterStrategyCount()
	{
	}
}
[Token(Token = "0x200006C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD16A0", Offset = "0xFD16A0")]
public class CheckPointInCubic : ConditionTask
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> point;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> cubicTransform;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1447C18", Offset = "0x1447C18", VA = "0x1447C18", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1447E70", Offset = "0x1447E70", VA = "0x1447E70")]
	public CheckPointInCubic()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD16D8", Offset = "0xFD16D8")]
public class CheckSoldierIsCanMove : ConditionTask
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x1700000D")]
	protected override string info
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x1447E78", Offset = "0x1447E78", VA = "0x1447E78", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1447ED8", Offset = "0x1447ED8", VA = "0x1447ED8", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1447F7C", Offset = "0x1447F7C", VA = "0x1447F7C")]
	public CheckSoldierIsCanMove()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1710", Offset = "0xFD1710")]
public class CheckSoldierSuppressStatus : ConditionTask
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x1700000E")]
	protected override string info
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x1447F84", Offset = "0x1447F84", VA = "0x1447F84", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1447FE4", Offset = "0x1447FE4", VA = "0x1447FE4", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1448088", Offset = "0x1448088", VA = "0x1448088")]
	public CheckSoldierSuppressStatus()
	{
	}
}
[Token(Token = "0x200006F")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1748", Offset = "0xFD1748")]
public class CheckTest : ConditionTask
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public new BBParameter<string> name;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1448090", Offset = "0x1448090", VA = "0x1448090", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1448098", Offset = "0x1448098", VA = "0x1448098")]
	public CheckTest()
	{
	}
}
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1780", Offset = "0xFD1780")]
public class CheckUnitHP : ConditionTask
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CompareMethod checkType;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD65E0", Offset = "0xFD65E0")]
	public BBParameter<float> percent;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD65F8", Offset = "0xFD65F8")]
	public float differenceThreshold;

	[Token(Token = "0x1700000F")]
	protected override string info
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x14480A0", Offset = "0x14480A0", VA = "0x14480A0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1448108", Offset = "0x1448108", VA = "0x1448108", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1448214", Offset = "0x1448214", VA = "0x1448214")]
	public CheckUnitHP()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD17B8", Offset = "0xFD17B8")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD17B8", Offset = "0xFD17B8")]
public class CheckUnitHPValue : ConditionTask
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CompareMethod checkType;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> targetHPValue;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1448228", Offset = "0x1448228", VA = "0x1448228", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x14482E8", Offset = "0x14482E8", VA = "0x14482E8")]
	public CheckUnitHPValue()
	{
	}
}
[Token(Token = "0x2000072")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD181C", Offset = "0xFD181C")]
public class CheckUnitNull : ConditionTask
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x17000010")]
	protected override string info
	{
		[Token(Token = "0x6000112")]
		[Address(RVA = "0x14482F0", Offset = "0x14482F0", VA = "0x14482F0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1448350", Offset = "0x1448350", VA = "0x1448350", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x14483B4", Offset = "0x14483B4", VA = "0x14483B4")]
	public CheckUnitNull()
	{
	}
}
[Token(Token = "0x2000073")]
public interface IEnvAudio
{
	[Token(Token = "0x6000115")]
	void PlayAudio();

	[Token(Token = "0x6000116")]
	void StopAudio();
}
[Token(Token = "0x2000074")]
public class EnvAudio : MonoBehaviour, IEnvAudio
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioEvent envAudioEvent;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool isUseObstruction;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WwiseDefine audioObj;

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x13E4648", Offset = "0x13E4648", VA = "0x13E4648")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x13E46C8", Offset = "0x13E46C8", VA = "0x13E46C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x13E464C", Offset = "0x13E464C", VA = "0x13E464C")]
	private void Init()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x13E46CC", Offset = "0x13E46CC", VA = "0x13E46CC")]
	private void UnInit()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x13E494C", Offset = "0x13E494C", VA = "0x13E494C", Slot = "4")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x13E4A10", Offset = "0x13E4A10", VA = "0x13E4A10", Slot = "5")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x13E4AA4", Offset = "0x13E4AA4", VA = "0x13E4AA4")]
	public EnvAudio()
	{
	}
}
[Token(Token = "0x2000075")]
public class EnvAudioManager : Singleton<EnvAudioManager>
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HashSet<IEnvAudio> gearList;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6634", Offset = "0xFD6634")]
	private bool <isStart>k__BackingField;

	[Token(Token = "0x17000011")]
	public bool isStart
	{
		[Token(Token = "0x600011E")]
		[Address(RVA = "0x13E4AAC", Offset = "0x13E4AAC", VA = "0x13E4AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBDA8", Offset = "0xFDBDA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600011F")]
		[Address(RVA = "0x13E4AB4", Offset = "0x13E4AB4", VA = "0x13E4AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBDB8", Offset = "0xFDBDB8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x13E4748", Offset = "0x13E4748", VA = "0x13E4748")]
	public void RegisterEnvAudio(IEnvAudio audio)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x13E4854", Offset = "0x13E4854", VA = "0x13E4854")]
	public void UnRegisterEnvAudio(IEnvAudio audio)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x13E4AC0", Offset = "0x13E4AC0", VA = "0x13E4AC0")]
	public void SetAllReset()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x13E4C30", Offset = "0x13E4C30", VA = "0x13E4C30")]
	public void SetAllStart()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x13E4DA0", Offset = "0x13E4DA0", VA = "0x13E4DA0")]
	public EnvAudioManager()
	{
	}
}
[Token(Token = "0x2000076")]
public class RoomEnvAudios : MonoBehaviour, IEnvAudio
{
	[Serializable]
	[Token(Token = "0x200046D")]
	public class RoomEnvAudioCell
	{
		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int roomId;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioEvent audioEvent;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioEvent bgmEvent;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AudioEvent audioStopEvent;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RTPCEvent rtpcEvent;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rtpcValue;

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x15658B0", Offset = "0x15658B0", VA = "0x15658B0")]
		public RoomEnvAudioCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200046E")]
	public class InstanceRoomEnvAudioCell
	{
		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int instanceId;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AudioEvent bgmEvent;

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x15658A0", Offset = "0x15658A0", VA = "0x15658A0")]
		public InstanceRoomEnvAudioCell()
		{
		}
	}

	[Token(Token = "0x200046F")]
	public enum RoomEnvType
	{
		[Token(Token = "0x4001AB8")]
		None,
		[Token(Token = "0x4001AB9")]
		Type_1,
		[Token(Token = "0x4001ABA")]
		Type_2,
		[Token(Token = "0x4001ABB")]
		Type_3
	}

	[Token(Token = "0x2000470")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD57D4", Offset = "0xFD57D4")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GuidTipUI tip;

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x156519C", Offset = "0x156519C", VA = "0x156519C")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x15657B4", Offset = "0x15657B4", VA = "0x15657B4")]
		internal void <ShowUI>b__1()
		{
		}
	}

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RoomEnvAudioCell[] roomEnvAudioCells;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InstanceRoomEnvAudioCell[] instanceRoomEnvAudioCells;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int defaultRoomId;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WwiseDefine envObj;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WwiseDefine bgmObj;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RoomEnvAudioCell curCell;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RoomEnvType curType;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int curTypeRoomId;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6664", Offset = "0xFD6664")]
	private static RoomEnvAudios <Instance>k__BackingField;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine guidTipUICoroutine;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> uiRoomIds;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float uiDelay;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isInitUIRoomId;

	[Token(Token = "0x17000012")]
	public static RoomEnvAudios Instance
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x1564214", Offset = "0x1564214", VA = "0x1564214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBDC8", Offset = "0xFDBDC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x1564264", Offset = "0x1564264", VA = "0x1564264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBDD8", Offset = "0xFDBDD8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x15642BC", Offset = "0x15642BC", VA = "0x15642BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1564314", Offset = "0x1564314", VA = "0x1564314")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x15645A4", Offset = "0x15645A4", VA = "0x15645A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x15649D4", Offset = "0x15649D4", VA = "0x15649D4")]
	private void OnEnterRoom(FlowNode fNod, bool isOk)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1564BB0", Offset = "0x1564BB0", VA = "0x1564BB0")]
	private void DoEnterRoom(int roomId)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x156482C", Offset = "0x156482C", VA = "0x156482C")]
	public void CloseUI()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1564D54", Offset = "0x1564D54", VA = "0x1564D54")]
	public void ShowUI(int roomId)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x15651A4", Offset = "0x15651A4", VA = "0x15651A4")]
	private void OnSwitchFightState(int i)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x15651A8", Offset = "0x15651A8", VA = "0x15651A8")]
	private void OnRoomPass(int roomId)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1564BE4", Offset = "0x1564BE4", VA = "0x1564BE4")]
	public void DOEnvAudio(int roomId)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x15644B0", Offset = "0x15644B0", VA = "0x15644B0")]
	public void SwitchBGM(RoomEnvType roomEnvType, bool isSkip = false)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x15653F4", Offset = "0x15653F4", VA = "0x15653F4")]
	public void PlayBGM()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1564A5C", Offset = "0x1564A5C", VA = "0x1564A5C")]
	public void PlayInstanceBGM(int insId)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x156554C", Offset = "0x156554C", VA = "0x156554C")]
	private InstanceRoomEnvAudioCell GetInstanceEnvAudioCell(int insId)
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x15655B4", Offset = "0x15655B4", VA = "0x15655B4")]
	public void StopBGM()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1565284", Offset = "0x1565284", VA = "0x1565284")]
	public void PlayEnvAudio()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x15651AC", Offset = "0x15651AC", VA = "0x15651AC")]
	public void StopEnvAudio()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x156568C", Offset = "0x156568C", VA = "0x156568C", Slot = "4")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1564748", Offset = "0x1564748", VA = "0x1564748", Slot = "5")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x15656C0", Offset = "0x15656C0", VA = "0x15656C0")]
	public RoomEnvAudios()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x156574C", Offset = "0x156574C", VA = "0x156574C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBDE8", Offset = "0xFDBDE8")]
	private void <ShowUI>b__25_0(int id, int room)
	{
	}
}
[Token(Token = "0x2000077")]
public class SafeRoomEnvAudios : EnvAudio
{
	[Token(Token = "0x600013C")]
	[Address(RVA = "0x13FFA58", Offset = "0x13FFA58", VA = "0x13FFA58")]
	private void Start()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x13FFA60", Offset = "0x13FFA60", VA = "0x13FFA60")]
	private void Destroy()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x13FFA64", Offset = "0x13FFA64", VA = "0x13FFA64")]
	public SafeRoomEnvAudios()
	{
	}
}
[Token(Token = "0x2000078")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD1854", Offset = "0xFD1854")]
public class BHapticsDivecesController : MonoBehaviour
{
	[Token(Token = "0x2000471")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD57E4", Offset = "0xFD57E4")]
	private sealed class <StartUI>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BHapticsDivecesController <>4__this;

		[Token(Token = "0x170003B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002475")]
			[Address(RVA = "0x1613F78", Offset = "0x1613F78", VA = "0x1613F78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002477")]
			[Address(RVA = "0x1613FE0", Offset = "0x1613FE0", VA = "0x1613FE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x1613660", Offset = "0x1613660", VA = "0x1613660")]
		[DebuggerHidden]
		public <StartUI>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x1613E34", Offset = "0x1613E34", VA = "0x1613E34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x1613E38", Offset = "0x1613E38", VA = "0x1613E38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x1613F80", Offset = "0x1613F80", VA = "0x1613F80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UI_Manager ui_Manager;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UI_Initialize ui_Initialize;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isActive;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6674", Offset = "0xFD6674")]
	private static BHapticsDivecesController <Instance>k__BackingField;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Button button;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float nextClickTime;

	[Token(Token = "0x17000013")]
	public static BHapticsDivecesController Instance
	{
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x161331C", Offset = "0x161331C", VA = "0x161331C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBDF8", Offset = "0xFDBDF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000140")]
		[Address(RVA = "0x161336C", Offset = "0x161336C", VA = "0x161336C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBE08", Offset = "0xFDBE08")]
		private set
		{
		}
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x16133C4", Offset = "0x16133C4", VA = "0x16133C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x161341C", Offset = "0x161341C", VA = "0x161341C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x16135E4", Offset = "0x16135E4", VA = "0x16135E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDBE18", Offset = "0xFDBE18")]
	private IEnumerator StartUI()
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x161368C", Offset = "0x161368C", VA = "0x161368C")]
	public void SetUIState()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1613728", Offset = "0x1613728", VA = "0x1613728")]
	private void SetUIState(bool state)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1613790", Offset = "0x1613790", VA = "0x1613790")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1613794", Offset = "0x1613794", VA = "0x1613794")]
	private void InputWidgetControl()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1613E2C", Offset = "0x1613E2C", VA = "0x1613E2C")]
	public BHapticsDivecesController()
	{
	}
}
[Token(Token = "0x2000079")]
public class CameraMoveEffect : MonoBehaviour
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material m_MoveMaterial;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mUseMoveMaterial;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1440E78", Offset = "0x1440E78", VA = "0x1440E78")]
	public void MoveEffectFadeOutIn(bool isShow, float size, float opacity)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1440F98", Offset = "0x1440F98", VA = "0x1440F98")]
	public void SetAdaptRate(Vector4 vect4)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1441070", Offset = "0x1441070", VA = "0x1441070")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1441160", Offset = "0x1441160", VA = "0x1441160")]
	public CameraMoveEffect()
	{
	}
}
[Token(Token = "0x200007A")]
public enum eCameraMoveEffectSettingType
{
	[Token(Token = "0x40001EF")]
	FixPoint,
	[Token(Token = "0x40001F0")]
	CamBackPointByHeightAndDis,
	[Token(Token = "0x40001F1")]
	CamBackPointByAngleAndDis
}
[Token(Token = "0x200007B")]
public class SyncTwoPointTransform
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform FromTran;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform ToTran;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 Offset;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool IsStart;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool mIsSynPosition;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool mIsSynRotation;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x15CED54", Offset = "0x15CED54", VA = "0x15CED54")]
	public void Start(Transform fromTrn, Transform toTrn, bool synPos, bool synRot, [Optional] Vector3 Offset)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x15CEDD8", Offset = "0x15CEDD8", VA = "0x15CEDD8")]
	public void Restart()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x15CEDE4", Offset = "0x15CEDE4", VA = "0x15CEDE4")]
	public void Excude()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x15CEF7C", Offset = "0x15CEF7C", VA = "0x15CEF7C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x15CEF84", Offset = "0x15CEF84", VA = "0x15CEF84")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x15CEFBC", Offset = "0x15CEFBC", VA = "0x15CEFBC")]
	public SyncTwoPointTransform()
	{
	}
}
[Token(Token = "0x200007C")]
public class CameraMoveEffectManager : Singleton<CameraMoveEffectManager>
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, TransferMovieShot> MoveDic;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TransferMovieShot CurTrnMovieShot;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CameraMoveEffect mCameraMoveEffect;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mIsRunning;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject mTmpMoveToObj;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject mMoveToObj;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject mBackObj;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mBeginFade;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action mStartAct;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<float> mExcudeAct;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action mMoveToFinishAct;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action mFinishAct;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SyncTwoPointTransform mSynTran;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool ShowFade;

	[Token(Token = "0x17000014")]
	public bool IsRunning
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0x1442474", Offset = "0x1442474", VA = "0x1442474")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1441168", Offset = "0x1441168", VA = "0x1441168")]
	public void Init()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x14412B8", Offset = "0x14412B8", VA = "0x14412B8")]
	public void Move(eCameraMoveEffectSettingType type, string moveName, [Optional] Vector2 setVec, bool needAutoMoveBack = false, float waitTime = 0f)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1441F88", Offset = "0x1441F88", VA = "0x1441F88")]
	public void MoveBack()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1442024", Offset = "0x1442024", VA = "0x1442024")]
	public void MoveBack(Vector3 backPos, Quaternion backRot)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x14421BC", Offset = "0x14421BC", VA = "0x14421BC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1441710", Offset = "0x1441710", VA = "0x1441710")]
	private void DoStop()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x14423BC", Offset = "0x14423BC", VA = "0x14423BC")]
	public void Update()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x144247C", Offset = "0x144247C", VA = "0x144247C")]
	public void UnInit()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1442480", Offset = "0x1442480", VA = "0x1442480")]
	public void AddMSPoint(string key, TransferMovieShot point)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x14425A8", Offset = "0x14425A8", VA = "0x14425A8")]
	public void DelMSPoint(TransferMovieShot point)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1441C84", Offset = "0x1441C84", VA = "0x1441C84")]
	private void DoRun(GameObject affectObj, bool needMoveBack, float waitTime)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x14427F4", Offset = "0x14427F4", VA = "0x14427F4")]
	private void SetFollowPoint(GameObject affectObj)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1442914", Offset = "0x1442914", VA = "0x1442914")]
	private void DoMoveStartAction()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1442A74", Offset = "0x1442A74", VA = "0x1442A74")]
	private void DoMoveExcudeAction(float r)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1442B4C", Offset = "0x1442B4C", VA = "0x1442B4C")]
	private void DoMoveToFinishAction()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1442BD8", Offset = "0x1442BD8", VA = "0x1442BD8")]
	private void DoMoveStopAction()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x14421F4", Offset = "0x14421F4", VA = "0x14421F4")]
	private void RevertStatus()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x14429B4", Offset = "0x14429B4", VA = "0x14429B4")]
	private void SetMoveEffectFade(bool isShow, float size, float opacity)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x14417B4", Offset = "0x14417B4", VA = "0x14417B4")]
	private GameObject GetMoveToObj()
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1442740", Offset = "0x1442740", VA = "0x1442740")]
	private GameObject GetBackObj()
	{
		return null;
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1441868", Offset = "0x1441868", VA = "0x1441868")]
	private void SetCamBackPos(eCameraMoveEffectSettingType type, Vector2 setVec, GameObject target, GameObject effectObj)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1442144", Offset = "0x1442144", VA = "0x1442144")]
	public bool IsVRInput()
	{
		return default(bool);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1442C70", Offset = "0x1442C70", VA = "0x1442C70")]
	public GameObject GetAffectCameraObj()
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x144157C", Offset = "0x144157C", VA = "0x144157C")]
	public GameObject GetMoveAffectObj()
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1442DE4", Offset = "0x1442DE4", VA = "0x1442DE4")]
	public CameraMoveEffectManager()
	{
	}
}
[Token(Token = "0x200007D")]
public class CameraMoveTest : MonoBehaviour
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MoveName;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eCameraMoveEffectSettingType UseType;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool NeedMoveBack;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WaitTime;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Height;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DisH;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Angle;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DisA;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1442EA4", Offset = "0x1442EA4", VA = "0x1442EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1442F18", Offset = "0x1442F18", VA = "0x1442F18")]
	private void Update()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1442F1C", Offset = "0x1442F1C", VA = "0x1442F1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1442F20", Offset = "0x1442F20", VA = "0x1442F20")]
	public CameraMoveTest()
	{
	}
}
[Token(Token = "0x200007E")]
public class TransferMovieShot : MonoBehaviour
{
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MovieShotName;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseObjRotation;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve InCurve;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve OutCurve;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FadeCurve;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve OutFadeCurve;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject MoveToObj;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject AffectObj;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject BackObj;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool mNeedMoveBack;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float WaitTime;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action DoStartAction;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action<float> DoExcudeAction;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action DoMoveToFinishAction;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Action DoStopAction;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool mIsStart;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool mIsMoveFinish;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool mIsMoveBack;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion mSourceRotation;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 mSourcePosition;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float mAddDelate;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool mIsFixRotation;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float fixAngle;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x146358C", Offset = "0x146358C", VA = "0x146358C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1463610", Offset = "0x1463610", VA = "0x1463610")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1463690", Offset = "0x1463690", VA = "0x1463690")]
	public void SetMoveObj(GameObject moveToObj, GameObject affectObj, GameObject backObj)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x14636E0", Offset = "0x14636E0", VA = "0x14636E0")]
	public void SetInfo(bool needMoveBack, float waitTime)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x146370C", Offset = "0x146370C", VA = "0x146370C")]
	public void SetCallBack(Action startAction, Action<float> excudeAction, Action moveToFinishAction, Action stopAction)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1463770", Offset = "0x1463770", VA = "0x1463770")]
	private void ReSet()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x146378C", Offset = "0x146378C", VA = "0x146378C")]
	public void DoStart(bool isImmediately = false)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x146394C", Offset = "0x146394C", VA = "0x146394C")]
	public void Excude(float dlt)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x14646DC", Offset = "0x14646DC", VA = "0x14646DC")]
	public bool MoveBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1464728", Offset = "0x1464728", VA = "0x1464728")]
	public void DoStop()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1464498", Offset = "0x1464498", VA = "0x1464498")]
	private float HoldDuration()
	{
		return default(float);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1464518", Offset = "0x1464518", VA = "0x1464518")]
	private void SetSlerpTrn(Quaternion destinationRot, Vector3 destinationPos, float ratio)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x14646A0", Offset = "0x14646A0", VA = "0x14646A0")]
	private void Finish()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x146472C", Offset = "0x146472C", VA = "0x146472C")]
	public TransferMovieShot()
	{
	}
}
[Token(Token = "0x200007F")]
public class CameraEffectHandling : MonoBehaviour
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Tween eyeBlur;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float preBlurValue;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float curBlurValue;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x14401DC", Offset = "0x14401DC", VA = "0x14401DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x14401E4", Offset = "0x14401E4", VA = "0x14401E4")]
	public void SetEyeBlur(float value, float time = 0f)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x14401E8", Offset = "0x14401E8", VA = "0x14401E8")]
	public void ResetEyeBlur()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x14401EC", Offset = "0x14401EC", VA = "0x14401EC")]
	public CameraEffectHandling()
	{
	}
}
[Token(Token = "0x2000080")]
public class CameraEffectTools : Singleton<CameraEffectTools>
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CameraEffectHandling effectHandling;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EyeliyHandling eyeHandling;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine DelayStart;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x14401F4", Offset = "0x14401F4", VA = "0x14401F4")]
	public void SetEyeBlur(float value, float time)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x14401F8", Offset = "0x14401F8", VA = "0x14401F8")]
	public void StopEyeBlur()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x14401FC", Offset = "0x14401FC", VA = "0x14401FC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x144035C", Offset = "0x144035C", VA = "0x144035C")]
	public void AreasWarningInit()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1440430", Offset = "0x1440430", VA = "0x1440430")]
	public void StartAreasWarningEyeBlur(Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1440434", Offset = "0x1440434", VA = "0x1440434")]
	public void DelayStartAreasWarningEyeBlur(Vector3 targetPos, float delayTime)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1440360", Offset = "0x1440360", VA = "0x1440360")]
	public void StopAreasWarningEyeBlur()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1440364", Offset = "0x1440364", VA = "0x1440364")]
	public void ToEyelib(bool isFade, float time, Action endAction, float delty = 0.1f)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1440438", Offset = "0x1440438", VA = "0x1440438")]
	public CameraEffectTools()
	{
	}
}
[Token(Token = "0x2000081")]
public class EyeliyHandling : MonoBehaviour
{
	[Token(Token = "0x2000472")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD57F4", Offset = "0xFD57F4")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EyeliyHandling <>4__this;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action endAction;

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x15E130C", Offset = "0x15E130C", VA = "0x15E130C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x15E131C", Offset = "0x15E131C", VA = "0x15E131C")]
		internal void <EyeliyFade>b__0()
		{
		}
	}

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BlinkEffect mainCameraVolume;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine cr_fade;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x15E11F0", Offset = "0x15E11F0", VA = "0x15E11F0")]
	public void EyeliyFade(bool isFade, float delay, float time, Action endAction)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x15E1314", Offset = "0x15E1314", VA = "0x15E1314")]
	public EyeliyHandling()
	{
	}
}
[Token(Token = "0x2000082")]
public class ReadFileManager
{
	[Token(Token = "0x600018E")]
	[Address(RVA = "0x155DC00", Offset = "0x155DC00", VA = "0x155DC00")]
	public static byte[] LoadFileFromStreamAssets(string filename)
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x155DEC8", Offset = "0x155DEC8", VA = "0x155DEC8")]
	public static string[] GetFileList(string folderName)
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x155DFDC", Offset = "0x155DFDC", VA = "0x155DFDC")]
	public static bool FileExist(string folderName, string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x155E318", Offset = "0x155E318", VA = "0x155E318")]
	public static void InitOBBFile()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x155E470", Offset = "0x155E470", VA = "0x155E470")]
	private static int GetVersionCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x155E1F8", Offset = "0x155E1F8", VA = "0x155E1F8")]
	private static bool OBBFileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x155DDB4", Offset = "0x155DDB4", VA = "0x155DDB4")]
	public static byte[] LoadFileFromOBB(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x155E860", Offset = "0x155E860", VA = "0x155E860")]
	public ReadFileManager()
	{
	}
}
[Token(Token = "0x2000083")]
public enum AssetExtension
{
	[Token(Token = "0x400022E")]
	none,
	[Token(Token = "0x400022F")]
	meta,
	[Token(Token = "0x4000230")]
	prefab,
	[Token(Token = "0x4000231")]
	asset,
	[Token(Token = "0x4000232")]
	bytes,
	[Token(Token = "0x4000233")]
	txt,
	[Token(Token = "0x4000234")]
	xml,
	[Token(Token = "0x4000235")]
	anim,
	[Token(Token = "0x4000236")]
	controller,
	[Token(Token = "0x4000237")]
	mat,
	[Token(Token = "0x4000238")]
	otf,
	[Token(Token = "0x4000239")]
	ttf,
	[Token(Token = "0x400023A")]
	shader,
	[Token(Token = "0x400023B")]
	fbx,
	[Token(Token = "0x400023C")]
	unity,
	[Token(Token = "0x400023D")]
	png,
	[Token(Token = "0x400023E")]
	tga,
	[Token(Token = "0x400023F")]
	jpg,
	[Token(Token = "0x4000240")]
	jpeg,
	[Token(Token = "0x4000241")]
	exr,
	[Token(Token = "0x4000242")]
	ogg,
	[Token(Token = "0x4000243")]
	mp3,
	[Token(Token = "0x4000244")]
	wav
}
[Token(Token = "0x2000084")]
public class AssetFileInfo
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AssetsRoot;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6694", Offset = "0xFD6694")]
	private string <OriginPath>k__BackingField;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FileInfo mFileInfo;

	[Token(Token = "0x17000015")]
	public string OriginPath
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x160B9C4", Offset = "0x160B9C4", VA = "0x160B9C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBE7C", Offset = "0xFDBE7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x160B9CC", Offset = "0x160B9CC", VA = "0x160B9CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBE8C", Offset = "0xFDBE8C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool IsDirectoryExists
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x160B9D4", Offset = "0x160B9D4", VA = "0x160B9D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000017")]
	public bool IsFileExists
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x160B9E0", Offset = "0x160B9E0", VA = "0x160B9E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public bool IsMeta
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x160BA00", Offset = "0x160BA00", VA = "0x160BA00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000019")]
	public bool IsResourcesAsset
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x160BAD4", Offset = "0x160BAD4", VA = "0x160BAD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001A")]
	public bool IsDynamicAsset
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x160BC0C", Offset = "0x160BC0C", VA = "0x160BC0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001B")]
	public bool IsGUIDTrash
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x160BCC8", Offset = "0x160BCC8", VA = "0x160BCC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001C")]
	public int AssetID
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x160BC48", Offset = "0x160BC48", VA = "0x160BC48")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001D")]
	public string Extension
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x160BA68", Offset = "0x160BA68", VA = "0x160BA68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	public string DotExtension
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x160BDE8", Offset = "0x160BDE8", VA = "0x160BDE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public AssetExtension AssetExtension
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x160BE04", Offset = "0x160BE04", VA = "0x160BE04")]
		get
		{
			return default(AssetExtension);
		}
	}

	[Token(Token = "0x17000020")]
	public string FileName
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x160BF88", Offset = "0x160BF88", VA = "0x160BF88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	public string FileNameWithoutExtension
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x160BD20", Offset = "0x160BD20", VA = "0x160BD20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public string Notes
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x160BFA8", Offset = "0x160BFA8", VA = "0x160BFA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	public string FullDirectoryName
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x160BB40", Offset = "0x160BB40", VA = "0x160BB40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	public string ResourceDirectory
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x160C038", Offset = "0x160C038", VA = "0x160C038")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000025")]
	public string ResourcePath
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x160C0C8", Offset = "0x160C0C8", VA = "0x160C0C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public string SigleBundleName
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x160C174", Offset = "0x160C174", VA = "0x160C174")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000027")]
	public string MultiBundleName
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x160C220", Offset = "0x160C220", VA = "0x160C220")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x160C2C4", Offset = "0x160C2C4", VA = "0x160C2C4")]
	public AssetFileInfo(string iPath)
	{
	}
}
[Serializable]
[Token(Token = "0x2000085")]
public class AssetInfo
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] mAssetExtensions;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string mNameWithotExtension;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int mAssetID;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string mGUID;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string mBundleName;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string mResourceDir;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AssetExtension mExtension;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string mName;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string mProjectPath;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string mResourcePath;

	[Token(Token = "0x17000028")]
	public int AssetID
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x160C4A4", Offset = "0x160C4A4", VA = "0x160C4A4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000029")]
	public string GUID
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x160C4AC", Offset = "0x160C4AC", VA = "0x160C4AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public string Name
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x160C4B4", Offset = "0x160C4B4", VA = "0x160C4B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002B")]
	public string NameWithoutExtension
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x160C688", Offset = "0x160C688", VA = "0x160C688")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	public string Extension
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x160C558", Offset = "0x160C558", VA = "0x160C558")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public string BundleName
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x160C690", Offset = "0x160C690", VA = "0x160C690")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	public string ProjectPath
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x160C698", Offset = "0x160C698", VA = "0x160C698")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public string ResourcePath
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x160C770", Offset = "0x160C770", VA = "0x160C770")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public string ResourceDir
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x160C814", Offset = "0x160C814", VA = "0x160C814")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x160C81C", Offset = "0x160C81C", VA = "0x160C81C")]
	public AssetInfo(int iAssetID, string iGUID, string iNameWithotExtension, string iBundleName, string iResourceDir, AssetExtension iExtension = AssetExtension.none)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x160C940", Offset = "0x160C940", VA = "0x160C940", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000086")]
public class AssetManager : Singleton<AssetManager>
{
	[Token(Token = "0x2000473")]
	public delegate void ObjectCallback(UnityEngine.Object obj, bool isOld);

	[Token(Token = "0x2000474")]
	public delegate bool IsObjectOldFunc();

	[Token(Token = "0x2000475")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5804", Offset = "0xFD5804")]
	private sealed class <LoadWorker>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetManager <>4__this;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int assetID;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectCallback iCallBack;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IsObjectOldFunc func;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IsInstantiate;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResourceRequest <request>5__2;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private long <startTicks>5__3;

		[Token(Token = "0x170003B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002485")]
			[Address(RVA = "0x160E950", Offset = "0x160E950", VA = "0x160E950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002487")]
			[Address(RVA = "0x160E9B8", Offset = "0x160E9B8", VA = "0x160E9B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x160DD94", Offset = "0x160DD94", VA = "0x160DD94")]
		[DebuggerHidden]
		public <LoadWorker>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x160E6E4", Offset = "0x160E6E4", VA = "0x160E6E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x160E6E8", Offset = "0x160E6E8", VA = "0x160E6E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x160E958", Offset = "0x160E958", VA = "0x160E958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5814", Offset = "0xFD5814")]
	private sealed class <InstantiateWorker>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetManager <>4__this;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject obj;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<GameObject> cb;

		[Token(Token = "0x170003B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600248B")]
			[Address(RVA = "0x160E674", Offset = "0x160E674", VA = "0x160E674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600248D")]
			[Address(RVA = "0x160E6DC", Offset = "0x160E6DC", VA = "0x160E6DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x160DEFC", Offset = "0x160DEFC", VA = "0x160DEFC")]
		[DebuggerHidden]
		public <InstantiateWorker>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x160E5BC", Offset = "0x160E5BC", VA = "0x160E5BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x160E5C0", Offset = "0x160E5C0", VA = "0x160E5C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x160E67C", Offset = "0x160E67C", VA = "0x160E67C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, UnityEngine.Object> objectPool;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x160CBD0", Offset = "0x160CBD0", VA = "0x160CBD0")]
	public void LoadLevelAsync(string iAssetName)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x160CC40", Offset = "0x160CC40", VA = "0x160CC40")]
	private void LoadLevelAsync(int iID)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x160CC38", Offset = "0x160CC38", VA = "0x160CC38")]
	private int GetAssetIDWithName(string iAssetName)
	{
		return default(int);
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x160CC44", Offset = "0x160CC44", VA = "0x160CC44")]
	private void ClearPool()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x160CC9C", Offset = "0x160CC9C", VA = "0x160CC9C")]
	public UnityEngine.Object GetObjectInPool(int assetID)
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x160CD1C", Offset = "0x160CD1C", VA = "0x160CD1C")]
	private void AddObjectToPool(int assetID, UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x160CE30", Offset = "0x160CE30", VA = "0x160CE30")]
	public void DoCleanWhenStateChange()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x160CE34", Offset = "0x160CE34", VA = "0x160CE34")]
	public void ClearCacheData()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x160CE3C", Offset = "0x160CE3C", VA = "0x160CE3C")]
	public static byte[] LoadFileData(string filename, bool isPrintError = true)
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x160CE44", Offset = "0x160CE44", VA = "0x160CE44")]
	private static byte[] LoadFileDataFromResource(string filename, bool isPrintError)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x160CFEC", Offset = "0x160CFEC", VA = "0x160CFEC")]
	public void LoadObjectSync(int iAssetID, ObjectCallback iCallBack, IsObjectOldFunc func, bool isPrintError = true)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x160DA94", Offset = "0x160DA94", VA = "0x160DA94")]
	public UnityEngine.Object LoadObject(int iAssetID, bool isPrintError = true)
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x160D9B0", Offset = "0x160D9B0", VA = "0x160D9B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDBE9C", Offset = "0xFDBE9C")]
	private IEnumerator LoadWorker(int assetID, string path, ObjectCallback iCallBack, IsObjectOldFunc func, bool IsInstantiate)
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1608970", Offset = "0x1608970", VA = "0x1608970")]
	public void DestroyGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x160DDC0", Offset = "0x160DDC0", VA = "0x160DDC0")]
	public void InstantiateGameObjectAsync(GameObject obj, Action<GameObject> cb)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x160DE50", Offset = "0x160DE50", VA = "0x160DE50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDBF00", Offset = "0xFDBF00")]
	private IEnumerator InstantiateWorker(GameObject obj, Action<GameObject> cb)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x160DF28", Offset = "0x160DF28", VA = "0x160DF28")]
	public GameObject InstantiateGameObject(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x160E0C8", Offset = "0x160E0C8", VA = "0x160E0C8")]
	public GameObject InstantiateGameObject(GameObject obj, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x160E2C0", Offset = "0x160E2C0", VA = "0x160E2C0")]
	public int GetAssetIDByObject(UnityEngine.Object obj)
	{
		return default(int);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x160E518", Offset = "0x160E518", VA = "0x160E518")]
	public AssetManager()
	{
	}
}
[Token(Token = "0x2000087")]
public enum AssetPrefix
{
	[Token(Token = "0x4000254")]
	Hero = 11,
	[Token(Token = "0x4000255")]
	Monster = 12,
	[Token(Token = "0x4000256")]
	SceneObject = 21,
	[Token(Token = "0x4000257")]
	BossMap = 22,
	[Token(Token = "0x4000258")]
	NormalMap = 23,
	[Token(Token = "0x4000259")]
	TownMap = 24,
	[Token(Token = "0x400025A")]
	Font = 31,
	[Token(Token = "0x400025B")]
	SpriteAltas = 32,
	[Token(Token = "0x400025C")]
	UserInterface = 33,
	[Token(Token = "0x400025D")]
	Icon = 41,
	[Token(Token = "0x400025E")]
	VisualEffectUI = 51,
	[Token(Token = "0x400025F")]
	VisualEffectBattle = 52,
	[Token(Token = "0x4000260")]
	BackgroundMusic = 61,
	[Token(Token = "0x4000261")]
	Voice = 62,
	[Token(Token = "0x4000262")]
	SoundEffectGeneral = 63,
	[Token(Token = "0x4000263")]
	SoundEffectUI = 64,
	[Token(Token = "0x4000264")]
	SoundEffectBattle = 65
}
[Token(Token = "0x2000088")]
public class AssetTable : Singleton<AssetTable>
{
	[Token(Token = "0x4000265")]
	private const string RESOURCE_PATH = "Assets/Resources/";

	[Token(Token = "0x4000266")]
	private const string RESOURCE_ASSETS_PATH = "Assets/Resources/Assets/";

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool mIsRebuilding;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<IAssetTableProvider> mReadonlyProviders;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IAssetTableProvider> mProviders;

	[Token(Token = "0x17000031")]
	public static bool HasAnyProvider
	{
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x160EAEC", Offset = "0x160EAEC", VA = "0x160EAEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x160EBB4", Offset = "0x160EBB4", VA = "0x160EBB4")]
	public static void RegisterReadonlyProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x160ED0C", Offset = "0x160ED0C", VA = "0x160ED0C")]
	public static void RegisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x160EE64", Offset = "0x160EE64", VA = "0x160EE64")]
	public static void UnregisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x160EFEC", Offset = "0x160EFEC", VA = "0x160EFEC")]
	public static bool IsRegisterProvider(IAssetTableProvider iProvider)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x160D934", Offset = "0x160D934", VA = "0x160D934")]
	public static AssetInfo AssetInfoByAssetID(int iAssetID)
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x160F28C", Offset = "0x160F28C", VA = "0x160F28C")]
	public static void Reload()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x160EC30", Offset = "0x160EC30", VA = "0x160EC30")]
	private void InternalRegisterReadonlyProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x160ED88", Offset = "0x160ED88", VA = "0x160ED88")]
	private void InternalRegisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x160EEE0", Offset = "0x160EEE0", VA = "0x160EEE0")]
	private void InternalUnregisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x160F068", Offset = "0x160F068", VA = "0x160F068")]
	private bool InternalIsRegisterProvider(IAssetTableProvider iProvider)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x160F0D0", Offset = "0x160F0D0", VA = "0x160F0D0")]
	private AssetInfo InternalAssetInfoByAssetID(int iAssetID)
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x160F300", Offset = "0x160F300", VA = "0x160F300")]
	private void InternalReload()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x160F4B8", Offset = "0x160F4B8", VA = "0x160F4B8")]
	public AssetTable()
	{
	}
}
[Token(Token = "0x2000089")]
public class AssetTableModify
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6704", Offset = "0xFD6704")]
	private AssetTableModifyType <ModifyType>k__BackingField;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6714", Offset = "0xFD6714")]
	private string <PathA>k__BackingField;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6724", Offset = "0xFD6724")]
	private string <PathB>k__BackingField;

	[Token(Token = "0x17000032")]
	public AssetTableModifyType ModifyType
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x160F598", Offset = "0x160F598", VA = "0x160F598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBF64", Offset = "0xFDBF64")]
		get
		{
			return default(AssetTableModifyType);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x160F5A0", Offset = "0x160F5A0", VA = "0x160F5A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBF74", Offset = "0xFDBF74")]
		private set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public string PathA
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x160F5A8", Offset = "0x160F5A8", VA = "0x160F5A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBF84", Offset = "0xFDBF84")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x160F5B0", Offset = "0x160F5B0", VA = "0x160F5B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBF94", Offset = "0xFDBF94")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public string PathB
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x160F5B8", Offset = "0x160F5B8", VA = "0x160F5B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBFA4", Offset = "0xFDBFA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x160F5C0", Offset = "0x160F5C0", VA = "0x160F5C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBFB4", Offset = "0xFDBFB4")]
		private set
		{
		}
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x160F5C8", Offset = "0x160F5C8", VA = "0x160F5C8")]
	public AssetTableModify(AssetTableModifyType iModifyType, string iPathA, string iPathB)
	{
	}
}
[Token(Token = "0x200008A")]
public enum AssetTableModifyType
{
	[Token(Token = "0x400026E")]
	Import,
	[Token(Token = "0x400026F")]
	Delete,
	[Token(Token = "0x4000270")]
	Update
}
[Token(Token = "0x200008B")]
public class AssetTableXMLProvider : IAssetTableProvider
{
	[Token(Token = "0x2000477")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5824", Offset = "0xFD5824")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int iAssetID;

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x161003C", Offset = "0x161003C", VA = "0x161003C")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x16103F4", Offset = "0x16103F4", VA = "0x16103F4")]
		internal bool <AssetInfoByAssetID>b__0(XMLNode item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000271")]
	private const string ASSET_TABLE_RES_PATH = "General/AssetTable.xml";

	[Token(Token = "0x4000272")]
	private const string TAG_ASSET_TABLE = "AssetTable";

	[Token(Token = "0x4000273")]
	private const string TAG_ASSET_INFO = "AssetInfo";

	[Token(Token = "0x4000274")]
	private const string TAG_ASSET_ID = "AID";

	[Token(Token = "0x4000275")]
	private const string TAG_NAME_WITHOUT_EXT = "NWE";

	[Token(Token = "0x4000276")]
	private const string TAG_GUID = "GID";

	[Token(Token = "0x4000277")]
	private const string TAG_BUNDLE_NAME = "BDN";

	[Token(Token = "0x4000278")]
	private const string TAG_RESOURCE_PATH = "RPA";

	[Token(Token = "0x4000279")]
	private const string TAG_EXTENSION = "EXT";

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6734", Offset = "0xFD6734")]
	private static AssetTableXMLProvider <Instance>k__BackingField;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string mResourcePath;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XMLNode[] mAssetInfos;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, AssetInfo> mAssetTableCache;

	[Token(Token = "0x17000035")]
	public static AssetTableXMLProvider Instance
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x160F620", Offset = "0x160F620", VA = "0x160F620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBFC4", Offset = "0xFDBFC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x160F670", Offset = "0x160F670", VA = "0x160F670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBFD4", Offset = "0xFDBFD4")]
		private set
		{
		}
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x160F6C8", Offset = "0x160F6C8", VA = "0x160F6C8")]
	public static void Init()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x160F7F8", Offset = "0x160F7F8", VA = "0x160F7F8")]
	public AssetTableXMLProvider(string iResourcePath)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x160FC74", Offset = "0x160FC74", VA = "0x160FC74", Slot = "4")]
	public AssetInfo AssetInfoByAssetID(int iAssetID)
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1610044", Offset = "0x1610044", VA = "0x1610044", Slot = "5")]
	public int CountOfAssetInfo()
	{
		return default(int);
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1610094", Offset = "0x1610094", VA = "0x1610094")]
	public AssetInfo[] AssetInfosByAssetIDRange(int iMinAssetID, int iMaxAssetID)
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1610100", Offset = "0x1610100", VA = "0x1610100")]
	public AssetInfo[] AssetInfosByKeywords(string iKeyword)
	{
		return null;
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x161016C", Offset = "0x161016C", VA = "0x161016C")]
	public bool AddAssetInfo(AssetInfo iAssetInfo, bool iRebuilding = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x16101D8", Offset = "0x16101D8", VA = "0x16101D8")]
	public void UpdateAssetInfo(AssetInfo iNewAssetInfo, AssetInfo iOriginAssetInfo)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1610244", Offset = "0x1610244", VA = "0x1610244")]
	public void DeleteAssetInfo(AssetInfo iAssetInfo)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x16102B0", Offset = "0x16102B0", VA = "0x16102B0")]
	public void ClearAll()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x161031C", Offset = "0x161031C", VA = "0x161031C")]
	public void DelaySave(int iCount = 1)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1610388", Offset = "0x1610388", VA = "0x1610388")]
	public void Save()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x160F898", Offset = "0x160F898", VA = "0x160F898", Slot = "6")]
	public void Reload()
	{
	}
}
[Token(Token = "0x200008C")]
public class Despawn : MonoBehaviour
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DespawnDelay;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x13D9224", Offset = "0x13D9224", VA = "0x13D9224")]
	public void DespawnInit2(float _delay)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x13D923C", Offset = "0x13D923C", VA = "0x13D923C")]
	public void DespawnInit()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x13D9244", Offset = "0x13D9244", VA = "0x13D9244")]
	public void Init()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x13D9230", Offset = "0x13D9230", VA = "0x13D9230")]
	public void Init(float _delay)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x13D924C", Offset = "0x13D924C", VA = "0x13D924C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x13D9318", Offset = "0x13D9318", VA = "0x13D9318")]
	public Despawn()
	{
	}
}
[Token(Token = "0x200008D")]
public interface IAssetTableProvider
{
	[Token(Token = "0x60001F6")]
	AssetInfo AssetInfoByAssetID(int iAssetID);

	[Token(Token = "0x60001F7")]
	int CountOfAssetInfo();

	[Token(Token = "0x60001F8")]
	void Reload();
}
[Token(Token = "0x200008E")]
public class AttributeHelper : Singleton<AttributeHelper>
{
	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly UnOrderMultiMap<Type, Type> types;

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x16104B8", Offset = "0x16104B8", VA = "0x16104B8")]
	public AttributeHelper()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x16106C8", Offset = "0x16106C8", VA = "0x16106C8")]
	public List<Type> GetTypes(Type systemAttributeType)
	{
		return null;
	}
}
[Token(Token = "0x200008F")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD18B8", Offset = "0xFD18B8")]
public class BaseAttribute : Attribute
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6744", Offset = "0xFD6744")]
	private readonly Type <AttributeType>k__BackingField;

	[Token(Token = "0x17000036")]
	public Type AttributeType
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x1613FE8", Offset = "0x1613FE8", VA = "0x1613FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBFE4", Offset = "0xFDBFE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1613FF0", Offset = "0x1613FF0", VA = "0x1613FF0")]
	public BaseAttribute()
	{
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD18F0", Offset = "0xFD18F0")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5834", Offset = "0xFD5834")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AkGameObj <>4__this;

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x18E10D8", Offset = "0x18E10D8", VA = "0x18E10D8")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x18E24C4", Offset = "0x18E24C4", VA = "0x18E24C4")]
		internal void <PostEvent>b__0(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
		{
		}
	}

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int eventPlayingNum;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool hasSetttingValue;

	[Token(Token = "0x4000284")]
	private const float destroyDelay = 2f;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isCamera;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AkCallbackManager.EventCallback akCallBack;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isEnvironmentAware;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider m_Collider;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isRegistered;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x4000291")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	private int listenerMask;

	[Token(Token = "0x17000037")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x18DC074", Offset = "0x18DC074", VA = "0x18DC074")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000038")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x18DC090", Offset = "0x18DC090", VA = "0x18DC090")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x18E0D94", Offset = "0x18E0D94", VA = "0x18E0D94")]
	private void PlayEndAction()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x18E0DA4", Offset = "0x18E0DA4", VA = "0x18E0DA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x18E0E50", Offset = "0x18E0E50", VA = "0x18E0E50")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x18E0E54", Offset = "0x18E0E54", VA = "0x18E0E54")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x18E0E60", Offset = "0x18E0E60", VA = "0x18E0E60")]
	public void PostEvent(string eventName)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x18E0F10", Offset = "0x18E0F10", VA = "0x18E0F10")]
	public void PostEvent(string eventName, AkCallbackManager.EventCallback callback, [Optional] object cookie)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x18E0FD8", Offset = "0x18E0FD8", VA = "0x18E0FD8")]
	public void PostEvent(string eventName, Action callback)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x18E10E0", Offset = "0x18E10E0", VA = "0x18E10E0")]
	public void Stop(string eventName, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x18E119C", Offset = "0x18E119C", VA = "0x18E119C")]
	public void Pause(string eventName, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x18E11AC", Offset = "0x18E11AC", VA = "0x18E11AC")]
	public void Resume(string eventName, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x18E10F0", Offset = "0x18E10F0", VA = "0x18E10F0")]
	public void ExecuteAction(string eventName, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x18E11C0", Offset = "0x18E11C0", VA = "0x18E11C0")]
	public void SetSwitch(string switchGroup, string switchState)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x18E125C", Offset = "0x18E125C", VA = "0x18E125C")]
	public void SetRTPCValue(string name, float value)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x18E1300", Offset = "0x18E1300", VA = "0x18E1300")]
	public void SetVolume(float volume)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x18E1398", Offset = "0x18E1398", VA = "0x18E1398")]
	public void StopAll()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x18E0FC8", Offset = "0x18E0FC8", VA = "0x18E0FC8")]
	private void VerifyPlayingID(string eventName, uint playingId)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x18E11BC", Offset = "0x18E11BC", VA = "0x18E11BC")]
	protected void Verify(AKRESULT result)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x18E1414", Offset = "0x18E1414", VA = "0x18E1414")]
	public void ResetDefaultListeners()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x18CF210", Offset = "0x18CF210", VA = "0x18CF210")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x18CF230", Offset = "0x18CF230", VA = "0x18CF230")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x18CEE74", Offset = "0x18CEE74", VA = "0x18CEE74")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x18E15CC", Offset = "0x18E15CC", VA = "0x18E15CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x18E1C2C", Offset = "0x18E1C2C", VA = "0x18E1C2C")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x18E1C30", Offset = "0x18E1C30", VA = "0x18E1C30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x18E1C44", Offset = "0x18E1C44", VA = "0x18E1C44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x18E1DA4", Offset = "0x18E1DA4", VA = "0x18E1DA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x18E2024", Offset = "0x18E2024", VA = "0x18E2024", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x18E2194", Offset = "0x18E2194", VA = "0x18E2194", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x18E21B8", Offset = "0x18E21B8", VA = "0x18E21B8", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x18E21DC", Offset = "0x18E21DC", VA = "0x18E21DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x18E21F4", Offset = "0x18E21F4", VA = "0x18E21F4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x18E2434", Offset = "0x18E2434", VA = "0x18E2434")]
	public AkGameObj()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x18E24B4", Offset = "0x18E24B4", VA = "0x18E24B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDBFF4", Offset = "0xFDBFF4")]
	private void <PostEvent>b__10_0(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}
}
[Token(Token = "0x2000091")]
internal class AudioManager : Singleton<AudioManager>
{
	[Token(Token = "0x4000293")]
	private const int commonAudioSourceAssetId = 64000001;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isEnable;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool wwiseInit;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<IAudioDefine> defineList;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, IAudioDefine> wwiseDefineList;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, string> wwiseRTPCDictionary;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<int, string> audioEventNameDic;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, string> e_SwitchGroupEventDic;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, string> e_SwitchEventDic;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, string> e_StateGroupEventDic;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, string> e_StateEventDic;

	[Token(Token = "0x17000039")]
	public bool IsEnable
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x1610784", Offset = "0x1610784", VA = "0x1610784")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x161078C", Offset = "0x161078C", VA = "0x161078C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public bool WwiseInit
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x1610B14", Offset = "0x1610B14", VA = "0x1610B14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x1610B1C", Offset = "0x1610B1C", VA = "0x1610B1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1609424", Offset = "0x1609424", VA = "0x1609424")]
	public WwiseDefine Play(AudioEvent audioEvent, GameObject wwiseObject, Action action, bool needDestroy, SwitchInfoData switchInfoData, bool isUseObstruction)
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1610E4C", Offset = "0x1610E4C", VA = "0x1610E4C")]
	public WwiseDefine Play(AudioEvent audioEvent, Vector3 pos, Quaternion rot, Action action, bool needDestroy, SwitchInfoData switchInfoData, bool isUseObstruction)
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x16114C4", Offset = "0x16114C4", VA = "0x16114C4")]
	public void Stop(WwiseDefine wwiseObject, bool isDestoryObj = true)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x16115C0", Offset = "0x16115C0", VA = "0x16115C0")]
	public void Pause(AudioEvent audioEvent, GameObject wwiseObject)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1611710", Offset = "0x1611710", VA = "0x1611710")]
	public void Resume(AudioEvent audioEvent, GameObject wwiseObject)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1611860", Offset = "0x1611860", VA = "0x1611860")]
	public void PauseAll()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x16119CC", Offset = "0x16119CC", VA = "0x16119CC")]
	public void ResumeAll()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1610950", Offset = "0x1610950", VA = "0x1610950")]
	public void StopAll()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1610B28", Offset = "0x1610B28", VA = "0x1610B28")]
	private WwiseDefine SetWwiseDefine(AudioEvent audioEvent, SwitchInfoData switchInfoData, GameObject eventRoot, Action action, bool needDestroy, bool isUseObstruction)
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1611B38", Offset = "0x1611B38", VA = "0x1611B38")]
	public void SetRTPCValue(RTPCEvent rTPCEvent, float value)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1611CB8", Offset = "0x1611CB8", VA = "0x1611CB8")]
	public void SetRTPCValue(RTPCEvent rTPCEvent, float value, WwiseDefine wwiseDefine)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1611EC4", Offset = "0x1611EC4", VA = "0x1611EC4")]
	public float GetRTPCValue(RTPCEvent rTPCEvent, GameObject obj)
	{
		return default(float);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x161205C", Offset = "0x161205C", VA = "0x161205C")]
	public void SetSwitch(e_SwitchGroupEvent switchGroupEvent, e_SwitchEvent switchEvent, WwiseDefine wwiseDefine)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1612340", Offset = "0x1612340", VA = "0x1612340")]
	public void SetState(e_StateGroupEvent stateGroupEvent, e_StateEvent stateEvent)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1612594", Offset = "0x1612594", VA = "0x1612594")]
	public void SendToHWServer(int assetid, Vector3 pos, float volume)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1612598", Offset = "0x1612598", VA = "0x1612598")]
	public void AddAudioDefine(IAudioDefine define)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1612630", Offset = "0x1612630", VA = "0x1612630")]
	public void RemoveAudioDefine(IAudioDefine define)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x16107E0", Offset = "0x16107E0", VA = "0x16107E0")]
	public void SetAllAudioDefine(bool isEnable)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x16126C8", Offset = "0x16126C8", VA = "0x16126C8")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000092")]
public interface IAudioDefine
{
	[Token(Token = "0x6000237")]
	void Init(params object[] args);

	[Token(Token = "0x6000238")]
	void Play();

	[Token(Token = "0x6000239")]
	void Stop();

	[Token(Token = "0x600023A")]
	void Pause();

	[Token(Token = "0x600023B")]
	void Resume();

	[Token(Token = "0x600023C")]
	void SetEnable(bool isEnable);
}
[Token(Token = "0x2000093")]
public struct AudioStruct
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject wwiseRoot;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AudioEvent audioEvent;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int priority;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x10FED30", Offset = "0x10FED30", VA = "0x10FED30")]
	public AudioStruct(GameObject _wwiseRoot, AudioEvent _audioEvent, int _priority)
	{
	}
}
[Serializable]
[Token(Token = "0x2000094")]
public class SwitchInfoData
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_SwitchGroupEvent groupType;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public e_SwitchEvent switchType;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x15CE878", Offset = "0x15CE878", VA = "0x15CE878")]
	public SwitchInfoData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000095")]
public class StateInfoData
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_StateGroupEvent groupType;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public e_StateEvent stateType;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x15C70A4", Offset = "0x15C70A4", VA = "0x15C70A4")]
	public StateInfoData()
	{
	}
}
[Token(Token = "0x2000096")]
public enum AudioEvent
{
	[Token(Token = "0x40002A6")]
	Unknown = 0,
	[Token(Token = "0x40002A7")]
	AMB_Switch = 1000,
	[Token(Token = "0x40002A8")]
	AMB_Stop = 1001,
	[Token(Token = "0x40002A9")]
	AMB_Electric = 1002,
	[Token(Token = "0x40002AA")]
	AMB_Rain_Effect = 1003,
	[Token(Token = "0x40002AB")]
	Bullet_Hit_Material_Switch = 2000,
	[Token(Token = "0x40002AC")]
	Gun_Shoot_Switch = 3000,
	[Token(Token = "0x40002AD")]
	Gun_Reload_Switch = 3001,
	[Token(Token = "0x40002AE")]
	Gun_No_Bullet_Switch = 3002,
	[Token(Token = "0x40002AF")]
	Gun_Shoot_Switch_Enemy = 3003,
	[Token(Token = "0x40002B0")]
	Gun_Reload_Switch_Enemy = 3004,
	[Token(Token = "0x40002B1")]
	Gun_No_Bullet_Switch_Enemy = 3005,
	[Token(Token = "0x40002B2")]
	Bullet_Drop_Switch = 3006,
	[Token(Token = "0x40002B3")]
	UI_Gun_Transition = 3007,
	[Token(Token = "0x40002B4")]
	UI_Gun_Pick = 3008,
	[Token(Token = "0x40002B5")]
	Footstep_Major = 5000,
	[Token(Token = "0x40002B6")]
	UI_Level_Up = 5001,
	[Token(Token = "0x40002B7")]
	Player_Die_Female = 5003,
	[Token(Token = "0x40002B8")]
	Player_Die_Male = 5004,
	[Token(Token = "0x40002B9")]
	BGM_Battle = 6000,
	[Token(Token = "0x40002BA")]
	BGM_Win = 6001,
	[Token(Token = "0x40002BB")]
	BGM_Level1 = 6101,
	[Token(Token = "0x40002BC")]
	BGM_Level2 = 6102,
	[Token(Token = "0x40002BD")]
	BGM_Level3 = 6103,
	[Token(Token = "0x40002BE")]
	BGM_Level4 = 6104,
	[Token(Token = "0x40002BF")]
	BGM_Level5 = 6105,
	[Token(Token = "0x40002C0")]
	BGM_Level6 = 6106,
	[Token(Token = "0x40002C1")]
	BGM_Level7 = 6107,
	[Token(Token = "0x40002C2")]
	BGM_Level8 = 6108,
	[Token(Token = "0x40002C3")]
	BGM_Level9 = 6109,
	[Token(Token = "0x40002C4")]
	BGM_Boss = 6150,
	[Token(Token = "0x40002C5")]
	BGM_Count = 6151,
	[Token(Token = "0x40002C6")]
	Voice_Over_01 = 7000,
	[Token(Token = "0x40002C7")]
	Voice_Over_02 = 7001,
	[Token(Token = "0x40002C8")]
	Voice_Over_04 = 7002,
	[Token(Token = "0x40002C9")]
	Voice_Over_05 = 7003,
	[Token(Token = "0x40002CA")]
	Voice_Over_03 = 7004,
	[Token(Token = "0x40002CB")]
	Voice_Mission_Success = 7005,
	[Token(Token = "0x40002CC")]
	Voice_Mission_Failure = 7006,
	[Token(Token = "0x40002CD")]
	Voice_Ten_Minutes_Left = 7007,
	[Token(Token = "0x40002CE")]
	Voice_Five_Minutes_Left = 7008,
	[Token(Token = "0x40002CF")]
	Voice_One_Minutes_Left = 7009,
	[Token(Token = "0x40002D0")]
	Voice_Next_Level = 7010,
	[Token(Token = "0x40002D1")]
	Voice_Count_Ten_Secends = 7011,
	[Token(Token = "0x40002D2")]
	Voice_Remind_Move = 7012,
	[Token(Token = "0x40002D3")]
	Voice_Remind_Choose = 7013,
	[Token(Token = "0x40002D4")]
	Voice_Remind_Wait = 7014,
	[Token(Token = "0x40002D5")]
	Voice_Remind_Captain = 7015,
	[Token(Token = "0x40002D6")]
	Voice_Failure = 7016,
	[Token(Token = "0x40002D7")]
	Voice_Succeed = 7017,
	[Token(Token = "0x40002D8")]
	Voice_Over_Start = 7018,
	[Token(Token = "0x40002D9")]
	UI_Circle = 7500,
	[Token(Token = "0x40002DA")]
	UI_Open_Door = 7501,
	[Token(Token = "0x40002DB")]
	UI_Wood_Break = 7502,
	[Token(Token = "0x40002DC")]
	UI_Heal = 7503,
	[Token(Token = "0x40002DD")]
	UI_Lift_Arrive = 7504,
	[Token(Token = "0x40002DE")]
	UI_Lift_Open = 7505,
	[Token(Token = "0x40002DF")]
	UI_Lift_Close = 7506,
	[Token(Token = "0x40002E0")]
	UI_Lift_Moving = 7507,
	[Token(Token = "0x40002E1")]
	UI_Cable_Car_Close = 7508,
	[Token(Token = "0x40002E2")]
	UI_Cable_Car_Down = 7509,
	[Token(Token = "0x40002E3")]
	UI_Cable_Car_Move_Loop = 7510,
	[Token(Token = "0x40002E4")]
	UI_Cable_Car_Open = 7511,
	[Token(Token = "0x40002E5")]
	UI_Lift_Down = 7512,
	[Token(Token = "0x40002E6")]
	UI_Transfer = 7513,
	[Token(Token = "0x40002E7")]
	Monster_Voice = 7700,
	[Token(Token = "0x40002E8")]
	Monster_Ac_Pullout = 7701,
	[Token(Token = "0x40002E9")]
	Monster_Ac_Pullbow = 7702,
	[Token(Token = "0x40002EA")]
	Monster_Ac_Spell = 7703,
	[Token(Token = "0x40002EB")]
	Monster_Ac_Fire = 7704,
	[Token(Token = "0x40002EC")]
	Monster_Ac_Fire_Stop = 7705,
	[Token(Token = "0x40002ED")]
	Monster_Ac_Hit = 7706,
	[Token(Token = "0x40002EE")]
	Monster_Ac_Die_Vo = 7727,
	[Token(Token = "0x40002EF")]
	Monster_Skeleton_Throw = 7708,
	[Token(Token = "0x40002F0")]
	Monster_Skeleton_Grenade_Drop = 7709,
	[Token(Token = "0x40002F1")]
	Monster_Skeleton_Grenade_Boom = 7710,
	[Token(Token = "0x40002F2")]
	Monster_Skeleton_Die_Vo = 7728,
	[Token(Token = "0x40002F3")]
	Monster_Staff_Charge = 7707,
	[Token(Token = "0x40002F4")]
	Monster_Staff_Spell = 7711,
	[Token(Token = "0x40002F5")]
	Monster_Staff_Hit = 7712,
	[Token(Token = "0x40002F6")]
	Monster_Big_Appear = 7713,
	[Token(Token = "0x40002F7")]
	Monster_Staff_Die_Vo = 7729,
	[Token(Token = "0x40002F8")]
	Monster_Robot_Charge = 7714,
	[Token(Token = "0x40002F9")]
	Monster_Robot_Spell = 7715,
	[Token(Token = "0x40002FA")]
	Monster_Robot_Footstep = 7716,
	[Token(Token = "0x40002FB")]
	Monster_Robot_Die_Vo = 7732,
	[Token(Token = "0x40002FC")]
	Monster_Ghostclear_Spell = 7717,
	[Token(Token = "0x40002FD")]
	Monster_Ghostclear_Hit = 7718,
	[Token(Token = "0x40002FE")]
	Monster_Ghostclear_Disappear = 7719,
	[Token(Token = "0x40002FF")]
	Monster_Ghostclear_Appear = 7720,
	[Token(Token = "0x4000300")]
	Monster_Ghostclear_Charge = 7726,
	[Token(Token = "0x4000301")]
	Monster_Ghostclear_Die_Vo = 7730,
	[Token(Token = "0x4000302")]
	Monster_Ghostblack_Spell = 7721,
	[Token(Token = "0x4000303")]
	Monster_Ghostblack_Hit = 7722,
	[Token(Token = "0x4000304")]
	Monster_Ghostblack_Appear = 7724,
	[Token(Token = "0x4000305")]
	Monster_Ghostblack_Charge = 7725,
	[Token(Token = "0x4000306")]
	Monster_Ghostblack_Die_Vo = 7731,
	[Token(Token = "0x4000307")]
	Monster_Body_fall = 7733,
	[Token(Token = "0x4000308")]
	AMB_Stab = 9000,
	[Token(Token = "0x4000309")]
	Laser = 8000,
	[Token(Token = "0x400030A")]
	Ms_Boss_C4_CS = 10501,
	[Token(Token = "0x400030B")]
	Ms_Boss_C4_Throw = 10502,
	[Token(Token = "0x400030C")]
	Ms_Boss_C4_Vo = 10503,
	[Token(Token = "0x400030D")]
	Ms_Boss_Footstep = 10504,
	[Token(Token = "0x400030E")]
	Ms_Boss_Die_CS_1 = 10505,
	[Token(Token = "0x400030F")]
	Ms_Boss_Die_Vo = 10506,
	[Token(Token = "0x4000310")]
	Ms_Boss_Die_CS_2 = 10507,
	[Token(Token = "0x4000311")]
	Ms_Boss_Gatlin01_CS = 10508,
	[Token(Token = "0x4000312")]
	Ms_Boss_Gatlin01_Charge_Vo = 10509,
	[Token(Token = "0x4000313")]
	Ms_Boss_Gatlin03_CS = 10510,
	[Token(Token = "0x4000314")]
	Ms_Boss_Idle_Vo = 10511,
	[Token(Token = "0x4000315")]
	Ms_Boss_Jingjue_CS = 10512,
	[Token(Token = "0x4000316")]
	Ms_Boss_Jingjue_Vo = 10513,
	[Token(Token = "0x4000317")]
	Ms_Boss_Shouji01_CS = 10514,
	[Token(Token = "0x4000318")]
	Ms_Boss_Shouji01_Vo = 10515,
	[Token(Token = "0x4000319")]
	Ms_Boss_Shouji02_CS = 10516,
	[Token(Token = "0x400031A")]
	Ms_Boss_Shouji02_Vo = 10517,
	[Token(Token = "0x400031B")]
	Monster_Boss_Charge = 10520,
	[Token(Token = "0x400031C")]
	Monster_Boss_Spell = 10521,
	[Token(Token = "0x400031D")]
	Monster_Boss_Purple_Ball_Loop = 10522,
	[Token(Token = "0x400031E")]
	Monster_Boss_Purple_Ball_Hit = 10523,
	[Token(Token = "0x400031F")]
	Monster_Boss_Laser_Loop = 10524,
	[Token(Token = "0x4000320")]
	Monster_Boss_Laser_Stop = 10525,
	[Token(Token = "0x4000321")]
	Monster_Boss_Summon = 10526,
	[Token(Token = "0x4000322")]
	Monster_Boss_Disappear = 10527,
	[Token(Token = "0x4000323")]
	Monster_Boss_Die_Vo = 10528,
	[Token(Token = "0x4000324")]
	Monster_Boss_Appear = 10529,
	[Token(Token = "0x4000325")]
	Monster_Boss_Fly = 10530,
	[Token(Token = "0x4000326")]
	Monster_Boss_Enter = 10531,
	[Token(Token = "0x4000327")]
	Gun_Gatlin_Single_Shoot = 10601,
	[Token(Token = "0x4000328")]
	Gun_Gatlin_Blend = 10602,
	[Token(Token = "0x4000329")]
	Gun_Gatlin_Blend_Stop = 10603,
	[Token(Token = "0x400032A")]
	Grenades_Boss_Drop = 10604,
	[Token(Token = "0x400032B")]
	AMB_LockerRoom = 10700,
	[Token(Token = "0x400032C")]
	AMB_Battleroom_1 = 10701,
	[Token(Token = "0x400032D")]
	AMB_Battleroom_2 = 10702,
	[Token(Token = "0x400032E")]
	AMB_Battleroom_3 = 10703,
	[Token(Token = "0x400032F")]
	AMB_Battleroom_4 = 10704,
	[Token(Token = "0x4000330")]
	AMB_Battleroom_5 = 10705,
	[Token(Token = "0x4000331")]
	AMB_Battleroom_6 = 10706,
	[Token(Token = "0x4000332")]
	AMB_Battleroom_7 = 10707,
	[Token(Token = "0x4000333")]
	AMB_Battleroom_8 = 10708,
	[Token(Token = "0x4000334")]
	AMB_Battleroom_9 = 10709,
	[Token(Token = "0x4000335")]
	AMB_Battleroom_10 = 10710,
	[Token(Token = "0x4000336")]
	AMB_Battleroom_11 = 10711,
	[Token(Token = "0x4000337")]
	AMB_Battleroom_12 = 10712,
	[Token(Token = "0x4000338")]
	AMB_Battleroom_13 = 10713,
	[Token(Token = "0x4000339")]
	AMB_Battleroom_14 = 10714,
	[Token(Token = "0x400033A")]
	AMB_Battleroom_15 = 10715,
	[Token(Token = "0x400033B")]
	AMB_Battleroom_16 = 10716,
	[Token(Token = "0x400033C")]
	AMB_Battleroom_17 = 10717,
	[Token(Token = "0x400033D")]
	AMB_Battleroom_18 = 10718,
	[Token(Token = "0x400033E")]
	AMB_Battleroom_19 = 10719,
	[Token(Token = "0x400033F")]
	AMB_Battleroom_20 = 10720,
	[Token(Token = "0x4000340")]
	AMB_Battleroom_21 = 10721,
	[Token(Token = "0x4000341")]
	AMB_Battleroom_22 = 10722,
	[Token(Token = "0x4000342")]
	AMB_Battleroom_23 = 10723,
	[Token(Token = "0x4000343")]
	AMB_Battleroom_24 = 10724,
	[Token(Token = "0x4000344")]
	AMB_Battleroom_25 = 10725,
	[Token(Token = "0x4000345")]
	AMB_Battleroom_26 = 10726,
	[Token(Token = "0x4000346")]
	AMB_Battleroom_27 = 10727,
	[Token(Token = "0x4000347")]
	AMB_Battleroom_28 = 10728,
	[Token(Token = "0x4000348")]
	AMB_Battleroom_29 = 10729,
	[Token(Token = "0x4000349")]
	AMB_Battleroom_30 = 10730,
	[Token(Token = "0x400034A")]
	AMB_Battleroom_31 = 10731,
	[Token(Token = "0x400034B")]
	AMB_Battleroom_32 = 10732
}
[Token(Token = "0x2000097")]
public enum RTPCEvent
{
	[Token(Token = "0x400034D")]
	Unknown = 0,
	[Token(Token = "0x400034E")]
	Room = 1,
	[Token(Token = "0x400034F")]
	Gatlin_Blend_RTPC = 2,
	[Token(Token = "0x4000350")]
	Sfx_Volume_RTPC = 100,
	[Token(Token = "0x4000351")]
	Music_Volume_RTPC = 101,
	[Token(Token = "0x4000352")]
	Voice_Volume_RTPC = 102,
	[Token(Token = "0x4000353")]
	Audio_Volume_RTPC = 103
}
[Token(Token = "0x2000098")]
public enum e_SwitchGroupEvent
{
	[Token(Token = "0x4000355")]
	Unknown,
	[Token(Token = "0x4000356")]
	Bullet_Hit_Material_Switch_Group,
	[Token(Token = "0x4000357")]
	Gun_Switch_Group,
	[Token(Token = "0x4000358")]
	AMB_Switch_Group
}
[Token(Token = "0x2000099")]
public enum e_SwitchEvent
{
	[Token(Token = "0x400035A")]
	Unknown = 0,
	[Token(Token = "0x400035B")]
	Cement = 1000,
	[Token(Token = "0x400035C")]
	Sand = 1001,
	[Token(Token = "0x400035D")]
	Wood = 1002,
	[Token(Token = "0x400035E")]
	Metal = 1003,
	[Token(Token = "0x400035F")]
	Shield = 1004,
	[Token(Token = "0x4000360")]
	Glass = 1005,
	[Token(Token = "0x4000361")]
	Glass_Die = 1006,
	[Token(Token = "0x4000362")]
	Meat = 1007,
	[Token(Token = "0x4000363")]
	Helmet_Blood = 1008,
	[Token(Token = "0x4000364")]
	Major_Voice_Hurt = 1009,
	[Token(Token = "0x4000365")]
	Crystal = 1010,
	[Token(Token = "0x4000366")]
	Lava = 1011,
	[Token(Token = "0x4000367")]
	Rocket = 1012,
	[Token(Token = "0x4000368")]
	Water = 1013,
	[Token(Token = "0x4000369")]
	Major_Voice_Hurt_Female = 1014,
	[Token(Token = "0x400036A")]
	Pistol = 2000,
	[Token(Token = "0x400036B")]
	Machinegun = 2001,
	[Token(Token = "0x400036C")]
	Rifle = 2002,
	[Token(Token = "0x400036D")]
	Crossbow = 2003,
	[Token(Token = "0x400036E")]
	Heavymachinegun = 2004,
	[Token(Token = "0x400036F")]
	Submachinegun = 2005,
	[Token(Token = "0x4000370")]
	Pistol_Other = 2006,
	[Token(Token = "0x4000371")]
	Machinegun_Other = 2007,
	[Token(Token = "0x4000372")]
	Rifle_Other = 2008,
	[Token(Token = "0x4000373")]
	Crossbow_Other = 2009,
	[Token(Token = "0x4000374")]
	Heavymachinegun_Other = 2010,
	[Token(Token = "0x4000375")]
	Submachinegun_Other = 2011,
	[Token(Token = "0x4000376")]
	Rocket_Other = 2012,
	[Token(Token = "0x4000377")]
	AMB_Inside = 3001,
	[Token(Token = "0x4000378")]
	AMB_Outside = 3002
}
[Token(Token = "0x200009A")]
public enum e_StateGroupEvent : uint
{
	[Token(Token = "0x400037A")]
	Unknown = 0u,
	[Token(Token = "0x400037B")]
	Music_State_Group = 1000u
}
[Token(Token = "0x200009B")]
public enum e_StateEvent : uint
{
	[Token(Token = "0x400037D")]
	Unknown = 0u,
	[Token(Token = "0x400037E")]
	BGM_Not_Encountered = 1001u,
	[Token(Token = "0x400037F")]
	BGM_Battle_Fight_Nomal = 1002u,
	[Token(Token = "0x4000380")]
	BGM_Battle_Fight_Climax = 1003u,
	[Token(Token = "0x4000381")]
	BGM_Battle_Fight_Boss = 1004u,
	[Token(Token = "0x4000382")]
	BGM_Locker_Room = 1005u,
	[Token(Token = "0x4000383")]
	BGM_Count = 1007u,
	[Token(Token = "0x4000384")]
	BGM_Battle_Fight_Nomal_Win = 1008u,
	[Token(Token = "0x4000385")]
	BGM_Battle_Fight_Climax_Win = 1009u,
	[Token(Token = "0x4000386")]
	BGM_Battle_Fight_Boss_End = 1010u,
	[Token(Token = "0x4000387")]
	BGM_Battle_Fight_Climax_01 = 1011u,
	[Token(Token = "0x4000388")]
	BGM_Battle_Fight_Climax_02 = 1012u,
	[Token(Token = "0x4000389")]
	BGM_Battle_Fight_Climax_03 = 1013u,
	[Token(Token = "0x400038A")]
	BGM_Battle_Fight_Climax_04 = 1014u,
	[Token(Token = "0x400038B")]
	BGM_Battle_Fight_Climax_05 = 1015u,
	[Token(Token = "0x400038C")]
	BGM_Battle_Fight_Climax_Win_01 = 1016u,
	[Token(Token = "0x400038D")]
	BGM_Battle_Fight_Climax_Win_02 = 1017u,
	[Token(Token = "0x400038E")]
	BGM_Battle_Fight_Climax_Win_03 = 1018u,
	[Token(Token = "0x400038F")]
	BGM_Battle_Fight_Climax_Win_04 = 1019u,
	[Token(Token = "0x4000390")]
	BGM_Battle_Fight_Climax_Win_05 = 1020u,
	[Token(Token = "0x4000391")]
	BGM_Battle_Fight_Large = 1021u,
	[Token(Token = "0x4000392")]
	BGM_Battle_Fight_Large_Win = 1022u,
	[Token(Token = "0x4000393")]
	BGM_Bridge01 = 1023u,
	[Token(Token = "0x4000394")]
	BGM_Bridge02 = 1024u,
	[Token(Token = "0x4000395")]
	BGM_Laser_Revive = 1025u,
	[Token(Token = "0x4000396")]
	BGM_Scanning_Revive = 1026u,
	[Token(Token = "0x4000397")]
	BGM_Lost = 1027u
}
[Token(Token = "0x200009C")]
internal class SoundManager : Singleton<SoundManager>
{
	[Token(Token = "0x2000479")]
	public enum BankType
	{
		[Token(Token = "0x4001AD5")]
		Global,
		[Token(Token = "0x4001AD6")]
		Lobby,
		[Token(Token = "0x4001AD7")]
		Battle,
		[Token(Token = "0x4001AD8")]
		LevelMusic
	}

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_isPrepared;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string>[] m_loadedBanks;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_soundRoot;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1417BD4", Offset = "0x1417BD4", VA = "0x1417BD4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1417E34", Offset = "0x1417E34", VA = "0x1417E34")]
	public void LoadBank(string bankName, BankType bankType)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1417F4C", Offset = "0x1417F4C", VA = "0x1417F4C")]
	public uint PostEvent(string eventName, [Optional] GameObject srcGameObject)
	{
		return default(uint);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x14180A4", Offset = "0x14180A4", VA = "0x14180A4")]
	public void Prepare()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1418128", Offset = "0x1418128", VA = "0x1418128")]
	public void UnLoadBank(string bankName, BankType bankType)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1418200", Offset = "0x1418200", VA = "0x1418200")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x200009D")]
public enum AudioType
{
	[Token(Token = "0x400039C")]
	Start = 1,
	[Token(Token = "0x400039D")]
	Stop
}
[Token(Token = "0x200009E")]
public class WwiseDefine : MonoBehaviour, IAudioDefine
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wwiseRoot;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkGameObj akGameObj;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEvent audioEvent;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action action;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string audioEventName;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool objNeedDestroy;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isUseObstruction;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchInfoData switchInfoData;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioType audioType;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AkCallbackManager.EventCallback ec;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AutoDestroy auto;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x29F032C", Offset = "0x29F032C", VA = "0x29F032C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x29F03A4", Offset = "0x29F03A4", VA = "0x29F03A4", Slot = "4")]
	public void Init(params object[] args)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x29F0A64", Offset = "0x29F0A64", VA = "0x29F0A64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x29F0AE4", Offset = "0x29F0AE4", VA = "0x29F0AE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x29F0BDC", Offset = "0x29F0BDC", VA = "0x29F0BDC", Slot = "5")]
	public void Play()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x29F0F1C", Offset = "0x29F0F1C", VA = "0x29F0F1C")]
	private void OnAkCallback(object o1, AkCallbackType o2, object o3)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x29F1390", Offset = "0x29F1390", VA = "0x29F1390", Slot = "6")]
	public void Stop()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x29F1758", Offset = "0x29F1758", VA = "0x29F1758", Slot = "7")]
	public void Pause()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x29F1800", Offset = "0x29F1800", VA = "0x29F1800", Slot = "8")]
	public void Resume()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x29F0BD0", Offset = "0x29F0BD0", VA = "0x29F0BD0", Slot = "9")]
	public void SetEnable(bool isEnable)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x29F18A8", Offset = "0x29F18A8", VA = "0x29F18A8")]
	public WwiseDefine()
	{
	}
}
[Token(Token = "0x200009F")]
public class WwiseInit : MonoBehaviour
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD67E4", Offset = "0xFD67E4")]
	private static WwiseInit <Instance>k__BackingField;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD67F4", Offset = "0xFD67F4")]
	[SerializeField]
	private string language;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6840", Offset = "0xFD6840")]
	[SerializeField]
	private bool engineLogging;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD688C", Offset = "0xFD688C")]
	[SerializeField]
	public List<string> contentPath;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<string> voContentPath;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkInitializer akInitializer;

	[Token(Token = "0x1700003B")]
	public static WwiseInit Instance
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x29F1B10", Offset = "0x29F1B10", VA = "0x29F1B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC004", Offset = "0xFDC004")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x29F1B60", Offset = "0x29F1B60", VA = "0x29F1B60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC014", Offset = "0xFDC014")]
		private set
		{
		}
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x29F1BB8", Offset = "0x29F1BB8", VA = "0x29F1BB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x29F1DF4", Offset = "0x29F1DF4", VA = "0x29F1DF4")]
	public void LoadLanguageVoBank()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x29F2658", Offset = "0x29F2658", VA = "0x29F2658")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x29F27D0", Offset = "0x29F27D0", VA = "0x29F27D0")]
	public WwiseInit()
	{
	}
}
[Token(Token = "0x20000A0")]
public class WwiseObstruction : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200047A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5844", Offset = "0xFD5844")]
	private sealed class <>c
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__16_0;

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x29F31F0", Offset = "0x29F31F0", VA = "0x29F31F0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x29F31F8", Offset = "0x29F31F8", VA = "0x29F31F8")]
		internal int <ObstructionProcessing>b__16_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkAudioListener> akAudioListeners;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isStart;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MaxDis;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ObstructionValue;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask layerMask;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float refreshInterval;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float timer;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x29F2954", Offset = "0x29F2954", VA = "0x29F2954")]
	public void WwiseObstructionDoStart()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x29F0898", Offset = "0x29F0898", VA = "0x29F0898")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x29F2FC8", Offset = "0x29F2FC8", VA = "0x29F2FC8")]
	public void DoStop()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x29F2FD4", Offset = "0x29F2FD4", VA = "0x29F2FD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x29F3074", Offset = "0x29F3074", VA = "0x29F3074")]
	private void OnUpdate()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x29F2958", Offset = "0x29F2958", VA = "0x29F2958")]
	private void ObstructionProcessing()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x29F30CC", Offset = "0x29F30CC", VA = "0x29F30CC")]
	public WwiseObstruction()
	{
	}
}
[Token(Token = "0x20000A1")]
public class Wwise_SetRTPC : MonoBehaviour
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RTPCEvent RTPC_Event;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RTPC_Value;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x29F38FC", Offset = "0x29F38FC", VA = "0x29F38FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x29F3980", Offset = "0x29F3980", VA = "0x29F3980")]
	public Wwise_SetRTPC()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD194C", Offset = "0xFD194C")]
public class BuffAttribute : BaseAttribute
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6908", Offset = "0xFD6908")]
	private short <BuffTypeId>k__BackingField;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6918", Offset = "0xFD6918")]
	private Type <BuffType>k__BackingField;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6928", Offset = "0xFD6928")]
	private Type <BuffDataType>k__BackingField;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6938", Offset = "0xFD6938")]
	private bool <IsMultiple>k__BackingField;

	[Token(Token = "0x1700003C")]
	public short BuffTypeId
	{
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x16474D0", Offset = "0x16474D0", VA = "0x16474D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC024", Offset = "0xFDC024")]
		get
		{
			return default(short);
		}
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x16474D8", Offset = "0x16474D8", VA = "0x16474D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC034", Offset = "0xFDC034")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public Type BuffType
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x16474E0", Offset = "0x16474E0", VA = "0x16474E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC044", Offset = "0xFDC044")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x16474E8", Offset = "0x16474E8", VA = "0x16474E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC054", Offset = "0xFDC054")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public Type BuffDataType
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x16474F0", Offset = "0x16474F0", VA = "0x16474F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC064", Offset = "0xFDC064")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x16474F8", Offset = "0x16474F8", VA = "0x16474F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC074", Offset = "0xFDC074")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public bool IsMultiple
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x1647500", Offset = "0x1647500", VA = "0x1647500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC084", Offset = "0xFDC084")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x1647508", Offset = "0x1647508", VA = "0x1647508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC094", Offset = "0xFDC094")]
		private set
		{
		}
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1647514", Offset = "0x1647514", VA = "0x1647514")]
	public BuffAttribute(short typeId, Type buffType, [Optional] Type buffDataType, bool isMultiple = false)
	{
	}
}
[Token(Token = "0x20000A3")]
public class BuffBase<T> : IBuff where T : IBuffData
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6948", Offset = "0xFD6948")]
	private int <BuffId>k__BackingField;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6958", Offset = "0xFD6958")]
	private short <BuffType>k__BackingField;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6968", Offset = "0xFD6968")]
	private T <Data>k__BackingField;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6978", Offset = "0xFD6978")]
	private bool <IsCanDestory>k__BackingField;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6988", Offset = "0xFD6988")]
	private int <AttackerId>k__BackingField;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6998", Offset = "0xFD6998")]
	private int <HurterId>k__BackingField;

	[Token(Token = "0x17000040")]
	public int BuffId
	{
		[Token(Token = "0x600026A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC0A4", Offset = "0xFDC0A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC0B4", Offset = "0xFDC0B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public short BuffType
	{
		[Token(Token = "0x600026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC0C4", Offset = "0xFDC0C4")]
		get
		{
			return default(short);
		}
		[Token(Token = "0x600026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC0D4", Offset = "0xFDC0D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public bool IsMultiple
	{
		[Token(Token = "0x600026E")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000043")]
	public T Data
	{
		[Token(Token = "0x600026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC0E4", Offset = "0xFDC0E4")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC0F4", Offset = "0xFDC0F4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public bool IsCanDestory
	{
		[Token(Token = "0x6000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC104", Offset = "0xFDC104")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC114", Offset = "0xFDC114")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public int AttackerId
	{
		[Token(Token = "0x6000273")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC124", Offset = "0xFDC124")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC134", Offset = "0xFDC134")]
		private set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public int HurterId
	{
		[Token(Token = "0x6000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC144", Offset = "0xFDC144")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000276")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC154", Offset = "0xFDC154")]
		private set
		{
		}
	}

	[Token(Token = "0x6000277")]
	public BuffBase(int id, short type, IBuffData buffData)
	{
	}

	[Token(Token = "0x6000278")]
	public void Init(int attackerId, int hurterId, string dataJson)
	{
	}

	[Token(Token = "0x6000279")]
	public void SetData(string dataJson)
	{
	}

	[Token(Token = "0x600027A")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600027B")]
	public virtual void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x600027C")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x600027D")]
	public int GetId()
	{
		return default(int);
	}

	[Token(Token = "0x600027E")]
	public short GetBuffType()
	{
		return default(short);
	}

	[Token(Token = "0x600027F")]
	public bool GetIsCanDestory()
	{
		return default(bool);
	}

	[Token(Token = "0x6000280")]
	public bool GetIsMultiple()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A4")]
public class BuffFactory : Singleton<BuffFactory>
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<short, BuffAttribute> buffTypeDic;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1647584", Offset = "0x1647584", VA = "0x1647584")]
	public BuffFactory()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1647870", Offset = "0x1647870", VA = "0x1647870")]
	public IBuff Create(int buffId, short bufftype)
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1647AA0", Offset = "0x1647AA0", VA = "0x1647AA0")]
	public bool IsMultiple(short BuffType)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A5")]
public interface IBuff
{
	[Token(Token = "0x6000284")]
	void Init(int attackerId, int hurterId, string dataJson);

	[Token(Token = "0x6000285")]
	void Start();

	[Token(Token = "0x6000286")]
	void DoUpdate(float deltaTime, int millisDeltaTime);

	[Token(Token = "0x6000287")]
	void Stop();

	[Token(Token = "0x6000288")]
	void SetData(string dataJson);

	[Token(Token = "0x6000289")]
	int GetId();

	[Token(Token = "0x600028A")]
	short GetBuffType();

	[Token(Token = "0x600028B")]
	bool GetIsCanDestory();

	[Token(Token = "0x600028C")]
	bool GetIsMultiple();
}
[Token(Token = "0x20000A6")]
public interface IBuffData
{
	[Token(Token = "0x600028D")]
	string Serialize();

	[Token(Token = "0x600028E")]
	void Deserialize(string json);
}
[Token(Token = "0x20000A7")]
public class CoroutineManager : Singleton<CoroutineManager>
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HashSet<ICoroutineControl> catchCells;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x13D109C", Offset = "0x13D109C", VA = "0x13D109C")]
	public UnityCoroutineControl CreateUnityCoroutineControl(string name)
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x13D1174", Offset = "0x13D1174", VA = "0x13D1174")]
	private void CloseCoroutineControl(ICoroutineControl cell)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x13D128C", Offset = "0x13D128C", VA = "0x13D128C")]
	public void CloseAll()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x13D1374", Offset = "0x13D1374", VA = "0x13D1374")]
	public CoroutineManager()
	{
	}
}
[Token(Token = "0x20000A8")]
public interface ICoroutineControl
{
	[Token(Token = "0x6000293")]
	void StopAll();

	[Token(Token = "0x6000294")]
	void Close();

	[Token(Token = "0x6000295")]
	void Stop(ICoroutineControlCell cell);
}
[Token(Token = "0x20000A9")]
public interface ICoroutineControlCell
{
	[Token(Token = "0x6000296")]
	void Stop();
}
[Token(Token = "0x20000AA")]
public class UnityCoroutineControl : MonoBehaviour, ICoroutineControl
{
	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5854", Offset = "0xFD5854")]
	private sealed class <_Delay>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x170003B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002498")]
			[Address(RVA = "0x1470D9C", Offset = "0x1470D9C", VA = "0x1470D9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600249A")]
			[Address(RVA = "0x1470E04", Offset = "0x1470E04", VA = "0x1470E04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x147016C", Offset = "0x147016C", VA = "0x147016C")]
		[DebuggerHidden]
		public <_Delay>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x1470CD8", Offset = "0x1470CD8", VA = "0x1470CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x1470CDC", Offset = "0x1470CDC", VA = "0x1470CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x1470DA4", Offset = "0x1470DA4", VA = "0x1470DA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5864", Offset = "0xFD5864")]
	private sealed class <_Loop>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x170003BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600249E")]
			[Address(RVA = "0x1471204", Offset = "0x1471204", VA = "0x1471204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x147126C", Offset = "0x147126C", VA = "0x147126C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x147041C", Offset = "0x147041C", VA = "0x147041C")]
		[DebuggerHidden]
		public <_Loop>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x1471130", Offset = "0x1471130", VA = "0x1471130", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x1471134", Offset = "0x1471134", VA = "0x1471134", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x147120C", Offset = "0x147120C", VA = "0x147120C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5874", Offset = "0xFD5874")]
	private sealed class <_Loop>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time1;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time2;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x170003BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024A4")]
			[Address(RVA = "0x1471354", Offset = "0x1471354", VA = "0x1471354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x14713BC", Offset = "0x14713BC", VA = "0x14713BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x1470584", Offset = "0x1470584", VA = "0x1470584")]
		[DebuggerHidden]
		public <_Loop>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x1471274", Offset = "0x1471274", VA = "0x1471274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x1471278", Offset = "0x1471278", VA = "0x1471278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x147135C", Offset = "0x147135C", VA = "0x147135C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5884", Offset = "0xFD5884")]
	private sealed class <_Loop>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x170003BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024AA")]
			[Address(RVA = "0x147148C", Offset = "0x147148C", VA = "0x147148C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024AC")]
			[Address(RVA = "0x14714F4", Offset = "0x14714F4", VA = "0x14714F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x14706F0", Offset = "0x14706F0", VA = "0x14706F0")]
		[DebuggerHidden]
		public <_Loop>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x14713C4", Offset = "0x14713C4", VA = "0x14713C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x14713C8", Offset = "0x14713C8", VA = "0x14713C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x1471494", Offset = "0x1471494", VA = "0x1471494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5894", Offset = "0xFD5894")]
	private sealed class <_Frame>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<bool> func;

		[Token(Token = "0x170003C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B0")]
			[Address(RVA = "0x14710C0", Offset = "0x14710C0", VA = "0x14710C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x1471128", Offset = "0x1471128", VA = "0x1471128", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x1470844", Offset = "0x1470844", VA = "0x1470844")]
		[DebuggerHidden]
		public <_Frame>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x1471018", Offset = "0x1471018", VA = "0x1471018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x147101C", Offset = "0x147101C", VA = "0x147101C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x14710C8", Offset = "0x14710C8", VA = "0x14710C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000480")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD58A4", Offset = "0xFD58A4")]
	private sealed class <_Frame>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x170003C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x1470FA8", Offset = "0x1470FA8", VA = "0x1470FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x1471010", Offset = "0x1471010", VA = "0x1471010", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x1470988", Offset = "0x1470988", VA = "0x1470988")]
		[DebuggerHidden]
		public <_Frame>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1470F30", Offset = "0x1470F30", VA = "0x1470F30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x1470F34", Offset = "0x1470F34", VA = "0x1470F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1470FB0", Offset = "0x1470FB0", VA = "0x1470FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD58B4", Offset = "0xFD58B4")]
	private sealed class <_EndOfFrame>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x170003C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x1470EC0", Offset = "0x1470EC0", VA = "0x1470EC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x1470F28", Offset = "0x1470F28", VA = "0x1470F28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x1470ACC", Offset = "0x1470ACC", VA = "0x1470ACC")]
		[DebuggerHidden]
		public <_EndOfFrame>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1470E0C", Offset = "0x1470E0C", VA = "0x1470E0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1470E10", Offset = "0x1470E10", VA = "0x1470E10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x1470EC8", Offset = "0x1470EC8", VA = "0x1470EC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x14700E0", Offset = "0x14700E0", VA = "0x14700E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC164", Offset = "0xFDC164")]
	private static IEnumerator _Delay(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1470198", Offset = "0x1470198", VA = "0x1470198")]
	public ICoroutineControlCell Delay(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1470360", Offset = "0x1470360", VA = "0x1470360")]
	public ICoroutineControlCell Delay(float time1, float time2, Action action)
	{
		return null;
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1470390", Offset = "0x1470390", VA = "0x1470390")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC1C8", Offset = "0xFDC1C8")]
	private static IEnumerator _Loop(float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1470448", Offset = "0x1470448", VA = "0x1470448")]
	public ICoroutineControlCell Loop(float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x14704F4", Offset = "0x14704F4", VA = "0x14704F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC22C", Offset = "0xFDC22C")]
	private static IEnumerator _Loop(float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x14705B0", Offset = "0x14705B0", VA = "0x14705B0")]
	public ICoroutineControlCell Loop(float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1470664", Offset = "0x1470664", VA = "0x1470664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC290", Offset = "0xFDC290")]
	private static IEnumerator _Loop(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x147071C", Offset = "0x147071C", VA = "0x147071C")]
	public ICoroutineControlCell Loop(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x14707C8", Offset = "0x14707C8", VA = "0x14707C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC2F4", Offset = "0xFDC2F4")]
	private static IEnumerator _Frame(Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1470870", Offset = "0x1470870", VA = "0x1470870")]
	public ICoroutineControlCell Frame(Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x147090C", Offset = "0x147090C", VA = "0x147090C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC358", Offset = "0xFDC358")]
	private static IEnumerator _Frame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x14709B4", Offset = "0x14709B4", VA = "0x14709B4")]
	public ICoroutineControlCell Frame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1470A50", Offset = "0x1470A50", VA = "0x1470A50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC3BC", Offset = "0xFDC3BC")]
	private static IEnumerator _EndOfFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1470AF8", Offset = "0x1470AF8", VA = "0x1470AF8")]
	public ICoroutineControlCell EndOfFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1470B94", Offset = "0x1470B94", VA = "0x1470B94", Slot = "4")]
	public void StopAll()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1470B9C", Offset = "0x1470B9C", VA = "0x1470B9C", Slot = "5")]
	public void Close()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1470C24", Offset = "0x1470C24", VA = "0x1470C24", Slot = "6")]
	public void Stop(ICoroutineControlCell cell)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1470CD0", Offset = "0x1470CD0", VA = "0x1470CD0")]
	public UnityCoroutineControl()
	{
	}
}
[Token(Token = "0x20000AB")]
public class UnityCoroutineControlCell : ICoroutineControlCell
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MonoBehaviour root;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine coroutine;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1470264", Offset = "0x1470264", VA = "0x1470264")]
	public void Init(MonoBehaviour _root, Coroutine _coroutine)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x14714FC", Offset = "0x14714FC", VA = "0x14714FC", Slot = "4")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x147025C", Offset = "0x147025C", VA = "0x147025C")]
	public UnityCoroutineControlCell()
	{
	}
}
[Token(Token = "0x20000AC")]
public class EludePoint : MonoBehaviour
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsUsed;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eMonsterAttackType MonsterAttackType;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public eMonsterAttackDirType MonsterAttackDirType;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD69A8", Offset = "0xFD69A8")]
	private WUnit <UseOwner>k__BackingField;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] numChar;

	[Token(Token = "0x17000047")]
	public WUnit UseOwner
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x13E2DBC", Offset = "0x13E2DBC", VA = "0x13E2DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC420", Offset = "0xFDC420")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x13E2DC4", Offset = "0x13E2DC4", VA = "0x13E2DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC430", Offset = "0xFDC430")]
		set
		{
		}
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x13E2DCC", Offset = "0x13E2DCC", VA = "0x13E2DCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x13E2F88", Offset = "0x13E2F88", VA = "0x13E2F88")]
	public void SetUseStatus(bool isUsed, WUnit owner)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x13E2F9C", Offset = "0x13E2F9C", VA = "0x13E2F9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x13E2FA0", Offset = "0x13E2FA0", VA = "0x13E2FA0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x13E2FA4", Offset = "0x13E2FA4", VA = "0x13E2FA4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x13E3108", Offset = "0x13E3108", VA = "0x13E3108")]
	public EludePoint()
	{
	}
}
[Token(Token = "0x20000AD")]
public class EludePointCell
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private EludePoint ePoint;

	[Token(Token = "0x17000048")]
	public EludePoint EPoint
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x13E3190", Offset = "0x13E3190", VA = "0x13E3190")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x13E3198", Offset = "0x13E3198", VA = "0x13E3198")]
	public void Init(EludePoint point)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x13E31D8", Offset = "0x13E31D8", VA = "0x13E31D8")]
	public void UnInit()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x13E321C", Offset = "0x13E321C", VA = "0x13E321C")]
	public void SetUseStatus(bool isUsed, WUnit unit)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x13E32D0", Offset = "0x13E32D0", VA = "0x13E32D0")]
	public bool IsUsed()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x13E32EC", Offset = "0x13E32EC", VA = "0x13E32EC")]
	public bool IsSameOwner(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x13E338C", Offset = "0x13E338C", VA = "0x13E338C")]
	public Vector3 Position()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x13E3450", Offset = "0x13E3450", VA = "0x13E3450")]
	public EludePointCell()
	{
	}
}
[Token(Token = "0x20000AE")]
public class EludePointManager : Singleton<EludePointManager>
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, EludePointCell> EludePointDic;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x13E3458", Offset = "0x13E3458", VA = "0x13E3458")]
	public void SetAreaEludePoint(int area, List<EludePoint> eludePointList)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x13E345C", Offset = "0x13E345C", VA = "0x13E345C")]
	public void SetUseEludePoint(int id, WUnit owner)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x13E3574", Offset = "0x13E3574", VA = "0x13E3574")]
	public void SetNoUseEludePoint(int id)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x13E3680", Offset = "0x13E3680", VA = "0x13E3680")]
	public void SetNoUseEludePointByUnit(WUnit unit)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x13E37E0", Offset = "0x13E37E0", VA = "0x13E37E0")]
	public bool IsUnitInElude(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x13E3904", Offset = "0x13E3904", VA = "0x13E3904")]
	public EludePointCell GetCloseEPCell(Vector3 pos, float dis)
	{
		return null;
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x13E3B48", Offset = "0x13E3B48", VA = "0x13E3B48")]
	public void CleanEludePoint()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x13E3C60", Offset = "0x13E3C60", VA = "0x13E3C60")]
	public EludePointManager()
	{
	}
}
[Token(Token = "0x20000AF")]
public class MonsterElude : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsInit;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x14B9494", Offset = "0x14B9494", VA = "0x14B9494")]
	public void Init()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x14B9554", Offset = "0x14B9554", VA = "0x14B9554")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x14B95D8", Offset = "0x14B95D8", VA = "0x14B95D8")]
	public MonsterElude()
	{
	}
}
[Token(Token = "0x20000B0")]
public static class EventDefine
{
}
[Token(Token = "0x20000B1")]
public class EventManager
{
	[Token(Token = "0x2000482")]
	public delegate void EventDelegate(params object[] args);

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventManager _instance;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, List<EventEntity>> eventHash;

	[Token(Token = "0x17000049")]
	public static EventManager Instance
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x13E55FC", Offset = "0x13E55FC", VA = "0x13E55FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x13E56FC", Offset = "0x13E56FC", VA = "0x13E56FC")]
	public void AddEventListener(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x13E59CC", Offset = "0x13E59CC", VA = "0x13E59CC")]
	public void RemoveEventListener(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x13E5A80", Offset = "0x13E5A80", VA = "0x13E5A80")]
	public void NotifyEvent(int eventId, params object[] args)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x13E5700", Offset = "0x13E5700", VA = "0x13E5700")]
	private void AddEventListenerImpl(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x13E59D0", Offset = "0x13E59D0", VA = "0x13E59D0")]
	private void RemoveEventListenerImpl(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x13E5F04", Offset = "0x13E5F04", VA = "0x13E5F04")]
	private bool IsHasEventDelegate(List<EventEntity> eventlist, EventDelegate eventFunc)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x13E5FB4", Offset = "0x13E5FB4", VA = "0x13E5FB4")]
	private bool RemoveEventDelegate(int eventId, List<EventEntity> eventlist, EventDelegate eventFunc)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x13E5680", Offset = "0x13E5680", VA = "0x13E5680")]
	public EventManager()
	{
	}
}
[Token(Token = "0x20000B2")]
public class EventEntity
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EventManager.EventDelegate func;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x13E51F0", Offset = "0x13E51F0", VA = "0x13E51F0")]
	public EventEntity(EventManager.EventDelegate func)
	{
	}
}
[Token(Token = "0x20000B3")]
public class FloatingBase : MonoBehaviour
{
	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x15EF1F4", Offset = "0x15EF1F4", VA = "0x15EF1F4", Slot = "4")]
	public virtual void Init(Transform ownerTrn, Transform lookAtTrn, Vector3 forward)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x15EF1F8", Offset = "0x15EF1F8", VA = "0x15EF1F8", Slot = "5")]
	public virtual void SetInfo(int extraState, int minDg, int maxDg)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x15EF1FC", Offset = "0x15EF1FC", VA = "0x15EF1FC", Slot = "6")]
	public virtual void Floating(int value)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x15EF200", Offset = "0x15EF200", VA = "0x15EF200", Slot = "7")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x15EF204", Offset = "0x15EF204", VA = "0x15EF204")]
	public FloatingBase()
	{
	}
}
[Token(Token = "0x20000B4")]
public class FloatingDamage : FloatingBase
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Txt;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform MoveTxt;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RotTxt;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform OwnerTrn;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform LookAtTrn;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD69B8", Offset = "0xFD69B8")]
	public float Time;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD69F0", Offset = "0xFD69F0")]
	public float BeginH;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6A28", Offset = "0xFD6A28")]
	public float MiddleH;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6A60", Offset = "0xFD6A60")]
	public float CubeL;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6A98", Offset = "0xFD6A98")]
	public float CubeW;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6AD0", Offset = "0xFD6AD0")]
	public float CubeH;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6B08", Offset = "0xFD6B08")]
	public float CubeR;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6B40", Offset = "0xFD6B40")]
	public float downBL;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6B78", Offset = "0xFD6B78")]
	public float downBW;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6BB0", Offset = "0xFD6BB0")]
	public float downEL;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6BE8", Offset = "0xFD6BE8")]
	public float downEW;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6C20", Offset = "0xFD6C20")]
	public float ScaleBRatio;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6C58", Offset = "0xFD6C58")]
	public float ScaleMRatio;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6C90", Offset = "0xFD6C90")]
	public float ScaleERatio;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6CC8", Offset = "0xFD6CC8")]
	public int MinFontSize;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6D00", Offset = "0xFD6D00")]
	public int MaxFontSize;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6D38", Offset = "0xFD6D38")]
	public int ExtraMinFontSize;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD6D70", Offset = "0xFD6D70")]
	public int ExtraMaxFontSize;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 bPoint;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 sPoint;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 tPoint;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 pForward;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 pRight;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 pUp;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int extraState;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int inputMinDamage;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int inputMaxDamage;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Tween mMoveTn;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Tween mGradientTn;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Tween mScaleTn;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, string> expStrDic;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x15EF20C", Offset = "0x15EF20C", VA = "0x15EF20C", Slot = "4")]
	public override void Init(Transform ownerTrn, Transform lookAtTrn, Vector3 forward)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x15EF378", Offset = "0x15EF378", VA = "0x15EF378", Slot = "5")]
	public override void SetInfo(int extraState, int minDg, int maxDg)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x15EF384", Offset = "0x15EF384", VA = "0x15EF384")]
	public static string GetExpStr(int num)
	{
		return null;
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x15EF490", Offset = "0x15EF490", VA = "0x15EF490", Slot = "6")]
	public override void Floating(int value)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x15EFFC0", Offset = "0x15EFFC0", VA = "0x15EFFC0")]
	private void WaypointChange(int index)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x15EFDDC", Offset = "0x15EFDDC", VA = "0x15EFDDC")]
	private void Finish()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x15EFD44", Offset = "0x15EFD44", VA = "0x15EFD44")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x15F01F0", Offset = "0x15F01F0", VA = "0x15F01F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x15EFE60", Offset = "0x15EFE60", VA = "0x15EFE60")]
	private int GetTextSize(int damage)
	{
		return default(int);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x15F0294", Offset = "0x15F0294", VA = "0x15F0294", Slot = "7")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x15F02C0", Offset = "0x15F02C0", VA = "0x15F02C0")]
	public FloatingDamage()
	{
	}
}
[Token(Token = "0x20000B5")]
public class FloatingEffectManager : Singleton<FloatingEffectManager>
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<FloatingBase> collectList;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<FloatingBase> recycleList;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isEnter;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isStart;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject floatingPrefab;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform floatingRoot;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int preNumber;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x15F044C", Offset = "0x15F044C", VA = "0x15F044C")]
	public void Enter()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x15F05C0", Offset = "0x15F05C0", VA = "0x15F05C0")]
	public void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x15F05C4", Offset = "0x15F05C4", VA = "0x15F05C4")]
	public void Start()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x15F05D0", Offset = "0x15F05D0", VA = "0x15F05D0")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x15F05D8", Offset = "0x15F05D8", VA = "0x15F05D8")]
	public void Clear()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x15F06BC", Offset = "0x15F06BC", VA = "0x15F06BC")]
	public void Exit()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x15F0874", Offset = "0x15F0874", VA = "0x15F0874")]
	public void Floating(Transform ownerTrn, Transform lookAtTrn, Vector3 forward, int value, int extraState, int minDg, int maxDg)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x15F0A9C", Offset = "0x15F0A9C", VA = "0x15F0A9C")]
	public FloatingBase UseFloating(Transform ownerTrn, Transform lookAtTrn, Vector3 forward)
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x15F0118", Offset = "0x15F0118", VA = "0x15F0118")]
	public void Remove(FloatingBase floating)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x15F05DC", Offset = "0x15F05DC", VA = "0x15F05DC")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x15F06C4", Offset = "0x15F06C4", VA = "0x15F06C4")]
	public void DestroyAll()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x15F0508", Offset = "0x15F0508", VA = "0x15F0508")]
	private void PreFloating()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x15F0BF0", Offset = "0x15F0BF0", VA = "0x15F0BF0")]
	private FloatingBase GetFloating()
	{
		return null;
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x15F0D54", Offset = "0x15F0D54", VA = "0x15F0D54")]
	private FloatingBase ProduceFloating()
	{
		return null;
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x15F0C78", Offset = "0x15F0C78", VA = "0x15F0C78")]
	private bool RecycleFloating(FloatingBase floating)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x15F0F14", Offset = "0x15F0F14", VA = "0x15F0F14")]
	public FloatingEffectManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B6")]
public class FlowNode
{
	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ID;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int SectionId;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SceneConfigId;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MonsterConfigId;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int GearConfigId;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int FlowNameID;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public e_FlowType FlowType;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite FlowIcon;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsBoss;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x15F0FF8", Offset = "0x15F0FF8", VA = "0x15F0FF8")]
	public FlowNode()
	{
	}
}
[Token(Token = "0x20000B7")]
public class FlowNodeCollector : MonoBehaviour
{
	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FlowNode> FlowList;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x15F100C", Offset = "0x15F100C", VA = "0x15F100C")]
	public FlowNodeCollector()
	{
	}
}
[Token(Token = "0x20000B8")]
public class RunningFlowNode
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int fId;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlowNode fNode;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int bId;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FlowNode bNode;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int nId;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlowNode nNode;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6DA8", Offset = "0xFD6DA8")]
	private bool <IsEnd>k__BackingField;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InstanceFlowNode ownerIns;

	[Token(Token = "0x1700004A")]
	public bool IsEnd
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x156C99C", Offset = "0x156C99C", VA = "0x156C99C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC440", Offset = "0xFDC440")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x156C9A4", Offset = "0x156C9A4", VA = "0x156C9A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC450", Offset = "0xFDC450")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public int FNodeSectionId
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x156C9B0", Offset = "0x156C9B0", VA = "0x156C9B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004C")]
	public int BNodeSectionId
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x156C9C8", Offset = "0x156C9C8", VA = "0x156C9C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004D")]
	public int NNodeSectionId
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x156C9E0", Offset = "0x156C9E0", VA = "0x156C9E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x156C9F8", Offset = "0x156C9F8", VA = "0x156C9F8")]
	public RunningFlowNode()
	{
	}
}
[Token(Token = "0x20000B9")]
public class RunningInstance
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int UseSelectInsId;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InstanceFlowNode UseSelectIns;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RunSelectInsId;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InstanceFlowNode RunSelectIns;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int tmpId;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InstanceFlowNode RunningIns;

	[Token(Token = "0x1700004E")]
	public int UseSelectInsFlowId
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x156CA10", Offset = "0x156CA10", VA = "0x156CA10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004F")]
	public int RunSelectInsFlowId
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x156CA28", Offset = "0x156CA28", VA = "0x156CA28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000050")]
	public int RunningInsId
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x156CA40", Offset = "0x156CA40", VA = "0x156CA40")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x156CA48", Offset = "0x156CA48", VA = "0x156CA48")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public int RunningInsFlowId
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x156CA50", Offset = "0x156CA50", VA = "0x156CA50")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x156CA68", Offset = "0x156CA68", VA = "0x156CA68")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x156CAB8", Offset = "0x156CAB8", VA = "0x156CAB8")]
	public void SetValues(int useSelectInsId, InstanceFlowNode useSelectIns, int runSelectInsId, InstanceFlowNode runSelectIns, int runningInsId, InstanceFlowNode runningIns)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x156CB28", Offset = "0x156CB28", VA = "0x156CB28")]
	public RunningInstance()
	{
	}
}
[Token(Token = "0x20000BA")]
public class GameFlowSystem : Singleton<GameFlowSystem>
{
	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD58C4", Offset = "0xFD58C4")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x15F5C70", Offset = "0x15F5C70", VA = "0x15F5C70")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x15F5ED0", Offset = "0x15F5ED0", VA = "0x15F5ED0")]
		internal bool <GetFlowNode>b__0(FlowNode a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int configStartNodeId;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool isStart;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FlowNodeCollector flowCollector;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RunningInstance RunningInsCot;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool IsBossRoomWin;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<RunningFlowNode> runningSeqNodes;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RunningFlowNode lastUseNode;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RunningFlowNode curRunningNode;

	[Token(Token = "0x17000052")]
	public int RunningInstanceId
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x15F3BC0", Offset = "0x15F3BC0", VA = "0x15F3BC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x15F3BDC", Offset = "0x15F3BDC", VA = "0x15F3BDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public int PassProgress
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x15F3BF8", Offset = "0x15F3BF8", VA = "0x15F3BF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000054")]
	public int FinalPassInstanceId
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x15F3C30", Offset = "0x15F3C30", VA = "0x15F3C30")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x15F3C4C", Offset = "0x15F3C4C", VA = "0x15F3C4C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x15F3D1C", Offset = "0x15F3D1C", VA = "0x15F3D1C")]
	public void PreStart()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x15F3E2C", Offset = "0x15F3E2C", VA = "0x15F3E2C")]
	public void Start()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x15F4098", Offset = "0x15F4098", VA = "0x15F4098")]
	public void Stop()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x15F4144", Offset = "0x15F4144", VA = "0x15F4144")]
	public void Update()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x15F4148", Offset = "0x15F4148", VA = "0x15F4148")]
	public void BossRoomWin()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x15F41EC", Offset = "0x15F41EC", VA = "0x15F41EC")]
	public void GotoNextRoom()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x15F4784", Offset = "0x15F4784", VA = "0x15F4784")]
	public void GotoPreparedRoom(int uid, bool isSelectIns)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x15F4820", Offset = "0x15F4820", VA = "0x15F4820")]
	public void PreparedRoomSelect(int uid)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x15F48D8", Offset = "0x15F48D8", VA = "0x15F48D8")]
	public void GotoBattleRoom()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x15F4A58", Offset = "0x15F4A58", VA = "0x15F4A58")]
	public void BattleRoomSelect()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x15F4B98", Offset = "0x15F4B98", VA = "0x15F4B98")]
	public void BattleRoomClean()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x15F4F18", Offset = "0x15F4F18", VA = "0x15F4F18")]
	public void BattleRoomPass(RunningFlowNode fNode)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x15F5034", Offset = "0x15F5034", VA = "0x15F5034")]
	public RunningFlowNode GetRunningFlowNodeById(int id)
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x15F50D8", Offset = "0x15F50D8", VA = "0x15F50D8")]
	public RunningFlowNode GetCurRunningFlowNode()
	{
		return null;
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x15F50E0", Offset = "0x15F50E0", VA = "0x15F50E0")]
	public void SyncRoomStatus(RoomType roomType, int valueI_1, int valueI_2, int valueI_3, int valueI_4, int valueI_5, int valueI_6)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x15F5300", Offset = "0x15F5300", VA = "0x15F5300")]
	public void EnterInstance()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x15F5304", Offset = "0x15F5304", VA = "0x15F5304")]
	public bool SelectInstance(int instanceId, InstanceFlowNode insFlowNode)
	{
		return default(bool);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x15F5B60", Offset = "0x15F5B60", VA = "0x15F5B60")]
	public FlowNode GetFlowNode(int id)
	{
		return null;
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x15F45F4", Offset = "0x15F45F4", VA = "0x15F45F4")]
	private void StartFlowNode(RunningFlowNode fNode)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x15F4538", Offset = "0x15F4538", VA = "0x15F4538")]
	private void EndFlowNode(RunningFlowNode fNode)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x15F5C78", Offset = "0x15F5C78", VA = "0x15F5C78")]
	private RunningFlowNode GetLastUseFlowNode()
	{
		return null;
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x15F4548", Offset = "0x15F4548", VA = "0x15F4548")]
	private RunningFlowNode GetCurFlowNode()
	{
		return null;
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x15F4348", Offset = "0x15F4348", VA = "0x15F4348")]
	private void unitHurt()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x15F4D28", Offset = "0x15F4D28", VA = "0x15F4D28")]
	private void unitNoHurt()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x15F3F38", Offset = "0x15F3F38", VA = "0x15F3F38")]
	public void PlatformNewDataOk()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x15F5D30", Offset = "0x15F5D30", VA = "0x15F5D30")]
	public void SyncInstanceViewStatus(int status, int capitalId)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x15F4600", Offset = "0x15F4600", VA = "0x15F4600")]
	public void SendSelectInstanceStatus(bool isUIOperate)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x15F5DF4", Offset = "0x15F5DF4", VA = "0x15F5DF4")]
	public GameFlowSystem()
	{
	}
}
[Token(Token = "0x20000BB")]
public enum RoomType
{
	[Token(Token = "0x4000423")]
	None,
	[Token(Token = "0x4000424")]
	BattleRoom,
	[Token(Token = "0x4000425")]
	PreparedRoom
}
[Token(Token = "0x20000BC")]
public class GameStageSystem : Singleton<GameStageSystem>
{
	[Serializable]
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD58D4", Offset = "0xFD58D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__18_0;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<WUnit> <>9__20_0;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__31_2;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__31_3;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__35_0;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action <>9__36_0;

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x14E862C", Offset = "0x14E862C", VA = "0x14E862C")]
		public <>c()
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x14E8634", Offset = "0x14E8634", VA = "0x14E8634")]
		internal void <DoInit>b__18_0(WUnit u)
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x14E8718", Offset = "0x14E8718", VA = "0x14E8718")]
		internal void <DoStart>b__20_0(WUnit u)
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x14E87FC", Offset = "0x14E87FC", VA = "0x14E87FC")]
		internal void <SyncBattleRoomStatus>b__31_2()
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x14E887C", Offset = "0x14E887C", VA = "0x14E887C")]
		internal void <SyncBattleRoomStatus>b__31_3()
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x14E88FC", Offset = "0x14E88FC", VA = "0x14E88FC")]
		internal void <GotoPreparedeRoom>b__35_0()
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x14E8978", Offset = "0x14E8978", VA = "0x14E8978")]
		internal void <RollBackPreparedeRoom>b__36_0()
		{
		}
	}

	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD58E4", Offset = "0xFD58E4")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoleSectionStatus fRoomStatus;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public RoleSectionStatus preStatus;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameStageSystem <>4__this;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlowNode node;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sceneConfigId;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isBoss;

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x14E7290", Offset = "0x14E7290", VA = "0x14E7290")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x14E89F4", Offset = "0x14E89F4", VA = "0x14E89F4")]
		internal void <SyncBattleRoomStatus>b__0()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x14E8C54", Offset = "0x14E8C54", VA = "0x14E8C54")]
		internal void <SyncBattleRoomStatus>b__1()
		{
		}
	}

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterMono controlMono;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RoomType roomType;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SSlidingRule rule;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SSlidingBlock block;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6DB8", Offset = "0xFD6DB8")]
	private int <Level>k__BackingField;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<List<FSMBattleRoom>> OnRoomResetPre;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Func<bool> KillCurrentEnemysCheck;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Func<bool> KillBossCheck;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action OnAllTeleport;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<FlowNode> OnAllTeleportWithRoomId;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnAllRollBack;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<FlowNode> OnKillCurrentEnemys;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<FlowNode> OnSelectInstance;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<FlowNode> OnPassCurrentRoom;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<FlowNode> OnPassCurrentRoomLoadEnd;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action<int> OnAllEnter;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action<SSlidingRuleSection> OnRoomUnLoadPre;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Action OnCharRollBack;

	[Token(Token = "0x17000055")]
	public RoomType RoomType
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x14E5024", Offset = "0x14E5024", VA = "0x14E5024")]
		get
		{
			return default(RoomType);
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x14E502C", Offset = "0x14E502C", VA = "0x14E502C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public int CurrentRoomID
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x14E5034", Offset = "0x14E5034", VA = "0x14E5034")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000057")]
	public SSlidingRuleSection CurrentRoom
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x14E5050", Offset = "0x14E5050", VA = "0x14E5050")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public SSlidingSeparateSection SafeRoom
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x14E506C", Offset = "0x14E506C", VA = "0x14E506C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public int Level
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x14E5088", Offset = "0x14E5088", VA = "0x14E5088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC460", Offset = "0xFDC460")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x14E5090", Offset = "0x14E5090", VA = "0x14E5090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC470", Offset = "0xFDC470")]
		set
		{
		}
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x14E5098", Offset = "0x14E5098", VA = "0x14E5098")]
	public void DoInit()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x14E52E8", Offset = "0x14E52E8", VA = "0x14E52E8")]
	public bool IsGameStatusEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x14E5394", Offset = "0x14E5394", VA = "0x14E5394")]
	public void DoStart()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x14E5940", Offset = "0x14E5940", VA = "0x14E5940")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x14E5B20", Offset = "0x14E5B20", VA = "0x14E5B20")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x14E5D2C", Offset = "0x14E5D2C", VA = "0x14E5D2C")]
	public void SendRoleRoom(int uid, int roomId)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x14E60E8", Offset = "0x14E60E8", VA = "0x14E60E8")]
	public void SendGotoCurrentBattleRoom(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x14E61F4", Offset = "0x14E61F4", VA = "0x14E61F4")]
	public void SendGotoPreparedRoomStatus(RoleSectionStatus status, int uid, int gotoId, bool isSelect)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x14E6BE8", Offset = "0x14E6BE8", VA = "0x14E6BE8")]
	public void BattleRoomClean(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x14E6C9C", Offset = "0x14E6C9C", VA = "0x14E6C9C")]
	public void BattleRoomSelect(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x14E6D50", Offset = "0x14E6D50", VA = "0x14E6D50")]
	public void BattleRoomPass(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x14E6E5C", Offset = "0x14E6E5C", VA = "0x14E6E5C")]
	public void SyncRoleRoom(int uid, int roomId)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x14E6F70", Offset = "0x14E6F70", VA = "0x14E6F70")]
	public void SyncBattleRoomStatus(RoomType roomType, int flowNodeId, int bRoomId, int fRoomId, int nRoomId, RoleSectionStatus fRoomStatus, int trsfValue)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x14E76E4", Offset = "0x14E76E4", VA = "0x14E76E4")]
	public void SyncPreparedRoomStatus(RoomType roomType, RoleSectionStatus status, int uid, int gotoId)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x14E7298", Offset = "0x14E7298", VA = "0x14E7298")]
	private void NetTeleport(bool state)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x14E7C78", Offset = "0x14E7C78", VA = "0x14E7C78")]
	public void OnPlayerTeleportEnd()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x14E7D08", Offset = "0x14E7D08", VA = "0x14E7D08")]
	public void GotoPreparedeRoom(bool isLoadScene = true)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x14E7B04", Offset = "0x14E7B04", VA = "0x14E7B04")]
	public void RollBackPreparedeRoom()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x14E7E84", Offset = "0x14E7E84", VA = "0x14E7E84")]
	public void AllRollBack()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x14E7EBC", Offset = "0x14E7EBC", VA = "0x14E7EBC")]
	public void OnPlayerTeleportBack()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x14E7F5C", Offset = "0x14E7F5C", VA = "0x14E7F5C")]
	public void NetKillCurrentEnemys(FlowNode node)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x14E81AC", Offset = "0x14E81AC", VA = "0x14E81AC")]
	public void NetSelectInstance(FlowNode node)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x14E74D4", Offset = "0x14E74D4", VA = "0x14E74D4")]
	public void NetPassCurrentRoom(FlowNode node)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x14E83BC", Offset = "0x14E83BC", VA = "0x14E83BC")]
	public void EnterCurrentRoomAfterLoadScene(FlowNode node)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x14E84F4", Offset = "0x14E84F4", VA = "0x14E84F4")]
	public GameStageSystem()
	{
	}
}
[Token(Token = "0x20000BD")]
public class SSlidingBlock
{
	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6DC8", Offset = "0xFD6DC8")]
	private RoleSectionStatus <FrontRoomStatus>k__BackingField;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6DD8", Offset = "0xFD6DD8")]
	private int <FrontRoomID>k__BackingField;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6DE8", Offset = "0xFD6DE8")]
	private SSlidingRuleSection <FrontSection>k__BackingField;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6DF8", Offset = "0xFD6DF8")]
	private int <BackRoomID>k__BackingField;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6E08", Offset = "0xFD6E08")]
	private SSlidingRuleSection <BackSection>k__BackingField;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6E18", Offset = "0xFD6E18")]
	private int <NextRoomID>k__BackingField;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6E28", Offset = "0xFD6E28")]
	private SSlidingRuleSection <NextSection>k__BackingField;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6E38", Offset = "0xFD6E38")]
	private SSlidingSeparateSection <SeparateSection>k__BackingField;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SSlidingRule rule;

	[Token(Token = "0x1700005A")]
	public RoleSectionStatus FrontRoomStatus
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x156F76C", Offset = "0x156F76C", VA = "0x156F76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC480", Offset = "0xFDC480")]
		get
		{
			return default(RoleSectionStatus);
		}
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x156F774", Offset = "0x156F774", VA = "0x156F774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC490", Offset = "0xFDC490")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public int FrontRoomID
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x156F77C", Offset = "0x156F77C", VA = "0x156F77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC4A0", Offset = "0xFDC4A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x156F784", Offset = "0x156F784", VA = "0x156F784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC4B0", Offset = "0xFDC4B0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public SSlidingRuleSection FrontSection
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x156F78C", Offset = "0x156F78C", VA = "0x156F78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC4C0", Offset = "0xFDC4C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x156F794", Offset = "0x156F794", VA = "0x156F794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC4D0", Offset = "0xFDC4D0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public int BackRoomID
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x156F79C", Offset = "0x156F79C", VA = "0x156F79C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC4E0", Offset = "0xFDC4E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x156F7A4", Offset = "0x156F7A4", VA = "0x156F7A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC4F0", Offset = "0xFDC4F0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public SSlidingRuleSection BackSection
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x156F7AC", Offset = "0x156F7AC", VA = "0x156F7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC500", Offset = "0xFDC500")]
		get
		{
			return null;
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x156F7B4", Offset = "0x156F7B4", VA = "0x156F7B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC510", Offset = "0xFDC510")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public int NextRoomID
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x156F7BC", Offset = "0x156F7BC", VA = "0x156F7BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC520", Offset = "0xFDC520")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x156F7C4", Offset = "0x156F7C4", VA = "0x156F7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC530", Offset = "0xFDC530")]
		private set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public SSlidingRuleSection NextSection
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x156F7CC", Offset = "0x156F7CC", VA = "0x156F7CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC540", Offset = "0xFDC540")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x156F7D4", Offset = "0x156F7D4", VA = "0x156F7D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC550", Offset = "0xFDC550")]
		private set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public SSlidingSeparateSection SeparateSection
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x156F7DC", Offset = "0x156F7DC", VA = "0x156F7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC560", Offset = "0xFDC560")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x156F7E4", Offset = "0x156F7E4", VA = "0x156F7E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC570", Offset = "0xFDC570")]
		private set
		{
		}
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x156F7EC", Offset = "0x156F7EC", VA = "0x156F7EC")]
	public void Init(SSlidingRule rule)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x156F884", Offset = "0x156F884", VA = "0x156F884")]
	public void Start()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x156FEDC", Offset = "0x156FEDC", VA = "0x156FEDC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x156FEE8", Offset = "0x156FEE8", VA = "0x156FEE8")]
	public void SendSlidingRoomStatus(int flowNodeId, int bRoomId, int fRoomId, int nRoomId, RoleSectionStatus fRoomStatus, bool isTransfer)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1570378", Offset = "0x1570378", VA = "0x1570378")]
	public void SetRoomClean(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1570384", Offset = "0x1570384", VA = "0x1570384")]
	public void SetRoomSelect(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1570390", Offset = "0x1570390", VA = "0x1570390")]
	public void SetRoomPass(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x157039C", Offset = "0x157039C", VA = "0x157039C")]
	public void GotoBattleRoom(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x15703A8", Offset = "0x15703A8", VA = "0x15703A8")]
	public void GotoPreparedRoom()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x15703AC", Offset = "0x15703AC", VA = "0x15703AC")]
	public bool ToTransfer(int value)
	{
		return default(bool);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1570370", Offset = "0x1570370", VA = "0x1570370")]
	private int TransferTo(bool isTrsf)
	{
		return default(int);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x156F8C8", Offset = "0x156F8C8", VA = "0x156F8C8")]
	public void SetBattleRoom(int flowNodeId, bool isTransfer, int bRoomId, int fRoomId, int nRoomId, RoleSectionStatus fRoomStatus)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x156F838", Offset = "0x156F838", VA = "0x156F838")]
	public void SetPreparedRoom(RoleSectionStatus status, int gotoId)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x15703B8", Offset = "0x15703B8", VA = "0x15703B8")]
	private void SetTeleporter(SSlidingRuleSection curSection, SSlidingRuleSection nextSection)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x157065C", Offset = "0x157065C", VA = "0x157065C")]
	private void SetPlayerPos(SSlidingRuleSection backSection, SSlidingRuleSection curSection)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1570C94", Offset = "0x1570C94", VA = "0x1570C94")]
	public SSlidingBlock()
	{
	}
}
[Token(Token = "0x20000BE")]
public class SSlidingRule
{
	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD58F4", Offset = "0xFD58F4")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x13FED74", Offset = "0x13FED74", VA = "0x13FED74")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x13FEE00", Offset = "0x13FEE00", VA = "0x13FEE00")]
		internal bool <GetRuleSection>b__0(SSlidingRuleSection a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<SSlidingRuleSection> sectionList;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SSlidingSeparateSection separateSection;

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x13FDF40", Offset = "0x13FDF40", VA = "0x13FDF40")]
	public void Init(Transform root)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x13FE0EC", Offset = "0x13FE0EC", VA = "0x13FE0EC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x13FE1D4", Offset = "0x13FE1D4", VA = "0x13FE1D4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x13FE510", Offset = "0x13FE510", VA = "0x13FE510")]
	public void Unint()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x13FE514", Offset = "0x13FE514", VA = "0x13FE514")]
	public void SetRuleSectionStatus(int id, RoleSectionStatus status)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x13FE6B0", Offset = "0x13FE6B0", VA = "0x13FE6B0")]
	private void SetRuleSectionStatus(SSlidingRuleSection section, RoleSectionStatus status)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x13FE834", Offset = "0x13FE834", VA = "0x13FE834")]
	public void SetSeparateSectionStatus(RoleSectionStatus status, int curSectionId)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x13FE3BC", Offset = "0x13FE3BC", VA = "0x13FE3BC")]
	public void OtherRoomsExit(int frontId)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x13FE53C", Offset = "0x13FE53C", VA = "0x13FE53C")]
	public SSlidingRuleSection GetRuleSection(int id)
	{
		return null;
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x13FED7C", Offset = "0x13FED7C", VA = "0x13FED7C")]
	public SSlidingSeparateSection GetSeparateSection()
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x13FED84", Offset = "0x13FED84", VA = "0x13FED84")]
	public SSlidingRule()
	{
	}
}
[Token(Token = "0x20000BF")]
public enum RoleSectionStatus
{
	[Token(Token = "0x4000445")]
	Enter,
	[Token(Token = "0x4000446")]
	Clean,
	[Token(Token = "0x4000447")]
	Select,
	[Token(Token = "0x4000448")]
	Exit
}
[Token(Token = "0x20000C0")]
public class SSlidingRuleSection : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5904", Offset = "0xFD5904")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<WUnit> <>9__18_0;

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x13FF40C", Offset = "0x13FF40C", VA = "0x13FF40C")]
		public <>c()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x13FF414", Offset = "0x13FF414", VA = "0x13FF414")]
		internal int <GetStandModeTelep>b__18_0(WUnit a, WUnit b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ID;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Teleporter Teleporter;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BirthTeleporter BirthTeleporter;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform AreaPanel;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] StandModeTeleps;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] numChar;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x13FEE24", Offset = "0x13FEE24", VA = "0x13FEE24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x13FE05C", Offset = "0x13FE05C", VA = "0x13FE05C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x13FE188", Offset = "0x13FE188", VA = "0x13FE188")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x13FE2B8", Offset = "0x13FE2B8", VA = "0x13FE2B8")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x13FE7A0", Offset = "0x13FE7A0", VA = "0x13FE7A0")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x13FE7D0", Offset = "0x13FE7D0", VA = "0x13FE7D0")]
	public void Select()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x13FE7CC", Offset = "0x13FE7CC", VA = "0x13FE7CC")]
	public void Clean()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x13FE814", Offset = "0x13FE814", VA = "0x13FE814")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x13FEFE4", Offset = "0x13FEFE4", VA = "0x13FEFE4")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x13FEFEC", Offset = "0x13FEFEC", VA = "0x13FEFEC")]
	private void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x13FEFF8", Offset = "0x13FEFF8", VA = "0x13FEFF8")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x13FF0B4", Offset = "0x13FF0B4", VA = "0x13FF0B4")]
	public Transform GetStandModeTelep(WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x13FF31C", Offset = "0x13FF31C", VA = "0x13FF31C")]
	public SSlidingRuleSection()
	{
	}
}
[Token(Token = "0x20000C1")]
public class SSlidingSeparateSection : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000488")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5914", Offset = "0xFD5914")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<WUnit> <>9__20_0;

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x13FFA28", Offset = "0x13FFA28", VA = "0x13FFA28")]
		public <>c()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x13FFA30", Offset = "0x13FFA30", VA = "0x13FFA30")]
		internal int <GetStandModeTelep>b__20_0(WUnit a, WUnit b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform AreaPanel;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MainTeleporter MainTel;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] StandModeTeleps;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isEnter;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isStart;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xFD6E48", Offset = "0xFD6E48")]
	private (Vector3, Quaternion, Vector3) originalInfo;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CharacterMono controlMono;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x13FE084", Offset = "0x13FE084", VA = "0x13FE084")]
	public void Init()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x13FE18C", Offset = "0x13FE18C", VA = "0x13FE18C")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x13FE2BC", Offset = "0x13FE2BC", VA = "0x13FE2BC")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x13FEAC4", Offset = "0x13FEAC4", VA = "0x13FEAC4")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x13FEB5C", Offset = "0x13FEB5C", VA = "0x13FEB5C")]
	public void Select()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x13FED6C", Offset = "0x13FED6C", VA = "0x13FED6C")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x13FF4CC", Offset = "0x13FF4CC", VA = "0x13FF4CC")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x13FF4C8", Offset = "0x13FF4C8", VA = "0x13FF4C8")]
	private void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x13FF4D4", Offset = "0x13FF4D4", VA = "0x13FF4D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x13FF43C", Offset = "0x13FF43C", VA = "0x13FF43C")]
	public void ResetStatus()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x13FEB90", Offset = "0x13FEB90", VA = "0x13FEB90")]
	public void AdjustMainTeleporterTR(Vector3 localPos, Quaternion rot, Vector3 scale)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x13FF61C", Offset = "0x13FF61C", VA = "0x13FF61C")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x13FF56C", Offset = "0x13FF56C", VA = "0x13FF56C")]
	private void UpdateCheckPreRoom()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x13FF750", Offset = "0x13FF750", VA = "0x13FF750")]
	public Transform GetStandModeTelep(WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x13FF9B8", Offset = "0x13FF9B8", VA = "0x13FF9B8")]
	public SSlidingSeparateSection()
	{
	}
}
[Token(Token = "0x20000C2")]
public abstract class BaseGear : MonoBehaviour, IGear
{
	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Id;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> RoomIdList;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected e_group_type groupType;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool workInTheGame;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent onGearInit;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent onGearUnInit;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent onGearStart;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UnityEvent onGearStop;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected bool isStart;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	protected bool isEnable;

	[Token(Token = "0x17000062")]
	public e_group_type GroupType
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x161402C", Offset = "0x161402C", VA = "0x161402C")]
		get
		{
			return default(e_group_type);
		}
	}

	[Token(Token = "0x17000063")]
	protected bool IsStart
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1614034", Offset = "0x1614034", VA = "0x1614034")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x161403C", Offset = "0x161403C", VA = "0x161403C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	protected bool IsEnable
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x1614048", Offset = "0x1614048", VA = "0x1614048")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x1614050", Offset = "0x1614050", VA = "0x1614050")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public bool WorkInTheGame
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x161405C", Offset = "0x161405C", VA = "0x161405C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x1614064", Offset = "0x1614064", VA = "0x1614064")]
		private set
		{
		}
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1614070", Offset = "0x1614070", VA = "0x1614070")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1614120", Offset = "0x1614120", VA = "0x1614120")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x16141D0", Offset = "0x16141D0", VA = "0x16141D0", Slot = "4")]
	public int GetID()
	{
		return default(int);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1614074", Offset = "0x1614074", VA = "0x1614074")]
	private void Init()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1614124", Offset = "0x1614124", VA = "0x1614124")]
	private void UnInit()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1612B0C", Offset = "0x1612B0C", VA = "0x1612B0C", Slot = "16")]
	public virtual void GearInit()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x16141D8", Offset = "0x16141D8", VA = "0x16141D8", Slot = "17")]
	public virtual void GearUnInit()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1612BD0", Offset = "0x1612BD0", VA = "0x1612BD0", Slot = "18")]
	public virtual void GearStart()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1612DC4", Offset = "0x1612DC4", VA = "0x1612DC4", Slot = "19")]
	public virtual void GearStop()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x16141F4", Offset = "0x16141F4", VA = "0x16141F4", Slot = "20")]
	public virtual void GearReset()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x16141F8", Offset = "0x16141F8", VA = "0x16141F8", Slot = "21")]
	public virtual void GearEnable(bool isEnable)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1614204", Offset = "0x1614204", VA = "0x1614204", Slot = "22")]
	public virtual void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1614208", Offset = "0x1614208", VA = "0x1614208", Slot = "23")]
	public virtual void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x161421C", Offset = "0x161421C", VA = "0x161421C", Slot = "13")]
	public List<int> GetRoomIdList()
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1614224", Offset = "0x1614224", VA = "0x1614224", Slot = "14")]
	public bool IsGearStart()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x161422C", Offset = "0x161422C", VA = "0x161422C", Slot = "15")]
	public bool IsGearEnable()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1614234", Offset = "0x1614234", VA = "0x1614234", Slot = "24")]
	public virtual void SetRoomStatus(int roomId)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1613150", Offset = "0x1613150", VA = "0x1613150")]
	protected BaseGear()
	{
	}
}
[Token(Token = "0x20000C3")]
public abstract class BaseHurtGear : BaseGear
{
	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected UnityEvent onGearBroken;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected int hp;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	protected bool isSameGroupDamage;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _damage;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isBroken;

	[Token(Token = "0x17000066")]
	public bool IsSameGroupDamage
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x161437C", Offset = "0x161437C", VA = "0x161437C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000067")]
	public int Damage
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1614384", Offset = "0x1614384", VA = "0x1614384")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x161438C", Offset = "0x161438C", VA = "0x161438C")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	protected bool IsBroken
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1614394", Offset = "0x1614394", VA = "0x1614394")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x161439C", Offset = "0x161439C", VA = "0x161439C")]
		private set
		{
		}
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x16143A8", Offset = "0x16143A8", VA = "0x16143A8", Slot = "25")]
	public virtual void GearHurt(e_group_type ackGroupType, int damage, Vector3 atkDir)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x160ABB8", Offset = "0x160ABB8", VA = "0x160ABB8", Slot = "26")]
	public virtual void DoGearBrokenEffect()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1614564", Offset = "0x1614564", VA = "0x1614564", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x16145E0", Offset = "0x16145E0", VA = "0x16145E0", Slot = "23")]
	public override void GetStatus(out e_GearHandleStatus_type status, out int hp, out int maxHp)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x160A844", Offset = "0x160A844", VA = "0x160A844", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x160A908", Offset = "0x160A908", VA = "0x160A908", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x160AADC", Offset = "0x160AADC", VA = "0x160AADC", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x160AE54", Offset = "0x160AE54", VA = "0x160AE54")]
	protected BaseHurtGear()
	{
	}
}
[Token(Token = "0x20000C4")]
public class GearManager : Singleton<GearManager>
{
	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HashSet<IGear> gearList;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<e_group_type, Dictionary<int, IGear>> gearDic;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x14EC95C", Offset = "0x14EC95C", VA = "0x14EC95C")]
	public void RegisterGear(e_group_type group, int id, IGear gear)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x14ECE64", Offset = "0x14ECE64", VA = "0x14ECE64")]
	public void UnRegisterGear(e_group_type group, int id, IGear gear)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x14ED1D0", Offset = "0x14ED1D0", VA = "0x14ED1D0")]
	public void SetAllReset()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x14ED1D4", Offset = "0x14ED1D4", VA = "0x14ED1D4")]
	public void SetAllStart()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x14ED1D8", Offset = "0x14ED1D8", VA = "0x14ED1D8")]
	public void HandleGearStatus(e_group_type group, int id, e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x14ED3E0", Offset = "0x14ED3E0", VA = "0x14ED3E0")]
	public IGear GetGear(e_group_type group, int id)
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x14ED654", Offset = "0x14ED654", VA = "0x14ED654")]
	public void SyncGearStateToClient(int sessionId, e_group_type group, int id)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x14ED924", Offset = "0x14ED924", VA = "0x14ED924")]
	public GearManager()
	{
	}
}
[Token(Token = "0x20000C5")]
public enum e_GearHandleStatus_type
{
	[Token(Token = "0x4000469")]
	None = 0,
	[Token(Token = "0x400046A")]
	Hurt = 1,
	[Token(Token = "0x400046B")]
	Die = 2,
	[Token(Token = "0x400046C")]
	status1 = 100,
	[Token(Token = "0x400046D")]
	status2 = 101,
	[Token(Token = "0x400046E")]
	status3 = 102
}
[Token(Token = "0x20000C6")]
public interface IGear
{
	[Token(Token = "0x60003BB")]
	int GetID();

	[Token(Token = "0x60003BC")]
	void GearInit();

	[Token(Token = "0x60003BD")]
	void GearUnInit();

	[Token(Token = "0x60003BE")]
	void GearStart();

	[Token(Token = "0x60003BF")]
	void GearStop();

	[Token(Token = "0x60003C0")]
	void GearEnable(bool isEnable);

	[Token(Token = "0x60003C1")]
	void GearReset();

	[Token(Token = "0x60003C2")]
	void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion quaternion, params object[] prms);

	[Token(Token = "0x60003C3")]
	void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2);

	[Token(Token = "0x60003C4")]
	List<int> GetRoomIdList();

	[Token(Token = "0x60003C5")]
	bool IsGearStart();

	[Token(Token = "0x60003C6")]
	bool IsGearEnable();
}
[Token(Token = "0x20000C7")]
public class LanguageManager : Singleton<LanguageManager>
{
	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<e_type_language> OnLanguageChange;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<e_type_language, Dictionary<int, string>> languageDic;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, string> curLanguageDic;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private e_type_language curLanguageType;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x14822F4", Offset = "0x14822F4", VA = "0x14822F4")]
	public void Register(e_type_language type, int id, string str)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x14825A8", Offset = "0x14825A8", VA = "0x14825A8")]
	public void Clear()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1482614", Offset = "0x1482614", VA = "0x1482614")]
	public void SwitchLanguage(e_type_language type)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x148275C", Offset = "0x148275C", VA = "0x148275C")]
	public string GetText(int id)
	{
		return null;
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x14829BC", Offset = "0x14829BC", VA = "0x14829BC")]
	public LanguageManager()
	{
	}
}
[Token(Token = "0x20000C8")]
public class UILanguageImage : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000489")]
	public class TextureHotSwitchCell
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image Image;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x1466F00", Offset = "0x1466F00", VA = "0x1466F00")]
		public TextureHotSwitchCell()
		{
		}
	}

	[Token(Token = "0x200048A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5924", Offset = "0xFD5924")]
	private sealed class <SetText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UILanguageImage <>4__this;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image image;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DownloadHandlerTexture <downloadTexture>5__3;

		[Token(Token = "0x170003C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x1466E90", Offset = "0x1466E90", VA = "0x1466E90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x1466EF8", Offset = "0x1466EF8", VA = "0x1466EF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x1466B58", Offset = "0x1466B58", VA = "0x1466B58")]
		[DebuggerHidden]
		public <SetText>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x1466B94", Offset = "0x1466B94", VA = "0x1466B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x1466B98", Offset = "0x1466B98", VA = "0x1466B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x1466E98", Offset = "0x1466E98", VA = "0x1466E98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMipMap;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public TextureHotSwitchCell[] cells;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1466708", Offset = "0x1466708", VA = "0x1466708")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x14669A8", Offset = "0x14669A8", VA = "0x14669A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1466AA8", Offset = "0x1466AA8", VA = "0x1466AA8")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1466848", Offset = "0x1466848", VA = "0x1466848")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1466AAC", Offset = "0x1466AAC", VA = "0x1466AAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC580", Offset = "0xFDC580")]
	private IEnumerator SetText(Image image, string path)
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1466B84", Offset = "0x1466B84", VA = "0x1466B84")]
	public UILanguageImage()
	{
	}
}
[Token(Token = "0x20000C9")]
public class UILanguageRawImage : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200048B")]
	public class TextureHotSwitchCell
	{
		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RawImage Image;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x146767C", Offset = "0x146767C", VA = "0x146767C")]
		public TextureHotSwitchCell()
		{
		}
	}

	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5934", Offset = "0xFD5934")]
	private sealed class <SetText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UILanguageRawImage <>4__this;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RawImage image;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DownloadHandlerTexture <downloadTexture>5__3;

		[Token(Token = "0x170003C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x146760C", Offset = "0x146760C", VA = "0x146760C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x1467674", Offset = "0x1467674", VA = "0x1467674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x1467358", Offset = "0x1467358", VA = "0x1467358")]
		[DebuggerHidden]
		public <SetText>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x1467394", Offset = "0x1467394", VA = "0x1467394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x1467398", Offset = "0x1467398", VA = "0x1467398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x1467614", Offset = "0x1467614", VA = "0x1467614", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMipMap;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public TextureHotSwitchCell[] cells;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x1466F08", Offset = "0x1466F08", VA = "0x1466F08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x14671A8", Offset = "0x14671A8", VA = "0x14671A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x14672A8", Offset = "0x14672A8", VA = "0x14672A8")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x1467048", Offset = "0x1467048", VA = "0x1467048")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x14672AC", Offset = "0x14672AC", VA = "0x14672AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC5E4", Offset = "0xFDC5E4")]
	private IEnumerator SetText(RawImage image, string path)
	{
		return null;
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x1467384", Offset = "0x1467384", VA = "0x1467384")]
	public UILanguageRawImage()
	{
	}
}
[Token(Token = "0x20000CA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD1984", Offset = "0xFD1984")]
public class UILanguageText : MonoBehaviour
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text t;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int textId;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x1467684", Offset = "0x1467684", VA = "0x1467684")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1467688", Offset = "0x1467688", VA = "0x1467688")]
	private void Init()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x14676E8", Offset = "0x14676E8", VA = "0x14676E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1467890", Offset = "0x1467890", VA = "0x1467890")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1467990", Offset = "0x1467990", VA = "0x1467990")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x14677F0", Offset = "0x14677F0", VA = "0x14677F0")]
	private void SetText()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1467994", Offset = "0x1467994", VA = "0x1467994")]
	public UILanguageText()
	{
	}
}
[Token(Token = "0x20000CB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD19E8", Offset = "0xFD19E8")]
public class UILanguageTextMeshPro : MonoBehaviour
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int textId;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI TextMeshPro;

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x146799C", Offset = "0x146799C", VA = "0x146799C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x14679A0", Offset = "0x14679A0", VA = "0x14679A0")]
	private void Init()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1467A34", Offset = "0x1467A34", VA = "0x1467A34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1467BD4", Offset = "0x1467BD4", VA = "0x1467BD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1467CD4", Offset = "0x1467CD4", VA = "0x1467CD4")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1467B3C", Offset = "0x1467B3C", VA = "0x1467B3C")]
	private void SetText()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1467CD8", Offset = "0x1467CD8", VA = "0x1467CD8")]
	public UILanguageTextMeshPro()
	{
	}
}
[Token(Token = "0x20000CC")]
public class PrefabLightmapData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200048D")]
	public class ObjectLightmapData
	{
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lightmapIndex;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 lightmapOffsetScale;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int realtimeLightmapIndex;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4 realtimeLightmapScaleOffset;

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x13A5F78", Offset = "0x13A5F78", VA = "0x13A5F78")]
		public ObjectLightmapData()
		{
		}
	}

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<int> lightingIndexs;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<ObjectLightmapData> objectLightingDatas;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PrefabLightmapManager lightmapManager;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x13A5A88", Offset = "0x13A5A88", VA = "0x13A5A88")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x13A5B88", Offset = "0x13A5B88", VA = "0x13A5B88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x13A5E9C", Offset = "0x13A5E9C", VA = "0x13A5E9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x13A5D18", Offset = "0x13A5D18", VA = "0x13A5D18")]
	private void Refresh()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x13A5F70", Offset = "0x13A5F70", VA = "0x13A5F70")]
	public PrefabLightmapData()
	{
	}
}
[Token(Token = "0x20000CD")]
public class PrefabLightmapManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200048E")]
	public class PrefabLightmapDataStruct
	{
		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lightmapColor;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string lightmapDir;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string shadowMask;

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x155685C", Offset = "0x155685C", VA = "0x155685C")]
		public PrefabLightmapDataStruct()
		{
		}
	}

	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5944", Offset = "0xFD5944")]
	private sealed class <RefreshLightmap>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrefabLightmapManager <>4__this;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] <arrAdd>5__2;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PrefabLightmapDataStruct <dataStruct>5__4;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LightmapData <data>5__5;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ResourceRequest <texture>5__6;

		[Token(Token = "0x170003CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0x15567EC", Offset = "0x15567EC", VA = "0x15567EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x1556854", Offset = "0x1556854", VA = "0x1556854", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x1555CF8", Offset = "0x1555CF8", VA = "0x1555CF8")]
		[DebuggerHidden]
		public <RefreshLightmap>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x1555D24", Offset = "0x1555D24", VA = "0x1555D24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1555D28", Offset = "0x1555D28", VA = "0x1555D28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x15567F4", Offset = "0x15567F4", VA = "0x15567F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string basePath;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new string name;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PrefabLightmapDataStruct> lightmapDataStructs;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PrefabLightmapData> PrefabLightmapDatas;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LightmapData[] tempLightmapDatas;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<PrefabLightmapData> CurPrefabLightmapDatas;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> CurLightmapIndexs;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> TempLightmapIndexs;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInit;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine RefreshLightmap_C;

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x13A5F80", Offset = "0x13A5F80", VA = "0x13A5F80")]
	public void Init()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x13A628C", Offset = "0x13A628C", VA = "0x13A628C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x13A5C60", Offset = "0x13A5C60", VA = "0x13A5C60")]
	public void EnableLightmap(PrefabLightmapData data)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x13A5EB8", Offset = "0x13A5EB8", VA = "0x13A5EB8")]
	public void DisableLightmap(PrefabLightmapData data)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x13A6218", Offset = "0x13A6218", VA = "0x13A6218")]
	private void DoRefreshLightmap()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x13A6290", Offset = "0x13A6290", VA = "0x13A6290")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC648", Offset = "0xFDC648")]
	private IEnumerator RefreshLightmap()
	{
		return null;
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x13A630C", Offset = "0x13A630C", VA = "0x13A630C")]
	public PrefabLightmapManager()
	{
	}
}
[Token(Token = "0x20000CE")]
public class LineControl : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000490")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5954", Offset = "0xFD5954")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__11_0;

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x1487964", Offset = "0x1487964", VA = "0x1487964")]
		public <>c()
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x148796C", Offset = "0x148796C", VA = "0x148796C")]
		internal int <Update>b__11_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem endPointEffect;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRLineRenderer lineRender;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 endPoint;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int controlPosIndex;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float endPointEffectOffset;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] temphits;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float refreshInterval;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1487184", Offset = "0x1487184", VA = "0x1487184")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x14872CC", Offset = "0x14872CC", VA = "0x14872CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1487830", Offset = "0x1487830", VA = "0x1487830")]
	public LineControl()
	{
	}
}
[Token(Token = "0x20000CF")]
public class Logger
{
	[Token(Token = "0x4000492")]
	private const int FilterTag_Default = 1;

	[Token(Token = "0x4000493")]
	public const int FilterTag_Battle = 2;

	[Token(Token = "0x4000494")]
	public const int FilterTag_State = 4;

	[Token(Token = "0x4000495")]
	public const int FilterTag_AI = 8;

	[Token(Token = "0x4000496")]
	public const int FilterTag_Net = 16;

	[Token(Token = "0x4000497")]
	public const int FilterTag_Emitter = 32;

	[Token(Token = "0x17000069")]
	public static bool IsDebug
	{
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x14ADCF0", Offset = "0x14ADCF0", VA = "0x14ADCF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x14ADD58", Offset = "0x14ADD58", VA = "0x14ADD58")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public static bool IsShowTimeMillis
	{
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x14ADDC8", Offset = "0x14ADDC8", VA = "0x14ADDC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x14ADE30", Offset = "0x14ADE30", VA = "0x14ADE30")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public static bool IsDevelopmentBuild
	{
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x14ADEA0", Offset = "0x14ADEA0", VA = "0x14ADEA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x14ADBB4", Offset = "0x14ADBB4", VA = "0x14ADBB4")]
	public static void InitLogConfig()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x14ADC4C", Offset = "0x14ADC4C", VA = "0x14ADC4C")]
	public static void SetFilterTag(int tag, bool isActive)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x14ADF00", Offset = "0x14ADF00", VA = "0x14ADF00")]
	public static void SetFilterTagState(int tagState)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x14ADF6C", Offset = "0x14ADF6C", VA = "0x14ADF6C")]
	public static string GetIntListStr(List<int> intArray)
	{
		return null;
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x14AE080", Offset = "0x14AE080", VA = "0x14AE080")]
	public static string GetIntArrayStr(int[] intArray)
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x14AE1A4", Offset = "0x14AE1A4", VA = "0x14AE1A4")]
	public static string GetByteArrayStr(byte[] byteArray)
	{
		return null;
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x14AE2C8", Offset = "0x14AE2C8", VA = "0x14AE2C8")]
	public static string GetStringArrayStr(string[] stringArray)
	{
		return null;
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x14AE3C0", Offset = "0x14AE3C0", VA = "0x14AE3C0")]
	public Logger()
	{
	}
}
[Token(Token = "0x20000D0")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFD1A4C", Offset = "0xFD1A4C")]
public class MultiMap<T, K, V>
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<T, Dictionary<K, V>> dictionary;

	[Token(Token = "0x1700006C")]
	public int Count
	{
		[Token(Token = "0x6000408")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006D")]
	public V Item
	{
		[Token(Token = "0x600040C")]
		get
		{
			return (V)null;
		}
	}

	[Token(Token = "0x1700006E")]
	public Dictionary<K, V> Item
	{
		[Token(Token = "0x600040D")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000403")]
	public MultiMap()
	{
	}

	[Token(Token = "0x6000404")]
	public Dictionary<T, Dictionary<K, V>> GetDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000405")]
	public void Add(T t, K k, V v)
	{
	}

	[Token(Token = "0x6000406")]
	public KeyValuePair<T, Dictionary<K, V>> First()
	{
		return default(KeyValuePair<T, Dictionary<K, V>>);
	}

	[Token(Token = "0x6000407")]
	public KeyValuePair<K, V> Last(T t)
	{
		return default(KeyValuePair<K, V>);
	}

	[Token(Token = "0x6000409")]
	private Dictionary<K, V> FetchList()
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	public bool Remove(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x600040B")]
	public bool Remove(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x600040E")]
	public bool ContainsKey(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	public bool ContainsKey(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000410")]
	public void Clear()
	{
	}
}
[Token(Token = "0x20000D1")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFD1A84", Offset = "0xFD1A84")]
public class MultiSortMap<T, K, V>
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SortedDictionary<T, SortedDictionary<K, V>> dictionary;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IComparer<T> t_comparer;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IComparer<K> k_comparer;

	[Token(Token = "0x1700006F")]
	public int Count
	{
		[Token(Token = "0x6000416")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000070")]
	public V Item
	{
		[Token(Token = "0x600041A")]
		get
		{
			return (V)null;
		}
	}

	[Token(Token = "0x17000071")]
	public SortedDictionary<K, V> Item
	{
		[Token(Token = "0x600041B")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000411")]
	public MultiSortMap([Optional] IComparer<T> _t_comparer, [Optional] IComparer<K> _k_comparer)
	{
	}

	[Token(Token = "0x6000412")]
	public SortedDictionary<T, SortedDictionary<K, V>> GetDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000413")]
	public void Add(T t, K k, V v)
	{
	}

	[Token(Token = "0x6000414")]
	public KeyValuePair<T, SortedDictionary<K, V>> First()
	{
		return default(KeyValuePair<T, SortedDictionary<K, V>>);
	}

	[Token(Token = "0x6000415")]
	public KeyValuePair<K, V> Last(T t)
	{
		return default(KeyValuePair<K, V>);
	}

	[Token(Token = "0x6000417")]
	private SortedDictionary<K, V> FetchList()
	{
		return null;
	}

	[Token(Token = "0x6000418")]
	public bool Remove(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000419")]
	public bool Remove(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x600041C")]
	public bool ContainsKey(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x600041D")]
	public bool ContainsKey(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x600041E")]
	public void Clear()
	{
	}

	[Token(Token = "0x600041F")]
	public SortedDictionary<T, SortedDictionary<K, V>> GetRawMap()
	{
		return null;
	}
}
[Token(Token = "0x20000D2")]
public abstract class IObjectRecycle : MonoBehaviour
{
	[Token(Token = "0x6000420")]
	public abstract void Recycle();

	[Token(Token = "0x6000421")]
	public abstract void Recover();

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x14758DC", Offset = "0x14758DC", VA = "0x14758DC")]
	protected IObjectRecycle()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D3")]
public class ObjectPool
{
	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pooledObject;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int initSize;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int id;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform parent;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<ObjectPoolCell> pool;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x149C2F8", Offset = "0x149C2F8", VA = "0x149C2F8")]
	public void Init(int _id, Transform _parent)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x149C58C", Offset = "0x149C58C", VA = "0x149C58C")]
	public GameObject GetObject()
	{
		return null;
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x149C728", Offset = "0x149C728", VA = "0x149C728")]
	public void RecycleObject(ObjectPoolCell cell)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x149C4B4", Offset = "0x149C4B4", VA = "0x149C4B4")]
	private ObjectPoolCell InstantiateOnePoolCell()
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x149C944", Offset = "0x149C944", VA = "0x149C944")]
	public ObjectPool()
	{
	}
}
[Token(Token = "0x20000D4")]
public class ObjectPoolCell : MonoBehaviour
{
	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int id;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool haveRecycling;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject catchGameObject;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform catchTransform;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IObjectRecycle CatchRecycleComponent;

	[Token(Token = "0x17000072")]
	public int Id
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x149C954", Offset = "0x149C954", VA = "0x149C954")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x149C95C", Offset = "0x149C95C", VA = "0x149C95C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public bool HaveRecycling
	{
		[Token(Token = "0x600042A")]
		[Address(RVA = "0x149C964", Offset = "0x149C964", VA = "0x149C964")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x149C96C", Offset = "0x149C96C", VA = "0x149C96C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public GameObject CatchGameObject
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x149C978", Offset = "0x149C978", VA = "0x149C978")]
		get
		{
			return null;
		}
		[Token(Token = "0x600042D")]
		[Address(RVA = "0x149C980", Offset = "0x149C980", VA = "0x149C980")]
		private set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public Transform CatchTransform
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x149C988", Offset = "0x149C988", VA = "0x149C988")]
		get
		{
			return null;
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x149C990", Offset = "0x149C990", VA = "0x149C990")]
		private set
		{
		}
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x149C864", Offset = "0x149C864", VA = "0x149C864")]
	public void Init(int _id)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x149C998", Offset = "0x149C998", VA = "0x149C998")]
	public void SetParent(Transform parent)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x149C690", Offset = "0x149C690", VA = "0x149C690")]
	public GameObject Get()
	{
		return null;
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x149C7A0", Offset = "0x149C7A0", VA = "0x149C7A0")]
	public void Recycle(Transform parent)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x149CA34", Offset = "0x149CA34", VA = "0x149CA34")]
	public ObjectPoolCell()
	{
	}
}
[Token(Token = "0x20000D5")]
public class ObjectPoolManager : MonoBehaviour
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObjectPoolManager Instance;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ObjectPool> pools;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, ObjectPool> _pools;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, int> _prefabToPoolId;

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x149CA44", Offset = "0x149CA44", VA = "0x149CA44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x149CB9C", Offset = "0x149CB9C", VA = "0x149CB9C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x149CEA0", Offset = "0x149CEA0", VA = "0x149CEA0")]
	public int RegisterObject(GameObject prefab, int initSize)
	{
		return default(int);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x149CFCC", Offset = "0x149CFCC", VA = "0x149CFCC")]
	public int RegisterObject(ObjectPool objectPool)
	{
		return default(int);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x149D160", Offset = "0x149D160", VA = "0x149D160")]
	private GameObject GetObject(int id, [Optional] Vector3 position, [Optional] Quaternion rotation, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x149D34C", Offset = "0x149D34C", VA = "0x149D34C")]
	public GameObject GetObject(GameObject prefab, [Optional] Vector3 position, [Optional] Quaternion rotation, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x149D488", Offset = "0x149D488", VA = "0x149D488")]
	public void DestoryObject(GameObject obj)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x149D650", Offset = "0x149D650", VA = "0x149D650")]
	private void RecycleObject(ObjectPoolCell cell)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x149D6E0", Offset = "0x149D6E0", VA = "0x149D6E0")]
	public ObjectPoolManager()
	{
	}
}
[Token(Token = "0x20000D6")]
public abstract class ControlBase : MonoBehaviour, IGamePlay
{
	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onPlayEvent;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onResetEvent;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bInitialized;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x13D101C", Offset = "0x13D101C", VA = "0x13D101C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x13D1058", Offset = "0x13D1058", VA = "0x13D1058", Slot = "7")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x13D105C", Offset = "0x13D105C", VA = "0x13D105C", Slot = "8")]
	public virtual void Play(Action onExplosionComplete)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x13D1078", Offset = "0x13D1078", VA = "0x13D1078", Slot = "9")]
	public virtual void ToDefault()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x13D1094", Offset = "0x13D1094", VA = "0x13D1094")]
	protected ControlBase()
	{
	}
}
[Token(Token = "0x20000D7")]
public class EffectControl : ControlBase
{
	[Token(Token = "0x2000491")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5964", Offset = "0xFD5964")]
	private sealed class <DelayDissolve>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectControl <>4__this;

		[Token(Token = "0x170003CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024F4")]
			[Address(RVA = "0x13E0F90", Offset = "0x13E0F90", VA = "0x13E0F90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024F6")]
			[Address(RVA = "0x13E0FF8", Offset = "0x13E0FF8", VA = "0x13E0FF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x13E0C4C", Offset = "0x13E0C4C", VA = "0x13E0C4C")]
		[DebuggerHidden]
		public <DelayDissolve>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x13E0E24", Offset = "0x13E0E24", VA = "0x13E0E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x13E0E28", Offset = "0x13E0E28", VA = "0x13E0E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x13E0F98", Offset = "0x13E0F98", VA = "0x13E0F98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7014", Offset = "0xFD7014")]
	[SerializeField]
	private GameObject effectRoot;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem[] childrenPS;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7060", Offset = "0xFD7060")]
	[SerializeField]
	private GameObject matRoot;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int childMeshCount;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] childrenRender;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string dissolveName;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string emissionName;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tweener dissolveTween;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tweener emissionTween;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float dissolveProgress;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float curEmission;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float[] initEmissions;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD70AC", Offset = "0xFD70AC")]
	[SerializeField]
	private float dissolveDelay;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float dissolveDuration;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent onDissolveComplete;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IEnumerator co_dissolve;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x13E0378", Offset = "0x13E0378", VA = "0x13E0378", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x13E0A04", Offset = "0x13E0A04", VA = "0x13E0A04", Slot = "9")]
	public override void ToDefault()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x13E037C", Offset = "0x13E037C", VA = "0x13E037C")]
	private void InitParam()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x13E0A70", Offset = "0x13E0A70", VA = "0x13E0A70")]
	public void StartParticleEffect()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x13E0ADC", Offset = "0x13E0ADC", VA = "0x13E0ADC")]
	public void StartDissolve()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x13E0BA8", Offset = "0x13E0BA8", VA = "0x13E0BA8")]
	public void StartEmissionOff()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x13E0B2C", Offset = "0x13E0B2C", VA = "0x13E0B2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC6AC", Offset = "0xFDC6AC")]
	private IEnumerator DelayDissolve()
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x13E0C78", Offset = "0x13E0C78", VA = "0x13E0C78")]
	private void SetMatProperty(string name, float amount)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x13E0D54", Offset = "0x13E0D54", VA = "0x13E0D54")]
	public EffectControl()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x13E0DD8", Offset = "0x13E0DD8", VA = "0x13E0DD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC710", Offset = "0xFDC710")]
	private float <InitParam>b__18_0()
	{
		return default(float);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x13E0DE0", Offset = "0x13E0DE0", VA = "0x13E0DE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC720", Offset = "0xFDC720")]
	private void <InitParam>b__18_1(float x)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x13E0DE8", Offset = "0x13E0DE8", VA = "0x13E0DE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC730", Offset = "0xFDC730")]
	private float <InitParam>b__18_2()
	{
		return default(float);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x13E0DF0", Offset = "0x13E0DF0", VA = "0x13E0DF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC740", Offset = "0xFDC740")]
	private void <InitParam>b__18_3(float x)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x13E0DF8", Offset = "0x13E0DF8", VA = "0x13E0DF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC750", Offset = "0xFDC750")]
	private void <StartEmissionOff>b__21_0()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x13E0E04", Offset = "0x13E0E04", VA = "0x13E0E04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC760", Offset = "0xFDC760")]
	private void <DelayDissolve>b__22_0()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x13E0E10", Offset = "0x13E0E10", VA = "0x13E0E10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC770", Offset = "0xFDC770")]
	private void <DelayDissolve>b__22_1()
	{
	}
}
[Token(Token = "0x20000D8")]
public interface IGamePlay
{
	[Token(Token = "0x6000453")]
	void Play(Action onExplosionComplete);

	[Token(Token = "0x6000454")]
	void ToDefault();

	[Token(Token = "0x6000455")]
	void Initialize();
}
[Token(Token = "0x20000D9")]
public interface IPhysics
{
	[Token(Token = "0x6000456")]
	void Play(Action onExplosionComplete);

	[Token(Token = "0x6000457")]
	void ToDefault();

	[Token(Token = "0x6000458")]
	void Initialize();
}
[Token(Token = "0x20000DA")]
[ExecuteInEditMode]
public class PhysicalForce : MonoBehaviour
{
	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7108", Offset = "0xFD7108")]
	private Transform forceCenter;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7154", Offset = "0xFD7154")]
	private Vector3 forceOffset;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD71A0", Offset = "0xFD71A0")]
	private float forceIntensity;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD71EC", Offset = "0xFD71EC")]
	private float forceRadius;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 forcePos;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_Theta;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x139FA0C", Offset = "0x139FA0C", VA = "0x139FA0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x139FA9C", Offset = "0x139FA9C", VA = "0x139FA9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x139FADC", Offset = "0x139FADC", VA = "0x139FADC")]
	public void SetExplosionForce(Rigidbody rig, float forceScale = 1f, ForceMode mode = ForceMode.Impulse)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x139FB1C", Offset = "0x139FB1C", VA = "0x139FB1C")]
	public void SetWindForce(Rigidbody rig, Vector3 force)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x139FB38", Offset = "0x139FB38", VA = "0x139FB38")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x139FC38", Offset = "0x139FC38", VA = "0x139FC38")]
	private void DrawCircle(Color m_Color, float radius, Vector3 pos)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x139FEFC", Offset = "0x139FEFC", VA = "0x139FEFC")]
	public PhysicalForce()
	{
	}
}
[Token(Token = "0x20000DB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD1ACC", Offset = "0xFD1ACC")]
public abstract class PhysicsBase : MonoBehaviour, IGamePlay
{
	[Token(Token = "0x2000492")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5974", Offset = "0xFD5974")]
	private sealed class <DelayPlay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicsBase <>4__this;

		[Token(Token = "0x170003CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x13A07BC", Offset = "0x13A07BC", VA = "0x13A07BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0x13A0824", Offset = "0x13A0824", VA = "0x13A0824", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x13A0488", Offset = "0x13A0488", VA = "0x13A0488")]
		[DebuggerHidden]
		public <DelayPlay>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x13A06B0", Offset = "0x13A06B0", VA = "0x13A06B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x13A06B4", Offset = "0x13A06B4", VA = "0x13A06B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x13A07C4", Offset = "0x13A07C4", VA = "0x13A07C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5984", Offset = "0xFD5984")]
	private sealed class <DelayComplete>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicsBase <>4__this;

		[Token(Token = "0x170003D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002500")]
			[Address(RVA = "0x13A0640", Offset = "0x13A0640", VA = "0x13A0640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002502")]
			[Address(RVA = "0x13A06A8", Offset = "0x13A06A8", VA = "0x13A06A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x13A0530", Offset = "0x13A0530", VA = "0x13A0530")]
		[DebuggerHidden]
		public <DelayComplete>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x13A0570", Offset = "0x13A0570", VA = "0x13A0570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x13A0574", Offset = "0x13A0574", VA = "0x13A0574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x13A0648", Offset = "0x13A0648", VA = "0x13A0648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected PhysicalForce mForce;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool bInitialized;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	protected bool bReadyPlay;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onPlayEvent;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onExplosionEvent;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onDefaultEvent;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onDelayCompleteEvent;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Action onEffectCompleteEvent;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7238", Offset = "0xFD7238")]
	protected float waitTimeForce;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7284", Offset = "0xFD7284")]
	protected float delayComplete;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected IEnumerator co_delayPlay;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected IEnumerator co_basePlay;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected IEnumerator co_delayComplete;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x13A01BC", Offset = "0x13A01BC", VA = "0x13A01BC", Slot = "7")]
	public virtual void Play(Action onAllComplete)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x13A0240", Offset = "0x13A0240", VA = "0x13A0240")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x13A027C", Offset = "0x13A027C", VA = "0x13A027C", Slot = "8")]
	public virtual void ToDefault()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x13A02D8", Offset = "0x13A02D8", VA = "0x13A02D8", Slot = "9")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x13A03F8", Offset = "0x13A03F8", VA = "0x13A03F8")]
	public void OnEffectComplete()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x13A040C", Offset = "0x13A040C", VA = "0x13A040C", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC780", Offset = "0xFDC780")]
	protected virtual IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x13A04B4", Offset = "0x13A04B4", VA = "0x13A04B4", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC7E4", Offset = "0xFDC7E4")]
	protected virtual IEnumerator DelayComplete()
	{
		return null;
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x13A055C", Offset = "0x13A055C", VA = "0x13A055C")]
	protected PhysicsBase()
	{
	}
}
[Token(Token = "0x20000DC")]
public class PropShock : PhysicsBase
{
	[Token(Token = "0x2000494")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5994", Offset = "0xFD5994")]
	private sealed class <DelayPlay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PropShock <>4__this;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170003D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002506")]
			[Address(RVA = "0x15593B8", Offset = "0x15593B8", VA = "0x15593B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002508")]
			[Address(RVA = "0x1559420", Offset = "0x1559420", VA = "0x1559420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x1558F1C", Offset = "0x1558F1C", VA = "0x1558F1C")]
		[DebuggerHidden]
		public <DelayPlay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x1559158", Offset = "0x1559158", VA = "0x1559158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x155915C", Offset = "0x155915C", VA = "0x155915C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x15593C0", Offset = "0x15593C0", VA = "0x15593C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Joint[] joints;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int jointCount;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] anchors;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD72D0", Offset = "0xFD72D0")]
	private GameObject jointRoot;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rig;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD731C", Offset = "0xFD731C")]
	private float waitShock;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7368", Offset = "0xFD7368")]
	private float breakInterval;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1558AD4", Offset = "0x1558AD4", VA = "0x1558AD4", Slot = "7")]
	public override void Play(Action onShockComplete)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1558BAC", Offset = "0x1558BAC", VA = "0x1558BAC", Slot = "8")]
	public override void ToDefault()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1558EA0", Offset = "0x1558EA0", VA = "0x1558EA0", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC848", Offset = "0xFDC848")]
	protected override IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1558F48", Offset = "0x1558F48", VA = "0x1558F48", Slot = "9")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1559148", Offset = "0x1559148", VA = "0x1559148")]
	public PropShock()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1559150", Offset = "0x1559150", VA = "0x1559150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC8AC", Offset = "0xFDC8AC")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x20000DD")]
[ExecuteInEditMode]
public class ShatterExplode : PhysicsBase
{
	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD59A4", Offset = "0xFD59A4")]
	private sealed class <DelayPlay>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShatterExplode <>4__this;

		[Token(Token = "0x170003D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600250C")]
			[Address(RVA = "0x14133EC", Offset = "0x14133EC", VA = "0x14133EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600250E")]
			[Address(RVA = "0x1413454", Offset = "0x1413454", VA = "0x1413454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x1413280", Offset = "0x1413280", VA = "0x1413280")]
		[DebuggerHidden]
		public <DelayPlay>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x14132C8", Offset = "0x14132C8", VA = "0x14132C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x14132CC", Offset = "0x14132CC", VA = "0x14132CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x14133F4", Offset = "0x14133F4", VA = "0x14133F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD73B4", Offset = "0xFD73B4")]
	private Transform shatterRoot;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7400", Offset = "0xFD7400")]
	private bool useRandom;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 initShatterRootPos;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion initShatterRootRot;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject[] children;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody[] m_rigs;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider[] m_colliders;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int childCount;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3[] initPositions;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion[] initRots;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD744C", Offset = "0xFD744C")]
	[SerializeField]
	private bool alwaysShow;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Tweener timeTween;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float progress;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x14127A0", Offset = "0x14127A0", VA = "0x14127A0", Slot = "7")]
	public override void Play(Action onExplodeComplete)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1412A5C", Offset = "0x1412A5C", VA = "0x1412A5C", Slot = "8")]
	public override void ToDefault()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1412BD4", Offset = "0x1412BD4", VA = "0x1412BD4", Slot = "9")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1413204", Offset = "0x1413204", VA = "0x1413204", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDC8E4", Offset = "0xFDC8E4")]
	protected override IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1412974", Offset = "0x1412974", VA = "0x1412974")]
	private void SetDynamicStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x14128B4", Offset = "0x14128B4", VA = "0x14128B4")]
	private void SetMeshStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x14132AC", Offset = "0x14132AC", VA = "0x14132AC")]
	public ShatterExplode()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x14132C0", Offset = "0x14132C0", VA = "0x14132C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC948", Offset = "0xFDC948")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x20000DE")]
public class StatusControl : ControlBase
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Renderer[] renders;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Rigidbody[] rigidbodys;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 initPos;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion initRot;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x15CCF74", Offset = "0x15CCF74", VA = "0x15CCF74", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x15CCFDC", Offset = "0x15CCFDC", VA = "0x15CCFDC")]
	public void OnRenderStatus(bool bActive)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x15CD058", Offset = "0x15CD058", VA = "0x15CD058")]
	public void OnDynamicStatus(bool bDynamic)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x15CD130", Offset = "0x15CD130", VA = "0x15CD130")]
	public void OnDefaultTran()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x15CD188", Offset = "0x15CD188", VA = "0x15CD188")]
	public StatusControl()
	{
	}
}
[Token(Token = "0x20000DF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD1B40", Offset = "0xFD1B40")]
public class WindHandle : MonoBehaviour
{
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD59B4", Offset = "0xFD59B4")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WindHandle <>4__this;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _bWindOn;

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x29EE580", Offset = "0x29EE580", VA = "0x29EE580")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x29EE638", Offset = "0x29EE638", VA = "0x29EE638")]
		internal Vector3 <SetWindState>b__0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x29EE658", Offset = "0x29EE658", VA = "0x29EE658")]
		internal void <SetWindState>b__1(Vector3 x)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x29EE678", Offset = "0x29EE678", VA = "0x29EE678")]
		internal void <SetWindState>b__2()
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x29EE69C", Offset = "0x29EE69C", VA = "0x29EE69C")]
		internal void <SetWindState>b__3()
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x29EE6C4", Offset = "0x29EE6C4", VA = "0x29EE6C4")]
		internal void <SetWindState>b__4()
		{
		}
	}

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD74C8", Offset = "0xFD74C8")]
	[SerializeField]
	private Transform rigidbodyRoot;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody[] childRigidbodys;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhysicalForce forceHandle;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7514", Offset = "0xFD7514")]
	public Vector3 windForce;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initForce;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool useRandomWind;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 disturbForce;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD755C", Offset = "0xFD755C")]
	[SerializeField]
	private float distScale;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Tweener easeWindTween;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 curProgress;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool bWindOn;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent fromLeftWindEvent;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent fromRightWindEvent;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x29EE018", Offset = "0x29EE018", VA = "0x29EE018")]
	private void Start()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x29EE14C", Offset = "0x29EE14C", VA = "0x29EE14C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x29EE2D0", Offset = "0x29EE2D0", VA = "0x29EE2D0")]
	public void SetWindState(bool _bWindOn)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x29EE588", Offset = "0x29EE588", VA = "0x29EE588")]
	public void SetWindLeft()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x29EE5A0", Offset = "0x29EE5A0", VA = "0x29EE5A0")]
	public void SetWindRight()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x29EE5B8", Offset = "0x29EE5B8", VA = "0x29EE5B8")]
	public void ToDefault()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x29EE628", Offset = "0x29EE628", VA = "0x29EE628")]
	public WindHandle()
	{
	}
}
[Token(Token = "0x20000E0")]
public class DelayAction : MonoBehaviour
{
	[Token(Token = "0x6000482")]
	[Address(RVA = "0x13D9080", Offset = "0x13D9080", VA = "0x13D9080")]
	public void Run(float time, Action action)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x13D9088", Offset = "0x13D9088", VA = "0x13D9088")]
	public static DelayAction Run(GameObject target, float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x13D9114", Offset = "0x13D9114", VA = "0x13D9114")]
	public DelayAction()
	{
	}
}
[Token(Token = "0x20000E1")]
public class NonPhysicalPosition : MonoBehaviour
{
	[Token(Token = "0x2000497")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD59C4", Offset = "0xFD59C4")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float percent;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform transf;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NonPhysicalPosition <>4__this;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action finAction;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 curPosition;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion curRotation;

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x149A5C8", Offset = "0x149A5C8", VA = "0x149A5C8")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x149A668", Offset = "0x149A668", VA = "0x149A668")]
		internal bool <LerpReset>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 position;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Quaternion rotation;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool isRoot;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bodyPartID;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RagdollPartData processData;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Rigidbody> applyParts;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine cr_reset;

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x149A3A0", Offset = "0x149A3A0", VA = "0x149A3A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x149A478", Offset = "0x149A478", VA = "0x149A478")]
	public void LerpReset(Transform transf, float time, Action finAction)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x149A5D0", Offset = "0x149A5D0", VA = "0x149A5D0")]
	public void ImmediateFinish(Transform transf, Action finAction)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x149A660", Offset = "0x149A660", VA = "0x149A660")]
	public NonPhysicalPosition()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xFD1BA4", Offset = "0xFD1BA4")]
public class RagdollPartData : ScriptableObject
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool partHitEnable;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float partHitRactionTime;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float partHitResetTime;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float partHitForce;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool partHitUseGravity;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float partHitDelay;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool partDieEnable;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float partDieForce;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool partDieHitEnable;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float partDieHitForce;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1559690", Offset = "0x1559690", VA = "0x1559690")]
	public RagdollPartData()
	{
	}
}
[Token(Token = "0x20000E3")]
public class RagdollTester : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000498")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD59D4", Offset = "0xFD59D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__10_0;

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x155A158", Offset = "0x155A158", VA = "0x155A158")]
		public <>c()
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x155A160", Offset = "0x155A160", VA = "0x155A160")]
		internal void <RayHitOld>b__10_0()
		{
		}
	}

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraController cameraController;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetGameObject;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hitForce;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string colliderName;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RagdollTools ragdollTools;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x15596C8", Offset = "0x15596C8", VA = "0x15596C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1559834", Offset = "0x1559834", VA = "0x1559834")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x15599F8", Offset = "0x15599F8", VA = "0x15599F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1559A38", Offset = "0x1559A38", VA = "0x1559A38")]
	private void doHitReaction()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1559A34", Offset = "0x1559A34", VA = "0x1559A34")]
	private void doDieRagdoll()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1559CF8", Offset = "0x1559CF8", VA = "0x1559CF8")]
	private void RayHitOld()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x155A0E0", Offset = "0x155A0E0", VA = "0x155A0E0")]
	public RagdollTester()
	{
	}
}
[Token(Token = "0x20000E4")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD1C04", Offset = "0xFD1C04")]
public class RagdollTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000499")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD59E4", Offset = "0xFD59E4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<CharacterJoint> <>9__28_1;

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x155C0B8", Offset = "0x155C0B8", VA = "0x155C0B8")]
		public <>c()
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x155C0C0", Offset = "0x155C0C0", VA = "0x155C0C0")]
		internal void <Init>b__28_1(CharacterJoint c)
		{
		}
	}

	[Token(Token = "0x200049A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD59F4", Offset = "0xFD59F4")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isGravity;

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x155A6D8", Offset = "0x155A6D8", VA = "0x155A6D8")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x155C0E0", Offset = "0x155C0E0", VA = "0x155C0E0")]
		internal void <EnableRagdoll>b__0(Rigidbody c)
		{
		}
	}

	[Token(Token = "0x200049B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A04", Offset = "0xFD5A04")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollTools <>4__this;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x155AB0C", Offset = "0x155AB0C", VA = "0x155AB0C")]
		public <>c__DisplayClass32_0()
		{
		}
	}

	[Token(Token = "0x200049C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A14", Offset = "0xFD5A14")]
	private sealed class <>c__DisplayClass32_1
	{
		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int componentCounter;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass32_0 CS$<>8__locals1;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x155AB14", Offset = "0x155AB14", VA = "0x155AB14")]
		public <>c__DisplayClass32_1()
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x155C1E8", Offset = "0x155C1E8", VA = "0x155C1E8")]
		internal void <DisableRagdoll>b__0(Rigidbody c)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x155C3B0", Offset = "0x155C3B0", VA = "0x155C3B0")]
		internal void <DisableRagdoll>b__1()
		{
		}
	}

	[Token(Token = "0x200049D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A24", Offset = "0xFD5A24")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 velocity;

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x155ADD8", Offset = "0x155ADD8", VA = "0x155ADD8")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x155C4F0", Offset = "0x155C4F0", VA = "0x155C4F0")]
		internal void <ApplyVelocity>b__0(Transform child)
		{
		}
	}

	[Token(Token = "0x200049E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A34", Offset = "0xFD5A34")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rig;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollTools <>4__this;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isFullBodyForce;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 dir;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hitFore;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NonPhysicalPosition npp;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action cb;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<Transform> <>9__3;

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x155B8F0", Offset = "0x155B8F0", VA = "0x155B8F0")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x155C5B4", Offset = "0x155C5B4", VA = "0x155C5B4")]
		internal void <SwitchDiePart>b__0()
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x155C838", Offset = "0x155C838", VA = "0x155C838")]
		internal void <SwitchDiePart>b__3(Transform child)
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x155C950", Offset = "0x155C950", VA = "0x155C950")]
		internal void <SwitchDiePart>b__1()
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x155C9F8", Offset = "0x155C9F8", VA = "0x155C9F8")]
		internal void <SwitchDiePart>b__2()
		{
		}
	}

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ragdollRoot;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator ani;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HitReaction hitReaction;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NavMeshAgent navAgent;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Velocity v;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float dieResetTime;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isAutoReset;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool isDieVelocity;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float dieVelocityFactor;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Rigidbody> rigbodys;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<NonPhysicalPosition> posRecordes;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isRagdoll;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isProcessing;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine cr_hit;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimatorUpdateMode aniUpdateMode;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> RagdollDisableObjects;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isDie;

	[Token(Token = "0x400051E")]
	private const float HIT_LAST_TIME = 1f;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float hitLastTimer;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isCheckHitRunning;

	[Token(Token = "0x17000076")]
	public bool IsDie
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0x155A164", Offset = "0x155A164", VA = "0x155A164")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x155A16C", Offset = "0x155A16C", VA = "0x155A16C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x155A400", Offset = "0x155A400", VA = "0x155A400")]
	private void Start()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x155A404", Offset = "0x155A404", VA = "0x155A404")]
	private void Update()
	{
	}

	[Token(Token = "0x6000495")]
	private void MapList<T>(List<T> items, Action<T> action)
	{
	}

	[Token(Token = "0x6000496")]
	private void MapArray<T>(T[] items, Action<T> action)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x155A190", Offset = "0x155A190", VA = "0x155A190")]
	private void InitParts()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x155A2B4", Offset = "0x155A2B4", VA = "0x155A2B4")]
	private void Init()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x155A46C", Offset = "0x155A46C", VA = "0x155A46C")]
	public void EnableRagdoll(Action action, bool isGravity, List<Rigidbody> rigs)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x155A7C4", Offset = "0x155A7C4", VA = "0x155A7C4")]
	public void EnableRagdoll(Action action, bool isGravity)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x155A7D0", Offset = "0x155A7D0", VA = "0x155A7D0")]
	public void EnableRagdoll(Action action)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x155A7DC", Offset = "0x155A7DC", VA = "0x155A7DC")]
	public void DisableRagdoll(float time, Action action, List<Rigidbody> rigs)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x155AC00", Offset = "0x155AC00", VA = "0x155AC00")]
	public void DisableRagdoll(float time, Action action)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x155AC08", Offset = "0x155AC08", VA = "0x155AC08")]
	public void DisableRagdoll(float time)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x155AC14", Offset = "0x155AC14", VA = "0x155AC14")]
	public void DoDie(Action action)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x155AC80", Offset = "0x155AC80", VA = "0x155AC80")]
	public void Reset(Action action)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x155ACC4", Offset = "0x155ACC4", VA = "0x155ACC4")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x155ACD4", Offset = "0x155ACD4", VA = "0x155ACD4")]
	public void ApplyVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x155ADE0", Offset = "0x155ADE0", VA = "0x155ADE0")]
	public Rigidbody GetRigbodyByID(int id)
	{
		return null;
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x155AF08", Offset = "0x155AF08", VA = "0x155AF08")]
	public int GetRandamBodyPartId()
	{
		return default(int);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x155AF9C", Offset = "0x155AF9C", VA = "0x155AF9C")]
	private NonPhysicalPosition GetPosRecByID(int id)
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x155B0B0", Offset = "0x155B0B0", VA = "0x155B0B0")]
	public void DieHit(int ragdollId, Vector3 dir, float hitForce, Action cb)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x155B380", Offset = "0x155B380", VA = "0x155B380")]
	private void DieHit(NonPhysicalPosition npp, Rigidbody rig, Vector3 dir, float hitForce, Action cb)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x155B42C", Offset = "0x155B42C", VA = "0x155B42C")]
	public void SwitchDiePart(int ragdollId, Vector3 dir, float hitForce, bool isFullBodyForce, Action cb)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x155B8F8", Offset = "0x155B8F8", VA = "0x155B8F8")]
	public void SwitchPartsHit(int ragdollId, Vector3 dir, [Optional] Action cb)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1559BF0", Offset = "0x1559BF0", VA = "0x1559BF0")]
	public void Hit(Collider collider, Vector3 force, Vector3 point)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x155A0D4", Offset = "0x155A0D4", VA = "0x155A0D4")]
	public void Die(int ragdollId, Vector3 dir, float hitForce, [Optional] Action cb)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x155BE60", Offset = "0x155BE60", VA = "0x155BE60")]
	public void Die(int ragdollId, Vector3 dir, float hitForce, bool isFullBodyForce, [Optional] Action cb)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x155A408", Offset = "0x155A408", VA = "0x155A408")]
	private void CheckHitDeadTime()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x155AB1C", Offset = "0x155AB1C", VA = "0x155AB1C")]
	private void EnableIK()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x155A6E0", Offset = "0x155A6E0", VA = "0x155A6E0")]
	private void DisableIK()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x155BD5C", Offset = "0x155BD5C", VA = "0x155BD5C")]
	private void SetIKWeight(float weight)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x155BE68", Offset = "0x155BE68", VA = "0x155BE68")]
	public RagdollTools()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x155BE88", Offset = "0x155BE88", VA = "0x155BE88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC980", Offset = "0xFDC980")]
	private void <InitParts>b__27_0(Transform child)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x155BF88", Offset = "0x155BF88", VA = "0x155BF88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC990", Offset = "0xFDC990")]
	private void <Init>b__28_0(Rigidbody c)
	{
	}
}
[Token(Token = "0x20000E5")]
public class RandomApplyForce : MonoBehaviour
{
	[Token(Token = "0x200049F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A44", Offset = "0xFD5A44")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 force;

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x155CB9C", Offset = "0x155CB9C", VA = "0x155CB9C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x155CBB0", Offset = "0x155CBB0", VA = "0x155CBB0")]
		internal void <ApplyForce>b__0(Rigidbody rig)
		{
		}
	}

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 forceVec;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x155CAAC", Offset = "0x155CAAC", VA = "0x155CAAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x155CAB0", Offset = "0x155CAB0", VA = "0x155CAB0")]
	public void ApplyForce(Vector3 force)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x155CBA4", Offset = "0x155CBA4", VA = "0x155CBA4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x155CBA8", Offset = "0x155CBA8", VA = "0x155CBA8")]
	public RandomApplyForce()
	{
	}
}
[Token(Token = "0x20000E6")]
public class Velocity : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 velocity;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float checkTime;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 oldPos;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine cr_v;

	[Token(Token = "0x17000077")]
	public Vector3 v
	{
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x15A2544", Offset = "0x15A2544", VA = "0x15A2544")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x15A25D4", Offset = "0x15A25D4", VA = "0x15A25D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x15A26A8", Offset = "0x15A26A8", VA = "0x15A26A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x15A26BC", Offset = "0x15A26BC", VA = "0x15A26BC")]
	public Velocity()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x15A26D0", Offset = "0x15A26D0", VA = "0x15A26D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC9A0", Offset = "0xFDC9A0")]
	private void <OnEnable>b__6_0()
	{
	}
}
[Token(Token = "0x20000E7")]
public class RoomCharacterDeathBase
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_RoomCharacterDeath_Type DeathType;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool IsOwnerDeath;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool IsShowUI;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ShowUITime;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string DeathSay;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsStart;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RunningTime;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeBeginTime;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fadeEndTime;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Action FinishCallBack;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1561628", Offset = "0x1561628", VA = "0x1561628")]
	public void SetFinishCallBack(Action callBack)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1561630", Offset = "0x1561630", VA = "0x1561630", Slot = "4")]
	public virtual void Start([Optional] Vector3 dir)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1561734", Offset = "0x1561734", VA = "0x1561734")]
	private void BeginTimeDelay()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x15618E0", Offset = "0x15618E0", VA = "0x15618E0")]
	private void FadeOutEndAction()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1561940", Offset = "0x1561940", VA = "0x1561940", Slot = "5")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x156182C", Offset = "0x156182C", VA = "0x156182C")]
	protected void DoEnd()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1561944", Offset = "0x1561944", VA = "0x1561944", Slot = "6")]
	protected virtual void End()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1561BF8", Offset = "0x1561BF8", VA = "0x1561BF8", Slot = "7")]
	protected virtual void DoShowUIUpdate(float time)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1561D08", Offset = "0x1561D08", VA = "0x1561D08")]
	private void EndFade()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1561DF4", Offset = "0x1561DF4", VA = "0x1561DF4", Slot = "8")]
	protected virtual void DoShowUI()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1561E6C", Offset = "0x1561E6C", VA = "0x1561E6C", Slot = "9")]
	public virtual void DoUpdate(float time)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1561E84", Offset = "0x1561E84", VA = "0x1561E84", Slot = "10")]
	public virtual void DoLateUpdate()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1561E88", Offset = "0x1561E88", VA = "0x1561E88")]
	public RoomCharacterDeathBase()
	{
	}
}
[Token(Token = "0x20000E8")]
public enum e_RoomCharacterDeath_Type
{
	[Token(Token = "0x4000531")]
	Nomal,
	[Token(Token = "0x4000532")]
	Laster,
	[Token(Token = "0x4000533")]
	SingleBridge,
	[Token(Token = "0x4000534")]
	CameraDetect
}
[Token(Token = "0x20000E9")]
public class RoomCharacterDeathManager : Singleton<RoomCharacterDeathManager>
{
	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsStart;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int curRoomId;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_RoomCharacterDeath_Type DeathType;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsDeathProcess;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool IsOwnerDeath;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool isUISkyBoxActive;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RoomCharacterDeathBase DeathData;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CharacterDeathUI characterUI;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int characterDeathUILayer;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int preLayer;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action startAct;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action rollBackAct;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action finishAct;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1561E98", Offset = "0x1561E98", VA = "0x1561E98")]
	public void Enter()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1561F28", Offset = "0x1561F28", VA = "0x1561F28")]
	public void Exit()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1561F38", Offset = "0x1561F38", VA = "0x1561F38")]
	public void DoStart()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1561F4C", Offset = "0x1561F4C", VA = "0x1561F4C")]
	public void DoStop()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1561FA0", Offset = "0x1561FA0", VA = "0x1561FA0")]
	public void RoomCharacterDeath(e_RoomCharacterDeath_Type deathType, int uId, Vector3 dir)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x15624A8", Offset = "0x15624A8", VA = "0x15624A8")]
	public void SetCallbackAct(Action start, Action rollback, Action finish)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x15619E0", Offset = "0x15619E0", VA = "0x15619E0")]
	public void SetCharacterDeathUI(bool isActive)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x15624F8", Offset = "0x15624F8", VA = "0x15624F8")]
	private void SetCharacterDeathUILayer(bool isSet)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1562474", Offset = "0x1562474", VA = "0x1562474")]
	private void SetDeathTypeData(e_RoomCharacterDeath_Type deathType, string deathName)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1562BD8", Offset = "0x1562BD8", VA = "0x1562BD8")]
	private void DeathFinish()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x15618CC", Offset = "0x15618CC", VA = "0x15618CC")]
	public void CharacterRollBack()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1562628", Offset = "0x1562628", VA = "0x1562628")]
	public void SetUISkyBox(bool isActive)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1562D44", Offset = "0x1562D44", VA = "0x1562D44")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1562D9C", Offset = "0x1562D9C", VA = "0x1562D9C")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x15623C4", Offset = "0x15623C4", VA = "0x15623C4")]
	private WUnit GetOwnerUnit()
	{
		return null;
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x15627C8", Offset = "0x15627C8", VA = "0x15627C8")]
	private RoomCharacterDeathBase GetDeathDataByType(string deathName)
	{
		return null;
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1562EEC", Offset = "0x1562EEC", VA = "0x1562EEC")]
	public RoomCharacterDeathManager()
	{
	}
}
[Token(Token = "0x20000EA")]
public class RoomCharacterDropOutDeath : RoomCharacterDeathBase
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsMotion;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float MotionTime;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isDropOutBack;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 dropPrePos;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion dropPreRot;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 dropPreCamLocalPos;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion dropPreCamLocalRot;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 dropPreCamPos;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion dropPreCamRot;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 dropPlayerDir;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float dropTotalTime;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float dropAcceleration;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float dropTime;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 tmpPos;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float dropFadeBeginTime;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float dropFadeInTime;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float dropFadeOutTime;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isFadeIn;

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1562F7C", Offset = "0x1562F7C", VA = "0x1562F7C", Slot = "4")]
	public override void Start([Optional] Vector3 dir)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x15630E0", Offset = "0x15630E0", VA = "0x15630E0", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1563234", Offset = "0x1563234", VA = "0x1563234")]
	protected void DoMotionUpdate(float time)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x15630DC", Offset = "0x15630DC", VA = "0x15630DC")]
	protected void DoMotion()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1563664", Offset = "0x1563664", VA = "0x1563664", Slot = "9")]
	public override void DoUpdate(float time)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1563688", Offset = "0x1563688", VA = "0x1563688", Slot = "10")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1563B6C", Offset = "0x1563B6C", VA = "0x1563B6C")]
	private GameObject GetPlayerObj()
	{
		return null;
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1563D20", Offset = "0x1563D20", VA = "0x1563D20")]
	public GameObject GetAffectCameraObj()
	{
		return null;
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1563EC8", Offset = "0x1563EC8", VA = "0x1563EC8")]
	public void SetVrAffectCam(bool isActive)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x1563FDC", Offset = "0x1563FDC", VA = "0x1563FDC")]
	public void SetWeaponActive(bool isActive)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x15640C0", Offset = "0x15640C0", VA = "0x15640C0")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x1563468", Offset = "0x1563468", VA = "0x1563468")]
	public void DoDropOutBack()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1563110", Offset = "0x1563110", VA = "0x1563110")]
	private void DropOutBackEnd()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1563378", Offset = "0x1563378", VA = "0x1563378")]
	private void DropOutBackUpdate()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x15636A0", Offset = "0x15636A0", VA = "0x15636A0")]
	private void LockTransformLateUpdate()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x1562DC4", Offset = "0x1562DC4", VA = "0x1562DC4")]
	public RoomCharacterDropOutDeath()
	{
	}
}
[Token(Token = "0x20000EB")]
public class SkyBoxCollector : MonoBehaviour
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SkyBoxCollector Instance;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material preTmpMat;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> SkyBoxMaterials;

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x141637C", Offset = "0x141637C", VA = "0x141637C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x14163EC", Offset = "0x14163EC", VA = "0x14163EC")]
	public void ChangeSkyBoxById(int index)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x1416544", Offset = "0x1416544", VA = "0x1416544")]
	public void SavePreTmpSkyBox()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1416574", Offset = "0x1416574", VA = "0x1416574")]
	public void ResetPreSkyBox()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1416580", Offset = "0x1416580", VA = "0x1416580")]
	public SkyBoxCollector()
	{
	}
}
[Token(Token = "0x20000EC")]
public class RoomGearManager : Singleton<RoomGearManager>
{
	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int curRoomId;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x15685D4", Offset = "0x15685D4", VA = "0x15685D4")]
	public void Enter()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x156875C", Offset = "0x156875C", VA = "0x156875C")]
	public void Exit()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x15688DC", Offset = "0x15688DC", VA = "0x15688DC")]
	public void EnterStartGear(int id)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x1568EB0", Offset = "0x1568EB0", VA = "0x1568EB0")]
	public void EnterCurRoomStartGearID(int id)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1568EB4", Offset = "0x1568EB4", VA = "0x1568EB4")]
	public void EnterStopGearAll()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1569420", Offset = "0x1569420", VA = "0x1569420")]
	public void EnterPassRoomGear(FlowNode node)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1568EC8", Offset = "0x1568EC8", VA = "0x1568EC8")]
	public void EnterStopGear(int id, bool isStopAll)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1569434", Offset = "0x1569434", VA = "0x1569434")]
	public RoomGearManager()
	{
	}
}
[Token(Token = "0x20000ED")]
public enum eMonsterAttackType
{
	[Token(Token = "0x400055B")]
	None,
	[Token(Token = "0x400055C")]
	Stand,
	[Token(Token = "0x400055D")]
	Squat
}
[Token(Token = "0x20000EE")]
public enum eMonsterAttackDirType
{
	[Token(Token = "0x400055F")]
	None,
	[Token(Token = "0x4000560")]
	Left,
	[Token(Token = "0x4000561")]
	Right
}
[Token(Token = "0x20000EF")]
public class RoomMonsterManager : Singleton<RoomMonsterManager>
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int curMonsterRoomId;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int bossRoomId;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool mIsActiveMonster;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool mIsSpawnMonster;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine coroutine;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x15694A4", Offset = "0x15694A4", VA = "0x15694A4")]
	public void Enter()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x1569930", Offset = "0x1569930", VA = "0x1569930")]
	public void Exit()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1569D04", Offset = "0x1569D04", VA = "0x1569D04")]
	public bool IsMonsterClean()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1569E5C", Offset = "0x1569E5C", VA = "0x1569E5C")]
	public bool IsKillBossClean()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1569F7C", Offset = "0x1569F7C", VA = "0x1569F7C")]
	public void SkipMonster()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1569F94", Offset = "0x1569F94", VA = "0x1569F94")]
	private void CleanMonster(bool isNow = true)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x156A16C", Offset = "0x156A16C", VA = "0x156A16C")]
	public bool IsActiveMonster()
	{
		return default(bool);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x156A174", Offset = "0x156A174", VA = "0x156A174")]
	public void AlertMonster(Vector3 center, float radius)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x156A464", Offset = "0x156A464", VA = "0x156A464")]
	public void DoAlertMonsterActive()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x156A468", Offset = "0x156A468", VA = "0x156A468")]
	public void EnterMonsterRoom(FlowNode fNode, bool isOk)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x156A478", Offset = "0x156A478", VA = "0x156A478")]
	public void EnterMonsterPreSpawn(FlowNode node)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x156A88C", Offset = "0x156A88C", VA = "0x156A88C")]
	public void EnterMonsterActive(int roomdID)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x156AB50", Offset = "0x156AB50", VA = "0x156AB50")]
	public void EnterMonsterPauseCallBack()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x156A040", Offset = "0x156A040", VA = "0x156A040")]
	public void EnterMonsterPause(FlowNode node)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x156A738", Offset = "0x156A738", VA = "0x156A738")]
	public void EnterMonsterRestart()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x156AB54", Offset = "0x156AB54", VA = "0x156AB54")]
	public RoomMonsterManager()
	{
	}
}
[Token(Token = "0x20000F0")]
public class InstanceFlowNode
{
	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Id;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int InstanceId;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int FlowId;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InstanceFlowData configData;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InstanceFlowNode[] ChildNodes;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD75D8", Offset = "0xFD75D8")]
	private int <Status>k__BackingField;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD75E8", Offset = "0xFD75E8")]
	private int <PassStatus>k__BackingField;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD75F8", Offset = "0xFD75F8")]
	private int <CurLevel>k__BackingField;

	[Token(Token = "0x17000078")]
	public int Status
	{
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x147A64C", Offset = "0x147A64C", VA = "0x147A64C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC9B0", Offset = "0xFDC9B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x147A654", Offset = "0x147A654", VA = "0x147A654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC9C0", Offset = "0xFDC9C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public int PassStatus
	{
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x147A65C", Offset = "0x147A65C", VA = "0x147A65C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC9D0", Offset = "0xFDC9D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x147A664", Offset = "0x147A664", VA = "0x147A664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC9E0", Offset = "0xFDC9E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public int CurLevel
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x147A66C", Offset = "0x147A66C", VA = "0x147A66C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDC9F0", Offset = "0xFDC9F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600050E")]
		[Address(RVA = "0x147A674", Offset = "0x147A674", VA = "0x147A674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCA00", Offset = "0xFDCA00")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public bool IsInstanceFlowPass
	{
		[Token(Token = "0x600050F")]
		[Address(RVA = "0x147A67C", Offset = "0x147A67C", VA = "0x147A67C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x147A718", Offset = "0x147A718", VA = "0x147A718")]
	public InstanceFlowNode()
	{
	}
}
[Token(Token = "0x20000F1")]
public class SelectInstanceManager : Singleton<SelectInstanceManager>
{
	[Token(Token = "0x20004A0")]
	public enum e_ProcessType
	{
		[Token(Token = "0x4001B5C")]
		NULL,
		[Token(Token = "0x4001B5D")]
		start,
		[Token(Token = "0x4001B5E")]
		noPass,
		[Token(Token = "0x4001B5F")]
		pass
	}

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isInit;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isStart;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool isShow;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private bool isPreselect;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Dictionary<int, InstanceFlowNode>> playerInstanceFlowNodeDic;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, InstanceFlowNode> instanceFlowNodeDic;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<InstanceFlowNode>> instanceDic;

	[Token(Token = "0x4000577")]
	public const int SafeRoomInstanceID_Const = 10000;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int GetFlowNodeId;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<int, int> instanceDiffLevelDic;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<InstanceFlowNode> tmpBroadInstanceInfoList;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<InstanceFlowNode> tmpSelectInstanceList;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float selectTime;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float selectRunningTime;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isSelectFinish;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int startCaptainId;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int instanceMinLevel;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int instanceMaxLevel;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int instanceFailTotalTime;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CheckpointUI selectUI;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CheckpointUI selectUI_Live;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float standingModeDelayTime;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine standingModeDelay;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action SelectUpdate;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action showUpdate;

	[Token(Token = "0x1700007C")]
	public bool IsPreselect
	{
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x13FFF18", Offset = "0x13FFF18", VA = "0x13FFF18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007D")]
	public InstanceFlowNode SelectInstanceFlow
	{
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x13FFF20", Offset = "0x13FFF20", VA = "0x13FFF20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007E")]
	public int StartCaptainId
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x13FFFA0", Offset = "0x13FFFA0", VA = "0x13FFFA0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x13FFFA8", Offset = "0x13FFFA8", VA = "0x13FFFA8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1400260", Offset = "0x1400260", VA = "0x1400260")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x140053C", Offset = "0x140053C", VA = "0x140053C")]
	public void PreStart()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x140069C", Offset = "0x140069C", VA = "0x140069C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1400878", Offset = "0x1400878", VA = "0x1400878")]
	public void StartNewNetPlatfrormData()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x14014FC", Offset = "0x14014FC", VA = "0x14014FC")]
	public void Stop()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x140182C", Offset = "0x140182C", VA = "0x140182C")]
	public void Show(e_ProcessType e_ProcessType)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x140026C", Offset = "0x140026C", VA = "0x140026C")]
	public void Hide(bool isNextSelect = true)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1402010", Offset = "0x1402010", VA = "0x1402010")]
	public void Update()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x1400540", Offset = "0x1400540", VA = "0x1400540")]
	private void InitPlayerInstanceFlowNodes()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1400934", Offset = "0x1400934", VA = "0x1400934")]
	private void InitCapitalInstanceFlowNodes()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x14022CC", Offset = "0x14022CC", VA = "0x14022CC")]
	public void SetPlatformStatus(int pId, int key, int status)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x1400CD4", Offset = "0x1400CD4", VA = "0x1400CD4")]
	public void SetPlatformData()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x1400E14", Offset = "0x1400E14", VA = "0x1400E14")]
	private void ResetInstanceDatas()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x14021E4", Offset = "0x14021E4", VA = "0x14021E4")]
	public InstanceFlowNode GetInstanceFlowNode(int id)
	{
		return null;
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x1402524", Offset = "0x1402524", VA = "0x1402524")]
	public Dictionary<int, InstanceFlowNode> GetAllInstanceFlowNodes()
	{
		return null;
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x140252C", Offset = "0x140252C", VA = "0x140252C")]
	public Dictionary<int, InstanceFlowNode> GetPlayerAllInstanceFlowNodesById(int id)
	{
		return null;
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x1402614", Offset = "0x1402614", VA = "0x1402614")]
	public List<InstanceFlowNode> GetInstanceFlowNodes(int insId)
	{
		return null;
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x14026FC", Offset = "0x14026FC", VA = "0x14026FC")]
	public List<InstanceFlowNode> GetNextInstanceFlowNodes()
	{
		return null;
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x140283C", Offset = "0x140283C", VA = "0x140283C")]
	public void SetSelectInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1402B70", Offset = "0x1402B70", VA = "0x1402B70")]
	private void GotoBattleRoomSelect()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1402CC4", Offset = "0x1402CC4", VA = "0x1402CC4")]
	public void SetServerSelectInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1402CEC", Offset = "0x1402CEC", VA = "0x1402CEC")]
	public void SetServerPreSelectInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1402D7C", Offset = "0x1402D7C", VA = "0x1402D7C")]
	public void SelectInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1402FD8", Offset = "0x1402FD8", VA = "0x1402FD8")]
	public void PreselectionInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1402120", Offset = "0x1402120", VA = "0x1402120")]
	public void SelectDefalutInstanceFlowNode()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x140325C", Offset = "0x140325C", VA = "0x140325C")]
	public bool IsCaptain(int uId)
	{
		return default(bool);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1402F40", Offset = "0x1402F40", VA = "0x1402F40")]
	public bool IsCaptain(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x140326C", Offset = "0x140326C", VA = "0x140326C")]
	public bool IsOwnerCaptain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1403344", Offset = "0x1403344", VA = "0x1403344")]
	public WUnit GetCaptain()
	{
		return null;
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1401444", Offset = "0x1401444", VA = "0x1401444")]
	public void FreshCaptain()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1401A9C", Offset = "0x1401A9C", VA = "0x1401A9C")]
	private void StartInstanceDiffLevel()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x14035E0", Offset = "0x14035E0", VA = "0x14035E0")]
	public void AddInstanceFailTimes()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x14035F0", Offset = "0x14035F0", VA = "0x14035F0")]
	public void SetCurInstanceFlowPass(InstanceFlowNode insFlow)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x14036D4", Offset = "0x14036D4", VA = "0x14036D4")]
	public bool IsCurSelectInstanceFlowForPass(int insFlowId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x14037A0", Offset = "0x14037A0", VA = "0x14037A0")]
	public void SetCurSelectInstanceFlowEnter()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x140107C", Offset = "0x140107C", VA = "0x140107C")]
	public void SetInstanceFlowStatus(int insFlowId, int status, int passStatus, int curLevel)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x14038AC", Offset = "0x14038AC", VA = "0x14038AC")]
	public void FreshCurLevel()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1402490", Offset = "0x1402490", VA = "0x1402490")]
	public void SendInstanceInfo(List<InstanceFlowNode> list)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x14039D8", Offset = "0x14039D8", VA = "0x14039D8")]
	public void SyncInstanceFlowStatus(int insFlowId, int status, int passStatus, int curLevel)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1402F60", Offset = "0x1402F60", VA = "0x1402F60")]
	public void SendSelectInstanceFlow(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x14031E4", Offset = "0x14031E4", VA = "0x14031E4")]
	public void SendPreselectInstanceFlow(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1403A78", Offset = "0x1403A78", VA = "0x1403A78")]
	public void SyncC2SSelectInstanceFlow(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1403B60", Offset = "0x1403B60", VA = "0x1403B60")]
	public void SyncC2SPreSelectInstanceFlow(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1403C48", Offset = "0x1403C48", VA = "0x1403C48")]
	public void SyncS2CInstanceFlowStatus(int useSelectInsId, int useSelectInsFlowId, int runSelectInsId, int runSelectInsFlowId, int runningInsId, int runningInsFlowId, bool isUIOp)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1403E00", Offset = "0x1403E00", VA = "0x1403E00")]
	public void SyncS2CPreslectStatus(int runningInsId)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x14019F0", Offset = "0x14019F0", VA = "0x14019F0")]
	private bool IsGameStatusEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1403E90", Offset = "0x1403E90", VA = "0x1403E90")]
	public SelectInstanceManager()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x140402C", Offset = "0x140402C", VA = "0x140402C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCA10", Offset = "0xFDCA10")]
	private void <InitPlayerInstanceFlowNodes>b__41_0(WUnit u)
	{
	}
}
[Token(Token = "0x20000F2")]
public static class GameObjectExtensions
{
	[Token(Token = "0x6000545")]
	public static T AddComponentOnce<T>(this GameObject self) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	public static void DestroyComponent<T>(this GameObject self) where T : Component
	{
	}

	[Token(Token = "0x6000547")]
	public static void DestroyComponent<T>(this GameObject self, float t) where T : Component
	{
	}
}
[Token(Token = "0x20000F3")]
public static class MonoBehaviourExtensions
{
	[Token(Token = "0x20004A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A54", Offset = "0xFD5A54")]
	private sealed class <_Delay>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x170003D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600252F")]
			[Address(RVA = "0x14B4110", Offset = "0x14B4110", VA = "0x14B4110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002531")]
			[Address(RVA = "0x14B4178", Offset = "0x14B4178", VA = "0x14B4178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x14B3954", Offset = "0x14B3954", VA = "0x14B3954")]
		[DebuggerHidden]
		public <_Delay>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x14B404C", Offset = "0x14B404C", VA = "0x14B404C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x14B4050", Offset = "0x14B4050", VA = "0x14B4050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x14B4118", Offset = "0x14B4118", VA = "0x14B4118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A64", Offset = "0xFD5A64")]
	private sealed class <_Delay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time1;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time2;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x170003D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002535")]
			[Address(RVA = "0x14B4250", Offset = "0x14B4250", VA = "0x14B4250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002537")]
			[Address(RVA = "0x14B42B8", Offset = "0x14B42B8", VA = "0x14B42B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x14B3A74", Offset = "0x14B3A74", VA = "0x14B3A74")]
		[DebuggerHidden]
		public <_Delay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x14B4180", Offset = "0x14B4180", VA = "0x14B4180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x14B4184", Offset = "0x14B4184", VA = "0x14B4184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x14B4258", Offset = "0x14B4258", VA = "0x14B4258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A74", Offset = "0xFD5A74")]
	private sealed class <_Loop>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x170003DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600253B")]
			[Address(RVA = "0x14B46B8", Offset = "0x14B46B8", VA = "0x14B46B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600253D")]
			[Address(RVA = "0x14B4720", Offset = "0x14B4720", VA = "0x14B4720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x14B3B64", Offset = "0x14B3B64", VA = "0x14B3B64")]
		[DebuggerHidden]
		public <_Loop>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x14B45E4", Offset = "0x14B45E4", VA = "0x14B45E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x14B45E8", Offset = "0x14B45E8", VA = "0x14B45E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x14B46C0", Offset = "0x14B46C0", VA = "0x14B46C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A84", Offset = "0xFD5A84")]
	private sealed class <_Loop>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time1;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time2;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x170003DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0x14B4808", Offset = "0x14B4808", VA = "0x14B4808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002543")]
			[Address(RVA = "0x14B4870", Offset = "0x14B4870", VA = "0x14B4870", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x14B3C58", Offset = "0x14B3C58", VA = "0x14B3C58")]
		[DebuggerHidden]
		public <_Loop>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x14B4728", Offset = "0x14B4728", VA = "0x14B4728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x14B472C", Offset = "0x14B472C", VA = "0x14B472C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x14B4810", Offset = "0x14B4810", VA = "0x14B4810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5A94", Offset = "0xFD5A94")]
	private sealed class <_Loop>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x170003DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002547")]
			[Address(RVA = "0x14B4940", Offset = "0x14B4940", VA = "0x14B4940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0x14B49A8", Offset = "0x14B49A8", VA = "0x14B49A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x14B3D48", Offset = "0x14B3D48", VA = "0x14B3D48")]
		[DebuggerHidden]
		public <_Loop>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x14B4878", Offset = "0x14B4878", VA = "0x14B4878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x14B487C", Offset = "0x14B487C", VA = "0x14B487C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x14B4948", Offset = "0x14B4948", VA = "0x14B4948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5AA4", Offset = "0xFD5AA4")]
	private sealed class <_Frame>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<bool> func;

		[Token(Token = "0x170003E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600254D")]
			[Address(RVA = "0x14B448C", Offset = "0x14B448C", VA = "0x14B448C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600254F")]
			[Address(RVA = "0x14B44F4", Offset = "0x14B44F4", VA = "0x14B44F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x14B3E28", Offset = "0x14B3E28", VA = "0x14B3E28")]
		[DebuggerHidden]
		public <_Frame>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x14B43E4", Offset = "0x14B43E4", VA = "0x14B43E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x14B43E8", Offset = "0x14B43E8", VA = "0x14B43E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x14B4494", Offset = "0x14B4494", VA = "0x14B4494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5AB4", Offset = "0xFD5AB4")]
	private sealed class <_Frame>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x170003E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002553")]
			[Address(RVA = "0x14B4574", Offset = "0x14B4574", VA = "0x14B4574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002555")]
			[Address(RVA = "0x14B45DC", Offset = "0x14B45DC", VA = "0x14B45DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x14B3F08", Offset = "0x14B3F08", VA = "0x14B3F08")]
		[DebuggerHidden]
		public <_Frame>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x14B44FC", Offset = "0x14B44FC", VA = "0x14B44FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x14B4500", Offset = "0x14B4500", VA = "0x14B4500", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x14B457C", Offset = "0x14B457C", VA = "0x14B457C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5AC4", Offset = "0xFD5AC4")]
	private sealed class <_EndOfFrame>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x170003E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002559")]
			[Address(RVA = "0x14B4374", Offset = "0x14B4374", VA = "0x14B4374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600255B")]
			[Address(RVA = "0x14B43DC", Offset = "0x14B43DC", VA = "0x14B43DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x14B3FE8", Offset = "0x14B3FE8", VA = "0x14B3FE8")]
		[DebuggerHidden]
		public <_EndOfFrame>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x14B42C0", Offset = "0x14B42C0", VA = "0x14B42C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x14B42C4", Offset = "0x14B42C4", VA = "0x14B42C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x14B437C", Offset = "0x14B437C", VA = "0x14B437C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000548")]
	public static void MapAllComponent<T>(this MonoBehaviour self, Action<T> action) where T : Component
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x14B38C8", Offset = "0x14B38C8", VA = "0x14B38C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDCA60", Offset = "0xFDCA60")]
	private static IEnumerator _Delay(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x14B3980", Offset = "0x14B3980", VA = "0x14B3980")]
	public static Coroutine Delay(this MonoBehaviour self, float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x14B39E4", Offset = "0x14B39E4", VA = "0x14B39E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDCAD4", Offset = "0xFDCAD4")]
	private static IEnumerator _Delay(float time1, float time2, Action action)
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x14B3AA0", Offset = "0x14B3AA0", VA = "0x14B3AA0")]
	public static Coroutine Delay(this MonoBehaviour self, float time1, float time2, Action action)
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x14B3AD8", Offset = "0x14B3AD8", VA = "0x14B3AD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDCB48", Offset = "0xFDCB48")]
	private static IEnumerator _Loop(float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x14B3B90", Offset = "0x14B3B90", VA = "0x14B3B90")]
	public static Coroutine Loop(this MonoBehaviour self, float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x14B3BC8", Offset = "0x14B3BC8", VA = "0x14B3BC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDCBBC", Offset = "0xFDCBBC")]
	private static IEnumerator _Loop(float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x14B3C84", Offset = "0x14B3C84", VA = "0x14B3C84")]
	public static Coroutine Loop(this MonoBehaviour self, float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x14B3CBC", Offset = "0x14B3CBC", VA = "0x14B3CBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDCC30", Offset = "0xFDCC30")]
	private static IEnumerator _Loop(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x14B3D74", Offset = "0x14B3D74", VA = "0x14B3D74")]
	public static Coroutine Loop(this MonoBehaviour self, float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x14B3DAC", Offset = "0x14B3DAC", VA = "0x14B3DAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDCCA4", Offset = "0xFDCCA4")]
	private static IEnumerator _Frame(Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x14B3E54", Offset = "0x14B3E54", VA = "0x14B3E54")]
	public static Coroutine Frame(this MonoBehaviour self, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x14B3E8C", Offset = "0x14B3E8C", VA = "0x14B3E8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDCD18", Offset = "0xFDCD18")]
	private static IEnumerator _Frame(Action action)
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x14B3F34", Offset = "0x14B3F34", VA = "0x14B3F34")]
	public static Coroutine Frame(this MonoBehaviour self, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x14B3F6C", Offset = "0x14B3F6C", VA = "0x14B3F6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDCD8C", Offset = "0xFDCD8C")]
	private static IEnumerator _EndOfFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x14B4014", Offset = "0x14B4014", VA = "0x14B4014")]
	public static Coroutine EndOfFrame(this MonoBehaviour self, Action action)
	{
		return null;
	}
}
[Token(Token = "0x20000F4")]
public static class TransformExtensions
{
	[Token(Token = "0x6000559")]
	public static void MapAllComponent<T>(this Transform self, Action<T> action) where T : Component
	{
	}

	[Token(Token = "0x600055A")]
	public static void RandInComponents<T>(this Transform self, Action<T> action) where T : Component
	{
	}
}
[Token(Token = "0x20000F5")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFD1C98", Offset = "0xFD1C98")]
public class UnOrderMultiMap<T, K>
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Dictionary<T, List<K>> dictionary;

	[Token(Token = "0x1700007F")]
	public int Count
	{
		[Token(Token = "0x600055E")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000080")]
	public List<K> Item
	{
		[Token(Token = "0x6000563")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600055B")]
	public Dictionary<T, List<K>> GetDictionary()
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	public void Add(T t, K k)
	{
	}

	[Token(Token = "0x600055D")]
	public KeyValuePair<T, List<K>> First()
	{
		return default(KeyValuePair<T, List<K>>);
	}

	[Token(Token = "0x600055F")]
	private List<K> FetchList()
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	public bool Remove(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000561")]
	public bool Remove(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000562")]
	public K[] GetAll(T t)
	{
		return null;
	}

	[Token(Token = "0x6000564")]
	public K GetOne(T t)
	{
		return (K)null;
	}

	[Token(Token = "0x6000565")]
	public bool Contains(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000566")]
	public bool ContainsKey(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000567")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000568")]
	public UnOrderMultiMap()
	{
	}
}
[Token(Token = "0x20000F6")]
public static class UtilityTool
{
	[Token(Token = "0x20004A9")]
	public class AgentClass<T1, T2>
	{
		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T1, T2> stateList;

		[Token(Token = "0x600255C")]
		public void Register(T1 type, T2 st)
		{
		}

		[Token(Token = "0x600255D")]
		public void UnRegister(T1 type)
		{
		}

		[Token(Token = "0x600255E")]
		public bool IsHasState(T1 nextType)
		{
			return default(bool);
		}

		[Token(Token = "0x600255F")]
		public T2 GetStateValue(T1 type)
		{
			return (T2)null;
		}

		[Token(Token = "0x6002560")]
		public AgentClass()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004AA")]
	public class SerializationList<T>
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> target;

		[Token(Token = "0x6002561")]
		public List<T> ToList()
		{
			return null;
		}

		[Token(Token = "0x6002562")]
		public SerializationList(List<T> target)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004AB")]
	public class SerializationDictionary<TKey, TValue> : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> keys;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TValue> values;

		[NonSerialized]
		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<TKey, TValue> target;

		[Token(Token = "0x6002563")]
		public Dictionary<TKey, TValue> ToDictionary()
		{
			return null;
		}

		[Token(Token = "0x6002564")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002565")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002566")]
		public SerializationDictionary()
		{
		}
	}

	[Token(Token = "0x400058A")]
	private const float ByteToM = 1E-06f;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsUnityPause;

	[Token(Token = "0x17000081")]
	public static bool isApplicationPlaying
	{
		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1598BE4", Offset = "0x1598BE4", VA = "0x1598BE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x15976D4", Offset = "0x15976D4", VA = "0x15976D4")]
	public static bool IsBit(int state, int flag)
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x15976E0", Offset = "0x15976E0", VA = "0x15976E0")]
	public static void SetBit(ref int state, int flag, bool value)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x15976FC", Offset = "0x15976FC", VA = "0x15976FC")]
	public static bool IsByteBit(byte state, int flag)
	{
		return default(bool);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x159770C", Offset = "0x159770C", VA = "0x159770C")]
	public static void SetByteBit(ref byte state, int flag, bool value)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1597728", Offset = "0x1597728", VA = "0x1597728")]
	public static XMLNode SelectSingleNode(XMLNode xn, string url)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x15977DC", Offset = "0x15977DC", VA = "0x15977DC")]
	public static XMLNodeList SelectArrayNode(XMLNode xn, string url)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1597890", Offset = "0x1597890", VA = "0x1597890")]
	public static string Attribute(XMLNode node, string name)
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1597908", Offset = "0x1597908", VA = "0x1597908")]
	public static bool HasAttribute(XMLNode node, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1597994", Offset = "0x1597994", VA = "0x1597994")]
	public static int GetIntAttribute(XMLNode node, string name, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1597AA4", Offset = "0x1597AA4", VA = "0x1597AA4")]
	public static float GetFloatAttribute(XMLNode node, string name, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1597BBC", Offset = "0x1597BBC", VA = "0x1597BBC")]
	public static string GetStringAttribute(XMLNode node, string name, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1597C5C", Offset = "0x1597C5C", VA = "0x1597C5C")]
	public static Vector3 GetVector3Attribute(XMLNode node, string name, [Optional] Vector3 defaultValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1597DE0", Offset = "0x1597DE0", VA = "0x1597DE0")]
	public static string ToString(byte[] array)
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1597E6C", Offset = "0x1597E6C", VA = "0x1597E6C")]
	public static bool XML_WriteV3(XmlElement iXmlData, Vector3 iValue, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1597FE4", Offset = "0x1597FE4", VA = "0x1597FE4")]
	public static int parseObjInt(object obj, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1598090", Offset = "0x1598090", VA = "0x1598090")]
	public static byte parseByte(string text, byte defaultValue = 0)
	{
		return default(byte);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1597A6C", Offset = "0x1597A6C", VA = "0x1597A6C")]
	public static int parseInt(string text, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1597B84", Offset = "0x1597B84", VA = "0x1597B84")]
	public static float parseFloat(string text, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x15980C8", Offset = "0x15980C8", VA = "0x15980C8")]
	public static long parseLong(string text, long defaultValue = 0L)
	{
		return default(long);
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1598100", Offset = "0x1598100", VA = "0x1598100")]
	public static bool parseBool(string text, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1598198", Offset = "0x1598198", VA = "0x1598198")]
	public static int ParticleSystemLength(GameObject transform)
	{
		return default(int);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x159837C", Offset = "0x159837C", VA = "0x159837C")]
	public static Transform FindChild(Transform trans, string goName)
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x15984D4", Offset = "0x15984D4", VA = "0x15984D4")]
	public static void PollingChildWithDeep(Transform trans, Action<Transform> action, int deep = 5)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x15985BC", Offset = "0x15985BC", VA = "0x15985BC")]
	public static void PollingChild(Transform trans, Action<Transform> action)
	{
	}

	[Token(Token = "0x6000581")]
	public static T FindWithTag<T>(string szTagNmae) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x15986C8", Offset = "0x15986C8", VA = "0x15986C8")]
	public static Transform GetTransform(Transform iRoot, string iPath)
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x15987DC", Offset = "0x15987DC", VA = "0x15987DC")]
	public static Transform GetTransformByName(Transform check, string name)
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x15988B0", Offset = "0x15988B0", VA = "0x15988B0")]
	public static void GetTransformByWithTag(Transform target, string tagName, ref Transform obj)
	{
	}

	[Token(Token = "0x6000585")]
	public static T AddComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000586")]
	public static T AddComponent<T>(Transform iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000587")]
	public static T GetComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	public static T GetComponent<T>(Transform iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000589")]
	public static T GetChildComponent<T>(GameObject iObject, string szFindName) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	public static T GetComponentInChildren<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	public static T GetComponentInParent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1598AB4", Offset = "0x1598AB4", VA = "0x1598AB4")]
	public static void SetGameObjectLayer(GameObject go, int srcLayer, int destLayer)
	{
	}

	[Token(Token = "0x600058D")]
	public static void PollingChildComponent<T>(Transform trans, Action<T> action, int deep = 5) where T : Component
	{
	}

	[Token(Token = "0x600058E")]
	public static void PollingChildComponent<T>(Transform trans, Action<T> action) where T : Component
	{
	}

	[Token(Token = "0x6000590")]
	public static T GetCacheComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	public static T AddCacheComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	public static T GetCacheComponentInChildren<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	public static T GetCacheComponentInParent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1598BEC", Offset = "0x1598BEC", VA = "0x1598BEC")]
	public static List<string> Net_GetIPv4()
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1598CEC", Offset = "0x1598CEC", VA = "0x1598CEC")]
	public static bool isNullText(string text)
	{
		return default(bool);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1598D74", Offset = "0x1598D74", VA = "0x1598D74")]
	public static bool SetIdentityPosition(GameObject gameObj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1598EFC", Offset = "0x1598EFC", VA = "0x1598EFC")]
	public static bool SetIdentityPosition(GameObject gameObj, Transform parent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x15990AC", Offset = "0x15990AC", VA = "0x15990AC")]
	public static Quaternion GetVector3ToQuaternion(Vector3 source, Vector3 dire)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1599228", Offset = "0x1599228", VA = "0x1599228")]
	public static Offset<Flat_Vector3> ConvertVector3ToFlat(FlatBufferBuilder builder, Vector3 value)
	{
		return default(Offset<Flat_Vector3>);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1599340", Offset = "0x1599340", VA = "0x1599340")]
	public static Offset<Flat_Vector3> ConvertVector3ToFlat(FlatBufferBuilder builder, Flat_Vector3 value)
	{
		return default(Offset<Flat_Vector3>);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1599488", Offset = "0x1599488", VA = "0x1599488")]
	public static Offset<Flat_Vector2> ConvertVector2ToFlat(FlatBufferBuilder builder, Vector2 value)
	{
		return default(Offset<Flat_Vector2>);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1599590", Offset = "0x1599590", VA = "0x1599590")]
	public static Offset<Flat_Vector2> ConvertVector2ToFlat(FlatBufferBuilder builder, Flat_Vector2 value)
	{
		return default(Offset<Flat_Vector2>);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x15996C0", Offset = "0x15996C0", VA = "0x15996C0")]
	public static Offset<Flat_Quaternion> ConvertQuaternionToFlat(FlatBufferBuilder builder, Quaternion value)
	{
		return default(Offset<Flat_Quaternion>);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x15997E0", Offset = "0x15997E0", VA = "0x15997E0")]
	public static Offset<Flat_Quaternion> ConvertQuaternionToFlat(FlatBufferBuilder builder, Flat_Quaternion value)
	{
		return default(Offset<Flat_Quaternion>);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1599948", Offset = "0x1599948", VA = "0x1599948")]
	public static Vector3 ConvertFlatToVector3(Flat_Vector3 value)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1599A80", Offset = "0x1599A80", VA = "0x1599A80")]
	public static Vector2 ConvertFlatToVector2(Flat_Vector2 value)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1599B9C", Offset = "0x1599B9C", VA = "0x1599B9C")]
	public static Quaternion ConvertFlatToQuaternion(Flat_Quaternion value)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1599CF8", Offset = "0x1599CF8", VA = "0x1599CF8")]
	public static void FreeMemory()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x159A274", Offset = "0x159A274", VA = "0x159A274")]
	public static void BeginSample(string _name)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x159A278", Offset = "0x159A278", VA = "0x159A278")]
	public static void EndSample()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x159A27C", Offset = "0x159A27C", VA = "0x159A27C")]
	public static void SetTitleText(string titleName)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x159A280", Offset = "0x159A280", VA = "0x159A280")]
	public static void ClearRegistryConfig()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1597400", Offset = "0x1597400", VA = "0x1597400")]
	public static void UnityPause()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x159A284", Offset = "0x159A284", VA = "0x159A284")]
	public static bool CheckNaNOrInfinity(Vector3 vector3)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x159A318", Offset = "0x159A318", VA = "0x159A318")]
	public static bool CheckNaNOrInfinity(Quaternion quaternion)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x159A3D0", Offset = "0x159A3D0", VA = "0x159A3D0")]
	public static Vector3 TransformPosition(Vector3 inputPos, Transform inverseTra, Transform tra)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x159A408", Offset = "0x159A408", VA = "0x159A408")]
	public static void FixAudioLeak(WwiseDefine wwiseDefine, float autoDestory = 20f)
	{
	}
}
[Token(Token = "0x20000F7")]
public class VideoPlayerController : MonoBehaviour
{
	[Token(Token = "0x20004AC")]
	private enum VideoType
	{
		[Token(Token = "0x4001B85")]
		type_goodLogo,
		[Token(Token = "0x4001B86")]
		type_otherLogo,
		[Token(Token = "0x4001B87")]
		type_video,
		[Token(Token = "0x4001B88")]
		type_End
	}

	[Serializable]
	[Token(Token = "0x20004AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5AD4", Offset = "0xFD5AD4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<VideoPlayer> <>9__43_0;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<VideoPlayer> <>9__43_1;

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x15A47FC", Offset = "0x15A47FC", VA = "0x15A47FC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x15A4804", Offset = "0x15A4804", VA = "0x15A4804")]
		internal void <.ctor>b__43_0(VideoPlayer <p0>)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x15A4808", Offset = "0x15A4808", VA = "0x15A4808")]
		internal void <.ctor>b__43_1(VideoPlayer <p0>)
		{
		}
	}

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 InitPos;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VideoPlayer player_3d;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VideoPlayer player_2d;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform point_a;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform point_b;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float displayDis;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string[] playList;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material videoSkybox;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, VideoPlayer> playersDict;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private VideoType curVideoType;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public bool IsPlayVideo;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<VideoPlayer> OnStart;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<VideoPlayer> OnEnd;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool Is2D;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isA;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool fogState;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material skybox;

	[Token(Token = "0x17000082")]
	[HideInInspector]
	public bool IsExistLogo
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x15A27C0", Offset = "0x15A27C0", VA = "0x15A27C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x15A2844", Offset = "0x15A2844", VA = "0x15A2844")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x15A28B4", Offset = "0x15A28B4", VA = "0x15A28B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x15A28B8", Offset = "0x15A28B8", VA = "0x15A28B8")]
	private void Init()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x15A29BC", Offset = "0x15A29BC", VA = "0x15A29BC")]
	private void VideoPlayer_started(VideoPlayer source)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x15A2A24", Offset = "0x15A2A24", VA = "0x15A2A24")]
	private void VideoPlayer_loopPointReached(VideoPlayer source)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x15A2A8C", Offset = "0x15A2A8C", VA = "0x15A2A8C")]
	private void EndOneClip(VideoPlayer player)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x15A30A8", Offset = "0x15A30A8", VA = "0x15A30A8")]
	private Transform GetPlayPoint()
	{
		return null;
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x15A2B90", Offset = "0x15A2B90", VA = "0x15A2B90")]
	private void _Play()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x15A32FC", Offset = "0x15A32FC", VA = "0x15A32FC")]
	private void InitGoodLogo(e_type_language language)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x15A36E0", Offset = "0x15A36E0", VA = "0x15A36E0")]
	private void InitVideoLang(e_type_language language)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x15A3DE8", Offset = "0x15A3DE8", VA = "0x15A3DE8")]
	public void InitVideo(bool is2d = false)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x15A3F4C", Offset = "0x15A3F4C", VA = "0x15A3F4C")]
	public void ReadyPlay()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x15A3F50", Offset = "0x15A3F50", VA = "0x15A3F50")]
	private void BeginPlay()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x15A2EE0", Offset = "0x15A2EE0", VA = "0x15A2EE0")]
	private void _Stop()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x15A40B8", Offset = "0x15A40B8", VA = "0x15A40B8")]
	public bool CanPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x15A411C", Offset = "0x15A411C", VA = "0x15A411C")]
	public void TriggerEnd()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x15A4178", Offset = "0x15A4178", VA = "0x15A4178")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDCE20", Offset = "0xFDCE20")]
	private void Play1()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x15A4410", Offset = "0x15A4410", VA = "0x15A4410")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDCE58", Offset = "0xFDCE58")]
	private void Play2()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x15A4184", Offset = "0x15A4184", VA = "0x15A4184")]
	public void Play(bool isPlayVideo, bool isA)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x15A441C", Offset = "0x15A441C", VA = "0x15A441C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDCE90", Offset = "0xFDCE90")]
	public void Stop()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x15A45E0", Offset = "0x15A45E0", VA = "0x15A45E0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x15A45EC", Offset = "0x15A45EC", VA = "0x15A45EC")]
	public VideoPlayerController()
	{
	}
}
[Token(Token = "0x20000F8")]
public static class WTime
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly DateTime time197011;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float curDeltaTime;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int curMillisDeltaTime;

	[Token(Token = "0x17000083")]
	public static long SystemTimeTicks
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x15A4A24", Offset = "0x15A4A24", VA = "0x15A4A24")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000084")]
	public static float realtimeSinceStartup
	{
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x15A4A9C", Offset = "0x15A4A9C", VA = "0x15A4A9C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000085")]
	public static float unscaledTime
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x15A4AA4", Offset = "0x15A4AA4", VA = "0x15A4AA4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000086")]
	public static float deltaTime
	{
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x15A4AAC", Offset = "0x15A4AAC", VA = "0x15A4AAC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000087")]
	public static int millisDeltaTime
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x15A4B14", Offset = "0x15A4B14", VA = "0x15A4B14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000088")]
	public static float unscaledDeltaTime
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x15A4C0C", Offset = "0x15A4C0C", VA = "0x15A4C0C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000089")]
	public static float TimeScale
	{
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x15A4C14", Offset = "0x15A4C14", VA = "0x15A4C14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x15A4C1C", Offset = "0x15A4C1C", VA = "0x15A4C1C")]
		set
		{
		}
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x15A480C", Offset = "0x15A480C", VA = "0x15A480C")]
	public static DateTime GetCovertServerDataTime(long serverTimeMillis, bool isClientTimeZone = false)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x15A4B7C", Offset = "0x15A4B7C", VA = "0x15A4B7C")]
	public static void SetDeltaTime(float deltaTime)
	{
	}
}
[Token(Token = "0x20000F9")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD1CD0", Offset = "0xFD1CD0")]
public class ComponentCacheAttribute : Attribute
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7618", Offset = "0xFD7618")]
	private readonly Type <ComponentCacheType>k__BackingField;

	[Token(Token = "0x1700008A")]
	public Type ComponentCacheType
	{
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x13D089C", Offset = "0x13D089C", VA = "0x13D089C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCEC8", Offset = "0xFDCEC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x13D08A4", Offset = "0x13D08A4", VA = "0x13D08A4")]
	public ComponentCacheAttribute(Type type)
	{
	}
}
[Token(Token = "0x20000FA")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD1D08", Offset = "0xFD1D08")]
public class SingletonComponentCacheAttribute : Attribute
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7628", Offset = "0xFD7628")]
	private readonly Type <ComponentCacheType>k__BackingField;

	[Token(Token = "0x1700008B")]
	public Type ComponentCacheType
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1416340", Offset = "0x1416340", VA = "0x1416340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCED8", Offset = "0xFDCED8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1416348", Offset = "0x1416348", VA = "0x1416348")]
	public SingletonComponentCacheAttribute(Type type)
	{
	}
}
[Token(Token = "0x20000FB")]
public class ComponentCacheTools : MonoBehaviour
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Type, List<Component>> ComponentsDic;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Type, Component> SingletonComponentDic;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Type, object[]> TypeToCustomAttributesDic;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x13D08D8", Offset = "0x13D08D8", VA = "0x13D08D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x13D0C20", Offset = "0x13D0C20", VA = "0x13D0C20")]
	private void AddToDic(Type type, Component component)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x13D0D08", Offset = "0x13D0D08", VA = "0x13D0D08")]
	private void AddToSingletonDic(Type type, Component component)
	{
	}

	[Token(Token = "0x60005D6")]
	public List<Component> GetCacheComponents<T>()
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x13D0F14", Offset = "0x13D0F14", VA = "0x13D0F14")]
	public List<Component> GetCacheComponents(Type type)
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	public T GetCacheSingletonComponent<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x13D0F94", Offset = "0x13D0F94", VA = "0x13D0F94")]
	public Component GetCacheSingletonComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	public bool PollingCacheComponent<T>(Action<T> returnCB, bool isReturnNull = true) where T : Component
	{
		return default(bool);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x13D1014", Offset = "0x13D1014", VA = "0x13D1014")]
	public ComponentCacheTools()
	{
	}
}
[Token(Token = "0x20000FC")]
public class DamageReactTools : Singleton<DamageReactTools>
{
	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x13D2B64", Offset = "0x13D2B64", VA = "0x13D2B64")]
	public void AttackHead()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x13D2F4C", Offset = "0x13D2F4C", VA = "0x13D2F4C")]
	public void EncounterAttack(Vector3 _hitDir, Transform _transform)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x13D30EC", Offset = "0x13D30EC", VA = "0x13D30EC")]
	public void EncounterAttack(EAttackDir eAttackDir)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x13D30F0", Offset = "0x13D30F0", VA = "0x13D30F0")]
	public void Burn()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x13D30F4", Offset = "0x13D30F4", VA = "0x13D30F4")]
	public void Poisoning()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x13D30F8", Offset = "0x13D30F8", VA = "0x13D30F8")]
	public void SprayBlood()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x13D30FC", Offset = "0x13D30FC", VA = "0x13D30FC")]
	public void ToDie()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x13D3100", Offset = "0x13D3100", VA = "0x13D3100")]
	public void BornToDie()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x13D3104", Offset = "0x13D3104", VA = "0x13D3104")]
	public void ScreenFadeOutIn(bool bOut, float duration, Action onFadeComplete)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x13D3108", Offset = "0x13D3108", VA = "0x13D3108")]
	public void ScreenFadeStop()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x13D310C", Offset = "0x13D310C", VA = "0x13D310C")]
	public void ShakeCamera(float strength, float shakeDuration)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x13D3110", Offset = "0x13D3110", VA = "0x13D3110")]
	public void ToDefault()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x13D3114", Offset = "0x13D3114", VA = "0x13D3114")]
	private bool CheckComponent()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x13D311C", Offset = "0x13D311C", VA = "0x13D311C")]
	public void Init()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x13D3120", Offset = "0x13D3120", VA = "0x13D3120")]
	public DamageReactTools()
	{
	}
}
[Token(Token = "0x20000FD")]
public class EncounterAttackEffects : MonoBehaviour
{
	[Token(Token = "0x20004AE")]
	public enum EncounterAttackDir
	{
		[Token(Token = "0x4001B8D")]
		none = 0,
		[Token(Token = "0x4001B8E")]
		left = 1,
		[Token(Token = "0x4001B8F")]
		right = 2,
		[Token(Token = "0x4001B90")]
		up = 3,
		[Token(Token = "0x4001B91")]
		down = 4,
		[Token(Token = "0x4001B92")]
		head = 100
	}

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject up;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject down;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject left;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject right;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject head;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EncounterAttackEffects Instance;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> effects;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x13E4574", Offset = "0x13E4574", VA = "0x13E4574")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x13D2BC0", Offset = "0x13D2BC0", VA = "0x13D2BC0")]
	public void Play(EncounterAttackDir dir)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x13E45CC", Offset = "0x13E45CC", VA = "0x13E45CC")]
	public EncounterAttackEffects()
	{
	}
}
[Token(Token = "0x20000FE")]
public class CSVHelper
{
	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7638", Offset = "0xFD7638")]
	private static readonly NumberFormatInfo <NumberFormatInfo>k__BackingField;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string ADD_PATH_NAME;

	[Token(Token = "0x40005B0")]
	public const string PATH_NAME = "Table";

	[Token(Token = "0x1700008C")]
	public static NumberFormatInfo NumberFormatInfo
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1651D00", Offset = "0x1651D00", VA = "0x1651D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCEE8", Offset = "0xFDCEE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1651D68", Offset = "0x1651D68", VA = "0x1651D68")]
	public static void SetAddPathName(string name)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x165075C", Offset = "0x165075C", VA = "0x165075C")]
	public static string Combine(string csv_name)
	{
		return null;
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1650B34", Offset = "0x1650B34", VA = "0x1650B34")]
	public static byte[] GetBytes(string table_path)
	{
		return null;
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x1650ACC", Offset = "0x1650ACC", VA = "0x1650ACC")]
	public static ulong GetKey(object key1)
	{
		return default(ulong);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1651DD8", Offset = "0x1651DD8", VA = "0x1651DD8")]
	public static ulong GetKey(object key1, object key2)
	{
		return default(ulong);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1651EE8", Offset = "0x1651EE8", VA = "0x1651EE8")]
	public static ulong GetKey(object key1, object key2, object key3)
	{
		return default(ulong);
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1652034", Offset = "0x1652034", VA = "0x1652034")]
	public static ulong GetKey(object key1, object key2, object key3, object key4)
	{
		return default(ulong);
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x16521BC", Offset = "0x16521BC", VA = "0x16521BC")]
	public static ulong GetKey(object key1, object key2, object key3, object key4, object key5)
	{
		return default(ulong);
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1652380", Offset = "0x1652380", VA = "0x1652380")]
	public CSVHelper()
	{
	}
}
[Token(Token = "0x20000FF")]
public class DataManager : Singleton<DataManager>
{
	[Token(Token = "0x20004AF")]
	public class LevelComparer : IComparer<int>
	{
		[Token(Token = "0x600256B")]
		[Address(RVA = "0x13D8A8C", Offset = "0x13D8A8C", VA = "0x13D8A8C", Slot = "4")]
		public int Compare(int x, int y)
		{
			return default(int);
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x13D8A84", Offset = "0x13D8A84", VA = "0x13D8A84")]
		public LevelComparer()
		{
		}
	}

	[Token(Token = "0x20004B0")]
	public struct ExpShareData
	{
		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int level_diff;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float killer_ratio;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float other_ratio;
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, UnitAttribute> playerDataHash;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, UnitAttribute> monsterDataHash;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, WeaponAttribute> weaponDataHash;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<LiveCameraConfigData>> LiveCameraStepConfigDataHash;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, LiveCameraConfigData> LiveCameraCommonConfigDataHash;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, InstanceFlowData> InstanceFlowDataHash;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MultiSortMap<int, int, WeaponLevelData> weaponLevelHash;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, int> weaponMaxLevelHash;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MultiSortMap<int, int, PlayerLevelData> playerLevelHash;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, int> playerMaxLevelHash;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, int> playerMinLevelHash;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MultiSortMap<int, int, MonsterLevelData> monsterLevelHash;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, int> monsterMaxLevelHash;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<int, int> monsterMinLevelHash;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<int, ExpShareData> ExpShareDataDic;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<int, string> SettingHash;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x13D4420", Offset = "0x13D4420", VA = "0x13D4420")]
	public void Init()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x13D71B0", Offset = "0x13D71B0", VA = "0x13D71B0")]
	public WeaponLevelData GetWeaponLevelData(int weaponType, int lv)
	{
		return null;
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x13D7478", Offset = "0x13D7478", VA = "0x13D7478")]
	public int GetWeaponMaxLevel(int weaponType)
	{
		return default(int);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x13D3CB0", Offset = "0x13D3CB0", VA = "0x13D3CB0")]
	public PlayerLevelData GetPlayerLevelData(int playerType, int lv)
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x13D757C", Offset = "0x13D757C", VA = "0x13D757C")]
	public SortedDictionary<int, PlayerLevelData> GetPlayerLevelDatas(int playerType)
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x13D3858", Offset = "0x13D3858", VA = "0x13D3858")]
	public int GetPlayerMaxLevel(int playerType)
	{
		return default(int);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x13D3650", Offset = "0x13D3650", VA = "0x13D3650")]
	public int GetPlayerMinLevel(int playerType)
	{
		return default(int);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x13D7678", Offset = "0x13D7678", VA = "0x13D7678")]
	public MonsterLevelData GetMonsterLevelData(int monsterType, int lv)
	{
		return null;
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x13D395C", Offset = "0x13D395C", VA = "0x13D395C")]
	public int GetMonsterMaxLevel(int monsterType)
	{
		return default(int);
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x13D3754", Offset = "0x13D3754", VA = "0x13D3754")]
	public int GetMonsterMinLevel(int monsterType)
	{
		return default(int);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x13D6F8C", Offset = "0x13D6F8C", VA = "0x13D6F8C")]
	private void InitExpShareData()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x13D7940", Offset = "0x13D7940", VA = "0x13D7940")]
	public bool GetExpShareData(int level_diff, out ExpShareData expShareData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x13D5624", Offset = "0x13D5624", VA = "0x13D5624")]
	public void InitPlayerAttribute()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x13D7A34", Offset = "0x13D7A34", VA = "0x13D7A34")]
	public UnitAttribute GetPlayerAttribute(int playerTableId)
	{
		return null;
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x13D63C4", Offset = "0x13D63C4", VA = "0x13D63C4")]
	public void InitMonsterAttribute()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x13D7AC8", Offset = "0x13D7AC8", VA = "0x13D7AC8")]
	public UnitAttribute GetMonsterAttribute(int monsterTableId)
	{
		return null;
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x13D7B5C", Offset = "0x13D7B5C", VA = "0x13D7B5C")]
	public UnitAttribute GetNpcAttribute(int npcTableId)
	{
		return null;
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x13D4E80", Offset = "0x13D4E80", VA = "0x13D4E80")]
	public void InitWeaponAttribute()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x13D7B64", Offset = "0x13D7B64", VA = "0x13D7B64")]
	public WeaponAttribute GetWeaponAttribute(e_weapon_type weaponType)
	{
		return null;
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x13D5DE0", Offset = "0x13D5DE0", VA = "0x13D5DE0")]
	private void InitLanguage()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x13D4C40", Offset = "0x13D4C40", VA = "0x13D4C40")]
	private void InitTableSetting()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x13D7BF8", Offset = "0x13D7BF8", VA = "0x13D7BF8")]
	public string GetSettingValue(e_setting_type key)
	{
		return null;
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x13D7BFC", Offset = "0x13D7BFC", VA = "0x13D7BFC")]
	public string GetSettingValue(int key)
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x13D7CE4", Offset = "0x13D7CE4", VA = "0x13D7CE4")]
	public int GetSettingValueInt(e_setting_type key)
	{
		return default(int);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x13D7CE8", Offset = "0x13D7CE8", VA = "0x13D7CE8")]
	public int GetSettingValueInt(int key)
	{
		return default(int);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x13D7E08", Offset = "0x13D7E08", VA = "0x13D7E08")]
	public float GetSettingValueFloat(e_setting_type key)
	{
		return default(float);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x13D7E0C", Offset = "0x13D7E0C", VA = "0x13D7E0C")]
	public float GetSettingValueFloat(int key)
	{
		return default(float);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x13D7F2C", Offset = "0x13D7F2C", VA = "0x13D7F2C")]
	public bool GetSettingValueBool(e_setting_type key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x13D7F30", Offset = "0x13D7F30", VA = "0x13D7F30")]
	public bool GetSettingValueBool(int key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x13D8030", Offset = "0x13D8030", VA = "0x13D8030")]
	public bool GetSettingValueSplitInt(e_setting_type key, Action<int, int> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x13D8034", Offset = "0x13D8034", VA = "0x13D8034")]
	public bool GetSettingValueSplitInt(int key, Action<int, int> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x13D829C", Offset = "0x13D829C", VA = "0x13D829C")]
	public bool GetSettingValueSplitFloat(e_setting_type key, Action<int, float> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x13D82A0", Offset = "0x13D82A0", VA = "0x13D82A0")]
	public bool GetSettingValueSplitFloat(int key, Action<int, float> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x13D6034", Offset = "0x13D6034", VA = "0x13D6034")]
	public void InitLiveCameraConfigData()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x13D8504", Offset = "0x13D8504", VA = "0x13D8504")]
	public List<LiveCameraConfigData> GetLiveCameraAttributeList(int step)
	{
		return null;
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x13D85EC", Offset = "0x13D85EC", VA = "0x13D85EC")]
	public Dictionary<int, LiveCameraConfigData> GetCommonLiveCameraAttributeList()
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x13D6C94", Offset = "0x13D6C94", VA = "0x13D6C94")]
	public void InitInstanceFlowData()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x13D85F4", Offset = "0x13D85F4", VA = "0x13D85F4")]
	public InstanceFlowData GetInstanceFlowDataById(int id)
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x13D86A4", Offset = "0x13D86A4", VA = "0x13D86A4")]
	public Dictionary<int, InstanceFlowData> GetInstanceFlowDatas()
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x13D86AC", Offset = "0x13D86AC", VA = "0x13D86AC")]
	public DataManager()
	{
	}
}
[Token(Token = "0x2000100")]
public class InstanceFlowData
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int instanceId;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int flowId;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] childs;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int levelCap;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int levelOffset;

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x147A644", Offset = "0x147A644", VA = "0x147A644")]
	public InstanceFlowData()
	{
	}
}
[Token(Token = "0x2000101")]
public class MonsterLevelData
{
	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int monsterType;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int lv;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxHp;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int atk;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int expDrop;

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x14BA9EC", Offset = "0x14BA9EC", VA = "0x14BA9EC")]
	public MonsterLevelData()
	{
	}
}
[Token(Token = "0x2000102")]
public class PlayerLevelData
{
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int playerType;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int lv;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxHp;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int exp;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x13A3370", Offset = "0x13A3370", VA = "0x13A3370")]
	public PlayerLevelData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000103")]
public class UnitAttribute
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxHP;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isCreateWeapon;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public e_type_monster monsterType;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public e_type_npc npcType;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int modelId;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int Atk;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public e_weapon_type weaponType;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_weapon_group weaponGroup;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int score;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int hpRecoverInterval;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int hpRecoverValue;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> dropList;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int dropRatio;

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1468A2C", Offset = "0x1468A2C", VA = "0x1468A2C")]
	public UnitAttribute()
	{
	}
}
[Token(Token = "0x2000104")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xFD1D40", Offset = "0xFD1D40")]
public class UnitAttributeSet : ScriptableObject
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnitAttribute[] PlayerAttributeList;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnitAttribute[] MonsterAttributeList;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1468AC8", Offset = "0x1468AC8", VA = "0x1468AC8")]
	public UnitAttributeSet()
	{
	}
}
[Serializable]
[Token(Token = "0x2000105")]
public class WeaponAttribute
{
	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_weapon_type weaponType;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int modelId;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Atk;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int headPer;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int bulletCount;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MagazineCount;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int fireInterval;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int scatterRadius;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int recoil;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int bulletForce;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x15AC580", Offset = "0x15AC580", VA = "0x15AC580")]
	public WeaponAttribute()
	{
	}
}
[Token(Token = "0x2000106")]
public class WeaponLevelData
{
	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int weaponType;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int lv;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int bulletCount;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int magazineCount;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x15AD5C4", Offset = "0x15AD5C4", VA = "0x15AD5C4")]
	public WeaponLevelData()
	{
	}
}
[Token(Token = "0x2000107")]
public abstract class Bullet : MonoBehaviour
{
	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Collider[] tempHitCollider;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit attacker;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7648", Offset = "0xFD7648")]
	private e_weapon_type <WeaponType>k__BackingField;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform mTransformCache;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject mGameObjectCache;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public e_Attack_type type;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_HitEffect_type hittype;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hitEffect;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject dieEffect;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isBreakType;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool isTriggerHoleEffect;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool isTriggerMaterialEffect;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool isAOE;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float AOERadius;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int bulletForce;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int headPer;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int bulletAttack;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<int> AOEHurtPlayIDList;

	[Token(Token = "0x1700008D")]
	public WUnit Attacker
	{
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x16492DC", Offset = "0x16492DC", VA = "0x16492DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008E")]
	public e_weapon_type WeaponType
	{
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x16492E4", Offset = "0x16492E4", VA = "0x16492E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCEF8", Offset = "0xFDCEF8")]
		get
		{
			return default(e_weapon_type);
		}
		[Token(Token = "0x600062A")]
		[Address(RVA = "0x16492EC", Offset = "0x16492EC", VA = "0x16492EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF08", Offset = "0xFDCF08")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public Transform TransformCache
	{
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x16492F4", Offset = "0x16492F4", VA = "0x16492F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	public GameObject GameObjectCache
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x16492FC", Offset = "0x16492FC", VA = "0x16492FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000091")]
	public int HeadPer
	{
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x1649304", Offset = "0x1649304", VA = "0x1649304")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000092")]
	public int BulletAttack
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x164930C", Offset = "0x164930C", VA = "0x164930C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x1649314", Offset = "0x1649314", VA = "0x1649314")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x163F04C", Offset = "0x163F04C", VA = "0x163F04C", Slot = "4")]
	public virtual void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x164931C", Offset = "0x164931C", VA = "0x164931C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x164934C", Offset = "0x164934C", VA = "0x164934C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x164937C", Offset = "0x164937C", VA = "0x164937C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x1649388", Offset = "0x1649388", VA = "0x1649388", Slot = "5")]
	protected virtual void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x164938C", Offset = "0x164938C", VA = "0x164938C", Slot = "6")]
	protected virtual void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x1649390", Offset = "0x1649390", VA = "0x1649390", Slot = "7")]
	protected virtual void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1649394", Offset = "0x1649394", VA = "0x1649394", Slot = "8")]
	public virtual void DoDestroy(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x163F68C", Offset = "0x163F68C", VA = "0x163F68C", Slot = "9")]
	public virtual void DoDestroy()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x16493C8", Offset = "0x16493C8", VA = "0x16493C8", Slot = "10")]
	protected virtual void ApplyHitEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1649498", Offset = "0x1649498", VA = "0x1649498", Slot = "11")]
	protected virtual void ApplyDieEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1649568", Offset = "0x1649568", VA = "0x1649568", Slot = "12")]
	protected virtual bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1649EF8", Offset = "0x1649EF8", VA = "0x1649EF8", Slot = "13")]
	protected virtual void AOEProcessing(Vector3 hitPos)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x164A09C", Offset = "0x164A09C", VA = "0x164A09C", Slot = "14")]
	protected virtual void AOEHitProcess(Vector3 hitpos, Collider collider)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x164A300", Offset = "0x164A300", VA = "0x164A300", Slot = "15")]
	protected virtual void AOEHitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x164A310", Offset = "0x164A310", VA = "0x164A310", Slot = "16")]
	protected virtual void HitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x164A3B8", Offset = "0x164A3B8", VA = "0x164A3B8")]
	protected Bullet()
	{
	}
}
[Token(Token = "0x2000108")]
public class BulletAnimationController : MonoBehaviour
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public clipItem[] animators;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x164AA7C", Offset = "0x164AA7C", VA = "0x164AA7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x164AAF4", Offset = "0x164AAF4", VA = "0x164AAF4")]
	public void ResetPlay()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x164AB74", Offset = "0x164AB74", VA = "0x164AB74")]
	public BulletAnimationController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000109")]
public class clipItem
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Animator ani;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int layer;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float beginTime;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x29F466C", Offset = "0x29F466C", VA = "0x29F466C")]
	public clipItem()
	{
	}
}
[Token(Token = "0x200010A")]
public class BossBulletLaser : MonsterBullet
{
	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float MaxDistance;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform Laser;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform LaserHead;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float DamageInterval;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Animator ani;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent FireLoopAudio;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public AudioEvent FinishAudio;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float CheckSize;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine fireLoopSoundWwise;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WwiseDefine finishSoundWwise;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float damageRunningTime;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject preHitGameObject;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float laserRunningDistance;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 headPosition;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 headPositionOffset;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Coroutine delayAct;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isHurting;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x16407A0", Offset = "0x16407A0", VA = "0x16407A0", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1640AD4", Offset = "0x1640AD4", VA = "0x1640AD4", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1640B34", Offset = "0x1640B34", VA = "0x1640B34", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x164091C", Offset = "0x164091C", VA = "0x164091C")]
	private void UpdateLaserPosition()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x16411C0", Offset = "0x16411C0", VA = "0x16411C0", Slot = "25")]
	public override void ManualDoDestroy()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x1641368", Offset = "0x1641368", VA = "0x1641368")]
	private void DelayAniDestroy()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x16413E8", Offset = "0x16413E8", VA = "0x16413E8", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x16413F0", Offset = "0x16413F0", VA = "0x16413F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x164149C", Offset = "0x164149C", VA = "0x164149C", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x16414A4", Offset = "0x16414A4", VA = "0x16414A4")]
	public BossBulletLaser()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1641550", Offset = "0x1641550", VA = "0x1641550")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF18", Offset = "0xFDCF18")]
	private void <ManualDoDestroy>b__21_0()
	{
	}
}
[Token(Token = "0x200010B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD1DAC", Offset = "0xFD1DAC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1DAC", Offset = "0xFD1DAC")]
public class CleanBullet : ActionTask<Transform>
{
	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> bulletRoot;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x144B2C8", Offset = "0x144B2C8", VA = "0x144B2C8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x144B468", Offset = "0x144B468", VA = "0x144B468")]
	public CleanBullet()
	{
	}
}
[Token(Token = "0x200010C")]
public class FireKeepAttack : MonoBehaviour
{
	[Token(Token = "0x6000653")]
	[Address(RVA = "0x15EC520", Offset = "0x15EC520", VA = "0x15EC520")]
	private void Start()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x15EC524", Offset = "0x15EC524", VA = "0x15EC524")]
	private void Update()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x15EC528", Offset = "0x15EC528", VA = "0x15EC528")]
	private void Run()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x15EC52C", Offset = "0x15EC52C", VA = "0x15EC52C")]
	public FireKeepAttack()
	{
	}
}
[Token(Token = "0x200010D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD1E10", Offset = "0xFD1E10")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD1E10", Offset = "0xFD1E10")]
public class GuidedMissileAI : ActionTask<Transform>
{
	[Token(Token = "0x20004B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5AE4", Offset = "0xFD5AE4")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GuidedMissileAI <>4__this;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float percent;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GoSpline path;

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x14F41E4", Offset = "0x14F41E4", VA = "0x14F41E4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x14F46CC", Offset = "0x14F46CC", VA = "0x14F46CC")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> targetPos;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD7668", Offset = "0xFD7668")]
	public BBParameter<float> targetPercent;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> upFactor;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<bool> isRightOffset;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> rightOrLeftFactor;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> bulletSpeed;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<bool> isRefParent;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 beginPos;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Action updateAction;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BBParameter<float> time;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 oldPos;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 direction;

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x14F3EE0", Offset = "0x14F3EE0", VA = "0x14F3EE0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x14F45CC", Offset = "0x14F45CC", VA = "0x14F45CC", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x14F45E0", Offset = "0x14F45E0", VA = "0x14F45E0", Slot = "14")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x14F41EC", Offset = "0x14F41EC", VA = "0x14F41EC")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x14F4614", Offset = "0x14F4614", VA = "0x14F4614")]
	public GuidedMissileAI()
	{
	}
}
[Token(Token = "0x200010E")]
public class KeepAttackBase : MonoBehaviour
{
	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float interval;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeout;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isFirstHit;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WUnit attacker;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WUnit target;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public e_Attack_type screenEffectType;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_HitEffect_type hitReactionType;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float curTime;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine cr_interval;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x147DBF0", Offset = "0x147DBF0", VA = "0x147DBF0")]
	public void ResetTime()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x147DBF8", Offset = "0x147DBF8", VA = "0x147DBF8")]
	public void Run()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x147DE34", Offset = "0x147DE34", VA = "0x147DE34")]
	public void Stop()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x147DEB4", Offset = "0x147DEB4", VA = "0x147DEB4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x147DF0C", Offset = "0x147DF0C", VA = "0x147DF0C")]
	public KeepAttackBase()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x147DF1C", Offset = "0x147DF1C", VA = "0x147DF1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF28", Offset = "0xFDCF28")]
	private void <Run>b__11_0()
	{
	}
}
[Token(Token = "0x200010F")]
public class MonsterBullerEmitter1 : MonsterBulletEmitter
{
	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isChild;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x14B5618", Offset = "0x14B5618", VA = "0x14B5618", Slot = "4")]
	public override void Fire(int randseed)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x14B5760", Offset = "0x14B5760", VA = "0x14B5760")]
	public MonsterBullerEmitter1()
	{
	}
}
[Token(Token = "0x2000110")]
public class MonsterBullet : Bullet
{
	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float lifeTime;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float bulletRadius;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float speed;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform target;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 targetPos;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 targetOffset;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float moveStep;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected float curTime;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 oldPos;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Vector3 direction;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x14B5770", Offset = "0x14B5770", VA = "0x14B5770", Slot = "17")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x14B5774", Offset = "0x14B5774", VA = "0x14B5774", Slot = "18")]
	public virtual void ResetPosition()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x14B57B4", Offset = "0x14B57B4", VA = "0x14B57B4", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x14B5824", Offset = "0x14B5824", VA = "0x14B5824", Slot = "19")]
	protected virtual void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x14B5828", Offset = "0x14B5828", VA = "0x14B5828", Slot = "20")]
	protected virtual void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x14B5850", Offset = "0x14B5850", VA = "0x14B5850", Slot = "21")]
	protected virtual void RayCheck()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x14B5A58", Offset = "0x14B5A58", VA = "0x14B5A58", Slot = "22")]
	protected virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x14B5C14", Offset = "0x14B5C14", VA = "0x14B5C14", Slot = "23")]
	protected virtual void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x14B5DB0", Offset = "0x14B5DB0", VA = "0x14B5DB0", Slot = "24")]
	protected virtual bool HitProcess(GameObject target, Vector3 hitpos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x14B5E80", Offset = "0x14B5E80", VA = "0x14B5E80", Slot = "25")]
	public virtual void ManualDoDestroy()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x14B5E88", Offset = "0x14B5E88", VA = "0x14B5E88")]
	public MonsterBullet()
	{
	}
}
[Token(Token = "0x2000111")]
public class MonsterBulletBodyFire : MonsterBulletStay
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int damage;

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x14B64C8", Offset = "0x14B64C8", VA = "0x14B64C8", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x14B6608", Offset = "0x14B6608", VA = "0x14B6608", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x14B660C", Offset = "0x14B660C", VA = "0x14B660C", Slot = "25")]
	public override void ManualDoDestroy()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x14B6614", Offset = "0x14B6614", VA = "0x14B6614")]
	public MonsterBulletBodyFire()
	{
	}
}
[Token(Token = "0x2000112")]
public class MonsterBulletBoommanExplode : MonsterBulletStay
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool isKeepAttack;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int damage;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float interval;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float timeout;

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x14B661C", Offset = "0x14B661C", VA = "0x14B661C", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x14B66CC", Offset = "0x14B66CC", VA = "0x14B66CC", Slot = "15")]
	protected override void AOEHitSingleProcess(Vector3 hitPos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x14B68C0", Offset = "0x14B68C0", VA = "0x14B68C0")]
	public MonsterBulletBoommanExplode()
	{
	}
}
[Token(Token = "0x2000113")]
public class MonsterBulletEmitter : MonoBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform firePos;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WUnit owner;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int bulletAssetID;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x14B68C4", Offset = "0x14B68C4", VA = "0x14B68C4")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x14B68CC", Offset = "0x14B68CC", VA = "0x14B68CC")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x14B68D0", Offset = "0x14B68D0", VA = "0x14B68D0", Slot = "4")]
	public virtual void Fire(int randseed)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x14B5768", Offset = "0x14B5768", VA = "0x14B5768")]
	public MonsterBulletEmitter()
	{
	}
}
[Token(Token = "0x2000114")]
public class MonsterBulletEmitterN : MonsterBulletEmitter
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int bulletNum;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float posDistance;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float radius;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x14B693C", Offset = "0x14B693C", VA = "0x14B693C", Slot = "4")]
	public override void Fire(int randseed)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x14B6BEC", Offset = "0x14B6BEC", VA = "0x14B6BEC")]
	public MonsterBulletEmitterN()
	{
	}
}
[Token(Token = "0x2000115")]
public class MonsterBulletFire : MonsterBullet
{
	[Token(Token = "0x600067C")]
	[Address(RVA = "0x14B6BFC", Offset = "0x14B6BFC", VA = "0x14B6BFC", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x14B6C00", Offset = "0x14B6C00", VA = "0x14B6C00", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x14B6C04", Offset = "0x14B6C04", VA = "0x14B6C04")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x14B6D78", Offset = "0x14B6D78", VA = "0x14B6D78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x14B6D80", Offset = "0x14B6D80", VA = "0x14B6D80")]
	public MonsterBulletFire()
	{
	}
}
[Token(Token = "0x2000116")]
public class MonsterBulletGravity : MonsterBullet
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Rigidbody rig;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform directionObject;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float directionCurTime;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float directionTime;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 forceDirection;

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x14B6D84", Offset = "0x14B6D84", VA = "0x14B6D84", Slot = "17")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x14B6D88", Offset = "0x14B6D88", VA = "0x14B6D88")]
	private void MakeDirection(float time)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x14B6EA4", Offset = "0x14B6EA4", VA = "0x14B6EA4", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x14B6F98", Offset = "0x14B6F98", VA = "0x14B6F98", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x14B6F9C", Offset = "0x14B6F9C", VA = "0x14B6F9C", Slot = "7")]
	protected override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x14B700C", Offset = "0x14B700C", VA = "0x14B700C", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x14B7048", Offset = "0x14B7048", VA = "0x14B7048", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x14B722C", Offset = "0x14B722C", VA = "0x14B722C")]
	public MonsterBulletGravity()
	{
	}
}
[Token(Token = "0x2000117")]
public class MonsterBulletGroundPoison : MonsterBulletStay
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool isKeepAttack;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int damage;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float interval;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float timeout;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioEvent audioEvent;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x14B723C", Offset = "0x14B723C", VA = "0x14B723C", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x14B7240", Offset = "0x14B7240", VA = "0x14B7240")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x14B72F4", Offset = "0x14B72F4", VA = "0x14B72F4", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x14B7318", Offset = "0x14B7318", VA = "0x14B7318", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x14B75C8", Offset = "0x14B75C8", VA = "0x14B75C8")]
	public MonsterBulletGroundPoison()
	{
	}
}
[Token(Token = "0x2000118")]
public class MonsterBulletHead : MonsterBullet
{
	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float highFactor;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GoSpline path;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float moveTime;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float percent;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x14B75CC", Offset = "0x14B75CC", VA = "0x14B75CC")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x14B7810", Offset = "0x14B7810", VA = "0x14B7810")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x14B79B0", Offset = "0x14B79B0", VA = "0x14B79B0", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x14B79E4", Offset = "0x14B79E4", VA = "0x14B79E4", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x14B7BB0", Offset = "0x14B7BB0", VA = "0x14B7BB0")]
	public MonsterBulletHead()
	{
	}
}
[Token(Token = "0x2000119")]
public class MonsterBulletPoison : MonsterBulletStraight
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int explodeBulletID;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 positionOffset;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x14B8790", Offset = "0x14B8790", VA = "0x14B8790", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x14B89E8", Offset = "0x14B89E8", VA = "0x14B89E8", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x14B8C50", Offset = "0x14B8C50", VA = "0x14B8C50", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x14B8C54", Offset = "0x14B8C54", VA = "0x14B8C54", Slot = "23")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x14B87B8", Offset = "0x14B87B8", VA = "0x14B87B8")]
	private void CreateExplodeBullet()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x14B8C58", Offset = "0x14B8C58", VA = "0x14B8C58")]
	public MonsterBulletPoison()
	{
	}
}
[Token(Token = "0x200011A")]
public class MonsterBulletStay : MonsterBullet
{
	[Token(Token = "0x6000699")]
	[Address(RVA = "0x14B8C60", Offset = "0x14B8C60", VA = "0x14B8C60", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x14B8E00", Offset = "0x14B8E00", VA = "0x14B8E00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x14B8EAC", Offset = "0x14B8EAC", VA = "0x14B8EAC", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x14B6618", Offset = "0x14B6618", VA = "0x14B6618")]
	public MonsterBulletStay()
	{
	}
}
[Token(Token = "0x200011B")]
public class MonsterBulletStraight : MonsterBullet
{
	[Token(Token = "0x600069D")]
	[Address(RVA = "0x14B8EB4", Offset = "0x14B8EB4", VA = "0x14B8EB4", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x14B8C5C", Offset = "0x14B8C5C", VA = "0x14B8C5C")]
	public MonsterBulletStraight()
	{
	}
}
[Token(Token = "0x200011C")]
public class PoisonKeepAttack : KeepAttackBase
{
	[Token(Token = "0x600069F")]
	[Address(RVA = "0x13A40E8", Offset = "0x13A40E8", VA = "0x13A40E8")]
	public PoisonKeepAttack()
	{
	}
}
[Token(Token = "0x200011D")]
public class BulletBomb : Bullet
{
	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject boomEffect;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float highFactor;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioEvent Grenades_Drop;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public AudioEvent Grenades_Bomb;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float speed;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected float moveStep;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected float curTime;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Vector3 oldPos;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected Vector3 direction;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GoSpline path;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float moveTime;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float percent;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IDisposable updateDisposable;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject warnObject;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WwiseDefine c4BlendAudioObj;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float maxDistance;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 forward;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 curPos;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private RaycastHit hit;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Coroutine coroutine;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isTarget;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x164AB7C", Offset = "0x164AB7C", VA = "0x164AB7C", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x164AE8C", Offset = "0x164AE8C", VA = "0x164AE8C")]
	protected void DoUpdate()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x164ABD8", Offset = "0x164ABD8", VA = "0x164ABD8")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x164B34C", Offset = "0x164B34C", VA = "0x164B34C")]
	private Vector3 randPos(Vector3 Pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x164B140", Offset = "0x164B140", VA = "0x164B140")]
	protected GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x164AF64", Offset = "0x164AF64", VA = "0x164AF64")]
	protected void OnMotionEnd()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x164B420", Offset = "0x164B420", VA = "0x164B420")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x164B470", Offset = "0x164B470", VA = "0x164B470")]
	protected void ApplyBoomEffect(Vector3 hitPos)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x164B540", Offset = "0x164B540", VA = "0x164B540", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x164B548", Offset = "0x164B548", VA = "0x164B548")]
	public BulletBomb()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x164B624", Offset = "0x164B624", VA = "0x164B624")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF38", Offset = "0xFDCF38")]
	private void <ResetPosition>b__25_0(Unit unit)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x164B628", Offset = "0x164B628", VA = "0x164B628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF48", Offset = "0xFDCF48")]
	private void <ResetPosition>b__25_1(Unit unit)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x164B62C", Offset = "0x164B62C", VA = "0x164B62C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF58", Offset = "0xFDCF58")]
	private void <OnMotionEnd>b__28_0()
	{
	}
}
[Token(Token = "0x200011E")]
public class BulletCollision : BulletSustainedDamage
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float bulletRadius;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] colliders;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x164B79C", Offset = "0x164B79C", VA = "0x164B79C", Slot = "19")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x164BC0C", Offset = "0x164BC0C", VA = "0x164BC0C")]
	public BulletCollision()
	{
	}
}
[Token(Token = "0x200011F")]
public class BulletEffect : Bullet
{
	[Serializable]
	[Token(Token = "0x20004B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5AF4", Offset = "0xFD5AF4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__15_0;

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x164CE00", Offset = "0x164CE00", VA = "0x164CE00")]
		public <>c()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x164CE08", Offset = "0x164CE08", VA = "0x164CE08")]
		internal int <RayCheck>b__15_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 lastPos;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 forward;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 curPos;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7680", Offset = "0xFD7680")]
	public float moveSpeed;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float miniShowDistance;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float effectDistance;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 vector3_o;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject effectRoot;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BulletAnimationController bac;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x164BD00", Offset = "0x164BD00", VA = "0x164BD00", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x164BE2C", Offset = "0x164BE2C", VA = "0x164BE2C", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x164BF84", Offset = "0x164BF84", VA = "0x164BF84")]
	private void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x164C060", Offset = "0x164C060", VA = "0x164C060")]
	private void Move(float deltatime)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x164C088", Offset = "0x164C088", VA = "0x164C088")]
	private void RayCheck()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x164C684", Offset = "0x164C684", VA = "0x164C684")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x164C4C4", Offset = "0x164C4C4", VA = "0x164C4C4")]
	private bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x164C8B4", Offset = "0x164C8B4", VA = "0x164C8B4", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x164CC14", Offset = "0x164CC14", VA = "0x164CC14")]
	public BulletEffect()
	{
	}
}
[Token(Token = "0x2000120")]
public class BulletLaser : Bullet
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float delayDestroy;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool isDelayDestroy;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine coroutine;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject ExplosionEffect;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem pts;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD76D8", Offset = "0xFD76D8")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 forward;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 curPos;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private RaycastHit hitInfo;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x164CE4C", Offset = "0x164CE4C", VA = "0x164CE4C", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x164D1FC", Offset = "0x164D1FC", VA = "0x164D1FC", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x164D200", Offset = "0x164D200", VA = "0x164D200", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x164D2DC", Offset = "0x164D2DC", VA = "0x164D2DC")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x164CFA0", Offset = "0x164CFA0", VA = "0x164CFA0")]
	private bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x164D4F8", Offset = "0x164D4F8", VA = "0x164D4F8", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x164DE88", Offset = "0x164DE88", VA = "0x164DE88")]
	public BulletLaser()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x164DF64", Offset = "0x164DF64", VA = "0x164DF64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF68", Offset = "0xFDCF68")]
	private void <DoDestroy>b__11_0()
	{
	}
}
[Token(Token = "0x2000121")]
public class BulletStraight : Bullet
{
	[Serializable]
	[Token(Token = "0x20004B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B04", Offset = "0xFD5B04")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__15_0;

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x164FB6C", Offset = "0x164FB6C", VA = "0x164FB6C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x164FB74", Offset = "0x164FB74", VA = "0x164FB74")]
		internal int <RayCheck>b__15_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float velocity;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject effectRoot;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float delayDisplay;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected Vector3 lastPos;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 forward;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 curPos;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine coroutine;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool isMove;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x164EF58", Offset = "0x164EF58", VA = "0x164EF58", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x164F0A8", Offset = "0x164F0A8", VA = "0x164F0A8", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x164F114", Offset = "0x164F114", VA = "0x164F114", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x164F15C", Offset = "0x164F15C", VA = "0x164F15C", Slot = "17")]
	protected virtual void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x164F23C", Offset = "0x164F23C", VA = "0x164F23C", Slot = "18")]
	protected virtual void Move(float deltatime)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x164F264", Offset = "0x164F264", VA = "0x164F264", Slot = "19")]
	protected virtual void RayCheck()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x164F6E4", Offset = "0x164F6E4", VA = "0x164F6E4")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x164BA4C", Offset = "0x164BA4C", VA = "0x164BA4C")]
	protected bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x164F94C", Offset = "0x164F94C", VA = "0x164F94C")]
	public BulletStraight()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x164FAE4", Offset = "0x164FAE4", VA = "0x164FAE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF78", Offset = "0xFDCF78")]
	private void <DoInit>b__8_0()
	{
	}
}
[Token(Token = "0x2000122")]
public class BulletSustainedDamage : BulletStraight
{
	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float delayDestroy;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected bool isDelayDestroy;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine coroutine;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool isHealthPercentage;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float BleedingRatio;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool IsAOEDamageAttenuation;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isBulletMonster;

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x164FBB8", Offset = "0x164FBB8", VA = "0x164FBB8", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x164FBDC", Offset = "0x164FBDC", VA = "0x164FBDC", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x164FCC0", Offset = "0x164FCC0", VA = "0x164FCC0", Slot = "14")]
	protected override void AOEHitProcess(Vector3 hitpos, Collider collider)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x165001C", Offset = "0x165001C", VA = "0x165001C", Slot = "16")]
	protected override void HitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x1650020", Offset = "0x1650020", VA = "0x1650020")]
	private void damage(Vector3 hitPos, GameObject TargetObject, WUnit hitUnit, int bulletDamage)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x164BC1C", Offset = "0x164BC1C", VA = "0x164BC1C")]
	public BulletSustainedDamage()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1650268", Offset = "0x1650268", VA = "0x1650268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF88", Offset = "0xFDCF88")]
	private void <DoDestroy>b__8_0()
	{
	}
}
[Token(Token = "0x2000123")]
public class Bulletscattering : BulletStraight
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float delayDestroy;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine coroutine;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject ArrowTail;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool isTime;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float time;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioEvent AudioEvent;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float AccumulateTime;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x165026C", Offset = "0x165026C", VA = "0x165026C", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x16503B8", Offset = "0x16503B8", VA = "0x16503B8", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1650504", Offset = "0x1650504", VA = "0x1650504", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x16505F0", Offset = "0x16505F0", VA = "0x16505F0")]
	public Bulletscattering()
	{
	}
}
[Token(Token = "0x2000124")]
public class EffectBulletStraight : BulletStraight
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public AudioEvent DestroyAudio;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x13E0250", Offset = "0x13E0250", VA = "0x13E0250", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x13E0310", Offset = "0x13E0310", VA = "0x13E0310")]
	public EffectBulletStraight()
	{
	}
}
[Token(Token = "0x2000125")]
public class EmitterManager : Singleton<EmitterManager>
{
	[Token(Token = "0x20004B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B14", Offset = "0xFD5B14")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parent;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rot;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WUnit attacker;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Weapon weapon;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<Bullet> cb;

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x13E4370", Offset = "0x13E4370", VA = "0x13E4370")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x13E43E8", Offset = "0x13E43E8", VA = "0x13E43E8")]
		internal void <CreateEmitterAsync>b__0(GameObject obj)
		{
		}
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x13E3D04", Offset = "0x13E3D04", VA = "0x13E3D04")]
	public Bullet CreateEmitter(WUnit attacker, int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x13E3EF0", Offset = "0x13E3EF0", VA = "0x13E3EF0")]
	public Bullet CreateEmitter(WUnit attacker, Weapon weapon, GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x13E4178", Offset = "0x13E4178", VA = "0x13E4178")]
	public void CreateEmitterAsync(WUnit attacker, Weapon weapon, GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent, [Optional] Action<Bullet> cb)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x13E4378", Offset = "0x13E4378", VA = "0x13E4378")]
	public EmitterManager()
	{
	}
}
[Token(Token = "0x2000126")]
public class AimIKConfigs : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004B5")]
	public class AimIKConfig
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group type;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isRight;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolver.Bone[] iKSolverAimBones_Right;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isLeft;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolver.Bone[] iKSolverAimBones_Left;

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x18C971C", Offset = "0x18C971C", VA = "0x18C971C")]
		public AimIKConfig()
		{
		}
	}

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<AimIKConfig> ikConfigList;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x18C958C", Offset = "0x18C958C", VA = "0x18C958C")]
	public AimIKConfig GetAimIkConfig(e_weapon_group type)
	{
		return null;
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x18C9714", Offset = "0x18C9714", VA = "0x18C9714")]
	public AimIKConfigs()
	{
	}
}
[Token(Token = "0x2000127")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD1E74", Offset = "0xFD1E74")]
public class AimIKTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004B6")]
	public class AnimationConfig
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string aniName;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startTime;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float updateWeightTime;

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x18CA5C8", Offset = "0x18CA5C8", VA = "0x18CA5C8")]
		public AnimationConfig()
		{
		}
	}

	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B24", Offset = "0xFD5B24")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AimIKTools <>4__this;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationConfig c;

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x18CA0CC", Offset = "0x18CA0CC", VA = "0x18CA0CC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x18CA5D0", Offset = "0x18CA5D0", VA = "0x18CA5D0")]
		internal void <StartAim>b__0(long l)
		{
		}
	}

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AimIK aimIk;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LookAtIK lookAtIk;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AimIKConfigs aimIKConfigs;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool updateWeight;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float updateTargetWeight;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float updateWeightTime;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float curUpdateWeightTime;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine startAimCoroution;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject target;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7754", Offset = "0xFD7754")]
	private Vector3 <targetPos>k__BackingField;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7764", Offset = "0xFD7764")]
	private bool <isStartAim>k__BackingField;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7774", Offset = "0xFD7774")]
	private WUnit <owner>k__BackingField;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AnimationConfig[] animationConfigs;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AnimationConfig defaultAnimationConfig;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD77A4", Offset = "0xFD77A4")]
	private e_weapon_group <weapon_Group>k__BackingField;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD77B4", Offset = "0xFD77B4")]
	private bool <isRightAimBone>k__BackingField;

	[Token(Token = "0x17000093")]
	public Vector3 targetPos
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x18C972C", Offset = "0x18C972C", VA = "0x18C972C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCF98", Offset = "0xFDCF98")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x18C9738", Offset = "0x18C9738", VA = "0x18C9738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCFA8", Offset = "0xFDCFA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public bool isStartAim
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x18C9744", Offset = "0x18C9744", VA = "0x18C9744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCFB8", Offset = "0xFDCFB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x18C974C", Offset = "0x18C974C", VA = "0x18C974C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCFC8", Offset = "0xFDCFC8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public WUnit owner
	{
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x18C9758", Offset = "0x18C9758", VA = "0x18C9758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCFD8", Offset = "0xFDCFD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x18C9760", Offset = "0x18C9760", VA = "0x18C9760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCFE8", Offset = "0xFDCFE8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public e_weapon_group weapon_Group
	{
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x18C9768", Offset = "0x18C9768", VA = "0x18C9768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDCFF8", Offset = "0xFDCFF8")]
		get
		{
			return default(e_weapon_group);
		}
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x18C9770", Offset = "0x18C9770", VA = "0x18C9770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD008", Offset = "0xFDD008")]
		private set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public bool isRightAimBone
	{
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x18C9778", Offset = "0x18C9778", VA = "0x18C9778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD018", Offset = "0xFDD018")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x18C9780", Offset = "0x18C9780", VA = "0x18C9780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD028", Offset = "0xFDD028")]
		private set
		{
		}
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x18C978C", Offset = "0x18C978C", VA = "0x18C978C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x18C98B4", Offset = "0x18C98B4", VA = "0x18C98B4")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x18C98BC", Offset = "0x18C98BC", VA = "0x18C98BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x18C9B6C", Offset = "0x18C9B6C", VA = "0x18C9B6C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x18C9974", Offset = "0x18C9974", VA = "0x18C9974")]
	private void UpdateWeight()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x18C9C20", Offset = "0x18C9C20", VA = "0x18C9C20")]
	public AnimationConfig GetConfig(string aniState)
	{
		return null;
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x18C9CCC", Offset = "0x18C9CCC", VA = "0x18C9CCC")]
	public void SetAimTransform(Transform aimTransform)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x18C9CF4", Offset = "0x18C9CF4", VA = "0x18C9CF4")]
	public void ResetAimTransform()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x18C9D20", Offset = "0x18C9D20", VA = "0x18C9D20")]
	public float StartAimHost(string _aniState, Vector3 _targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x18C9E1C", Offset = "0x18C9E1C", VA = "0x18C9E1C")]
	public float StartAim(string _aniState, Vector3 _targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x18CA2A0", Offset = "0x18CA2A0", VA = "0x18CA2A0")]
	public void SwitchBones(e_weapon_group group, bool isRight)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x18CA3A4", Offset = "0x18CA3A4", VA = "0x18CA3A4")]
	public bool IsExistRightAimBone(e_weapon_group group)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x18CA3D4", Offset = "0x18CA3D4", VA = "0x18CA3D4")]
	public bool IsExistLeftAimBone(e_weapon_group group)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x18CA404", Offset = "0x18CA404", VA = "0x18CA404")]
	public void UpdateAimPos(Vector3 _targetPos)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x18CA418", Offset = "0x18CA418", VA = "0x18CA418")]
	public void StopAimHost()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x18CA0D4", Offset = "0x18CA0D4", VA = "0x18CA0D4")]
	public void StopAim()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x18C97F4", Offset = "0x18C97F4", VA = "0x18C97F4")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x18CA528", Offset = "0x18CA528", VA = "0x18CA528")]
	public AimIKTools()
	{
	}
}
[Token(Token = "0x2000128")]
public class Battle
{
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private BattleData battleData;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<WUnit> allBattleUnitList;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, WUnit> allBattleUnitHash;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<WUnit>> allGroupBattleUnitHash;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<WUnit> monsterBattleUnitList;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<WUnit> npcBattleUnitList;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<WUnit> playerBattleUnitList;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected WUnit controlUnit;

	[Token(Token = "0x17000098")]
	public BattleData Data
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x16147B8", Offset = "0x16147B8", VA = "0x16147B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public WUnit ControlUnit
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x16147C0", Offset = "0x16147C0", VA = "0x16147C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x16147C8", Offset = "0x16147C8", VA = "0x16147C8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public int AllPlayerCount
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1614808", Offset = "0x1614808", VA = "0x1614808")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x16147D0", Offset = "0x16147D0", VA = "0x16147D0")]
	public void ClearControlUnit()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1614858", Offset = "0x1614858", VA = "0x1614858")]
	public void SetControlUnit(WUnit unit)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1614860", Offset = "0x1614860", VA = "0x1614860")]
	public static Battle CreateBattle(BattleData battleData)
	{
		return null;
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x16148C0", Offset = "0x16148C0", VA = "0x16148C0")]
	private Battle(BattleData _battleData)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x1614A78", Offset = "0x1614A78", VA = "0x1614A78")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1614B90", Offset = "0x1614B90", VA = "0x1614B90")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1614C68", Offset = "0x1614C68", VA = "0x1614C68")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1614D40", Offset = "0x1614D40", VA = "0x1614D40")]
	public void DoExit()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1614DB8", Offset = "0x1614DB8", VA = "0x1614DB8")]
	public void AddUnit(WUnit unit)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1614FB4", Offset = "0x1614FB4", VA = "0x1614FB4")]
	public bool RemoveUnit(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x161516C", Offset = "0x161516C", VA = "0x161516C")]
	public WUnit GetUnitById(int id)
	{
		return null;
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x16151E4", Offset = "0x16151E4", VA = "0x16151E4")]
	public int GetUnitCountByRoleType(e_type_role roleType)
	{
		return default(int);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x16152DC", Offset = "0x16152DC", VA = "0x16152DC")]
	public int GetAliveUnitCountByRoleType(e_type_role roleType)
	{
		return default(int);
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1615420", Offset = "0x1615420", VA = "0x1615420")]
	public int GetAliveMonsterCount(bool noBoss = false, bool isNoBulletMonster = false)
	{
		return default(int);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1615518", Offset = "0x1615518", VA = "0x1615518")]
	public int GetAliveMonsterUnitCount(e_type_monster e_Type_Monster)
	{
		return default(int);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x16155E4", Offset = "0x16155E4", VA = "0x16155E4")]
	public bool IsLocalPlayer(int unitId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1615628", Offset = "0x1615628", VA = "0x1615628")]
	public bool IsLocalPlayer(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1615650", Offset = "0x1615650", VA = "0x1615650")]
	public bool IsAIPlayer(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x16156E4", Offset = "0x16156E4", VA = "0x16156E4")]
	public bool IsPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1615664", Offset = "0x1615664", VA = "0x1615664")]
	public bool IsAIPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1615764", Offset = "0x1615764", VA = "0x1615764")]
	public bool IsRealityPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x16157E4", Offset = "0x16157E4", VA = "0x16157E4")]
	public bool IsNpc(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1615864", Offset = "0x1615864", VA = "0x1615864")]
	public bool IsMonster(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x16158E4", Offset = "0x16158E4", VA = "0x16158E4")]
	public bool IsLocalPlayerGroup(int unitId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1615944", Offset = "0x1615944", VA = "0x1615944")]
	public bool IsLocalPlayerGroup(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x1615990", Offset = "0x1615990", VA = "0x1615990")]
	public bool IsLocalPlayerGroup(e_group_type gType)
	{
		return default(bool);
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x16159B0", Offset = "0x16159B0", VA = "0x16159B0")]
	public e_group_type GetLocalPlayerGroup()
	{
		return default(e_group_type);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1606CFC", Offset = "0x1606CFC", VA = "0x1606CFC")]
	public List<WUnit> GetUnitListByRoleType(e_type_role roleType, bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x16159C8", Offset = "0x16159C8", VA = "0x16159C8")]
	public List<WUnit> GetUnitListByCamp(WUnit unit, e_type_camp campType, bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x1615BBC", Offset = "0x1615BBC", VA = "0x1615BBC")]
	public List<WUnit>.Enumerator GetAllWUnitEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1615C28", Offset = "0x1615C28", VA = "0x1615C28")]
	public List<WUnit>.Enumerator GetMonsterEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1615C94", Offset = "0x1615C94", VA = "0x1615C94")]
	public List<WUnit>.Enumerator GetNPCEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1615D00", Offset = "0x1615D00", VA = "0x1615D00")]
	public List<WUnit>.Enumerator GetPlayerEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1615D6C", Offset = "0x1615D6C", VA = "0x1615D6C")]
	public bool TryGetGroupListEnumerator(e_group_type gType, out List<WUnit>.Enumerator enumerator)
	{
		return default(bool);
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1615D70", Offset = "0x1615D70", VA = "0x1615D70")]
	public bool TryGetGroupListEnumerator(int gType, out List<WUnit>.Enumerator enumerator)
	{
		return default(bool);
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1615E40", Offset = "0x1615E40", VA = "0x1615E40")]
	public int GetGroupUnitCount(e_group_type gType)
	{
		return default(int);
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1615E44", Offset = "0x1615E44", VA = "0x1615E44")]
	public int GetGroupUnitCount(int gType)
	{
		return default(int);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1615ED0", Offset = "0x1615ED0", VA = "0x1615ED0")]
	public List<WUnit> GetAllPlayers(bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1615EDC", Offset = "0x1615EDC", VA = "0x1615EDC")]
	public WUnit GetBoss()
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1615F9C", Offset = "0x1615F9C", VA = "0x1615F9C")]
	public int GetMonsterStrategyCount(e_type_monster monsterType, string BBVarName, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x16160F8", Offset = "0x16160F8", VA = "0x16160F8")]
	public void ClearUnitsByRoleType(e_type_role roleType, bool includeDie = false)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1616204", Offset = "0x1616204", VA = "0x1616204")]
	public bool CheckAllUnitDieByRoleType(e_type_role roleType)
	{
		return default(bool);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x16162CC", Offset = "0x16162CC", VA = "0x16162CC")]
	public WUnit GetUnitBySite(int site)
	{
		return null;
	}
}
[Token(Token = "0x2000129")]
public class BattleManager
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Battle battle;

	[Token(Token = "0x1700009B")]
	public Battle ownerBattle
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1616504", Offset = "0x1616504", VA = "0x1616504")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x161650C", Offset = "0x161650C", VA = "0x161650C")]
	public BattleManager(Battle _battle)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1616514", Offset = "0x1616514", VA = "0x1616514")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1616518", Offset = "0x1616518", VA = "0x1616518")]
	public void DoExit()
	{
	}
}
[Token(Token = "0x200012A")]
public class BattleMono : MonoBehaviour
{
	[Token(Token = "0x600072F")]
	[Address(RVA = "0x161651C", Offset = "0x161651C", VA = "0x161651C")]
	public BattleMono()
	{
	}
}
[Token(Token = "0x200012B")]
public class BattleState : IState
{
	[Token(Token = "0x6000730")]
	[Address(RVA = "0x16397A4", Offset = "0x16397A4", VA = "0x16397A4", Slot = "4")]
	public void DoInit(object param)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1639944", Offset = "0x1639944", VA = "0x1639944", Slot = "7")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1639A5C", Offset = "0x1639A5C", VA = "0x1639A5C", Slot = "5")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1639C48", Offset = "0x1639C48", VA = "0x1639C48", Slot = "6")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1639D60", Offset = "0x1639D60", VA = "0x1639D60", Slot = "12")]
	public bool DoExit(StateManager.StateDefine nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x1639FE0", Offset = "0x1639FE0", VA = "0x1639FE0", Slot = "8")]
	public void DoGUI()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1639FE4", Offset = "0x1639FE4", VA = "0x1639FE4", Slot = "9")]
	public void DoLoad()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1639FE8", Offset = "0x1639FE8", VA = "0x1639FE8", Slot = "10")]
	public void DoStart(StateManager.StateDefine preType)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x1639FEC", Offset = "0x1639FEC", VA = "0x1639FEC", Slot = "13")]
	public void DoUpdateLoad()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1639FF0", Offset = "0x1639FF0", VA = "0x1639FF0", Slot = "14")]
	public void DoUpdateInTransEnd()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1639FF4", Offset = "0x1639FF4", VA = "0x1639FF4", Slot = "11")]
	public void DoTransformStartOver(StateManager.StateDefine preType)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1639FF8", Offset = "0x1639FF8", VA = "0x1639FF8")]
	public BattleState()
	{
	}
}
[Token(Token = "0x200012C")]
public class BattleUtils
{
	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random rd;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, string> timerStrDic;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<int, string> numStrDic;

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x163A2D4", Offset = "0x163A2D4", VA = "0x163A2D4")]
	public static e_group_type GetGroupId(WUnit actor)
	{
		return default(e_group_type);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x163A2E8", Offset = "0x163A2E8", VA = "0x163A2E8")]
	public static bool IsSameGroup(WUnit actor1, WUnit actor2)
	{
		return default(bool);
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x163A3B4", Offset = "0x163A3B4", VA = "0x163A3B4")]
	public static int Random(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x163A3BC", Offset = "0x163A3BC", VA = "0x163A3BC")]
	public static float RandomFloat(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x163A3C4", Offset = "0x163A3C4", VA = "0x163A3C4")]
	public static float RandomUnitFloat()
	{
		return default(float);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x163A3CC", Offset = "0x163A3CC", VA = "0x163A3CC")]
	public static Vector2 RandomInsideUnitCircle()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x163A3D4", Offset = "0x163A3D4", VA = "0x163A3D4")]
	public static Vector3 RandomInsideUnitSphere()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x163A3DC", Offset = "0x163A3DC", VA = "0x163A3DC")]
	public static Vector3 RandomOnUnitSphere()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x163A3E4", Offset = "0x163A3E4", VA = "0x163A3E4")]
	public static int RandomInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x163A45C", Offset = "0x163A45C", VA = "0x163A45C")]
	public static int Rand(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x163A4EC", Offset = "0x163A4EC", VA = "0x163A4EC")]
	public static float Rand(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x163A5A0", Offset = "0x163A5A0", VA = "0x163A5A0")]
	public static float Rand01()
	{
		return default(float);
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x163A604", Offset = "0x163A604", VA = "0x163A604")]
	public static Vector3 RandSphereDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x163A73C", Offset = "0x163A73C", VA = "0x163A73C")]
	public static WUnit FindRandomTarget(List<WUnit> target_list)
	{
		return null;
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x163A7E8", Offset = "0x163A7E8", VA = "0x163A7E8")]
	public static WUnit FindClosestTarget(List<WUnit>.Enumerator enumerator, Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x163A92C", Offset = "0x163A92C", VA = "0x163A92C")]
	public static WUnit FindRandomTarget(List<WUnit>.Enumerator enumerator, int count)
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x163A9F4", Offset = "0x163A9F4", VA = "0x163A9F4")]
	public static WUnit FindClosestTarget(List<WUnit> units, Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x163AB3C", Offset = "0x163AB3C", VA = "0x163AB3C")]
	public static WUnit FindInGameRandomPlayer()
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x163AC88", Offset = "0x163AC88", VA = "0x163AC88")]
	public static WUnit FindInGameNearPlayer(Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x163AE6C", Offset = "0x163AE6C", VA = "0x163AE6C")]
	private List<WUnit> FindRangeTargets(List<WUnit> units, Vector3 refPos, float min, float max)
	{
		return null;
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x163B008", Offset = "0x163B008", VA = "0x163B008")]
	public static Vector3 GetAttackDir(WUnit attacker, WUnit hurter)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x163B168", Offset = "0x163B168", VA = "0x163B168")]
	public static void PollingUnit(IList<int> list, bool isReturnNull, Action<int, WUnit> rAction)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x163B394", Offset = "0x163B394", VA = "0x163B394")]
	public static void PollingUnit(IList<WUnit> list, bool isReturnNull, Action<WUnit> rAction)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x163B528", Offset = "0x163B528", VA = "0x163B528")]
	public static void PollingUnit(List<WUnit>.Enumerator enumerator, bool isReturnNull, Action<WUnit> rAction)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x163B654", Offset = "0x163B654", VA = "0x163B654")]
	public static void PollingUnitFunc(List<WUnit>.Enumerator enumerator, bool isReturnNull, Func<WUnit, bool> rAction)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x163A1C0", Offset = "0x163A1C0", VA = "0x163A1C0")]
	public static string GetTimeStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x163B778", Offset = "0x163B778", VA = "0x163B778")]
	public static string GetNumStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x163B870", Offset = "0x163B870", VA = "0x163B870")]
	public BattleUtils()
	{
	}
}
[Token(Token = "0x200012D")]
public class BleedBuffData : IBuffData
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int delayStartTime;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int delayDoCount;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int delayDoStep;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x163CDF0", Offset = "0x163CDF0", VA = "0x163CDF0", Slot = "5")]
	public void Deserialize(string json)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x163CE98", Offset = "0x163CE98", VA = "0x163CE98", Slot = "4")]
	public string Serialize()
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x163CF00", Offset = "0x163CF00", VA = "0x163CF00")]
	public BleedBuffData()
	{
	}
}
[Token(Token = "0x200012E")]
[AttributeAttribute(Name = "BuffAttribute", RVA = "0xFD1ED8", Offset = "0xFD1ED8")]
public class BleedBuff_Burn : BleedBuff
{
	[Token(Token = "0x600075C")]
	[Address(RVA = "0x163CF08", Offset = "0x163CF08", VA = "0x163CF08")]
	public BleedBuff_Burn(int id, short type, IBuffData buffData)
	{
	}
}
[Token(Token = "0x200012F")]
[AttributeAttribute(Name = "BuffAttribute", RVA = "0xFD1F60", Offset = "0xFD1F60")]
public class BleedBuff_General : BleedBuff
{
	[Token(Token = "0x600075D")]
	[Address(RVA = "0x163CF0C", Offset = "0x163CF0C", VA = "0x163CF0C")]
	public BleedBuff_General(int id, short type, IBuffData buffData)
	{
	}
}
[Token(Token = "0x2000130")]
public class BleedBuff : BuffBase<BleedBuffData>
{
	[Token(Token = "0x20004B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B34", Offset = "0xFD5B34")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuffResReferenceCollector.BuffEffectRoot root;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform temp;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Transform> <>9__0;

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x163C458", Offset = "0x163C458", VA = "0x163C458")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x163C8C0", Offset = "0x163C8C0", VA = "0x163C8C0")]
		internal void <Start>b__0(Transform t)
		{
		}
	}

	[Token(Token = "0x20004B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B44", Offset = "0xFD5B44")]
	private sealed class <DoHurt>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BleedBuff <>4__this;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WUnit <unit>5__3;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WUnit <unit_ack>5__4;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__5;

		[Token(Token = "0x170003E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002580")]
			[Address(RVA = "0x163CC28", Offset = "0x163CC28", VA = "0x163CC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002582")]
			[Address(RVA = "0x163CC90", Offset = "0x163CC90", VA = "0x163CC90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x163C710", Offset = "0x163C710", VA = "0x163C710")]
		[DebuggerHidden]
		public <DoHurt>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x163C990", Offset = "0x163C990", VA = "0x163C990", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x163C994", Offset = "0x163C994", VA = "0x163C994", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x163CC30", Offset = "0x163CC30", VA = "0x163CC30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B54", Offset = "0xFD5B54")]
	private sealed class <DoWait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BleedBuff <>4__this;

		[Token(Token = "0x170003E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002586")]
			[Address(RVA = "0x163CD80", Offset = "0x163CD80", VA = "0x163CD80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002588")]
			[Address(RVA = "0x163CDE8", Offset = "0x163CDE8", VA = "0x163CDE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x163C73C", Offset = "0x163C73C", VA = "0x163C73C")]
		[DebuggerHidden]
		public <DoWait>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x163CC98", Offset = "0x163CC98", VA = "0x163CC98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x163CC9C", Offset = "0x163CC9C", VA = "0x163CC9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x163CD88", Offset = "0x163CD88", VA = "0x163CD88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine coroutine;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject effect;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x163BD50", Offset = "0x163BD50", VA = "0x163BD50")]
	public BleedBuff(int id, short type, IBuffData buffData)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x163BDC8", Offset = "0x163BDC8", VA = "0x163BDC8", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x163C460", Offset = "0x163C460", VA = "0x163C460")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDD038", Offset = "0xFDD038")]
	private IEnumerator DoHurt()
	{
		return null;
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x163C4DC", Offset = "0x163C4DC", VA = "0x163C4DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDD09C", Offset = "0xFDD09C")]
	private IEnumerator DoWait()
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x163C768", Offset = "0x163C768", VA = "0x163C768", Slot = "15")]
	public override void Stop()
	{
	}
}
[Token(Token = "0x2000131")]
public static class BuffManager
{
	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static sbyte BUFF_STATE_ADD;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static sbyte BUFF_STATE_REMOVE;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static sbyte BUFF_STATE_UPDATE;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1647B20", Offset = "0x1647B20", VA = "0x1647B20")]
	public static int CreateBuffByServer(BuffTypeEnum buffTypeEnum, int attachId, int attackerId, IBuffData data)
	{
		return default(int);
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1647CA8", Offset = "0x1647CA8", VA = "0x1647CA8")]
	public static void UpdateBuffByServer(int buffId, int buffAttachId, IBuffData data)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1647DD8", Offset = "0x1647DD8", VA = "0x1647DD8")]
	public static void RemoveBuffByServer(int attachId, int buffId)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1647E90", Offset = "0x1647E90", VA = "0x1647E90")]
	public static void CreateBuff(BuffTypeEnum buffTypeEnum, int buffId, int attackerId, int hurterId, string buffdata)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1648048", Offset = "0x1648048", VA = "0x1648048")]
	public static void UpdateBuff(int buffId, int buffAttachId, string dataJson)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1648144", Offset = "0x1648144", VA = "0x1648144")]
	public static void RemoveBuff(int buffId, int buffAttachId)
	{
	}
}
[Token(Token = "0x2000132")]
public class BuffResReferenceCollector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004BB")]
	public class ReferenceCollectorCell
	{
		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string key;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEngine.Object value;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<BuffEffectRoot> roots;

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x16484A0", Offset = "0x16484A0", VA = "0x16484A0")]
		public ReferenceCollectorCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004BC")]
	public class BuffEffectRoot
	{
		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string root;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector3 pos_offset;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Vector3 rot_offset;

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x164841C", Offset = "0x164841C", VA = "0x164841C")]
		public BuffEffectRoot()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004BD")]
	public class ReferenceCollector
	{
		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public BuffTypeEnum buffType;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ReferenceCollectorCell> cells;

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x163C630", Offset = "0x163C630", VA = "0x163C630")]
		public ReferenceCollectorCell GetRC(string key)
		{
			return null;
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x1648424", Offset = "0x1648424", VA = "0x1648424")]
		public ReferenceCollector()
		{
		}
	}

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD77C4", Offset = "0xFD77C4")]
	private static BuffResReferenceCollector <Instance>k__BackingField;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<ReferenceCollector> referenceCollectors;

	[Token(Token = "0x1700009C")]
	public static BuffResReferenceCollector Instance
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0x16482A0", Offset = "0x16482A0", VA = "0x16482A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD100", Offset = "0xFDD100")]
		get
		{
			return null;
		}
		[Token(Token = "0x600076B")]
		[Address(RVA = "0x16482F0", Offset = "0x16482F0", VA = "0x16482F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD110", Offset = "0xFDD110")]
		private set
		{
		}
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x163C558", Offset = "0x163C558", VA = "0x163C558")]
	public ReferenceCollector GetRC(BuffTypeEnum buffType)
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1648348", Offset = "0x1648348", VA = "0x1648348")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x16483A0", Offset = "0x16483A0", VA = "0x16483A0")]
	public BuffResReferenceCollector()
	{
	}
}
[Token(Token = "0x2000133")]
public enum BuffTypeEnum : short
{
	[Token(Token = "0x40006CA")]
	BUFF_NONE,
	[Token(Token = "0x40006CB")]
	BUFF_BLEED_BURN,
	[Token(Token = "0x40006CC")]
	BUFF_BLEED_GENERAL
}
[Token(Token = "0x2000134")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD1FE8", Offset = "0xFD1FE8")]
public class IKConfigMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004BE")]
	public class IKConfig
	{
		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group weapon_Group;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject IKRoot;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HeadAnchor;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverVR.Spine HeadSolver;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform LeftHandAnchor;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverVR.Arm LeftHandSolver;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RightHandAnchor;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKSolverVR.Arm RightHandSolver;

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x14758D4", Offset = "0x14758D4", VA = "0x14758D4")]
		public IKConfig()
		{
		}
	}

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRIK ik;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandPoser leftHandPoser;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandPoser rightHandPoser;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private IKConfig[] iKConfigs;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<e_weapon_group, IKConfig> iKConfigDic;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IKConfig curIKConfig;

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1475504", Offset = "0x1475504", VA = "0x1475504")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1475468", Offset = "0x1475468", VA = "0x1475468")]
	public void InitIK(e_weapon_group weapon_Group)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x1475640", Offset = "0x1475640", VA = "0x1475640")]
	private void SetIKSolver(IKConfig newConfig)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x1474CD8", Offset = "0x1474CD8", VA = "0x1474CD8")]
	public void UpdateHMD(Vector3 vrCameraPos)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x1475130", Offset = "0x1475130", VA = "0x1475130")]
	public void UpdateHand_L(Vector3 leftHandPos, Quaternion leftHandRot)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1475254", Offset = "0x1475254", VA = "0x1475254")]
	public void UpdateHand_R(Vector3 rightHandPos, Quaternion rightHandRot)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1475858", Offset = "0x1475858", VA = "0x1475858")]
	public IKConfigMono()
	{
	}
}
[Token(Token = "0x2000135")]
public class LevelEffect : MonoBehaviour
{
	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B64", Offset = "0xFD5B64")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GuidTipUI tip;

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x14843BC", Offset = "0x14843BC", VA = "0x14843BC")]
		public <>c__DisplayClass7_0()
		{
		}
	}

	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B74", Offset = "0xFD5B74")]
	private sealed class <>c__DisplayClass7_1
	{
		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int callIndex;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass7_0 CS$<>8__locals1;

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x14843C4", Offset = "0x14843C4", VA = "0x14843C4")]
		public <>c__DisplayClass7_1()
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x14843D4", Offset = "0x14843D4", VA = "0x14843D4")]
		internal void <PlayLevelEffect>b__0()
		{
		}
	}

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject levelEffect;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioEvent audioEvent;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WUnit owner;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject effect;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine guidTipUICoroutine;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1483B80", Offset = "0x1483B80", VA = "0x1483B80")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1483C94", Offset = "0x1483C94", VA = "0x1483C94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1483E1C", Offset = "0x1483E1C", VA = "0x1483E1C")]
	public void PlayLevelEffect(WUnit unit, int oldlv, int newlv)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x14843CC", Offset = "0x14843CC", VA = "0x14843CC")]
	public LevelEffect()
	{
	}
}
[Token(Token = "0x2000136")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD204C", Offset = "0xFD204C")]
public class MonsterBirth : MonoBehaviour
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject birthEffect;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioEvent audioEvent;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 Offset;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsBirth;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WUnit owner;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject effect;

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x14B5090", Offset = "0x14B5090", VA = "0x14B5090")]
	public void Init()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x14B54BC", Offset = "0x14B54BC", VA = "0x14B54BC")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x14B559C", Offset = "0x14B559C", VA = "0x14B559C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x14B5208", Offset = "0x14B5208", VA = "0x14B5208")]
	public void BirthEffect(bool isParent = false, bool isAudio = true)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x14B54C0", Offset = "0x14B54C0", VA = "0x14B54C0")]
	private void DetroyBirthEffect()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x14B55A0", Offset = "0x14B55A0", VA = "0x14B55A0")]
	public MonsterBirth()
	{
	}
}
[Token(Token = "0x2000137")]
public class OtherPlayerMainController : MonoBehaviour
{
	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInit;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject NameHUDObj;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform UIRoot;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string preName;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnitNormalNameHUD NameHUD;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject CaptainHUDObj;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform CaptainUIRoot;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnitNormalNameHUD CaptainNameHUD;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isCaptain;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x14A025C", Offset = "0x14A025C", VA = "0x14A025C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x14A080C", Offset = "0x14A080C", VA = "0x14A080C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x14A0A2C", Offset = "0x14A0A2C", VA = "0x14A0A2C")]
	private void Fresh()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x14A0390", Offset = "0x14A0390", VA = "0x14A0390")]
	private void InitUIView()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x14A08C4", Offset = "0x14A08C4", VA = "0x14A08C4")]
	public void SetUIView(bool isShow)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x14A0970", Offset = "0x14A0970", VA = "0x14A0970")]
	private void CaptainNameShow(bool isShow)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x14A0ABC", Offset = "0x14A0ABC", VA = "0x14A0ABC")]
	private void SetUIViewDir()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x14A0CF0", Offset = "0x14A0CF0", VA = "0x14A0CF0")]
	public void SetShowNameText(bool isShow)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x14A0DF4", Offset = "0x14A0DF4", VA = "0x14A0DF4")]
	private void UpdateSetName()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x14A101C", Offset = "0x14A101C", VA = "0x14A101C")]
	private void Update()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x14A104C", Offset = "0x14A104C", VA = "0x14A104C")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x14A1070", Offset = "0x14A1070", VA = "0x14A1070")]
	public OtherPlayerMainController()
	{
	}
}
[Token(Token = "0x2000138")]
public class PlayerDeadRagdollTools : MonoBehaviour
{
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject modleObj;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader deadShader;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader liveShader;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string opacityShaderProperty;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WUnit owner;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RendererConfigMono rendererConfigMono;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject cloneModleObj;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock prop;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int opacityID;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RendererConfigMono weaponRendererConfigMono;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RendererConfigMono weaponRendererConfigMono2;

	[Token(Token = "0x40006F3")]
	private const float OPACITY_0 = 1f;

	[Token(Token = "0x40006F4")]
	private const float OPACITY_1 = 0.5f;

	[Token(Token = "0x40006F5")]
	private const float OPACITY_2 = 0f;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, Transform> childNodeDic;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD77F4", Offset = "0xFD77F4")]
	private bool <IsDie>k__BackingField;

	[Token(Token = "0x1700009D")]
	public bool IsDie
	{
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x13A19C0", Offset = "0x13A19C0", VA = "0x13A19C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD120", Offset = "0xFDD120")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x13A19C8", Offset = "0x13A19C8", VA = "0x13A19C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD130", Offset = "0xFDD130")]
		private set
		{
		}
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x13A19D4", Offset = "0x13A19D4", VA = "0x13A19D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x13A1B94", Offset = "0x13A1B94", VA = "0x13A1B94")]
	public void Init(WUnit unit, GameObject weaponObj_r, [Optional] GameObject weaponObj_l)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x13A1BE4", Offset = "0x13A1BE4", VA = "0x13A1BE4")]
	private void InitModelInfo()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x13A1DE8", Offset = "0x13A1DE8", VA = "0x13A1DE8")]
	private void InitWeaponInfo(GameObject obj_0, GameObject obj_1)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x13A21D4", Offset = "0x13A21D4", VA = "0x13A21D4")]
	public void Dead(int ragdollId, Vector3 dir, float hitForce, bool isSameCamp)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x13A2780", Offset = "0x13A2780", VA = "0x13A2780")]
	public void Restore()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x13A2620", Offset = "0x13A2620", VA = "0x13A2620")]
	private void RecursiveCloneTransform(Transform target)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x13A2040", Offset = "0x13A2040", VA = "0x13A2040")]
	private void SetOpacityProperty(Renderer[] renderers, float value, Shader shader)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x13A2928", Offset = "0x13A2928", VA = "0x13A2928")]
	public PlayerDeadRagdollTools()
	{
	}
}
[Token(Token = "0x2000139")]
public class PlayerDeadTester : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraController cameraController;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetGameObject;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandTarget;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHandTarget;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hitForce;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delay;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RagdollTools ragdollTools;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject weapon;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string colliderName;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IKConfigMono iKConfigMono;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerDeadRagdollTools deadTools;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine coroutine;

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x13A2988", Offset = "0x13A2988", VA = "0x13A2988")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x13A2C8C", Offset = "0x13A2C8C", VA = "0x13A2C8C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x13A2E04", Offset = "0x13A2E04", VA = "0x13A2E04")]
	private void Update()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x13A2FB0", Offset = "0x13A2FB0", VA = "0x13A2FB0")]
	private void RayHit(bool isSameCamp)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x13A3324", Offset = "0x13A3324", VA = "0x13A3324")]
	public PlayerDeadTester()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x13A3338", Offset = "0x13A3338", VA = "0x13A3338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD140", Offset = "0xFDD140")]
	private void <RayHit>b__15_0()
	{
	}
}
[Token(Token = "0x200013A")]
public class PlayerModelDefine : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_Player_Style style;

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x13A3378", Offset = "0x13A3378", VA = "0x13A3378")]
	public PlayerModelDefine()
	{
	}
}
[Token(Token = "0x200013B")]
public class RendererConfigMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004C1")]
	public class RendererConfig
	{
		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader[] shaders;

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x1560D48", Offset = "0x1560D48", VA = "0x1560D48")]
		public RendererConfig()
		{
		}
	}

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] modleRenderers;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RendererConfig[] rendererConfigs;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x1560C40", Offset = "0x1560C40", VA = "0x1560C40")]
	public void Reset()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x1560D40", Offset = "0x1560D40", VA = "0x1560D40")]
	public RendererConfigMono()
	{
	}
}
[Token(Token = "0x200013C")]
public class ReviveHPEffect : MonoBehaviour
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject localReviveEffect;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject otherReviveEffect;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEvent audioEvent;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WUnit owner;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject effect;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x1560F70", Offset = "0x1560F70", VA = "0x1560F70")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x1560F78", Offset = "0x1560F78", VA = "0x1560F78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x1561054", Offset = "0x1561054", VA = "0x1561054")]
	public void PlayReviveEffect()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x1561320", Offset = "0x1561320", VA = "0x1561320")]
	public ReviveHPEffect()
	{
	}
}
[Token(Token = "0x200013D")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD20B0", Offset = "0xFD20B0")]
public class UnitConfigMono : MonoBehaviour
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject modelObject;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterMono characterBehaviour;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReviveHPEffect reviveHPEffect;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LevelEffect levelEffect;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> RenderObjectList;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected UnityEvent InitAction;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected UnityEvent DieAction;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected UnityEvent DestroyAction;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WUnit mOwner;

	[Token(Token = "0x1700009E")]
	public WUnit Owner
	{
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1468AD0", Offset = "0x1468AD0", VA = "0x1468AD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x1468AD8", Offset = "0x1468AD8", VA = "0x1468AD8")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1468CA0", Offset = "0x1468CA0", VA = "0x1468CA0")]
	private void InitEventOwner()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1468E04", Offset = "0x1468E04", VA = "0x1468E04")]
	public void DoDie()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1468E18", Offset = "0x1468E18", VA = "0x1468E18")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x1468EDC", Offset = "0x1468EDC", VA = "0x1468EDC")]
	public UnitConfigMono()
	{
	}
}
[Token(Token = "0x200013E")]
public class UnityDefine
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Layer_Default;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int Layer_Bullet;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int Layer_Terrain;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int Layer_HurtCharacter;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int Layer_PhysicsItem;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int Layer_TeleporterTwo;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int Layer_Video;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int Layer_GameEnd;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int Layer_UI;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int Layer_Weapon;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int Layer_WeaponObstacle;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int Layer_MoveBorder;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int Layer_NoDisplay;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int BulletHitLayerMask;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int BulletAOEHitLayerMask;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int WeaponLineHitLayerMask;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int PlayerVideoMask;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int GameStartLayerMask;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int GameEndLayerMask;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int Layer_TeleporterEffect;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int Layer_DropItem;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int Layer_BattleRoomDoor;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int Layer_BattleRoomWall;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int Layer_BattleRoomFloor;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int Layer_BattleRoomSign;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static int Layer_Character;

	[Token(Token = "0x4000730")]
	public const string Tag_Player = "Player";

	[Token(Token = "0x4000731")]
	public const string Tag_Monster = "Monster";

	[Token(Token = "0x4000732")]
	public const string Tag_Cement = "Cement";

	[Token(Token = "0x4000733")]
	public const string Tag_Wood = "Wood";

	[Token(Token = "0x4000734")]
	public const string Tag_Metal = "Metal";

	[Token(Token = "0x4000735")]
	public const string Tag_Glass = "Glass";

	[Token(Token = "0x4000736")]
	public const string Tag_Sand = "Sand";

	[Token(Token = "0x4000737")]
	public const string Tag_Shield = "Shield";

	[Token(Token = "0x4000738")]
	public const string Tag_Crystal = "Crystal";

	[Token(Token = "0x4000739")]
	public const string Tag_Lava = "Lava";

	[Token(Token = "0x400073A")]
	public const string Tag_Meat = "Meat";

	[Token(Token = "0x400073B")]
	public const string Tag_Water = "Water";

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int[] NavMeshAreaMask;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int Walkable;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static int NotWalkable;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int Jump;

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x14715E4", Offset = "0x14715E4", VA = "0x14715E4")]
	public static int GetRoomIndexToArea(int index)
	{
		return default(int);
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x14716B4", Offset = "0x14716B4", VA = "0x14716B4")]
	public static int GetRoomIndexToAreaMask(int area, bool includeWalk = true)
	{
		return default(int);
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x147174C", Offset = "0x147174C", VA = "0x147174C")]
	public static void Init()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1471AC4", Offset = "0x1471AC4", VA = "0x1471AC4")]
	public UnityDefine()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD2114", Offset = "0xFD2114")]
public class WeaponPivot : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004C2")]
	private struct WeaponPivotCell
	{
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public e_weapon_group type;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject pivot_left;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject pivot_right;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isLeftMainWeapin;
	}

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<WeaponPivotCell> weaponPivotList;

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x15AE6E4", Offset = "0x15AE6E4", VA = "0x15AE6E4")]
	public (GameObject, GameObject, bool) GetWeaponPivotByType(e_weapon_group type)
	{
		return default((GameObject, GameObject, bool));
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x15AE8EC", Offset = "0x15AE8EC", VA = "0x15AE8EC")]
	public WeaponPivot()
	{
	}
}
[Token(Token = "0x2000140")]
public class PreFightCutSceneManager : Singleton<PreFightCutSceneManager>
{
	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsStart;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool IsDownAddering;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private bool IsFirstOnlyFinish;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 realPlayerPosition;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 setPlayerPosition;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 beginPlayerPosition;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion downDir;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MoveSpeed;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float MoveSpeedGDown;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MoveSpeedDownDis;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float RunningMoveSpeed;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isDropOutBack;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 dropPrePos;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion dropPreRot;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 dropPreCamLocalPos;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion dropPreCamLocalRot;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 dropPreCamPos;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion dropPreCamRot;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 dropPlayerDir;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 tmpPos;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float dropFadeBeginDis;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float dropFadeInTime;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float dropFadeOutTime;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool isFadeIn;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool isFadeInFin;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	private bool IsDownAdderFinish;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float DownLen;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine timeDelayDownCort;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioEvent BeginAudio;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WwiseDefine BeginObj;

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x13A4364", Offset = "0x13A4364", VA = "0x13A4364")]
	public void Enter()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x13A4538", Offset = "0x13A4538", VA = "0x13A4538")]
	public void Exit()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x13A45C0", Offset = "0x13A45C0", VA = "0x13A45C0")]
	public void Start()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x13A4540", Offset = "0x13A4540", VA = "0x13A4540")]
	public void Stop()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x13A481C", Offset = "0x13A481C", VA = "0x13A481C")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x13A4A28", Offset = "0x13A4A28", VA = "0x13A4A28")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x13A4DEC", Offset = "0x13A4DEC", VA = "0x13A4DEC")]
	private void SetOtherPlayerVisible(bool isVisible)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x13A4F8C", Offset = "0x13A4F8C", VA = "0x13A4F8C")]
	private void CharTeleporter(int id)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x13A464C", Offset = "0x13A464C", VA = "0x13A464C")]
	private void SetSound(bool active)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x13A4FB4", Offset = "0x13A4FB4", VA = "0x13A4FB4")]
	private void BeginDownAdderFinish()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x13A5738", Offset = "0x13A5738", VA = "0x13A5738")]
	private void DownAdder()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x13A5744", Offset = "0x13A5744", VA = "0x13A5744")]
	private void DownAdderDown()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x13A5810", Offset = "0x13A5810", VA = "0x13A5810")]
	private void DownAdderEnd()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x13A483C", Offset = "0x13A483C", VA = "0x13A483C")]
	private void DownAdderUpdate()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x13A58DC", Offset = "0x13A58DC", VA = "0x13A58DC")]
	private void DropFadeInFinish()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x13A4A50", Offset = "0x13A4A50", VA = "0x13A4A50")]
	private void DownAdderLateUpdate()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x13A52D8", Offset = "0x13A52D8", VA = "0x13A52D8")]
	private GameObject GetPlayerObj()
	{
		return null;
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x13A548C", Offset = "0x13A548C", VA = "0x13A548C")]
	public GameObject GetAffectCameraObj()
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x13A5634", Offset = "0x13A5634", VA = "0x13A5634")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x13A5818", Offset = "0x13A5818", VA = "0x13A5818")]
	private bool CheckMoveDis(float dis)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x13A58E8", Offset = "0x13A58E8", VA = "0x13A58E8")]
	public PreFightCutSceneManager()
	{
	}
}
[Token(Token = "0x2000141")]
public class DropCollector : MonoBehaviour
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<DropItem> DropItemRes;

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x13DD84C", Offset = "0x13DD84C", VA = "0x13DD84C")]
	public DropCollector()
	{
	}
}
[Token(Token = "0x2000142")]
public class DropItem : MonoBehaviour
{
	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ItemType;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private e_weapon_group weaponType;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int displayName;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int type;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int id;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnitNormalNameHUD Hud;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject effect;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject effect_flash;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject effect_delete;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInit;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isActive;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float DelayActiveTime;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayActiveRunningTime;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float DelayDestoryTime;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float delayDestoryRunningTime;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float DelayFlashTime;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float DelayDestoryingTime;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float delayDestoryingRunningTime;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isDelayDesotying;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isDelayDesoty;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool isMove;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float moveTime;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float middlePointAdd;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timer;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 fromPoint;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 middlePoint;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 endPoint;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WUnit unit;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SwitchInfoData audioSwitch;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioEvent PickUpAudio;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public AudioEvent DropMoveEndAudio;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WwiseDefine WwiseDefine;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WwiseDefine WwiseDefine2;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float DropSpeed;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float endDropStartPointStep;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float endDropPointOffset;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 endDropPoint;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isDropMove;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] results;

	[Token(Token = "0x1700009F")]
	public bool IsActive
	{
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x13DD8C8", Offset = "0x13DD8C8", VA = "0x13DD8C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A0")]
	public bool IsCanTrigger
	{
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x13DD8D0", Offset = "0x13DD8D0", VA = "0x13DD8D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x13DD908", Offset = "0x13DD908", VA = "0x13DD908", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x13DDE30", Offset = "0x13DDE30", VA = "0x13DDE30", Slot = "5")]
	public virtual void Activate()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x13DDF60", Offset = "0x13DDF60", VA = "0x13DDF60", Slot = "6")]
	public virtual void Deactivate()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x13DE11C", Offset = "0x13DE11C", VA = "0x13DE11C", Slot = "7")]
	public virtual void Trigger(int uid)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x13DE238", Offset = "0x13DE238", VA = "0x13DE238")]
	private void MoveToTarget(int uid)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x13DE3E8", Offset = "0x13DE3E8", VA = "0x13DE3E8")]
	private void DoMove()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x13DE7A0", Offset = "0x13DE7A0", VA = "0x13DE7A0", Slot = "8")]
	public virtual void DoDestroy()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x13DE85C", Offset = "0x13DE85C", VA = "0x13DE85C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x13DEC1C", Offset = "0x13DEC1C", VA = "0x13DEC1C")]
	private void DoDropMove()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x13DE5CC", Offset = "0x13DE5CC", VA = "0x13DE5CC")]
	public Vector3 GetCurvePoint(Vector3 point0, Vector3 point1, Vector3 point2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x13DE8E0", Offset = "0x13DE8E0", VA = "0x13DE8E0")]
	private void DelayActiveUpdate()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x13DEB3C", Offset = "0x13DEB3C", VA = "0x13DEB3C")]
	private void DelayDestoryUpdate()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x13DEDE0", Offset = "0x13DEDE0", VA = "0x13DEDE0")]
	private void DelayDestoryingUpdate()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x13DEA5C", Offset = "0x13DEA5C", VA = "0x13DEA5C")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x13DEE90", Offset = "0x13DEE90", VA = "0x13DEE90")]
	public DropItem()
	{
	}
}
[Token(Token = "0x2000143")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD2178", Offset = "0xFD2178")]
public class DropItemUnitConfig : MonoBehaviour
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Offset;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x13DEF3C", Offset = "0x13DEF3C", VA = "0x13DEF3C")]
	public void Init()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x13DEFFC", Offset = "0x13DEFFC", VA = "0x13DEFFC")]
	public void DropItem()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x13DF370", Offset = "0x13DF370", VA = "0x13DF370")]
	public DropItemUnitConfig()
	{
	}
}
[Token(Token = "0x2000144")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD21DC", Offset = "0xFD21DC")]
public class AnimationDefine : MonoBehaviour
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationDefineEventCallBack animationEventCallBack;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] audioObjects;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationEventData[] defines;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<UnityEngine.Object> resList;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Transform> boneDic;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1607D18", Offset = "0x1607D18", VA = "0x1607D18")]
	public void Init()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x1608740", Offset = "0x1608740", VA = "0x1608740")]
	public void UnInit()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x1608DD0", Offset = "0x1608DD0", VA = "0x1608DD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1607F4C", Offset = "0x1607F4C", VA = "0x1607F4C")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x16084FC", Offset = "0x16084FC", VA = "0x16084FC")]
	private void InitEvent()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x160835C", Offset = "0x160835C", VA = "0x160835C")]
	private void InitBoneDic()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1608FA4", Offset = "0x1608FA4", VA = "0x1608FA4")]
	private Transform GetBoneByPath(string path)
	{
		return null;
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1609078", Offset = "0x1609078", VA = "0x1609078")]
	private void OnAnimationCB(AnimationEventData.EventData cell)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1609B84", Offset = "0x1609B84", VA = "0x1609B84")]
	public AnimationDefine()
	{
	}
}
[Token(Token = "0x2000145")]
public class AnimationDefineEventCallBack : MonoBehaviour
{
	[Token(Token = "0x20004C3")]
	private class timeCell
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationEventData.EventData vfx;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x160A22C", Offset = "0x160A22C", VA = "0x160A22C")]
		public void Init(AnimationEventData.EventData _vfx, float _time)
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x160A510", Offset = "0x160A510", VA = "0x160A510")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x160A4D0", Offset = "0x160A4D0", VA = "0x160A4D0")]
		public timeCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B84", Offset = "0xFD5B84")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<timeCell> <>9__12_0;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<timeCell> <>9__12_1;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<AnimationEventData.EventData> <>9__20_0;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<AnimationEventData.EventData> <>9__21_0;

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x160A46C", Offset = "0x160A46C", VA = "0x160A46C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x160A474", Offset = "0x160A474", VA = "0x160A474")]
		internal timeCell <Init>b__12_0()
		{
			return null;
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x160A4D8", Offset = "0x160A4D8", VA = "0x160A4D8")]
		internal void <Init>b__12_1(timeCell cell)
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x160A540", Offset = "0x160A540", VA = "0x160A540")]
		internal void <UnRegisterAllAnimationEffectCB>b__20_0(AnimationEventData.EventData <p0>)
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x160A544", Offset = "0x160A544", VA = "0x160A544")]
		internal void <.ctor>b__21_0(AnimationEventData.EventData <p0>)
		{
		}
	}

	[Token(Token = "0x4000790")]
	private const string OnAnimationEffectEventName = "OnAnimationEvent";

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<AnimationEventData.EventData> animationEffectEventCB;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<AnimationEventData.EventData>> animationDefineVFXCellDic;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastAni;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int curAni;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<AnimationEventData.EventData> lastEventData;

	[Token(Token = "0x4000797")]
	private const float ANI_EVEVT_START_TIME = 0.03333f;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ObjectPool<timeCell> timecellPool;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<timeCell> timerList;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationDefineSMBCB animationDefineSMBCB;

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1607FE8", Offset = "0x1607FE8", VA = "0x1607FE8")]
	public void Init(Animator _animator)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1608CB4", Offset = "0x1608CB4", VA = "0x1608CB4")]
	public void UnInit()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x1608DD4", Offset = "0x1608DD4", VA = "0x1608DD4")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1609D6C", Offset = "0x1609D6C", VA = "0x1609D6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1609E60", Offset = "0x1609E60", VA = "0x1609E60")]
	private void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x160A264", Offset = "0x160A264", VA = "0x160A264")]
	private void OnAnimationEvent(string aniName)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1609C38", Offset = "0x1609C38", VA = "0x1609C38")]
	private void UpdateAnimationEvent(float deltaTime)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1608E88", Offset = "0x1608E88", VA = "0x1608E88")]
	public void RegisterAnimationEffectCB(AnimationEventData.EventData cell)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1608AF8", Offset = "0x1608AF8", VA = "0x1608AF8")]
	public void UnRegisterAllAnimationEffectCB()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x160A268", Offset = "0x160A268", VA = "0x160A268")]
	public AnimationDefineEventCallBack()
	{
	}
}
[Token(Token = "0x2000146")]
public class AnimationDefineSMBCB : StateMachineBehaviour
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Animator, AnimatorStateInfo, int> OnStateEnterAction;

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x160A548", Offset = "0x160A548", VA = "0x160A548", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x160A5F0", Offset = "0x160A5F0", VA = "0x160A5F0")]
	public AnimationDefineSMBCB()
	{
	}
}
[Serializable]
[Token(Token = "0x2000147")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xFD2240", Offset = "0xFD2240")]
public class AnimationEventData : ScriptableObject
{
	[Token(Token = "0x20004C5")]
	public enum Type
	{
		[Token(Token = "0x4001BDC")]
		Effect,
		[Token(Token = "0x4001BDD")]
		Audio
	}

	[Serializable]
	[Token(Token = "0x20004C6")]
	public class EventData
	{
		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioEvent audioEvent;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int aniFrame;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isLoop;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string aniName;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string boneNode;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 offsetPos;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 offsetRot;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEngine.Object prefabs;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int audioSourceIndex;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool isEnableLifeTime;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lifeTime;

		[Token(Token = "0x170003EB")]
		public float aniStartTime
		{
			[Token(Token = "0x600259B")]
			[Address(RVA = "0x160A214", Offset = "0x160A214", VA = "0x160A214")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x160A600", Offset = "0x160A600", VA = "0x160A600")]
		public EventData()
		{
		}
	}

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EventData> defineCells;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int modelId;

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x160A5F8", Offset = "0x160A5F8", VA = "0x160A5F8")]
	public AnimationEventData()
	{
	}
}
[Token(Token = "0x2000148")]
public class AutoDestroy : MonoBehaviour
{
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DespawnDelay;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnable;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x16128AC", Offset = "0x16128AC", VA = "0x16128AC")]
	public void AutoDestroyInit(float _delay)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x16128C0", Offset = "0x16128C0", VA = "0x16128C0")]
	public void Init(float _delay)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x16128D4", Offset = "0x16128D4", VA = "0x16128D4")]
	public void UnInit()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x16128DC", Offset = "0x16128DC", VA = "0x16128DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x16129A0", Offset = "0x16129A0", VA = "0x16129A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x16129AC", Offset = "0x16129AC", VA = "0x16129AC")]
	public AutoDestroy()
	{
	}
}
[Token(Token = "0x2000149")]
public class BuildingsEffectProxy : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004C7")]
	public struct BuildingsEffectProxyCell
	{
		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tag;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioEvent audioEvent;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SwitchInfoData switchEvent;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] effects;
	}

	[Serializable]
	[Token(Token = "0x20004C8")]
	public class WeaponEffectProxyCell
	{
		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_type e_Weapon_Type;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingsEffectProxyCell[] effectCells;

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x16492D4", Offset = "0x16492D4", VA = "0x16492D4")]
		public WeaponEffectProxyCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004C9")]
	public struct DecalProxyCell
	{
		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;
	}

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BuildingsEffectProxy _Instance;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WeaponEffectProxyCell> effectCells2;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public QuadDecalPool bulletHoleEffect;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, Dictionary<string, BuildingsEffectProxyCell>> effectCellDic2;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<e_weapon_type> e_Weapon_Typess;

	[Token(Token = "0x170000A1")]
	public static BuildingsEffectProxy Instance
	{
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x164851C", Offset = "0x164851C", VA = "0x164851C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x164856C", Offset = "0x164856C", VA = "0x164856C")]
		private set
		{
		}
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x16485C4", Offset = "0x16485C4", VA = "0x16485C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1648778", Offset = "0x1648778", VA = "0x1648778")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1648A44", Offset = "0x1648A44", VA = "0x1648A44")]
	public void ShowHitEffect(e_weapon_type weapon_Type, GameObject _hitObj, Vector3 _hitPos, Vector3 _hitNormal, bool _isShowHole = false)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1648FDC", Offset = "0x1648FDC", VA = "0x1648FDC")]
	private void PlayAudio(AudioEvent audioEvent, Vector3 _hitPos, SwitchInfoData switchEvent)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1648E00", Offset = "0x1648E00", VA = "0x1648E00")]
	private void ShowMaterialEffect(GameObject[] _hitEffects, GameObject _hitObj, Vector3 _hitPos, Quaternion _hitRot)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x164912C", Offset = "0x164912C", VA = "0x164912C")]
	private EffectDefine ShowMaterialEffect(GameObject _hitEffect, GameObject _hitObj, Vector3 _hitPos, Quaternion _hitRot)
	{
		return null;
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1649224", Offset = "0x1649224", VA = "0x1649224")]
	public BuildingsEffectProxy()
	{
	}
}
[Token(Token = "0x200014A")]
public class BulletScaleAnimation : MonoBehaviour
{
	[Token(Token = "0x20004CA")]
	public enum EAxis
	{
		[Token(Token = "0x4001BF3")]
		X,
		[Token(Token = "0x4001BF4")]
		Y,
		[Token(Token = "0x4001BF5")]
		Z
	}

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EAxis MoveAxis;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float BulletLength;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float BulletStretchFrame;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float BulletStrinkFrame;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float BulletKeepFrame;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BulletScaleFactor;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mBulletStretchTime;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float mBulletStrinkTime;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float mBulletKeepTime;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mStretchSpeed;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mStrinkSpeed;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mCurrentLength;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mTime;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float mCurrentScale;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 mFront;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x164E97C", Offset = "0x164E97C", VA = "0x164E97C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x164EBCC", Offset = "0x164EBCC", VA = "0x164EBCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x164EE9C", Offset = "0x164EE9C", VA = "0x164EE9C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x164EBD4", Offset = "0x164EBD4", VA = "0x164EBD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x164EEC4", Offset = "0x164EEC4", VA = "0x164EEC4")]
	public BulletScaleAnimation()
	{
	}
}
[Token(Token = "0x200014B")]
public class EffectDefine : MonoBehaviour
{
	[Token(Token = "0x6000806")]
	[Address(RVA = "0x13E1000", Offset = "0x13E1000", VA = "0x13E1000")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x13E1004", Offset = "0x13E1004", VA = "0x13E1004")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x13E1008", Offset = "0x13E1008", VA = "0x13E1008")]
	public EffectDefine()
	{
	}
}
[Token(Token = "0x200014C")]
public class AlphaTimeLine : MaterialPropTimeLine
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Begin;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float End;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve mCurve;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color RGB;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int TintColorCode;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int TintColorArrayCode;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x160735C", Offset = "0x160735C", VA = "0x160735C")]
	private void Start()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x16073F4", Offset = "0x16073F4", VA = "0x16073F4", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x16074A0", Offset = "0x16074A0", VA = "0x16074A0")]
	public AlphaTimeLine()
	{
	}
}
[Token(Token = "0x200014D")]
public class MaterialProp : MonoBehaviour
{
	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer mRend;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock mMatProp;

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x14B348C", Offset = "0x14B348C", VA = "0x14B348C")]
	public void Init(Renderer rend)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x14B3510", Offset = "0x14B3510", VA = "0x14B3510")]
	public MaterialPropertyBlock GetMatProp()
	{
		return null;
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x14B3518", Offset = "0x14B3518", VA = "0x14B3518")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x14B35B0", Offset = "0x14B35B0", VA = "0x14B35B0")]
	public MaterialProp()
	{
	}
}
[Token(Token = "0x200014E")]
public class MaterialPropTimeLine : TimeLineBase
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialProp mMatProp;

	[Token(Token = "0x170000A2")]
	protected MaterialPropertyBlock MatPropBlock
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x14B36EC", Offset = "0x14B36EC", VA = "0x14B36EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x14B35B8", Offset = "0x14B35B8", VA = "0x14B35B8")]
	public void CreateMaterialProperty(Renderer rend)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x14B377C", Offset = "0x14B377C", VA = "0x14B377C")]
	public MaterialPropTimeLine()
	{
	}
}
[Token(Token = "0x200014F")]
public class RotateTimeLine : TimeLineBase
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 mEndVector3;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 mStartVector3;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve mXAnimationCurve;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve mYAnimationCurve;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve mZAnimationCurve;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool mXAngle;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool mYAngle;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool mZAngle;

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x156BADC", Offset = "0x156BADC", VA = "0x156BADC", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x156BE3C", Offset = "0x156BE3C", VA = "0x156BE3C")]
	public RotateTimeLine()
	{
	}
}
[Token(Token = "0x2000150")]
public class ScaleTimeLine : MonoBehaviour
{
	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve XAsixScale;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve YAsixScale;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve ZAsixScale;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve ALLAsixScale;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ScaleAll;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool Loop;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DelayTime;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ScaleTime;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Scales;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mTime;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 mCurScale;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x13FFA6C", Offset = "0x13FFA6C", VA = "0x13FFA6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x13FFAA8", Offset = "0x13FFAA8", VA = "0x13FFAA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x13FFAF8", Offset = "0x13FFAF8", VA = "0x13FFAF8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x13FFAFC", Offset = "0x13FFAFC", VA = "0x13FFAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x13FFDE4", Offset = "0x13FFDE4", VA = "0x13FFDE4")]
	public ScaleTimeLine()
	{
	}
}
[Token(Token = "0x2000151")]
public class SpriteTimeLine : MaterialPropTimeLine
{
	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string UVParameterName;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TileX;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TileY;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve mUVCurve;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool RandomEndSprite;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected int UVParameterID;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float EndSpriteNum;

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x15C6830", Offset = "0x15C6830", VA = "0x15C6830")]
	private void OnReStart()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x15C6878", Offset = "0x15C6878", VA = "0x15C6878")]
	private void Start()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x15C69AC", Offset = "0x15C69AC", VA = "0x15C69AC", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x15C6AF4", Offset = "0x15C6AF4", VA = "0x15C6AF4")]
	public SpriteTimeLine()
	{
	}
}
[Token(Token = "0x2000152")]
public class TimeLineBase : MonoBehaviour
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Action mReStartCallback;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Loop;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool LoopIgnoreDelayTime;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DelayTime;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ScaleTime;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float LoopSecondStartTime;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float mTime;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x1460920", Offset = "0x1460920", VA = "0x1460920", Slot = "4")]
	public virtual void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1460924", Offset = "0x1460924", VA = "0x1460924", Slot = "5")]
	public virtual void OnMonoEnable()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x146092C", Offset = "0x146092C", VA = "0x146092C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x146096C", Offset = "0x146096C", VA = "0x146096C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1460A28", Offset = "0x1460A28", VA = "0x1460A28")]
	public TimeLineBase()
	{
	}
}
[Token(Token = "0x2000153")]
public class TransformTimeLine : TimeLineBase
{
	[Token(Token = "0x20004CB")]
	public enum TranType
	{
		[Token(Token = "0x4001BF7")]
		TRAN_SCALE,
		[Token(Token = "0x4001BF8")]
		TRAN_POS
	}

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TranType mTranType;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve XAsixScale;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve YAsixScale;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve ZAsixScale;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve ALLAsixScale;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ScaleAll;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool RandomEnd;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 Begin;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 End;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 ReStartEnd;

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1465688", Offset = "0x1465688", VA = "0x1465688")]
	private void Start()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1465760", Offset = "0x1465760", VA = "0x1465760")]
	private void OnReStart()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1465840", Offset = "0x1465840", VA = "0x1465840")]
	public void Init()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x146584C", Offset = "0x146584C", VA = "0x146584C", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1465B60", Offset = "0x1465B60", VA = "0x1465B60")]
	public TransformTimeLine()
	{
	}
}
[Token(Token = "0x2000154")]
public class UVAnimTimeLine : SpriteTimeLine
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float SpeedU;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float SpeedV;

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x1467CF4", Offset = "0x1467CF4", VA = "0x1467CF4", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1467DC4", Offset = "0x1467DC4", VA = "0x1467DC4")]
	public UVAnimTimeLine()
	{
	}
}
[Token(Token = "0x2000155")]
public class FPSRandomRotateAngle : MonoBehaviour
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RotateX;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RotateY;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool RotateZ;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x15E1370", Offset = "0x15E1370", VA = "0x15E1370")]
	private void Awake()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x15E13A0", Offset = "0x15E13A0", VA = "0x15E13A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x15E1498", Offset = "0x15E1498", VA = "0x15E1498")]
	public FPSRandomRotateAngle()
	{
	}
}
[Token(Token = "0x2000156")]
public class RunParticle : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5B94", Offset = "0xFD5B94")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ParticleSystem> <>9__0_0;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<ParticleSystem> <>9__1_0;

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x156C3C4", Offset = "0x156C3C4", VA = "0x156C3C4")]
		public <>c()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x156C3CC", Offset = "0x156C3CC", VA = "0x156C3CC")]
		internal void <OnEnable>b__0_0(ParticleSystem p)
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x156C3E8", Offset = "0x156C3E8", VA = "0x156C3E8")]
		internal void <OnDisable>b__1_0(ParticleSystem p)
		{
		}
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x156C16C", Offset = "0x156C16C", VA = "0x156C16C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x156C260", Offset = "0x156C260", VA = "0x156C260")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x156C354", Offset = "0x156C354", VA = "0x156C354")]
	public RunParticle()
	{
	}
}
[Token(Token = "0x2000157")]
public class TransparentScaleAnimation : MonoBehaviour
{
	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ShowFrame;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float KeepFrame;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HideFrame;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mShowTime;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float mKeepTime;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float mHideTime;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mTime;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mMaterial;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int TintColorCode;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color mCurrentMaterialColor;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float mAlpha;

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1465CAC", Offset = "0x1465CAC", VA = "0x1465CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1465D98", Offset = "0x1465D98", VA = "0x1465D98")]
	public void Init()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1465DC8", Offset = "0x1465DC8", VA = "0x1465DC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x1465DB0", Offset = "0x1465DB0", VA = "0x1465DB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1465E7C", Offset = "0x1465E7C", VA = "0x1465E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1465F44", Offset = "0x1465F44", VA = "0x1465F44")]
	public TransparentScaleAnimation()
	{
	}
}
[Token(Token = "0x2000158")]
public class UVOffsetAnimation : MonoBehaviour
{
	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float XSpeed;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float YSpeed;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float xOffset;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float yOffset;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mainMaterial;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastTime;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initSucceed;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1467DCC", Offset = "0x1467DCC", VA = "0x1467DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1467EB0", Offset = "0x1467EB0", VA = "0x1467EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1467FB8", Offset = "0x1467FB8", VA = "0x1467FB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1467F04", Offset = "0x1467F04", VA = "0x1467F04")]
	private void UpdateAnimation()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x146806C", Offset = "0x146806C", VA = "0x146806C")]
	public UVOffsetAnimation()
	{
	}
}
[Token(Token = "0x2000159")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5BA4", Offset = "0xFD5BA4")]
	private sealed class <UpdateCorutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UVTextureAnimator <>4__this;

		[Token(Token = "0x170003EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025A5")]
			[Address(RVA = "0x1468864", Offset = "0x1468864", VA = "0x1468864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025A7")]
			[Address(RVA = "0x14688CC", Offset = "0x14688CC", VA = "0x14688CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x1468550", Offset = "0x1468550", VA = "0x1468550")]
		[DebuggerHidden]
		public <UpdateCorutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x1468764", Offset = "0x1468764", VA = "0x1468764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x1468768", Offset = "0x1468768", VA = "0x1468768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x146886C", Offset = "0x146886C", VA = "0x146886C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Rows;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Columns;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Fps;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int OffsetMat;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartDelay;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isInizialised;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int index;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int count;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int allCount;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float deltaFps;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isVisible;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool isCorutineStarted;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer currentRenderer;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1468084", Offset = "0x1468084", VA = "0x1468084")]
	private void Start()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1468100", Offset = "0x1468100", VA = "0x1468100")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x1468374", Offset = "0x1468374", VA = "0x1468374")]
	private void Play()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x1468488", Offset = "0x1468488", VA = "0x1468488")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x14684B4", Offset = "0x14684B4", VA = "0x14684B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x14684EC", Offset = "0x14684EC", VA = "0x14684EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x146840C", Offset = "0x146840C", VA = "0x146840C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDD150", Offset = "0xFDD150")]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x146857C", Offset = "0x146857C", VA = "0x146857C")]
	private void UpdateCorutineFrame()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1468680", Offset = "0x1468680", VA = "0x1468680")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1468744", Offset = "0x1468744", VA = "0x1468744")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x200015A")]
public class ExploderConfig : MonoBehaviour
{
	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5BB4", Offset = "0xFD5BB4")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderConfig <>4__this;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 point;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float force;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 dir;

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x13E685C", Offset = "0x13E685C", VA = "0x13E685C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x13E68EC", Offset = "0x13E68EC", VA = "0x13E68EC")]
		internal void <Expolder>b__0(float time, ExploderObject.ExplosionState state)
		{
		}
	}

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] explodeParts;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int targetFragments;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fragmentsForceRadius;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool IsOpen;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] tempFragmentColliders;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x13E6334", Offset = "0x13E6334", VA = "0x13E6334")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x13E6444", Offset = "0x13E6444", VA = "0x13E6444")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x13E6450", Offset = "0x13E6450", VA = "0x13E6450")]
	public void Expolder(Vector3 point, Vector3 dir, float force, DeactivateOptions deactivateOptions, FadeoutOptions fadeoutOptions, float fadeoutValue)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x13E6864", Offset = "0x13E6864", VA = "0x13E6864")]
	public ExploderConfig()
	{
	}
}
[Token(Token = "0x200015B")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD22AC", Offset = "0xFD22AC")]
public class ExploderTools : MonoBehaviour
{
	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5BC4", Offset = "0xFD5BC4")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderConfig exploderConfig;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 point;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 dir;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float force;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExploderTools <>4__this;

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x15E0E30", Offset = "0x15E0E30", VA = "0x15E0E30")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x15E10A0", Offset = "0x15E10A0", VA = "0x15E10A0")]
		internal void <Exploder>b__0()
		{
		}
	}

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<ExploderConfig> exploderConfigs;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> parts;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutTime;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public DeactivateOptions deactivateOptions;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FadeoutOptions FadeoutOptions;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float brokenDelay;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine coroutine;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isOpen;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x15E0B54", Offset = "0x15E0B54", VA = "0x15E0B54")]
	public void Register(ExploderConfig exploderConfig)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x15E0BFC", Offset = "0x15E0BFC", VA = "0x15E0BFC")]
	public void Exploder(ExploderConfig exploderConfig, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x15E0E38", Offset = "0x15E0E38", VA = "0x15E0E38")]
	public void Reset()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x15E1070", Offset = "0x15E1070", VA = "0x15E1070")]
	public ExploderTools()
	{
	}
}
[Token(Token = "0x200015C")]
public delegate void OnStateStart(int state_id);
[Token(Token = "0x200015D")]
public delegate void OnStateUpdate(int state_id, float deltaTime);
[Token(Token = "0x200015E")]
public delegate void OnStateLateUpdate(int state_id);
[Token(Token = "0x200015F")]
public delegate void OnStateFixedUpdate(int state_id, float fixedDeltaTime);
[Token(Token = "0x2000160")]
public delegate void OnStateQuit(int state_id);
[Token(Token = "0x2000161")]
public class FSMState
{
	[Serializable]
	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5BD4", Offset = "0xFD5BD4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OnStateStart <>9__38_0;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static OnStateUpdate <>9__38_1;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static OnStateFixedUpdate <>9__38_2;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static OnStateLateUpdate <>9__38_3;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static OnStateQuit <>9__38_4;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static OnStateStart <>9__46_0;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static OnStateUpdate <>9__46_1;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static OnStateFixedUpdate <>9__46_2;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static OnStateLateUpdate <>9__46_3;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static OnStateQuit <>9__46_4;

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x15E92BC", Offset = "0x15E92BC", VA = "0x15E92BC")]
		public <>c()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x15E92C4", Offset = "0x15E92C4", VA = "0x15E92C4")]
		internal void <Reset>b__38_0(int <p0>)
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x15E92C8", Offset = "0x15E92C8", VA = "0x15E92C8")]
		internal void <Reset>b__38_1(int <p0>, float <p1>)
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x15E92CC", Offset = "0x15E92CC", VA = "0x15E92CC")]
		internal void <Reset>b__38_2(int <p0>, float <p1>)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x15E92D0", Offset = "0x15E92D0", VA = "0x15E92D0")]
		internal void <Reset>b__38_3(int <p0>)
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x15E92D4", Offset = "0x15E92D4", VA = "0x15E92D4")]
		internal void <Reset>b__38_4(int <p0>)
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x15E92D8", Offset = "0x15E92D8", VA = "0x15E92D8")]
		internal void <.ctor>b__46_0(int <p0>)
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x15E92DC", Offset = "0x15E92DC", VA = "0x15E92DC")]
		internal void <.ctor>b__46_1(int <p0>, float <p1>)
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x15E92E0", Offset = "0x15E92E0", VA = "0x15E92E0")]
		internal void <.ctor>b__46_2(int <p0>, float <p1>)
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x15E92E4", Offset = "0x15E92E4", VA = "0x15E92E4")]
		internal void <.ctor>b__46_3(int <p0>)
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x15E92E8", Offset = "0x15E92E8", VA = "0x15E92E8")]
		internal void <.ctor>b__46_4(int <p0>)
		{
		}
	}

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD78B4", Offset = "0xFD78B4")]
	private string <Name>k__BackingField;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD78C4", Offset = "0xFD78C4")]
	private int <StateID>k__BackingField;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> m_trans_list;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD78D4", Offset = "0xFD78D4")]
	private FSMSystem <StateMachine>k__BackingField;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD78E4", Offset = "0xFD78E4")]
	private OnStateStart <StartCallback>k__BackingField;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD78F4", Offset = "0xFD78F4")]
	private OnStateUpdate <UpdateCallback>k__BackingField;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7904", Offset = "0xFD7904")]
	private OnStateFixedUpdate <FixedUpdateCallback>k__BackingField;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7914", Offset = "0xFD7914")]
	private OnStateLateUpdate <LateUpdateCallback>k__BackingField;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7924", Offset = "0xFD7924")]
	private OnStateQuit <QuitCallback>k__BackingField;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7934", Offset = "0xFD7934")]
	private object <UserData>k__BackingField;

	[Token(Token = "0x170000A3")]
	public string Name
	{
		[Token(Token = "0x6000862")]
		[Address(RVA = "0x15E88D0", Offset = "0x15E88D0", VA = "0x15E88D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD1B4", Offset = "0xFDD1B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000863")]
		[Address(RVA = "0x15E88D8", Offset = "0x15E88D8", VA = "0x15E88D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD1C4", Offset = "0xFDD1C4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public int StateID
	{
		[Token(Token = "0x6000864")]
		[Address(RVA = "0x15E88E0", Offset = "0x15E88E0", VA = "0x15E88E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD1D4", Offset = "0xFDD1D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000865")]
		[Address(RVA = "0x15E88E8", Offset = "0x15E88E8", VA = "0x15E88E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD1E4", Offset = "0xFDD1E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public FSMSystem StateMachine
	{
		[Token(Token = "0x6000866")]
		[Address(RVA = "0x15E88F0", Offset = "0x15E88F0", VA = "0x15E88F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD1F4", Offset = "0xFDD1F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000867")]
		[Address(RVA = "0x15E88F8", Offset = "0x15E88F8", VA = "0x15E88F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD204", Offset = "0xFDD204")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public OnStateStart StartCallback
	{
		[Token(Token = "0x6000868")]
		[Address(RVA = "0x15E8900", Offset = "0x15E8900", VA = "0x15E8900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD214", Offset = "0xFDD214")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000869")]
		[Address(RVA = "0x15E8908", Offset = "0x15E8908", VA = "0x15E8908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD224", Offset = "0xFDD224")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public OnStateUpdate UpdateCallback
	{
		[Token(Token = "0x600086A")]
		[Address(RVA = "0x15E8910", Offset = "0x15E8910", VA = "0x15E8910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD234", Offset = "0xFDD234")]
		get
		{
			return null;
		}
		[Token(Token = "0x600086B")]
		[Address(RVA = "0x15E8918", Offset = "0x15E8918", VA = "0x15E8918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD244", Offset = "0xFDD244")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public OnStateFixedUpdate FixedUpdateCallback
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0x15E8920", Offset = "0x15E8920", VA = "0x15E8920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD254", Offset = "0xFDD254")]
		get
		{
			return null;
		}
		[Token(Token = "0x600086D")]
		[Address(RVA = "0x15E8928", Offset = "0x15E8928", VA = "0x15E8928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD264", Offset = "0xFDD264")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public OnStateLateUpdate LateUpdateCallback
	{
		[Token(Token = "0x600086E")]
		[Address(RVA = "0x15E8930", Offset = "0x15E8930", VA = "0x15E8930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD274", Offset = "0xFDD274")]
		get
		{
			return null;
		}
		[Token(Token = "0x600086F")]
		[Address(RVA = "0x15E8938", Offset = "0x15E8938", VA = "0x15E8938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD284", Offset = "0xFDD284")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public OnStateQuit QuitCallback
	{
		[Token(Token = "0x6000870")]
		[Address(RVA = "0x15E8940", Offset = "0x15E8940", VA = "0x15E8940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD294", Offset = "0xFDD294")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000871")]
		[Address(RVA = "0x15E8948", Offset = "0x15E8948", VA = "0x15E8948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD2A4", Offset = "0xFDD2A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public object UserData
	{
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x15E8950", Offset = "0x15E8950", VA = "0x15E8950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD2B4", Offset = "0xFDD2B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000873")]
		[Address(RVA = "0x15E8958", Offset = "0x15E8958", VA = "0x15E8958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD2C4", Offset = "0xFDD2C4")]
		set
		{
		}
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x15E8960", Offset = "0x15E8960", VA = "0x15E8960")]
	public void Init(int state_id, string state_name)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x15E8970", Offset = "0x15E8970", VA = "0x15E8970")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x15E8D10", Offset = "0x15E8D10", VA = "0x15E8D10")]
	public void AddTransLink(int link_id)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x15E8D78", Offset = "0x15E8D78", VA = "0x15E8D78")]
	public bool CanTrans(int link_id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x15E8E1C", Offset = "0x15E8E1C", VA = "0x15E8E1C")]
	public void DoStartState()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x15E8E40", Offset = "0x15E8E40", VA = "0x15E8E40")]
	public void DoUpdateState(float deltaTime)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x15E8E64", Offset = "0x15E8E64", VA = "0x15E8E64")]
	public void DoLateUpdateState()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x15E8E88", Offset = "0x15E8E88", VA = "0x15E8E88")]
	public void DoFixedUpdateState(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x15E8EAC", Offset = "0x15E8EAC", VA = "0x15E8EAC")]
	public void DoQuitState()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x15E8ED0", Offset = "0x15E8ED0", VA = "0x15E8ED0")]
	public FSMState()
	{
	}
}
[Token(Token = "0x2000162")]
public class FSMSystem
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, FSMState> m_state_dict;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FSMState m_start_state;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7944", Offset = "0xFD7944")]
	private FSMState <CurrentState>k__BackingField;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7954", Offset = "0xFD7954")]
	private bool <NextFrameChg>k__BackingField;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int m_target_state_id;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7964", Offset = "0xFD7964")]
	private object <UserData>k__BackingField;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7974", Offset = "0xFD7974")]
	private bool <IsStop>k__BackingField;

	[Token(Token = "0x170000AC")]
	public FSMState CurrentState
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x15E92EC", Offset = "0x15E92EC", VA = "0x15E92EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD2D4", Offset = "0xFDD2D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x15E92F4", Offset = "0x15E92F4", VA = "0x15E92F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD2E4", Offset = "0xFDD2E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public bool NextFrameChg
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x15E92FC", Offset = "0x15E92FC", VA = "0x15E92FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD2F4", Offset = "0xFDD2F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x15E9304", Offset = "0x15E9304", VA = "0x15E9304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD304", Offset = "0xFDD304")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public object UserData
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x15E9310", Offset = "0x15E9310", VA = "0x15E9310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD314", Offset = "0xFDD314")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x15E9318", Offset = "0x15E9318", VA = "0x15E9318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD324", Offset = "0xFDD324")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public bool IsStop
	{
		[Token(Token = "0x6000884")]
		[Address(RVA = "0x15E9320", Offset = "0x15E9320", VA = "0x15E9320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD334", Offset = "0xFDD334")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x15E9328", Offset = "0x15E9328", VA = "0x15E9328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD344", Offset = "0xFDD344")]
		private set
		{
		}
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x15E9334", Offset = "0x15E9334", VA = "0x15E9334")]
	public FSMState GetState(int state_id)
	{
		return null;
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x15E93C8", Offset = "0x15E93C8", VA = "0x15E93C8")]
	public bool AddState(FSMState handle_state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x15E9490", Offset = "0x15E9490", VA = "0x15E9490")]
	public void RemoveState(int state_id)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x15E9590", Offset = "0x15E9590", VA = "0x15E9590")]
	public void Start()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x15E95D8", Offset = "0x15E95D8", VA = "0x15E95D8")]
	public void Stop()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x15E9620", Offset = "0x15E9620", VA = "0x15E9620")]
	public void Reset()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x15E9678", Offset = "0x15E9678", VA = "0x15E9678")]
	public void ChangeState(int state_id, object userData, bool force)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x15E97A0", Offset = "0x15E97A0", VA = "0x15E97A0")]
	public void Update(float deltaTime)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x15E9870", Offset = "0x15E9870", VA = "0x15E9870")]
	public void FixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x15E9888", Offset = "0x15E9888", VA = "0x15E9888")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x15E98A0", Offset = "0x15E98A0", VA = "0x15E98A0")]
	public FSMSystem()
	{
	}
}
[Token(Token = "0x2000163")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2310", Offset = "0xFD2310")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2310", Offset = "0xFD2310")]
public class BossBomb : ActionTask<Transform>
{
	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletModelID;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Transform> target;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool rightFire;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x163EC7C", Offset = "0x163EC7C", VA = "0x163EC7C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x163EE88", Offset = "0x163EE88", VA = "0x163EE88")]
	public BossBomb()
	{
	}
}
[Token(Token = "0x2000164")]
public class BossBulletC4 : MonsterBullet
{
	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5BE4", Offset = "0xFD5BE4")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimatorStateInfo stateinfo;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BossBulletC4 <>4__this;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Func<Animator, float> <>9__1;

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x16401FC", Offset = "0x16401FC", VA = "0x16401FC")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x164048C", Offset = "0x164048C", VA = "0x164048C")]
		internal void <OnMotionEnd>b__0(long l)
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x164068C", Offset = "0x164068C", VA = "0x164068C")]
		internal float <OnMotionEnd>b__1(Animator animator)
		{
			return default(float);
		}
	}

	[Serializable]
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5BF4", Offset = "0xFD5BF4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, bool> <>9__19_2;

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x1640474", Offset = "0x1640474", VA = "0x1640474")]
		public <>c()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x164047C", Offset = "0x164047C", VA = "0x164047C")]
		internal bool <OnMotionEnd>b__19_2(float f)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject boomEffect;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float highFactor;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string aniName;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject warnPrefab;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent Grenades_Boss_Drop;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GoSpline path;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float moveTime;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 mTargetPos;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Animator ani;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float percent;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private IDisposable updateDisposable;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject warnObject;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private WwiseDefine c4BlendAudioObj;

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x163F98C", Offset = "0x163F98C", VA = "0x163F98C", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x163FA0C", Offset = "0x163FA0C", VA = "0x163FA0C", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x163FADC", Offset = "0x163FADC", VA = "0x163FADC")]
	protected GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x163FD64", Offset = "0x163FD64", VA = "0x163FD64", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x163FD68", Offset = "0x163FD68", VA = "0x163FD68")]
	protected void DoUpdate()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x163FE38", Offset = "0x163FE38", VA = "0x163FE38")]
	protected void OnMotionEnd()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1640204", Offset = "0x1640204", VA = "0x1640204")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x1640254", Offset = "0x1640254", VA = "0x1640254")]
	protected void ApplyBoomEffect(Vector3 hitPos)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1640324", Offset = "0x1640324", VA = "0x1640324")]
	public BossBulletC4()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x1640334", Offset = "0x1640334", VA = "0x1640334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD354", Offset = "0xFDD354")]
	private void <ResetPosition>b__15_0(Unit unit)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x1640338", Offset = "0x1640338", VA = "0x1640338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD364", Offset = "0xFDD364")]
	private void <OnMotionEnd>b__19_3(float f)
	{
	}
}
[Token(Token = "0x2000165")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2374", Offset = "0xFD2374")]
public class BossGatlinBlendRTPC : ActionTask
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7984", Offset = "0xFD7984")]
	public BBParameter<bool> startShot;

	[Token(Token = "0x170000B0")]
	protected override string info
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0x164173C", Offset = "0x164173C", VA = "0x164173C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1641790", Offset = "0x1641790", VA = "0x1641790", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1641838", Offset = "0x1641838", VA = "0x1641838")]
	public BossGatlinBlendRTPC()
	{
	}
}
[Token(Token = "0x2000166")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD23AC", Offset = "0xFD23AC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD23AC", Offset = "0xFD23AC")]
public class BossInit : ActionTask<BossMono>
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7994", Offset = "0xFD7994")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> ownerObj;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<BossState> bossState;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<float> moveSpeed;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[BlackboardOnly]
	public BBParameter<float> strafeMoveSpeed;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[BlackboardOnly]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[BlackboardOnly]
	public BBParameter<int> c4Count;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> patrolPoints;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[BlackboardOnly]
	public BBParameter<List<Transform>> bombPoints;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[BlackboardOnly]
	public BBParameter<List<Transform>> strafePoints;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[BlackboardOnly]
	public BBParameter<Transform> inCombatPoint;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1641840", Offset = "0x1641840", VA = "0x1641840", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1641954", Offset = "0x1641954", VA = "0x1641954")]
	private void InitFromBossSetting()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1641C20", Offset = "0x1641C20", VA = "0x1641C20")]
	private void InitFromMainScene()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x16423CC", Offset = "0x16423CC", VA = "0x16423CC")]
	public BossInit()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2410", Offset = "0xFD2410")]
public class BossLookAt : ActionTask
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7A6C", Offset = "0xFD7A6C")]
	public BBParameter<Transform> looker;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<GameObject> lookTarget;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool repeat;

	[Token(Token = "0x170000B1")]
	protected override string info
	{
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x164241C", Offset = "0x164241C", VA = "0x164241C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1642470", Offset = "0x1642470", VA = "0x1642470", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1642578", Offset = "0x1642578", VA = "0x1642578", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x1642474", Offset = "0x1642474", VA = "0x1642474")]
	private void DoLook()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x164257C", Offset = "0x164257C", VA = "0x164257C")]
	public BossLookAt()
	{
	}
}
[Token(Token = "0x2000168")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2448", Offset = "0xFD2448")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2448", Offset = "0xFD2448")]
public class BossMove : ActionTask<Transform>
{
	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> destinationPoint;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> moveSpeed;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float centorOffset;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve curve;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Animator animator;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 targetPoint;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float moveTime;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 mStart;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 mEnd;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 centor;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 worldDir;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 inertialDir;

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1645058", Offset = "0x1645058", VA = "0x1645058", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x16452A0", Offset = "0x16452A0", VA = "0x16452A0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x164531C", Offset = "0x164531C", VA = "0x164531C")]
	private void SetMoveParam()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x16454E4", Offset = "0x16454E4", VA = "0x16454E4", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x16457C0", Offset = "0x16457C0", VA = "0x16457C0")]
	public BossMove()
	{
	}
}
[Token(Token = "0x2000169")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD24AC", Offset = "0xFD24AC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD24AC", Offset = "0xFD24AC")]
public class BossResetByStage : ActionTask<Transform>
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<BossState> bossState;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<int> c4Count;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x1645BDC", Offset = "0x1645BDC", VA = "0x1645BDC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1645CB4", Offset = "0x1645CB4", VA = "0x1645CB4")]
	public BossResetByStage()
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2510", Offset = "0xFD2510")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2510", Offset = "0xFD2510")]
public class FindNearPoint : ActionTask<Transform>
{
	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<Transform>> sourceTraList;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> destinationPoint;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float ignoreDistance;

	[Token(Token = "0x170000B2")]
	protected override string info
	{
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x15EAE34", Offset = "0x15EAE34", VA = "0x15EAE34", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x15EAE88", Offset = "0x15EAE88", VA = "0x15EAE88", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x15EB0F4", Offset = "0x15EB0F4", VA = "0x15EB0F4")]
	public FindNearPoint()
	{
	}
}
[Token(Token = "0x200016B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2574", Offset = "0xFD2574")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2574", Offset = "0xFD2574")]
public class FindNearbyArea : ActionTask<BossMono>
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<Transform>> sourceTraList;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> destinationPoint;

	[Token(Token = "0x170000B3")]
	protected override string info
	{
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x15EB14C", Offset = "0x15EB14C", VA = "0x15EB14C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x15EB1A0", Offset = "0x15EB1A0", VA = "0x15EB1A0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x15EB220", Offset = "0x15EB220", VA = "0x15EB220")]
	public FindNearbyArea()
	{
	}
}
[Token(Token = "0x200016C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD25D8", Offset = "0xFD25D8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD25D8", Offset = "0xFD25D8")]
public class GetElementInList<T> : ActionTask
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7A9C", Offset = "0xFD7A9C")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<T> saveAs;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isRandom;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool delElement;

	[Token(Token = "0x170000B4")]
	protected override string info
	{
		[Token(Token = "0x60008B7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008B8")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008B9")]
	public GetElementInList()
	{
	}
}
[Token(Token = "0x200016D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD263C", Offset = "0xFD263C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD263C", Offset = "0xFD263C")]
public class GetElementsInList<T> : ActionTask
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7AAC", Offset = "0xFD7AAC")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<List<T>> saveAs;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> getCount;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isRandom;

	[Token(Token = "0x170000B5")]
	protected override string info
	{
		[Token(Token = "0x60008BA")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008BB")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008BC")]
	protected void GetRangeElements(int getCount, List<T> sourceList)
	{
	}

	[Token(Token = "0x60008BD")]
	public GetElementsInList()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD26A0", Offset = "0xFD26A0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD26A0", Offset = "0xFD26A0")]
public class GetElementInListByIndex<T> : ActionTask
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7ABC", Offset = "0xFD7ABC")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> index;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<T> saveAs;

	[Token(Token = "0x170000B6")]
	protected override string info
	{
		[Token(Token = "0x60008BE")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008BF")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008C0")]
	public GetElementInListByIndex()
	{
	}
}
[Token(Token = "0x200016F")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2704", Offset = "0xFD2704")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2704", Offset = "0xFD2704")]
public class GetElementsIndexList<T> : ActionTask
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7ACC", Offset = "0xFD7ACC")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<List<T>> saveAs;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> beginIndex;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> getCount;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> resultCount;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<bool> isReverse;

	[Token(Token = "0x170000B7")]
	protected override string info
	{
		[Token(Token = "0x60008C1")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008C2")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008C3")]
	public GetElementsIndexList()
	{
	}
}
[Token(Token = "0x2000170")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2768", Offset = "0xFD2768")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2768", Offset = "0xFD2768")]
public class GetElementsInListOrderly<T> : ActionTask
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7ADC", Offset = "0xFD7ADC")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<List<T>> saveAs;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> getCount;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isRandom;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isOrderly;

	[Token(Token = "0x170000B8")]
	protected override string info
	{
		[Token(Token = "0x60008C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008C5")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008C6")]
	protected void GetRangeElements(int getCount, List<T> sourceList)
	{
	}

	[Token(Token = "0x60008C7")]
	protected void GetRangeElementsOrder(int getCount, List<T> sourceList)
	{
	}

	[Token(Token = "0x60008C8")]
	public GetElementsInListOrderly()
	{
	}
}
[Token(Token = "0x2000171")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD27CC", Offset = "0xFD27CC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD27CC", Offset = "0xFD27CC")]
public class GetOddNumberElementsInList<T> : ActionTask
{
	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7AEC", Offset = "0xFD7AEC")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<List<T>> saveAs;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<bool> isOdd;

	[Token(Token = "0x170000B9")]
	protected override string info
	{
		[Token(Token = "0x60008C9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008CA")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008CB")]
	public GetOddNumberElementsInList()
	{
	}
}
[Token(Token = "0x2000172")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2830", Offset = "0xFD2830")]
public class SetBossAgentAngleSpeed : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD7AFC", Offset = "0xFD7AFC")]
	public BBParameter<float> angleSpeed;

	[Token(Token = "0x170000BA")]
	protected override string info
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x140F058", Offset = "0x140F058", VA = "0x140F058", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x140F0AC", Offset = "0x140F0AC", VA = "0x140F0AC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x140F140", Offset = "0x140F140", VA = "0x140F140")]
	public SetBossAgentAngleSpeed()
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2868", Offset = "0xFD2868")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2868", Offset = "0xFD2868")]
public class SetBossStrafeMoveParame : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool move;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Animator animator;

	[Token(Token = "0x170000BB")]
	protected override string info
	{
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x140FB68", Offset = "0x140FB68", VA = "0x140FB68", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x140FBCC", Offset = "0x140FBCC", VA = "0x140FBCC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x140FC5C", Offset = "0x140FC5C", VA = "0x140FC5C")]
	private void SetStrafeMoveParame()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x140FD24", Offset = "0x140FD24", VA = "0x140FD24")]
	public SetBossStrafeMoveParame()
	{
	}
}
[Token(Token = "0x2000174")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD28CC", Offset = "0xFD28CC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD28CC", Offset = "0xFD28CC")]
public class SetBossStrafeMoveAction : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float keepDistance;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Animator animator;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 worldDir;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 inertialDir;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3[] pathCorners;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int index;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 stageTarget;

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x140F190", Offset = "0x140F190", VA = "0x140F190", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x140F590", Offset = "0x140F590", VA = "0x140F590")]
	private void SetMove()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x140F8C8", Offset = "0x140F8C8", VA = "0x140F8C8", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x140F644", Offset = "0x140F644", VA = "0x140F644")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x140FB0C", Offset = "0x140FB0C", VA = "0x140FB0C")]
	public SetBossStrafeMoveAction()
	{
	}
}
[Token(Token = "0x2000175")]
public class BossAddFirePoint : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C04", Offset = "0xFD5C04")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, bool> <>9__2_0;

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x163D630", Offset = "0x163D630", VA = "0x163D630")]
		public <>c()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x163D638", Offset = "0x163D638", VA = "0x163D638")]
		internal bool <Awake>b__2_0(GameObject property)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject relationalUnit;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> beImpactedUInit;

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x163D2BC", Offset = "0x163D2BC", VA = "0x163D2BC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x163D418", Offset = "0x163D418", VA = "0x163D418")]
	public BossAddFirePoint()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x163D420", Offset = "0x163D420", VA = "0x163D420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD374", Offset = "0xFDD374")]
	private void <Awake>b__2_1(bool b)
	{
	}
}
[Token(Token = "0x2000176")]
public class BossDie : DeathAnimation
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BossMono bossMono;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1641554", Offset = "0x1641554", VA = "0x1641554", Slot = "5")]
	public override void TriggerDeathDefine(Action endAction)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x1641734", Offset = "0x1641734", VA = "0x1641734")]
	public BossDie()
	{
	}
}
[Token(Token = "0x2000177")]
public enum BossDone
{
	[Token(Token = "0x400088E")]
	Default,
	[Token(Token = "0x400088F")]
	Born,
	[Token(Token = "0x4000890")]
	Summon,
	[Token(Token = "0x4000891")]
	Strafe,
	[Token(Token = "0x4000892")]
	Bomb
}
[Token(Token = "0x2000178")]
public enum BossToDo
{
	[Token(Token = "0x4000894")]
	Born,
	[Token(Token = "0x4000895")]
	Summon,
	[Token(Token = "0x4000896")]
	Strafe,
	[Token(Token = "0x4000897")]
	Bomb
}
[Token(Token = "0x2000179")]
public enum BossState
{
	[Token(Token = "0x4000899")]
	Stage1,
	[Token(Token = "0x400089A")]
	Stage2
}
[Token(Token = "0x200017A")]
public class BossMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C14", Offset = "0xFD5C14")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__29_2;

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x1644FD0", Offset = "0x1644FD0", VA = "0x1644FD0")]
		public <>c()
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x1644FD8", Offset = "0x1644FD8", VA = "0x1644FD8")]
		internal void <ClientHandleGatlinBlendRTPCNotify>b__29_2()
		{
		}
	}

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform inUnit;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float slopeRotThreshold;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float baseOffset;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BossDone m_BossDone;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BossToDo m_BossToDo;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WUnit unit;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> addFirePointList;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MonsterWarning mw;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Blackboard bb;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit hitInfo;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private NavMeshAgent agent;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 lastNormal;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 currentNormal;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int currentArea;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject body;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject leftFoot;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rightFoot;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool startMove;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IObservable<long> AnimatorSetBoolStream;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private WwiseDefine gatlinAudioObj;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SwitchInfoData switchInfoData;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float gatlin_Blend_RTPC;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool toSlopeRot;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Quaternion slopeStartRot;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Quaternion slopeEndRot;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float tSlopeRotBlendTime;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float slopeRotBlendTime;

	[Token(Token = "0x170000BC")]
	public int CurrentArea
	{
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1643E04", Offset = "0x1643E04", VA = "0x1643E04")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1643E0C", Offset = "0x1643E0C", VA = "0x1643E0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x1643E10", Offset = "0x1643E10", VA = "0x1643E10")]
	public void Init()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x16420F4", Offset = "0x16420F4", VA = "0x16420F4")]
	public void BTInit()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x16441F4", Offset = "0x16441F4", VA = "0x16441F4")]
	private void OnAnimatorSetBoolAction(bool state)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x1644200", Offset = "0x1644200", VA = "0x1644200")]
	private void ServerSendGatlinBlendRTPCNotify(bool shot)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1644288", Offset = "0x1644288", VA = "0x1644288")]
	public void ClientHandleGatlinBlendRTPCNotify(bool shot)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x16446D0", Offset = "0x16446D0", VA = "0x16446D0")]
	private bool CheckOnArea()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x1641654", Offset = "0x1641654", VA = "0x1641654")]
	public void OnBossDieAction()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1644A54", Offset = "0x1644A54", VA = "0x1644A54")]
	public BossMono()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1644A70", Offset = "0x1644A70", VA = "0x1644A70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD384", Offset = "0xFDD384")]
	private void <Init>b__17_0(Unit unit1)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1644AEC", Offset = "0x1644AEC", VA = "0x1644AEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD394", Offset = "0xFDD394")]
	private bool <Init>b__17_1(Unit l)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1644AF4", Offset = "0x1644AF4", VA = "0x1644AF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD3A4", Offset = "0xFDD3A4")]
	private void <Init>b__17_2(Unit l)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x1644BC0", Offset = "0x1644BC0", VA = "0x1644BC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD3B4", Offset = "0xFDD3B4")]
	private void <Init>b__17_3(Unit l)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1644C8C", Offset = "0x1644C8C", VA = "0x1644C8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD3C4", Offset = "0xFDD3C4")]
	private void <Init>b__17_4(Unit l)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x1644D58", Offset = "0x1644D58", VA = "0x1644D58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD3D4", Offset = "0xFDD3D4")]
	private bool <ClientHandleGatlinBlendRTPCNotify>b__29_0(long l)
	{
		return default(bool);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x1644D6C", Offset = "0x1644D6C", VA = "0x1644D6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD3E4", Offset = "0xFDD3E4")]
	private void <ClientHandleGatlinBlendRTPCNotify>b__29_1(long l)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1644E14", Offset = "0x1644E14", VA = "0x1644E14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD3F4", Offset = "0xFDD3F4")]
	private void <ClientHandleGatlinBlendRTPCNotify>b__29_3(long l)
	{
	}
}
[Token(Token = "0x200017B")]
public class BossSettingManager : Singleton<BossSettingManager>
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, object> SettingHash;

	[Token(Token = "0x40008B7")]
	private const string MOVE_SPEED = "MOVE_SPEED";

	[Token(Token = "0x40008B8")]
	private const string STRAFE_MOVE_SPEED = "STRAFE_MOVE_SPEED";

	[Token(Token = "0x40008B9")]
	private const string JUMP_SPEED = "JUMP_SPEED";

	[Token(Token = "0x40008BA")]
	private const string ANGULAR_SPEED = "ANGULAR_SPEED";

	[Token(Token = "0x40008BB")]
	private const string INTERRUPTDATA_HP_ONE = "INTERRUPTDATA_HP_ONE";

	[Token(Token = "0x40008BC")]
	private const string INTERRUPTDATA_HP_TWO = "INTERRUPTDATA_HP_TWO";

	[Token(Token = "0x40008BD")]
	private const string INTERRUPTDATA_HP_THREE = "INTERRUPTDATA_HP_THREE";

	[Token(Token = "0x40008BE")]
	private const string C4COUNT = "C4COUNT";

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x1645D04", Offset = "0x1645D04", VA = "0x1645D04")]
	public void InitTableSetting()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x1645FE0", Offset = "0x1645FE0", VA = "0x1645FE0")]
	public object GetSettingValue(string key)
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x16422DC", Offset = "0x16422DC", VA = "0x16422DC")]
	public object GetBossMoveSpeed()
	{
		return null;
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x164232C", Offset = "0x164232C", VA = "0x164232C")]
	public object GetBossStrafeSpeed()
	{
		return null;
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x1646118", Offset = "0x1646118", VA = "0x1646118")]
	public object GetBossJumpSpeed()
	{
		return null;
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x164237C", Offset = "0x164237C", VA = "0x164237C")]
	public object GetBossAngularSpeed()
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1642238", Offset = "0x1642238", VA = "0x1642238")]
	public int GetBossC4Count(BossState state)
	{
		return default(int);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x16462CC", Offset = "0x16462CC", VA = "0x16462CC")]
	public List<int> GetBossInterruptdataHp()
	{
		return null;
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1646168", Offset = "0x1646168", VA = "0x1646168")]
	private List<int> GetSettingListValue(string strValue)
	{
		return null;
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x16463E0", Offset = "0x16463E0", VA = "0x16463E0")]
	public BossSettingManager()
	{
	}
}
[Token(Token = "0x200017C")]
public enum eDoor_LockSign_Net_Status
{
	[Token(Token = "0x40008C0")]
	None = 0,
	[Token(Token = "0x40008C1")]
	DoorSignActive = 0,
	[Token(Token = "0x40008C2")]
	DoorSignInactive = 1,
	[Token(Token = "0x40008C3")]
	DoorSignProgressActive = 2,
	[Token(Token = "0x40008C4")]
	DoorSignProgressInactive = 3,
	[Token(Token = "0x40008C5")]
	DoorLevelFxActive = 4,
	[Token(Token = "0x40008C6")]
	DoorLevelFxInactive = 5,
	[Token(Token = "0x40008C7")]
	PreDoorSignActive = 200,
	[Token(Token = "0x40008C8")]
	PreDoorSignInactive = 201,
	[Token(Token = "0x40008C9")]
	PreDoorSignProgressActive = 202,
	[Token(Token = "0x40008CA")]
	PreDoorSignProgressInactive = 203,
	[Token(Token = "0x40008CB")]
	GuidDoorSignActive = 100,
	[Token(Token = "0x40008CC")]
	GuidDoorSignInactive = 101,
	[Token(Token = "0x40008CD")]
	GuidSignProgressActive = 102,
	[Token(Token = "0x40008CE")]
	GuidSignProgressInactive = 103,
	[Token(Token = "0x40008CF")]
	CommonTempTipActive = 250,
	[Token(Token = "0x40008D0")]
	CommonTempTipInactive = 251
}
[Token(Token = "0x200017D")]
public class BattleRoomDoor : MonoBehaviour
{
	[Token(Token = "0x20004D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C24", Offset = "0xFD5C24")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BattleRoomDoor <>4__this;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform fxParent;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform liftNumFxParent;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform liftNumFxParent2;

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x1638240", Offset = "0x1638240", VA = "0x1638240")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x1638248", Offset = "0x1638248", VA = "0x1638248")]
		internal void <Init>b__0(Transform trn)
		{
		}
	}

	[Token(Token = "0x20004D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C34", Offset = "0xFD5C34")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BattleRoomDoor <>4__this;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x1638378", Offset = "0x1638378", VA = "0x1638378")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x1638380", Offset = "0x1638380", VA = "0x1638380")]
		internal void <SetChildModelDelayActive>b__0()
		{
		}
	}

	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C44", Offset = "0xFD5C44")]
	private sealed class <WaitToDoorAniPlay>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayTime;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BattleRoomDoor <>4__this;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool open;

		[Token(Token = "0x170003EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025CB")]
			[Address(RVA = "0x16384A4", Offset = "0x16384A4", VA = "0x16384A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x163850C", Offset = "0x163850C", VA = "0x163850C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x16383B0", Offset = "0x16383B0", VA = "0x16383B0")]
		[DebuggerHidden]
		public <WaitToDoorAniPlay>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x16383DC", Offset = "0x16383DC", VA = "0x16383DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x16383E0", Offset = "0x16383E0", VA = "0x16383E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x16384AC", Offset = "0x16384AC", VA = "0x16384AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int doorId;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject openDoorSignPrefab;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject openDoorFxPrefab;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject liftNumFxPrefab;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject timerPrefab;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 timerPos;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 timerRot;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject doorModel;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject doorChildModel;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animation doorAni;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<string> aniClipNameList;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool open;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IEnumerator IEDoorPlay;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine timeDelayActive;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject openDoorSign;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private BattleRoomDoorLockSign doorLockSign;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject openDoorFx;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform doorSignParent;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject timerDoor;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject liftLevelFxObj;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private BattleRoomDoorLiftLevel liftLevelFx;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject liftLevelFxObj2;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private BattleRoomDoorLiftLevel liftLevelFx2;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent OpenDoorAudio;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public AudioEvent CloseDoorAudio;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WwiseDefine OpenDoorObj;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine CloseDoorObj;

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1616A10", Offset = "0x1616A10", VA = "0x1616A10")]
	public void Init(int id, GameObject doorModel)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1617B54", Offset = "0x1617B54", VA = "0x1617B54")]
	public void DoReset()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1617D4C", Offset = "0x1617D4C", VA = "0x1617D4C")]
	public void LoadDoor()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1617B90", Offset = "0x1617B90", VA = "0x1617B90")]
	public void CancelDoor()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x1617D88", Offset = "0x1617D88", VA = "0x1617D88")]
	public void SetModelActive(bool isActive)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x1617E94", Offset = "0x1617E94", VA = "0x1617E94")]
	public void SetChildModelActive(bool isActive)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x1617F54", Offset = "0x1617F54", VA = "0x1617F54")]
	public void SetChildModelDelayActive(bool isActive, float time = 0.5f)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x1617ECC", Offset = "0x1617ECC", VA = "0x1617ECC")]
	private void StopDelayActive()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x1617BEC", Offset = "0x1617BEC", VA = "0x1617BEC")]
	public void DoorAniPlay(bool open)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x1618350", Offset = "0x1618350", VA = "0x1618350")]
	public void DoorAniDelayPlay(bool open, float delayAniTime)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x1618390", Offset = "0x1618390", VA = "0x1618390")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDD404", Offset = "0xFDD404")]
	private IEnumerator WaitToDoorAniPlay(bool open, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1618168", Offset = "0x1618168", VA = "0x1618168")]
	private void SetSound(bool Open, bool isSet)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1617E60", Offset = "0x1617E60", VA = "0x1617E60")]
	private void StopSound()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1618078", Offset = "0x1618078", VA = "0x1618078")]
	private void DoorAniPlay(string aniName)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1618430", Offset = "0x1618430", VA = "0x1618430")]
	public void OnTeleportToPreparedRoom()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x161847C", Offset = "0x161847C", VA = "0x161847C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1618610", Offset = "0x1618610", VA = "0x1618610")]
	public bool CheckDoorOpenReady()
	{
		return default(bool);
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x1618618", Offset = "0x1618618", VA = "0x1618618")]
	public void SetJustVisible(bool isActive)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x16186C0", Offset = "0x16186C0", VA = "0x16186C0")]
	public bool CheckDoorLockSignReady()
	{
		return default(bool);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x1617DA8", Offset = "0x1617DA8", VA = "0x1617DA8")]
	public void SetDoorLockSignActive(bool isActive)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x1618758", Offset = "0x1618758", VA = "0x1618758")]
	public void SetDoorLockSignProgress(bool active)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x1618848", Offset = "0x1618848", VA = "0x1618848", Slot = "4")]
	public virtual bool CheckSignCon()
	{
		return default(bool);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x1618900", Offset = "0x1618900", VA = "0x1618900", Slot = "5")]
	public virtual void DoBeginSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x1618A30", Offset = "0x1618A30", VA = "0x1618A30", Slot = "6")]
	public virtual void DoBreakSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x16184A0", Offset = "0x16184A0", VA = "0x16184A0")]
	private void DoUpdateLockSign()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1618994", Offset = "0x1618994", VA = "0x1618994")]
	public int GetFirstSignTriggerOwnerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1617A24", Offset = "0x1617A24", VA = "0x1617A24")]
	private void UpdateFollowSwitch()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1618AA8", Offset = "0x1618AA8", VA = "0x1618AA8")]
	public void SetLiftLevelActive(bool isActive, bool isJustLogic = false)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x1618C00", Offset = "0x1618C00", VA = "0x1618C00")]
	public bool HasLiftLevelFx()
	{
		return default(bool);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1618C70", Offset = "0x1618C70", VA = "0x1618C70")]
	public bool CheckLiftLevelReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x1618D08", Offset = "0x1618D08", VA = "0x1618D08")]
	public BattleRoomDoor()
	{
	}
}
[Token(Token = "0x200017E")]
public class BattleRoomDoorLiftLevel : MonoBehaviour
{
	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int roomId;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LiftFx;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator LiftFxAni;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BattleRoomDoorLiftLevelEvent LiftLvelFxEndEvent;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent runningAudioEvent;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent reachAudioEvent;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float ProgressTime;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool mLiftLevelFx;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool mLiftLevelFxFinish;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WwiseDefine audioRunningObj;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WwiseDefine audioReachObj;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action FinishCallBack;

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x1638514", Offset = "0x1638514", VA = "0x1638514")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x16385DC", Offset = "0x16385DC", VA = "0x16385DC")]
	public void Init(int id)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x1638600", Offset = "0x1638600", VA = "0x1638600")]
	public void SetShow(bool isActive, [Optional] Action finish)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x16385F0", Offset = "0x16385F0", VA = "0x16385F0")]
	public void DoReset()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x1638734", Offset = "0x1638734", VA = "0x1638734")]
	private void SetLiftLevelFx(bool isActive, [Optional] Action finish)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x1638850", Offset = "0x1638850", VA = "0x1638850")]
	public bool IsLiftLevelFxOk()
	{
		return default(bool);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x1638870", Offset = "0x1638870", VA = "0x1638870")]
	private void LiftLevelFxActionEnd()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x1638778", Offset = "0x1638778", VA = "0x1638778")]
	private void StopRunningSound()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x1638954", Offset = "0x1638954", VA = "0x1638954")]
	private void StopReachSound()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1638A2C", Offset = "0x1638A2C", VA = "0x1638A2C")]
	public BattleRoomDoorLiftLevel()
	{
	}
}
[Token(Token = "0x200017F")]
public class BattleRoomDoorLiftLevelEvent : MonoBehaviour
{
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action EndEventCallBack;

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x1638A44", Offset = "0x1638A44", VA = "0x1638A44")]
	private void EndEvent()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1638A58", Offset = "0x1638A58", VA = "0x1638A58")]
	public BattleRoomDoorLiftLevelEvent()
	{
	}
}
[Token(Token = "0x2000180")]
public class BattleRoomDoorLockSign : MonoBehaviour
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int roomId;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ProgressUIRoot;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ProgressImg;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform DirRoot;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent ProgressActiveAudio;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float ProgressTime;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool mIsProgressing;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mProgressRunningTime;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mIsProgressFinish;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> entryList;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action FinishCallBack;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<int> BeginSignCallBack;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<int> BreakSignCallBack;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Func<bool> OnCheckSignCon;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WwiseDefine AudioProgressObj;

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x1638A60", Offset = "0x1638A60", VA = "0x1638A60")]
	public void Init(int id)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1638ACC", Offset = "0x1638ACC", VA = "0x1638ACC")]
	public void SetShow(bool isActive)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1638A68", Offset = "0x1638A68", VA = "0x1638A68")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1638B00", Offset = "0x1638B00", VA = "0x1638B00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1638BEC", Offset = "0x1638BEC", VA = "0x1638BEC")]
	public void SetProgressUI(bool isActive, [Optional] Action finish)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1638B10", Offset = "0x1638B10", VA = "0x1638B10")]
	private void UpdateProgress()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1638EEC", Offset = "0x1638EEC", VA = "0x1638EEC")]
	public void SetLook(Transform point)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1638FD8", Offset = "0x1638FD8", VA = "0x1638FD8")]
	public bool IsDoorLockSignOk()
	{
		return default(bool);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1638EC8", Offset = "0x1638EC8", VA = "0x1638EC8")]
	private void DoorLockSignActionEnd()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1638FF8", Offset = "0x1638FF8", VA = "0x1638FF8")]
	private void BeginDoorLockSign()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x163906C", Offset = "0x163906C", VA = "0x163906C")]
	private void BreakDoorLockSign()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1638CB8", Offset = "0x1638CB8", VA = "0x1638CB8")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1638DF0", Offset = "0x1638DF0", VA = "0x1638DF0")]
	private void StopSound()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x16390E0", Offset = "0x16390E0", VA = "0x16390E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1639340", Offset = "0x1639340", VA = "0x1639340")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x16393F4", Offset = "0x16393F4", VA = "0x16393F4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1639194", Offset = "0x1639194", VA = "0x1639194")]
	private void TriggerIn(GameObject col)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x16395A4", Offset = "0x16395A4", VA = "0x16395A4")]
	private bool CheckTeleporter()
	{
		return default(bool);
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x16394A8", Offset = "0x16394A8", VA = "0x16394A8")]
	private void TriggerOut(GameObject col)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x16395FC", Offset = "0x16395FC", VA = "0x16395FC")]
	public WUnit GetFirstSignTriggerOwner()
	{
		return null;
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1639718", Offset = "0x1639718", VA = "0x1639718")]
	public BattleRoomDoorLockSign()
	{
	}
}
[Token(Token = "0x2000181")]
public class BirthTeleporter : MonoBehaviour
{
	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int roomId;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsStartNoDisplay;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject DisplayRoot;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x163BC8C", Offset = "0x163BC8C", VA = "0x163BC8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x163BD40", Offset = "0x163BD40", VA = "0x163BD40")]
	public BirthTeleporter()
	{
	}
}
[Token(Token = "0x2000182")]
public enum RoleStandOnType
{
	[Token(Token = "0x400090C")]
	None,
	[Token(Token = "0x400090D")]
	BattleRoom,
	[Token(Token = "0x400090E")]
	PreparedRoom
}
[Token(Token = "0x2000183")]
public class CharacterMono : MonoBehaviour
{
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool areaLimited;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int lastRoomId;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentRoomId;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WUnit owner;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canTeleport;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnRollBack;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action OnTeleporter;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject TeleporterEffect;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioEvent TeleporterEvent;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private RoleStandOnType curStandOnType;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform transfer;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 cameraRigOriginalPos;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hitInfo;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ReactiveProperty<Collider> hitCol;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RaycastHit[] raycastHits;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject TeleporterEffectObj;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int cameraLayer;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine coroutine;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x1443464", Offset = "0x1443464", VA = "0x1443464")]
	public void DoInit()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1443468", Offset = "0x1443468", VA = "0x1443468")]
	public void DoStart()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1443474", Offset = "0x1443474", VA = "0x1443474")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x14436A4", Offset = "0x14436A4", VA = "0x14436A4")]
	public void SetCameraRigOriginal()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x144373C", Offset = "0x144373C", VA = "0x144373C")]
	private void SafeArea()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x1443740", Offset = "0x1443740", VA = "0x1443740")]
	private bool CheckOnArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x1443910", Offset = "0x1443910", VA = "0x1443910")]
	private void ResetLeaveAreaEffect()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x1443A78", Offset = "0x1443A78", VA = "0x1443A78")]
	public void NetTeleport(bool inversion)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x1443B50", Offset = "0x1443B50", VA = "0x1443B50")]
	private void CloseTeleporterEffect()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1443CAC", Offset = "0x1443CAC", VA = "0x1443CAC")]
	private void DoRollBack()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x14447A8", Offset = "0x14447A8", VA = "0x14447A8")]
	private void OnRollBackEnd()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x14440A0", Offset = "0x14440A0", VA = "0x14440A0")]
	public void DoTeleporter()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x14444F8", Offset = "0x14444F8", VA = "0x14444F8")]
	public void SetTransferPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x1444940", Offset = "0x1444940", VA = "0x1444940")]
	public Vector3 GetTransferPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1444770", Offset = "0x1444770", VA = "0x1444770")]
	public static Vector3 TransformPosition(Vector3 inputPos, Transform inverseTra, Transform tra)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x144495C", Offset = "0x144495C", VA = "0x144495C")]
	public CharacterMono()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1444A08", Offset = "0x1444A08", VA = "0x1444A08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD468", Offset = "0xFDD468")]
	private void <Init>b__16_0(Unit unit1)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x1444A40", Offset = "0x1444A40", VA = "0x1444A40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD478", Offset = "0xFDD478")]
	private void <SafeArea>b__18_0(Collider collider1)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1445094", Offset = "0x1445094", VA = "0x1445094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD488", Offset = "0xFDD488")]
	private void <NetTeleport>b__22_0()
	{
	}
}
[Token(Token = "0x2000184")]
public class CheckInRoom : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C54", Offset = "0xFD5C54")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Unit, bool> <>9__5_4;

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x144692C", Offset = "0x144692C", VA = "0x144692C")]
		public <>c()
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x1446934", Offset = "0x1446934", VA = "0x1446934")]
		internal bool <OnPreEnter>b__5_4(Unit unit)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int roomId;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CharacterMono> recordCharacterList;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool passed;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x1445DF0", Offset = "0x1445DF0", VA = "0x1445DF0")]
	public void Init(int _roomId, FSMBattleRoom room)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1445EC4", Offset = "0x1445EC4", VA = "0x1445EC4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x1445F20", Offset = "0x1445F20", VA = "0x1445F20")]
	private void OnPreEnter()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x1446244", Offset = "0x1446244", VA = "0x1446244")]
	private void ServerCheckPlayerTrigger(Collider collider)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x14464CC", Offset = "0x14464CC", VA = "0x14464CC")]
	private CharacterMono GetCharMono(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1446624", Offset = "0x1446624", VA = "0x1446624")]
	public CheckInRoom()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x14466A0", Offset = "0x14466A0", VA = "0x14466A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD498", Offset = "0xFDD498")]
	private bool <OnPreEnter>b__5_0(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1446758", Offset = "0x1446758", VA = "0x1446758")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD4A8", Offset = "0xFDD4A8")]
	private void <OnPreEnter>b__5_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x144675C", Offset = "0x144675C", VA = "0x144675C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD4B8", Offset = "0xFDD4B8")]
	private bool <OnPreEnter>b__5_2(Unit _)
	{
		return default(bool);
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x144676C", Offset = "0x144676C", VA = "0x144676C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD4C8", Offset = "0xFDD4C8")]
	private bool <OnPreEnter>b__5_3(Unit _)
	{
		return default(bool);
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1446840", Offset = "0x1446840", VA = "0x1446840")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD4D8", Offset = "0xFDD4D8")]
	private void <OnPreEnter>b__5_5(Unit l)
	{
	}
}
[Token(Token = "0x2000185")]
public class DoorSignTrigger : MonoBehaviour
{
	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit mOwner;

	[Token(Token = "0x170000BD")]
	public WUnit Owner
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x13DD704", Offset = "0x13DD704", VA = "0x13DD704")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x13DD70C", Offset = "0x13DD70C", VA = "0x13DD70C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x13DD838", Offset = "0x13DD838", VA = "0x13DD838")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x13DD840", Offset = "0x13DD840", VA = "0x13DD840")]
	public void UnInit()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x13DD844", Offset = "0x13DD844", VA = "0x13DD844")]
	public DoorSignTrigger()
	{
	}
}
[Token(Token = "0x2000186")]
public enum RoleRoomStatus
{
	[Token(Token = "0x4000926")]
	Prepare,
	[Token(Token = "0x4000927")]
	Enter,
	[Token(Token = "0x4000928")]
	Clean,
	[Token(Token = "0x4000929")]
	Pass,
	[Token(Token = "0x400092A")]
	Exit
}
[Token(Token = "0x2000187")]
public enum RoomStatus
{
	[Token(Token = "0x400092C")]
	Active,
	[Token(Token = "0x400092D")]
	Deactivate
}
[Token(Token = "0x2000188")]
public class BattleRoomConstantAtt
{
	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int RoomID;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RoomModel;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BattleRoomDoor FrontDoor;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BattleRoomDoor BackDoor;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Teleporter RoomTeleporter;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BirthTeleporter RoomBirthTeleporter;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CheckInRoom CheckInRoom;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Floor;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 OriginalFloorPos;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PathManager FrameAreaHolder;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FSMBattleRoomAction RoomAction;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform MoveArea;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x161662C", Offset = "0x161662C", VA = "0x161662C")]
	public void Init(int id, FSMBattleRoom room, GameObject model, Transform parent, BattleRoomDoor fd, BattleRoomDoor bd)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x16169FC", Offset = "0x16169FC", VA = "0x16169FC")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x1616A00", Offset = "0x1616A00", VA = "0x1616A00")]
	public BattleRoomConstantAtt()
	{
	}
}
[Token(Token = "0x2000189")]
public class FSMBattleRoom : MonoBehaviour
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DelayPass;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hasSameDoor;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayTime;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected BattleRoomConstantAtt constantAtt;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected LiftBattleRoomMontion liftMontion;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> limitedAreaPointList;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool doorLockSignStatus;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool doorLiftLevelFxStatus;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private RoleRoomStatus roleRoomStatus;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RoomStatus roomStatus;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine delayCoroutine;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action OnPreEnter;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnLoad;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnKillCurrentEnemys;

	[Token(Token = "0x170000BE")]
	public int RoomID
	{
		[Token(Token = "0x6000961")]
		[Address(RVA = "0x15E16E4", Offset = "0x15E16E4", VA = "0x15E16E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BF")]
	public BattleRoomDoor FrontDoor
	{
		[Token(Token = "0x6000962")]
		[Address(RVA = "0x15E1700", Offset = "0x15E1700", VA = "0x15E1700")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C0")]
	public BattleRoomDoor BackDoor
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x15E171C", Offset = "0x15E171C", VA = "0x15E171C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C1")]
	public Teleporter Teleporter
	{
		[Token(Token = "0x6000964")]
		[Address(RVA = "0x15E1738", Offset = "0x15E1738", VA = "0x15E1738")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C2")]
	public Transform MoveArea
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0x15E1754", Offset = "0x15E1754", VA = "0x15E1754")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C3")]
	public BirthTeleporter BirthTeleporter
	{
		[Token(Token = "0x6000966")]
		[Address(RVA = "0x15E1770", Offset = "0x15E1770", VA = "0x15E1770")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public BattleRoomConstantAtt ConstantAtt
	{
		[Token(Token = "0x6000967")]
		[Address(RVA = "0x15E178C", Offset = "0x15E178C", VA = "0x15E178C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C5")]
	public RoleRoomStatus RoleRoomStatus
	{
		[Token(Token = "0x6000968")]
		[Address(RVA = "0x15E1794", Offset = "0x15E1794", VA = "0x15E1794")]
		get
		{
			return default(RoleRoomStatus);
		}
		[Token(Token = "0x6000969")]
		[Address(RVA = "0x15E179C", Offset = "0x15E179C", VA = "0x15E179C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public RoomStatus RoomStatus
	{
		[Token(Token = "0x600096A")]
		[Address(RVA = "0x15E17A4", Offset = "0x15E17A4", VA = "0x15E17A4")]
		get
		{
			return default(RoomStatus);
		}
		[Token(Token = "0x600096B")]
		[Address(RVA = "0x15E17AC", Offset = "0x15E17AC", VA = "0x15E17AC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<Action> OnKillCurrentEnemysPreAction
	{
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x15E17B4", Offset = "0x15E17B4", VA = "0x15E17B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD4E8", Offset = "0xFDD4E8")]
		add
		{
		}
		[Token(Token = "0x600096D")]
		[Address(RVA = "0x15E1858", Offset = "0x15E1858", VA = "0x15E1858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD4F8", Offset = "0xFDD4F8")]
		remove
		{
		}
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x15E18FC", Offset = "0x15E18FC", VA = "0x15E18FC", Slot = "4")]
	public virtual void DoInit(int roomId, GameObject roomModel, BattleRoomDoor fd, BattleRoomDoor bd, int lastRoomId = -1, int nextRoomId = -1)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x15E1A5C", Offset = "0x15E1A5C", VA = "0x15E1A5C", Slot = "5")]
	public virtual void DoReset()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x15E1B74", Offset = "0x15E1B74", VA = "0x15E1B74", Slot = "6")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x15E1E64", Offset = "0x15E1E64", VA = "0x15E1E64")]
	public void PrepareRoom()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x15E1F98", Offset = "0x15E1F98", VA = "0x15E1F98")]
	public void EnterRoom([Optional] Action callBack)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x15E204C", Offset = "0x15E204C", VA = "0x15E204C")]
	public void CleanRoom()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x15E212C", Offset = "0x15E212C", VA = "0x15E212C")]
	public void PassRoom()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x15E2210", Offset = "0x15E2210", VA = "0x15E2210")]
	public void ExitRoom()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x15E1F00", Offset = "0x15E1F00", VA = "0x15E1F00")]
	private void ActiveRoom()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x15E22B4", Offset = "0x15E22B4", VA = "0x15E22B4")]
	private void DeactivateRoom()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x15E1F2C", Offset = "0x15E1F2C", VA = "0x15E1F2C")]
	private void SetActiveCheckInRoom(bool isActive)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x15E1F70", Offset = "0x15E1F70", VA = "0x15E1F70")]
	private void ResetCheckInRoom()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x15E2348", Offset = "0x15E2348", VA = "0x15E2348")]
	public void SetPreparedRoomTeleporter()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x15E27B0", Offset = "0x15E27B0", VA = "0x15E27B0")]
	private bool GetLimitedAreaPoints()
	{
		return default(bool);
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x15E1A28", Offset = "0x15E1A28", VA = "0x15E1A28")]
	private void ShowSelf(bool state)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x15E1C18", Offset = "0x15E1C18", VA = "0x15E1C18")]
	private bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x15E291C", Offset = "0x15E291C", VA = "0x15E291C")]
	public void HideRoom()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x15E29DC", Offset = "0x15E29DC", VA = "0x15E29DC")]
	private void ShowRoom()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x15E2B28", Offset = "0x15E2B28", VA = "0x15E2B28")]
	public bool CheckRoomReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x15E2BA0", Offset = "0x15E2BA0", VA = "0x15E2BA0")]
	public void SetJustVisible(BattleRoomDoor door, bool isActive)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x15E2C44", Offset = "0x15E2C44", VA = "0x15E2C44", Slot = "7")]
	public virtual void PreRoomOpen()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x15E2C48", Offset = "0x15E2C48", VA = "0x15E2C48")]
	public void SetDoorLockSignActive(BattleRoomDoor door, bool active)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x15E2CFC", Offset = "0x15E2CFC", VA = "0x15E2CFC")]
	public void SetDoorLockSignProgressActive(BattleRoomDoor door, bool active)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x15E2B74", Offset = "0x15E2B74", VA = "0x15E2B74")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x15E1B18", Offset = "0x15E1B18", VA = "0x15E1B18")]
	private void ResetCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x15E2DA0", Offset = "0x15E2DA0", VA = "0x15E2DA0")]
	private void SetDoorLockSignInctive()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x15E1C3C", Offset = "0x15E1C3C", VA = "0x15E1C3C")]
	private void UpdateCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x15E2E10", Offset = "0x15E2E10", VA = "0x15E2E10")]
	public void SyncDoorLockSignStatus(bool isActive)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x15E2E34", Offset = "0x15E2E34", VA = "0x15E2E34")]
	public void SetLevelFxActive(BattleRoomDoor door, bool active, bool isJustLogic = false)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x15E1B20", Offset = "0x15E1B20", VA = "0x15E1B20")]
	private void ResetCheckLevelFx(bool isFrontLogic = false)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x15E2EE0", Offset = "0x15E2EE0", VA = "0x15E2EE0")]
	public bool CheckGotoLevelFxReady()
	{
		return default(bool);
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x15E1CEC", Offset = "0x15E1CEC", VA = "0x15E1CEC")]
	private void UpdateCheckDoorLevelFx()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x15E2EE4", Offset = "0x15E2EE4", VA = "0x15E2EE4")]
	public void SyncDoorLevelFxStatus(bool isActive)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x15E2F0C", Offset = "0x15E2F0C", VA = "0x15E2F0C", Slot = "8")]
	public virtual void DoPrepareEnter()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x15E2F20", Offset = "0x15E2F20", VA = "0x15E2F20", Slot = "9")]
	public virtual void DoPassAndPrepareLeave()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x15E3060", Offset = "0x15E3060", VA = "0x15E3060", Slot = "10")]
	public virtual void DoSuccessKillCurrentEnemys()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x15E3108", Offset = "0x15E3108", VA = "0x15E3108", Slot = "11")]
	public virtual void SuccessKillCurrentEnemysCallBack()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x15E31AC", Offset = "0x15E31AC", VA = "0x15E31AC", Slot = "12")]
	public virtual void DoLoad()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x15E31B0", Offset = "0x15E31B0", VA = "0x15E31B0")]
	public void SetTeleporter()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x15E31B4", Offset = "0x15E31B4", VA = "0x15E31B4", Slot = "13")]
	public virtual void DoUnLoad()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x15E31B8", Offset = "0x15E31B8", VA = "0x15E31B8", Slot = "14")]
	public virtual void SetDoorLockSignProgressStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x15E3270", Offset = "0x15E3270", VA = "0x15E3270", Slot = "15")]
	public virtual void DoPlayerTeleportBack()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x15E33D4", Offset = "0x15E33D4", VA = "0x15E33D4")]
	public void OnLeaveSafeArea()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x15E3698", Offset = "0x15E3698", VA = "0x15E3698")]
	public void OnReturnSafeArea()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x15E3934", Offset = "0x15E3934", VA = "0x15E3934")]
	public FSMBattleRoom()
	{
	}
}
[Token(Token = "0x200018A")]
public class FSMBattleRoomAction : MonoBehaviour
{
	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation ani;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int openDoorRoomId;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int closeDoorRoomId;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> aniClipNameList;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsBossDoor;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float BossDoorDelayTime;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsMoveLiftDoor;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int MoveLiftCloseDoorSpecialRoomId;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine TimeDelayClose;

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x15E39F0", Offset = "0x15E39F0", VA = "0x15E39F0")]
	public void Init()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x15E339C", Offset = "0x15E339C", VA = "0x15E339C")]
	public void DoReset()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x15E3FB4", Offset = "0x15E3FB4", VA = "0x15E3FB4")]
	private void CloseDoor(int RoomId)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x15E3FCC", Offset = "0x15E3FCC", VA = "0x15E3FCC")]
	private void MoveLiftSpecialCloseDoor(int RoomId)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x15E3FE4", Offset = "0x15E3FE4", VA = "0x15E3FE4")]
	private void OpenBossDoor(int RoomId)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x15E40C0", Offset = "0x15E40C0", VA = "0x15E40C0")]
	private void OpenDoor(int RoomId)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x15E3E8C", Offset = "0x15E3E8C", VA = "0x15E3E8C")]
	public void DoorAniPlay(bool open)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x15E40D8", Offset = "0x15E40D8", VA = "0x15E40D8")]
	private void DoorAniPlay(string aniName)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x15E41C8", Offset = "0x15E41C8", VA = "0x15E41C8")]
	public FSMBattleRoomAction()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x15E424C", Offset = "0x15E424C", VA = "0x15E424C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD508", Offset = "0xFDD508")]
	private void <OpenBossDoor>b__13_0()
	{
	}
}
[Token(Token = "0x200018B")]
public class SlidingBlock
{
	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7B1C", Offset = "0xFD7B1C")]
	private FSMBattleRoom <BackRoom>k__BackingField;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7B2C", Offset = "0xFD7B2C")]
	private FSMBattleRoom <FrontRoom>k__BackingField;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7B3C", Offset = "0xFD7B3C")]
	private FSMBattleRoom <NextRoom>k__BackingField;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7B4C", Offset = "0xFD7B4C")]
	private RoleRoomStatus <BackRoomStatus>k__BackingField;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7B5C", Offset = "0xFD7B5C")]
	private RoleRoomStatus <FrontRoomStatus>k__BackingField;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7B6C", Offset = "0xFD7B6C")]
	private RoleRoomStatus <NextRoomStatus>k__BackingField;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7B7C", Offset = "0xFD7B7C")]
	private int <BackRoomID>k__BackingField;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7B8C", Offset = "0xFD7B8C")]
	private int <FrontRoomID>k__BackingField;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7B9C", Offset = "0xFD7B9C")]
	private int <NextRoomID>k__BackingField;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FSMBattleRoomSystem RoomSystem;

	[Token(Token = "0x170000C7")]
	public FSMBattleRoom BackRoom
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x1416600", Offset = "0x1416600", VA = "0x1416600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD518", Offset = "0xFDD518")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x1416608", Offset = "0x1416608", VA = "0x1416608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD528", Offset = "0xFDD528")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public FSMBattleRoom FrontRoom
	{
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1416610", Offset = "0x1416610", VA = "0x1416610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD538", Offset = "0xFDD538")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1416618", Offset = "0x1416618", VA = "0x1416618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD548", Offset = "0xFDD548")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public FSMBattleRoom NextRoom
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1416620", Offset = "0x1416620", VA = "0x1416620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD558", Offset = "0xFDD558")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x1416628", Offset = "0x1416628", VA = "0x1416628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD568", Offset = "0xFDD568")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public RoleRoomStatus BackRoomStatus
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1416630", Offset = "0x1416630", VA = "0x1416630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD578", Offset = "0xFDD578")]
		get
		{
			return default(RoleRoomStatus);
		}
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1416638", Offset = "0x1416638", VA = "0x1416638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD588", Offset = "0xFDD588")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public RoleRoomStatus FrontRoomStatus
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1416640", Offset = "0x1416640", VA = "0x1416640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD598", Offset = "0xFDD598")]
		get
		{
			return default(RoleRoomStatus);
		}
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1416648", Offset = "0x1416648", VA = "0x1416648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD5A8", Offset = "0xFDD5A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public RoleRoomStatus NextRoomStatus
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1416650", Offset = "0x1416650", VA = "0x1416650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD5B8", Offset = "0xFDD5B8")]
		get
		{
			return default(RoleRoomStatus);
		}
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1416658", Offset = "0x1416658", VA = "0x1416658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD5C8", Offset = "0xFDD5C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public int BackRoomID
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1416660", Offset = "0x1416660", VA = "0x1416660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD5D8", Offset = "0xFDD5D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x1416668", Offset = "0x1416668", VA = "0x1416668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD5E8", Offset = "0xFDD5E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public int FrontRoomID
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x1416670", Offset = "0x1416670", VA = "0x1416670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD5F8", Offset = "0xFDD5F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1416678", Offset = "0x1416678", VA = "0x1416678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD608", Offset = "0xFDD608")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public int NextRoomID
	{
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1416680", Offset = "0x1416680", VA = "0x1416680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD618", Offset = "0xFDD618")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1416688", Offset = "0x1416688", VA = "0x1416688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD628", Offset = "0xFDD628")]
		private set
		{
		}
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1416690", Offset = "0x1416690", VA = "0x1416690")]
	public void Init(FSMBattleRoomSystem system)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1416698", Offset = "0x1416698", VA = "0x1416698")]
	public void Reset(int resetRoomId)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1417514", Offset = "0x1417514", VA = "0x1417514")]
	public void SendSlidingRoomStatus(int bRoomId, RoleRoomStatus bRoomStatus, int fRoomId, RoleRoomStatus fRoomStatus, int nRoomId, RoleRoomStatus nRoomStatus)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x141799C", Offset = "0x141799C", VA = "0x141799C")]
	public void SetRoomEnter(int roomId)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x14179B8", Offset = "0x14179B8", VA = "0x14179B8")]
	public void SetRoomClean()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x14179F8", Offset = "0x14179F8", VA = "0x14179F8")]
	public void SetRoomPass()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1417A10", Offset = "0x1417A10", VA = "0x1417A10")]
	public void GotoBattleRoom()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x1417AD0", Offset = "0x1417AD0", VA = "0x1417AD0")]
	public void GotoPreparedRoom()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x1416974", Offset = "0x1416974", VA = "0x1416974")]
	public void SetBattleRoom(int bRoomId, FSMBattleRoom backRoom, RoleRoomStatus bRoomStatus, int fRoomId, FSMBattleRoom frontRoom, RoleRoomStatus fRoomStatus, int nRoomId, FSMBattleRoom nextRoom, RoleRoomStatus nRoomStatus)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x1417AFC", Offset = "0x1417AFC", VA = "0x1417AFC")]
	public void SetPreparedRoom()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x1417AD4", Offset = "0x1417AD4", VA = "0x1417AD4")]
	private void SetDelayLockStatus(RoleRoomStatus status)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1417B24", Offset = "0x1417B24", VA = "0x1417B24")]
	public SlidingBlock()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x1417B2C", Offset = "0x1417B2C", VA = "0x1417B2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD638", Offset = "0xFDD638")]
	private void <SetBattleRoom>b__45_0()
	{
	}
}
[Token(Token = "0x200018C")]
public class FSMBattleRoomSystem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C64", Offset = "0xFD5C64")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__38_0;

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x15E87E4", Offset = "0x15E87E4", VA = "0x15E87E4")]
		public <>c()
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x15E87EC", Offset = "0x15E87EC", VA = "0x15E87EC")]
		internal void <DoStart>b__38_0(WUnit u)
		{
		}
	}

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform roomsRoot;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform roomModelsRoot;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform doorsRoot;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform doorModelsRoot;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform battleMoveArea;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform bossBattleMoveArea;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int configStartId;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int BossRoomId;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FSMBattleRoomSystem Instance;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<FSMBattleRoom> battleRooms;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<BattleRoomDoor> battleRoomDoors;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool IsDelayLock;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public RoleRoomStatus DelayLockStatus;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterMono controlMono;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RoomType roomType;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SlidingBlock block;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<List<FSMBattleRoom>> OnRoomResetPre;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject TeleporterEffect;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioEvent TeleporterEvent;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject TeleporterEffectObj;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine coroutine;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Func<bool> KillCurrentEnemysCheck;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Func<bool> KillBossCheck;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action OnAllTeleport;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Action<int> OnAllTeleportWithRoomId;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Action OnAllRollBack;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Action<int> OnKillCurrentEnemys;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Action<int> OnPassCurrentRoom;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Action<int> OnAllEnter;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Action<int> OnAllEnterNoDelay;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Action<FSMBattleRoom> OnRoomUnLoadPre;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Action OnCharRollBack;

	[Token(Token = "0x170000D0")]
	public Transform MoveArea
	{
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x15E4254", Offset = "0x15E4254", VA = "0x15E4254")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D1")]
	public int CurrentRoomID
	{
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x15E4284", Offset = "0x15E4284", VA = "0x15E4284")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D2")]
	public FSMBattleRoom CurrentRoom
	{
		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x15E42A0", Offset = "0x15E42A0", VA = "0x15E42A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public int BackRoomID
	{
		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x15E42BC", Offset = "0x15E42BC", VA = "0x15E42BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D4")]
	public FSMBattleRoom BackRoom
	{
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x15E42D8", Offset = "0x15E42D8", VA = "0x15E42D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D5")]
	public int NextRoomID
	{
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x15E42F4", Offset = "0x15E42F4", VA = "0x15E42F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D6")]
	public FSMBattleRoom NextRoom
	{
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x15E4310", Offset = "0x15E4310", VA = "0x15E4310")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D7")]
	public int ProcessRoomID
	{
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x15E432C", Offset = "0x15E432C", VA = "0x15E432C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D8")]
	public RoomType RoomType
	{
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x15E43E0", Offset = "0x15E43E0", VA = "0x15E43E0")]
		get
		{
			return default(RoomType);
		}
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x15E43E8", Offset = "0x15E43E8", VA = "0x15E43E8")]
		private set
		{
		}
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x15E43F0", Offset = "0x15E43F0", VA = "0x15E43F0")]
	public void Awake()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x15E4448", Offset = "0x15E4448", VA = "0x15E4448")]
	public void DoInit()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x15E4C20", Offset = "0x15E4C20", VA = "0x15E4C20")]
	private bool IsGameStatusEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x15E4CCC", Offset = "0x15E4CCC", VA = "0x15E4CCC")]
	public void DoStart()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x15E51B8", Offset = "0x15E51B8", VA = "0x15E51B8")]
	public void DoReset()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x15E5444", Offset = "0x15E5444", VA = "0x15E5444")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x15E4A6C", Offset = "0x15E4A6C", VA = "0x15E4A6C")]
	public void AddState(FSMBattleRoom room)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x15E54EC", Offset = "0x15E54EC", VA = "0x15E54EC")]
	public void SendRoleRoom(int uid, int roomId)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x15E5568", Offset = "0x15E5568", VA = "0x15E5568")]
	public void SendGotoCurrentBattleRoom()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x15E55EC", Offset = "0x15E55EC", VA = "0x15E55EC")]
	public void SendGotoPreparedRoomStatus(int uid, int backType, float dirX = 0f, float dirZ = 0f)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x15E5970", Offset = "0x15E5970", VA = "0x15E5970")]
	public void BattleRoomEnter(int roomId)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x15E5A3C", Offset = "0x15E5A3C", VA = "0x15E5A3C")]
	public void BattleRoomClean()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x15E5AC0", Offset = "0x15E5AC0", VA = "0x15E5AC0")]
	public void BattleRoomPass()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x15E5B44", Offset = "0x15E5B44", VA = "0x15E5B44")]
	public void BattleRoomExit()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x15E5B48", Offset = "0x15E5B48", VA = "0x15E5B48")]
	public void SyncRoleRoom(int uid, int roomId)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x15E5C5C", Offset = "0x15E5C5C", VA = "0x15E5C5C")]
	public void SyncRoomStatus(RoomType roomType, int valueI_1, int valueI_2, int valueI_3, int valueI_4, int valueI_5, int valueI_6)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x15E5DC0", Offset = "0x15E5DC0", VA = "0x15E5DC0")]
	private void SyncBattleRoomStatus(RoomType roomType, int bRoomId, RoleRoomStatus bRoomStatus, int fRoomId, RoleRoomStatus fRoomStatus, int nRoomId, RoleRoomStatus nRoomStatus)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x15E5EA0", Offset = "0x15E5EA0", VA = "0x15E5EA0")]
	private void SyncPreparedRoomStatus(RoomType roomType, int uid, int backType, int dirX, int dirZ)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x15E6370", Offset = "0x15E6370", VA = "0x15E6370")]
	private void RoomCharacterTypeBack(int uid, e_RoomCharacterDeath_Type type, [Optional] Vector3 dir)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x15E670C", Offset = "0x15E670C", VA = "0x15E670C")]
	public void OtherRoomsExit(int backId, int frontId, int nextId)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x15E6060", Offset = "0x15E6060", VA = "0x15E6060")]
	public FSMBattleRoom GetRoomById(int roomId)
	{
		return null;
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x15E4B3C", Offset = "0x15E4B3C", VA = "0x15E4B3C")]
	public (BattleRoomDoor, BattleRoomDoor) GetDoorsOfRoom(int roomId)
	{
		return default((BattleRoomDoor, BattleRoomDoor));
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x15E69AC", Offset = "0x15E69AC", VA = "0x15E69AC")]
	private void NetTeleport(bool state)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x15E61B0", Offset = "0x15E61B0", VA = "0x15E61B0")]
	private void GotoBattleRoom(int bRoomId, int fRoomId, int nRoomId)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x15E6F9C", Offset = "0x15E6F9C", VA = "0x15E6F9C")]
	public void OnPlayerTeleportEnd()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x15E6270", Offset = "0x15E6270", VA = "0x15E6270")]
	private void GotoPreparedeRoomQuickly()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x15E66A0", Offset = "0x15E66A0", VA = "0x15E66A0")]
	private void GotoPreparedeRoomByDeath()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x15E71B4", Offset = "0x15E71B4", VA = "0x15E71B4")]
	public void AllRollBack()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x15E702C", Offset = "0x15E702C", VA = "0x15E702C")]
	public void NetTeleportRollBackEnd()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x15E74C8", Offset = "0x15E74C8", VA = "0x15E74C8")]
	private void DeathRollback()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x15E7404", Offset = "0x15E7404", VA = "0x15E7404")]
	public void OnPlayerTeleportBack()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x15E75E4", Offset = "0x15E75E4", VA = "0x15E75E4")]
	public void NetDelayEnterRoom(int roomID)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x15E76B4", Offset = "0x15E76B4", VA = "0x15E76B4")]
	public void NetNoDelayEnterRoom(int roomID)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x15E7754", Offset = "0x15E7754", VA = "0x15E7754")]
	public void NetKillCurrentEnemys(int roomID)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x15E7824", Offset = "0x15E7824", VA = "0x15E7824")]
	public void NetPassCurrentRoom(int roomID)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x15E7A2C", Offset = "0x15E7A2C", VA = "0x15E7A2C")]
	public void NetPassGotoNextRoom(int curId, int nextId)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x15E7F5C", Offset = "0x15E7F5C", VA = "0x15E7F5C")]
	public void SetFog(int currRoomID)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x15E8028", Offset = "0x15E8028", VA = "0x15E8028")]
	public void NetRoomDoorLockSignStatus(int roomId, eDoor_LockSign_Net_Status status)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x15E6C0C", Offset = "0x15E6C0C", VA = "0x15E6C0C")]
	private void ShowTeleporterEffect()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x15E7290", Offset = "0x15E7290", VA = "0x15E7290")]
	private void CloseTeleporterEffect()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x15E811C", Offset = "0x15E811C", VA = "0x15E811C")]
	public void OnLeaveSafeArea()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x15E81BC", Offset = "0x15E81BC", VA = "0x15E81BC")]
	public void OnReturnSafeArea()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x15E825C", Offset = "0x15E825C", VA = "0x15E825C")]
	public FSMBattleRoomSystem()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x15E8350", Offset = "0x15E8350", VA = "0x15E8350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD648", Offset = "0xFDD648")]
	private bool <DoInit>b__36_0(Unit _)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x15E840C", Offset = "0x15E840C", VA = "0x15E840C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD658", Offset = "0xFDD658")]
	private bool <DoInit>b__36_1(Unit __)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x15E84A4", Offset = "0x15E84A4", VA = "0x15E84A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD668", Offset = "0xFDD668")]
	private void <DoInit>b__36_2(Unit l)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x15E85C4", Offset = "0x15E85C4", VA = "0x15E85C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD678", Offset = "0xFDD678")]
	private void <DoInit>b__36_6(long l1)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x15E85F8", Offset = "0x15E85F8", VA = "0x15E85F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD688", Offset = "0xFDD688")]
	private bool <DoInit>b__36_3(Unit _)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x15E86B0", Offset = "0x15E86B0", VA = "0x15E86B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD698", Offset = "0xFDD698")]
	private void <DoInit>b__36_4(Unit l)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x15E86F0", Offset = "0x15E86F0", VA = "0x15E86F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD6A8", Offset = "0xFDD6A8")]
	private void <DoInit>b__36_5(Unit l)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x15E86F4", Offset = "0x15E86F4", VA = "0x15E86F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD6B8", Offset = "0xFDD6B8")]
	private void <ShowTeleporterEffect>b__78_0()
	{
	}
}
[Token(Token = "0x200018D")]
public class LiftBattleRoomMontion : MonoBehaviour
{
	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C74", Offset = "0xFD5C74")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callBack;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TweenCallback <>9__0;

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x14870B0", Offset = "0x14870B0", VA = "0x14870B0")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x1487168", Offset = "0x1487168", VA = "0x1487168")]
		internal void <RoomMontion>b__0()
		{
		}
	}

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FSMBattleRoom room;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> montionObjList;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 montionTargetLocalPos;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float montionDuration;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent movingSoundAudio;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WwiseDefine moveSoundObj;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> montionObjOriginalPosList;

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x1486974", Offset = "0x1486974", VA = "0x1486974")]
	public void Init(FSMBattleRoom controlerRoom)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x1486B70", Offset = "0x1486B70", VA = "0x1486B70")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x1486D34", Offset = "0x1486D34", VA = "0x1486D34")]
	public void DoSetQuickly()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x1486DE4", Offset = "0x1486DE4", VA = "0x1486DE4")]
	private void PlayMovingSound()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x1486C5C", Offset = "0x1486C5C", VA = "0x1486C5C")]
	private void StopMovingSound()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x1486EB0", Offset = "0x1486EB0", VA = "0x1486EB0")]
	public void OnDestory()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x1486F44", Offset = "0x1486F44", VA = "0x1486F44")]
	private void RoomMontion(Action callBack)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x14870B8", Offset = "0x14870B8", VA = "0x14870B8")]
	public LiftBattleRoomMontion()
	{
	}
}
[Token(Token = "0x200018E")]
public class MainTeleporter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C84", Offset = "0xFD5C84")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__3_0;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Collider, bool> <>9__3_2;

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x14B2510", Offset = "0x14B2510", VA = "0x14B2510")]
		public <>c()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x14B2518", Offset = "0x14B2518", VA = "0x14B2518")]
		internal bool <DoInit>b__3_0(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x14B25B4", Offset = "0x14B25B4", VA = "0x14B25B4")]
		internal bool <DoInit>b__3_2(Collider collider)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<CharacterMono> recordCharacterList;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool checkView;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float viewToTeleporter;

	[Token(Token = "0x170000D9")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xFE1440", Offset = "0xFE1440")]
	public (Vector3, Quaternion, Vector3) TRS
	{
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x14B221C", Offset = "0x14B221C", VA = "0x14B221C")]
		get
		{
			return default((Vector3, Quaternion, Vector3));
		}
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x14B2380", Offset = "0x14B2380", VA = "0x14B2380")]
		[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xFE0E70", Offset = "0xFE0E70")]
		set
		{
		}
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x14B1A5C", Offset = "0x14B1A5C", VA = "0x14B1A5C")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x14B1D88", Offset = "0x14B1D88", VA = "0x14B1D88", Slot = "4")]
	protected virtual bool CheckRightView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x14B1EF0", Offset = "0x14B1EF0", VA = "0x14B1EF0")]
	public bool CheckReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x14B1FE4", Offset = "0x14B1FE4", VA = "0x14B1FE4")]
	public void SetStateFinish()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x14B2048", Offset = "0x14B2048", VA = "0x14B2048", Slot = "5")]
	protected virtual void NetCheckPlayerTrigger(Collider collider, bool enter)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x14B21EC", Offset = "0x14B21EC", VA = "0x14B21EC")]
	public (Vector3, Quaternion, Vector3) DoStart()
	{
		return default((Vector3, Quaternion, Vector3));
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x14B233C", Offset = "0x14B233C", VA = "0x14B233C")]
	public void DoReset([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xFE0DB4", Offset = "0xFE0DB4")] (Vector3, Quaternion, Vector3) trs)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x14B1D54", Offset = "0x14B1D54", VA = "0x14B1D54")]
	public void Toggle(bool state)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x14B23FC", Offset = "0x14B23FC", VA = "0x14B23FC")]
	public MainTeleporter()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x14B2488", Offset = "0x14B2488", VA = "0x14B2488")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD6C8", Offset = "0xFDD6C8")]
	private void <DoInit>b__3_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x14B2498", Offset = "0x14B2498", VA = "0x14B2498")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD6D8", Offset = "0xFDD6D8")]
	private void <DoInit>b__3_3(Collider collider1)
	{
	}
}
[Token(Token = "0x200018F")]
public class MotionFloor : MonoBehaviour
{
	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x14C1C4C", Offset = "0x14C1C4C", VA = "0x14C1C4C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x14C1C50", Offset = "0x14C1C50", VA = "0x14C1C50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x14C1D44", Offset = "0x14C1D44", VA = "0x14C1D44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x14C1E38", Offset = "0x14C1E38", VA = "0x14C1E38")]
	private void OnGearRoomMotion(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x14C1E84", Offset = "0x14C1E84", VA = "0x14C1E84")]
	public MotionFloor()
	{
	}
}
[Token(Token = "0x2000190")]
public class PreparedRoomDoor : BattleRoomDoor
{
	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1556864", Offset = "0x1556864", VA = "0x1556864", Slot = "4")]
	public override bool CheckSignCon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x15568E4", Offset = "0x15568E4", VA = "0x15568E4", Slot = "5")]
	public override void DoBeginSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x1556980", Offset = "0x1556980", VA = "0x1556980", Slot = "6")]
	public override void DoBreakSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x15569FC", Offset = "0x15569FC", VA = "0x15569FC")]
	public PreparedRoomDoor()
	{
	}
}
[Token(Token = "0x2000191")]
public class PreparedRoomManager : MonoBehaviour
{
	[Token(Token = "0x20004DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5C94", Offset = "0xFD5C94")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int doorId;

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x1558540", Offset = "0x1558540", VA = "0x1558540")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x1558AB0", Offset = "0x1558AB0", VA = "0x1558AB0")]
		internal bool <SetCurDoor>b__0(PreparedRoomDoor a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PreparedRoomManager Instance;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform preparedRoomModel;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MainTeleporter mainTeleporter;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform preparedRoom;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xFD7BAC", Offset = "0xFD7BAC")]
	private (Vector3, Quaternion, Vector3) originalInfo;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CharacterMono controlMono;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isStart;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PathManager FrameAreaHolder;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Transform> limitedAreaPointList;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<PreparedRoomDoor> RoomDoorList;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PreparedRoomDoor CurRoomDoor;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform DoorRoot;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform RoomDoorModelRoot;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private BattleRoomDoor curBattleOpenDoor;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool doorLockSignStatus;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnInit;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<Transform> OnPreparedRoomUnLoadPre;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action<Transform> OnPreparedRoomLoadPre;

	[Token(Token = "0x170000DA")]
	public Transform PreparedRoom
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1556A04", Offset = "0x1556A04", VA = "0x1556A04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x1556A0C", Offset = "0x1556A0C", VA = "0x1556A0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x1556A64", Offset = "0x1556A64", VA = "0x1556A64")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x1556C88", Offset = "0x1556C88", VA = "0x1556C88")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x1557180", Offset = "0x1557180", VA = "0x1557180")]
	public void DoPreReset()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x1557188", Offset = "0x1557188", VA = "0x1557188")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x1557510", Offset = "0x1557510", VA = "0x1557510")]
	private void OnPlayerTeleportTo()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x1557760", Offset = "0x1557760", VA = "0x1557760")]
	private void OnPlayerTeleportBack()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x15578C0", Offset = "0x15578C0", VA = "0x15578C0")]
	public void AdjustMainTeleporterTR(Vector3 localPos, Quaternion rot, Vector3 scale)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x15579CC", Offset = "0x15579CC", VA = "0x15579CC")]
	public void OnReturnSafeArea()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x1557B00", Offset = "0x1557B00", VA = "0x1557B00")]
	public void OnLeaveSafeArea()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x1557C5C", Offset = "0x1557C5C", VA = "0x1557C5C")]
	private bool GetLimitedAreaPoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1557DB8", Offset = "0x1557DB8", VA = "0x1557DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x1557FE8", Offset = "0x1557FE8", VA = "0x1557FE8")]
	public void NetDoorLockSignStatus(int roomId, eDoor_LockSign_Net_Status status)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x1556C84", Offset = "0x1556C84", VA = "0x1556C84")]
	private void InitDoor()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x15583BC", Offset = "0x15583BC", VA = "0x15583BC")]
	private void SetCurDoor(int doorId)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x1558548", Offset = "0x1558548", VA = "0x1558548")]
	public void AdjustMainDoor(BattleRoomDoor door, Vector3 doorOffsetPos, Quaternion doorRot, Vector3 doorScale)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x15576A8", Offset = "0x15576A8", VA = "0x15576A8")]
	private void PlayBattleOpenDoor()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x15587E0", Offset = "0x15587E0", VA = "0x15587E0")]
	public bool CheckRoomReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x1557404", Offset = "0x1557404", VA = "0x1557404")]
	public void ResetRoomDoor()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x15575F0", Offset = "0x15575F0", VA = "0x15575F0")]
	public void ResetStatus()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x15570C8", Offset = "0x15570C8", VA = "0x15570C8")]
	public void SetDoorLockSignActive(bool active)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x15588F0", Offset = "0x15588F0", VA = "0x15588F0")]
	public void SetRoomDoorChildModelActive(PreparedRoomDoor door, bool active, bool isDelayActive = false)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1558314", Offset = "0x1558314", VA = "0x1558314")]
	public void SetDoorLockSignProgressActive(bool active)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x15568C8", Offset = "0x15568C8", VA = "0x15568C8")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x15589D0", Offset = "0x15589D0", VA = "0x15589D0")]
	private void ResetCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1557F54", Offset = "0x1557F54", VA = "0x1557F54")]
	private void UpdateCheckPreRoom()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1557E58", Offset = "0x1557E58", VA = "0x1557E58")]
	private void UpdateCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x1558268", Offset = "0x1558268", VA = "0x1558268")]
	public void SyncDoorLockSignStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x1558A00", Offset = "0x1558A00", VA = "0x1558A00")]
	public PreparedRoomManager()
	{
	}
}
[Token(Token = "0x2000192")]
public class Teleporter : MonoBehaviour
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int roomId;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CharacterMono> recordCharacterList;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool checkView;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool autoAdjustRot;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float viewToTeleporter;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool passed;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_MaxDistance;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_HitDetect;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 m_Dir;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit m_Hit;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isActive;

	[Token(Token = "0x170000DB")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xFE14FC", Offset = "0xFE14FC")]
	public (Vector3, Quaternion, Vector3) TRS
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x145B6AC", Offset = "0x145B6AC", VA = "0x145B6AC")]
		get
		{
			return default((Vector3, Quaternion, Vector3));
		}
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x145B7CC", Offset = "0x145B7CC", VA = "0x145B7CC")]
		[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xFE0F2C", Offset = "0xFE0F2C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x145AEF4", Offset = "0x145AEF4", VA = "0x145AEF4")]
	public void Init(int id)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x145AF00", Offset = "0x145AF00", VA = "0x145AF00")]
	public void SetActive(bool state)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x145AF80", Offset = "0x145AF80", VA = "0x145AF80")]
	public void SetPass(bool isPass)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x145AFEC", Offset = "0x145AFEC", VA = "0x145AFEC", Slot = "4")]
	protected virtual bool CheckRightView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x145B148", Offset = "0x145B148", VA = "0x145B148", Slot = "5")]
	public virtual bool CheckReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x145B22C", Offset = "0x145B22C", VA = "0x145B22C", Slot = "6")]
	protected virtual void ServerCheckPlayerTrigger(Collider collider, bool enter)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x145B358", Offset = "0x145B358", VA = "0x145B358")]
	private CharacterMono GetCharMono(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x145B4B0", Offset = "0x145B4B0", VA = "0x145B4B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x145B848", Offset = "0x145B848", VA = "0x145B848")]
	public Teleporter()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x145B8D4", Offset = "0x145B8D4", VA = "0x145B8D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD6E8", Offset = "0xFDD6E8")]
	private bool <Update>b__18_0(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x145B98C", Offset = "0x145B98C", VA = "0x145B98C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD6F8", Offset = "0xFDD6F8")]
	private void <Update>b__18_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x145B99C", Offset = "0x145B99C", VA = "0x145B99C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD708", Offset = "0xFDD708")]
	private bool <Update>b__18_2(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x145BA54", Offset = "0x145BA54", VA = "0x145BA54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD718", Offset = "0xFDD718")]
	private void <Update>b__18_3(Collider collider1)
	{
	}
}
[Token(Token = "0x2000193")]
public class KeyboardInput : MonoBehaviour
{
	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TestPlayerMove Player;

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x147E048", Offset = "0x147E048", VA = "0x147E048")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x147E2E0", Offset = "0x147E2E0", VA = "0x147E2E0")]
	public KeyboardInput()
	{
	}
}
[Token(Token = "0x2000194")]
public class AreaLimitedTipUI : BaseUI
{
	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AreaLimitedTipUI Instance;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float downOffset;

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x160B60C", Offset = "0x160B60C", VA = "0x160B60C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x160B674", Offset = "0x160B674", VA = "0x160B674")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x160B678", Offset = "0x160B678", VA = "0x160B678")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x160B99C", Offset = "0x160B99C", VA = "0x160B99C")]
	public AreaLimitedTipUI()
	{
	}
}
[Token(Token = "0x2000195")]
public class LeaveAreaEffect : PostEffectsBase
{
	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LeaveAreaEffect Instance;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader fogShader;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material fogMaterial;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera myCamera;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myCameraTransform;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD7C68", Offset = "0xFD7C68")]
	public float fogDensity;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color fogColor;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float normalStart;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float normalEnd;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int camLayerMask;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool effectState;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector4[] PolygonPoints;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action CloseEffectAction;

	[Token(Token = "0x170000DC")]
	public Material material
	{
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x14832F4", Offset = "0x14832F4", VA = "0x14832F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DD")]
	public Camera camera
	{
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x1483334", Offset = "0x1483334", VA = "0x1483334")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DE")]
	public Transform cameraTransform
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x14833E0", Offset = "0x14833E0", VA = "0x14833E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public bool Enabled
	{
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1483490", Offset = "0x1483490", VA = "0x1483490")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1483498", Offset = "0x1483498", VA = "0x1483498")]
		set
		{
		}
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x14834D4", Offset = "0x14834D4", VA = "0x14834D4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x148352C", Offset = "0x148352C", VA = "0x148352C")]
	public bool ToggleEffect(bool toggle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1483534", Offset = "0x1483534", VA = "0x1483534")]
	public void SetPolygonPoints(List<Transform> points)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1483688", Offset = "0x1483688", VA = "0x1483688")]
	private Matrix4x4 GetFrustumCorners()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1483B38", Offset = "0x1483B38", VA = "0x1483B38")]
	public LeaveAreaEffect()
	{
	}
}
[Token(Token = "0x2000196")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD2930", Offset = "0xFD2930")]
public class PostEffectsBase : MonoBehaviour
{
	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool m_ToggleEffect;

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x13A40F0", Offset = "0x13A40F0", VA = "0x13A40F0")]
	protected void CheckResources()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x13A412C", Offset = "0x13A412C", VA = "0x13A412C")]
	protected bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x13A41C0", Offset = "0x13A41C0", VA = "0x13A41C0")]
	protected void NotSupported()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x13A41CC", Offset = "0x13A41CC", VA = "0x13A41CC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x13A41D0", Offset = "0x13A41D0", VA = "0x13A41D0")]
	protected Material CheckShaderAndCreateMaterial(Shader shader, Material material)
	{
		return null;
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x13A435C", Offset = "0x13A435C", VA = "0x13A435C")]
	public PostEffectsBase()
	{
	}
}
[Token(Token = "0x2000197")]
public enum ClientBattleMessageType
{
	[Token(Token = "0x40009B8")]
	EnterRoom = 1001,
	[Token(Token = "0x40009B9")]
	GearRoomMotion = 2001
}
[Token(Token = "0x2000198")]
public enum ServerBattleMessageType
{
	[Token(Token = "0x40009BB")]
	BossGatlinBlendRTPC = 3001
}
[Token(Token = "0x2000199")]
public delegate void EventListenerDelegate(GMessage evt);
[Token(Token = "0x200019A")]
public class GDispatcher : Singleton<GDispatcher>, IDispatcher
{
	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, EventListenerDelegate> events;

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x15F2B08", Offset = "0x15F2B08", VA = "0x15F2B08", Slot = "4")]
	public void AddListener(int type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x15F2C20", Offset = "0x15F2C20", VA = "0x15F2C20", Slot = "5")]
	public void RemoveListener(int type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x15F2D20", Offset = "0x15F2D20", VA = "0x15F2D20", Slot = "8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x15F2D78", Offset = "0x15F2D78", VA = "0x15F2D78", Slot = "6")]
	public void SendMessage(GMessage evt)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x15F3014", Offset = "0x15F3014", VA = "0x15F3014", Slot = "7")]
	public void SendMessage(int type, params object[] param)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x15F3324", Offset = "0x15F3324", VA = "0x15F3324")]
	public void AddListener(ServerBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x15F3328", Offset = "0x15F3328", VA = "0x15F3328")]
	public void RemoveListener(ServerBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x15F332C", Offset = "0x15F332C", VA = "0x15F332C")]
	public void SendMessage(ServerBattleMessageType type, params object[] param)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x15F3330", Offset = "0x15F3330", VA = "0x15F3330")]
	public void AddListener(ClientBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x15F3334", Offset = "0x15F3334", VA = "0x15F3334")]
	public void RemoveListener(ClientBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x15F3338", Offset = "0x15F3338", VA = "0x15F3338")]
	public void SendMessage(ClientBattleMessageType type, params object[] param)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x15F333C", Offset = "0x15F333C", VA = "0x15F333C")]
	public GDispatcher()
	{
	}
}
[Token(Token = "0x200019B")]
public class GMessage : IMessage
{
	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7C80", Offset = "0xFD7C80")]
	private int <Type>k__BackingField;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7C90", Offset = "0xFD7C90")]
	private object[] <Params>k__BackingField;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7CA0", Offset = "0xFD7CA0")]
	private object <Sender>k__BackingField;

	[Token(Token = "0x170000E0")]
	public int Type
	{
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x15F33E0", Offset = "0x15F33E0", VA = "0x15F33E0", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD728", Offset = "0xFDD728")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x15F33E8", Offset = "0x15F33E8", VA = "0x15F33E8", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD738", Offset = "0xFDD738")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public object[] Params
	{
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x15F33F0", Offset = "0x15F33F0", VA = "0x15F33F0", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD748", Offset = "0xFDD748")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x15F33F8", Offset = "0x15F33F8", VA = "0x15F33F8", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD758", Offset = "0xFDD758")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public object Sender
	{
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x15F3400", Offset = "0x15F3400", VA = "0x15F3400", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD768", Offset = "0xFDD768")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x15F3408", Offset = "0x15F3408", VA = "0x15F3408", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD778", Offset = "0xFDD778")]
		set
		{
		}
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x15F3410", Offset = "0x15F3410", VA = "0x15F3410", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x15F3714", Offset = "0x15F3714", VA = "0x15F3714")]
	public GMessage Clone()
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x15F3850", Offset = "0x15F3850", VA = "0x15F3850")]
	public GMessage(int type)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x15F32E0", Offset = "0x15F32E0", VA = "0x15F32E0")]
	public GMessage(int type, params object[] param)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x15F37F8", Offset = "0x15F37F8", VA = "0x15F37F8")]
	public GMessage(int type, object sender, params object[] param)
	{
	}
}
[Token(Token = "0x200019C")]
public interface IDispatcher
{
	[Token(Token = "0x6000A7D")]
	void AddListener(int type, EventListenerDelegate listener);

	[Token(Token = "0x6000A7E")]
	void RemoveListener(int type, EventListenerDelegate listener);

	[Token(Token = "0x6000A7F")]
	void SendMessage(GMessage evt);

	[Token(Token = "0x6000A80")]
	void SendMessage(int type, params object[] param);

	[Token(Token = "0x6000A81")]
	void Clear();
}
[Token(Token = "0x200019D")]
public interface IMessage
{
	[Token(Token = "0x170000E3")]
	int Type
	{
		[Token(Token = "0x6000A82")]
		get;
		[Token(Token = "0x6000A83")]
		set;
	}

	[Token(Token = "0x170000E4")]
	object Sender
	{
		[Token(Token = "0x6000A84")]
		get;
		[Token(Token = "0x6000A85")]
		set;
	}

	[Token(Token = "0x170000E5")]
	object[] Params
	{
		[Token(Token = "0x6000A86")]
		get;
		[Token(Token = "0x6000A87")]
		set;
	}

	[Token(Token = "0x6000A88")]
	new string ToString();
}
[Token(Token = "0x200019E")]
public enum MessageEvents
{
	[Token(Token = "0x40009C1")]
	NONE = -1,
	[Token(Token = "0x40009C2")]
	EnterRoom = 1000,
	[Token(Token = "0x40009C3")]
	GearRoomMotion = 2001,
	[Token(Token = "0x40009C4")]
	BossGatlinBlendRTPC = 2002,
	[Token(Token = "0x40009C5")]
	SelectInstanceFinish = 5000,
	[Token(Token = "0x40009C6")]
	InstanceInfoFresh = 5001,
	[Token(Token = "0x40009C7")]
	CaptainFresh = 6000
}
[Token(Token = "0x200019F")]
public class ObjMessenger
{
	[Token(Token = "0x20004DD")]
	public delegate void Callback();

	[Token(Token = "0x20004DE")]
	public delegate void Callback<T>(T arg1);

	[Token(Token = "0x20004DF")]
	public delegate void Callback<T, U>(T arg1, U arg2);

	[Token(Token = "0x20004E0")]
	public delegate void Callback<T, U, V>(T arg1, U arg2, V arg3);

	[Token(Token = "0x20004E1")]
	public delegate void Callback<T, U, V, X>(T arg1, U arg2, V arg3, X arg4);

	[Token(Token = "0x20004E2")]
	public delegate void Callback<T, U, V, X, Y>(T arg1, U arg2, V arg3, X arg4, Y arg5);

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<MessageEvents, Delegate> eventTable;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x149AED4", Offset = "0x149AED4", VA = "0x149AED4")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x149AF50", Offset = "0x149AF50", VA = "0x149AF50")]
	private static void AddListenerToTable(MessageEvents eventType, Delegate handler)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x149B024", Offset = "0x149B024", VA = "0x149B024")]
	public static void AddListener(MessageEvents eventType, Callback handler)
	{
	}

	[Token(Token = "0x6000A8C")]
	public static void AddListener<T>(MessageEvents eventType, Callback<T> handler)
	{
	}

	[Token(Token = "0x6000A8D")]
	public static void AddListener<T, U>(MessageEvents eventType, Callback<T, U> handler)
	{
	}

	[Token(Token = "0x6000A8E")]
	public static void AddListener<T, U, V>(MessageEvents eventType, Callback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000A8F")]
	public static void AddListener<T, U, V, X>(MessageEvents eventType, Callback<T, U, V, X> handler)
	{
	}

	[Token(Token = "0x6000A90")]
	public static void AddListener<T, U, V, X, Y>(MessageEvents eventType, Callback<T, U, V, X, Y> handler)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x149B124", Offset = "0x149B124", VA = "0x149B124")]
	public static void RemoveListener(MessageEvents eventType)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x149B1F4", Offset = "0x149B1F4", VA = "0x149B1F4")]
	private static void OnListenerRemoved(MessageEvents eventType)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x149B304", Offset = "0x149B304", VA = "0x149B304")]
	public static void RemoveListener(MessageEvents eventType, Callback handler)
	{
	}

	[Token(Token = "0x6000A94")]
	public static void RemoveListener<T>(MessageEvents eventType, Callback<T> handler)
	{
	}

	[Token(Token = "0x6000A95")]
	public static void RemoveListener<T, U>(MessageEvents eventType, Callback<T, U> handler)
	{
	}

	[Token(Token = "0x6000A96")]
	public static void RemoveListener<T, U, V>(MessageEvents eventType, Callback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000A97")]
	public static void RemoveListener<T, U, V, X>(MessageEvents eventType, Callback<T, U, V, X> handler)
	{
	}

	[Token(Token = "0x6000A98")]
	public static void RemoveListener<T, U, V, X, Y>(MessageEvents eventType, Callback<T, U, V, X, Y> handler)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x149B454", Offset = "0x149B454", VA = "0x149B454")]
	private static void throwSendMessageExption(MessageEvents eventType)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x149B504", Offset = "0x149B504", VA = "0x149B504")]
	public static void Send(MessageEvents eventType)
	{
	}

	[Token(Token = "0x6000A9B")]
	public static void Send<T>(MessageEvents eventType, T arg1)
	{
	}

	[Token(Token = "0x6000A9C")]
	public static void Send<T, U>(MessageEvents eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x6000A9D")]
	public static void Send<T, U, V>(MessageEvents eventType, T arg1, U arg2, V arg3)
	{
	}

	[Token(Token = "0x6000A9E")]
	public static void Send<T, U, V, X>(MessageEvents eventType, T arg1, U arg2, V arg3, X arg4)
	{
	}

	[Token(Token = "0x6000A9F")]
	public static void Send<T, U, V, X, Y>(MessageEvents eventType, T arg1, U arg2, V arg3, X arg4, Y arg5)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x149B7F4", Offset = "0x149B7F4", VA = "0x149B7F4")]
	public ObjMessenger()
	{
	}
}
[Token(Token = "0x20001A0")]
public class TestPlayerMove : MonoBehaviour
{
	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mianCam;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD7CB0", Offset = "0xFD7CB0")]
	public float MoveSpeed;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotateSpeed;

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x145FAC8", Offset = "0x145FAC8", VA = "0x145FAC8")]
	public void Move(Vector3 dir, bool isforward)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x145FBF8", Offset = "0x145FBF8", VA = "0x145FBF8")]
	public void Rotate(bool isleft)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x145FCDC", Offset = "0x145FCDC", VA = "0x145FCDC")]
	public void PlayerRotate(float x, float y)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x145FD94", Offset = "0x145FD94", VA = "0x145FD94")]
	public TestPlayerMove()
	{
	}
}
[Token(Token = "0x20001A1")]
public enum GameDiffculty
{
	[Token(Token = "0x40009CD")]
	None,
	[Token(Token = "0x40009CE")]
	Diff_1Player,
	[Token(Token = "0x40009CF")]
	Diff_2Player,
	[Token(Token = "0x40009D0")]
	Diff_3Player,
	[Token(Token = "0x40009D1")]
	Diff_4Player,
	[Token(Token = "0x40009D2")]
	Diff_5Player
}
[Token(Token = "0x20001A2")]
public enum e_type_camp
{
	[Token(Token = "0x40009D4")]
	Enemy,
	[Token(Token = "0x40009D5")]
	Teammate,
	[Token(Token = "0x40009D6")]
	Self,
	[Token(Token = "0x40009D7")]
	All
}
[Token(Token = "0x20001A3")]
public enum e_Player_Style
{
	[Token(Token = "0x40009D9")]
	Default,
	[Token(Token = "0x40009DA")]
	Men01,
	[Token(Token = "0x40009DB")]
	Woman01,
	[Token(Token = "0x40009DC")]
	Men02
}
[Token(Token = "0x20001A4")]
public enum e_weapon_group
{
	[Token(Token = "0x40009DE")]
	NONE = 0,
	[Token(Token = "0x40009DF")]
	Revolver_WG = 1,
	[Token(Token = "0x40009E0")]
	AssaultRifle_WG = 2,
	[Token(Token = "0x40009E1")]
	SpearGun_WG = 3,
	[Token(Token = "0x40009E2")]
	RocketLauncher_WG = 4,
	[Token(Token = "0x40009E3")]
	MachineGun_WG = 5,
	[Token(Token = "0x40009E4")]
	SubMGun_WG = 6,
	[Token(Token = "0x40009E5")]
	Rifle_NPC = 1001,
	[Token(Token = "0x40009E6")]
	SubMGun_NPC = 1002,
	[Token(Token = "0x40009E7")]
	Bow_NPC = 1003,
	[Token(Token = "0x40009E8")]
	Fireball_NPC = 1004,
	[Token(Token = "0x40009E9")]
	Laser_NPC = 1005,
	[Token(Token = "0x40009EA")]
	FlyingBall_NPC = 1006,
	[Token(Token = "0x40009EB")]
	SingleBow_NPC = 1007,
	[Token(Token = "0x40009EC")]
	Fireball_Teleport_NPC = 1008,
	[Token(Token = "0x40009ED")]
	Bomb_NPC = 1009,
	[Token(Token = "0x40009EE")]
	Boss = 1010
}
[Token(Token = "0x20001A5")]
public enum e_weapon_type
{
	[Token(Token = "0x40009F0")]
	NONE = 0,
	[Token(Token = "0x40009F1")]
	Revolver = 1,
	[Token(Token = "0x40009F2")]
	AssaultRifle = 2,
	[Token(Token = "0x40009F3")]
	SpearGun = 3,
	[Token(Token = "0x40009F4")]
	RocketLauncher = 4,
	[Token(Token = "0x40009F5")]
	MachineGun = 5,
	[Token(Token = "0x40009F6")]
	SubMGun = 6,
	[Token(Token = "0x40009F7")]
	RIFLE_NPC_1 = 1001,
	[Token(Token = "0x40009F8")]
	RIFLE_NPC_2 = 1002,
	[Token(Token = "0x40009F9")]
	Bow_NPC = 1003,
	[Token(Token = "0x40009FA")]
	Fireball_NPC = 1004,
	[Token(Token = "0x40009FB")]
	Laser_NPC = 1005,
	[Token(Token = "0x40009FC")]
	FlyingBall_NPC = 1006,
	[Token(Token = "0x40009FD")]
	SingleBow_NPC = 1007,
	[Token(Token = "0x40009FE")]
	Fireball_Teleport_NPC = 1008,
	[Token(Token = "0x40009FF")]
	Bomb_NPC = 1009,
	[Token(Token = "0x4000A00")]
	Boss = 1010
}
[Token(Token = "0x20001A6")]
[Flags]
public enum e_Attack_type
{
	[Token(Token = "0x4000A02")]
	None = 0,
	[Token(Token = "0x4000A03")]
	Normal = 1,
	[Token(Token = "0x4000A04")]
	Burning = 2,
	[Token(Token = "0x4000A05")]
	Poison = 4,
	[Token(Token = "0x4000A06")]
	FixedBackGroundNormal = 8
}
[Token(Token = "0x20001A7")]
[Flags]
public enum e_HitEffect_type
{
	[Token(Token = "0x4000A08")]
	Normal = 1,
	[Token(Token = "0x4000A09")]
	Ragdoll = 2,
	[Token(Token = "0x4000A0A")]
	Broken = 4,
	[Token(Token = "0x4000A0B")]
	FullRagdoll = 8
}
[Token(Token = "0x20001A8")]
public enum e_type_monster
{
	[Token(Token = "0x4000A0D")]
	None = 0,
	[Token(Token = "0x4000A0E")]
	Normal = 1,
	[Token(Token = "0x4000A0F")]
	Big = 2,
	[Token(Token = "0x4000A10")]
	BulletMonster = 3,
	[Token(Token = "0x4000A11")]
	Boss = 100
}
[Token(Token = "0x20001A9")]
public enum e_type_npc
{
	[Token(Token = "0x4000A13")]
	None = 0,
	[Token(Token = "0x4000A14")]
	Commander = 10,
	[Token(Token = "0x4000A15")]
	Soldier = 20,
	[Token(Token = "0x4000A16")]
	Soldier2 = 21,
	[Token(Token = "0x4000A17")]
	Soldier3 = 22
}
[Token(Token = "0x20001AA")]
public enum e_type_role
{
	[Token(Token = "0x4000A19")]
	NONE,
	[Token(Token = "0x4000A1A")]
	HERO,
	[Token(Token = "0x4000A1B")]
	MONSTER,
	[Token(Token = "0x4000A1C")]
	NPC
}
[Token(Token = "0x20001AB")]
public enum e_group_type
{
	[Token(Token = "0x4000A1E")]
	None = -1,
	[Token(Token = "0x4000A1F")]
	Unit_Group_Player_A = 0,
	[Token(Token = "0x4000A20")]
	Unit_Group_Player_B = 1,
	[Token(Token = "0x4000A21")]
	Unit_Group_Monster = 100
}
[Token(Token = "0x20001AC")]
public enum e_GameStatusType
{
	[Token(Token = "0x4000A23")]
	NONE,
	[Token(Token = "0x4000A24")]
	Ready,
	[Token(Token = "0x4000A25")]
	FightStart,
	[Token(Token = "0x4000A26")]
	FightStop,
	[Token(Token = "0x4000A27")]
	StartVideo,
	[Token(Token = "0x4000A28")]
	StopVideo,
	[Token(Token = "0x4000A29")]
	ControlFire
}
[Token(Token = "0x20001AD")]
public enum e_CutScenesType
{
	[Token(Token = "0x4000A2B")]
	NONE,
	[Token(Token = "0x4000A2C")]
	FightStart,
	[Token(Token = "0x4000A2D")]
	Unlock_One,
	[Token(Token = "0x4000A2E")]
	Unlock_Two,
	[Token(Token = "0x4000A2F")]
	FightEnd_Win,
	[Token(Token = "0x4000A30")]
	FightEnd_Fail,
	[Token(Token = "0x4000A31")]
	Player_Death_One,
	[Token(Token = "0x4000A32")]
	Player_Death_Two,
	[Token(Token = "0x4000A33")]
	Player_Death_Three,
	[Token(Token = "0x4000A34")]
	Player_Death_Four,
	[Token(Token = "0x4000A35")]
	Doctor_Remind_One
}
[Token(Token = "0x20001AE")]
public enum e_setting_type
{
	[Token(Token = "0x4000A37")]
	None = 0,
	[Token(Token = "0x4000A38")]
	BattleTime = 1,
	[Token(Token = "0x4000A39")]
	BattleEndDelayTime = 2,
	[Token(Token = "0x4000A3A")]
	MaxMonsterCount = 3,
	[Token(Token = "0x4000A3B")]
	RoomReviveHP = 4,
	[Token(Token = "0x4000A3C")]
	RoomReviveIds = 5,
	[Token(Token = "0x4000A3D")]
	NormalKillScoreCoefficient = 6,
	[Token(Token = "0x4000A3E")]
	HeadKillScoreCoefficient = 7,
	[Token(Token = "0x4000A3F")]
	InstancePassCoefficient = 8,
	[Token(Token = "0x4000A40")]
	FailScoreCoefficient = 10,
	[Token(Token = "0x4000A41")]
	GameTimeScoreCoefficient = 11,
	[Token(Token = "0x4000A42")]
	GameTimeBase = 12,
	[Token(Token = "0x4000A43")]
	GameScoreRanges = 13,
	[Token(Token = "0x4000A44")]
	AreaLimited = 14,
	[Token(Token = "0x4000A45")]
	BossInstanceId = 15,
	[Token(Token = "0x4000A46")]
	WinInstanceId = 16,
	[Token(Token = "0x4000A47")]
	ClearUIIds = 17,
	[Token(Token = "0x4000A48")]
	ClearUIDelay = 18,
	[Token(Token = "0x4000A49")]
	LineFailClose = 19,
	[Token(Token = "0x4000A4A")]
	LevelBattleTimes = 20,
	[Token(Token = "0x4000A4B")]
	OfflimitsAreasDamage = 100,
	[Token(Token = "0x4000A4C")]
	OfflimitsAreasDamageFrequency = 101,
	[Token(Token = "0x4000A4D")]
	MagmaAreasDamage = 30,
	[Token(Token = "0x4000A4E")]
	MagmaAreasDamageFrequency = 31,
	[Token(Token = "0x4000A4F")]
	AxeDamage = 32,
	[Token(Token = "0x4000A50")]
	AxeDamageFrequency = 33,
	[Token(Token = "0x4000A51")]
	SpitfireAreasDamage = 34,
	[Token(Token = "0x4000A52")]
	SpitfiresDamageFrequency = 35,
	[Token(Token = "0x4000A53")]
	MovingWallDamage = 36,
	[Token(Token = "0x4000A54")]
	MovingWallDamageFrequency = 37,
	[Token(Token = "0x4000A55")]
	ToStabDamage = 38,
	[Token(Token = "0x4000A56")]
	ToStabDamageFrequency = 39,
	[Token(Token = "0x4000A57")]
	SawDamage = 40,
	[Token(Token = "0x4000A58")]
	SawDamageFrequency = 41
}
[Token(Token = "0x20001AF")]
public enum e_FlowType
{
	[Token(Token = "0x4000A5A")]
	NONE,
	[Token(Token = "0x4000A5B")]
	MonsterRoom,
	[Token(Token = "0x4000A5C")]
	GearRoom,
	[Token(Token = "0x4000A5D")]
	BoosRoom,
	[Token(Token = "0x4000A5E")]
	SafeRoom
}
[Token(Token = "0x20001B0")]
public enum EffectStatus
{
	[Token(Token = "0x4000A60")]
	None,
	[Token(Token = "0x4000A61")]
	PlayerRollBack,
	[Token(Token = "0x4000A62")]
	PlayerTeleport,
	[Token(Token = "0x4000A63")]
	PassCurrentRoom,
	[Token(Token = "0x4000A64")]
	PlayerEnterRoom,
	[Token(Token = "0x4000A65")]
	KillCurrentEnemys,
	[Token(Token = "0x4000A66")]
	PlayerTypeRollBack,
	[Token(Token = "0x4000A67")]
	ReviveHP,
	[Token(Token = "0x4000A68")]
	RoomDoorLockSignStatus,
	[Token(Token = "0x4000A69")]
	GuidStepStatus,
	[Token(Token = "0x4000A6A")]
	ClearMonster,
	[Token(Token = "0x4000A6B")]
	Calibration,
	[Token(Token = "0x4000A6C")]
	InTeleporter,
	[Token(Token = "0x4000A6D")]
	TimerAudio_1,
	[Token(Token = "0x4000A6E")]
	TimerAudio_2,
	[Token(Token = "0x4000A6F")]
	TimerAudio_3,
	[Token(Token = "0x4000A70")]
	SetLevel,
	[Token(Token = "0x4000A71")]
	TimerAudio_4,
	[Token(Token = "0x4000A72")]
	DeadStart,
	[Token(Token = "0x4000A73")]
	DeadEnd,
	[Token(Token = "0x4000A74")]
	InstanceDataPreStart
}
[Token(Token = "0x20001B1")]
public enum VRInputType
{
	[Token(Token = "0x4000A76")]
	HTC
}
[Token(Token = "0x20001B2")]
public static class GameConfig
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, e_type_language> languageList;

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x15F387C", Offset = "0x15F387C", VA = "0x15F387C")]
	public static string ToLanguage(string languageName, out e_type_language languageType)
	{
		return null;
	}
}
[Token(Token = "0x20001B3")]
public enum e_type_language
{
	[Token(Token = "0x4000A79")]
	None = -1,
	[Token(Token = "0x4000A7A")]
	Chinese,
	[Token(Token = "0x4000A7B")]
	English_US,
	[Token(Token = "0x4000A7C")]
	Korean,
	[Token(Token = "0x4000A7D")]
	Japanese,
	[Token(Token = "0x4000A7E")]
	Chinese_TW,
	[Token(Token = "0x4000A7F")]
	Vietnamese,
	[Token(Token = "0x4000A80")]
	Thai,
	[Token(Token = "0x4000A81")]
	Indonesian,
	[Token(Token = "0x4000A82")]
	German,
	[Token(Token = "0x4000A83")]
	French,
	[Token(Token = "0x4000A84")]
	Russian,
	[Token(Token = "0x4000A85")]
	Portuguese,
	[Token(Token = "0x4000A86")]
	Spanish,
	[Token(Token = "0x4000A87")]
	Italian,
	[Token(Token = "0x4000A88")]
	Polish,
	[Token(Token = "0x4000A89")]
	Turkish,
	[Token(Token = "0x4000A8A")]
	Dutch,
	[Token(Token = "0x4000A8B")]
	Arabic
}
[Token(Token = "0x20001B4")]
public enum e_hardware_type
{
	[Token(Token = "0x4000A8D")]
	Default,
	[Token(Token = "0x4000A8E")]
	L_Haptics,
	[Token(Token = "0x4000A8F")]
	L_Shield,
	[Token(Token = "0x4000A90")]
	R_Knt,
	[Token(Token = "0x4000A91")]
	L_HapticsAndR_Knt,
	[Token(Token = "0x4000A92")]
	L_ShieldAndR_Knt
}
[Token(Token = "0x20001B5")]
public enum e_weapon_hardware_type
{
	[Token(Token = "0x4000A94")]
	Default,
	[Token(Token = "0x4000A95")]
	KNT,
	[Token(Token = "0x4000A96")]
	Haptics,
	[Token(Token = "0x4000A97")]
	Shield
}
[Token(Token = "0x20001B6")]
public enum e_Server_Type
{
	[Token(Token = "0x4000A99")]
	None,
	[Token(Token = "0x4000A9A")]
	Host,
	[Token(Token = "0x4000A9B")]
	Server
}
[Token(Token = "0x20001B7")]
public enum GameModeType
{
	[Token(Token = "0x4000A9D")]
	LargeSpace = 1,
	[Token(Token = "0x4000A9E")]
	Room,
	[Token(Token = "0x4000A9F")]
	VRBox
}
[Token(Token = "0x20001B8")]
public class GameWorld : Singleton<GameWorld>
{
	[Serializable]
	[Token(Token = "0x20004E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5CA4", Offset = "0xFD5CA4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__41_0;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<WUnit> <>9__42_0;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__44_1;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__44_2;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__44_0;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<WUnit> <>9__48_0;

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x14EBE84", Offset = "0x14EBE84", VA = "0x14EBE84")]
		public <>c()
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x14EBE8C", Offset = "0x14EBE8C", VA = "0x14EBE8C")]
		internal void <BattleReady>b__41_0(WUnit unit)
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x14EC0AC", Offset = "0x14EC0AC", VA = "0x14EC0AC")]
		internal void <BattleStart>b__42_0(WUnit unit)
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x14EC15C", Offset = "0x14EC15C", VA = "0x14EC15C")]
		internal void <BattleEnd>b__44_0()
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x14EC6D4", Offset = "0x14EC6D4", VA = "0x14EC6D4")]
		internal void <BattleEnd>b__44_1()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x14EC8D4", Offset = "0x14EC8D4", VA = "0x14EC8D4")]
		internal void <BattleEnd>b__44_2()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x14EC8D8", Offset = "0x14EC8D8", VA = "0x14EC8D8")]
		internal void <ReviveAllPlayer>b__48_0(WUnit unit)
		{
		}
	}

	[Token(Token = "0x20004E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5CB4", Offset = "0xFD5CB4")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool state;

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x14EBAF4", Offset = "0x14EBAF4", VA = "0x14EBAF4")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x14EC940", Offset = "0x14EC940", VA = "0x14EC940")]
		internal void <SetNoHurtStateAllUnit>b__0(WUnit unit)
		{
		}
	}

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7CE8", Offset = "0xFD7CE8")]
	private static bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool gRunning;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int gCounter;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int gFixedCounter;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static RoomStateAgent.eRoomState roomState;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isFirstInGame;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Battle battle;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static BattleManager battleManager;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static BattleData battleData;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static NetworkStatusHandle GlobalNetworkStatus;

	[Token(Token = "0x170000E6")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x14E8E70", Offset = "0x14E8E70", VA = "0x14E8E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD788", Offset = "0xFDD788")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x14E8ED8", Offset = "0x14E8ED8", VA = "0x14E8ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD798", Offset = "0xFDD798")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public static bool IsLogin
	{
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x14E8F48", Offset = "0x14E8F48", VA = "0x14E8F48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x14E8FBC", Offset = "0x14E8FBC", VA = "0x14E8FBC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public static bool GameStartStatus
	{
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x14E9038", Offset = "0x14E9038", VA = "0x14E9038")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E9")]
	public static RoomStateAgent.eRoomState CurrentGameRoomState
	{
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x14E9148", Offset = "0x14E9148", VA = "0x14E9148")]
		get
		{
			return default(RoomStateAgent.eRoomState);
		}
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x14E91B0", Offset = "0x14E91B0", VA = "0x14E91B0")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public static bool IsServer
	{
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x14E5CB4", Offset = "0x14E5CB4", VA = "0x14E5CB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EB")]
	public static e_Server_Type ServerType
	{
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x14E921C", Offset = "0x14E921C", VA = "0x14E921C")]
		get
		{
			return default(e_Server_Type);
		}
	}

	[Token(Token = "0x170000EC")]
	public static bool IsLive
	{
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x14E5890", Offset = "0x14E5890", VA = "0x14E5890")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000ED")]
	public static bool IsOnlyServer
	{
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x14E9294", Offset = "0x14E9294", VA = "0x14E9294")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EE")]
	public static string Version
	{
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x14E9324", Offset = "0x14E9324", VA = "0x14E9324")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EF")]
	public static string GameName
	{
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x14E939C", Offset = "0x14E939C", VA = "0x14E939C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F0")]
	public static GameModeType GameMode
	{
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x14E9414", Offset = "0x14E9414", VA = "0x14E9414")]
		get
		{
			return default(GameModeType);
		}
	}

	[Token(Token = "0x170000F1")]
	public static Battle GlobalBattle
	{
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x14E948C", Offset = "0x14E948C", VA = "0x14E948C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F2")]
	public static BattleManager GlobalBattleManager
	{
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x14E94F4", Offset = "0x14E94F4", VA = "0x14E94F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x14E955C", Offset = "0x14E955C", VA = "0x14E955C")]
	public static BattleData GetBattleData()
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x14E95C4", Offset = "0x14E95C4", VA = "0x14E95C4")]
	public static void SetBattleData(BattleData _battleData)
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x14E9634", Offset = "0x14E9634", VA = "0x14E9634")]
	public static void SetBattleInstance(Battle _battle, BattleManager _battleManager)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x14E96C4", Offset = "0x14E96C4", VA = "0x14E96C4")]
	public static void BattleReady()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x14EAA04", Offset = "0x14EAA04", VA = "0x14EAA04")]
	public static void BattleStart()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x14EB0D8", Offset = "0x14EB0D8", VA = "0x14EB0D8")]
	private static float GetBattleTimeIndex(int level)
	{
		return default(float);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x14EB168", Offset = "0x14EB168", VA = "0x14EB168")]
	public static void BattleEnd()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x14EB544", Offset = "0x14EB544", VA = "0x14EB544")]
	public static void StartVideo(bool status)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x14EB828", Offset = "0x14EB828", VA = "0x14EB828")]
	public static void StopVideo()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x14EA538", Offset = "0x14EA538", VA = "0x14EA538")]
	public static void SetNoHurtStateAllUnit(bool state)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x14EA6A4", Offset = "0x14EA6A4", VA = "0x14EA6A4")]
	private static void ReviveAllPlayer()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x14EBAFC", Offset = "0x14EBAFC", VA = "0x14EBAFC")]
	public static void RevivePlayer(WUnit unit, bool isPlayReviveAudio = false)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x14EBD38", Offset = "0x14EBD38", VA = "0x14EBD38")]
	public GameWorld()
	{
	}
}
[Token(Token = "0x20001B9")]
public class GuidTeleporter : MonoBehaviour
{
	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<CharacterMono> recordCharacterList;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool checkView;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float viewToTeleporter;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool passed;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x14EF124", Offset = "0x14EF124", VA = "0x14EF124", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x14EF314", Offset = "0x14EF314", VA = "0x14EF314")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x14EF344", Offset = "0x14EF344", VA = "0x14EF344")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x14EF3B4", Offset = "0x14EF3B4", VA = "0x14EF3B4", Slot = "5")]
	protected virtual void SetState(bool state)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x14EF3E8", Offset = "0x14EF3E8", VA = "0x14EF3E8", Slot = "6")]
	protected virtual bool CheckRightView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x14EF544", Offset = "0x14EF544", VA = "0x14EF544", Slot = "7")]
	public virtual bool CheckReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x14EF628", Offset = "0x14EF628", VA = "0x14EF628", Slot = "8")]
	protected virtual void ServerCheckPlayerTrigger(Collider collider, bool enter)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x14EF754", Offset = "0x14EF754", VA = "0x14EF754")]
	private CharacterMono GetCharMono(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x14EF8AC", Offset = "0x14EF8AC", VA = "0x14EF8AC")]
	public GuidTeleporter()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x14EF938", Offset = "0x14EF938", VA = "0x14EF938")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD7A8", Offset = "0xFDD7A8")]
	private bool <Init>b__4_0(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x14EF9F0", Offset = "0x14EF9F0", VA = "0x14EF9F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD7B8", Offset = "0xFDD7B8")]
	private void <Init>b__4_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x14EFA00", Offset = "0x14EFA00", VA = "0x14EFA00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD7C8", Offset = "0xFDD7C8")]
	private bool <Init>b__4_2(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x14EFAB8", Offset = "0x14EFAB8", VA = "0x14EFAB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD7D8", Offset = "0xFDD7D8")]
	private void <Init>b__4_3(Collider collider1)
	{
	}
}
[Token(Token = "0x20001BA")]
public class GuideController : MonoBehaviour
{
	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuideVideoPlayer VideoPlayer;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GuidTeleporter GuidTeleporter;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform LockSignRoot;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform SignPrefab;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BattleRoomDoorLockSign LockSign;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform GuidToArrow;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action playerVideoEnd;

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x14F0354", Offset = "0x14F0354", VA = "0x14F0354")]
	public void Init()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x14F0794", Offset = "0x14F0794", VA = "0x14F0794")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x14F0798", Offset = "0x14F0798", VA = "0x14F0798")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x14F0884", Offset = "0x14F0884", VA = "0x14F0884")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x14F07F0", Offset = "0x14F07F0", VA = "0x14F07F0")]
	public void ShowGuidTeleporter(bool isShow)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x14F09F8", Offset = "0x14F09F8", VA = "0x14F09F8")]
	public void PlayVideo(Action endCallBack)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x14F07D8", Offset = "0x14F07D8", VA = "0x14F07D8")]
	public void StopVideo()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x14F0BF4", Offset = "0x14F0BF4", VA = "0x14F0BF4")]
	public void PlayEnd(VideoPlayer player)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x14F04D4", Offset = "0x14F04D4", VA = "0x14F04D4")]
	private void InitGuidSign()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x14F0840", Offset = "0x14F0840", VA = "0x14F0840")]
	public void ShowGuidSign(bool isShow)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x14F0C38", Offset = "0x14F0C38", VA = "0x14F0C38")]
	public void ShowSignProgress(bool isShow)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x14F0C5C", Offset = "0x14F0C5C", VA = "0x14F0C5C")]
	public bool CheckSignCon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x14F0C7C", Offset = "0x14F0C7C", VA = "0x14F0C7C")]
	public bool CheckSignOk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x14F0C98", Offset = "0x14F0C98", VA = "0x14F0C98")]
	private void DoBeginSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x14F0ED8", Offset = "0x14F0ED8", VA = "0x14F0ED8")]
	private void DoBreakSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x14F0888", Offset = "0x14F0888", VA = "0x14F0888")]
	private void DoUpdateLockSign()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x14F0D2C", Offset = "0x14F0D2C", VA = "0x14F0D2C")]
	public int GetFirstSignTriggerOwnerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x14F0F50", Offset = "0x14F0F50", VA = "0x14F0F50")]
	public GuideController()
	{
	}
}
[Token(Token = "0x20001BB")]
public enum e_GuideStepStatus
{
	[Token(Token = "0x4000AB6")]
	Stop,
	[Token(Token = "0x4000AB7")]
	Start,
	[Token(Token = "0x4000AB8")]
	DelayTime,
	[Token(Token = "0x4000AB9")]
	GuidVirtualDoor,
	[Token(Token = "0x4000ABA")]
	Video,
	[Token(Token = "0x4000ABB")]
	GuidEnd
}
[Token(Token = "0x20001BC")]
public enum e_GuideTip_Type
{
	[Token(Token = "0x4000ABD")]
	EnterStandPoint = 5,
	[Token(Token = "0x4000ABE")]
	HitSignBall = 10,
	[Token(Token = "0x4000ABF")]
	Video = 15,
	[Token(Token = "0x4000AC0")]
	Select = 16,
	[Token(Token = "0x4000AC1")]
	GotoRoomPoint = 20
}
[Token(Token = "0x20001BD")]
public class GuideManager : Singleton<GuideManager>
{
	[Token(Token = "0x20004E5")]
	public class GuidTip
	{
		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsLoop;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsDelayClose;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Time;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioEvent aEvent;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uiSay;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float preDelayTime;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float RunningTime;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isAudioFinish;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 playAudioPos;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WwiseDefine audioObj;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isPreDelay;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float posH;

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x14F266C", Offset = "0x14F266C", VA = "0x14F266C")]
		public void Start(Vector3 pos, float posH)
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x14F24C0", Offset = "0x14F24C0", VA = "0x14F24C0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x14F3598", Offset = "0x14F3598", VA = "0x14F3598")]
		public void AudioFinish()
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x14F33C8", Offset = "0x14F33C8", VA = "0x14F33C8")]
		private void DoStart(Vector3 pos, float posH)
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x14F3180", Offset = "0x14F3180", VA = "0x14F3180")]
		public void Update(float dltTime)
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x14F25DC", Offset = "0x14F25DC", VA = "0x14F25DC")]
		public GuidTip()
		{
		}
	}

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsStart;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GuideController guidCtrl;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GuidTipUI tipUI;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private e_GuideStepStatus GuidStepStatus;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool signStatus;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float delayTime;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float delayRunningTime;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GuidTip curGuidTip;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float sayDelayTime;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float sayDelayRunningTime;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioEvent deathBackAudio;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WwiseDefine dbAudioObj;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string deathBackSay;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine deathBackGuidDelay;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float dbDelayTime;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string commonTempTipSay;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine tempTipDelay;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float tempTipDelayTime;

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x14F0F58", Offset = "0x14F0F58", VA = "0x14F0F58")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x14F11F8", Offset = "0x14F11F8", VA = "0x14F11F8")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x14EB088", Offset = "0x14EB088", VA = "0x14EB088")]
	public void Start()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x14EA9BC", Offset = "0x14EA9BC", VA = "0x14EA9BC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x14F1304", Offset = "0x14F1304", VA = "0x14F1304")]
	private void DoStart()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x14F14E8", Offset = "0x14F14E8", VA = "0x14F14E8")]
	private void DoStop()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x14F139C", Offset = "0x14F139C", VA = "0x14F139C")]
	private void SendGuidStepStatus(e_GuideStepStatus stepStatus)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x14F16D0", Offset = "0x14F16D0", VA = "0x14F16D0")]
	public void SyncGuidStepStatus(e_GuideStepStatus stepStatus)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x14F14D0", Offset = "0x14F14D0", VA = "0x14F14D0")]
	private void TimeDelayBegin()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x14F1DA4", Offset = "0x14F1DA4", VA = "0x14F1DA4")]
	private void TimeDelayUpdate()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x14F1DF8", Offset = "0x14F1DF8", VA = "0x14F1DF8")]
	private void TimeDelayEnd()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x14F1ED8", Offset = "0x14F1ED8", VA = "0x14F1ED8")]
	private void DoorLockSignEnd()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x14F1F14", Offset = "0x14F1F14", VA = "0x14F1F14")]
	private void SayVideoUpdate()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x14F1F70", Offset = "0x14F1F70", VA = "0x14F1F70")]
	private void SayVideoDelayEnd()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x14F2014", Offset = "0x14F2014", VA = "0x14F2014")]
	public bool CheckVirtualDoorReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x14F1580", Offset = "0x14F1580", VA = "0x14F1580")]
	public void ResetVirtualDoor()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x14F1820", Offset = "0x14F1820", VA = "0x14F1820")]
	public void SetSignActive(bool active)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x14F20CC", Offset = "0x14F20CC", VA = "0x14F20CC")]
	public void SetProgressActive(bool active)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x14F2060", Offset = "0x14F2060", VA = "0x14F2060")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x14F208C", Offset = "0x14F208C", VA = "0x14F208C")]
	private void ResetDoorLockSign()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x14F20E8", Offset = "0x14F20E8", VA = "0x14F20E8")]
	private void UpdateCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x14F2194", Offset = "0x14F2194", VA = "0x14F2194")]
	public void SyncSignStatus(int roomId, eDoor_LockSign_Net_Status status)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x14F1F94", Offset = "0x14F1F94", VA = "0x14F1F94")]
	public void PlayVideoEnd()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x14F1870", Offset = "0x14F1870", VA = "0x14F1870")]
	public void ShowGuidTip(e_GuideTip_Type type)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x14E7494", Offset = "0x14E7494", VA = "0x14E7494")]
	public void StopGuidTip()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x14F27F0", Offset = "0x14F27F0", VA = "0x14F27F0")]
	public void SetGuidTipUI(bool isActive, string say = "", float posH = 0f)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x14F2AB0", Offset = "0x14F2AB0", VA = "0x14F2AB0")]
	public void ShowDeathBackGuid()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x14F2AB4", Offset = "0x14F2AB4", VA = "0x14F2AB4")]
	private void DoShowDBGuid()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x14F14E4", Offset = "0x14F14E4", VA = "0x14F14E4")]
	public void HideDeathBackGuid()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x14F2D38", Offset = "0x14F2D38", VA = "0x14F2D38")]
	private void StopDBDelayCoroutine()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x14F2C8C", Offset = "0x14F2C8C", VA = "0x14F2C8C")]
	private bool IsGameFighting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x14F2DC0", Offset = "0x14F2DC0", VA = "0x14F2DC0")]
	public void ShowCommonTempTip(bool isActive)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x14F2E70", Offset = "0x14F2E70", VA = "0x14F2E70")]
	public void SetTempTip(bool isActive, string str)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x14F3060", Offset = "0x14F3060", VA = "0x14F3060")]
	public void SyncCommonTempTip(bool isActive)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x14F1D2C", Offset = "0x14F1D2C", VA = "0x14F1D2C")]
	private void GuidEnd()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x14F306C", Offset = "0x14F306C", VA = "0x14F306C")]
	private void CharacterBackRoom(FlowNode node)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x14F2414", Offset = "0x14F2414", VA = "0x14F2414")]
	private bool IsGameStatusEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x14F3070", Offset = "0x14F3070", VA = "0x14F3070")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x14F32A8", Offset = "0x14F32A8", VA = "0x14F32A8")]
	public GuideManager()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x14F3370", Offset = "0x14F3370", VA = "0x14F3370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD7E8", Offset = "0xFDD7E8")]
	private void <SetTempTip>b__52_0()
	{
	}
}
[Token(Token = "0x20001BE")]
public class GuideVideoPlayer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5CC4", Offset = "0xFD5CC4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<VideoPlayer> <>9__17_0;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<VideoPlayer> <>9__17_1;

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x14F3ED0", Offset = "0x14F3ED0", VA = "0x14F3ED0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x14F3ED8", Offset = "0x14F3ED8", VA = "0x14F3ED8")]
		internal void <.ctor>b__17_0(VideoPlayer <p0>)
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x14F3EDC", Offset = "0x14F3EDC", VA = "0x14F3EDC")]
		internal void <.ctor>b__17_1(VideoPlayer <p0>)
		{
		}
	}

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Root;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string VideoName;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioEvent VAudio;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<VideoPlayer> OnStart;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<VideoPlayer> OnEnd;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WwiseDefine audioObj;

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x14F35A4", Offset = "0x14F35A4", VA = "0x14F35A4")]
	private void Init()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x14F044C", Offset = "0x14F044C", VA = "0x14F044C")]
	public void InitVideo()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x14F36A8", Offset = "0x14F36A8", VA = "0x14F36A8")]
	private void InitVideoLang(e_type_language language)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x14F39D8", Offset = "0x14F39D8", VA = "0x14F39D8")]
	private void EndOneClip(VideoPlayer player)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x14F3B38", Offset = "0x14F3B38", VA = "0x14F3B38")]
	private void _Play()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x14F3A3C", Offset = "0x14F3A3C", VA = "0x14F3A3C")]
	private void _Stop()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x14F0A2C", Offset = "0x14F0A2C", VA = "0x14F0A2C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x14F0BF0", Offset = "0x14F0BF0", VA = "0x14F0BF0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x14F3CC0", Offset = "0x14F3CC0", VA = "0x14F3CC0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDD7F8", Offset = "0xFDD7F8")]
	private void Play1()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x14F3CC4", Offset = "0x14F3CC4", VA = "0x14F3CC4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDD830", Offset = "0xFDD830")]
	private void Stop1()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x14F3CC8", Offset = "0x14F3CC8", VA = "0x14F3CC8")]
	public GuideVideoPlayer()
	{
	}
}
[Token(Token = "0x20001BF")]
public class LiveManager : Singleton<LiveManager>
{
	[Serializable]
	[Token(Token = "0x20004E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5CD4", Offset = "0xFD5CD4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<FlowNode> <>9__0_1;

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x14A9D30", Offset = "0x14A9D30", VA = "0x14A9D30")]
		public <>c()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x14A9D38", Offset = "0x14A9D38", VA = "0x14A9D38")]
		internal void <Init>b__0_1(FlowNode node)
		{
		}
	}

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WUnit PlayerUnit;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ILiveCameraDataCell cameraControl;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool SetFirstPersonCamera;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform handLeftModel;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform handRightModel;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator handAni_l;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator handAni_r;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerDeadRagdollTools ragdollTools;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isDie;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> preMashLayerList;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int changeSetMaskLayer;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EffectDefine momentumEffect;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EffectDefine momentumAddEffect;

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x148CF34", Offset = "0x148CF34", VA = "0x148CF34")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x148D364", Offset = "0x148D364", VA = "0x148D364")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x148D5B0", Offset = "0x148D5B0", VA = "0x148D5B0")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x148DA14", Offset = "0x148DA14", VA = "0x148DA14")]
	private void FirstPersonMode_Start(int site, ILiveCameraDataCell control)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x148E178", Offset = "0x148E178", VA = "0x148E178")]
	private void playerStyleChange()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x148E280", Offset = "0x148E280", VA = "0x148E280")]
	private void UnPlayerStyleChange()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x148E380", Offset = "0x148E380", VA = "0x148E380")]
	private void OnPlayerLayer(WUnit player)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x148DFA8", Offset = "0x148DFA8", VA = "0x148DFA8")]
	private void OnWeaponChange()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x148E3BC", Offset = "0x148E3BC", VA = "0x148E3BC")]
	private void OnWeaponClear(WUnit unit)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x148DDAC", Offset = "0x148DDAC", VA = "0x148DDAC")]
	private void SetPlayerRenderActive(WUnit player, bool isActive)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x148E514", Offset = "0x148E514", VA = "0x148E514")]
	private void FirstPersonMode_State()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x148E518", Offset = "0x148E518", VA = "0x148E518")]
	private void FirstPersonMode_StateClear()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x148D368", Offset = "0x148D368", VA = "0x148D368")]
	private void FirstPersonMode_Clear()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x148E624", Offset = "0x148E624", VA = "0x148E624")]
	private void FirstPersonMode_Hit(WUnit hurter, HitResultData data)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x148E57C", Offset = "0x148E57C", VA = "0x148E57C")]
	private void FirstPersonMode_HitClear()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x148E7EC", Offset = "0x148E7EC", VA = "0x148E7EC")]
	private void FirstPersonMode_Die(int playerId)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x148E80C", Offset = "0x148E80C", VA = "0x148E80C")]
	private void FirstPersonMode_DieClear(WUnit unit)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x148E60C", Offset = "0x148E60C", VA = "0x148E60C")]
	private void FirstPersonMode_DieClear()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x148E830", Offset = "0x148E830", VA = "0x148E830")]
	public void FirstPersonMode_ReviveUI(int playerId)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x148D5B4", Offset = "0x148D5B4", VA = "0x148D5B4")]
	private void FirstPersonMode_Update()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x148DF70", Offset = "0x148DF70", VA = "0x148DF70")]
	public void SetCurPlayerWeaponActive(bool isActive)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x148E850", Offset = "0x148E850", VA = "0x148E850")]
	public LiveManager()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x148E918", Offset = "0x148E918", VA = "0x148E918")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD868", Offset = "0xFDD868")]
	private void <Init>b__0_2(e_LiveCamera_Model_Type type, int site, LiveCameraConfigData data, ILiveCameraDataCell control)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x148E9D4", Offset = "0x148E9D4", VA = "0x148E9D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD878", Offset = "0xFDD878")]
	private void <Init>b__0_3(e_LiveCamera_Model_Type type, int site, LiveCameraConfigData data)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x148E9D8", Offset = "0x148E9D8", VA = "0x148E9D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD888", Offset = "0xFDD888")]
	private void <Init>b__0_0(e_type_role type, WUnit attacker, WUnit hurter, HitResultData r)
	{
	}
}
[Token(Token = "0x20001C0")]
public class RoomStateAgent
{
	[Token(Token = "0x20004E8")]
	public enum eRoomState
	{
		[Token(Token = "0x4001C4B")]
		None,
		[Token(Token = "0x4001C4C")]
		Ready,
		[Token(Token = "0x4001C4D")]
		Movie,
		[Token(Token = "0x4001C4E")]
		Fighting,
		[Token(Token = "0x4001C4F")]
		FightEnd,
		[Token(Token = "0x4001C50")]
		FightStart
	}

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RoomBaseState activeState;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private eRoomState activeStateType;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<eRoomState, RoomBaseState> stateList;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private eRoomState preStateType;

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x156B454", Offset = "0x156B454", VA = "0x156B454")]
	public eRoomState STPreStateType()
	{
		return default(eRoomState);
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x156B45C", Offset = "0x156B45C", VA = "0x156B45C")]
	public void Init(Battle battle, ServerBattleRoom battleRoom)
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x156B740", Offset = "0x156B740", VA = "0x156B740")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x156B758", Offset = "0x156B758", VA = "0x156B758")]
	public void DoFixUpdate(float fixDeltaTime)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x156B770", Offset = "0x156B770", VA = "0x156B770")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x156B788", Offset = "0x156B788", VA = "0x156B788")]
	private void DoStateExit()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x156B7C8", Offset = "0x156B7C8", VA = "0x156B7C8")]
	private void DoInit()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x156B6A8", Offset = "0x156B6A8", VA = "0x156B6A8")]
	private void Register(eRoomState type, RoomBaseState st)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x156B7E0", Offset = "0x156B7E0", VA = "0x156B7E0")]
	private void UnRegister(eRoomState type)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x156B7B0", Offset = "0x156B7B0", VA = "0x156B7B0")]
	public eRoomState GetStateType()
	{
		return default(eRoomState);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x156B8D8", Offset = "0x156B8D8", VA = "0x156B8D8")]
	private RoomBaseState GetState()
	{
		return null;
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x156B8E0", Offset = "0x156B8E0", VA = "0x156B8E0")]
	private RoomBaseState GetStateByType(eRoomState type)
	{
		return null;
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x156B964", Offset = "0x156B964", VA = "0x156B964")]
	private void SetActiveState(eRoomState nextType)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x156B870", Offset = "0x156B870", VA = "0x156B870")]
	private bool IsHasState(eRoomState nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x156B9F4", Offset = "0x156B9F4", VA = "0x156B9F4")]
	public void ChangeRoomState(eRoomState _nextState)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x156BA60", Offset = "0x156BA60", VA = "0x156BA60")]
	public RoomStateAgent()
	{
	}
}
[Token(Token = "0x20001C1")]
public class NPCSpawnManager : Singleton<NPCSpawnManager>
{
	[Token(Token = "0x20004E9")]
	public struct SpawnPointInfo
	{
		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int groupId;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform transform;
	}

	[Token(Token = "0x20004EA")]
	public class SoldierNumberInfo
	{
		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private e_group_type groupId;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int count;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int maxCount;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int coolingTime;

		[Token(Token = "0x170003F0")]
		public e_group_type GroupId
		{
			[Token(Token = "0x600260B")]
			[Address(RVA = "0x1497B8C", Offset = "0x1497B8C", VA = "0x1497B8C")]
			get
			{
				return default(e_group_type);
			}
			[Token(Token = "0x600260C")]
			[Address(RVA = "0x1497B94", Offset = "0x1497B94", VA = "0x1497B94")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public int Count
		{
			[Token(Token = "0x600260D")]
			[Address(RVA = "0x1497B9C", Offset = "0x1497B9C", VA = "0x1497B9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600260E")]
			[Address(RVA = "0x1497BA4", Offset = "0x1497BA4", VA = "0x1497BA4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public int CoolingTime
		{
			[Token(Token = "0x600260F")]
			[Address(RVA = "0x1497BAC", Offset = "0x1497BAC", VA = "0x1497BAC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002610")]
			[Address(RVA = "0x1497BB4", Offset = "0x1497BB4", VA = "0x1497BB4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x1497BBC", Offset = "0x1497BBC", VA = "0x1497BBC")]
		public SoldierNumberInfo(e_group_type _groupId, int _maxcount)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x1497BF8", Offset = "0x1497BF8", VA = "0x1497BF8")]
		public bool isMax()
		{
			return default(bool);
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x1497C08", Offset = "0x1497C08", VA = "0x1497C08")]
		public void add()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x1497C18", Offset = "0x1497C18", VA = "0x1497C18")]
		public void reduce()
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x1497C28", Offset = "0x1497C28", VA = "0x1497C28")]
		public void setCoolingTime(int time)
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x1497C30", Offset = "0x1497C30", VA = "0x1497C30")]
		public void UpdateCoolingTime(int millisDeltaTime)
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x1497CC0", Offset = "0x1497CC0", VA = "0x1497CC0")]
		public bool isCoolingEnd()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20004EB")]
	public class Soldier3SpawnPathInfo
	{
		[Token(Token = "0x2000892")]
		public class CoolTime
		{
			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public e_group_type groupType;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int timer;

			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0x1497944", Offset = "0x1497944", VA = "0x1497944")]
			public CoolTime()
			{
			}
		}

		[Token(Token = "0x2000893")]
		public class GroupInfoCell
		{
			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0x1497B84", Offset = "0x1497B84", VA = "0x1497B84")]
			public GroupInfoCell()
			{
			}
		}

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnPathInfo spawnPathInfo;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<e_group_type> groupList;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<e_group_type, int> curPointDic;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<e_group_type, int> canMovePointDic;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<e_group_type, bool> curSpawnInfo;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<e_group_type, WUnit> curUnitInfo;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<e_group_type, bool> curSuppressStatusDic;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<CoolTime> coolingTimes;

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x1495910", Offset = "0x1495910", VA = "0x1495910")]
		public void Init(SpawnPathInfo _spawnPathInfo)
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x1495268", Offset = "0x1495268", VA = "0x1495268")]
		public bool CheckIsCanMove(e_group_type groupType)
		{
			return default(bool);
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x1495430", Offset = "0x1495430", VA = "0x1495430")]
		public int GetMovePoint(e_group_type groupType)
		{
			return default(int);
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x14956B4", Offset = "0x14956B4", VA = "0x14956B4")]
		public void SetCurPoint(e_group_type groupType, int id)
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x1496DB0", Offset = "0x1496DB0", VA = "0x1496DB0")]
		private bool isCoolingEnd(e_group_type gType)
		{
			return default(bool);
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x1496EC8", Offset = "0x1496EC8", VA = "0x1496EC8")]
		public bool CheckIsSpawn(e_group_type groupType)
		{
			return default(bool);
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x1496F60", Offset = "0x1496F60", VA = "0x1496F60")]
		public bool CheckSelfSuppressStatus(e_group_type selfGroupType)
		{
			return default(bool);
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x1495034", Offset = "0x1495034", VA = "0x1495034")]
		public bool CheckIsSuppressHostile(e_group_type selfGroupType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x1496FE4", Offset = "0x1496FE4", VA = "0x1496FE4")]
		public int GetSpawnPointId(e_group_type groupType)
		{
			return default(int);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x1496FFC", Offset = "0x1496FFC", VA = "0x1496FFC")]
		public int GetModleId(e_group_type groupType)
		{
			return default(int);
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x1497010", Offset = "0x1497010", VA = "0x1497010")]
		private void Spawn(e_group_type groupType)
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x14970E8", Offset = "0x14970E8", VA = "0x14970E8")]
		public void Destory(WUnit unit)
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x14962C4", Offset = "0x14962C4", VA = "0x14962C4")]
		public void AddUnit(WUnit unit)
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x1495158", Offset = "0x1495158", VA = "0x1495158")]
		public WUnit GetTargetUnit(e_group_type groupType)
		{
			return null;
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x14977D4", Offset = "0x14977D4", VA = "0x14977D4")]
		private void OnDeadCB(WUnit unit)
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x14978B4", Offset = "0x14978B4", VA = "0x14978B4")]
		private void SetCoolingTime(e_group_type gType, int time)
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x1497188", Offset = "0x1497188", VA = "0x1497188")]
		private void SetMovePoint(e_group_type destoryGroupType)
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x1495AD0", Offset = "0x1495AD0", VA = "0x1495AD0")]
		public void Update(int millisDeltaTime)
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x149794C", Offset = "0x149794C", VA = "0x149794C")]
		private void UpdateCoolingTime(int millisDeltaTime)
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x1497A64", Offset = "0x1497A64", VA = "0x1497A64")]
		private void UpdateSpawn()
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x14975CC", Offset = "0x14975CC", VA = "0x14975CC")]
		private void UpdateSuppressStatus()
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x1495774", Offset = "0x1495774", VA = "0x1495774")]
		public Soldier3SpawnPathInfo()
		{
		}
	}

	[Token(Token = "0x20004EC")]
	public class SpawnPathInfo
	{
		[Serializable]
		[Token(Token = "0x2000894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD60A0", Offset = "0xFD60A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<int> <>9__4_0;

			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0x1497D38", Offset = "0x1497D38", VA = "0x1497D38")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0x1497D40", Offset = "0x1497D40", VA = "0x1497D40")]
			internal int <Init>b__4_0(int x, int y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int pathId;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> spawnList;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, List<int>> groupPathDic;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<int, int> groupSpawnPoint;

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x1496600", Offset = "0x1496600", VA = "0x1496600")]
		public void Init()
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x1496D30", Offset = "0x1496D30", VA = "0x1496D30")]
		public int GetSpawnPoint(int groupId)
		{
			return default(int);
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x149651C", Offset = "0x149651C", VA = "0x149651C")]
		public SpawnPathInfo()
		{
		}
	}

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x4000AEE")]
	private const int Soldier1_Id_a = 4401001;

	[Token(Token = "0x4000AEF")]
	private const int Soldier2_Id_a = 4403001;

	[Token(Token = "0x4000AF0")]
	private const int Soldier3_Id_a = 4404001;

	[Token(Token = "0x4000AF1")]
	private const int Commander_Id_a = 4402001;

	[Token(Token = "0x4000AF2")]
	private const int Soldier1_Id_b = 4401002;

	[Token(Token = "0x4000AF3")]
	private const int Soldier2_Id_b = 4403002;

	[Token(Token = "0x4000AF4")]
	private const int Soldier3_Id_b = 4404002;

	[Token(Token = "0x4000AF5")]
	private const int Commander_Id_b = 4402002;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, SpawnPointInfo> spawnCommanderTransHash;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, List<int>> commanderSpawnTransGroupDic;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<e_group_type> deadCommanderGroupList;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, SpawnPointInfo> soldierSpawnTransHash;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, List<int>> soldierSpawnTransGroupDic;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SoldierNumberInfo> soldierGroundNumberInfoList;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, SpawnPointInfo> soldier2SpawnTransHash;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, List<int>> soldier2SpawnTransGroupDic;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<SoldierNumberInfo> soldier2NumberInfoList;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int soldierGroundMaxCount;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Soldier3SpawnPathInfo> Soldier3SpawnPathInfoList;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, Soldier3SpawnPathInfo> Soldier3SpawnPathInfoDic;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<WUnit, Soldier3SpawnPathInfo> Soldier3UnitSpawnPathInfoDic;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<HostServer.NpcSpawnInfo> tempNPCSpawnList;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<int, List<Transform>> soldierGroundTargetPointDic;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<int, SpawnPathInfo> Soldier3SpawnInfoHash;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<int, Transform> Soldier3SpawnTransHash;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<int, int> pointToPathDic;

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x1492644", Offset = "0x1492644", VA = "0x1492644")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x14942BC", Offset = "0x14942BC", VA = "0x14942BC")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x14942C4", Offset = "0x14942C4", VA = "0x14942C4")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x14946A4", Offset = "0x14946A4", VA = "0x14946A4")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x14946AC", Offset = "0x14946AC", VA = "0x14946AC")]
	public void DoUpdate(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x14942F0", Offset = "0x14942F0", VA = "0x14942F0")]
	private void ProcessorSpawnCommander()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1494C08", Offset = "0x1494C08", VA = "0x1494C08")]
	private void OnCommanderDeadCB(WUnit unit)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x1494D14", Offset = "0x1494D14", VA = "0x1494D14")]
	private bool CheckCommanderDead(e_group_type gType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x1494A88", Offset = "0x1494A88", VA = "0x1494A88")]
	private int RandomCommanderSpawnPoint(int groupId)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x1494D7C", Offset = "0x1494D7C", VA = "0x1494D7C")]
	private void OnSoldierDeadCB(WUnit unit)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x1494E4C", Offset = "0x1494E4C", VA = "0x1494E4C")]
	private void OnSoldier2DeadCB(WUnit unit)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x1494F1C", Offset = "0x1494F1C", VA = "0x1494F1C")]
	public Soldier3SpawnPathInfo GetSpawnPathRTInfo(int pointId)
	{
		return null;
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x1494F9C", Offset = "0x1494F9C", VA = "0x1494F9C")]
	public bool CheckSoldier3IsSuppressOtherGroup(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x14950BC", Offset = "0x14950BC", VA = "0x14950BC")]
	public WUnit GetSoldier3Target(WUnit unit, e_group_type type)
	{
		return null;
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x14951D0", Offset = "0x14951D0", VA = "0x14951D0")]
	public bool CheckSoldier3IsCanMove(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x14952F8", Offset = "0x14952F8", VA = "0x14952F8")]
	public Transform GetSoldier3MovePoint(WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x1495498", Offset = "0x1495498", VA = "0x1495498")]
	private int GetSoldier3SpawnTransId(Transform point)
	{
		return default(int);
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x1495600", Offset = "0x1495600", VA = "0x1495600")]
	public void SetSoldier3SuppressPoint(WUnit unit, Transform point)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x1494394", Offset = "0x1494394", VA = "0x1494394")]
	private void ProcessorSoldierInit()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x14946D0", Offset = "0x14946D0", VA = "0x14946D0")]
	private void ProcessorSpawnSoldier(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x1495B04", Offset = "0x1495B04", VA = "0x1495B04")]
	private int RandomGroundSoldierSpawnPoint(int groupId)
	{
		return default(int);
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x1495BC0", Offset = "0x1495BC0", VA = "0x1495BC0")]
	private int RandomSoldier2SpawnPoint(int groupId)
	{
		return default(int);
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x1494B44", Offset = "0x1494B44", VA = "0x1494B44")]
	private void AddSpawnNPCList(int npcId, int spawnPointId, int groupId)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x14947DC", Offset = "0x14947DC", VA = "0x14947DC")]
	private void ProcessorSpawnNPCNet()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x14927A0", Offset = "0x14927A0", VA = "0x14927A0")]
	private void InitCommanderSpawnTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x1492D20", Offset = "0x1492D20", VA = "0x1492D20")]
	private void InitSpawnTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x14932A0", Offset = "0x14932A0", VA = "0x14932A0")]
	private void InitSoldierGroundTargetTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x149373C", Offset = "0x149373C", VA = "0x149373C")]
	private void InitSoldier2SpawnTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x14963EC", Offset = "0x14963EC", VA = "0x14963EC")]
	public Transform RandomSoldierGroundTargetPoint(int groupId)
	{
		return null;
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x1493CBC", Offset = "0x1493CBC", VA = "0x1493CBC")]
	private void InitSoldier3SpawnTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x1495C7C", Offset = "0x1495C7C", VA = "0x1495C7C")]
	public WUnit SpawnNPC(int objId, int npcId, int spawnPointId, int groupId)
	{
		return null;
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x1496970", Offset = "0x1496970", VA = "0x1496970")]
	public NPCSpawnManager()
	{
	}
}
[Token(Token = "0x20001C2")]
public class ServerBattleManager : Singleton<ServerBattleManager>
{
	[Token(Token = "0x4000B08")]
	private const int SPAWN_START_PLAYER_ID = 1;

	[Token(Token = "0x4000B09")]
	private const int SPAWN_START_AI_PLAYER_ID = 100;

	[Token(Token = "0x4000B0A")]
	private const int SPAWN_START_MONSTER_ID = 1000000;

	[Token(Token = "0x4000B0B")]
	private const int SPAWN_START_NPC_ID = 2000000;

	[Token(Token = "0x4000B0C")]
	private const int SPAWN_START_BUFF_ID = 3000000;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int playerId;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int aiPlayerId;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int monsterId;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int npcId;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int buffId;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ServerBattleRoom _battleRoom;

	[Token(Token = "0x170000F3")]
	public ServerBattleRoom BattleRoom
	{
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1406934", Offset = "0x1406934", VA = "0x1406934")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x14066E0", Offset = "0x14066E0", VA = "0x14066E0")]
	public int GetSpawnPlayerID()
	{
		return default(int);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x14067AC", Offset = "0x14067AC", VA = "0x14067AC")]
	public int GetSpawnAIPlayerID()
	{
		return default(int);
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x1406878", Offset = "0x1406878", VA = "0x1406878")]
	public int GetSpawnMonsterID()
	{
		return default(int);
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x140688C", Offset = "0x140688C", VA = "0x140688C")]
	public int GetSpawnNpcID()
	{
		return default(int);
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x14068A0", Offset = "0x14068A0", VA = "0x14068A0")]
	public int GetSpawnBuffID()
	{
		return default(int);
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x14068B4", Offset = "0x14068B4", VA = "0x14068B4")]
	public void ResetObjectID()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x14068D0", Offset = "0x14068D0", VA = "0x14068D0")]
	public bool IsPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x14068E0", Offset = "0x14068E0", VA = "0x14068E0")]
	public bool IsRealityPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x14068F0", Offset = "0x14068F0", VA = "0x14068F0")]
	public bool IsAIPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x1406900", Offset = "0x1406900", VA = "0x1406900")]
	public bool IsMonster(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x1406920", Offset = "0x1406920", VA = "0x1406920")]
	public bool IsNpc(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x140693C", Offset = "0x140693C", VA = "0x140693C")]
	public void CreateBattleRoom(Battle battle)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x1406B94", Offset = "0x1406B94", VA = "0x1406B94")]
	private void DoRoomInit()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x1406DC4", Offset = "0x1406DC4", VA = "0x1406DC4")]
	public void DoRoomExit()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x140700C", Offset = "0x140700C", VA = "0x140700C")]
	public void DoRoomUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x140703C", Offset = "0x140703C", VA = "0x140703C")]
	public void DoRoomFixedUpdate()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x1407090", Offset = "0x1407090", VA = "0x1407090")]
	public void DoRoomLateUpdate()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x14070C0", Offset = "0x14070C0", VA = "0x14070C0")]
	public ServerBattleManager()
	{
	}
}
[Token(Token = "0x20001C3")]
public class ServerBattleRoom
{
	[Token(Token = "0x20004ED")]
	public class PlayerReviveData
	{
		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float reviveTimer;

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x140756C", Offset = "0x140756C", VA = "0x140756C")]
		public PlayerReviveData(WUnit _unit, float _reviveTimer)
		{
		}
	}

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Battle battle;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RoomStateAgent roomStateAgent;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlayerReviveData> playerResurgenceTimer;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public e_group_type winGroup;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameDiffculty gameDiffculty;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<WUnit> joinGamePlayerList;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<HostServer.UnitTransform> tempUnitTransformList;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<HostServer.UpdateAimIKInfoCell> tempUpdateAimIKInfoCellList;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isPlayVideo;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool isEnd;

	[Token(Token = "0x170000F4")]
	public bool isStartFight
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x14071EC", Offset = "0x14071EC", VA = "0x14071EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x1406A0C", Offset = "0x1406A0C", VA = "0x1406A0C")]
	public ServerBattleRoom(Battle _battle)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1406BA4", Offset = "0x1406BA4", VA = "0x1406BA4")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x1407028", Offset = "0x1407028", VA = "0x1407028")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x140707C", Offset = "0x140707C", VA = "0x140707C")]
	public void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x14070AC", Offset = "0x14070AC", VA = "0x14070AC")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x1406DF8", Offset = "0x1406DF8", VA = "0x1406DF8")]
	public void DoExit()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x1407148", Offset = "0x1407148", VA = "0x1407148")]
	public void ChangeRoomState(RoomStateAgent.eRoomState nextState)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x1407218", Offset = "0x1407218", VA = "0x1407218")]
	public RoomStateAgent.eRoomState GetCurRoomState()
	{
		return default(RoomStateAgent.eRoomState);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x140722C", Offset = "0x140722C", VA = "0x140722C")]
	public void OnStartOrStopGame(bool playVideo)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x14072F0", Offset = "0x14072F0", VA = "0x14072F0")]
	private void Instance_GameStatusEvent(bool videoStatus)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x14072F8", Offset = "0x14072F8", VA = "0x14072F8")]
	private void Instance_controlServerUI()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x1407470", Offset = "0x1407470", VA = "0x1407470")]
	private void Instance_skinCutScenes()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x1407564", Offset = "0x1407564", VA = "0x1407564")]
	private void Instance_startOrStopGame()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ServerHitManager
{
	[Token(Token = "0x20004EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5CE4", Offset = "0xFD5CE4")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit attacker;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit hurter;

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x14098DC", Offset = "0x14098DC", VA = "0x14098DC")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x140AED0", Offset = "0x140AED0", VA = "0x140AED0")]
		internal void <ProcessingHitDamageNotify_Monster>b__0(WUnit unit)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x140B150", Offset = "0x140B150", VA = "0x140B150")]
		internal void <ProcessingHitDamageNotify_Monster>b__1()
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x140B210", Offset = "0x140B210", VA = "0x140B210")]
		internal void <ProcessingHitDamageNotify_Monster>b__2()
		{
		}
	}

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<e_type_role, WUnit, WUnit, HitResultData> hitMessage;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<e_type_role, WUnit, WUnit, HitResultData> hitPreMessage;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<WUnit, WUnit, int, int> damageProxy;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<e_HitEffect_type> tempTypes;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Array typeValues;

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x14075B4", Offset = "0x14075B4", VA = "0x14075B4")]
	public static bool BulletHit(Bullet bullet, Vector3 hitPos, GameObject targetObject, int bulletDamage = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x1407D00", Offset = "0x1407D00", VA = "0x1407D00")]
	private static bool CheckCanProcessingAttacks(WUnit attacker, WUnit hueter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x14081FC", Offset = "0x14081FC", VA = "0x14081FC")]
	public static bool MonsterSuicide(WUnit suicide)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x14085F0", Offset = "0x14085F0", VA = "0x14085F0")]
	public static bool UnitHurt(WUnit attacker, WUnit hurter, int damage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x1408ACC", Offset = "0x1408ACC", VA = "0x1408ACC")]
	public static bool MonsterAttack(WUnit attacker, WUnit target, int damage, Vector3 hitPos, Vector3 dir, e_Attack_type atkType = e_Attack_type.Normal, e_HitEffect_type effectType = e_HitEffect_type.Normal, bool isGroupDamage = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x1408CD8", Offset = "0x1408CD8", VA = "0x1408CD8")]
	public static void ProcessingHitDamageNotify_Monster(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x1409CA4", Offset = "0x1409CA4", VA = "0x1409CA4")]
	public static void ProcessingHitDamageNotify_Hero(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x140A47C", Offset = "0x140A47C", VA = "0x140A47C")]
	public static void ProcessingHitDamageNotify_Npc(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x14098F0", Offset = "0x14098F0", VA = "0x14098F0")]
	public static void HitHeroFloating(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x140A480", Offset = "0x140A480", VA = "0x140A480")]
	public static void HitHeroExpFloating(WUnit handleUnit, WUnit hurter, int exp)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x140A81C", Offset = "0x140A81C", VA = "0x140A81C")]
	public static void HandleS2CHitDamageNotify(HitResultData hitData)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x1407EEC", Offset = "0x1407EEC", VA = "0x1407EEC")]
	public static void HandleC2SHitDamageNotify(HitResultData hitData)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x140AB10", Offset = "0x140AB10", VA = "0x140AB10")]
	private static bool GetEnumToOne(e_HitEffect_type type, out e_HitEffect_type doType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x140A470", Offset = "0x140A470", VA = "0x140A470")]
	public static bool CheckAttackType(e_Attack_type source, e_Attack_type checkValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x14098E4", Offset = "0x14098E4", VA = "0x14098E4")]
	public static bool CheckHitEffectType(e_HitEffect_type source, e_HitEffect_type checkValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x1407E20", Offset = "0x1407E20", VA = "0x1407E20")]
	public static bool CheckGroupDamage(WUnit attacker, WUnit hurter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x140AE50", Offset = "0x140AE50", VA = "0x140AE50")]
	public ServerHitManager()
	{
	}
}
[Token(Token = "0x20001C5")]
public struct AreaSpawnInfo
{
	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int monsterId;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int time;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int areaId;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int pointId;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int spawnCount;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wave;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int suicideDelayTime;
}
[Token(Token = "0x20001C6")]
public enum AreaType
{
	[Token(Token = "0x4000B2B")]
	Monster,
	[Token(Token = "0x4000B2C")]
	End,
	[Token(Token = "0x4000B2D")]
	NoLimitMonster,
	[Token(Token = "0x4000B2E")]
	Action
}
[Token(Token = "0x20001C7")]
public class AreaWaveInfoData
{
	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int wave;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AreaSpawnInfo areaInfo;

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x160B9BC", Offset = "0x160B9BC", VA = "0x160B9BC")]
	public AreaWaveInfoData()
	{
	}
}
[Token(Token = "0x20001C8")]
public class AreaInfoData
{
	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int time;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int spawnDataIndex;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isFin;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AreaType type;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isAreaPos;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3 position;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Quaternion rotation;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<int, List<AreaSpawnInfo>> areaWave;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int areaWaveIndex;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<AreaSpawnInfo> curWaveInfoList;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float areaWaveBeginTime;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<AreaSpawnInfo> spanwDataList;

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x160B0D0", Offset = "0x160B0D0", VA = "0x160B0D0")]
	public AreaInfoData(int areaId, List<AreaSpawnInfo> spawnData)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x160B2FC", Offset = "0x160B2FC", VA = "0x160B2FC")]
	public AreaSpawnInfo GetSpawnData()
	{
		return default(AreaSpawnInfo);
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x160B37C", Offset = "0x160B37C", VA = "0x160B37C")]
	public bool IsFirstWave()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x160B38C", Offset = "0x160B38C", VA = "0x160B38C")]
	public bool IsEndWave()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x160B3F4", Offset = "0x160B3F4", VA = "0x160B3F4")]
	public void ChangeNextWave()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x160B4F8", Offset = "0x160B4F8", VA = "0x160B4F8")]
	public bool IsWaveSpawnFin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x160B558", Offset = "0x160B558", VA = "0x160B558")]
	public bool IsSpawnFin()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001C9")]
public class AreaInfo : MonoBehaviour
{
	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AreaType type;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> spawnPointRoots;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int time;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int spawnDataIndex;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool isSpawnFin;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent enterEvent;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<EludePoint> eludePointList;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] numChar;

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x160AE60", Offset = "0x160AE60", VA = "0x160AE60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x160B020", Offset = "0x160B020", VA = "0x160B020")]
	public void ResetArea()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x160B02C", Offset = "0x160B02C", VA = "0x160B02C")]
	public void EnterEventHandle()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x160B048", Offset = "0x160B048", VA = "0x160B048")]
	public AreaInfo()
	{
	}
}
[Token(Token = "0x20001CA")]
public class HideMeshRenderer : MonoBehaviour
{
	[Token(Token = "0x20004EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5CF4", Offset = "0xFD5CF4")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool state;

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x14F627C", Offset = "0x14F627C", VA = "0x14F627C")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x14F629C", Offset = "0x14F629C", VA = "0x14F629C")]
		internal void <init>b__0(Transform child)
		{
		}
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x14F6188", Offset = "0x14F6188", VA = "0x14F6188")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x14F6190", Offset = "0x14F6190", VA = "0x14F6190")]
	public void init(bool state)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x14F6284", Offset = "0x14F6284", VA = "0x14F6284")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDD898", Offset = "0xFDD898")]
	public void SetDisplay0()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x14F628C", Offset = "0x14F628C", VA = "0x14F628C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDD8D0", Offset = "0xFDD8D0")]
	public void SetDisplay1()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x14F6294", Offset = "0x14F6294", VA = "0x14F6294")]
	public HideMeshRenderer()
	{
	}
}
[Token(Token = "0x20001CB")]
public struct SpawnInfo
{
	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int time;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int pointId;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int monsterId;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int spawnCount;
}
[Token(Token = "0x20001CC")]
public struct SpawnSummonInfo
{
	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int time;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int pointId;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int monsterId;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int spawnCount;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int spawnTime;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int spawnParentsId;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 spawnPos;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion spawnRot;
}
[Token(Token = "0x20001CD")]
public class MonsterSpawnManager : Singleton<MonsterSpawnManager>
{
	[Serializable]
	[Token(Token = "0x20004F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5D04", Offset = "0xFD5D04")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<AreaSpawnInfo> <>9__68_1;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<int> <>9__68_0;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<AreaSpawnInfo> <>9__68_3;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<int> <>9__68_2;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Comparison<AreaSpawnInfo> <>9__68_5;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Comparison<int> <>9__68_4;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Comparison<AreaSpawnInfo> <>9__69_0;

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x14C09E0", Offset = "0x14C09E0", VA = "0x14C09E0")]
		public <>c()
		{
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x14C09E8", Offset = "0x14C09E8", VA = "0x14C09E8")]
		internal int <InitAreaSortSpawnList>b__68_1(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x14C09F8", Offset = "0x14C09F8", VA = "0x14C09F8")]
		internal int <InitAreaSortSpawnList>b__68_0(int data1, int data2)
		{
			return default(int);
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x14C0A00", Offset = "0x14C0A00", VA = "0x14C0A00")]
		internal int <InitAreaSortSpawnList>b__68_3(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x14C0A10", Offset = "0x14C0A10", VA = "0x14C0A10")]
		internal int <InitAreaSortSpawnList>b__68_2(int data1, int data2)
		{
			return default(int);
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x14C0A18", Offset = "0x14C0A18", VA = "0x14C0A18")]
		internal int <InitAreaSortSpawnList>b__68_5(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x14C0A28", Offset = "0x14C0A28", VA = "0x14C0A28")]
		internal int <InitAreaSortSpawnList>b__68_4(int data1, int data2)
		{
			return default(int);
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x14C0A30", Offset = "0x14C0A30", VA = "0x14C0A30")]
		internal int <InitSummonSpawnData>b__69_0(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isSpawnInit;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool spawnStart;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool spawnSummonStart;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int serverTotalCount;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7D48", Offset = "0xFD7D48")]
	private int <MaxSpawnAreaId>k__BackingField;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7D58", Offset = "0xFD7D58")]
	private int <MinSpawnAreaId>k__BackingField;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7D68", Offset = "0xFD7D68")]
	private int <CurSpawnAreaId>k__BackingField;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AreaInfoData mCurSpawnArea;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<AreaSpawnInfo>> areaSortSpawnList;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> areaSortIndexList;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AreaInfoData> curArea;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<AreaInfoData> finArea;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>> areaSortSummonSpawnDic;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<GameDiffculty, Dictionary<int, List<AreaSpawnInfo>>> difficultAreaSpawnData;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<GameDiffculty, List<int>> difficultAreaSpawnDataIndex;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<HostServer.MonsterSpawnInfo> tempMonsterSpawnList;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int oldTime;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int curTime;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int areaOldTime;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int areaCurTime;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<int, int> summonDic;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int summonAreaId;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<int, AreaInfo> areaInfoList;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<int, Dictionary<int, Transform>> areaPointList;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int areaSortListIndex;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<int> AreaChangeFirstWaveCallback;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int maxCount;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int clientTotalCount;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform monsterRoot;

	[Token(Token = "0x170000F5")]
	public int MaxSpawnAreaId
	{
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x14BB3B4", Offset = "0x14BB3B4", VA = "0x14BB3B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD908", Offset = "0xFDD908")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x14BB3BC", Offset = "0x14BB3BC", VA = "0x14BB3BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD918", Offset = "0xFDD918")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public int MinSpawnAreaId
	{
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x14BB3C4", Offset = "0x14BB3C4", VA = "0x14BB3C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD928", Offset = "0xFDD928")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x14BB3CC", Offset = "0x14BB3CC", VA = "0x14BB3CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD938", Offset = "0xFDD938")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public int CurSpawnAreaId
	{
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x14BB3D4", Offset = "0x14BB3D4", VA = "0x14BB3D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD948", Offset = "0xFDD948")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x14BB3DC", Offset = "0x14BB3DC", VA = "0x14BB3DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD958", Offset = "0xFDD958")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public int ServerTotalCount
	{
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x14BD070", Offset = "0x14BD070", VA = "0x14BD070")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x14BD078", Offset = "0x14BD078", VA = "0x14BD078")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public int ClientTotalCount
	{
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x14BE2EC", Offset = "0x14BE2EC", VA = "0x14BE2EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x14BE2F4", Offset = "0x14BE2F4", VA = "0x14BE2F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public Transform MonsterRoot
	{
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x14BFB50", Offset = "0x14BFB50", VA = "0x14BFB50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x14BB3E4", Offset = "0x14BB3E4", VA = "0x14BB3E4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x14BBF7C", Offset = "0x14BBF7C", VA = "0x14BBF7C")]
	public void DoServerReset()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x14BC060", Offset = "0x14BC060", VA = "0x14BC060")]
	public void DoStart(GameDiffculty gameDiffculty)
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x14BC458", Offset = "0x14BC458", VA = "0x14BC458")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x14BC4F0", Offset = "0x14BC4F0", VA = "0x14BC4F0")]
	public void DoPause()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x14BC56C", Offset = "0x14BC56C", VA = "0x14BC56C")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x14BC5E4", Offset = "0x14BC5E4", VA = "0x14BC5E4")]
	public void DoUpdate(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x14BD080", Offset = "0x14BD080", VA = "0x14BD080")]
	public bool CheckSpawnStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x14BD088", Offset = "0x14BD088", VA = "0x14BD088")]
	private bool CheckMonsterIsClean()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x14BC6C0", Offset = "0x14BC6C0", VA = "0x14BC6C0")]
	private void DoSpawn(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x14BC218", Offset = "0x14BC218", VA = "0x14BC218")]
	private void ResetTimer()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x14BD3B0", Offset = "0x14BD3B0", VA = "0x14BD3B0")]
	private void ResetAreaTimer()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x14BD5E8", Offset = "0x14BD5E8", VA = "0x14BD5E8")]
	public void AddAreaSpawnMonsterList(int monsterID, int areaId, int spawnPointId, int spawnCount, int suicideDelayTime, int level)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x14BD14C", Offset = "0x14BD14C", VA = "0x14BD14C")]
	public void AddAreaSpawnMonsterList(int monsterID, int areaId, Vector3 spawnPos, Quaternion spawnRot, SpawnPointInfo spawnData, int spawnCount, int suicideDelayTime, int level)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x14BCEFC", Offset = "0x14BCEFC", VA = "0x14BCEFC")]
	public void ProcessorSpawnMonsterNet()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x14BDE6C", Offset = "0x14BDE6C", VA = "0x14BDE6C")]
	public int AreaGetMonsterSummonMaxCry(WUnit unit)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x14BDEB8", Offset = "0x14BDEB8", VA = "0x14BDEB8")]
	public int AreaGetMonsterSummonMaxCry(int tableId)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x14BDF70", Offset = "0x14BDF70", VA = "0x14BDF70")]
	public void AreaTriggerSummon(WUnit unit, int summonArea)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x14BE2FC", Offset = "0x14BE2FC", VA = "0x14BE2FC")]
	public void DoClientReset()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x14BD2F8", Offset = "0x14BD2F8", VA = "0x14BD2F8")]
	public Transform GetAreaSpawnPoint(int areaID, int pointID)
	{
		return null;
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x14BE304", Offset = "0x14BE304", VA = "0x14BE304")]
	public int[] GetAreaSpawnPointIds(int areaID)
	{
		return null;
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x14BE3F4", Offset = "0x14BE3F4", VA = "0x14BE3F4")]
	public void ChangeSpawnArea(int areaId)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x14BE510", Offset = "0x14BE510", VA = "0x14BE510")]
	private void EnterArea(AreaInfo area)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x14BE14C", Offset = "0x14BE14C", VA = "0x14BE14C")]
	private AreaInfo GetAreaInfData(int areaId)
	{
		return null;
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x14BE240", Offset = "0x14BE240", VA = "0x14BE240")]
	private void SetEnterArea(AreaInfo area, AreaInfoData areaData)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x14BE758", Offset = "0x14BE758", VA = "0x14BE758")]
	public void InitAreaSortSpawnList()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x14BF750", Offset = "0x14BF750", VA = "0x14BF750")]
	private void InitSummonSpawnData()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x14BB4C4", Offset = "0x14BB4C4", VA = "0x14BB4C4")]
	private void InitAreaSpawnPoint(Transform areaRoot)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x14BFC7C", Offset = "0x14BFC7C", VA = "0x14BFC7C")]
	public void ServerSpawnMonserBullet(int monsterId, Vector3 pos, Quaternion rot, Transform traget, bool rightFire)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x14BD8F0", Offset = "0x14BD8F0", VA = "0x14BD8F0")]
	public void ServerSpawnMonser(int objId, int monsterId, int areaId, SpawnPointInfo spawnData, Vector3 pos, Quaternion rot, int suicideDelayTime = -1, int level = 1)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x14C02F4", Offset = "0x14C02F4", VA = "0x14C02F4")]
	public void SpawnMonster(int objId, int monsterId, Vector3 pos, Quaternion rot, int level)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x14C0724", Offset = "0x14C0724", VA = "0x14C0724")]
	public MonsterSpawnManager()
	{
	}
}
[Token(Token = "0x20001CE")]
public enum MoveTargetType
{
	[Token(Token = "0x4000B73")]
	JumpVertical,
	[Token(Token = "0x4000B74")]
	NavmeshRun,
	[Token(Token = "0x4000B75")]
	Walk,
	[Token(Token = "0x4000B76")]
	RollRight,
	[Token(Token = "0x4000B77")]
	RollLeft,
	[Token(Token = "0x4000B78")]
	JumpFlat,
	[Token(Token = "0x4000B79")]
	Over,
	[Token(Token = "0x4000B7A")]
	Up,
	[Token(Token = "0x4000B7B")]
	ClimbOver,
	[Token(Token = "0x4000B7C")]
	JumpStand,
	[Token(Token = "0x4000B7D")]
	FlyScrew,
	[Token(Token = "0x4000B7E")]
	NavmeshWalk
}
[Serializable]
[Token(Token = "0x20001CF")]
public class MoveItem
{
	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MoveTargetType moveType;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransf;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float highOfDistance;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public eMonsterAttackType attackType;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public eMonsterAttackDirType attackDirType;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x14C2EB4", Offset = "0x14C2EB4", VA = "0x14C2EB4")]
	public MoveItem()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D0")]
public class MovingRange
{
	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Transform> RangeCubes;

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x1490E40", Offset = "0x1490E40", VA = "0x1490E40")]
	public MovingRange()
	{
	}
}
[Token(Token = "0x20001D1")]
public class SpawnPointInfo : MonoBehaviour
{
	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MoveItem> moveDatas;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovingRange moveRangeData;

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x1418270", Offset = "0x1418270", VA = "0x1418270")]
	public MoveItem GetMoveDdata(int index)
	{
		return null;
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x14183E8", Offset = "0x14183E8", VA = "0x14183E8")]
	public MovingRange GetMoveRangeData()
	{
		return null;
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x14183F0", Offset = "0x14183F0", VA = "0x14183F0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDD968", Offset = "0xFDD968")]
	private void SetDefault()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x141851C", Offset = "0x141851C", VA = "0x141851C")]
	public void LogStr(GameObject target)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1418730", Offset = "0x1418730", VA = "0x1418730")]
	public SpawnPointInfo()
	{
	}
}
[Token(Token = "0x20001D2")]
public abstract class RoomBaseState
{
	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected Battle battle;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ServerBattleRoom battleRoom;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected UnityCoroutineControl battleRoomCoroutine;

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x15615A8", Offset = "0x15615A8", VA = "0x15615A8")]
	public RoomBaseState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000BD9")]
	public abstract void DoInit();

	[Token(Token = "0x6000BDA")]
	public abstract void DoUpdate(float deltaTime, int millisDeltaTime);

	[Token(Token = "0x6000BDB")]
	public abstract void DoFixedUpdate(float fixedDeltaTime);

	[Token(Token = "0x6000BDC")]
	public abstract void DoLateUpdate();

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x156160C", Offset = "0x156160C", VA = "0x156160C", Slot = "8")]
	public virtual void DoExit()
	{
	}
}
[Token(Token = "0x20001D3")]
public class RoomFightEndState : RoomBaseState
{
	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x15658C4", Offset = "0x15658C4", VA = "0x15658C4")]
	public RoomFightEndState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x15658C8", Offset = "0x15658C8", VA = "0x15658C8", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x1565B2C", Offset = "0x1565B2C", VA = "0x1565B2C", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1565B30", Offset = "0x1565B30", VA = "0x1565B30", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1565B34", Offset = "0x1565B34", VA = "0x1565B34", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x1565B38", Offset = "0x1565B38", VA = "0x1565B38", Slot = "8")]
	public override void DoExit()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x1565AC4", Offset = "0x1565AC4", VA = "0x1565AC4")]
	private void ProcessingFightingEnd()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x1565994", Offset = "0x1565994", VA = "0x1565994")]
	private void ProcessingPlayerReviveEnd()
	{
	}
}
[Token(Token = "0x20001D4")]
public class RoomFightStartState : RoomBaseState
{
	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x1565B98", Offset = "0x1565B98", VA = "0x1565B98")]
	public RoomFightStartState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x1565B9C", Offset = "0x1565B9C", VA = "0x1565B9C", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x1565C9C", Offset = "0x1565C9C", VA = "0x1565C9C", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x1565CA0", Offset = "0x1565CA0", VA = "0x1565CA0", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x1565CA4", Offset = "0x1565CA4", VA = "0x1565CA4", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x1565CA8", Offset = "0x1565CA8", VA = "0x1565CA8", Slot = "8")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x20001D5")]
public class RoomFightingState : RoomBaseState
{
	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5D14", Offset = "0xFD5D14")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomFightingState <>4__this;

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x1567A98", Offset = "0x1567A98", VA = "0x1567A98")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x1568278", Offset = "0x1568278", VA = "0x1568278")]
		internal void <OnPlayerDeadCB>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5D24", Offset = "0xFD5D24")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__21_1;

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x156821C", Offset = "0x156821C", VA = "0x156821C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x1568224", Offset = "0x1568224", VA = "0x1568224")]
		internal void <OnPlayerDeadCB>b__21_1(WUnit u)
		{
		}
	}

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int updateDelayFrame;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int updateFrameTimer;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSpawnBoss;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isPlayTimerAudio_1;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool isPlayTimerAudio_2;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool isPlayTimerAudio_3;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isPlayTimerAudio_4;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> reviveRoomIds;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float reviveHp;

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x1565CAC", Offset = "0x1565CAC", VA = "0x1565CAC")]
	public RoomFightingState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x1565D54", Offset = "0x1565D54", VA = "0x1565D54", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x15664F4", Offset = "0x15664F4", VA = "0x15664F4", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x1566624", Offset = "0x1566624", VA = "0x1566624", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x1566C44", Offset = "0x1566C44", VA = "0x1566C44", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x15673E0", Offset = "0x15673E0", VA = "0x15673E0", Slot = "8")]
	public override void DoExit()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x1566648", Offset = "0x1566648", VA = "0x1566648")]
	private void ProcessingMonsterTransformSync()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x156620C", Offset = "0x156620C", VA = "0x156620C")]
	private void ProcessingSpawnStart()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x156741C", Offset = "0x156741C", VA = "0x156741C")]
	private void ProcessingSpawnEnd()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x15665A4", Offset = "0x15665A4", VA = "0x15665A4")]
	private void ProcessingSpawn(int deltaTime)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x1566C68", Offset = "0x1566C68", VA = "0x1566C68")]
	private void ProcessingGameStatus()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x15662BC", Offset = "0x15662BC", VA = "0x15662BC")]
	private void ProcessingStatisticalStart()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x15676C0", Offset = "0x15676C0", VA = "0x15676C0")]
	private void ProcessingStatisticalEnd()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x1565E48", Offset = "0x1565E48", VA = "0x1565E48")]
	private void ProcessingJoinGamePlayer()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x15678C0", Offset = "0x15678C0", VA = "0x15678C0")]
	private void OnPlayerDeadCB(WUnit unit)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x1567AA0", Offset = "0x1567AA0", VA = "0x1567AA0")]
	private bool CheckAllJoinDiePlayerDie()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x1567530", Offset = "0x1567530", VA = "0x1567530")]
	private void ProcessingPlayerStatueEnd()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x15662C0", Offset = "0x15662C0", VA = "0x15662C0")]
	private void ProcessingRoomPassStart()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x1567748", Offset = "0x1567748", VA = "0x1567748")]
	private void ProcessingRoomPassEnd()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1567BD0", Offset = "0x1567BD0", VA = "0x1567BD0")]
	private void OnCharRollBack()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x1567BD8", Offset = "0x1567BD8", VA = "0x1567BD8")]
	private void OnRoomPass(FlowNode node)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x1567F38", Offset = "0x1567F38", VA = "0x1567F38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD9A0", Offset = "0xFDD9A0")]
	private void <ProcessingGameStatus>b__17_0()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x1567F6C", Offset = "0x1567F6C", VA = "0x1567F6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD9B0", Offset = "0xFDD9B0")]
	private void <ProcessingGameStatus>b__17_1()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x1568008", Offset = "0x1568008", VA = "0x1568008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD9C0", Offset = "0xFDD9C0")]
	private void <ProcessingGameStatus>b__17_2()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x1568038", Offset = "0x1568038", VA = "0x1568038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD9D0", Offset = "0xFDD9D0")]
	private void <ProcessingRoomPassStart>b__26_0(int id, int room)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x15680A0", Offset = "0x15680A0", VA = "0x15680A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD9E0", Offset = "0xFDD9E0")]
	private void <OnRoomPass>b__29_0(WUnit u)
	{
	}
}
[Token(Token = "0x20001D6")]
public class RoomMovieState : RoomBaseState
{
	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x156ABCC", Offset = "0x156ABCC", VA = "0x156ABCC")]
	public RoomMovieState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x156ABD0", Offset = "0x156ABD0", VA = "0x156ABD0", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x156AF88", Offset = "0x156AF88", VA = "0x156AF88", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x156B014", Offset = "0x156B014", VA = "0x156B014", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x156B018", Offset = "0x156B018", VA = "0x156B018", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x156B01C", Offset = "0x156B01C", VA = "0x156B01C", Slot = "8")]
	public override void DoExit()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x156B348", Offset = "0x156B348", VA = "0x156B348")]
	private void OnVideoPlayerStart(VideoPlayer videoPlayer)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x156B34C", Offset = "0x156B34C", VA = "0x156B34C")]
	private void OnVideoPlayerEnd(VideoPlayer videoPlayer)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x156ABD4", Offset = "0x156ABD4", VA = "0x156ABD4")]
	private void ProcessingPlayVideoStart()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x156B0B8", Offset = "0x156B0B8", VA = "0x156B0B8")]
	private void ProcessingPlayVideoEnd()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x156B364", Offset = "0x156B364", VA = "0x156B364")]
	private void ProcessingPlayWwiseStart()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x156B040", Offset = "0x156B040", VA = "0x156B040")]
	private void ProcessingPlayWwiseEnd()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x156AF8C", Offset = "0x156AF8C", VA = "0x156AF8C")]
	private void ProcessingPlayWwise(float deltaTime)
	{
	}
}
[Token(Token = "0x20001D7")]
public class RoomReadyState : RoomBaseState
{
	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x156B368", Offset = "0x156B368", VA = "0x156B368")]
	public RoomReadyState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x156B36C", Offset = "0x156B36C", VA = "0x156B36C", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x156B3D4", Offset = "0x156B3D4", VA = "0x156B3D4", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x156B3D8", Offset = "0x156B3D8", VA = "0x156B3D8", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x156B3DC", Offset = "0x156B3DC", VA = "0x156B3DC", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x156B3E0", Offset = "0x156B3E0", VA = "0x156B3E0", Slot = "8")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x20001D8")]
public class WwiseAmbientEffectManager : Singleton<WwiseAmbientEffectManager>
{
	[Token(Token = "0x20004F3")]
	private class PlayInfo
	{
		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int time;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int timer;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int monsterid;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int point;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int eventID;

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x29EFC10", Offset = "0x29EFC10", VA = "0x29EFC10")]
		public PlayInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5D34", Offset = "0xFD5D34")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<PlayInfo> <>9__12_0;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<PlayInfo> <>9__13_0;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<PlayInfo> <>9__22_0;

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x29F0124", Offset = "0x29F0124", VA = "0x29F0124")]
		public <>c()
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x29F012C", Offset = "0x29F012C", VA = "0x29F012C")]
		internal int <DoStartVideo>b__12_0(PlayInfo data1, PlayInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x29F0154", Offset = "0x29F0154", VA = "0x29F0154")]
		internal int <setMonsterId>b__13_0(PlayInfo data1, PlayInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x29F017C", Offset = "0x29F017C", VA = "0x29F017C")]
		internal int <InitSortPlayList>b__22_0(PlayInfo data1, PlayInfo data2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float timer;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int tiner_int;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int playOffset;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool spawnStart;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, List<PlayInfo>> sortPlayList;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PlayInfo> spawnAudioList;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameDiffculty, Dictionary<int, List<PlayInfo>>> sortSpawnDic;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, List<PlayInfo>> sortVideoList;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, int> passMonsterId;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, Transform> playTransHash;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<GameDiffculty, int> sortBossSummonMaxIdDic;

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x29EE7B8", Offset = "0x29EE7B8", VA = "0x29EE7B8")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x29EE830", Offset = "0x29EE830", VA = "0x29EE830")]
	public void DoStart(GameDiffculty gameDiffculty)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x29EEB5C", Offset = "0x29EEB5C", VA = "0x29EEB5C")]
	public void DoStartVideo(int videoIndex)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x29EE8DC", Offset = "0x29EE8DC", VA = "0x29EE8DC")]
	public void setMonsterId(int monsterId)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x29EED98", Offset = "0x29EED98", VA = "0x29EED98")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x29EEDA0", Offset = "0x29EEDA0", VA = "0x29EEDA0")]
	public void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x29EF0DC", Offset = "0x29EF0DC", VA = "0x29EF0DC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x29EFA78", Offset = "0x29EFA78", VA = "0x29EFA78")]
	public string GetVarName(Expression<Func<string, int>> exp)
	{
		return null;
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x29EF148", Offset = "0x29EF148", VA = "0x29EF148")]
	private void InitPlayTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x29EFB14", Offset = "0x29EFB14", VA = "0x29EFB14")]
	public Transform GetPlayPoint(int point)
	{
		return null;
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x29EF654", Offset = "0x29EF654", VA = "0x29EF654")]
	private void InitSortPlayList()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x29EEEEC", Offset = "0x29EEEEC", VA = "0x29EEEEC")]
	public void PlayAmbientEffect_Net(int eventId, int point)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x29EFC18", Offset = "0x29EFC18", VA = "0x29EFC18")]
	public void PlayAmbientEffect(int eventId, int point)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x29EFEDC", Offset = "0x29EFEDC", VA = "0x29EFEDC")]
	public WwiseAmbientEffectManager()
	{
	}
}
[Token(Token = "0x20001D9")]
public class BossAppearanceManager : Singleton<BossAppearanceManager>
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform hideDownPoint;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform bossAppearanceMoveToPoint;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform bossAppearanceText;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isFirstShowBossAppearance;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isFirstShowBossAppearanceTmp;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action EndWaitLoadingAct;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isAppearanceFinish;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine delayMoveOut;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine delayForbidMove;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lookAtTime;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float beginMoveForwardTime;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float beginMoveOutTime;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private AudioEvent bossEnterSound;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WwiseDefine wiseObject;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject NameHUDObj;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UnitNormalNameHUD NameHUD;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WUnit boss;

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x163D654", Offset = "0x163D654", VA = "0x163D654")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x163D7DC", Offset = "0x163D7DC", VA = "0x163D7DC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x163DA60", Offset = "0x163DA60", VA = "0x163DA60")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x163DCFC", Offset = "0x163DCFC", VA = "0x163DCFC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x163DE4C", Offset = "0x163DE4C", VA = "0x163DE4C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x163DF1C", Offset = "0x163DF1C", VA = "0x163DF1C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x163E12C", Offset = "0x163E12C", VA = "0x163E12C")]
	public void StartBossLookAt(WUnit unit)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x163E0B4", Offset = "0x163E0B4", VA = "0x163E0B4")]
	public void StopBossLookAt()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x163E68C", Offset = "0x163E68C", VA = "0x163E68C")]
	public void BossLookAtEnd()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x163E4C0", Offset = "0x163E4C0", VA = "0x163E4C0")]
	private void SetAllPlayerVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x163E99C", Offset = "0x163E99C", VA = "0x163E99C")]
	public bool IsShowAppearance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x163D814", Offset = "0x163D814", VA = "0x163D814")]
	private void InitUIView()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x163D9B4", Offset = "0x163D9B4", VA = "0x163D9B4")]
	public void SetUIView(bool isShow)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x163DDA4", Offset = "0x163DDA4", VA = "0x163DDA4")]
	public void SetUIText(string name)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x163DB14", Offset = "0x163DB14", VA = "0x163DB14")]
	private void SetUIViewDir()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x163E9BC", Offset = "0x163E9BC", VA = "0x163E9BC")]
	public BossAppearanceManager()
	{
	}
}
[Token(Token = "0x20001DA")]
public class CameraManager : Singleton<CameraManager>
{
	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera mMainCamera;

	[Token(Token = "0x170000FB")]
	public Camera MainCamera
	{
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1440930", Offset = "0x1440930", VA = "0x1440930")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1440938", Offset = "0x1440938", VA = "0x1440938")]
		set
		{
		}
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x14409DC", Offset = "0x14409DC", VA = "0x14409DC")]
	public void SetGameEndLayer()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x1440AD0", Offset = "0x1440AD0", VA = "0x1440AD0")]
	public void SetGameStartLayer()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x1440BC4", Offset = "0x1440BC4", VA = "0x1440BC4")]
	public void SetCameraTarget(GameObject obj)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x1440D14", Offset = "0x1440D14", VA = "0x1440D14")]
	public void SetVideoLayer()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x1440E08", Offset = "0x1440E08", VA = "0x1440E08")]
	public CameraManager()
	{
	}
}
[Token(Token = "0x20001DB")]
public class DropManager : Singleton<DropManager>
{
	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, DropItem> dropTypeItems;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, DropItem> dropItems;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isInit;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isStart;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int orignalId;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<int> lockItem;

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x13DF3E8", Offset = "0x13DF3E8", VA = "0x13DF3E8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x13DF598", Offset = "0x13DF598", VA = "0x13DF598")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x13DF624", Offset = "0x13DF624", VA = "0x13DF624")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x13DF62C", Offset = "0x13DF62C", VA = "0x13DF62C")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x13DF248", Offset = "0x13DF248", VA = "0x13DF248")]
	public void NetProduceDropItem(int itemType, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x13DE700", Offset = "0x13DE700", VA = "0x13DE700")]
	public void NetDestroyDropItem(int id)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x13DF7D0", Offset = "0x13DF7D0", VA = "0x13DF7D0")]
	public void NetTriggerDropItem(int id, int uid)
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x13DFA44", Offset = "0x13DFA44", VA = "0x13DFA44")]
	public bool TryLockDropItem(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x13DFB08", Offset = "0x13DFB08", VA = "0x13DFB08")]
	public bool IsActiveDropItem(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x13DFB9C", Offset = "0x13DFB9C", VA = "0x13DFB9C")]
	public void ProduceDropItem(int itemType, int itemId, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x13DFBA4", Offset = "0x13DFBA4", VA = "0x13DFBA4")]
	public void DestroyDropItem(int id)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x13DFCC0", Offset = "0x13DFCC0", VA = "0x13DFCC0")]
	public void TriggerDropItem(int id, int uid)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x13DF634", Offset = "0x13DF634", VA = "0x13DF634")]
	public void CleanAllDropItem()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x13DFBA0", Offset = "0x13DFBA0", VA = "0x13DFBA0")]
	public void DoProduceDropItem(int itemType, int id, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x13DFEF0", Offset = "0x13DFEF0", VA = "0x13DFEF0")]
	private DropItem ProduceLogic(int itemType, int id, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x13DF7BC", Offset = "0x13DF7BC", VA = "0x13DF7BC")]
	private int GetId()
	{
		return default(int);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x13E0140", Offset = "0x13E0140", VA = "0x13E0140")]
	public DropManager()
	{
	}
}
[Token(Token = "0x20001DC")]
public static class EffectManager
{
	[Token(Token = "0x20004F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5D44", Offset = "0xFD5D44")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rot;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform parent;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<EffectDefine> cb;

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x13E165C", Offset = "0x13E165C", VA = "0x13E165C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x13E1664", Offset = "0x13E1664", VA = "0x13E1664")]
		internal void <CreateEffectAsync>b__0(GameObject go)
		{
		}
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x13E1010", Offset = "0x13E1010", VA = "0x13E1010")]
	public static EffectDefine CreateEffect(int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x13E11F4", Offset = "0x13E11F4", VA = "0x13E11F4")]
	public static EffectDefine CreateEffect(GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x13E1494", Offset = "0x13E1494", VA = "0x13E1494")]
	public static void CreateEffectAsync(GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent, [Optional] Action<EffectDefine> cb)
	{
	}
}
[Token(Token = "0x20001DD")]
public class GameManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004F6")]
	public class WeaponGroupConfig
	{
		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group weaponGroup;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject leftWeapon;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject rightWeapon;

		[Token(Token = "0x170003F3")]
		public e_weapon_type rightWeaponType
		{
			[Token(Token = "0x600264E")]
			[Address(RVA = "0x15F93D0", Offset = "0x15F93D0", VA = "0x15F93D0")]
			get
			{
				return default(e_weapon_type);
			}
		}

		[Token(Token = "0x170003F4")]
		public e_weapon_type leftWeaponType
		{
			[Token(Token = "0x600264F")]
			[Address(RVA = "0x15F9434", Offset = "0x15F9434", VA = "0x15F9434")]
			get
			{
				return default(e_weapon_type);
			}
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x15F9498", Offset = "0x15F9498", VA = "0x15F9498")]
		public WeaponGroupConfig()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5D54", Offset = "0xFD5D54")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<WUnit> <>9__80_0;

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x15F93A0", Offset = "0x15F93A0", VA = "0x15F93A0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x15F93A8", Offset = "0x15F93A8", VA = "0x15F93A8")]
		internal int <GetCameraRigGroupPoint>b__80_0(WUnit a, WUnit b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int sceneBuildIndex;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> otherSceneBuildIndexList;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject vrMgrComponent;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Camera firstPersonCameraComponent;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] playerObjs;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] otherPlayerObjs;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private WeaponGroupConfig[] weaponGroups;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private WeaponGroupConfig[] npcWeaponGroups;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public Transform npcSpawnRoot;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public Transform npc2SpawnRoot;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public Transform npcTargetRoot;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public Transform commanderSpawnRoot;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public Transform npc3SpawnPoint;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public Transform areaSpawnRoot;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform cameraRigGroupPoints;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public Transform ambientEffectRoot;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public VideoPlayerController video;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public ServerUIView ServerConsoleUI;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	public TotalStatisticalUI StatisticalUI;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	public TotalStatisticalUI StatisticalUI_Live;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CheckpointUI CheckpointUI;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CheckpointUI CheckpointUI_Live;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	public ManualSellectView mSellectView;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	public LiveShowView mLiveView;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	public CharacterDeathUI mCharacterDeathUI;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7ED8", Offset = "0xFD7ED8")]
	private GameObject <timeLineRoot>k__BackingField;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject CameraEffectConfigRoot;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GuideController GuideController;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GuidTipUI GuidTipUI;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public VRDeviceSelectorUIView SelectorUIView;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject recordCamera;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material startSkybox;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material endSkybox;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject dissonanceObject;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject floating;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform floatingRoot;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform GameStageRoot;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject loadingUI;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject loadingUIPC;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject dieCameraEffect;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private List<GameObject> pillars;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager _instance;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Dictionary<int, Transform> CameraRigPointDic;

	[Token(Token = "0x170000FC")]
	public GameObject VRMgrComponent
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x15F5EF4", Offset = "0x15F5EF4", VA = "0x15F5EF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FD")]
	public Camera FirstPersonCameraComponent
	{
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x15F5EFC", Offset = "0x15F5EFC", VA = "0x15F5EFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FE")]
	[SerializeField]
	public GameObject timeLineRoot
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x15F5F04", Offset = "0x15F5F04", VA = "0x15F5F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDD9F0", Offset = "0xFDD9F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x15F5F0C", Offset = "0x15F5F0C", VA = "0x15F5F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA00", Offset = "0xFDDA00")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public List<GameObject> Pillars
	{
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x15F5F14", Offset = "0x15F5F14", VA = "0x15F5F14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000100")]
	public static GameManager Instance
	{
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x15F5F1C", Offset = "0x15F5F1C", VA = "0x15F5F1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x15F5F6C", Offset = "0x15F5F6C", VA = "0x15F5F6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x15F5FC4", Offset = "0x15F5FC4", VA = "0x15F5FC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x15F621C", Offset = "0x15F621C", VA = "0x15F621C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x15F6354", Offset = "0x15F6354", VA = "0x15F6354")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x15F6EFC", Offset = "0x15F6EFC", VA = "0x15F6EFC")]
	public UnitAttribute GetPlayerAttribute(e_Player_Style playerStyle)
	{
		return null;
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x15F6F84", Offset = "0x15F6F84", VA = "0x15F6F84")]
	public UnitAttribute GetMonsterAttribute(int monsterTableId)
	{
		return null;
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x15F7004", Offset = "0x15F7004", VA = "0x15F7004")]
	public UnitAttribute GetNpcAttribute(int npcTableId)
	{
		return null;
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x15F6A4C", Offset = "0x15F6A4C", VA = "0x15F6A4C")]
	public void LoadScene()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x15F72F4", Offset = "0x15F72F4", VA = "0x15F72F4")]
	public void OnSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x15F73F4", Offset = "0x15F73F4", VA = "0x15F73F4")]
	private void SceneLoadedEnd()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x15F7858", Offset = "0x15F7858", VA = "0x15F7858")]
	public void LoadOtherScene()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x15F79B4", Offset = "0x15F79B4", VA = "0x15F79B4")]
	public void SetSceneActive(int index)
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x15E70B0", Offset = "0x15E70B0", VA = "0x15E70B0")]
	public void SetSafeRoomActive()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x15F7AB4", Offset = "0x15F7AB4", VA = "0x15F7AB4")]
	private void OnClearRoom(FSMBattleRoom room)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x15F7E00", Offset = "0x15F7E00", VA = "0x15F7E00")]
	private void OnResetRoom(List<FSMBattleRoom> rooms)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x15F7EF8", Offset = "0x15F7EF8", VA = "0x15F7EF8")]
	private void OnClearPreparedRoom(Transform room)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x15F7C58", Offset = "0x15F7C58", VA = "0x15F7C58")]
	private void ClearDecal(Transform t)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x15F7EFC", Offset = "0x15F7EFC", VA = "0x15F7EFC")]
	private void InitCutScenes()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x15F7FEC", Offset = "0x15F7FEC", VA = "0x15F7FEC")]
	public void SetCutScenesActive(bool activeState)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x15F8094", Offset = "0x15F8094", VA = "0x15F8094")]
	public bool GetCutScenesActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x15F812C", Offset = "0x15F812C", VA = "0x15F812C")]
	public GameObject GetOtherPlayerByType(e_Player_Style playerType)
	{
		return null;
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x15F83A0", Offset = "0x15F83A0", VA = "0x15F83A0")]
	public GameObject GetLocalPlayerByType(e_Player_Style playerType)
	{
		return null;
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x15F8614", Offset = "0x15F8614", VA = "0x15F8614")]
	public WeaponGroupConfig GetWeaponByGroup(e_weapon_group weaponGroup)
	{
		return null;
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x15F8970", Offset = "0x15F8970", VA = "0x15F8970")]
	public WeaponGroupConfig GetNpcWeaponByGroup(e_weapon_group weaponGroup)
	{
		return null;
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x15F66E0", Offset = "0x15F66E0", VA = "0x15F66E0")]
	public void InitCameraRigGroupPoints()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x15F6C44", Offset = "0x15F6C44", VA = "0x15F6C44")]
	public Transform GetCameraRigGroupPoint(WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x15F6B84", Offset = "0x15F6B84", VA = "0x15F6B84")]
	private void InitEvent()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x15F8D0C", Offset = "0x15F8D0C", VA = "0x15F8D0C")]
	private void ShowVRControllerSelector()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x15F8E64", Offset = "0x15F8E64", VA = "0x15F8E64")]
	public void InitDissonanceVoice()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x15F90A0", Offset = "0x15F90A0", VA = "0x15F90A0")]
	public GameManager()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x15F9184", Offset = "0x15F9184", VA = "0x15F9184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA10", Offset = "0xFDDA10")]
	private void <LoadScene>b__61_0()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x15F9258", Offset = "0x15F9258", VA = "0x15F9258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA20", Offset = "0xFDDA20")]
	private void <LoadScene>b__61_1()
	{
	}
}
[Token(Token = "0x20001DE")]
public class GameSceneManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004F8")]
	public class GameStepSceneConfig
	{
		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int StepIndex;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sceneBuildIndex;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int configBuildIndex;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material skyBox;

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x14E5014", Offset = "0x14E5014", VA = "0x14E5014")]
		public GameStepSceneConfig()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004F9")]
	public class GameSceneConfig
	{
		[Token(Token = "0x2000895")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD60B0", Offset = "0xFD60B0")]
		private sealed class <StartLoadStepScene>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] scenes;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async0>5__2;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperation <async>5__4;

			[Token(Token = "0x1700043E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B43")]
				[Address(RVA = "0x14E4878", Offset = "0x14E4878", VA = "0x14E4878", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B45")]
				[Address(RVA = "0x14E48E0", Offset = "0x14E48E0", VA = "0x14E48E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B40")]
			[Address(RVA = "0x14E45AC", Offset = "0x14E45AC", VA = "0x14E45AC")]
			[DebuggerHidden]
			public <StartLoadStepScene>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x14E45D8", Offset = "0x14E45D8", VA = "0x14E45D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B42")]
			[Address(RVA = "0x14E45DC", Offset = "0x14E45DC", VA = "0x14E45DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B44")]
			[Address(RVA = "0x14E4880", Offset = "0x14E4880", VA = "0x14E4880", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000896")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD60C0", Offset = "0xFD60C0")]
		private sealed class <StartUnLoadStepScene>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] scenes;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Scene <clearObject>5__2;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async0>5__3;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x17000440")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B49")]
				[Address(RVA = "0x14E4FA4", Offset = "0x14E4FA4", VA = "0x14E4FA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000441")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B4B")]
				[Address(RVA = "0x14E500C", Offset = "0x14E500C", VA = "0x14E500C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B46")]
			[Address(RVA = "0x14E4C24", Offset = "0x14E4C24", VA = "0x14E4C24")]
			[DebuggerHidden]
			public <StartUnLoadStepScene>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6002B47")]
			[Address(RVA = "0x14E4C50", Offset = "0x14E4C50", VA = "0x14E4C50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B48")]
			[Address(RVA = "0x14E4C54", Offset = "0x14E4C54", VA = "0x14E4C54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0x14E4FAC", Offset = "0x14E4FAC", VA = "0x14E4FAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000897")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD60D0", Offset = "0xFD60D0")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int step;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action loadEnd;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isLoadEndActive;

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0x15FAC60", Offset = "0x15FAC60", VA = "0x15FAC60")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0x15FB1F0", Offset = "0x15FB1F0", VA = "0x15FB1F0")]
			internal void <ChangeLoadStepScene>b__0()
			{
			}
		}

		[Token(Token = "0x2000898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD60E0", Offset = "0xFD60E0")]
		private sealed class <StartLoad>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isLoadingUI;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] scenes;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__2;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperation <async>5__3;

			[Token(Token = "0x17000442")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B51")]
				[Address(RVA = "0x15FB418", Offset = "0x15FB418", VA = "0x15FB418", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000443")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B53")]
				[Address(RVA = "0x15FB480", Offset = "0x15FB480", VA = "0x15FB480", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0x15FAF88", Offset = "0x15FAF88", VA = "0x15FAF88")]
			[DebuggerHidden]
			public <StartLoad>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x15FB218", Offset = "0x15FB218", VA = "0x15FB218", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B50")]
			[Address(RVA = "0x15FB21C", Offset = "0x15FB21C", VA = "0x15FB21C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B52")]
			[Address(RVA = "0x15FB420", Offset = "0x15FB420", VA = "0x15FB420", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000899")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD60F0", Offset = "0xFD60F0")]
		private sealed class <StartUnLoad>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action unLoadFinish;

			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async>5__3;

			[Token(Token = "0x17000444")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B57")]
				[Address(RVA = "0x14E4BB4", Offset = "0x14E4BB4", VA = "0x14E4BB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000445")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B59")]
				[Address(RVA = "0x14E4C1C", Offset = "0x14E4C1C", VA = "0x14E4C1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B54")]
			[Address(RVA = "0x14E48E8", Offset = "0x14E48E8", VA = "0x14E48E8")]
			[DebuggerHidden]
			public <StartUnLoad>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x14E4914", Offset = "0x14E4914", VA = "0x14E4914", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B56")]
			[Address(RVA = "0x14E4918", Offset = "0x14E4918", VA = "0x14E4918", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B58")]
			[Address(RVA = "0x14E4BBC", Offset = "0x14E4BBC", VA = "0x14E4BBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SafeRoomSceneIndex;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int SafeRoomConfigSceneIndex;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sceneBuildIndex;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int configBuildIndex;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject resRoot;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<Transform> cameraRigPoint_A_List;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Transform> cameraRigPoint_B_List;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform cameraRigPoint_A;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform cameraRigPoint_B;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform cameraRigPoint_SafeRoom_A;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform cameraRigPoint_SafeRoom_B;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material skyBox;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action loadSceneEndCallBack;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<GameStepSceneConfig> stepSceneConfigList;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameStepSceneConfig curStepSceneConfig;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action loadGameStepSceneEndCallBack;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action unLoadGameStepSceneEndCallBack;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int loadActiveSceneIndex;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB7D8", Offset = "0xFDB7D8")]
		private bool <IsStepSceneLoading>k__BackingField;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine Coroutine_StartLoadStepScene;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private WaitForSeconds wait;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine Coroutine_StartUnLoadStepScene;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine Coroutine_StartLoad;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Coroutine Coroutine_StartUnLoad;

		[Token(Token = "0x170003F5")]
		public bool IsStepSceneLoading
		{
			[Token(Token = "0x6002655")]
			[Address(RVA = "0x15FA280", Offset = "0x15FA280", VA = "0x15FA280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFE0214", Offset = "0xFE0214")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002656")]
			[Address(RVA = "0x15FA288", Offset = "0x15FA288", VA = "0x15FA288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFE0224", Offset = "0xFE0224")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public List<GameStepSceneConfig> StepSceneConfigList
		{
			[Token(Token = "0x6002657")]
			[Address(RVA = "0x15FA294", Offset = "0x15FA294", VA = "0x15FA294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x15F9510", Offset = "0x15F9510", VA = "0x15F9510")]
		public void Init()
		{
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x15F99A4", Offset = "0x15F99A4", VA = "0x15F99A4")]
		public Transform GetCameraRigGroupPoint(e_group_type groupType, bool isAI, int site)
		{
			return null;
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x15FA29C", Offset = "0x15FA29C", VA = "0x15FA29C")]
		private Transform GetGroupPointBySite(List<Transform> list, int site)
		{
			return null;
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x15F9F84", Offset = "0x15F9F84", VA = "0x15F9F84")]
		public Transform GetSafeRoomCameraRigGroupPoint(e_group_type groupType, int site)
		{
			return null;
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x15FA354", Offset = "0x15FA354", VA = "0x15FA354")]
		public void SceneActive(int sceneBuildIndex)
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x15F9308", Offset = "0x15F9308", VA = "0x15F9308")]
		public void SceneActive_SafeRoom()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x15FA464", Offset = "0x15FA464", VA = "0x15FA464")]
		public void SceneActive_Step(int step)
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x15FA1AC", Offset = "0x15FA1AC", VA = "0x15FA1AC")]
		public GameStepSceneConfig GetStepSceneConfig(int step)
		{
			return null;
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x15FA544", Offset = "0x15FA544", VA = "0x15FA544")]
		public void LoadGameStepScene(int step, Action loadEnd, bool isLoadEndActive = false)
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x15FA860", Offset = "0x15FA860", VA = "0x15FA860")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFE0234", Offset = "0xFE0234")]
		private IEnumerator StartLoadStepScene(params int[] scenes)
		{
			return null;
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x15FA8F8", Offset = "0x15FA8F8", VA = "0x15FA8F8")]
		private void StopLoadStepScene()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x15F7190", Offset = "0x15F7190", VA = "0x15F7190")]
		public void UnLoadGameStepScene(Action unLoadEnd)
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0x15FAA0C", Offset = "0x15FAA0C", VA = "0x15FAA0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFE0298", Offset = "0xFE0298")]
		private IEnumerator StartUnLoadStepScene(params int[] scenes)
		{
			return null;
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0x15FAAA4", Offset = "0x15FAAA4", VA = "0x15FAAA4")]
		public void ChangeLoadStepScene(int step, Action loadEnd, bool isLoadEndActive = false)
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x15FAC68", Offset = "0x15FAC68", VA = "0x15FAC68")]
		private void GameStepSceneLoadedEnd(Scene scene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x15F95A8", Offset = "0x15F95A8", VA = "0x15F95A8")]
		public void Load(Action endCallBack, bool isLoadingUI = true)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x15FAEB4", Offset = "0x15FAEB4", VA = "0x15FAEB4")]
		private void SafeRoomSceneActive(Scene scene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x15FAE10", Offset = "0x15FAE10", VA = "0x15FAE10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFE02FC", Offset = "0xFE02FC")]
		private IEnumerator StartLoad(bool isLoadingUI, params int[] scenes)
		{
			return null;
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x15FAFB4", Offset = "0x15FAFB4", VA = "0x15FAFB4")]
		private void StopLoad()
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x15F7084", Offset = "0x15F7084", VA = "0x15F7084")]
		public void SetLoadingMask(bool isShow)
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x15F9514", Offset = "0x15F9514", VA = "0x15F9514")]
		public void Unload([Optional] Action unLoadFinish)
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0x15FB038", Offset = "0x15FB038", VA = "0x15FB038")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFE0360", Offset = "0xFE0360")]
		private IEnumerator StartUnLoad(Action unLoadFinish)
		{
			return null;
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x15FAD04", Offset = "0x15FAD04", VA = "0x15FAD04")]
		private void StopUnLoad()
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x15FB0D0", Offset = "0x15FB0D0", VA = "0x15FB0D0")]
		public GameSceneConfig()
		{
		}
	}

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameSceneManager Instance;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameSceneConfig curSceneCofig;

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x15F94A0", Offset = "0x15F94A0", VA = "0x15F94A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x15F6A30", Offset = "0x15F6A30", VA = "0x15F6A30")]
	public void InitScene()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x15F923C", Offset = "0x15F923C", VA = "0x15F923C")]
	public void LoadScene([Optional] Action endCallBack, bool isLoadingUI = true)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x15F9740", Offset = "0x15F9740", VA = "0x15F9740")]
	public void UnLoadScene()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x15F9754", Offset = "0x15F9754", VA = "0x15F9754")]
	public Transform GetCameraRigGroupPoint(e_group_type groupType, bool isAI, int site)
	{
		return null;
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x15F9D3C", Offset = "0x15F9D3C", VA = "0x15F9D3C")]
	public Transform GetSafeRoomCameraRigGroupPoint(e_group_type groupType, int site)
	{
		return null;
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x15FA198", Offset = "0x15FA198", VA = "0x15FA198")]
	private void LoadSceneEnd()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x15FA19C", Offset = "0x15FA19C", VA = "0x15FA19C")]
	public GameStepSceneConfig GetCurConfigStepScene(int sceneStepIndex)
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x15FA254", Offset = "0x15FA254", VA = "0x15FA254")]
	public bool IsStepSceneLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x15FA274", Offset = "0x15FA274", VA = "0x15FA274")]
	public GameSceneManager()
	{
	}
}
[Token(Token = "0x20001DF")]
public class InputManager : MonoSingleton<InputManager>
{
	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Button TrackedObject_Left;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRInput.RawButton TrackedObject_Left_Raw;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRInput.Button TrackedObject_Right;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private OVRInput.RawButton TrackedObject_Right_Raw;

	[Token(Token = "0x4000BEC")]
	private const string ButtonKeyName = "Fire1";

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private KeyCode TrackedObject_Left_KeyCode;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private KeyCode TrackedObject_Right_KeyCode;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool bGamePause;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action vrControllerSelector;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7F78", Offset = "0xFD7F78")]
	private int <button_type>k__BackingField;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private OVRManager.XRDevice lastXRDevice;

	[Token(Token = "0x17000101")]
	public int button_type
	{
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1478538", Offset = "0x1478538", VA = "0x1478538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB30", Offset = "0xFDDB30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1478540", Offset = "0x1478540", VA = "0x1478540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB40", Offset = "0xFDDB40")]
		private set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public int vr_type
	{
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1478548", Offset = "0x1478548", VA = "0x1478548")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000103")]
	public Vector3 mousePosition
	{
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x147A508", Offset = "0x147A508", VA = "0x147A508")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x14000002")]
	public event Action leftWeaponPressDown
	{
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1477AF8", Offset = "0x1477AF8", VA = "0x1477AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA30", Offset = "0xFDDA30")]
		add
		{
		}
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1477B9C", Offset = "0x1477B9C", VA = "0x1477B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA40", Offset = "0xFDDA40")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action leftWeaponPressUp
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1477C40", Offset = "0x1477C40", VA = "0x1477C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA50", Offset = "0xFDDA50")]
		add
		{
		}
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1477CE4", Offset = "0x1477CE4", VA = "0x1477CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA60", Offset = "0xFDDA60")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action rightWeaponPressDown
	{
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1477D88", Offset = "0x1477D88", VA = "0x1477D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA70", Offset = "0xFDDA70")]
		add
		{
		}
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1477E2C", Offset = "0x1477E2C", VA = "0x1477E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA80", Offset = "0xFDDA80")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action rightWeaponPressUp
	{
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1477ED0", Offset = "0x1477ED0", VA = "0x1477ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDA90", Offset = "0xFDDA90")]
		add
		{
		}
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1477F74", Offset = "0x1477F74", VA = "0x1477F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDAA0", Offset = "0xFDDAA0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action startOrStopGame
	{
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1478018", Offset = "0x1478018", VA = "0x1478018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDAB0", Offset = "0xFDDAB0")]
		add
		{
		}
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x14780BC", Offset = "0x14780BC", VA = "0x14780BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDAC0", Offset = "0xFDDAC0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action allMonsterDie
	{
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1478160", Offset = "0x1478160", VA = "0x1478160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDAD0", Offset = "0xFDDAD0")]
		add
		{
		}
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1478204", Offset = "0x1478204", VA = "0x1478204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDAE0", Offset = "0xFDDAE0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action skinCutScenes
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x14782A8", Offset = "0x14782A8", VA = "0x14782A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDAF0", Offset = "0xFDDAF0")]
		add
		{
		}
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x147834C", Offset = "0x147834C", VA = "0x147834C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB00", Offset = "0xFDDB00")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action controlServerUI
	{
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x14783F0", Offset = "0x14783F0", VA = "0x14783F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB10", Offset = "0xFDDB10")]
		add
		{
		}
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1478494", Offset = "0x1478494", VA = "0x1478494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB20", Offset = "0xFDDB20")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x14785C0", Offset = "0x14785C0", VA = "0x14785C0")]
	public void InitVRControllerObjects()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x14785C4", Offset = "0x14785C4", VA = "0x14785C4")]
	public OVRInput.Controller GetOVRInputController(bool isRight = true)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x14785E8", Offset = "0x14785E8", VA = "0x14785E8")]
	public void RefreshVRButton(int weapon_Type)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x14793E8", Offset = "0x14793E8", VA = "0x14793E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x147A504", Offset = "0x147A504", VA = "0x147A504")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x147A4F0", Offset = "0x147A4F0", VA = "0x147A4F0")]
	private void notifyAction(Action action)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x147A58C", Offset = "0x147A58C", VA = "0x147A58C")]
	private void GameEffectDebug()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x147A5B0", Offset = "0x147A5B0", VA = "0x147A5B0")]
	public InputManager()
	{
	}
}
[Token(Token = "0x20001E0")]
public class ObjectCacheManager : Singleton<ObjectCacheManager>
{
	[Serializable]
	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5D64", Offset = "0xFD5D64")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<HitResultData> <>9__5_0;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<HitResultData> <>9__5_1;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<UnitResultData> <>9__5_2;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<UnitResultData> <>9__5_3;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<FSMSystem> <>9__5_4;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<FSMSystem> <>9__5_5;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<FSMState> <>9__5_6;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Action<FSMState> <>9__5_7;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<SkillBase> <>9__5_8;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Action<SkillBase> <>9__5_9;

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x149C098", Offset = "0x149C098", VA = "0x149C098")]
		public <>c()
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x149C0A0", Offset = "0x149C0A0", VA = "0x149C0A0")]
		internal HitResultData <.ctor>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x149C0FC", Offset = "0x149C0FC", VA = "0x149C0FC")]
		internal void <.ctor>b__5_1(HitResultData data)
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x149C118", Offset = "0x149C118", VA = "0x149C118")]
		internal UnitResultData <.ctor>b__5_2()
		{
			return null;
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x149C174", Offset = "0x149C174", VA = "0x149C174")]
		internal void <.ctor>b__5_3(UnitResultData data)
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x149C190", Offset = "0x149C190", VA = "0x149C190")]
		internal FSMSystem <.ctor>b__5_4()
		{
			return null;
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x149C1EC", Offset = "0x149C1EC", VA = "0x149C1EC")]
		internal void <.ctor>b__5_5(FSMSystem fsm)
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0x149C208", Offset = "0x149C208", VA = "0x149C208")]
		internal FSMState <.ctor>b__5_6()
		{
			return null;
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0x149C264", Offset = "0x149C264", VA = "0x149C264")]
		internal void <.ctor>b__5_7(FSMState state)
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0x149C280", Offset = "0x149C280", VA = "0x149C280")]
		internal SkillBase <.ctor>b__5_8()
		{
			return null;
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0x149C2DC", Offset = "0x149C2DC", VA = "0x149C2DC")]
		internal void <.ctor>b__5_9(SkillBase skill)
		{
		}
	}

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ObjectPool<HitResultData> HitResultDataPool;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjectPool<UnitResultData> UnitResultDataPool;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectPool<FSMSystem> FSMSystemPool;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObjectPool<FSMState> FSMStatePool;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjectPool<SkillBase> SkillPool;

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x149B8C0", Offset = "0x149B8C0", VA = "0x149B8C0")]
	public ObjectCacheManager()
	{
	}
}
[Token(Token = "0x20001E1")]
internal class RaycastJobManager : MonoSingleton<RaycastJobManager>
{
	[Token(Token = "0x20004FB")]
	public struct RayData
	{
		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResultsDelegate cb;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RaycastCommand raycastCommand;

		[Token(Token = "0x600267C")]
		[Address(RVA = "0x10FE250", Offset = "0x10FE250", VA = "0x10FE250")]
		public RaycastCommand GetCommand()
		{
			return default(RaycastCommand);
		}
	}

	[Token(Token = "0x20004FC")]
	public delegate void ResultsDelegate(int index, int length);

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<RayData> rayDatas;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int hitTotle;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[WriteOnly]
	private NativeArray<RaycastHit> results;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ReadOnly]
	private NativeArray<RaycastCommand> commands;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private JobHandle handle;

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x155D2D8", Offset = "0x155D2D8", VA = "0x155D2D8")]
	public void Add(Vector3 origin, Vector3 direction, float distance, int maxHits, int layerMask, ResultsDelegate cb)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x155D448", Offset = "0x155D448", VA = "0x155D448")]
	public RaycastHit GetResult(int index)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x155D48C", Offset = "0x155D48C", VA = "0x155D48C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x155D9D8", Offset = "0x155D9D8", VA = "0x155D9D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x155DA80", Offset = "0x155DA80", VA = "0x155DA80")]
	public RaycastJobManager()
	{
	}
}
[Token(Token = "0x20001E2")]
public class SettingManager : Singleton<SettingManager>
{
	[Token(Token = "0x20004FD")]
	[SerializeField]
	public class PlayerInfo
	{
		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public IPEndPoint ipInfo;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public e_group_type playerGroup;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public e_Player_Style playeType;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public e_weapon_group playerWeapon;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public int site;

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x141254C", Offset = "0x141254C", VA = "0x141254C")]
		public PlayerInfo()
		{
		}
	}

	[Token(Token = "0x20004FE")]
	public class hardwareStruct
	{
		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int vr_type;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int hw_type;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int button_type;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int weapon_type;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pos_offset_l;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rot_offset_l;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 pos_offset_r;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 rot_offset_r;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string fire_l;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string fire_r;

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x1412718", Offset = "0x1412718", VA = "0x1412718")]
		public (Vector3, Vector3) GetDataByDir(bool isRight)
		{
			return default((Vector3, Vector3));
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x14123D8", Offset = "0x14123D8", VA = "0x14123D8")]
		public hardwareStruct()
		{
		}
	}

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string GameVersion;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PlatformVersion;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string GameName;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool debug;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isShowFPS;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public e_Server_Type ServerType;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MsgHandler.NetType NetType;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useVRInput;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string ServerIP;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int ServerPort;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string ClientIP;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int ClientPort;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string[] ClientIPs;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] ClientPorts;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool IsServer;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool IsOffline;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<string, PlayerInfo> initPlayerInfoDic;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 CameraRigPosOffset;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 CameraRigRotOffset;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int Port;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string platformIP;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int platformReceivePort;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int platformSendPort;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int hardware_type;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int vr_hmd_type;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<hardwareStruct> hardwareStructs;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private hardwareStruct def_hardwareStruct;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool isShake;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	public ushort shakeValue_min;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public ushort shakeValue_max;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public e_type_language language;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool IsEnableGroupDamage;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int CheckOpenVRRuntimeNum;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Vector3 FixEulerAngleOffset;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool isLive;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool isRecordCamera;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	public bool isEnableBhaptics;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	public bool isEnableVoice;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public GameModeType gameMode;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool useFloorTracking;

	[Token(Token = "0x4000C2B")]
	public const int GAME_SETTING_BACKUP0 = 1;

	[Token(Token = "0x4000C2C")]
	public const int GAME_SETTING_BACKUP1 = 2;

	[Token(Token = "0x4000C2D")]
	public const int GAME_SETTING_BACKUP2 = 4;

	[Token(Token = "0x4000C2E")]
	public const int GAME_SETTING_BACKUP3 = 8;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int gameSetting;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool IsPlayLogo;

	[Token(Token = "0x17000104")]
	public string GameTitle
	{
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x140FFE8", Offset = "0x140FFE8", VA = "0x140FFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000105")]
	public bool IsStandingMode
	{
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x13FF0A0", Offset = "0x13FF0A0", VA = "0x13FF0A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x141019C", Offset = "0x141019C", VA = "0x141019C")]
	public hardwareStruct GetHardwareStruct(int vr_type, int hw_type, int weapon_type)
	{
		return null;
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x1410268", Offset = "0x1410268", VA = "0x1410268")]
	private bool CheckHardwareStruct(int vr_type, int hw_type, int weapon_type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x141033C", Offset = "0x141033C", VA = "0x141033C")]
	public hardwareStruct GetCurHardwareStruct(int weapon_type)
	{
		return null;
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x141034C", Offset = "0x141034C", VA = "0x141034C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x141220C", Offset = "0x141220C", VA = "0x141220C")]
	private string LoadSetupFile()
	{
		return null;
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x1410398", Offset = "0x1410398", VA = "0x1410398")]
	private bool LoadSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x14123E0", Offset = "0x14123E0", VA = "0x14123E0")]
	public PlayerInfo GetPlayerInfoByIP(string ip)
	{
		return null;
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x1411EF4", Offset = "0x1411EF4", VA = "0x1411EF4")]
	public static string GetPlatformIP()
	{
		return null;
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x1412554", Offset = "0x1412554", VA = "0x1412554")]
	public SettingManager()
	{
	}
}
[Token(Token = "0x20001E3")]
public class StatisticalManager : Singleton<StatisticalManager>
{
	[Token(Token = "0x20004FF")]
	private enum e_StatisticalType
	{
		[Token(Token = "0x4001CC2")]
		KillMonster,
		[Token(Token = "0x4001CC3")]
		KillMonsterHead,
		[Token(Token = "0x4001CC4")]
		PlayerDeath
	}

	[Token(Token = "0x2000500")]
	private struct StatisticalCell
	{
		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int playerId;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public e_StatisticalType type;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object arg1;
	}

	[Serializable]
	[Token(Token = "0x2000501")]
	public class StatisticalResultData
	{
		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerId;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int preLevel;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int preExp;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int exp;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float score;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int totalKill;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int totalKillhead;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalDie;

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x15CC49C", Offset = "0x15CC49C", VA = "0x15CC49C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0x15CC0F4", Offset = "0x15CC0F4", VA = "0x15CC0F4")]
		public void ClearForCalculate()
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x15CBE98", Offset = "0x15CBE98", VA = "0x15CBE98")]
		public StatisticalResultData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000502")]
	public class StatisticalResults
	{
		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int winGroupId;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public float gameTime;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int curProgress;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public int maxProgress;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<StatisticalResultData> Results;

		[Token(Token = "0x170003F7")]
		public float GameTime
		{
			[Token(Token = "0x6002688")]
			[Address(RVA = "0x15CC4AC", Offset = "0x15CC4AC", VA = "0x15CC4AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F8")]
		public float TotleScore
		{
			[Token(Token = "0x6002689")]
			[Address(RVA = "0x15C9904", Offset = "0x15C9904", VA = "0x15C9904")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x15CAAF4", Offset = "0x15CAAF4", VA = "0x15CAAF4")]
		public StatisticalResultData GetResultById(int playerId)
		{
			return null;
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x15CC100", Offset = "0x15CC100", VA = "0x15CC100")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x15CAFF8", Offset = "0x15CAFF8", VA = "0x15CAFF8")]
		public static StatisticalResults ToResults(string str)
		{
			return null;
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x15CB298", Offset = "0x15CB298", VA = "0x15CB298")]
		public StatisticalResults()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000503")]
	public class PlatformStatistical
	{
		[Serializable]
		[Token(Token = "0x200089A")]
		public class PlayerData
		{
			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int pos;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int score;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int preLevel;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int level;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int preExp;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int exp;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int kill;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int headKill;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int dead;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int passCount;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int curProgress;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int maxProgress;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public InstanceData[] instanceDatas;

			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0x15CBC58", Offset = "0x15CBC58", VA = "0x15CBC58")]
			public PlayerData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200089B")]
		public class InstanceData
		{
			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int status;

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x15CBC60", Offset = "0x15CBC60", VA = "0x15CBC60")]
			public InstanceData()
			{
			}
		}

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int result;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int gameTime;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerData[] playerDatas;

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x15CBC50", Offset = "0x15CBC50", VA = "0x15CBC50")]
		public PlatformStatistical()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5D84", Offset = "0xFD5D84")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<StatisticalResultData> <>9__53_0;

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x15CC440", Offset = "0x15CC440", VA = "0x15CC440")]
		public <>c()
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x15CC448", Offset = "0x15CC448", VA = "0x15CC448")]
		internal int <Calculate>b__53_0(StatisticalResultData x, StatisticalResultData y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, List<StatisticalCell>> statisticalCellDic;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, StatisticalResultData> statisticalResultsDic;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7FA8", Offset = "0xFD7FA8")]
	private StatisticalResults <statisticalResults>k__BackingField;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7FB8", Offset = "0xFD7FB8")]
	private bool <IsStart>k__BackingField;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Stopwatch gameTimer;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7FC8", Offset = "0xFD7FC8")]
	private float <GameTimer>k__BackingField;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD7FD8", Offset = "0xFD7FD8")]
	private float <TotalTime>k__BackingField;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action StatisticalUpdate;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isNeedCalculate;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlatformStatistical platformStatistical;

	[Token(Token = "0x17000106")]
	public StatisticalResults statisticalResults
	{
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x15CAC74", Offset = "0x15CAC74", VA = "0x15CAC74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB50", Offset = "0xFDDB50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x15CAC7C", Offset = "0x15CAC7C", VA = "0x15CAC7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB60", Offset = "0xFDDB60")]
		private set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public bool IsStart
	{
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x15CAC84", Offset = "0x15CAC84", VA = "0x15CAC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB70", Offset = "0xFDDB70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x15CAC8C", Offset = "0x15CAC8C", VA = "0x15CAC8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB80", Offset = "0xFDDB80")]
		private set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public float GameTimer
	{
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x15CAC98", Offset = "0x15CAC98", VA = "0x15CAC98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDB90", Offset = "0xFDDB90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x15CACA0", Offset = "0x15CACA0", VA = "0x15CACA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDBA0", Offset = "0xFDDBA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	private float TotalTime
	{
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x15CACA8", Offset = "0x15CACA8", VA = "0x15CACA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDBB0", Offset = "0xFDDBB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x15CACB0", Offset = "0x15CACB0", VA = "0x15CACB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDBC0", Offset = "0xFDDBC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public float RemainingTime
	{
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x15CACB8", Offset = "0x15CACB8", VA = "0x15CACB8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x15CAD30", Offset = "0x15CAD30", VA = "0x15CAD30")]
	public void SetTotalTime(float time)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x15CAD38", Offset = "0x15CAD38", VA = "0x15CAD38")]
	public void TimerStop()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x15CADF4", Offset = "0x15CADF4", VA = "0x15CADF4")]
	public void TimerResume()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x15CAEC0", Offset = "0x15CAEC0", VA = "0x15CAEC0")]
	public void SetStatisticalResults(string json)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x15CB0C4", Offset = "0x15CB0C4", VA = "0x15CB0C4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x15CB1F8", Offset = "0x15CB1F8", VA = "0x15CB1F8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x15CB314", Offset = "0x15CB314", VA = "0x15CB314")]
	public void StartStatistical()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x15CB32C", Offset = "0x15CB32C", VA = "0x15CB32C")]
	public void UpdateStatistical()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x15CB470", Offset = "0x15CB470", VA = "0x15CB470")]
	public void StepStatistical()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x15CB474", Offset = "0x15CB474", VA = "0x15CB474")]
	public void EndStatistical()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x15CB488", Offset = "0x15CB488", VA = "0x15CB488")]
	public void DoStatistical()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x15CBC68", Offset = "0x15CBC68", VA = "0x15CBC68")]
	public string GetPlatformStatistical()
	{
		return null;
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x15CBC74", Offset = "0x15CBC74", VA = "0x15CBC74")]
	private void AddToDic(StatisticalCell cell)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x15CBD8C", Offset = "0x15CBD8C", VA = "0x15CBD8C")]
	public void InitPlayer(int playerId)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x15CBEA0", Offset = "0x15CBEA0", VA = "0x15CBEA0")]
	public void RecordGameStatus(int winGroupId)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x15CBEE0", Offset = "0x15CBEE0", VA = "0x15CBEE0")]
	public void RecordPlayerFire(int playerId)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x15CBEE4", Offset = "0x15CBEE4", VA = "0x15CBEE4")]
	public void RecordPlayerDeath(int playerId)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x15CBF20", Offset = "0x15CBF20", VA = "0x15CBF20")]
	public void RecordPlayerFail(int playerId)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x15CBF24", Offset = "0x15CBF24", VA = "0x15CBF24")]
	public void RecordLineFail(int playerId)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x15CBF28", Offset = "0x15CBF28", VA = "0x15CBF28")]
	public void RecordHitMonster(int playerId, bool isHead)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x15CBF2C", Offset = "0x15CBF2C", VA = "0x15CBF2C")]
	public void RecordKillMonster(int playerId, bool isHead)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x15CBF88", Offset = "0x15CBF88", VA = "0x15CBF88")]
	private StatisticalResultData GetResultData(int playerId)
	{
		return null;
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x15CC070", Offset = "0x15CC070", VA = "0x15CC070")]
	public void RecordPreResultData(WUnit unit)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x15CC0CC", Offset = "0x15CC0CC", VA = "0x15CC0CC")]
	public void RecordLevel(int playerId, int level)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x15CA1EC", Offset = "0x15CA1EC", VA = "0x15CA1EC")]
	public void Calculate()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x15CC198", Offset = "0x15CC198", VA = "0x15CC198")]
	private void OnHitPreMessage(e_type_role role, WUnit attacker, WUnit hurter, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x15CC2CC", Offset = "0x15CC2CC", VA = "0x15CC2CC")]
	public StatisticalManager()
	{
	}
}
[Token(Token = "0x20001E4")]
public enum UnitResultDataType
{
	[Token(Token = "0x4000C3C")]
	None,
	[Token(Token = "0x4000C3D")]
	HP,
	[Token(Token = "0x4000C3E")]
	EXP
}
[Token(Token = "0x20001E5")]
public enum UnitResultDataValueType
{
	[Token(Token = "0x4000C40")]
	NONE,
	[Token(Token = "0x4000C41")]
	INT
}
[Token(Token = "0x20001E6")]
public class UnitDataSyncManager : Singleton<UnitDataSyncManager>
{
	[Token(Token = "0x2000505")]
	public struct tempData
	{
		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UnitResultDataType type;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnitResultDataValueType valueType;

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x10FD060", Offset = "0x10FD060", VA = "0x10FD060")]
		public tempData(int objId, UnitResultDataType type, UnitResultDataValueType valueType)
		{
		}
	}

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<tempData> tempUnitDataList;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<UnitResultData> tempUnitDataList2;

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x1468F58", Offset = "0x1468F58", VA = "0x1468F58")]
	public void AddUnitDataSync_Int(int objId, UnitResultDataType type)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x1468FD8", Offset = "0x1468FD8", VA = "0x1468FD8")]
	public void ProcessingUnitData_Send()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x14691E4", Offset = "0x14691E4", VA = "0x14691E4")]
	private UnitResultData ProcessingUnitData(tempData tempData)
	{
		return null;
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x1469428", Offset = "0x1469428", VA = "0x1469428")]
	public void ProcessingUnitData_Sync(UnitData unitData)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x14697DC", Offset = "0x14697DC", VA = "0x14697DC")]
	public UnitDataSyncManager()
	{
	}
}
[Token(Token = "0x20001E7")]
public class UnitManager : Singleton<UnitManager>
{
	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action WeaponChange;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<WUnit> PlayerStyleChange;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<WUnit, int, int> LevelChange;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x1469B84", Offset = "0x1469B84", VA = "0x1469B84")]
	public void ChangePlayerStyle(WUnit unit, e_Player_Style newPlayerStyle, int level)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x146AB68", Offset = "0x146AB68", VA = "0x146AB68")]
	public void ChangeWeaponStyle(WUnit unit, e_weapon_group newWeaponStyle)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x146C2D4", Offset = "0x146C2D4", VA = "0x146C2D4")]
	public void ChangeDropWeapon(WUnit unit, e_weapon_group newWeaponStyle)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x146C68C", Offset = "0x146C68C", VA = "0x146C68C")]
	public void ChangePlayerGroup(WUnit unit, e_group_type groupId)
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x146C7D4", Offset = "0x146C7D4", VA = "0x146C7D4")]
	private void LocalSiwtchAreaStand(WUnit unit, e_group_type groupId)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x146CE40", Offset = "0x146CE40", VA = "0x146CE40")]
	public void AllLocalSiwtchAreaStand()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x146CAA0", Offset = "0x146CAA0", VA = "0x146CAA0")]
	private void OtherSiwtchAreaStand(WUnit unit, e_group_type groupId)
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x146CF40", Offset = "0x146CF40", VA = "0x146CF40")]
	public void AllOtherSiwtchAreaStand()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x146CCB8", Offset = "0x146CCB8", VA = "0x146CCB8")]
	public static Vector3 GetCameraPosAndRotOffset(Vector3 inputPos, Quaternion inputRot, bool overrideY)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x146D040", Offset = "0x146D040", VA = "0x146D040")]
	public void PlayerLevelUp(WUnit unit, int level, int exp)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x146D390", Offset = "0x146D390", VA = "0x146D390")]
	private void SetPlayerNumeric(WUnit unit, int playerTableId, int level, int exp)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x146D6AC", Offset = "0x146D6AC", VA = "0x146D6AC")]
	private void SetMonsterNumeric(WUnit unit, int monsterTableId, int level)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x146D99C", Offset = "0x146D99C", VA = "0x146D99C")]
	private void SetWeaponNumeric(WUnit unit, int weaponTableId, int level)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x146DAC8", Offset = "0x146DAC8", VA = "0x146DAC8")]
	public void PlayerLevelReset(WUnit unit)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x146DE78", Offset = "0x146DE78", VA = "0x146DE78")]
	public WUnit CreateLocalPlayerUnit(int id, e_group_type groupId, e_Player_Style playerStyle, e_weapon_group weaponType, int level)
	{
		return null;
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x1469FE8", Offset = "0x1469FE8", VA = "0x1469FE8")]
	public WUnit CreateLocalPlayerUnit(WUnit unit, e_Player_Style playerStyle, e_weapon_group weaponType, int level)
	{
		return null;
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x146ACD0", Offset = "0x146ACD0", VA = "0x146ACD0")]
	public void TryCreateLocalPlayerWeapon(WUnit unit, e_weapon_group weaponType)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x146E124", Offset = "0x146E124", VA = "0x146E124")]
	public WUnit CreateOtherPlayer(int id, e_group_type groupId, e_Player_Style playerStyle, e_weapon_group weaponType, int level)
	{
		return null;
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x146A61C", Offset = "0x146A61C", VA = "0x146A61C")]
	public WUnit CreateOtherPlayer(WUnit unit, e_Player_Style playerStyle, e_weapon_group weaponType, int level)
	{
		return null;
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x146BB18", Offset = "0x146BB18", VA = "0x146BB18")]
	public void TryCreateOtherPlayerWeapon(WUnit unit, e_weapon_group weaponType)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x146E3D0", Offset = "0x146E3D0", VA = "0x146E3D0")]
	public WUnit CreateNPCUnit(int objId, int tableId, e_group_type groupType)
	{
		return null;
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x146EBDC", Offset = "0x146EBDC", VA = "0x146EBDC")]
	public void TryCreateNPCWeapon(WUnit unit, e_weapon_group weaponType)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x146F6D4", Offset = "0x146F6D4", VA = "0x146F6D4")]
	public WUnit CreateMonsterUnit(int objId, int tableId, int level)
	{
		return null;
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x146FD70", Offset = "0x146FD70", VA = "0x146FD70")]
	public UnitManager()
	{
	}
}
[Token(Token = "0x20001E8")]
public class WeaponManager : Singleton<WeaponManager>
{
	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x15AD5CC", Offset = "0x15AD5CC", VA = "0x15AD5CC")]
	public (GameObject, e_weapon_type, GameObject, e_weapon_type) CreatePlayerWeaponByGroup(e_weapon_group weaponGroup)
	{
		return default((GameObject, e_weapon_type, GameObject, e_weapon_type));
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x15AC970", Offset = "0x15AC970", VA = "0x15AC970")]
	public (GameObject, e_weapon_type, GameObject, e_weapon_type) CreateNpcWeaponByGroup(e_weapon_group weaponGroup)
	{
		return default((GameObject, e_weapon_type, GameObject, e_weapon_type));
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x15AD864", Offset = "0x15AD864", VA = "0x15AD864")]
	public WeaponManager()
	{
	}
}
[Token(Token = "0x20001E9")]
public class DeathAnimation : MonoBehaviour, IDeathDefine
{
	[Token(Token = "0x2000506")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5D94", Offset = "0xFD5D94")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action endAction;

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x13D905C", Offset = "0x13D905C", VA = "0x13D905C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x13D906C", Offset = "0x13D906C", VA = "0x13D906C")]
		internal void <TriggerDeathDefine>b__0()
		{
		}
	}

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Animator animationControll;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string aniStateName;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int aniDelay;

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x13D8EFC", Offset = "0x13D8EFC", VA = "0x13D8EFC", Slot = "5")]
	public virtual void TriggerDeathDefine(Action endAction)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x13D9064", Offset = "0x13D9064", VA = "0x13D9064")]
	public DeathAnimation()
	{
	}
}
[Token(Token = "0x20001EA")]
public class DieRecycleObject : IObjectRecycle
{
	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ComponentCacheTools cache;

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x13D9320", Offset = "0x13D9320", VA = "0x13D9320")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x13D9380", Offset = "0x13D9380", VA = "0x13D9380", Slot = "4")]
	public override void Recycle()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x13D962C", Offset = "0x13D962C", VA = "0x13D962C", Slot = "5")]
	public override void Recover()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x13D9630", Offset = "0x13D9630", VA = "0x13D9630")]
	public DieRecycleObject()
	{
	}
}
[Token(Token = "0x20001EB")]
public class FirstPersonShootController : MonoBehaviour
{
	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform weaponNode;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform weaponNode2;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform cameraNode;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float moveSpeed;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendSpeed;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 moveBlend;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD8018", Offset = "0xFD8018")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8018", Offset = "0xFD8018")]
	public float aimVerticalLimit;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD8070", Offset = "0xFD8070")]
	public float maxViewAngle;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerMoveRange playerMoveLimit;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 aimRandom;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 aimVel;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float aimWeight;

	[Token(Token = "0x1700010B")]
	private static Vector3 inputVector
	{
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x15EC534", Offset = "0x15EC534", VA = "0x15EC534")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010C")]
	private static Vector3 inputVectorRaw
	{
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x15EC5D4", Offset = "0x15EC5D4", VA = "0x15EC5D4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x15EC674", Offset = "0x15EC674", VA = "0x15EC674")]
	private void AnimationMove(Vector3 moveInput, bool isMoving)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x15EC800", Offset = "0x15EC800", VA = "0x15EC800")]
	private void Move()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x15ECAE8", Offset = "0x15ECAE8", VA = "0x15ECAE8")]
	private void RotateWeapon(float horAdd, float vertAdd)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x15ECDBC", Offset = "0x15ECDBC", VA = "0x15ECDBC")]
	public void RotateCharacter(Vector3 forward, float maxAngle, [Optional] Transform fix)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x15ED14C", Offset = "0x15ED14C", VA = "0x15ED14C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x15ED158", Offset = "0x15ED158", VA = "0x15ED158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x15ED1C4", Offset = "0x15ED1C4", VA = "0x15ED1C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x15ED280", Offset = "0x15ED280", VA = "0x15ED280")]
	public FirstPersonShootController()
	{
	}
}
[Token(Token = "0x20001EC")]
[AttributeAttribute(Name = "ComponentCacheAttribute", RVA = "0xFD29C4", Offset = "0xFD29C4")]
public class HurtDefine : MonoBehaviour
{
	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit _owner;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchInfoData HitSwitchInfo;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEvent HitAudioEvent;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SwitchInfoData DieSwitchInfo;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isDieAudioPosition;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent DieAudioEvent;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchInfoData HeadHitSwitchInfo;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioEvent HeadHitAudioEvent;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SwitchInfoData HeadDieSwitchInfo;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioEvent HeadDieAudioEvent;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider partCollider;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] HitEffect;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] HitEffectAdd;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] DieEffect;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] DieEffectAdd;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float DieDelay;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool isHead;

	[Token(Token = "0x1700010D")]
	public WUnit Owner
	{
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1474038", Offset = "0x1474038", VA = "0x1474038")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x1473F38", Offset = "0x1473F38", VA = "0x1473F38")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x1474030", Offset = "0x1474030", VA = "0x1474030")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x1474040", Offset = "0x1474040", VA = "0x1474040")]
	public void SetPartColliderStatus(bool status)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x1474100", Offset = "0x1474100", VA = "0x1474100")]
	public void ShowHitEffect(Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x1474374", Offset = "0x1474374", VA = "0x1474374")]
	public void ShowHitAduio(Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x1474528", Offset = "0x1474528", VA = "0x1474528")]
	public void ShowDieEffect(Vector3 lookPoint)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x1474820", Offset = "0x1474820", VA = "0x1474820")]
	public void ShowDieAudio(Vector3 lookPoint)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x1474A4C", Offset = "0x1474A4C", VA = "0x1474A4C")]
	public void SyncPlayerHp(int currentHp)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x1474A50", Offset = "0x1474A50", VA = "0x1474A50")]
	public void PlayReviveAudio()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x1474A54", Offset = "0x1474A54", VA = "0x1474A54")]
	public HurtDefine()
	{
	}
}
[Token(Token = "0x20001ED")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD2A28", Offset = "0xFD2A28")]
public class OtherMonsterNetSyncController : MonoBehaviour
{
	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpSpeed;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 Pos;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion Rot;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AimIKTools aimIKTools;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isStaticMove;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isForbidMove;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<bool> AnimatorSetBoolAction;

	[Token(Token = "0x1700010E")]
	public bool IsStaticMove
	{
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x149F6EC", Offset = "0x149F6EC", VA = "0x149F6EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x149F6F4", Offset = "0x149F6F4", VA = "0x149F6F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public bool IsForbidMove
	{
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x149F700", Offset = "0x149F700", VA = "0x149F700")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x149F708", Offset = "0x149F708", VA = "0x149F708")]
		set
		{
		}
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x149F714", Offset = "0x149F714", VA = "0x149F714")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x14968A0", Offset = "0x14968A0", VA = "0x14968A0")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x149F7F4", Offset = "0x149F7F4", VA = "0x149F7F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x149F8B4", Offset = "0x149F8B4", VA = "0x149F8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x149FB3C", Offset = "0x149FB3C", VA = "0x149FB3C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x149FBDC", Offset = "0x149FBDC", VA = "0x149FBDC")]
	public void SetTransformImmediately(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x149FC44", Offset = "0x149FC44", VA = "0x149FC44")]
	public void SyncTransform(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x149FC58", Offset = "0x149FC58", VA = "0x149FC58")]
	public void SyncAnimator(string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x149FD1C", Offset = "0x149FD1C", VA = "0x149FD1C")]
	public void SyncAniParameter(string b, bool c, string e, float f, string h, float i)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x149FE80", Offset = "0x149FE80", VA = "0x149FE80")]
	public void StartAim(string ainState, Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x149FFBC", Offset = "0x149FFBC", VA = "0x149FFBC")]
	public void StopAim()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x14A00B4", Offset = "0x14A00B4", VA = "0x14A00B4")]
	public void SyncAimPos(Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x14A01DC", Offset = "0x14A01DC", VA = "0x14A01DC")]
	public OtherMonsterNetSyncController()
	{
	}
}
[Token(Token = "0x20001EE")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD2A8C", Offset = "0xFD2A8C")]
public class OtherPlayerNetSyncController : MonoBehaviour
{
	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IKAgent ikAgent;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WeaponAgent weaponAgent;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator otherAnimator;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerDeadRagdollTools deadTools;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool InversePlayerForword;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 gunPosition_r;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion gunRotate_r;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 gunForword_r;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 gunPosition_l;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion gunRotate_l;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 gunForword_l;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 prePosition;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float movingTimer;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float startMoveBase;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float movingTime;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float blandScale;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 currentBland;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float smoothSpeed;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float teleportDis;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 selfPosition;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion selfRotate;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float modelHight;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float playerHight;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 VRHeadPosition;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Quaternion VRHeadRotate;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 VRHeadPosition_raw;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Quaternion VRHeadRotate_raw;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool isStaticMove;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float staticSpeed;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform StaticTrn;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isNetGlobalSync;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 realPos;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool miss;

	[Token(Token = "0x17000110")]
	public Vector3 VRHeadPos
	{
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x14A10D8", Offset = "0x14A10D8", VA = "0x14A10D8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000111")]
	public Quaternion VRHeadRot
	{
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x14A1290", Offset = "0x14A1290", VA = "0x14A1290")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000112")]
	public Vector3 VRHeadPos_Raw
	{
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x14A129C", Offset = "0x14A129C", VA = "0x14A129C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000113")]
	public Quaternion VRHeadRot_Raw
	{
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x14A12DC", Offset = "0x14A12DC", VA = "0x14A12DC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000114")]
	public bool IsStaticMove
	{
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x14A12F0", Offset = "0x14A12F0", VA = "0x14A12F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x14A12F8", Offset = "0x14A12F8", VA = "0x14A12F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public bool IsNetGlobalSync
	{
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x14A1310", Offset = "0x14A1310", VA = "0x14A1310")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x14A1304", Offset = "0x14A1304", VA = "0x14A1304")]
		set
		{
		}
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x14A1318", Offset = "0x14A1318", VA = "0x14A1318")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x14A13A0", Offset = "0x14A13A0", VA = "0x14A13A0")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x14A153C", Offset = "0x14A153C", VA = "0x14A153C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x14A1BC4", Offset = "0x14A1BC4", VA = "0x14A1BC4")]
	private void CheckMoving(Animator iAnimator)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x14A196C", Offset = "0x14A196C", VA = "0x14A196C")]
	private void UpdatePlayerData()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x14A1E84", Offset = "0x14A1E84", VA = "0x14A1E84")]
	public void Die(int ragdollId, Vector3 dir, float hitForce, bool isSameCamp)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x14A1F80", Offset = "0x14A1F80", VA = "0x14A1F80")]
	public void Alive()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x14A1114", Offset = "0x14A1114", VA = "0x14A1114")]
	private bool CheckRealPosition(Vector3 pos, out Vector3 realPos, out bool miss)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x14A2028", Offset = "0x14A2028", VA = "0x14A2028")]
	public void SyncGun_R(Vector3 pos, Quaternion rotate, Vector3 forward)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x14A21A4", Offset = "0x14A21A4", VA = "0x14A21A4")]
	public void SyncGun_L(Vector3 pos, Quaternion rotate, Vector3 forward)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x14A2354", Offset = "0x14A2354", VA = "0x14A2354")]
	public void SyncPlayer(Vector3 pos, Quaternion rotate)
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x14A24E0", Offset = "0x14A24E0", VA = "0x14A24E0")]
	public void SyncVRHead(Vector3 pos, Quaternion rotate, Vector3 pos_raw, Quaternion rotate_raw)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x14A2510", Offset = "0x14A2510", VA = "0x14A2510")]
	public OtherPlayerNetSyncController()
	{
	}
}
[Token(Token = "0x20001EF")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD2AF0", Offset = "0xFD2AF0")]
public class ServerMonsterNetSyncController : MonoBehaviour
{
	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WUnit owner;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NavMeshAgent navAgent;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<bool> AnimatorSetBoolAction;

	[Token(Token = "0x17000116")]
	public float animatorSpeed
	{
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x140B3BC", Offset = "0x140B3BC", VA = "0x140B3BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x140B2D0", Offset = "0x140B2D0", VA = "0x140B2D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x140B3B4", Offset = "0x140B3B4", VA = "0x140B3B4")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x140B3D8", Offset = "0x140B3D8", VA = "0x140B3D8")]
	public AnimatorStateInfo GetCurrentAnimatorStateInfo(int layerIndex)
	{
		return default(AnimatorStateInfo);
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x140B3F4", Offset = "0x140B3F4", VA = "0x140B3F4")]
	public void CrossFade(string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x140B518", Offset = "0x140B518", VA = "0x140B518")]
	public void SyncAniParameter(string b, bool c, string e, float f, string h, float i)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x140B67C", Offset = "0x140B67C", VA = "0x140B67C")]
	public void GetTransformInfo(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x140B6E8", Offset = "0x140B6E8", VA = "0x140B6E8")]
	public void FireStart()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x140B820", Offset = "0x140B820", VA = "0x140B820")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x140B950", Offset = "0x140B950", VA = "0x140B950")]
	public void FireEnd()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x140BA88", Offset = "0x140BA88", VA = "0x140BA88")]
	public void SetNavMeshAreaMask(int roomIndex)
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x140B44C", Offset = "0x140B44C", VA = "0x140B44C")]
	public void SendAnimator(string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x140BB64", Offset = "0x140BB64", VA = "0x140BB64")]
	public ServerMonsterNetSyncController()
	{
	}
}
[Token(Token = "0x20001F0")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD2B54", Offset = "0xFD2B54")]
public class ServerPlayerNetSyncController : MonoBehaviour
{
	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD80A8", Offset = "0xFD80A8")]
	private WUnit <owner>k__BackingField;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float modelHeight;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform colliderRoot;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 prePosition;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float movingTimer;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float startMoveBase;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float movingTime;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float blandScale;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 currentBland;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 selfPosition;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion selfRotate;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 VRHeadPosition;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion VRHeadRotate;

	[Token(Token = "0x17000117")]
	public WUnit owner
	{
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x140BB6C", Offset = "0x140BB6C", VA = "0x140BB6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDBD0", Offset = "0xFDDBD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x140BB74", Offset = "0x140BB74", VA = "0x140BB74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDBE0", Offset = "0xFDDBE0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x140BB7C", Offset = "0x140BB7C", VA = "0x140BB7C")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x140BB84", Offset = "0x140BB84", VA = "0x140BB84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x140BBE4", Offset = "0x140BBE4", VA = "0x140BBE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x140BBE8", Offset = "0x140BBE8", VA = "0x140BBE8")]
	private void CheckMoving()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x140BED0", Offset = "0x140BED0", VA = "0x140BED0")]
	public void SyncPlayer(Vector3 pos, Quaternion rotate)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x140BEE4", Offset = "0x140BEE4", VA = "0x140BEE4")]
	public void SyncVRHead(Vector3 pos, Quaternion rotate)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x140BEF8", Offset = "0x140BEF8", VA = "0x140BEF8")]
	public ServerPlayerNetSyncController()
	{
	}
}
[Token(Token = "0x20001F1")]
public class ShowFPS : MonoBehaviour
{
	[Token(Token = "0x4000CA6")]
	private const float FrameInternal = 0.5f;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fps;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mFramer;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastFrame;

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x1413958", Offset = "0x1413958", VA = "0x1413958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x1413980", Offset = "0x1413980", VA = "0x1413980")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x1413AEC", Offset = "0x1413AEC", VA = "0x1413AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x1413B68", Offset = "0x1413B68", VA = "0x1413B68")]
	public ShowFPS()
	{
	}
}
[Token(Token = "0x20001F2")]
public class ShowFPSHMD : MonoBehaviour
{
	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ShowFPS fpsC;

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x1413B70", Offset = "0x1413B70", VA = "0x1413B70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x1413C18", Offset = "0x1413C18", VA = "0x1413C18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x1413D10", Offset = "0x1413D10", VA = "0x1413D10")]
	public ShowFPSHMD()
	{
	}
}
[Token(Token = "0x20001F3")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2BB8", Offset = "0xFD2BB8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2BB8", Offset = "0xFD2BB8")]
public class BossSyncBullet : ActionTask
{
	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x1646484", Offset = "0x1646484", VA = "0x1646484", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x1646728", Offset = "0x1646728", VA = "0x1646728")]
	public BossSyncBullet()
	{
	}
}
[Token(Token = "0x20001F4")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2C1C", Offset = "0xFD2C1C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2C1C", Offset = "0xFD2C1C")]
public class CheckDistanceFormPointToTarget : ConditionTask
{
	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> sourcePoint;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CompareMethod checkType;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> distance;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD80B8", Offset = "0xFD80B8")]
	public float floatingPoint;

	[Token(Token = "0x17000118")]
	protected override string info
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1445914", Offset = "0x1445914", VA = "0x1445914", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x1445B50", Offset = "0x1445B50", VA = "0x1445B50", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x1445C70", Offset = "0x1445C70", VA = "0x1445C70", Slot = "11")]
	public override void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x1445D70", Offset = "0x1445D70", VA = "0x1445D70")]
	public CheckDistanceFormPointToTarget()
	{
	}
}
[Token(Token = "0x20001F5")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2C80", Offset = "0xFD2C80")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2C80", Offset = "0xFD2C80")]
public class CheckListCount : ConditionTask
{
	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<IList> sourceList;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CompareMethod checkType;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> valueB;

	[Token(Token = "0x17000119")]
	protected override string info
	{
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1446A94", Offset = "0x1446A94", VA = "0x1446A94", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x1446C10", Offset = "0x1446C10", VA = "0x1446C10", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x1446D10", Offset = "0x1446D10", VA = "0x1446D10")]
	public CheckListCount()
	{
	}
}
[Token(Token = "0x20001F6")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2CE4", Offset = "0xFD2CE4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2CE4", Offset = "0xFD2CE4")]
public class GetAllPlayersUnit : ActionTask
{
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<List<WUnit>> saveAs;

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x14EDA08", Offset = "0x14EDA08", VA = "0x14EDA08", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x14EDAF8", Offset = "0x14EDAF8", VA = "0x14EDAF8")]
	public GetAllPlayersUnit()
	{
	}
}
[Token(Token = "0x20001F7")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2D48", Offset = "0xFD2D48")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2D48", Offset = "0xFD2D48")]
public class GetFireTargetUnit : ActionTask
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> leftFireTargetUnit;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<WUnit> rightFireTargetUnit;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<List<WUnit>> targetWUnitList;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Vector3> lookAtPosition;

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x14EDC90", Offset = "0x14EDC90", VA = "0x14EDC90", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x14EE024", Offset = "0x14EE024", VA = "0x14EE024")]
	private Vector3 GetLookAtPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x14EE170", Offset = "0x14EE170", VA = "0x14EE170")]
	public GetFireTargetUnit()
	{
	}
}
[Token(Token = "0x20001F8")]
public enum e_type_transform_property
{
	[Token(Token = "0x4000CC1")]
	position,
	[Token(Token = "0x4000CC2")]
	localPosition,
	[Token(Token = "0x4000CC3")]
	rotation,
	[Token(Token = "0x4000CC4")]
	localRotation,
	[Token(Token = "0x4000CC5")]
	lossyScale
}
[Token(Token = "0x20001F9")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2DAC", Offset = "0xFD2DAC")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2DAC", Offset = "0xFD2DAC")]
public class GetPropertyInTransform : ActionTask
{
	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> source;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public e_type_transform_property propertyType;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBObjectParameter saveAs;

	[Token(Token = "0x1700011A")]
	protected override string info
	{
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x14EE9B0", Offset = "0x14EE9B0", VA = "0x14EE9B0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x14EEA38", Offset = "0x14EEA38", VA = "0x14EEA38", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x14EEC3C", Offset = "0x14EEC3C", VA = "0x14EEC3C")]
	public GetPropertyInTransform()
	{
	}
}
[Token(Token = "0x20001FA")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2E10", Offset = "0xFD2E10")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2E10", Offset = "0xFD2E10")]
public class MonsterJumpToPoint : ActionTask<Transform>
{
	[Token(Token = "0x2000507")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5DA4", Offset = "0xFD5DA4")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonsterJumpToPoint <>4__this;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GoSpline path;

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x14BA20C", Offset = "0x14BA20C", VA = "0x14BA20C")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x14BA59C", Offset = "0x14BA59C", VA = "0x14BA59C")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFD8134", Offset = "0xFD8134")]
	public BBParameter<float> targetPercent;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> curPercent;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> upFactor;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> jumpSpeed;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<float> time;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<bool> isRefParent;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 beginPos;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Action updateAction;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x14B9EF8", Offset = "0x14B9EF8", VA = "0x14B9EF8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x14BA4B8", Offset = "0x14BA4B8", VA = "0x14BA4B8", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x14BA4CC", Offset = "0x14BA4CC", VA = "0x14BA4CC", Slot = "14")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x14BA214", Offset = "0x14BA214", VA = "0x14BA214")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x14BA500", Offset = "0x14BA500", VA = "0x14BA500")]
	public MonsterJumpToPoint()
	{
	}
}
[Token(Token = "0x20001FB")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2E74", Offset = "0xFD2E74")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2E74", Offset = "0xFD2E74")]
public class SetMonsterDestination : ActionTask<Transform>
{
	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 Offset;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> destinationPoint;

	[Token(Token = "0x1700011B")]
	protected override string info
	{
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x140FD74", Offset = "0x140FD74", VA = "0x140FD74", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x140FE08", Offset = "0x140FE08", VA = "0x140FE08", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x140FE9C", Offset = "0x140FE9C", VA = "0x140FE9C")]
	public SetMonsterDestination()
	{
	}
}
[Token(Token = "0x20001FC")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2ED8", Offset = "0xFD2ED8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2ED8", Offset = "0xFD2ED8")]
public class TransformPoint : ActionTask<Transform>
{
	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> relativeTarget;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 sourceVector3;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Vector3> saveAtPos;

	[Token(Token = "0x1700011C")]
	protected override string info
	{
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1464C08", Offset = "0x1464C08", VA = "0x1464C08", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x1464B74", Offset = "0x1464B74", VA = "0x1464B74", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1464C9C", Offset = "0x1464C9C", VA = "0x1464C9C")]
	public TransformPoint()
	{
	}
}
[Token(Token = "0x20001FD")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2F3C", Offset = "0xFD2F3C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2F3C", Offset = "0xFD2F3C")]
public class BossBarrageFirePoint : ActionTask
{
	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> firePoint;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Transform> fireBeginPoint;

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x163EA48", Offset = "0x163EA48", VA = "0x163EA48", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x163EC74", Offset = "0x163EC74", VA = "0x163EC74")]
	public BossBarrageFirePoint()
	{
	}
}
[Token(Token = "0x20001FE")]
public class BossBombingBullet : MonsterBullet
{
	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 prePos;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 realTargetPos;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float moveTime;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float percent;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject boomEffect;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent FireAudio;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public AudioEvent FireLoopAudio;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WwiseDefine fireSoundWwise;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine fireLoopSoundWwise;

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x163EED8", Offset = "0x163EED8", VA = "0x163EED8", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x163F1DC", Offset = "0x163F1DC", VA = "0x163F1DC", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x163F3EC", Offset = "0x163F3EC", VA = "0x163F3EC", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x163F3F4", Offset = "0x163F3F4", VA = "0x163F3F4", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x163F414", Offset = "0x163F414", VA = "0x163F414")]
	private void BulletEnd()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x163F514", Offset = "0x163F514", VA = "0x163F514")]
	protected void ApplyBoomEffect(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x163F5E4", Offset = "0x163F5E4", VA = "0x163F5E4", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x163F70C", Offset = "0x163F70C", VA = "0x163F70C")]
	public BossBombingBullet()
	{
	}
}
[Token(Token = "0x20001FF")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD2FA0", Offset = "0xFD2FA0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD2FA0", Offset = "0xFD2FA0")]
public class BossBombingFirePoint : ActionTask<BossMainController>
{
	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePoint;

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x163F794", Offset = "0x163F794", VA = "0x163F794", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x163F93C", Offset = "0x163F93C", VA = "0x163F93C")]
	public BossBombingFirePoint()
	{
	}
}
[Token(Token = "0x2000200")]
public class BossRedWarningBullet : MonsterBullet
{
	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x1645AC8", Offset = "0x1645AC8", VA = "0x1645AC8", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x1645ACC", Offset = "0x1645ACC", VA = "0x1645ACC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x1645B78", Offset = "0x1645B78", VA = "0x1645B78", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x1645BB4", Offset = "0x1645BB4", VA = "0x1645BB4", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x1645BD4", Offset = "0x1645BD4", VA = "0x1645BD4")]
	public BossRedWarningBullet()
	{
	}
}
[Token(Token = "0x2000201")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD3004", Offset = "0xFD3004")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD3004", Offset = "0xFD3004")]
public class CheckIsBossAppearance : ConditionTask
{
	[Token(Token = "0x1700011D")]
	protected override string info
	{
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x144693C", Offset = "0x144693C", VA = "0x144693C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x1446A14", Offset = "0x1446A14", VA = "0x1446A14", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x1446A8C", Offset = "0x1446A8C", VA = "0x1446A8C")]
	public CheckIsBossAppearance()
	{
	}
}
[Token(Token = "0x2000202")]
public class MonsterBulletBarrage : MonsterBullet
{
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioEvent FireAudio;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public AudioEvent FireLoopAudio;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WwiseDefine fireSoundWwise;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WwiseDefine fireLoopSoundWwise;

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x14B5F00", Offset = "0x14B5F00", VA = "0x14B5F00", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x14B6078", Offset = "0x14B6078", VA = "0x14B6078", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x14B6288", Offset = "0x14B6288", VA = "0x14B6288")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x14B6334", Offset = "0x14B6334", VA = "0x14B6334", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x14B633C", Offset = "0x14B633C", VA = "0x14B633C", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x14B635C", Offset = "0x14B635C", VA = "0x14B635C")]
	private void BulletEnd()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x14B6418", Offset = "0x14B6418", VA = "0x14B6418", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x14B64C4", Offset = "0x14B64C4", VA = "0x14B64C4")]
	public MonsterBulletBarrage()
	{
	}
}
[Token(Token = "0x2000203")]
public enum BossMainDone
{
	[Token(Token = "0x4000CEC")]
	Default,
	[Token(Token = "0x4000CED")]
	Born,
	[Token(Token = "0x4000CEE")]
	Barrage,
	[Token(Token = "0x4000CEF")]
	Bomb,
	[Token(Token = "0x4000CF0")]
	Laser,
	[Token(Token = "0x4000CF1")]
	Summon
}
[Token(Token = "0x2000204")]
public enum BossMainToDo
{
	[Token(Token = "0x4000CF3")]
	Born,
	[Token(Token = "0x4000CF4")]
	Barrage,
	[Token(Token = "0x4000CF5")]
	Bomb,
	[Token(Token = "0x4000CF6")]
	Laser,
	[Token(Token = "0x4000CF7")]
	Summon
}
[Token(Token = "0x2000205")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD3064", Offset = "0xFD3064")]
public class BossMainController : MonoBehaviour
{
	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInit;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform FireBeginPoint;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> FirePoints;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> BombingFirePoints;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform CleanBulletRoot;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BloodHudObj;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BossMultiBlood BloodHud;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform BloodHudRoot;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BossMainController SingleInstance;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x1642714", Offset = "0x1642714", VA = "0x1642714")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x1642C7C", Offset = "0x1642C7C", VA = "0x1642C7C")]
	public void SetOwner(WUnit owner)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x1642C84", Offset = "0x1642C84", VA = "0x1642C84")]
	public void Die()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x1642D28", Offset = "0x1642D28", VA = "0x1642D28")]
	public void Dodestroy()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x1642A84", Offset = "0x1642A84", VA = "0x1642A84")]
	private void StartLookAt()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x1642E14", Offset = "0x1642E14", VA = "0x1642E14")]
	private void EndLookAt()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x163EBD4", Offset = "0x163EBD4", VA = "0x163EBD4")]
	public Transform GetBarrageFirePoint()
	{
		return null;
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x163F89C", Offset = "0x163F89C", VA = "0x163F89C")]
	public Transform GetBombingFirePoint()
	{
		return null;
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x1642BC8", Offset = "0x1642BC8", VA = "0x1642BC8")]
	private void CleanBullet()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x1642E88", Offset = "0x1642E88", VA = "0x1642E88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x16428C0", Offset = "0x16428C0", VA = "0x16428C0")]
	private void InitBossMultiBlood()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x163E5E0", Offset = "0x163E5E0", VA = "0x163E5E0")]
	public void SetBossBloodActive(bool isActive)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x1643050", Offset = "0x1643050", VA = "0x1643050")]
	public void SetBossBlood(int hp)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x1642F98", Offset = "0x1642F98", VA = "0x1642F98")]
	private void UpdateBossBloodHp()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x16430FC", Offset = "0x16430FC", VA = "0x16430FC")]
	public BossMainController()
	{
	}
}
[Token(Token = "0x2000206")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD30C8", Offset = "0xFD30C8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD30C8", Offset = "0xFD30C8")]
public class BossMainInit : ActionTask<BossMainController>
{
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFD814C", Offset = "0xFD814C")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> ownerObj;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> patrolDownPoints;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> patrolUpPointsForSkill1;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> patrolDownPointsForSkill1;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[BlackboardOnly]
	public BBParameter<List<Transform>> bombPoints;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[BlackboardOnly]
	public BBParameter<Transform> inCombatPoint;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[BlackboardOnly]
	public BBParameter<Transform> bombingUpPoint;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[BlackboardOnly]
	public BBParameter<Transform> bombingUpPoint2;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> laserStayPoints;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> summonStayPoints;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[BlackboardOnly]
	public BBParameter<GameModeType> gameModeType;

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x16431A8", Offset = "0x16431A8", VA = "0x16431A8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x1643298", Offset = "0x1643298", VA = "0x1643298")]
	private void InitFromMainScene()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x1643DB4", Offset = "0x1643DB4", VA = "0x1643DB4")]
	public BossMainInit()
	{
	}
}
[Token(Token = "0x2000207")]
public class BossPointManager : MonoBehaviour
{
	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> patrolDownPoints;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> patrolUpPointsForSkill1;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> patrolDownPointsForSkill1;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> bombPoints;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> laserStayPointList;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> summonStayPoints;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform inCombatPoint;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform barragePoint;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform bombingUpPoint;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform bombingUpPoint2;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform bossAppearanceMoveToPoint;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform appearanceText;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Hud;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BossPointManager _instance;

	[Token(Token = "0x1700011E")]
	public static BossPointManager Instance
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x1645A18", Offset = "0x1645A18", VA = "0x1645A18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x1645A68", Offset = "0x1645A68", VA = "0x1645A68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x1645AC0", Offset = "0x1645AC0", VA = "0x1645AC0")]
	public BossPointManager()
	{
	}
}
[Token(Token = "0x2000208")]
public enum CustomEffectType
{
	[Token(Token = "0x4000D1D")]
	Transfer,
	[Token(Token = "0x4000D1E")]
	MagicCircle
}
[Token(Token = "0x2000209")]
public enum CustomEffectOpType
{
	[Token(Token = "0x4000D20")]
	Op1,
	[Token(Token = "0x4000D21")]
	Op2
}
[Token(Token = "0x200020A")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD312C", Offset = "0xFD312C")]
public class CustomEffect : MonoBehaviour
{
	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsInit;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 OffsetPos;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject EffectObj;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioEvent AppearAudio;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public AudioEvent DisappearAudio;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WwiseDefine soundWwise;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject effect;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject MagicCircleObj;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform MagicCircleRoot;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject MagicCircle;

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x13D1418", Offset = "0x13D1418", VA = "0x13D1418")]
	public void Init()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x13D17F0", Offset = "0x13D17F0", VA = "0x13D17F0")]
	public void SetOwner(WUnit owner)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x13D1520", Offset = "0x13D1520", VA = "0x13D1520")]
	private void InitEffect()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x13D17F8", Offset = "0x13D17F8", VA = "0x13D17F8")]
	public void Die()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x13D195C", Offset = "0x13D195C", VA = "0x13D195C")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x13D1A6C", Offset = "0x13D1A6C", VA = "0x13D1A6C")]
	public void TransferShowEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x13D1B90", Offset = "0x13D1B90", VA = "0x13D1B90")]
	private void DoTransferShowEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x13D1F94", Offset = "0x13D1F94", VA = "0x13D1F94")]
	public void TransferHideEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x13D20B8", Offset = "0x13D20B8", VA = "0x13D20B8")]
	private void DoTransferHideEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x13D1E6C", Offset = "0x13D1E6C", VA = "0x13D1E6C")]
	public void SendTeleport(int efType, int opType, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x13D1648", Offset = "0x13D1648", VA = "0x13D1648")]
	private void InitMagicCircle()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x13D1800", Offset = "0x13D1800", VA = "0x13D1800")]
	public void ShowMagicCircle(bool isShow)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x13D23F0", Offset = "0x13D23F0", VA = "0x13D23F0")]
	private void DoMagicCircleStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x13D2498", Offset = "0x13D2498", VA = "0x13D2498")]
	public void SyncEffect(CustomEffectType efType, CustomEffectOpType opType, Vector3 value1, Quaternion value2)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x13D24C8", Offset = "0x13D24C8", VA = "0x13D24C8")]
	public CustomEffect()
	{
	}
}
[Token(Token = "0x200020B")]
public class DelayActiveEffect : MonoBehaviour
{
	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] ActiveObjs;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delayTimer;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isDoActive;

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x13D911C", Offset = "0x13D911C", VA = "0x13D911C")]
	public void Init(float time)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x13D912C", Offset = "0x13D912C", VA = "0x13D912C")]
	private void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x13D91BC", Offset = "0x13D91BC", VA = "0x13D91BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x13D921C", Offset = "0x13D921C", VA = "0x13D921C")]
	public DelayActiveEffect()
	{
	}
}
[Token(Token = "0x200020C")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD3190", Offset = "0xFD3190")]
public class MonsterHitTools : MonoBehaviour
{
	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5DB4", Offset = "0xFD5DB4")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit owner;

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x14B9E0C", Offset = "0x14B9E0C", VA = "0x14B9E0C")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x14B9E38", Offset = "0x14B9E38", VA = "0x14B9E38")]
		internal void <DoDie>b__0()
		{
		}
	}

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model_n;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject model_d;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RagdollTools rt_n;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RagdollTools rt_d;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isDie;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Transform> childNodeDic;

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x14B95E0", Offset = "0x14B95E0", VA = "0x14B95E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x14B97C4", Offset = "0x14B97C4", VA = "0x14B97C4")]
	private void RecursiveCloneTransform(Transform target)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x14B9924", Offset = "0x14B9924", VA = "0x14B9924")]
	public void DoHit(WUnit owner, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x14B99DC", Offset = "0x14B99DC", VA = "0x14B99DC")]
	public void DoDie(WUnit owner, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x14B9E14", Offset = "0x14B9E14", VA = "0x14B9E14")]
	public RagdollTools GetRagdollTools()
	{
		return null;
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x14B9744", Offset = "0x14B9744", VA = "0x14B9744")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x14B9E30", Offset = "0x14B9E30", VA = "0x14B9E30")]
	public MonsterHitTools()
	{
	}
}
[Token(Token = "0x200020D")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD31F4", Offset = "0xFD31F4")]
public class MonsterMainController : MonoBehaviour
{
	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInit;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsCheckBeHit;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int hitTimes;

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x14BA9F4", Offset = "0x14BA9F4", VA = "0x14BA9F4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x14BAC10", Offset = "0x14BAC10", VA = "0x14BAC10")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x14BAD24", Offset = "0x14BAD24", VA = "0x14BAD24")]
	private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x14BAE0C", Offset = "0x14BAE0C", VA = "0x14BAE0C")]
	public bool IsBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x14B93A4", Offset = "0x14B93A4", VA = "0x14B93A4")]
	public void CleanBeHit()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x14BAE20", Offset = "0x14BAE20", VA = "0x14BAE20")]
	public MonsterMainController()
	{
	}
}
[Token(Token = "0x200020E")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD3258", Offset = "0xFD3258")]
public class StepLookAtWithAni : ActionTask<Transform>
{
	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> targetTransf;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<bool> isHorizontal;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<string> leftAni;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<string> rightAni;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float rotTime;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Quaternion curRot;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion tarRot;

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x15CD190", Offset = "0x15CD190", VA = "0x15CD190", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x15CD578", Offset = "0x15CD578", VA = "0x15CD578", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x15CD6B8", Offset = "0x15CD6B8", VA = "0x15CD6B8")]
	public StepLookAtWithAni()
	{
	}
}
[Token(Token = "0x200020F")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD3290", Offset = "0xFD3290")]
public class UnitDelayTimeSuicide : MonoBehaviour
{
	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int delayTime;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isInit;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool isStart;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float runningDelayTime;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float runningTime;

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x14698C0", Offset = "0x14698C0", VA = "0x14698C0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x14699C0", Offset = "0x14699C0", VA = "0x14699C0")]
	public void DoStart(int inputDelayTime = -1)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x1469A70", Offset = "0x1469A70", VA = "0x1469A70")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x1469A78", Offset = "0x1469A78", VA = "0x1469A78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x1469A90", Offset = "0x1469A90", VA = "0x1469A90")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x1469B74", Offset = "0x1469B74", VA = "0x1469B74")]
	public UnitDelayTimeSuicide()
	{
	}
}
[Token(Token = "0x2000210")]
public class MonsterWarning : MonoBehaviour
{
	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsInit;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isWarningActive;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ViewFieldRadius;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8234", Offset = "0xFD8234")]
	public float ViewFieldAngle;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float AlertRadius;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float WarnningRadius;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool Start;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float WarningTime;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool IsShowEditor;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int> WarningActiveAct;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioEvent warningSoundAudio;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WwiseDefine warningSoundObj;

	[Token(Token = "0x1700011F")]
	public bool IsWarningActive
	{
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x14C0F68", Offset = "0x14C0F68", VA = "0x14C0F68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x14C0F70", Offset = "0x14C0F70", VA = "0x14C0F70")]
	public void Init()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x14C11E4", Offset = "0x14C11E4", VA = "0x14C11E4")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x14C11D8", Offset = "0x14C11D8", VA = "0x14C11D8")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x14C137C", Offset = "0x14C137C", VA = "0x14C137C")]
	private bool CaculateAlert(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x14C1528", Offset = "0x14C1528", VA = "0x14C1528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x14C1604", Offset = "0x14C1604", VA = "0x14C1604")]
	private void CheckAlert()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x14C11CC", Offset = "0x14C11CC", VA = "0x14C11CC")]
	public void ResetActiveAlert()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x14C17D8", Offset = "0x14C17D8", VA = "0x14C17D8")]
	private void ActiveAlertSelfAndOther()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x14C1A84", Offset = "0x14C1A84", VA = "0x14C1A84")]
	public void ActiveAlert()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x14C189C", Offset = "0x14C189C", VA = "0x14C189C")]
	private void SetSound(bool isSet)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x14C17D0", Offset = "0x14C17D0", VA = "0x14C17D0")]
	public bool CheckPlayerInRoom(WUnit Owner)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x14C1B30", Offset = "0x14C1B30", VA = "0x14C1B30")]
	public void WeaponDoFire(WUnit Owner)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x14C1B40", Offset = "0x14C1B40", VA = "0x14C1B40")]
	private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x14C1C30", Offset = "0x14C1C30", VA = "0x14C1C30")]
	public MonsterWarning()
	{
	}
}
[Token(Token = "0x2000211")]
public enum TeleportNetOpType
{
	[Token(Token = "0x4000D58")]
	OpStart,
	[Token(Token = "0x4000D59")]
	OpUpdate,
	[Token(Token = "0x4000D5A")]
	OpEnd
}
[Token(Token = "0x2000212")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD32F4", Offset = "0xFD32F4")]
public class TeleportEffect : MonoBehaviour
{
	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsInit;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> EffectModels;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 OffsetPos;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject EffectObj;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isShow;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float targetDis;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float moveSpeed;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float scaleTime;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float doScale;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 beginPos;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 endPos;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion rot;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float scaleRunningTime;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float smoothSpeed;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float scaleDis;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float runningScaleDis;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8250", Offset = "0xFD8250")]
	private bool <IsFinish>k__BackingField;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool nextFrameFinish;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioEvent AppearAudio;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public AudioEvent DisappearAudio;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WwiseDefine soundWwise;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OtherMonsterNetSyncController otherCtrl;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject effect;

	[Token(Token = "0x17000120")]
	public bool IsFinish
	{
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1458548", Offset = "0x1458548", VA = "0x1458548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDBF0", Offset = "0xFDDBF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1458550", Offset = "0x1458550", VA = "0x1458550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC00", Offset = "0xFDDC00")]
		set
		{
		}
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x145855C", Offset = "0x145855C", VA = "0x145855C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x14589E0", Offset = "0x14589E0", VA = "0x14589E0")]
	public void SetOwner(WUnit owner)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x1458674", Offset = "0x1458674", VA = "0x1458674")]
	private void InitEffect()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x14589E8", Offset = "0x14589E8", VA = "0x14589E8")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x1458AF4", Offset = "0x1458AF4", VA = "0x1458AF4")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x1458AFC", Offset = "0x1458AFC", VA = "0x1458AFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x1458F74", Offset = "0x1458F74", VA = "0x1458F74")]
	public void ShowEffect(Vector3 begin, Vector3 end, Quaternion rot)
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x1458B40", Offset = "0x1458B40", VA = "0x1458B40")]
	private void UpdateEffect()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x145965C", Offset = "0x145965C", VA = "0x145965C")]
	public void SetEffectScale(float scale)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x1458D10", Offset = "0x1458D10", VA = "0x1458D10")]
	public void DoUpdateEffectScale()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x1459670", Offset = "0x1459670", VA = "0x1459670")]
	public void HideEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x1459988", Offset = "0x1459988", VA = "0x1459988")]
	private void ShowModel()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x1459424", Offset = "0x1459424", VA = "0x1459424")]
	private void HideModel()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x1459520", Offset = "0x1459520", VA = "0x1459520")]
	public void SendTeleport(int opType, int status, [Optional] Vector3 bPos, [Optional] Vector3 ePos, [Optional] Quaternion rot, float scaleTime = 0f)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x14588A4", Offset = "0x14588A4", VA = "0x14588A4")]
	private void SetModels(bool isShow)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x1459A84", Offset = "0x1459A84", VA = "0x1459A84")]
	public TeleportEffect()
	{
	}
}
[Token(Token = "0x2000213")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD3358", Offset = "0xFD3358")]
public class WeaponDropDownTools : MonoBehaviour
{
	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float displayTime;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine coroutine;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody r1;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody r2;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject w1;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject w2;

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x15AC5E8", Offset = "0x15AC5E8", VA = "0x15AC5E8")]
	public void DoDropDown(WUnit unit)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x15ACC40", Offset = "0x15ACC40", VA = "0x15ACC40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x15ACC44", Offset = "0x15ACC44", VA = "0x15ACC44")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x15ACDB8", Offset = "0x15ACDB8", VA = "0x15ACDB8")]
	private void ClearDecal(Transform t)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x15ACF60", Offset = "0x15ACF60", VA = "0x15ACF60")]
	public WeaponDropDownTools()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x15ACF70", Offset = "0x15ACF70", VA = "0x15ACF70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC10", Offset = "0xFDDC10")]
	private void <DoDropDown>b__6_0()
	{
	}
}
[Token(Token = "0x2000214")]
public class BattleData
{
	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isStart;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _isLocalBattle;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool _isSingle;

	[Token(Token = "0x17000121")]
	public bool isStart
	{
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x161644C", Offset = "0x161644C", VA = "0x161644C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x1616454", Offset = "0x1616454", VA = "0x1616454")]
		private set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public bool isLocalBattle
	{
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x1616460", Offset = "0x1616460", VA = "0x1616460")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x1616468", Offset = "0x1616468", VA = "0x1616468")]
		private set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public bool isSingle
	{
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x1616474", Offset = "0x1616474", VA = "0x1616474")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x161647C", Offset = "0x161647C", VA = "0x161647C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x1616488", Offset = "0x1616488", VA = "0x1616488")]
	public static BattleData CreateBattleData()
	{
		return null;
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x16164FC", Offset = "0x16164FC", VA = "0x16164FC")]
	public BattleData()
	{
	}
}
[Token(Token = "0x2000215")]
public class BattleResultData
{
	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long roomId;

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x1616624", Offset = "0x1616624", VA = "0x1616624")]
	public BattleResultData()
	{
	}
}
[Token(Token = "0x2000216")]
public class BattleRoomData
{
	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x1616A08", Offset = "0x1616A08", VA = "0x1616A08")]
	public BattleRoomData()
	{
	}
}
[Token(Token = "0x2000217")]
public class HitResultData
{
	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int attackerId;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int hurterId;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int curHP;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 hitPoint;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 hitDir;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int healValue;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_Attack_type atkType;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public e_HitEffect_type atkEffectType;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool hitHead;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int interruptedBodyId;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int interruptedBodyStatus;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int interruptedBodyHp;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int bodyPartId;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hitForce;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int status;

	[Token(Token = "0x4000D8D")]
	private const int status_Hit = 1;

	[Token(Token = "0x4000D8E")]
	private const int status_Die = 2;

	[Token(Token = "0x4000D8F")]
	private const int status_BodyPartBreak = 4;

	[Token(Token = "0x4000D90")]
	private const int status_BodyPartInterrupt = 8;

	[Token(Token = "0x17000124")]
	public bool isHit
	{
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x14F640C", Offset = "0x14F640C", VA = "0x14F640C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x14F647C", Offset = "0x14F647C", VA = "0x14F647C")]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public bool isDie
	{
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x14F64FC", Offset = "0x14F64FC", VA = "0x14F64FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x14F656C", Offset = "0x14F656C", VA = "0x14F656C")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public bool isBodyPartBreak
	{
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x14F65EC", Offset = "0x14F65EC", VA = "0x14F65EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x14F665C", Offset = "0x14F665C", VA = "0x14F665C")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public bool isBodyPartInterrupt
	{
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x14F66DC", Offset = "0x14F66DC", VA = "0x14F66DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x14F674C", Offset = "0x14F674C", VA = "0x14F674C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x14F67CC", Offset = "0x14F67CC", VA = "0x14F67CC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x14F6878", Offset = "0x14F6878", VA = "0x14F6878")]
	public static void DestoryHitResultData(HitResultData hitData)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x14F6908", Offset = "0x14F6908", VA = "0x14F6908")]
	public static HitResultData CreateHitResultData()
	{
		return null;
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x14F6990", Offset = "0x14F6990", VA = "0x14F6990")]
	public static HitResultData CreateHitResultData(S2CHitDamage data)
	{
		return null;
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x14F6C0C", Offset = "0x14F6C0C", VA = "0x14F6C0C")]
	public static HitResultData CreateHitResultData(C2SHitDamage data)
	{
		return null;
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x14F6EB8", Offset = "0x14F6EB8", VA = "0x14F6EB8")]
	public HitResultData()
	{
	}
}
[Token(Token = "0x2000218")]
public class LobbyOperationResultData
{
	[Token(Token = "0x4000D91")]
	public const int operation_PlayerStyle = 1;

	[Token(Token = "0x4000D92")]
	public const int operation_WeaponType = 2;

	[Token(Token = "0x4000D93")]
	public const int operation_JoinGame = 4;

	[Token(Token = "0x4000D94")]
	public const int operation_GroupType = 8;

	[Token(Token = "0x4000D95")]
	private const int operation_Controller = 16;

	[Token(Token = "0x4000D96")]
	public const int operation_DropWeaponType = 32;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int OperationType;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int OperationValue;

	[Token(Token = "0x17000128")]
	public bool isPlayerStyle
	{
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x14AD290", Offset = "0x14AD290", VA = "0x14AD290")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x14AD300", Offset = "0x14AD300", VA = "0x14AD300")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public bool isWeaponType
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x14AD380", Offset = "0x14AD380", VA = "0x14AD380")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x14AD3F0", Offset = "0x14AD3F0", VA = "0x14AD3F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public bool isDropWeaponType
	{
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x14AD470", Offset = "0x14AD470", VA = "0x14AD470")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x14AD4E0", Offset = "0x14AD4E0", VA = "0x14AD4E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public bool isJoinGame
	{
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x14AD560", Offset = "0x14AD560", VA = "0x14AD560")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x14AD5D0", Offset = "0x14AD5D0", VA = "0x14AD5D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public bool isGroupType
	{
		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x14AD650", Offset = "0x14AD650", VA = "0x14AD650")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x14AD6C0", Offset = "0x14AD6C0", VA = "0x14AD6C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public bool isController
	{
		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x14AD740", Offset = "0x14AD740", VA = "0x14AD740")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x14AD7B0", Offset = "0x14AD7B0", VA = "0x14AD7B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x14AD830", Offset = "0x14AD830", VA = "0x14AD830")]
	public e_Player_Style GetOperationPlayerStyle()
	{
		return default(e_Player_Style);
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x14AD8BC", Offset = "0x14AD8BC", VA = "0x14AD8BC")]
	public e_weapon_group GetOperationWeaponType()
	{
		return default(e_weapon_group);
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x14AD948", Offset = "0x14AD948", VA = "0x14AD948")]
	public e_weapon_group GetOperationDropWeaponType()
	{
		return default(e_weapon_group);
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x14AD9D4", Offset = "0x14AD9D4", VA = "0x14AD9D4")]
	public bool GetOperationJoinGameStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x14ADA90", Offset = "0x14ADA90", VA = "0x14ADA90")]
	public e_group_type GetOperationGroupType()
	{
		return default(e_group_type);
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x14ADB1C", Offset = "0x14ADB1C", VA = "0x14ADB1C")]
	public static LobbyOperationResultData CreateResultData(S2CLobbyOperationNotify data)
	{
		return null;
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x14ADBAC", Offset = "0x14ADBAC", VA = "0x14ADBAC")]
	public LobbyOperationResultData()
	{
	}
}
[Token(Token = "0x2000219")]
public class UnitResultData
{
	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int objId;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnitResultDataType operationType;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int operationValue_Int;

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x146964C", Offset = "0x146964C", VA = "0x146964C")]
	public int GetHP()
	{
		return default(int);
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1469714", Offset = "0x1469714", VA = "0x1469714")]
	public int GetExp()
	{
		return default(int);
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x14700CC", Offset = "0x14700CC", VA = "0x14700CC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x14693A0", Offset = "0x14693A0", VA = "0x14693A0")]
	public static UnitResultData CreateResultData()
	{
		return null;
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x1469310", Offset = "0x1469310", VA = "0x1469310")]
	public static void DestoryResultData(UnitResultData data)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x14695E4", Offset = "0x14695E4", VA = "0x14695E4")]
	public static UnitResultData CreateResultData(UnitData data)
	{
		return null;
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x14700D8", Offset = "0x14700D8", VA = "0x14700D8")]
	public UnitResultData()
	{
	}
}
[Token(Token = "0x200021A")]
public class MsgHandler : Singleton<MsgHandler>
{
	[Token(Token = "0x2000509")]
	public enum NetType
	{
		[Token(Token = "0x4001CE4")]
		Udp,
		[Token(Token = "0x4001CE5")]
		UNet,
		[Token(Token = "0x4001CE6")]
		UTransport,
		[Token(Token = "0x4001CE7")]
		Tcp
	}

	[Serializable]
	[Token(Token = "0x200050A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5DC4", Offset = "0xFD5DC4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<BytesPackage, BytesPackage> <>9__8_0;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<BytesPackage, BytesPackage> <>9__8_1;

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x1492008", Offset = "0x1492008", VA = "0x1492008")]
		public <>c()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x1492010", Offset = "0x1492010", VA = "0x1492010")]
		internal BytesPackage <Init>b__8_0(BytesPackage input)
		{
			return null;
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x1492020", Offset = "0x1492020", VA = "0x1492020")]
		internal BytesPackage <Init>b__8_1(BytesPackage input)
		{
			return null;
		}
	}

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IMessageHandle mClientHandle;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IMessageHandle mHostHandle;

	[Token(Token = "0x4000D9E")]
	private const float RECONNTION_INTERVAL = 1f;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8260", Offset = "0xFD8260")]
	private bool <isInit>k__BackingField;

	[Token(Token = "0x1700012E")]
	public bool isInit
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x14910E4", Offset = "0x14910E4", VA = "0x14910E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC20", Offset = "0xFDDC20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x14910EC", Offset = "0x14910EC", VA = "0x14910EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC30", Offset = "0xFDDC30")]
		set
		{
		}
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x14910F8", Offset = "0x14910F8", VA = "0x14910F8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x1491C10", Offset = "0x1491C10", VA = "0x1491C10")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1491DEC", Offset = "0x1491DEC", VA = "0x1491DEC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x1491F30", Offset = "0x1491F30", VA = "0x1491F30")]
	public MsgHandler()
	{
	}
}
[Token(Token = "0x200021B")]
public class ClientHandleMessage : IMessageHandle
{
	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, dReceiveMessageHandle> mProtocalDic;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] iconBytes;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int iconBytesTempIndex;

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x144B4B8", Offset = "0x144B4B8", VA = "0x144B4B8")]
	public ClientHandleMessage()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x144C11C", Offset = "0x144C11C", VA = "0x144C11C", Slot = "4")]
	public void Process(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x144C224", Offset = "0x144C224", VA = "0x144C224")]
	public ByteBuffer GetMessagePackageByteBuffer(VRNetLib.MessagePackage package)
	{
		return null;
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x144C27C", Offset = "0x144C27C", VA = "0x144C27C")]
	private void HandleConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x144CC20", Offset = "0x144CC20", VA = "0x144CC20")]
	private void HandlePlayerEnterNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x144D4B4", Offset = "0x144D4B4", VA = "0x144D4B4")]
	private void HandleDisConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x144D7A4", Offset = "0x144D7A4", VA = "0x144D7A4")]
	private void HandlePlayerQuitNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x144DAE0", Offset = "0x144DAE0", VA = "0x144DAE0")]
	private void HandleSyncPlayerGlobalInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x144E224", Offset = "0x144E224", VA = "0x144E224")]
	private void HandlePlayerReviveNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x144E430", Offset = "0x144E430", VA = "0x144E430")]
	private void HandleUnitDataNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x144E57C", Offset = "0x144E57C", VA = "0x144E57C")]
	private void HandleFireBulletCreate(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x144E830", Offset = "0x144E830", VA = "0x144E830")]
	private void HandleReloadMagazineNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x144E9A4", Offset = "0x144E9A4", VA = "0x144E9A4")]
	private void HandleReloadBullet(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x144EB40", Offset = "0x144EB40", VA = "0x144EB40")]
	private void HandleNpcCreateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x144EE18", Offset = "0x144EE18", VA = "0x144EE18")]
	private void HandleMonsterCreateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x144F214", Offset = "0x144F214", VA = "0x144F214")]
	private void HandleMonsterAnimationSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x144F45C", Offset = "0x144F45C", VA = "0x144F45C")]
	private void HandleBossGatlinBlendRTPCSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x144F658", Offset = "0x144F658", VA = "0x144F658")]
	private void HandleBossAniParameterSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x144F9D8", Offset = "0x144F9D8", VA = "0x144F9D8")]
	private void HandleUnitInfoSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x144FE5C", Offset = "0x144FE5C", VA = "0x144FE5C")]
	private void HandleMonsterTeleportSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x14502F8", Offset = "0x14502F8", VA = "0x14502F8")]
	private void HandleCustomEffectSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x14507B8", Offset = "0x14507B8", VA = "0x14507B8")]
	private void HandleInstanceViewStatusSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x14507F8", Offset = "0x14507F8", VA = "0x14507F8")]
	private void HandleMonsterBulletCretateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x1450AF8", Offset = "0x1450AF8", VA = "0x1450AF8")]
	private void HandleMonsterInterruptStateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x1450CA8", Offset = "0x1450CA8", VA = "0x1450CA8")]
	private void HandleHitDamage(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x1450D30", Offset = "0x1450D30", VA = "0x1450D30")]
	private void HandleCutScenesNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x1450ED4", Offset = "0x1450ED4", VA = "0x1450ED4")]
	private void HandleBattleStatisticalResultsNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x1450FD8", Offset = "0x1450FD8", VA = "0x1450FD8")]
	private void HandleLobbyGameStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x14515AC", Offset = "0x14515AC", VA = "0x14515AC")]
	private void HandleLobbyOperationNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x14529D0", Offset = "0x14529D0", VA = "0x14529D0")]
	private void HandleLobbyPlayerNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x1452D08", Offset = "0x1452D08", VA = "0x1452D08")]
	private void HandleLobbyPlayerIconNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x1453544", Offset = "0x1453544", VA = "0x1453544")]
	private void HandleLobbyTeamNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x14537AC", Offset = "0x14537AC", VA = "0x14537AC")]
	private void HandlePlayAmbientEffectNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x1453878", Offset = "0x1453878", VA = "0x1453878")]
	private void HandleGameRoomStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x1453A08", Offset = "0x1453A08", VA = "0x1453A08")]
	private void HandleSetLiveStatus(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x1453B10", Offset = "0x1453B10", VA = "0x1453B10")]
	private void HandleGearStatusInfoSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x1453DA4", Offset = "0x1453DA4", VA = "0x1453DA4")]
	private void HandleEffectStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x14550FC", Offset = "0x14550FC", VA = "0x14550FC")]
	private void HandleRoomStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x1455240", Offset = "0x1455240", VA = "0x1455240")]
	private void HandleRoleRoomStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x1455308", Offset = "0x1455308", VA = "0x1455308")]
	private void HandleSyncAimIKInfoNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x1455510", Offset = "0x1455510", VA = "0x1455510")]
	private void HandleSyncUpdateAimIKInfoNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x145575C", Offset = "0x145575C", VA = "0x145575C")]
	private void HandleProduceDropItemNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x145593C", Offset = "0x145593C", VA = "0x145593C")]
	private void HandleTriggerDropItem(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x1455A08", Offset = "0x1455A08", VA = "0x1455A08")]
	private void HandleDestoryDropItemNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x1455AC0", Offset = "0x1455AC0", VA = "0x1455AC0")]
	private void HandleLevelupNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x1455C74", Offset = "0x1455C74", VA = "0x1455C74")]
	private void HandleBuffNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x1455EEC", Offset = "0x1455EEC", VA = "0x1455EEC")]
	private void HandleSimpleSkillStatusInfoSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x14563BC", Offset = "0x14563BC", VA = "0x14563BC")]
	private void HandleInstanceFlowNodeInfoNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x1456638", Offset = "0x1456638", VA = "0x1456638")]
	private void HandleSelectInstanceStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x14567F8", Offset = "0x14567F8", VA = "0x14567F8")]
	private void HandlePreSelectInstanceStatusNotify(VRNetLib.MessagePackage package)
	{
	}
}
[Token(Token = "0x200021C")]
public class ClientSendMessage
{
	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FlatBufferBuilder mBuilder;

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x13CCEF8", Offset = "0x13CCEF8", VA = "0x13CCEF8")]
	private static void Send(NetMessageType.CmdCode cmdType, object data, bool isReliable = true)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x13CCF90", Offset = "0x13CCF90", VA = "0x13CCF90")]
	private static FlatBufferBuilder GetBuilder()
	{
		return null;
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x13CD014", Offset = "0x13CD014", VA = "0x13CD014")]
	public static void SendConnectToHost()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x13CD454", Offset = "0x13CD454", VA = "0x13CD454")]
	public static void SendDisConnectToHost()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x13CD524", Offset = "0x13CD524", VA = "0x13CD524")]
	public static void SendSyncPlayerGlobalInfo(bool IsSyncLocal, bool isSyncPlayer, Vector3 playerPos, Quaternion playerRotate, bool isSyncGun_L, Vector3 GunPos_L, Quaternion GunRotate_L, Vector3 GunForward_L, bool isSyncGun_R, Vector3 GunPos_R, Quaternion GunRotate_R, Vector3 GunForward_R, bool isSyncHead, Vector3 VRHeadPos, Quaternion VRHeadRotate, Vector3 VRHeadPos_Raw, Quaternion VRHeadRotate_Raw)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x13CDC78", Offset = "0x13CDC78", VA = "0x13CDC78")]
	public static void SendC2SFireBulletCreate(int objId, int weaponId, Vector3 pos, Quaternion rotate, bool isEffectBullet = false)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x13CDE08", Offset = "0x13CDE08", VA = "0x13CDE08")]
	public static void SendC2SReloadBullet(int objId, int weaponId, bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x13CDEE8", Offset = "0x13CDEE8", VA = "0x13CDEE8")]
	public static void SendC2SPlayerRevive(int playerObjId)
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x13CDF80", Offset = "0x13CDF80", VA = "0x13CDF80")]
	public static void SendC2SFireHitDamage(HitResultData hitData)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x13CE188", Offset = "0x13CE188", VA = "0x13CE188")]
	public static void SendLiveState(int ownerId, bool state)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x13CE230", Offset = "0x13CE230", VA = "0x13CE230")]
	public static void SendReqSyncGearStatusInfo(e_group_type group, int id)
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x13CE2FC", Offset = "0x13CE2FC", VA = "0x13CE2FC")]
	public static void SendReqSelectInstanceFlowStatusInfo(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x13CE564", Offset = "0x13CE564", VA = "0x13CE564")]
	public static void SendReqPreselectInstanceFlowStatusInfo(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x13CE7CC", Offset = "0x13CE7CC", VA = "0x13CE7CC")]
	public static void SendTriggreDropItemNotify(int itemId, int unitId)
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x13CE898", Offset = "0x13CE898", VA = "0x13CE898")]
	public static void SendC2SWeaponCanReset(int unitId)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x13CE948", Offset = "0x13CE948", VA = "0x13CE948")]
	public ClientSendMessage()
	{
	}
}
[Token(Token = "0x200021D")]
public class ClientServer : Singleton<ClientServer>
{
	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, PlayerData> playerIdHash;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, TeamData> teamInfo;

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x13CE9C4", Offset = "0x13CE9C4", VA = "0x13CE9C4")]
	public void RegisterPlayerData(PlayerData data)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x13CEC60", Offset = "0x13CEC60", VA = "0x13CEC60")]
	public void UnRegisterPlayerData(int playerId)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x13CECE8", Offset = "0x13CECE8", VA = "0x13CECE8")]
	public void UnRegisterAllPlayerData()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x13CEBF8", Offset = "0x13CEBF8", VA = "0x13CEBF8")]
	public bool CheckPlayerData(int playerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x13CED40", Offset = "0x13CED40", VA = "0x13CED40")]
	public PlayerData GetPlayerData(int playerId)
	{
		return null;
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x13CEDB8", Offset = "0x13CEDB8", VA = "0x13CEDB8")]
	public PlayerData GetPlayerDataBySite(int site)
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x13CEED4", Offset = "0x13CEED4", VA = "0x13CEED4")]
	public List<PlayerData> GetAllJoinData()
	{
		return null;
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x13CF04C", Offset = "0x13CF04C", VA = "0x13CF04C")]
	public void SetTeamInfo(int teamId, string teamName)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x13CF12C", Offset = "0x13CF12C", VA = "0x13CF12C")]
	public string GetTeamName(e_group_type group_Type)
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x13CF394", Offset = "0x13CF394", VA = "0x13CF394")]
	public string GetTeamName(int playerId)
	{
		return null;
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x13CF284", Offset = "0x13CF284", VA = "0x13CF284")]
	public string GetTeamName(int teamId, e_group_type group_Type)
	{
		return null;
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x13CF528", Offset = "0x13CF528", VA = "0x13CF528")]
	public bool HaveLoginPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x13CF630", Offset = "0x13CF630", VA = "0x13CF630")]
	public ClientServer()
	{
	}
}
[Token(Token = "0x200021E")]
public class FlatbuffersUtils : IProtocolUtils
{
	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8270", Offset = "0xFD8270")]
	private readonly ByteBuffer <ByteBuffer>k__BackingField;

	[Token(Token = "0x1700012F")]
	public ByteBuffer ByteBuffer
	{
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x15EF088", Offset = "0x15EF088", VA = "0x15EF088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC40", Offset = "0xFDDC40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x15EF090", Offset = "0x15EF090", VA = "0x15EF090", Slot = "4")]
	public BytesPackage Serialize(object protoData)
	{
		return null;
	}

	[Token(Token = "0x6000E7A")]
	public T DeSerialize<T>(BytesPackage bytes)
	{
		return (T)null;
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x15EF17C", Offset = "0x15EF17C", VA = "0x15EF17C")]
	public FlatbuffersUtils()
	{
	}
}
[Token(Token = "0x200021F")]
public class NetMessageType
{
	[Token(Token = "0x200050B")]
	public enum CmdCode : ushort
	{
		[Token(Token = "0x4001CEC")]
		ConnectToHost = 1,
		[Token(Token = "0x4001CED")]
		PlayerEnterNotify = 2,
		[Token(Token = "0x4001CEE")]
		DisconnectToHost = 3,
		[Token(Token = "0x4001CEF")]
		PlayerQuitNotify = 4,
		[Token(Token = "0x4001CF0")]
		GameRoomStatusNotify = 5,
		[Token(Token = "0x4001CF1")]
		SyncPlayerGlobalInfo = 8,
		[Token(Token = "0x4001CF2")]
		FireBulletCreate = 11,
		[Token(Token = "0x4001CF3")]
		ReloadMagazine = 12,
		[Token(Token = "0x4001CF4")]
		ReloadBullet = 13,
		[Token(Token = "0x4001CF5")]
		UnitDataNotify = 19,
		[Token(Token = "0x4001CF6")]
		MonsterCreateNotify = 20,
		[Token(Token = "0x4001CF7")]
		MonsterAnimationSyncNotify = 21,
		[Token(Token = "0x4001CF8")]
		UnitInfoSyncNotify = 22,
		[Token(Token = "0x4001CF9")]
		HitDamage = 23,
		[Token(Token = "0x4001CFA")]
		PlayerRevive = 24,
		[Token(Token = "0x4001CFB")]
		CutScenesNotify = 25,
		[Token(Token = "0x4001CFC")]
		MonsterBulletCretateNotify = 26,
		[Token(Token = "0x4001CFD")]
		NpcCreateNotify = 28,
		[Token(Token = "0x4001CFE")]
		EffectStatusNotify = 29,
		[Token(Token = "0x4001CFF")]
		SyncAimIKInfoNotify = 30,
		[Token(Token = "0x4001D00")]
		SyncUpdateAimIKInfoNotify = 31,
		[Token(Token = "0x4001D01")]
		MonsterInterruptedStateNotify = 32,
		[Token(Token = "0x4001D02")]
		BossAniParameterNotify = 33,
		[Token(Token = "0x4001D03")]
		BosssGatlinBlendRTPCNotify = 34,
		[Token(Token = "0x4001D04")]
		RoomStatusNotify = 35,
		[Token(Token = "0x4001D05")]
		RoleRoomStatusNotify = 36,
		[Token(Token = "0x4001D06")]
		ProduceDropItemNotify = 37,
		[Token(Token = "0x4001D07")]
		LevelupNotify = 38,
		[Token(Token = "0x4001D08")]
		BuffNotify = 39,
		[Token(Token = "0x4001D09")]
		TriggerDropItem = 40,
		[Token(Token = "0x4001D0A")]
		DestoryDropItemNotify = 41,
		[Token(Token = "0x4001D0B")]
		C2SWeaponReset = 42,
		[Token(Token = "0x4001D0C")]
		BattleStatisticalResultsNotify = 100,
		[Token(Token = "0x4001D0D")]
		PlayAmbientEffectNotify = 101,
		[Token(Token = "0x4001D0E")]
		LobbyOperationNotify = 1000,
		[Token(Token = "0x4001D0F")]
		LobbyGameStatusNotify = 1001,
		[Token(Token = "0x4001D10")]
		LobbyPlayerNotify = 1002,
		[Token(Token = "0x4001D11")]
		LobbyPlayerIconNotify = 1004,
		[Token(Token = "0x4001D12")]
		LobbyTeamNotify = 1003,
		[Token(Token = "0x4001D13")]
		SetLiveStatus = 2000,
		[Token(Token = "0x4001D14")]
		GearStatusInfo = 2050,
		[Token(Token = "0x4001D15")]
		ReqSyncGearStatusInfo = 2051,
		[Token(Token = "0x4001D16")]
		PlayerTeleport = 3000,
		[Token(Token = "0x4001D17")]
		LoadBattleRoom = 3001,
		[Token(Token = "0x4001D18")]
		MonsterTeleportSyncNotify = 3100,
		[Token(Token = "0x4001D19")]
		CustomSyncNotify = 3101,
		[Token(Token = "0x4001D1A")]
		SimpleSkillStatusInfoNotify = 3200,
		[Token(Token = "0x4001D1B")]
		ReqSelectInstanceStatusInfo = 3210,
		[Token(Token = "0x4001D1C")]
		InstanceFlowNodeInfoNotify = 3211,
		[Token(Token = "0x4001D1D")]
		ReqPreSelectInstanceStatusInfo = 3212,
		[Token(Token = "0x4001D1E")]
		InstanceViewStatus = 3213
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x1497F0C", Offset = "0x1497F0C", VA = "0x1497F0C")]
	public NetMessageType()
	{
	}
}
[Token(Token = "0x2000220")]
public class NetworkStatusHandle
{
	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float reconnectHostInterval;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float reconnectTimer;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isConnectHost;

	[Token(Token = "0x17000130")]
	public bool isConnectHost
	{
		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x1497F14", Offset = "0x1497F14", VA = "0x1497F14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x1497F1C", Offset = "0x1497F1C", VA = "0x1497F1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x1491C00", Offset = "0x1491C00", VA = "0x1491C00")]
	public void Init(float _interval)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x1497F2C", Offset = "0x1497F2C", VA = "0x1497F2C")]
	private void ReconnectProcessor(float deltaTime)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x1491F2C", Offset = "0x1491F2C", VA = "0x1491F2C")]
	public void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x1491BF0", Offset = "0x1491BF0", VA = "0x1491BF0")]
	public NetworkStatusHandle()
	{
	}
}
[Token(Token = "0x2000221")]
public class PlayerData
{
	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8280", Offset = "0xFD8280")]
	private int <SessionId>k__BackingField;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8290", Offset = "0xFD8290")]
	private int <PlayerId>k__BackingField;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD82A0", Offset = "0xFD82A0")]
	private string <MechineName>k__BackingField;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD82B0", Offset = "0xFD82B0")]
	private string <MechineId>k__BackingField;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD82C0", Offset = "0xFD82C0")]
	private bool <JoinGameStatus>k__BackingField;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD82D0", Offset = "0xFD82D0")]
	private e_group_type <GroupId>k__BackingField;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD82E0", Offset = "0xFD82E0")]
	private e_Player_Style <PlayerStyle>k__BackingField;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD82F0", Offset = "0xFD82F0")]
	private e_weapon_group <WeaponType>k__BackingField;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8300", Offset = "0xFD8300")]
	private int <Site>k__BackingField;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8310", Offset = "0xFD8310")]
	private bool <IsAI>k__BackingField;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8320", Offset = "0xFD8320")]
	private bool <IsOnlyServer>k__BackingField;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8330", Offset = "0xFD8330")]
	private bool <IsLive>k__BackingField;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8340", Offset = "0xFD8340")]
	private string <LoginName>k__BackingField;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8350", Offset = "0xFD8350")]
	private string <LoginIcon>k__BackingField;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8360", Offset = "0xFD8360")]
	private bool <IsLoginSuccess>k__BackingField;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8370", Offset = "0xFD8370")]
	private int <TeamId>k__BackingField;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8380", Offset = "0xFD8380")]
	private int <Level>k__BackingField;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8390", Offset = "0xFD8390")]
	private int <LevelExp>k__BackingField;

	[Token(Token = "0x17000131")]
	public int SessionId
	{
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x13A149C", Offset = "0x13A149C", VA = "0x13A149C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC50", Offset = "0xFDDC50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x13A14A4", Offset = "0x13A14A4", VA = "0x13A14A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC60", Offset = "0xFDDC60")]
		private set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public int PlayerId
	{
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x13A14AC", Offset = "0x13A14AC", VA = "0x13A14AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC70", Offset = "0xFDDC70")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x13A14B4", Offset = "0x13A14B4", VA = "0x13A14B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC80", Offset = "0xFDDC80")]
		private set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public string MechineName
	{
		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x13A14BC", Offset = "0x13A14BC", VA = "0x13A14BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDC90", Offset = "0xFDDC90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x13A14C4", Offset = "0x13A14C4", VA = "0x13A14C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDCA0", Offset = "0xFDDCA0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public string MechineId
	{
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x13A14CC", Offset = "0x13A14CC", VA = "0x13A14CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDCB0", Offset = "0xFDDCB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x13A14D4", Offset = "0x13A14D4", VA = "0x13A14D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDCC0", Offset = "0xFDDCC0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public bool JoinGameStatus
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x13A14DC", Offset = "0x13A14DC", VA = "0x13A14DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDCD0", Offset = "0xFDDCD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x13A14E4", Offset = "0x13A14E4", VA = "0x13A14E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDCE0", Offset = "0xFDDCE0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public e_group_type GroupId
	{
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x13A14F0", Offset = "0x13A14F0", VA = "0x13A14F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDCF0", Offset = "0xFDDCF0")]
		get
		{
			return default(e_group_type);
		}
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x13A14F8", Offset = "0x13A14F8", VA = "0x13A14F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD00", Offset = "0xFDDD00")]
		private set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public e_Player_Style PlayerStyle
	{
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x13A1500", Offset = "0x13A1500", VA = "0x13A1500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD10", Offset = "0xFDDD10")]
		get
		{
			return default(e_Player_Style);
		}
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x13A1508", Offset = "0x13A1508", VA = "0x13A1508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD20", Offset = "0xFDDD20")]
		private set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public e_weapon_group WeaponType
	{
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x13A1510", Offset = "0x13A1510", VA = "0x13A1510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD30", Offset = "0xFDDD30")]
		get
		{
			return default(e_weapon_group);
		}
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x13A1518", Offset = "0x13A1518", VA = "0x13A1518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD40", Offset = "0xFDDD40")]
		private set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public int Site
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x13A1520", Offset = "0x13A1520", VA = "0x13A1520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD50", Offset = "0xFDDD50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x13A1528", Offset = "0x13A1528", VA = "0x13A1528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD60", Offset = "0xFDDD60")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public bool IsAI
	{
		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x13A1530", Offset = "0x13A1530", VA = "0x13A1530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD70", Offset = "0xFDDD70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x13A1538", Offset = "0x13A1538", VA = "0x13A1538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD80", Offset = "0xFDDD80")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public bool IsOnlyServer
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x13A1544", Offset = "0x13A1544", VA = "0x13A1544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDD90", Offset = "0xFDDD90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x13A154C", Offset = "0x13A154C", VA = "0x13A154C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDDA0", Offset = "0xFDDDA0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public bool IsLive
	{
		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x13A1558", Offset = "0x13A1558", VA = "0x13A1558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDDB0", Offset = "0xFDDDB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x13A1560", Offset = "0x13A1560", VA = "0x13A1560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDDC0", Offset = "0xFDDDC0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public string LoginName
	{
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x13A156C", Offset = "0x13A156C", VA = "0x13A156C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDDD0", Offset = "0xFDDDD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x13A1574", Offset = "0x13A1574", VA = "0x13A1574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDDE0", Offset = "0xFDDDE0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public string LoginIcon
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x13A157C", Offset = "0x13A157C", VA = "0x13A157C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDDF0", Offset = "0xFDDDF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x13A1584", Offset = "0x13A1584", VA = "0x13A1584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE00", Offset = "0xFDDE00")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public bool IsLoginSuccess
	{
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x13A158C", Offset = "0x13A158C", VA = "0x13A158C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE10", Offset = "0xFDDE10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x13A1594", Offset = "0x13A1594", VA = "0x13A1594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE20", Offset = "0xFDDE20")]
		private set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public string PlayerName
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x13A15A0", Offset = "0x13A15A0", VA = "0x13A15A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000141")]
	public Sprite GetIcon
	{
		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x13A1674", Offset = "0x13A1674", VA = "0x13A1674")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000142")]
	public int TeamId
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x13A179C", Offset = "0x13A179C", VA = "0x13A179C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE30", Offset = "0xFDDE30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x13A17A4", Offset = "0x13A17A4", VA = "0x13A17A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE40", Offset = "0xFDDE40")]
		private set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public int Level
	{
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x13A17AC", Offset = "0x13A17AC", VA = "0x13A17AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE50", Offset = "0xFDDE50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x13A17B4", Offset = "0x13A17B4", VA = "0x13A17B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE60", Offset = "0xFDDE60")]
		private set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public int LevelExp
	{
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x13A17BC", Offset = "0x13A17BC", VA = "0x13A17BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE70", Offset = "0xFDDE70")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x13A17C4", Offset = "0x13A17C4", VA = "0x13A17C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE80", Offset = "0xFDDE80")]
		private set
		{
		}
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x13A17CC", Offset = "0x13A17CC", VA = "0x13A17CC")]
	public PlayerData(int sessionid, int playerid, string mechinename, string mechineid, bool isJoinGame, e_group_type groupId, e_Player_Style style, e_weapon_group weapon, int site, bool isAI, bool isOnlyServer, bool isLive)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x13A18AC", Offset = "0x13A18AC", VA = "0x13A18AC")]
	public void SetJoinStatus(bool status)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x13A18B8", Offset = "0x13A18B8", VA = "0x13A18B8")]
	public void SetGroupId(e_group_type groupId)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x13A18C0", Offset = "0x13A18C0", VA = "0x13A18C0")]
	public void SetPlayerStyle(e_Player_Style style)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x13A18C8", Offset = "0x13A18C8", VA = "0x13A18C8")]
	public void SetWeaponType(e_weapon_group weaponType)
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x13A18D0", Offset = "0x13A18D0", VA = "0x13A18D0")]
	public void SetLoginInfo(string name, string icon)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x13A192C", Offset = "0x13A192C", VA = "0x13A192C")]
	public void SetLoginInfo_Name(string name)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x13A1970", Offset = "0x13A1970", VA = "0x13A1970")]
	public void SetLoginInfo_Icon(string icon)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x13A1978", Offset = "0x13A1978", VA = "0x13A1978")]
	public void SetTeamId(int teamId)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x13A1980", Offset = "0x13A1980", VA = "0x13A1980")]
	public void SetNullLoginInfo()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x13A19B0", Offset = "0x13A19B0", VA = "0x13A19B0")]
	public void SetLevel(int level)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x13A19B8", Offset = "0x13A19B8", VA = "0x13A19B8")]
	public void SetLevelExp(int exp)
	{
	}
}
[Token(Token = "0x2000222")]
public class TeamData
{
	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD83A0", Offset = "0xFD83A0")]
	private int <TeamId>k__BackingField;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD83B0", Offset = "0xFD83B0")]
	private string <Name>k__BackingField;

	[Token(Token = "0x17000145")]
	public int TeamId
	{
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x1458520", Offset = "0x1458520", VA = "0x1458520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDE90", Offset = "0xFDDE90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x1458528", Offset = "0x1458528", VA = "0x1458528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDEA0", Offset = "0xFDDEA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public string Name
	{
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x1458530", Offset = "0x1458530", VA = "0x1458530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDEB0", Offset = "0xFDDEB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1458538", Offset = "0x1458538", VA = "0x1458538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDEC0", Offset = "0xFDDEC0")]
		set
		{
		}
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x1458540", Offset = "0x1458540", VA = "0x1458540")]
	public TeamData()
	{
	}
}
[Token(Token = "0x2000223")]
public class HostHandleMessage : IMessageHandle
{
	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int[] cullSessions;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FlatBufferBuilder mBuilder;

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x14F6FA8", Offset = "0x14F6FA8", VA = "0x14F6FA8", Slot = "4")]
	public void Process(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x14F98A4", Offset = "0x14F98A4", VA = "0x14F98A4")]
	private void SendTo(NetMessageType.CmdCode cmdType, int sessionId, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x14F994C", Offset = "0x14F994C", VA = "0x14F994C")]
	private void SendToPlayer(NetMessageType.CmdCode cmdType, int playerId, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x14F9A60", Offset = "0x14F9A60", VA = "0x14F9A60")]
	private void Broadcast(NetMessageType.CmdCode cmdType, object data, int cullSessionId = 0, bool isReliable = false)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x14F9C00", Offset = "0x14F9C00", VA = "0x14F9C00")]
	private void BroadcastAll(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x14F9C0C", Offset = "0x14F9C0C", VA = "0x14F9C0C")]
	private void BroadcastCullHost(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x14F9C18", Offset = "0x14F9C18", VA = "0x14F9C18")]
	public FlatBufferBuilder GetBuilder()
	{
		return null;
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x14F9C4C", Offset = "0x14F9C4C", VA = "0x14F9C4C")]
	public ByteBuffer GetMessagePackageByteBuffer(VRNetLib.MessagePackage package)
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x14F723C", Offset = "0x14F723C", VA = "0x14F723C")]
	private void ProcessConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x14F8028", Offset = "0x14F8028", VA = "0x14F8028")]
	private void ProcessDisConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x14F8224", Offset = "0x14F8224", VA = "0x14F8224")]
	private void ProcessSyncPlayerGlobalInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x14F8844", Offset = "0x14F8844", VA = "0x14F8844")]
	private void ProcessFireBulletCreate(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x14F8AB0", Offset = "0x14F8AB0", VA = "0x14F8AB0")]
	private void ProcessReloadBullet(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x14F8C4C", Offset = "0x14F8C4C", VA = "0x14F8C4C")]
	private void ProcessHitDamage(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x14F8DBC", Offset = "0x14F8DBC", VA = "0x14F8DBC")]
	private void ProcessPlayerRevive(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x14F8EF4", Offset = "0x14F8EF4", VA = "0x14F8EF4")]
	private void ProcessSetLiveStatus(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x14F9078", Offset = "0x14F9078", VA = "0x14F9078")]
	private void ProcessReqSyncGearStatusInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x14F9154", Offset = "0x14F9154", VA = "0x14F9154")]
	private void ProcessReqSyncSelectInstanceStatusInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x14F93D8", Offset = "0x14F93D8", VA = "0x14F93D8")]
	private void ProcessReqSyncPreSelectInstanceStatusInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x14F965C", Offset = "0x14F965C", VA = "0x14F965C")]
	private void ProcessTriggerDropItem(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x14F97F0", Offset = "0x14F97F0", VA = "0x14F97F0")]
	private void ProcessWeaponReset(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x14FAC40", Offset = "0x14FAC40", VA = "0x14FAC40")]
	public HostHandleMessage()
	{
	}
}
[Token(Token = "0x2000224")]
public class HostSendMessage
{
	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int splitStep;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, Offset<MonsterSpawnInfo>[]> tempMonsterCreateDic;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<int, Offset<UnitTransform>[]> tempMonstersDic;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<int, Offset<UnitData>[]> tempDatasDic;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<int, Offset<UpdateAimIKInfoCell>[]> tempAimIKInfoCellsDic;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] cullSessions;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static FlatBufferBuilder mBuilder;

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x14FACDC", Offset = "0x14FACDC", VA = "0x14FACDC")]
	private static void SendTo(NetMessageType.CmdCode cmdType, int sessionId, object data, bool isSync = false)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x14FAD84", Offset = "0x14FAD84", VA = "0x14FAD84")]
	private static void Broadcast(NetMessageType.CmdCode cmdType, object data, int cullSessionId = 0, bool isReliable = false)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x14FAF50", Offset = "0x14FAF50", VA = "0x14FAF50")]
	private static void BroadcastAll(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x14FAFD0", Offset = "0x14FAFD0", VA = "0x14FAFD0")]
	private static void BroadcastCullHost(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x14FB050", Offset = "0x14FB050", VA = "0x14FB050")]
	private static FlatBufferBuilder GetBuilder()
	{
		return null;
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x14FB0D4", Offset = "0x14FB0D4", VA = "0x14FB0D4")]
	private static ByteBuffer GetMessagePackageByteBuffer(VRNetLib.MessagePackage package)
	{
		return null;
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x14FB12C", Offset = "0x14FB12C", VA = "0x14FB12C")]
	public static void BroadcastDisconnectToHost()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x14FB1DC", Offset = "0x14FB1DC", VA = "0x14FB1DC")]
	public static void BroadcastGameRoomStatusNotify(RoomStateAgent.eRoomState state)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x14FB3A8", Offset = "0x14FB3A8", VA = "0x14FB3A8")]
	public static void BroadcastMonsterCreateNotify(List<HostServer.MonsterSpawnInfo> monsterDatas)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x14FB7DC", Offset = "0x14FB7DC", VA = "0x14FB7DC")]
	public static void BroadcastUnitInfoSyncNotify(List<HostServer.UnitTransform> list)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x14FBBC8", Offset = "0x14FBBC8", VA = "0x14FBBC8")]
	public static void BroadcastMonsterAnimationSyncNotify(int objId, string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x14FBC98", Offset = "0x14FBC98", VA = "0x14FBC98")]
	public static void BroadcastMonsterTeleportSyncNotify(int objId, int opType, int status, Vector3 bPos, Vector3 ePos, Quaternion rot, float scaleTime)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x14FBE7C", Offset = "0x14FBE7C", VA = "0x14FBE7C")]
	public static void BroadcastCustomEffectSyncNotify(int objId, int efType, int opType, Vector3 bPos, Quaternion bRot)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x14FC23C", Offset = "0x14FC23C", VA = "0x14FC23C")]
	public static void BroadcastInstanceViewSyncNotify(int status, int captainId)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x14FC4A4", Offset = "0x14FC4A4", VA = "0x14FC4A4")]
	public static void BroadcastBossAniParameterSyncNotify(int objId, bool isoving, float xValue, float yValue)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x14FC564", Offset = "0x14FC564", VA = "0x14FC564")]
	public static void BroadcastMonsterBulletCretateNotify(int ownerID, Vector3 firePos, Quaternion fireRot, int bulletAssetID, int targetID, Vector3 targetPos, int randomSeed)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x14FC744", Offset = "0x14FC744", VA = "0x14FC744")]
	public static void BroadcastBulletMonsterCreateNotify(HostServer.MonsterSpawnInfo monsterData)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x14FC93C", Offset = "0x14FC93C", VA = "0x14FC93C")]
	public static void BroadcastMonsterInterruptStateNotify(int _unitId, int _interrtuptId, int _interrtuptState, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x14FCAD8", Offset = "0x14FCAD8", VA = "0x14FCAD8")]
	public static void BroadcastBossGatlinBlendRTPCNotify(int _unitId, bool state)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x14FCBA4", Offset = "0x14FCBA4", VA = "0x14FCBA4")]
	public static void BroadcastHitDamageNotify(HitResultData hitData)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x14FABA8", Offset = "0x14FABA8", VA = "0x14FABA8")]
	public static void BroadcastPlayerReviveNotify(int playerObjId)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x14FCD7C", Offset = "0x14FCD7C", VA = "0x14FCD7C")]
	public static void BroadcastReloadMagazineNotify(int playerObjId)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x14FCE18", Offset = "0x14FCE18", VA = "0x14FCE18")]
	public static void BroadcastUnitDataNotify(List<UnitResultData> list)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x14FD160", Offset = "0x14FD160", VA = "0x14FD160")]
	public static void BroadcastCutScenesNotify(e_CutScenesType type, bool isPlay)
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x14FD240", Offset = "0x14FD240", VA = "0x14FD240")]
	public static void BroadcastBattleStatisticalResults(string json)
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x14EA884", Offset = "0x14EA884", VA = "0x14EA884")]
	public static void BroadcastGameStatusNotify(e_GameStatusType gameStatus, bool status = false)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x14FD2E8", Offset = "0x14FD2E8", VA = "0x14FD2E8")]
	public static void BroadcastLobbyOperationNotify(int playerObjId, LobbyOperationResultData operationData)
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x14FD394", Offset = "0x14FD394", VA = "0x14FD394")]
	public static void BroadcastLobbyPlayerNotify(int playerId, int teamId, string name, string icon)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x14FD768", Offset = "0x14FD768", VA = "0x14FD768")]
	public static void BroadcastLobbyTeamNotify(int teamId, string teamName)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x14FD820", Offset = "0x14FD820", VA = "0x14FD820")]
	public static void BroadcastPlayAmbientEffectNotify(int eventId, int pointName)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x14FD8CC", Offset = "0x14FD8CC", VA = "0x14FD8CC")]
	public static void BroadcastNPCCreateNotify(List<HostServer.NpcSpawnInfo> npcDatas)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x14FDB40", Offset = "0x14FDB40", VA = "0x14FDB40")]
	public static void BroadcastGearStatusInfoSyncNotify(e_group_type group, int id, e_GearHandleStatus_type hStatusType, int prm1, int prm2, [Optional] Vector3 prmV1, [Optional] Quaternion rot)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x14ED7A0", Offset = "0x14ED7A0", VA = "0x14ED7A0")]
	public static void SendToGearStatusInfoSync(int sessionId, e_group_type group, int id, e_GearHandleStatus_type hStatusType, int prm1, int prm2, [Optional] Vector3 prmV1)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x14F0DC8", Offset = "0x14F0DC8", VA = "0x14F0DC8")]
	public static void BroadcastEffectStatusNotify(EffectStatus type, int playerId = -1, int value_i = 0, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x14F15C0", Offset = "0x14F15C0", VA = "0x14F15C0")]
	public static void BroadcastEffectStatusNotifyCullHost(EffectStatus type, int playerId = -1, int value_i = 0, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x14FDD00", Offset = "0x14FDD00", VA = "0x14FDD00")]
	public static void BroadcastEffectStatusNotify(EffectStatus type, int playerId = -1, bool value_i = false, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x14FDD94", Offset = "0x14FDD94", VA = "0x14FDD94")]
	public static void BroadcastEffectStatusNotify_BackType(EffectStatus type, int playerId = -1, e_RoomCharacterDeath_Type backType = e_RoomCharacterDeath_Type.Nomal, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x14FDE28", Offset = "0x14FDE28", VA = "0x14FDE28")]
	public static void BroadcastSyncAimIKInfoNotify(int objId, bool isStart, string aniState, Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x14FDFCC", Offset = "0x14FDFCC", VA = "0x14FDFCC")]
	public static void BroadcastUpdateAimIKInfoNotify(List<HostServer.UpdateAimIKInfoCell> list)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x14FA924", Offset = "0x14FA924", VA = "0x14FA924")]
	public static void BroadcastFireBulletCreate(int objId, int weaponId, Vector3 pos, Quaternion rotate, bool isEffectBullet = false, int cullSession = -1)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x14E656C", Offset = "0x14E656C", VA = "0x14E656C")]
	public static void BroadcastRoomStatusNotify(RoomType roomType, int valueI_1, int valueI_2, int valueI_3, int valueI_4, int valueI_5, int valueI_6, bool isCullHost = false)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x14E5DA4", Offset = "0x14E5DA4", VA = "0x14E5DA4")]
	public static void BroadcastRoleRoomStatusNotify(int uId, int roomId, bool isCullHost = false)
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x14FE314", Offset = "0x14FE314", VA = "0x14FE314")]
	public static void BroadcastProduceDropItemNotify(int itemType, int itemId, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x14FE490", Offset = "0x14FE490", VA = "0x14FE490")]
	public static void BroadcastDestoryDropItemNotify(int itemId)
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x14EBF98", Offset = "0x14EBF98", VA = "0x14EBF98")]
	public static void BroadcastLevelUpNotify(int unitId, int level, int exp, bool isReset = false)
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x14FE540", Offset = "0x14FE540", VA = "0x14FE540")]
	public static void BroadcastBuffNotify(sbyte buffState, int buffId, int attachId, BuffTypeEnum buffTypeEnum = BuffTypeEnum.BUFF_NONE, int attackerId = 0, [Optional] string buffdata)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x14FE710", Offset = "0x14FE710", VA = "0x14FE710")]
	public static void BroadcastSimpleSkillInfoSyncNotify(int objId, int skillType, int opType, int status, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Vector3 tPos)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x14FE8F0", Offset = "0x14FE8F0", VA = "0x14FE8F0")]
	public static void BroadcastInstanceInfoNotify(List<InstanceFlowNode> list)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x14FEDAC", Offset = "0x14FEDAC", VA = "0x14FEDAC")]
	public static void BroadcastSelectInstanceStatusNotify(int useSelectInsId, int useSelectInsFlowId, int runSelectInsId, int runSelectInsFlowId, int runningInsId, int runningInsFlowId, bool isUIOp)
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x14FEEEC", Offset = "0x14FEEEC", VA = "0x14FEEEC")]
	public static void BroadcastPreSelectInstanceStatusNotify(int runningInsId)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x14FEF9C", Offset = "0x14FEF9C", VA = "0x14FEF9C")]
	public HostSendMessage()
	{
	}
}
[Token(Token = "0x2000225")]
public class HostServer : Singleton<HostServer>
{
	[Token(Token = "0x200050C")]
	public struct MonsterSpawnInfo
	{
		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int databaseId;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int areaId;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int suicideDelayTime;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int spawnPoint;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int spawnLevel;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 spawnPos;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion spawnRot;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SpawnPointInfo spawnInfo;
	}

	[Token(Token = "0x200050D")]
	public struct NpcSpawnInfo
	{
		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int npcId;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int spawnPointId;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int groupId;
	}

	[Token(Token = "0x200050E")]
	public struct UnitTransform
	{
		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 pos;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion rot;
	}

	[Token(Token = "0x200050F")]
	public struct UpdateAimIKInfoCell
	{
		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 aimPos;
	}

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, PlayerData> playerSessionHash;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, PlayerData> playerIdHash;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, TeamData> teamInfo;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, int> sessionIdToPlayerIdHash;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HashSet<int> sessionHash;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> siteToPlayerIdHash;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD83C0", Offset = "0xFD83C0")]
	private int[] <sessionArray>k__BackingField;

	[Token(Token = "0x17000147")]
	public int[] sessionArray
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x14FF134", Offset = "0x14FF134", VA = "0x14FF134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDED0", Offset = "0xFDDED0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x14FF13C", Offset = "0x14FF13C", VA = "0x14FF13C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDEE0", Offset = "0xFDDEE0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x14FF144", Offset = "0x14FF144", VA = "0x14FF144")]
	public PlayerData[] GetPlayerDatas()
	{
		return null;
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x14F9CA4", Offset = "0x14F9CA4", VA = "0x14F9CA4")]
	public PlayerData GetPlayerDataBySessionId(int session, bool isLogError = true)
	{
		return null;
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x14FA4CC", Offset = "0x14FA4CC", VA = "0x14FA4CC")]
	public PlayerData GetPlayerDataById(int id, bool isLogError = true)
	{
		return null;
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x14F9DA0", Offset = "0x14F9DA0", VA = "0x14F9DA0")]
	public int SpawnPlayerID(int sessionId)
	{
		return default(int);
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x14F9FA8", Offset = "0x14F9FA8", VA = "0x14F9FA8")]
	public void RegisterPlayerSession(PlayerData data)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x14FA630", Offset = "0x14FA630", VA = "0x14FA630")]
	public void UnRegisterPlayerSession(int session)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x14FF1AC", Offset = "0x14FF1AC", VA = "0x14FF1AC")]
	private void AddPlayerSessionList(int session)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x14FF268", Offset = "0x14FF268", VA = "0x14FF268")]
	private void RemovePlayerSessionList(int session)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x14FF324", Offset = "0x14FF324", VA = "0x14FF324")]
	private bool CheckPlayer(int playerid)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x14FF38C", Offset = "0x14FF38C", VA = "0x14FF38C")]
	private PlayerData GetPlayerDataByPlayerId(int playerid, bool isLogError = true)
	{
		return null;
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x14FA5C8", Offset = "0x14FA5C8", VA = "0x14FA5C8")]
	public bool GetPlayerInfoByID(int id, out SettingManager.PlayerInfo playerInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x14FF488", Offset = "0x14FF488", VA = "0x14FF488")]
	public bool GetPlayerInfoBySID(int sid, out SettingManager.PlayerInfo playerInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x14F9E7C", Offset = "0x14F9E7C", VA = "0x14F9E7C")]
	public bool GetCanjoinGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x14FF5AC", Offset = "0x14FF5AC", VA = "0x14FF5AC")]
	public e_group_type GetCanJoinGroup()
	{
		return default(e_group_type);
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x14FF5B4", Offset = "0x14FF5B4", VA = "0x14FF5B4")]
	public int GetJoinPlayerCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x14FF6B8", Offset = "0x14FF6B8", VA = "0x14FF6B8")]
	public string[] GetAllRegisterMechineId(bool isFilterClosed = false)
	{
		return null;
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x14FF85C", Offset = "0x14FF85C", VA = "0x14FF85C")]
	public void SetJoinStatusByID(int playerId, bool status)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x14EBF48", Offset = "0x14EBF48", VA = "0x14EBF48")]
	public void SetWeaponType(int playerId, e_weapon_group type)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x14FF9CC", Offset = "0x14FF9CC", VA = "0x14FF9CC")]
	public void SetPlayerStyle(int playerId, e_Player_Style type)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x14FFA1C", Offset = "0x14FFA1C", VA = "0x14FFA1C")]
	public void SetGroupType(int playerId, e_group_type type)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x14FFA6C", Offset = "0x14FFA6C", VA = "0x14FFA6C")]
	public void SetTeamInfo(int teamId, string teamName)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x14FFBC0", Offset = "0x14FFBC0", VA = "0x14FFBC0")]
	public string GetTeamName(int playerId)
	{
		return null;
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x14FFD58", Offset = "0x14FFD58", VA = "0x14FFD58")]
	public void SetLoginInfo(int playerId, int teamId, string name, string iconUrl)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x14FFE78", Offset = "0x14FFE78", VA = "0x14FFE78")]
	public void SetAllLoginInfo()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x14FF92C", Offset = "0x14FF92C", VA = "0x14FF92C")]
	public void LobbyOperationServer(int playerId, int OperationType, int OperationValue)
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x1500038", Offset = "0x1500038", VA = "0x1500038")]
	public int GetSessionByIp(IPEndPoint ip)
	{
		return default(int);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x14F9F08", Offset = "0x14F9F08", VA = "0x14F9F08")]
	public bool IsCanFilterLocalServer(int sessionId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x14FA30C", Offset = "0x14FA30C", VA = "0x14FA30C")]
	public PlayerData[] GetPlayerDatas(bool filterLocalServer = false, bool filterlive = false)
	{
		return null;
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x15000C0", Offset = "0x15000C0", VA = "0x15000C0")]
	public bool HaveLoginPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x15001C8", Offset = "0x15001C8", VA = "0x15001C8")]
	public int GetPlayerIdBySite(int site, bool isLogError = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x14F9A3C", Offset = "0x14F9A3C", VA = "0x14F9A3C")]
	public int GetSessionByPlayer(int playerId)
	{
		return default(int);
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x15002C4", Offset = "0x15002C4", VA = "0x15002C4")]
	public void SetDropWeaponType(int playerId, e_weapon_group type)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x1500314", Offset = "0x1500314", VA = "0x1500314")]
	public HostServer()
	{
	}
}
[Token(Token = "0x2000226")]
public class PlayerMoveRange : MonoBehaviour
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerMoveRange pmr;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float offset;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float offsetMinX;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float offsetMaxX;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform moveArea;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float minX;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float maxX;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float minZ;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float maxZ;

	[Token(Token = "0x17000148")]
	public static PlayerMoveRange Instance
	{
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x13A3380", Offset = "0x13A3380", VA = "0x13A3380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000149")]
	public float Offset
	{
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x13A33D0", Offset = "0x13A33D0", VA = "0x13A33D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x13A33E8", Offset = "0x13A33E8", VA = "0x13A33E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x13A34B4", Offset = "0x13A34B4", VA = "0x13A34B4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x13A3688", Offset = "0x13A3688", VA = "0x13A3688")]
	public Vector3 LimitPos(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x13A36B4", Offset = "0x13A36B4", VA = "0x13A36B4")]
	public PlayerMoveRange()
	{
	}
}
[Serializable]
[Token(Token = "0x2000227")]
public class PlayerProtectDataItem
{
	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minTime;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int minPlayer;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minBlood;

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x13A40CC", Offset = "0x13A40CC", VA = "0x13A40CC")]
	public PlayerProtectDataItem()
	{
	}
}
[Token(Token = "0x2000228")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xFD33BC", Offset = "0xFD33BC")]
public class PlayerProtectData : ScriptableObject
{
	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerProtectDataItem OnePlayer;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerProtectDataItem TwoPlayer;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerProtectDataItem ThreePlayer;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerProtectDataItem FourPlayer;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerProtectDataItem FivePlayer;

	[Token(Token = "0x1700014A")]
	public PlayerProtectDataItem[] items
	{
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x13A3F2C", Offset = "0x13A3F2C", VA = "0x13A3F2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x13A40C4", Offset = "0x13A40C4", VA = "0x13A40C4")]
	public PlayerProtectData()
	{
	}
}
[Token(Token = "0x2000229")]
public class BaseHUDView : MonoBehaviour
{
	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Root;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool isShow;

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x1614238", Offset = "0x1614238", VA = "0x1614238", Slot = "4")]
	public virtual void SetShow(bool isShow)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x1614280", Offset = "0x1614280", VA = "0x1614280", Slot = "5")]
	public virtual bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x1614288", Offset = "0x1614288", VA = "0x1614288")]
	public void SetLook(Transform point)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x1614364", Offset = "0x1614364", VA = "0x1614364", Slot = "6")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x1614368", Offset = "0x1614368", VA = "0x1614368")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x1614374", Offset = "0x1614374", VA = "0x1614374")]
	public BaseHUDView()
	{
	}
}
[Token(Token = "0x200022A")]
public class BaseUI : MonoBehaviour
{
	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject mGo;

	[Token(Token = "0x1700014B")]
	public Transform CacheTransform
	{
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x1614614", Offset = "0x1614614", VA = "0x1614614")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014C")]
	public GameObject CacheGameObject
	{
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1614634", Offset = "0x1614634", VA = "0x1614634")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x16146D8", Offset = "0x16146D8", VA = "0x16146D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x16146E4", Offset = "0x16146E4", VA = "0x16146E4", Slot = "4")]
	protected virtual void OnInit()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x16146E8", Offset = "0x16146E8", VA = "0x16146E8", Slot = "5")]
	protected virtual void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x16146EC", Offset = "0x16146EC", VA = "0x16146EC", Slot = "6")]
	protected virtual void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x16146F0", Offset = "0x16146F0", VA = "0x16146F0", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x16146F4", Offset = "0x16146F4", VA = "0x16146F4", Slot = "8")]
	public virtual void Show(params object[] param)
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x161473C", Offset = "0x161473C", VA = "0x161473C", Slot = "9")]
	public virtual void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x1614784", Offset = "0x1614784", VA = "0x1614784")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x1614790", Offset = "0x1614790", VA = "0x1614790", Slot = "10")]
	public virtual bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x160B9B4", Offset = "0x160B9B4", VA = "0x160B9B4")]
	public BaseUI()
	{
	}
}
[Token(Token = "0x200022B")]
public class BattleProgress : MonoBehaviour
{
	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text m;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text s;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int curProgress;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxProgress;

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x1616524", Offset = "0x1616524", VA = "0x1616524")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x161661C", Offset = "0x161661C", VA = "0x161661C")]
	public BattleProgress()
	{
	}
}
[Token(Token = "0x200022C")]
public class BattleTimer : MonoBehaviour
{
	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text min;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text second;

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x163A000", Offset = "0x163A000", VA = "0x163A000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x163A0A0", Offset = "0x163A0A0", VA = "0x163A0A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x163A2CC", Offset = "0x163A2CC", VA = "0x163A2CC")]
	public BattleTimer()
	{
	}
}
[Token(Token = "0x200022D")]
public class BloodSliderBase : BaseHUDView
{
	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected float sliderValue;

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x163CF10", Offset = "0x163CF10", VA = "0x163CF10", Slot = "7")]
	public virtual void Init(int maxValue)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x163CF14", Offset = "0x163CF14", VA = "0x163CF14", Slot = "8")]
	public virtual void SetValue(int value)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x163CF18", Offset = "0x163CF18", VA = "0x163CF18", Slot = "9")]
	public virtual void Recover()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x163CF1C", Offset = "0x163CF1C", VA = "0x163CF1C")]
	public BloodSliderBase()
	{
	}
}
[Token(Token = "0x200022E")]
public class BossMultiBlood : BloodSliderBase
{
	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Slider;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image SliderSlow;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Speed;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] Sps;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float runningValue;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxHpValue;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int curHpValue;

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x1645810", Offset = "0x1645810", VA = "0x1645810", Slot = "7")]
	public override void Init(int maxValue)
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x1645844", Offset = "0x1645844", VA = "0x1645844", Slot = "8")]
	public override void SetValue(int value)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x16459A0", Offset = "0x16459A0", VA = "0x16459A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x1645A00", Offset = "0x1645A00", VA = "0x1645A00", Slot = "9")]
	public override void Recover()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x16459A4", Offset = "0x16459A4", VA = "0x16459A4")]
	private void SlideUpdate()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x1645A04", Offset = "0x1645A04", VA = "0x1645A04")]
	public BossMultiBlood()
	{
	}
}
[Token(Token = "0x200022F")]
public class CharacterDeathUI : BaseUI
{
	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image BgImg;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SayTxt;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] BgSps;

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1442FA0", Offset = "0x1442FA0", VA = "0x1442FA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x1442FB4", Offset = "0x1442FB4", VA = "0x1442FB4", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x1442FBC", Offset = "0x1442FBC", VA = "0x1442FBC", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x14432C4", Offset = "0x14432C4", VA = "0x14432C4", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x14432CC", Offset = "0x14432CC", VA = "0x14432CC")]
	public void SetInfo(RoomCharacterDeathBase data)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x144339C", Offset = "0x144339C", VA = "0x144339C")]
	private Sprite GetBgSp(e_RoomCharacterDeath_Type deathType)
	{
		return null;
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x1443450", Offset = "0x1443450", VA = "0x1443450")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x1442FE4", Offset = "0x1442FE4", VA = "0x1442FE4")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x1443454", Offset = "0x1443454", VA = "0x1443454")]
	public CharacterDeathUI()
	{
	}
}
[Token(Token = "0x2000230")]
public class CheckpointUI : BaseUI
{
	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5DD4", Offset = "0xFD5DD4")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsCaptain;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit unit;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointUI <>4__this;

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x1449D10", Offset = "0x1449D10", VA = "0x1449D10")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x1449FB8", Offset = "0x1449FB8", VA = "0x1449FB8")]
		internal void <ShowProcess>b__1()
		{
		}
	}

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SelectInstanceUI selectUI;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelViewManager LevelViewManager;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Coroutine coroutine;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WwiseDefine WwiseDefine;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioEvent Remind;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float forwardOffset;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float FollowViewtime;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float time;

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x1448AA0", Offset = "0x1448AA0", VA = "0x1448AA0", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x1448D98", Offset = "0x1448D98", VA = "0x1448D98", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x14492D4", Offset = "0x14492D4", VA = "0x14492D4", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x1449510", Offset = "0x1449510", VA = "0x1449510")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x14495F8", Offset = "0x14495F8", VA = "0x14495F8")]
	public void ShowProcess(SelectInstanceManager.e_ProcessType e_ProcessType)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x1448FDC", Offset = "0x1448FDC", VA = "0x1448FDC")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x1449D18", Offset = "0x1449D18", VA = "0x1449D18")]
	public void HideProcess()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x1449DE8", Offset = "0x1449DE8", VA = "0x1449DE8")]
	public CheckpointUI()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x1449DF8", Offset = "0x1449DF8", VA = "0x1449DF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDEF0", Offset = "0xFDDEF0")]
	private void <ShowProcess>b__12_0()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x1449ED8", Offset = "0x1449ED8", VA = "0x1449ED8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDF00", Offset = "0xFDDF00")]
	private void <HideProcess>b__14_0()
	{
	}
}
[Token(Token = "0x2000231")]
public class LevelUIView : BaseUI
{
	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int Id;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int InstanceId;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int FlowId;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int Status;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool IsInstanceFlowPass;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public InstanceFlowNode[] ChildNodes;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private e_FlowType flowType;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image Explored;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image Exploring;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image Explore;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite MonsterExplored;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite MonsterExploring;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite MonsterExplore;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite GearExplored;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite GearExploring;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite GearExplore;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite BoosExplore;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite BoosExplored;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite SafeRoom;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject NotExplored;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image LeftLine;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image RightLine;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image LeftDottedLine;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image RightDottedLine;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] Levelstatus;

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x14844E8", Offset = "0x14844E8", VA = "0x14844E8", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x14844F0", Offset = "0x14844F0", VA = "0x14844F0", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x1484CB8", Offset = "0x1484CB8", VA = "0x1484CB8", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x1484528", Offset = "0x1484528", VA = "0x1484528")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x1484A20", Offset = "0x1484A20", VA = "0x1484A20")]
	private void selecteCofig()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x14848D0", Offset = "0x14848D0", VA = "0x14848D0")]
	private void LevelConnection()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x1484CC0", Offset = "0x1484CC0", VA = "0x1484CC0")]
	public LevelUIView()
	{
	}
}
[Token(Token = "0x2000232")]
public class LevelViewManager : BaseUI
{
	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelUIView[] levelUIViews;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine coroutine;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<InstanceFlowNode> NextInstanceFlowNodes;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Image LeftLine;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image RightLine;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image LeftDottedLine;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Image RightDottedLine;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image leftExploring;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Image rightExploring;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Image leftExplore;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Image rightExplore;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool IsFade;

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x1484CC8", Offset = "0x1484CC8", VA = "0x1484CC8", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1484CD0", Offset = "0x1484CD0", VA = "0x1484CD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1484CD4", Offset = "0x1484CD4", VA = "0x1484CD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x1484CD8", Offset = "0x1484CD8", VA = "0x1484CD8")]
	public void InitShowData()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x1484DDC", Offset = "0x1484DDC", VA = "0x1484DDC")]
	private void DoInit()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x14850A4", Offset = "0x14850A4", VA = "0x14850A4", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x1485254", Offset = "0x1485254", VA = "0x1485254")]
	private void getSelectdata()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x1485844", Offset = "0x1485844", VA = "0x1485844")]
	private void DOFade()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x1485AF4", Offset = "0x1485AF4", VA = "0x1485AF4", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x1485C40", Offset = "0x1485C40", VA = "0x1485C40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x1485C44", Offset = "0x1485C44", VA = "0x1485C44")]
	private void Fresh()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x1485CBC", Offset = "0x1485CBC", VA = "0x1485CBC")]
	private void OnUpdateView()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x1486964", Offset = "0x1486964", VA = "0x1486964")]
	public LevelViewManager()
	{
	}
}
[Token(Token = "0x2000233")]
public class ClientUIGameStatusView : MonoBehaviour
{
	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject successfulObj;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject unsuccessfulObj;

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x13CF714", Offset = "0x13CF714", VA = "0x13CF714")]
	public void SetGameStatus(StatisticalManager.StatisticalResults results)
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x13CF8F8", Offset = "0x13CF8F8", VA = "0x13CF8F8")]
	public ClientUIGameStatusView()
	{
	}
}
[Token(Token = "0x2000234")]
public class ClientUIMyScoreView : MonoBehaviour
{
	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image levelImage;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] levelSprites;

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x13CF900", Offset = "0x13CF900", VA = "0x13CF900")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x13CFA18", Offset = "0x13CFA18", VA = "0x13CFA18")]
	public void SetMyScore(StatisticalManager.StatisticalResultData resultsData)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x13CFC0C", Offset = "0x13CFC0C", VA = "0x13CFC0C")]
	public ClientUIMyScoreView()
	{
	}
}
[Token(Token = "0x2000235")]
public class ClientUITeamGridScoreItem : MonoBehaviour
{
	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text maxKillText;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text hitRateText;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text maxTimeText;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text maxDieText;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject myFrame;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color color1;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color color2;

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x13CFC14", Offset = "0x13CFC14", VA = "0x13CFC14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x13CFDE4", Offset = "0x13CFDE4", VA = "0x13CFDE4")]
	public void Setinfo(StatisticalManager.StatisticalResultData data, bool isDisplayFrame = true)
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x13D0070", Offset = "0x13D0070", VA = "0x13D0070")]
	public ClientUITeamGridScoreItem()
	{
	}
}
[Token(Token = "0x2000236")]
public class ClientUITeamGridScoreView : MonoBehaviour
{
	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClientUITeamGridScoreItem[] items;

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x13D0078", Offset = "0x13D0078", VA = "0x13D0078")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x13D011C", Offset = "0x13D011C", VA = "0x13D011C")]
	public void SetTeamListInfo(StatisticalManager.StatisticalResults results, bool isDisplayFrame = true)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x13D0240", Offset = "0x13D0240", VA = "0x13D0240")]
	public ClientUITeamGridScoreView()
	{
	}
}
[Token(Token = "0x2000237")]
public class ClientUIView : BaseUI
{
	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _root;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ClientUIGameStatusView _GameStatusView_A;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ClientUIGameStatusView _GameStatusView_B;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent winAudioEvent;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent failAudioEvent;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StatisticalManager.StatisticalResults results;

	[Token(Token = "0x1700014D")]
	public StatisticalManager.StatisticalResults Results
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x13D0248", Offset = "0x13D0248", VA = "0x13D0248")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x13D0250", Offset = "0x13D0250", VA = "0x13D0250")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x13D0258", Offset = "0x13D0258", VA = "0x13D0258", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x13D0260", Offset = "0x13D0260", VA = "0x13D0260", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x13D0464", Offset = "0x13D0464", VA = "0x13D0464", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x13D055C", Offset = "0x13D055C", VA = "0x13D055C", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x13D0578", Offset = "0x13D0578", VA = "0x13D0578")]
	public void SetStatisticalResults(StatisticalManager.StatisticalResults _results)
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x13D02B0", Offset = "0x13D02B0", VA = "0x13D02B0")]
	private void RefreshUI()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x13D0658", Offset = "0x13D0658", VA = "0x13D0658")]
	private void Fade(GameObject go, float alpha, float duration)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x13D0558", Offset = "0x13D0558", VA = "0x13D0558")]
	private void PlayAudio(bool isPlay, bool isWin)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x13D07B4", Offset = "0x13D07B4", VA = "0x13D07B4")]
	public void OnCloseBtnClick()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x13D0894", Offset = "0x13D0894", VA = "0x13D0894")]
	public ClientUIView()
	{
	}
}
[Token(Token = "0x2000238")]
public class FollowCamera : MonoBehaviour
{
	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float displayDis;

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x15F1088", Offset = "0x15F1088", VA = "0x15F1088")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x15F108C", Offset = "0x15F108C", VA = "0x15F108C")]
	private void Follow()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x15F1300", Offset = "0x15F1300", VA = "0x15F1300")]
	public FollowCamera()
	{
	}
}
[Token(Token = "0x2000239")]
public class GuidTipUI : BaseUI
{
	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image BgImg;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SayTxt;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image BgImg1;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text SayTxt1;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform Contains;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text UseSayTxt;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image UseBgImg;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isShow;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool doFadeing;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool isFadeIn;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float fadeTime;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float fadeRunningTime;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color tmpCl;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8510", Offset = "0xFD8510")]
	private int <CallCount>k__BackingField;

	[Token(Token = "0x1700014E")]
	public int CallCount
	{
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x14F017C", Offset = "0x14F017C", VA = "0x14F017C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDF10", Offset = "0xFDDF10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x14F0184", Offset = "0x14F0184", VA = "0x14F0184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDF20", Offset = "0xFDDF20")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x14EFAC8", Offset = "0x14EFAC8", VA = "0x14EFAC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x14EFADC", Offset = "0x14EFADC", VA = "0x14EFADC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x14EFAE4", Offset = "0x14EFAE4", VA = "0x14EFAE4", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x14F0128", Offset = "0x14F0128", VA = "0x14F0128", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x14F0134", Offset = "0x14F0134", VA = "0x14F0134", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x14EFCD0", Offset = "0x14EFCD0", VA = "0x14EFCD0")]
	public void SetHighPosition(float posH = 0f)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x14F018C", Offset = "0x14F018C", VA = "0x14F018C")]
	public void SetInfo(string say)
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x14EFD54", Offset = "0x14EFD54", VA = "0x14EFD54")]
	private void SetFadeIn()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x14F0168", Offset = "0x14F0168", VA = "0x14F0168")]
	private void SetFadeOut()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x14F01D0", Offset = "0x14F01D0", VA = "0x14F01D0")]
	private void FadeOutEnd()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x14F01FC", Offset = "0x14F01FC", VA = "0x14F01FC")]
	private void DoFading()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x14EFD64", Offset = "0x14EFD64", VA = "0x14EFD64")]
	private void SetFadeValue(float v)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x14F0304", Offset = "0x14F0304", VA = "0x14F0304")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x14EFE48", Offset = "0x14EFE48", VA = "0x14EFE48")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x14F033C", Offset = "0x14F033C", VA = "0x14F033C")]
	public GuidTipUI()
	{
	}
}
[Token(Token = "0x200023A")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD341C", Offset = "0xFD341C")]
public class InfoUICell : MonoBehaviour
{
	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform text_root;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform text_root2;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float y_offset;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WUnit owner;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, string> lvStrDic;

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x14758E4", Offset = "0x14758E4", VA = "0x14758E4")]
	public static string GetLvStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x14759F8", Offset = "0x14759F8", VA = "0x14759F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x1475B38", Offset = "0x1475B38", VA = "0x1475B38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x1475BF4", Offset = "0x1475BF4", VA = "0x1475BF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x1475BFC", Offset = "0x1475BFC", VA = "0x1475BFC")]
	public void SetInfo(WUnit _owner)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x1475D80", Offset = "0x1475D80", VA = "0x1475D80")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x1475F10", Offset = "0x1475F10", VA = "0x1475F10")]
	public void DoUninit()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x1475B40", Offset = "0x1475B40", VA = "0x1475B40")]
	public void SetUIActive(bool isActive)
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x1476060", Offset = "0x1476060", VA = "0x1476060")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x1475C24", Offset = "0x1475C24", VA = "0x1475C24")]
	public void InfoUI_Update()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x1476064", Offset = "0x1476064", VA = "0x1476064")]
	public InfoUICell()
	{
	}
}
[Token(Token = "0x200023B")]
public class InfoUIManager : MonoBehaviour
{
	[Token(Token = "0x2000511")]
	public class InfoUIRootCell
	{
		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InfoUICell ui;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform t;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dis;

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x1476144", Offset = "0x1476144", VA = "0x1476144")]
		public InfoUIRootCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5DE4", Offset = "0xFD5DE4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<InfoUIRootCell> <>9__13_0;

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x14765B4", Offset = "0x14765B4", VA = "0x14765B4")]
		public <>c()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x14765BC", Offset = "0x14765BC", VA = "0x14765BC")]
		internal int <SortCells>b__13_0(InfoUIRootCell a, InfoUIRootCell b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform text_root;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InfoUIManager Instance;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Transform> cells;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<InfoUIRootCell> cells2;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<InfoUIRootCell> cellTemp;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float sortTime;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float sortTimer;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isSort;

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x14760EC", Offset = "0x14760EC", VA = "0x14760EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x1475E0C", Offset = "0x1475E0C", VA = "0x1475E0C")]
	public void Add(InfoUICell t)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x1475F84", Offset = "0x1475F84", VA = "0x1475F84")]
	public void Remove(InfoUICell t)
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x147614C", Offset = "0x147614C", VA = "0x147614C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x14761A8", Offset = "0x14761A8", VA = "0x14761A8")]
	public void SortCells()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x1476468", Offset = "0x1476468", VA = "0x1476468")]
	public InfoUIManager()
	{
	}
}
[Token(Token = "0x200023C")]
public class LoadingTextures : MonoBehaviour
{
	[Token(Token = "0x2000513")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5DF4", Offset = "0xFD5DF4")]
	private sealed class <GetResources>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingTextures <>4__this;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch <stopwatch>5__2;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <request>5__4;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DownloadHandlerTexture <downloadTexture>5__5;

		[Token(Token = "0x170003F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x14AD220", Offset = "0x14AD220", VA = "0x14AD220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x14AD288", Offset = "0x14AD288", VA = "0x14AD288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x14ACE8C", Offset = "0x14ACE8C", VA = "0x14ACE8C")]
		[DebuggerHidden]
		public <GetResources>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x14ACEC8", Offset = "0x14ACEC8", VA = "0x14ACEC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x14ACECC", Offset = "0x14ACECC", VA = "0x14ACECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x14AD228", Offset = "0x14AD228", VA = "0x14AD228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private e_type_language language;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture> textures;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string loadImagePath;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8520", Offset = "0xFD8520")]
	private static LoadingTextures <Instance>k__BackingField;

	[Token(Token = "0x1700014F")]
	public static LoadingTextures Instance
	{
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x14AC878", Offset = "0x14AC878", VA = "0x14AC878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDF30", Offset = "0xFDDF30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x14AC8C8", Offset = "0x14AC8C8", VA = "0x14AC8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDDF40", Offset = "0xFDDF40")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x14AC920", Offset = "0x14AC920", VA = "0x14AC920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x14AC978", Offset = "0x14AC978", VA = "0x14AC978")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x14ACCF0", Offset = "0x14ACCF0", VA = "0x14ACCF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x14ACDF0", Offset = "0x14ACDF0", VA = "0x14ACDF0")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x14ACAB8", Offset = "0x14ACAB8", VA = "0x14ACAB8")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x14ACDF4", Offset = "0x14ACDF4", VA = "0x14ACDF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDDF50", Offset = "0xFDDF50")]
	private IEnumerator GetResources(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x14ACEB8", Offset = "0x14ACEB8", VA = "0x14ACEB8")]
	public LoadingTextures()
	{
	}
}
[Token(Token = "0x200023D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3480", Offset = "0xFD3480")]
public class RandomLoadingTexture : MonoBehaviour
{
	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture texture_o;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RawImage image;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x155CD2C", Offset = "0x155CD2C", VA = "0x155CD2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x155CDA8", Offset = "0x155CDA8", VA = "0x155CDA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x155CDAC", Offset = "0x155CDAC", VA = "0x155CDAC")]
	private void SetImage()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x155CE9C", Offset = "0x155CE9C", VA = "0x155CE9C")]
	public RandomLoadingTexture()
	{
	}
}
[Token(Token = "0x200023E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD34E4", Offset = "0xFD34E4")]
public class RandomLoadingTexture2 : MonoBehaviour
{
	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture texture_o;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVROverlay image;

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x155CEA4", Offset = "0x155CEA4", VA = "0x155CEA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x155CF3C", Offset = "0x155CF3C", VA = "0x155CF3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x155CF40", Offset = "0x155CF40", VA = "0x155CF40")]
	private void SetImage()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x155D138", Offset = "0x155D138", VA = "0x155D138")]
	public RandomLoadingTexture2()
	{
	}
}
[Token(Token = "0x200023F")]
public class ReloadUI : BaseUI
{
	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image ProgressBar;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Weapon weapon;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float reloadTime;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x1560468", Offset = "0x1560468", VA = "0x1560468", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x1560554", Offset = "0x1560554", VA = "0x1560554", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x1560610", Offset = "0x1560610", VA = "0x1560610", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x1560690", Offset = "0x1560690", VA = "0x1560690")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x156070C", Offset = "0x156070C", VA = "0x156070C")]
	private void Reloading()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x1560AC4", Offset = "0x1560AC4", VA = "0x1560AC4")]
	public ReloadUI()
	{
	}
}
[Token(Token = "0x2000240")]
public class SelectInstanceUI : BaseUI
{
	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LeftBall;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RightBall;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI LeftText;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI RightText;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI LeftFlowName;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI RightFlowName;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image LeftIcon;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image RightIcon;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI Minute;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI Seconds;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI Countdown;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI WaitTitle;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI CurScheduleText;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<InstanceFlowNode> flowNodes;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Button button;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float nextClickTime;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 pos;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 forward;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WUnit unit;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Action PreSelect;

	[Token(Token = "0x17000150")]
	public Button Button
	{
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x140425C", Offset = "0x140425C", VA = "0x140425C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x1404264", Offset = "0x1404264", VA = "0x1404264")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x1404268", Offset = "0x1404268", VA = "0x1404268")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x140426C", Offset = "0x140426C", VA = "0x140426C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x1404270", Offset = "0x1404270", VA = "0x1404270", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x1404298", Offset = "0x1404298", VA = "0x1404298")]
	public void UnChangeInit()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x14046B8", Offset = "0x14046B8", VA = "0x14046B8", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x14057A0", Offset = "0x14057A0", VA = "0x14057A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x140523C", Offset = "0x140523C", VA = "0x140523C")]
	private void RegisterInput()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x14043B8", Offset = "0x14043B8", VA = "0x14043B8")]
	private void UnRegisterInput()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x1405F18", Offset = "0x1405F18", VA = "0x1405F18")]
	private void OnWeaponPressDown()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x1406224", Offset = "0x1406224", VA = "0x1406224")]
	private void OnWeaponPressUp()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x1405FA4", Offset = "0x1405FA4", VA = "0x1405FA4")]
	private void selected(bool isTraget)
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x1405354", Offset = "0x1405354", VA = "0x1405354")]
	private void ChangeWeaponStyle()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x14044C8", Offset = "0x14044C8", VA = "0x14044C8")]
	private void UnChangeWeaponStyle()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x1406260", Offset = "0x1406260", VA = "0x1406260")]
	private void OnWeaponChange()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x1405454", Offset = "0x1405454", VA = "0x1405454")]
	private void InitLine()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x14056D8", Offset = "0x14056D8", VA = "0x14056D8")]
	private void PreSelectBtn()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x1406264", Offset = "0x1406264", VA = "0x1406264")]
	private void UnPreSelectBtn()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x1406324", Offset = "0x1406324", VA = "0x1406324")]
	private void OnPreSelectleftUpdate()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x1405908", Offset = "0x1405908", VA = "0x1405908")]
	private void InputWidgetControl()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x140513C", Offset = "0x140513C", VA = "0x140513C")]
	private void otherPreSelect()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x14045C0", Offset = "0x14045C0", VA = "0x14045C0")]
	private void UnotherPreSelect()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x1406558", Offset = "0x1406558", VA = "0x1406558")]
	private void OnOtherPreSelect()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x1404A24", Offset = "0x1404A24", VA = "0x1404A24")]
	private void ViewUpdate()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x1405E00", Offset = "0x1405E00", VA = "0x1405E00")]
	private void curTime()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x14066D8", Offset = "0x14066D8", VA = "0x14066D8")]
	public SelectInstanceUI()
	{
	}
}
[Token(Token = "0x2000241")]
public class QRCodeVerifyDTO : Singleton<QRCodeVerifyDTO>
{
	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool VerifyQRFlag;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int mPlayerNumbers;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> qrcodes;

	[Token(Token = "0x17000151")]
	public int PlayerNumbers
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x1559428", Offset = "0x1559428", VA = "0x1559428")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x1559430", Offset = "0x1559430", VA = "0x1559430")]
		private set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public int SelectPlayerNumbers
	{
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x1559438", Offset = "0x1559438", VA = "0x1559438")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x15594B0", Offset = "0x15594B0", VA = "0x15594B0")]
	public string[] GetAllQRCode()
	{
		return null;
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x155951C", Offset = "0x155951C", VA = "0x155951C")]
	public void StartGame(Action<bool, string> cb)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x1559584", Offset = "0x1559584", VA = "0x1559584")]
	public void VerifyQRCode(Action<bool, string> cb)
	{
	}

	[Token(Token = "0x6000FED")]
	public static bool CompareArray<T>(T[] arr1, T[] arr2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x15595EC", Offset = "0x15595EC", VA = "0x15595EC")]
	public QRCodeVerifyDTO()
	{
	}
}
[Token(Token = "0x2000242")]
public class ServerUIMessageView : BaseUI
{
	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image bg;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x140BF8C", Offset = "0x140BF8C", VA = "0x140BF8C", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x140C0B8", Offset = "0x140C0B8", VA = "0x140C0B8", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x140C0D4", Offset = "0x140C0D4", VA = "0x140C0D4", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x140C130", Offset = "0x140C130", VA = "0x140C130", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x140C17C", Offset = "0x140C17C", VA = "0x140C17C")]
	public void Close()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x140C25C", Offset = "0x140C25C", VA = "0x140C25C")]
	private void Fade(float alpha, float duration)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x140C3B8", Offset = "0x140C3B8", VA = "0x140C3B8")]
	public void ShowMessage(string info)
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x140C4BC", Offset = "0x140C4BC", VA = "0x140C4BC")]
	public ServerUIMessageView()
	{
	}
}
[Token(Token = "0x2000243")]
public class ServerUIQRCodeItemView : BaseUI
{
	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text info_text;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ServerUIQRCodeView parentView;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string qrcode;

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x140C4C4", Offset = "0x140C4C4", VA = "0x140C4C4", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x140C5E4", Offset = "0x140C5E4", VA = "0x140C5E4")]
	public void RefreshUI()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x140C610", Offset = "0x140C610", VA = "0x140C610")]
	public void RemoveBtn()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x140C6D4", Offset = "0x140C6D4", VA = "0x140C6D4")]
	public ServerUIQRCodeItemView()
	{
	}
}
[Token(Token = "0x2000244")]
public class ServerUIQRCodeView : BaseUI
{
	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button Close_Btn;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button Clear_Btn;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button verify_Btn;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InputField QRCode_Input;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject QRCodeItemPrefab;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GridLayoutGroup QRCodeGrid;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<ServerUIQRCodeItemView> qrcodeItems;

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x140C6DC", Offset = "0x140C6DC", VA = "0x140C6DC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x140C6E4", Offset = "0x140C6E4", VA = "0x140C6E4", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x140C700", Offset = "0x140C700", VA = "0x140C700", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x140C75C", Offset = "0x140C75C", VA = "0x140C75C", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x140C7B8", Offset = "0x140C7B8", VA = "0x140C7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x140C838", Offset = "0x140C838", VA = "0x140C838")]
	public void CloseBtn()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x140C918", Offset = "0x140C918", VA = "0x140C918")]
	public void ClearBtn()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x140CA74", Offset = "0x140CA74", VA = "0x140CA74")]
	public void VerifyBtn()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x140C7BC", Offset = "0x140C7BC", VA = "0x140C7BC")]
	private void MonitorQRCode()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x140CA78", Offset = "0x140CA78", VA = "0x140CA78")]
	private void AddItem(string qrcode)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x140C62C", Offset = "0x140C62C", VA = "0x140C62C")]
	public void RemoveItem(ServerUIQRCodeItemView item)
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x140C91C", Offset = "0x140C91C", VA = "0x140C91C")]
	public void RemoveAllItem()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x140CD3C", Offset = "0x140CD3C", VA = "0x140CD3C")]
	public ServerUIQRCodeView()
	{
	}
}
[Token(Token = "0x2000245")]
public class ServerUIView : BaseUI
{
	[Token(Token = "0x2000514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E04", Offset = "0xFD5E04")]
	private sealed class <DoRefresh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerUIView <>4__this;

		[Token(Token = "0x170003FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026AB")]
			[Address(RVA = "0x140E64C", Offset = "0x140E64C", VA = "0x140E64C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0x140E6B4", Offset = "0x140E6B4", VA = "0x140E6B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x140D8E0", Offset = "0x140D8E0", VA = "0x140D8E0")]
		[DebuggerHidden]
		public <DoRefresh>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x140E594", Offset = "0x140E594", VA = "0x140E594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x140E598", Offset = "0x140E598", VA = "0x140E598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x140E654", Offset = "0x140E654", VA = "0x140E654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E14", Offset = "0xFD5E14")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__43_0;

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x140E588", Offset = "0x140E588", VA = "0x140E588")]
		public <>c()
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x140E590", Offset = "0x140E590", VA = "0x140E590")]
		internal void <.ctor>b__43_0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text Time_Text;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button Game_Btn;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Game_Btn_Text;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Button Video_Btn;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text Video_Btn_Text;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GridLayoutGroup Role_Item_Grid;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject RoleItemPrefab;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Button StartQRCode_Btn;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text AvailablePlayer_Text;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private BaseUI QRCodeView;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public ServerUIMessageView MessageView;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text Version_Text;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<bool> GameStatusEvent;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool GameVideoStatus;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<PlayerData, ServerUIViewRoleCell> roleToUIItemDic;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<int, string> timerStrDic;

	[Token(Token = "0x17000153")]
	private bool GameStatus
	{
		[Token(Token = "0x6001008")]
		[Address(RVA = "0x140CDB8", Offset = "0x140CDB8", VA = "0x140CDB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000154")]
	public double GameTime
	{
		[Token(Token = "0x6001009")]
		[Address(RVA = "0x140CE80", Offset = "0x140CE80", VA = "0x140CE80")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x140CEFC", Offset = "0x140CEFC", VA = "0x140CEFC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x140D048", Offset = "0x140D048", VA = "0x140D048", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x140D188", Offset = "0x140D188", VA = "0x140D188")]
	private void LockUI()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x140D304", Offset = "0x140D304", VA = "0x140D304")]
	private void UnLockUI()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x140D480", Offset = "0x140D480", VA = "0x140D480", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x140D49C", Offset = "0x140D49C", VA = "0x140D49C", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x140D6F8", Offset = "0x140D6F8", VA = "0x140D6F8", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x140D740", Offset = "0x140D740", VA = "0x140D740")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x140D118", Offset = "0x140D118", VA = "0x140D118")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x140D864", Offset = "0x140D864", VA = "0x140D864")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDDFB4", Offset = "0xFDDFB4")]
	private IEnumerator DoRefresh()
	{
		return null;
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x140D90C", Offset = "0x140D90C", VA = "0x140D90C")]
	private void DoRefresh1()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x140DBF4", Offset = "0x140DBF4", VA = "0x140DBF4")]
	private void ChangePlatfromVerifyView()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x140DCB4", Offset = "0x140DCB4", VA = "0x140DCB4")]
	private void ChangeAvailablePlayerText()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x140D940", Offset = "0x140D940", VA = "0x140D940")]
	private void ChangeVideoBtnText()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x140D9BC", Offset = "0x140D9BC", VA = "0x140D9BC")]
	private void ChangeGameBtnText()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x140DA3C", Offset = "0x140DA3C", VA = "0x140DA3C")]
	private void ChangeRoleItems()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x140DD7C", Offset = "0x140DD7C", VA = "0x140DD7C")]
	public void AddAndChangeRoleItem(PlayerData data)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x140DCB8", Offset = "0x140DCB8", VA = "0x140DCB8")]
	public void RemoveRoleItem(PlayerData data)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x140D744", Offset = "0x140D744", VA = "0x140D744")]
	public void UpdateGameTimer()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x140DFA4", Offset = "0x140DFA4", VA = "0x140DFA4")]
	private string GetTimeStr(int num)
	{
		return null;
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x140E06C", Offset = "0x140E06C", VA = "0x140E06C")]
	public void OnStartGame()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x140E104", Offset = "0x140E104", VA = "0x140E104")]
	public void OnStopGame()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x140E19C", Offset = "0x140E19C", VA = "0x140E19C")]
	public ServerUIView()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x140E304", Offset = "0x140E304", VA = "0x140E304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE018", Offset = "0xFDE018")]
	private void <OnInit>b__20_0()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x140E3BC", Offset = "0x140E3BC", VA = "0x140E3BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE028", Offset = "0xFDE028")]
	private void <OnInit>b__20_3()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x140E3DC", Offset = "0x140E3DC", VA = "0x140E3DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE038", Offset = "0xFDE038")]
	private void <OnInit>b__20_1()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x140E40C", Offset = "0x140E40C", VA = "0x140E40C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE048", Offset = "0xFDE048")]
	private void <OnInit>b__20_2()
	{
	}
}
[Token(Token = "0x2000246")]
public class ServerUIViewRoleCell : BaseUI
{
	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerData playerData;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image enableStatus_Image;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EventTrigger enableStatus_Trigger;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text playerInfo_ip_Text;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text playerInfo_roleType_Image;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EventTrigger playerInfo_roleType_Trigger;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text playerInfo_weaponType_Image;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EventTrigger playerInfo_weaponType_Trigger;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text playerInfo_groupType_Image;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EventTrigger playerInfo_groupType_Trigger;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private e_Player_Style player_stype;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private e_weapon_group weapon_stype;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private e_group_type group_stype;

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x140E6BC", Offset = "0x140E6BC", VA = "0x140E6BC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x140E7B0", Offset = "0x140E7B0", VA = "0x140E7B0", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x140E7D8", Offset = "0x140E7D8", VA = "0x140E7D8")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x140E974", Offset = "0x140E974", VA = "0x140E974")]
	private void ChangeEnableStatus()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x140E824", Offset = "0x140E824", VA = "0x140E824")]
	private void SwitchEnableStatus()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x140E878", Offset = "0x140E878", VA = "0x140E878")]
	public void ChangePlayerInfo()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x140EC1C", Offset = "0x140EC1C", VA = "0x140EC1C")]
	public void ChangePlayerType(e_Player_Style curType)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x140EA10", Offset = "0x140EA10", VA = "0x140EA10")]
	public void SwitchPlayerImage(e_Player_Style curType)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x140ED6C", Offset = "0x140ED6C", VA = "0x140ED6C")]
	public void ChangeWeaponType(e_weapon_group curType)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x140EABC", Offset = "0x140EABC", VA = "0x140EABC")]
	public void SwitchWeaponImage(e_weapon_group curType)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x140EEBC", Offset = "0x140EEBC", VA = "0x140EEBC")]
	public void ChangeGroupType(e_group_type curType)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x140EB68", Offset = "0x140EB68", VA = "0x140EB68")]
	public void SwitchGroupImage(e_group_type curType)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x140EF74", Offset = "0x140EF74", VA = "0x140EF74")]
	public void OnEnableBtnClick()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x140EF78", Offset = "0x140EF78", VA = "0x140EF78")]
	public void OnPlayerBtnClick()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x140EF80", Offset = "0x140EF80", VA = "0x140EF80")]
	public void OnWeaponBtnClick()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x140EF88", Offset = "0x140EF88", VA = "0x140EF88")]
	public void OnGroupBtnClick()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x140D298", Offset = "0x140D298", VA = "0x140D298")]
	public void LockUI()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x140D414", Offset = "0x140D414", VA = "0x140D414")]
	public void UnLockUI()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x140EF90", Offset = "0x140EF90", VA = "0x140EF90")]
	public ServerUIViewRoleCell()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x140EF98", Offset = "0x140EF98", VA = "0x140EF98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE058", Offset = "0xFDE058")]
	private void <OnInit>b__13_0(BaseEventData data)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x140F038", Offset = "0x140F038", VA = "0x140F038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE068", Offset = "0xFDE068")]
	private void <OnInit>b__13_1()
	{
	}
}
[Token(Token = "0x2000247")]
public class StatiscalUI : BaseUI
{
	[Token(Token = "0x2000516")]
	private struct ScoreRange
	{
		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int min;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int max;
	}

	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E24", Offset = "0xFD5E24")]
	private sealed class <UpdateView>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StatiscalUI <>4__this;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForEndOfFrame <wait>5__2;

		[Token(Token = "0x170003FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x15C9A64", Offset = "0x15C9A64", VA = "0x15C9A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x15C9ACC", Offset = "0x15C9ACC", VA = "0x15C9ACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x15C8494", Offset = "0x15C8494", VA = "0x15C8494")]
		[DebuggerHidden]
		public <UpdateView>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x15C8A4C", Offset = "0x15C8A4C", VA = "0x15C8A4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x15C8A50", Offset = "0x15C8A50", VA = "0x15C8A50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x15C9A6C", Offset = "0x15C9A6C", VA = "0x15C9A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] itemCells;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject infoRoot;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject imageRoot;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RawImage rawImage;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite[] sprites;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color selfNameColor;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color selfInfoColor;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color otherNameColor;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color otherInfoColor;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture2D winTexture;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture2D failTexture;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int winTextId;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int failTextId;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text stateText;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Texture2D icon_d;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float speed;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float holdTime;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float displayDis;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public AudioEvent audioEvent_win;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioEvent audioEvent_lost;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public StateInfoData bgmState;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine coroutine;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine sObj;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WwiseDefine sObj2;

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x15C7D94", Offset = "0x15C7D94", VA = "0x15C7D94", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x15C7DC4", Offset = "0x15C7DC4", VA = "0x15C7DC4", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x15C81BC", Offset = "0x15C81BC", VA = "0x15C81BC", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x15C8154", Offset = "0x15C8154", VA = "0x15C8154")]
	private void OnUpdateView()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x15C7EE0", Offset = "0x15C7EE0", VA = "0x15C7EE0")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x15C8418", Offset = "0x15C8418", VA = "0x15C8418")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDE078", Offset = "0xFDE078")]
	private IEnumerator UpdateView()
	{
		return null;
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x15C84C0", Offset = "0x15C84C0", VA = "0x15C84C0")]
	private void UpdateItem(Transform item, bool isSelf, StatisticalManager.StatisticalResultData data, PlayerData playerData)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x15C8A30", Offset = "0x15C8A30", VA = "0x15C8A30")]
	public StatiscalUI()
	{
	}
}
[Token(Token = "0x2000248")]
public class StatisticalUI_PlayerInfo_View : BaseUI
{
	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text nameText;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI InitLv;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI CurLv;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI KillTotal;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI HeadKill;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI Death;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI Score;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private RawImage icon;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image winIcon;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image failIcon;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image winPromote;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Image failPromote;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Color defaultColor;

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x15CC4B4", Offset = "0x15CC4B4", VA = "0x15CC4B4")]
	public void RefreshUI(bool isCurPlayer, bool isWin, string name, int initLv, int curLv, int killTotal, int headKill, int death, float score, Texture iconTexture, Color winColor, Color failColor)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x15CCF6C", Offset = "0x15CCF6C", VA = "0x15CCF6C")]
	public StatisticalUI_PlayerInfo_View()
	{
	}
}
[Token(Token = "0x2000249")]
public class TotalStatisticalUI : BaseUI
{
	[Token(Token = "0x2000518")]
	private struct ScoreRange
	{
		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int min;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int max;
	}

	[Token(Token = "0x2000519")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E34", Offset = "0xFD5E34")]
	private sealed class <InfoView0>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotalStatisticalUI <>4__this;

		[Token(Token = "0x170003FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026BA")]
			[Address(RVA = "0x146351C", Offset = "0x146351C", VA = "0x146351C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0x1463584", Offset = "0x1463584", VA = "0x1463584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x14632B0", Offset = "0x14632B0", VA = "0x14632B0")]
		[DebuggerHidden]
		public <InfoView0>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x14632EC", Offset = "0x14632EC", VA = "0x14632EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x14632F0", Offset = "0x14632F0", VA = "0x14632F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x1463524", Offset = "0x1463524", VA = "0x1463524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine coroutine;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI Progress;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI Time;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI ScoreText;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI Result;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color winColor;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color failBColor;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StatisticalUI_PlayerInfo_View[] playerCells;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float posOffset;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D icon_d;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject view1;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject view2;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI info;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float infoTime;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public AudioEvent winEvent;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioEvent failureEvent;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public AudioEvent bgmEvent;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isWin;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WwiseDefine bgm;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WwiseDefine audio;

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x14623B0", Offset = "0x14623B0", VA = "0x14623B0", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x14623B4", Offset = "0x14623B4", VA = "0x14623B4", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x1462EF8", Offset = "0x1462EF8", VA = "0x1462EF8", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x1463108", Offset = "0x1463108", VA = "0x1463108")]
	private void OnUpdateView()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x1462E7C", Offset = "0x1462E7C", VA = "0x1462E7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDE0DC", Offset = "0xFDE0DC")]
	private IEnumerator InfoView0()
	{
		return null;
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x1462520", Offset = "0x1462520", VA = "0x1462520")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x1462818", Offset = "0x1462818", VA = "0x1462818")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x14632DC", Offset = "0x14632DC", VA = "0x14632DC")]
	public TotalStatisticalUI()
	{
	}
}
[Token(Token = "0x200024A")]
public class UnitNormalNameHUD : BaseHUDView
{
	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text nameText;

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x146FDE0", Offset = "0x146FDE0", VA = "0x146FDE0")]
	public void SetNameText(string name)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x146FE90", Offset = "0x146FE90", VA = "0x146FE90")]
	public void SetNameColor(Color cl)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x146FF64", Offset = "0x146FF64", VA = "0x146FF64")]
	public void ShowNameTextActive(bool isActive)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x1470018", Offset = "0x1470018", VA = "0x1470018")]
	public void ShowNameTextFontSize(int size)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x14700C0", Offset = "0x14700C0", VA = "0x14700C0", Slot = "6")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x14700C4", Offset = "0x14700C4", VA = "0x14700C4")]
	public UnitNormalNameHUD()
	{
	}
}
[Token(Token = "0x200024B")]
public class VRDeviceSelectorCell : BaseUI
{
	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerData playerData;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ConnectImg;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text playerInfo_ip_Text;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text playerInfo_roleType_Image;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EventTrigger playerInfo_roleType_Trigger;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_ControllerSelector.ControllerData data;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_ControllerSelector selector;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int cotrollerIndex;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string cotroller;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int deviceIndex;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string device;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isConnect;

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x159A760", Offset = "0x159A760", VA = "0x159A760", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x159A7D8", Offset = "0x159A7D8", VA = "0x159A7D8", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x159AC40", Offset = "0x159AC40", VA = "0x159AC40")]
	public void SetData(int index, SteamVR_ControllerSelector sellect, SteamVR_ControllerSelector.ControllerData data)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x159A800", Offset = "0x159A800", VA = "0x159A800")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x159AEE8", Offset = "0x159AEE8", VA = "0x159AEE8")]
	public void ChangePlayerType(int curIndex)
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x159AD34", Offset = "0x159AD34", VA = "0x159AD34")]
	private Dictionary<string, SteamVR_ControllerSelector.DeviceCodeInfo> GetRealCtrDic()
	{
		return null;
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x159B1B0", Offset = "0x159B1B0", VA = "0x159B1B0")]
	public void OnPlayerBtnClick()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x159B22C", Offset = "0x159B22C", VA = "0x159B22C")]
	public void LockUI()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x159B24C", Offset = "0x159B24C", VA = "0x159B24C")]
	public void UnLockUI()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x159B26C", Offset = "0x159B26C", VA = "0x159B26C")]
	public VRDeviceSelectorCell()
	{
	}
}
[Token(Token = "0x200024C")]
public class VRDeviceSelectorUIView : BaseUI
{
	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button Game_Btn;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button Save_Btn;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GridLayoutGroup Role_Item_Grid;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<VRDeviceSelectorCell> deviceUIItemDic;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_ControllerSelector m_controllerSelector;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float delayTime;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float updateDelayTime;

	[Token(Token = "0x17000155")]
	private SteamVR_ControllerSelector Selector
	{
		[Token(Token = "0x600105C")]
		[Address(RVA = "0x159B2F0", Offset = "0x159B2F0", VA = "0x159B2F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x159B3AC", Offset = "0x159B3AC", VA = "0x159B3AC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x159B490", Offset = "0x159B490", VA = "0x159B490")]
	private void LockUI()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x159B494", Offset = "0x159B494", VA = "0x159B494")]
	private void UnLockUI()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x159B498", Offset = "0x159B498", VA = "0x159B498", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x159B4B4", Offset = "0x159B4B4", VA = "0x159B4B4", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x159B4EC", Offset = "0x159B4EC", VA = "0x159B4EC", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x159B530", Offset = "0x159B530", VA = "0x159B530")]
	private void Update()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x159B52C", Offset = "0x159B52C", VA = "0x159B52C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x159B630", Offset = "0x159B630", VA = "0x159B630")]
	private void ChangeRoleItems()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x159B798", Offset = "0x159B798", VA = "0x159B798")]
	public void DoSaveConfig()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x159B83C", Offset = "0x159B83C", VA = "0x159B83C")]
	public void OnStartGame()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x159B8CC", Offset = "0x159B8CC", VA = "0x159B8CC")]
	public void OnStopGame()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x159B95C", Offset = "0x159B95C", VA = "0x159B95C")]
	public VRDeviceSelectorUIView()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x159B9E0", Offset = "0x159B9E0", VA = "0x159B9E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE140", Offset = "0xFDE140")]
	private void <OnInit>b__10_0()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x159BA88", Offset = "0x159BA88", VA = "0x159BA88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE150", Offset = "0xFDE150")]
	private void <OnInit>b__10_2()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x159BAA8", Offset = "0x159BAA8", VA = "0x159BAA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE160", Offset = "0xFDE160")]
	private void <OnInit>b__10_1()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x159BB50", Offset = "0x159BB50", VA = "0x159BB50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE170", Offset = "0xFDE170")]
	private void <OnInit>b__10_3()
	{
	}
}
[Token(Token = "0x200024D")]
public class WeaponInfoUI : BaseUI
{
	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text hpTitle;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ammoTitle;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text hpText;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ammoText;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ammoText2;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text lvText;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color hpColor1;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color hpColor2;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color ammoColor1;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color ammoColor2;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD87C0", Offset = "0xFD87C0")]
	public float hpThreshold;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD87D8", Offset = "0xFD87D8")]
	public float ammoThreshold;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WUnit owner;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Weapon weapon;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image lvProgress;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image hpProgress;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image ammoProgress;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int maxValue;

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x15ACF74", Offset = "0x15ACF74", VA = "0x15ACF74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x15ACF88", Offset = "0x15ACF88", VA = "0x15ACF88", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x15AD0A8", Offset = "0x15AD0A8", VA = "0x15AD0A8", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x15AD0E8", Offset = "0x15AD0E8", VA = "0x15AD0E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x15AD5B4", Offset = "0x15AD5B4", VA = "0x15AD5B4")]
	public WeaponInfoUI()
	{
	}
}
[Token(Token = "0x200024E")]
public class AIAgent : WAgent
{
	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BehaviourTreeOwner behaviourTree;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Blackboard blackboard;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x18C6A18", Offset = "0x18C6A18", VA = "0x18C6A18", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x18C6A20", Offset = "0x18C6A20", VA = "0x18C6A20")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x18C6C6C", Offset = "0x18C6C6C", VA = "0x18C6C6C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x18C6A24", Offset = "0x18C6A24", VA = "0x18C6A24")]
	private void InitBehaviourTree()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x18C6C74", Offset = "0x18C6C74", VA = "0x18C6C74")]
	public void SetAIEnable(bool isEnable)
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x18C6D98", Offset = "0x18C6D98", VA = "0x18C6D98")]
	public AIAgent()
	{
	}
}
[Token(Token = "0x200024F")]
public class AnimationAgent : WAgent
{
	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationDefine define;

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x1607BF4", Offset = "0x1607BF4", VA = "0x1607BF4")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x1607EB4", Offset = "0x1607EB4", VA = "0x1607EB4", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x1607EBC", Offset = "0x1607EBC", VA = "0x1607EBC")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x1607FDC", Offset = "0x1607FDC", VA = "0x1607FDC")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x1607FE0", Offset = "0x1607FE0", VA = "0x1607FE0")]
	public AnimationAgent()
	{
	}
}
[Token(Token = "0x2000250")]
public class BodyPartAgent : WAgent
{
	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Component> hurtDefines;

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x163CF24", Offset = "0x163CF24", VA = "0x163CF24", Slot = "4")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x163CF2C", Offset = "0x163CF2C", VA = "0x163CF2C")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x163CF30", Offset = "0x163CF30", VA = "0x163CF30")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x163D0CC", Offset = "0x163D0CC", VA = "0x163D0CC")]
	public HurtDefine GetFirstDefine()
	{
		return null;
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x163D168", Offset = "0x163D168", VA = "0x163D168")]
	public void SetAllBodyPartStatus(bool status)
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x163D2B4", Offset = "0x163D2B4", VA = "0x163D2B4")]
	public BodyPartAgent()
	{
	}
}
[Token(Token = "0x2000251")]
public class BuffAgent : WAgent
{
	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, IBuff> buffDic;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MultiMap<short, int, IBuff> buffTypeDic;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> delList;

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x1646730", Offset = "0x1646730", VA = "0x1646730", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x1646738", Offset = "0x1646738", VA = "0x1646738")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x164697C", Offset = "0x164697C", VA = "0x164697C")]
	private void ClearDel()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x1646C38", Offset = "0x1646C38", VA = "0x1646C38")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x1646DD4", Offset = "0x1646DD4", VA = "0x1646DD4")]
	public void AddBuff(IBuff buffBase)
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x16472F0", Offset = "0x16472F0", VA = "0x16472F0")]
	public void UpdateBuff(int id, string dataJson)
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x1646A98", Offset = "0x1646A98", VA = "0x1646A98")]
	public void RemoveBuff(int id)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x16473EC", Offset = "0x16473EC", VA = "0x16473EC")]
	public BuffAgent()
	{
	}
}
[Token(Token = "0x2000252")]
public class DataAgent : WAgent
{
	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_Player_Style playerStyle;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnitAttribute attributeTable;

	[Token(Token = "0x17000156")]
	public int CurHP
	{
		[Token(Token = "0x600108C")]
		[Address(RVA = "0x13D3190", Offset = "0x13D3190", VA = "0x13D3190")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600108D")]
		[Address(RVA = "0x13D31BC", Offset = "0x13D31BC", VA = "0x13D31BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public int MaxHP
	{
		[Token(Token = "0x600108E")]
		[Address(RVA = "0x13D327C", Offset = "0x13D327C", VA = "0x13D327C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000158")]
	public e_weapon_group Weapon_Group
	{
		[Token(Token = "0x600108F")]
		[Address(RVA = "0x13D32A8", Offset = "0x13D32A8", VA = "0x13D32A8")]
		get
		{
			return default(e_weapon_group);
		}
	}

	[Token(Token = "0x17000159")]
	public int Atk
	{
		[Token(Token = "0x6001090")]
		[Address(RVA = "0x13D32C0", Offset = "0x13D32C0", VA = "0x13D32C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015A")]
	public int Lv
	{
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x13D3338", Offset = "0x13D3338", VA = "0x13D3338")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015B")]
	public int WeaponLv
	{
		[Token(Token = "0x6001092")]
		[Address(RVA = "0x13D3364", Offset = "0x13D3364", VA = "0x13D3364")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015C")]
	public string LvStr
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0x13D3390", Offset = "0x13D3390", VA = "0x13D3390")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015D")]
	public bool IsMaxLv
	{
		[Token(Token = "0x6001094")]
		[Address(RVA = "0x13D343C", Offset = "0x13D343C", VA = "0x13D343C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015E")]
	public int MinLv
	{
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x13D3554", Offset = "0x13D3554", VA = "0x13D3554")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015F")]
	public int MaxLv
	{
		[Token(Token = "0x6001096")]
		[Address(RVA = "0x13D3470", Offset = "0x13D3470", VA = "0x13D3470")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000160")]
	public int Exp
	{
		[Token(Token = "0x6001098")]
		[Address(RVA = "0x13D3AD4", Offset = "0x13D3AD4", VA = "0x13D3AD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001097")]
		[Address(RVA = "0x13D3A60", Offset = "0x13D3A60", VA = "0x13D3A60")]
		set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public string ExpStr
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x13D3B00", Offset = "0x13D3B00", VA = "0x13D3B00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000162")]
	public int Exp_Current
	{
		[Token(Token = "0x600109A")]
		[Address(RVA = "0x13D3BD0", Offset = "0x13D3BD0", VA = "0x13D3BD0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000163")]
	public int Exp_Next
	{
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x13D3F78", Offset = "0x13D3F78", VA = "0x13D3F78")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000164")]
	public string Exp_NextStr
	{
		[Token(Token = "0x600109C")]
		[Address(RVA = "0x13D4058", Offset = "0x13D4058", VA = "0x13D4058")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000165")]
	public int ExpDrop
	{
		[Token(Token = "0x600109D")]
		[Address(RVA = "0x13D4184", Offset = "0x13D4184", VA = "0x13D4184")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000166")]
	public int WeaponMaxBulletCount
	{
		[Token(Token = "0x600109E")]
		[Address(RVA = "0x13D41B0", Offset = "0x13D41B0", VA = "0x13D41B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000167")]
	public int WeaponMaxMagazineCount
	{
		[Token(Token = "0x600109F")]
		[Address(RVA = "0x13D41DC", Offset = "0x13D41DC", VA = "0x13D41DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000168")]
	public int WeaponAtk
	{
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x13D4208", Offset = "0x13D4208", VA = "0x13D4208")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000169")]
	public e_type_monster monsterType
	{
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x13D3638", Offset = "0x13D3638", VA = "0x13D3638")]
		get
		{
			return default(e_type_monster);
		}
	}

	[Token(Token = "0x1700016A")]
	public e_type_npc npcType
	{
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x13D4234", Offset = "0x13D4234", VA = "0x13D4234")]
		get
		{
			return default(e_type_npc);
		}
	}

	[Token(Token = "0x1700016B")]
	public string name
	{
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x13D424C", Offset = "0x13D424C", VA = "0x13D424C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016C")]
	public int tableId
	{
		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x13D42B0", Offset = "0x13D42B0", VA = "0x13D42B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700016D")]
	public int modelId
	{
		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x13D42C8", Offset = "0x13D42C8", VA = "0x13D42C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700016E")]
	public int score
	{
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x13D42E0", Offset = "0x13D42E0", VA = "0x13D42E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700016F")]
	public int hpRecoverInterval
	{
		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x13D42F8", Offset = "0x13D42F8", VA = "0x13D42F8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000170")]
	public int hpRecoverValue
	{
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x13D4310", Offset = "0x13D4310", VA = "0x13D4310")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000171")]
	public List<int> dropList
	{
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x13D4328", Offset = "0x13D4328", VA = "0x13D4328")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public int dropRatio
	{
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x13D4340", Offset = "0x13D4340", VA = "0x13D4340")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x13D4358", Offset = "0x13D4358", VA = "0x13D4358", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x13D4360", Offset = "0x13D4360", VA = "0x13D4360")]
	public void SetAttributeTable(UnitAttribute _attributeTable)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x13D4368", Offset = "0x13D4368", VA = "0x13D4368")]
	public void Update(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x13D436C", Offset = "0x13D436C", VA = "0x13D436C")]
	public void FixedUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x13D4370", Offset = "0x13D4370", VA = "0x13D4370")]
	public void Revive()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x13D43B0", Offset = "0x13D43B0", VA = "0x13D43B0")]
	public void Restore(int value)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x13D4410", Offset = "0x13D4410", VA = "0x13D4410")]
	public DataAgent()
	{
	}
}
[Token(Token = "0x2000253")]
public class HPRestoreAgent : WAgent
{
	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isRestore;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int restoreValue;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int restoreTime;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int restoreTimer;

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x14F4BF8", Offset = "0x14F4BF8", VA = "0x14F4BF8", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x14F4CC4", Offset = "0x14F4CC4", VA = "0x14F4CC4")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x14F4D94", Offset = "0x14F4D94", VA = "0x14F4D94")]
	public void SetRestoreInfo(int _restoreTime, int _restoreValue)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x14F4D9C", Offset = "0x14F4D9C", VA = "0x14F4D9C")]
	public void Activa()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x14F4DAC", Offset = "0x14F4DAC", VA = "0x14F4DAC")]
	public void Deactiva()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x14F4DB4", Offset = "0x14F4DB4", VA = "0x14F4DB4")]
	public HPRestoreAgent()
	{
	}
}
[Token(Token = "0x2000254")]
public class IKAgent : WAgent
{
	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IKConfigMono ikConfigMono;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Weapon weapon_l;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Weapon weapon_r;

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x1474A64", Offset = "0x1474A64", VA = "0x1474A64")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x1474AE0", Offset = "0x1474AE0", VA = "0x1474AE0", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x1474AE8", Offset = "0x1474AE8", VA = "0x1474AE8")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x1474AEC", Offset = "0x1474AEC", VA = "0x1474AEC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x1474B2C", Offset = "0x1474B2C", VA = "0x1474B2C")]
	public void SetAimActive(bool isActive)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x1474C18", Offset = "0x1474C18", VA = "0x1474C18")]
	public void UpdateHeadIK(Vector3 vrCameraPos)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x1474DA8", Offset = "0x1474DA8", VA = "0x1474DA8")]
	public void UpdateWeaponIK()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x1474B30", Offset = "0x1474B30", VA = "0x1474B30")]
	public void SetIKEnable(bool flag)
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x1475378", Offset = "0x1475378", VA = "0x1475378")]
	public void BindHandIKToWeapon()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x14754FC", Offset = "0x14754FC", VA = "0x14754FC")]
	public IKAgent()
	{
	}
}
[Token(Token = "0x2000255")]
public class InterruptAgent : WAgent
{
	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isCanInterrupt;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InterruptData[] interruptDatas;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InterruptDefine mInterruptDefine;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<List<HurtDefine>, int> HurtDefineListTointerruptedId;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, InterruptData> interruptedIdToInterruptData;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, GameObject> interruptedIdSignObjectHash;

	[Token(Token = "0x17000173")]
	public bool IsInterrupt
	{
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x147B15C", Offset = "0x147B15C", VA = "0x147B15C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x147A720", Offset = "0x147A720", VA = "0x147A720", Slot = "4")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x147A74C", Offset = "0x147A74C", VA = "0x147A74C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x147AA90", Offset = "0x147AA90", VA = "0x147AA90")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x147B164", Offset = "0x147B164", VA = "0x147B164")]
	public bool GetCanBodyPartInterrupt(HurtDefine hurtDefine)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x147B1C8", Offset = "0x147B1C8", VA = "0x147B1C8")]
	public bool GetBodyPartHasInterrupt(HurtDefine hurtDefine)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x147B204", Offset = "0x147B204", VA = "0x147B204")]
	public int GetInterrtptIDByHurtDefine(HurtDefine hurtDefine)
	{
		return default(int);
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x147B1A0", Offset = "0x147B1A0", VA = "0x147B1A0")]
	public InterruptData GetInterrtptDataByHurtDefine(HurtDefine hurtDefine)
	{
		return null;
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x147B374", Offset = "0x147B374", VA = "0x147B374")]
	public InterruptData GetInterrtptDataByID(int interrtupID)
	{
		return null;
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x147B3EC", Offset = "0x147B3EC", VA = "0x147B3EC")]
	public void Damage(int _interruptedId, int atk, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x147B5B4", Offset = "0x147B5B4", VA = "0x147B5B4")]
	public void SetInterruptStatus(int _interruptedId, e_InterruptState _statue, [Optional] Vector3 point, [Optional] Vector3 dir, float force = 0f)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x147B5D0", Offset = "0x147B5D0", VA = "0x147B5D0")]
	public void SendS2CInterruptNotify(int _interruptedId, e_InterruptState _interruptedState, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x147A8EC", Offset = "0x147A8EC", VA = "0x147A8EC")]
	public void HandleS2CInterruptNotify(int _interruptedId, int _interruptedState, [Optional] Vector3 point, [Optional] Vector3 dir, float force = 0f)
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x147B90C", Offset = "0x147B90C", VA = "0x147B90C")]
	public void ToActive(int _interruptedId)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x147B7D8", Offset = "0x147B7D8", VA = "0x147B7D8")]
	public void ToInterrupt(int _interruptedId, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x147B6B8", Offset = "0x147B6B8", VA = "0x147B6B8")]
	public void ToRecover(int _interruptedId)
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x147B938", Offset = "0x147B938", VA = "0x147B938")]
	private void DestroyAllInterruptedSignEffect()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x147BADC", Offset = "0x147BADC", VA = "0x147BADC")]
	public InterruptAgent()
	{
	}
}
[Token(Token = "0x2000256")]
public enum e_InterruptState
{
	[Token(Token = "0x4000F2D")]
	Default,
	[Token(Token = "0x4000F2E")]
	Active,
	[Token(Token = "0x4000F2F")]
	interrupted
}
[Serializable]
[Token(Token = "0x2000257")]
public class InterruptData
{
	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int interruptedId;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public e_InterruptState state;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int interruptHP;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<HurtDefine> hurtDefineList;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExploderConfig exploderConfig;

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x147B154", Offset = "0x147B154", VA = "0x147B154")]
	public InterruptData()
	{
	}
}
[Token(Token = "0x2000258")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD3548", Offset = "0xFD3548")]
public class InterruptDefine : MonoBehaviour
{
	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeOutTime;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DeactivateOptions deactivateOptions;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FadeoutOptions FadeoutOptions;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ReorderableAttribute", RVA = "0xFD87F0", Offset = "0xFD87F0")]
	public List<InterruptData> defines;

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x147AE80", Offset = "0x147AE80", VA = "0x147AE80")]
	public void Init()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x147B910", Offset = "0x147B910", VA = "0x147B910")]
	public void Exploder(ExploderConfig exploderConfig, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x147BBC0", Offset = "0x147BBC0", VA = "0x147BBC0")]
	public InterruptDefine()
	{
	}
}
[Token(Token = "0x2000259")]
public class InterruptManager : MonoBehaviour
{
	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x147BBDC", Offset = "0x147BBDC", VA = "0x147BBDC")]
	public static void HandleS2CMonsterInterruptStateNotify(int _unitId, int _interrtuptId, int _interrtuptState, [Optional] Vector3 point, [Optional] Vector3 dir, float force = 0f)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x147BD38", Offset = "0x147BD38", VA = "0x147BD38")]
	public InterruptManager()
	{
	}
}
[Token(Token = "0x200025A")]
public class MoveAgent : WAgent
{
	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x14C21CC", Offset = "0x14C21CC", VA = "0x14C21CC", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x14C21D4", Offset = "0x14C21D4", VA = "0x14C21D4")]
	public void Update(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x14C21D8", Offset = "0x14C21D8", VA = "0x14C21D8")]
	public void FixedUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x14C21DC", Offset = "0x14C21DC", VA = "0x14C21DC")]
	public MoveAgent()
	{
	}
}
[Token(Token = "0x200025B")]
public enum NumericType
{
	[Token(Token = "0x4000F3B")]
	FieldBase = 100,
	[Token(Token = "0x4000F3C")]
	Max = 100000,
	[Token(Token = "0x4000F3D")]
	Lv = 1000,
	[Token(Token = "0x4000F3E")]
	Hp = 1001,
	[Token(Token = "0x4000F3F")]
	HpBase = 100100,
	[Token(Token = "0x4000F40")]
	MaxHp = 1002,
	[Token(Token = "0x4000F41")]
	MaxHpBase = 100200,
	[Token(Token = "0x4000F42")]
	Atk = 1003,
	[Token(Token = "0x4000F43")]
	AtkBase = 100300,
	[Token(Token = "0x4000F44")]
	Exp = 1004,
	[Token(Token = "0x4000F45")]
	ExpBase = 100400,
	[Token(Token = "0x4000F46")]
	MaxBulletCount = 1005,
	[Token(Token = "0x4000F47")]
	MaxBulletCountBase = 100500,
	[Token(Token = "0x4000F48")]
	MaxMagazineCount = 1006,
	[Token(Token = "0x4000F49")]
	MaxMagazineCountBase = 100600,
	[Token(Token = "0x4000F4A")]
	ExpDrop = 1007,
	[Token(Token = "0x4000F4B")]
	ExpDropBase = 100700
}
[Token(Token = "0x200025C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFD35AC", Offset = "0xFD35AC")]
public class NumericAgent : WAgent
{
	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected WUnit owner;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected readonly Dictionary<int, int> numericDic;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Action<NumericType> OnChange;

	[Token(Token = "0x17000174")]
	public int Item
	{
		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x149ABC0", Offset = "0x149ABC0", VA = "0x149ABC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x149AAE8", Offset = "0x149AAE8", VA = "0x149AAE8")]
		set
		{
		}
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x149A848", Offset = "0x149A848", VA = "0x149A848", Slot = "5")]
	public virtual void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x149A850", Offset = "0x149A850", VA = "0x149A850")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x149A854", Offset = "0x149A854", VA = "0x149A854")]
	public int GetAsInt(NumericType numericType)
	{
		return default(int);
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x149A858", Offset = "0x149A858", VA = "0x149A858")]
	public int GetAsInt(int numericType)
	{
		return default(int);
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x149AA84", Offset = "0x149AA84", VA = "0x149AA84")]
	public float GetAsFloat(NumericType numericType)
	{
		return default(float);
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x149AAB4", Offset = "0x149AAB4", VA = "0x149AAB4")]
	public float GetAsFloat(int numericType)
	{
		return default(float);
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x149AAE4", Offset = "0x149AAE4", VA = "0x149AAE4")]
	public void Set(NumericType nt, int value)
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x149ABAC", Offset = "0x149ABAC", VA = "0x149ABAC")]
	public void Set(NumericType nt, float value)
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x149ABF0", Offset = "0x149ABF0", VA = "0x149ABF0")]
	public bool CheckKey(int key)
	{
		return default(bool);
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x149AC68", Offset = "0x149AC68", VA = "0x149AC68")]
	private int GetByKey(NumericType key)
	{
		return default(int);
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x149A85C", Offset = "0x149A85C", VA = "0x149A85C")]
	private int GetByKey(int key)
	{
		return default(int);
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x149ABC4", Offset = "0x149ABC4", VA = "0x149ABC4")]
	protected void Update(NumericType numericType)
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x149AC6C", Offset = "0x149AC6C", VA = "0x149AC6C")]
	protected void UpdateLogic(NumericType numericType)
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x149AE58", Offset = "0x149AE58", VA = "0x149AE58")]
	public NumericAgent()
	{
	}
}
[Token(Token = "0x200025D")]
public class MonsterNumericAgent : NumericAgent
{
	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isSyncHp;

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x14BAE28", Offset = "0x14BAE28", VA = "0x14BAE28", Slot = "5")]
	public override void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x14BB050", Offset = "0x14BB050", VA = "0x14BB050")]
	public void SetData(MonsterLevelData levelData)
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x14BB17C", Offset = "0x14BB17C", VA = "0x14BB17C")]
	public void OnServerNumericChange(NumericType numericType)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x14BB234", Offset = "0x14BB234", VA = "0x14BB234")]
	public MonsterNumericAgent()
	{
	}
}
[Token(Token = "0x200025E")]
public class PlayerNumericAgent : NumericAgent
{
	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerLevelData data;

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x13A36BC", Offset = "0x13A36BC", VA = "0x13A36BC", Slot = "5")]
	public override void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x13A38B4", Offset = "0x13A38B4", VA = "0x13A38B4")]
	public void SetData(PlayerLevelData levelData, int currentExp)
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x13A39C8", Offset = "0x13A39C8", VA = "0x13A39C8")]
	public void UpdateData(PlayerLevelData levelData, int currentExp)
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x13A3B28", Offset = "0x13A3B28", VA = "0x13A3B28")]
	public void OnServerNumericChange(NumericType numericType)
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x13A3F24", Offset = "0x13A3F24", VA = "0x13A3F24")]
	public PlayerNumericAgent()
	{
	}
}
[Token(Token = "0x200025F")]
public class WeaponNumericAgent : NumericAgent
{
	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x15AE3A8", Offset = "0x15AE3A8", VA = "0x15AE3A8", Slot = "5")]
	public override void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x15AE4DC", Offset = "0x15AE4DC", VA = "0x15AE4DC")]
	public void SetData(WeaponLevelData levelData)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x15AE5DC", Offset = "0x15AE5DC", VA = "0x15AE5DC")]
	public void UpdateData(WeaponLevelData levelData)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x15AE6DC", Offset = "0x15AE6DC", VA = "0x15AE6DC")]
	public WeaponNumericAgent()
	{
	}
}
[Token(Token = "0x2000260")]
public class PickupDropItemAgent : WAgent
{
	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RaycastHit hitInfo;

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x13A082C", Offset = "0x13A082C", VA = "0x13A082C", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x13A0834", Offset = "0x13A0834", VA = "0x13A0834")]
	public void RegisterInput()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x13A08FC", Offset = "0x13A08FC", VA = "0x13A08FC")]
	public void UnRegisterInput()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x13A09BC", Offset = "0x13A09BC", VA = "0x13A09BC")]
	private void OnRightWeaponPressDown()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x13A0B64", Offset = "0x13A0B64", VA = "0x13A0B64")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x13A0DA4", Offset = "0x13A0DA4", VA = "0x13A0DA4")]
	public PickupDropItemAgent()
	{
	}
}
[Token(Token = "0x2000261")]
public class StateAgent : WAgent
{
	[Token(Token = "0x200051A")]
	public enum STATE
	{
		[Token(Token = "0x4001D52")]
		NONE,
		[Token(Token = "0x4001D53")]
		NORMAL,
		[Token(Token = "0x4001D54")]
		DIE,
		[Token(Token = "0x4001D55")]
		HURT
	}

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnitBaseState activeState;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private STATE activeStateType;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<STATE, UnitBaseState> stateList;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private STATE preStateType;

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x15C6B80", Offset = "0x15C6B80", VA = "0x15C6B80")]
	public STATE STPreStateType()
	{
		return default(STATE);
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x15C6B88", Offset = "0x15C6B88", VA = "0x15C6B88", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x15C6D8C", Offset = "0x15C6D8C", VA = "0x15C6D8C")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x15C6DA4", Offset = "0x15C6DA4", VA = "0x15C6DA4")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x15C6DBC", Offset = "0x15C6DBC", VA = "0x15C6DBC")]
	private void DoStateExit()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x15C6DFC", Offset = "0x15C6DFC", VA = "0x15C6DFC")]
	private void DoInit()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x15C6C88", Offset = "0x15C6C88", VA = "0x15C6C88")]
	private void Register(STATE type, UnitBaseState st)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x15C6E14", Offset = "0x15C6E14", VA = "0x15C6E14")]
	private void UnRegister(STATE type)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x15C6DE4", Offset = "0x15C6DE4", VA = "0x15C6DE4")]
	public STATE GetStateType()
	{
		return default(STATE);
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x15C6F0C", Offset = "0x15C6F0C", VA = "0x15C6F0C")]
	private UnitBaseState GetState()
	{
		return null;
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x15C6F14", Offset = "0x15C6F14", VA = "0x15C6F14")]
	private UnitBaseState GetStateByType(STATE type)
	{
		return null;
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x15C6F98", Offset = "0x15C6F98", VA = "0x15C6F98")]
	private void SetActiveState(STATE nextType)
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x15C6EA4", Offset = "0x15C6EA4", VA = "0x15C6EA4")]
	private bool IsHasState(STATE nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x15C6D20", Offset = "0x15C6D20", VA = "0x15C6D20")]
	public void ChangeUnitState(STATE _nextState)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x15C7028", Offset = "0x15C7028", VA = "0x15C7028")]
	public StateAgent()
	{
	}
}
[Token(Token = "0x2000262")]
public class TransformSyncAgent : WAgent
{
	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsEnableSync;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ServerPlayerNetSyncController syncController;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsSyncLocal;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform LocalOffsetTrn;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 LocalOffset;

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x1464CEC", Offset = "0x1464CEC", VA = "0x1464CEC", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x1464CF4", Offset = "0x1464CF4", VA = "0x1464CF4")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x1464D64", Offset = "0x1464D64", VA = "0x1464D64")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x1464D68", Offset = "0x1464D68", VA = "0x1464D68")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x1464D78", Offset = "0x1464D78", VA = "0x1464D78")]
	private void PlayerInfo()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x146566C", Offset = "0x146566C", VA = "0x146566C")]
	public void SetIsEnableSync(bool _IsEnableSync)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x1465678", Offset = "0x1465678", VA = "0x1465678")]
	public TransformSyncAgent()
	{
	}
}
[Token(Token = "0x2000263")]
public interface WAgent
{
	[Token(Token = "0x6001117")]
	void Init(WUnit owner);
}
[Token(Token = "0x2000264")]
public class WeaponAgent : WAgent
{
	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4000F5F")]
	private const int WEAPON_ID_RIGHT = 0;

	[Token(Token = "0x4000F60")]
	private const int WEAPON_ID_LEFT = 1;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8830", Offset = "0xFD8830")]
	private GameObject <weaponObject_right>k__BackingField;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8840", Offset = "0xFD8840")]
	private GameObject <weaponObject_left>k__BackingField;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8850", Offset = "0xFD8850")]
	private e_weapon_group <weaponGroup>k__BackingField;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool _isVisible;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Weapon weapon_right;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Weapon weapon_left;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isFireEnable;

	[Token(Token = "0x17000175")]
	public GameObject weaponObject_right
	{
		[Token(Token = "0x6001118")]
		[Address(RVA = "0x15A9ED8", Offset = "0x15A9ED8", VA = "0x15A9ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE180", Offset = "0xFDE180")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001119")]
		[Address(RVA = "0x15A9EE0", Offset = "0x15A9EE0", VA = "0x15A9EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE190", Offset = "0xFDE190")]
		private set
		{
		}
	}

	[Token(Token = "0x17000176")]
	public GameObject weaponObject_left
	{
		[Token(Token = "0x600111A")]
		[Address(RVA = "0x15A9EE8", Offset = "0x15A9EE8", VA = "0x15A9EE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE1A0", Offset = "0xFDE1A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600111B")]
		[Address(RVA = "0x15A9EF0", Offset = "0x15A9EF0", VA = "0x15A9EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE1B0", Offset = "0xFDE1B0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public e_weapon_group weaponGroup
	{
		[Token(Token = "0x600111E")]
		[Address(RVA = "0x15AA1F0", Offset = "0x15AA1F0", VA = "0x15AA1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE1C0", Offset = "0xFDE1C0")]
		get
		{
			return default(e_weapon_group);
		}
		[Token(Token = "0x600111F")]
		[Address(RVA = "0x15AA1F8", Offset = "0x15AA1F8", VA = "0x15AA1F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE1D0", Offset = "0xFDE1D0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public virtual bool IsVisible
	{
		[Token(Token = "0x6001122")]
		[Address(RVA = "0x15AA2FC", Offset = "0x15AA2FC", VA = "0x15AA2FC", Slot = "6")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001121")]
		[Address(RVA = "0x15AA208", Offset = "0x15AA208", VA = "0x15AA208", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public Vector3 Position_right
	{
		[Token(Token = "0x6001123")]
		[Address(RVA = "0x15AA304", Offset = "0x15AA304", VA = "0x15AA304")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001124")]
		[Address(RVA = "0x15AA3C8", Offset = "0x15AA3C8", VA = "0x15AA3C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public Quaternion Rotation_right
	{
		[Token(Token = "0x6001125")]
		[Address(RVA = "0x15AA498", Offset = "0x15AA498", VA = "0x15AA498")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6001126")]
		[Address(RVA = "0x15AA55C", Offset = "0x15AA55C", VA = "0x15AA55C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public Vector3 Forward_right
	{
		[Token(Token = "0x6001127")]
		[Address(RVA = "0x15AA634", Offset = "0x15AA634", VA = "0x15AA634")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001128")]
		[Address(RVA = "0x15AA6F8", Offset = "0x15AA6F8", VA = "0x15AA6F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public e_weapon_type weaponType_right
	{
		[Token(Token = "0x6001129")]
		[Address(RVA = "0x15AA7C8", Offset = "0x15AA7C8", VA = "0x15AA7C8")]
		get
		{
			return default(e_weapon_type);
		}
	}

	[Token(Token = "0x1700017D")]
	public Vector3 Position_left
	{
		[Token(Token = "0x600112A")]
		[Address(RVA = "0x15AA858", Offset = "0x15AA858", VA = "0x15AA858")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600112B")]
		[Address(RVA = "0x15AA91C", Offset = "0x15AA91C", VA = "0x15AA91C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public Quaternion Rotation_left
	{
		[Token(Token = "0x600112C")]
		[Address(RVA = "0x15AA9EC", Offset = "0x15AA9EC", VA = "0x15AA9EC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600112D")]
		[Address(RVA = "0x15AAAB0", Offset = "0x15AAAB0", VA = "0x15AAAB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public Vector3 Forward_left
	{
		[Token(Token = "0x600112E")]
		[Address(RVA = "0x15AAB88", Offset = "0x15AAB88", VA = "0x15AAB88")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600112F")]
		[Address(RVA = "0x15AAC4C", Offset = "0x15AAC4C", VA = "0x15AAC4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000180")]
	public e_weapon_type weaponType_left
	{
		[Token(Token = "0x6001130")]
		[Address(RVA = "0x15AAD1C", Offset = "0x15AAD1C", VA = "0x15AAD1C")]
		get
		{
			return default(e_weapon_type);
		}
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x15A9EF8", Offset = "0x15A9EF8", VA = "0x15A9EF8")]
	public void SetWeaponObject_Right(GameObject rightObject, string rightName, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x15AA074", Offset = "0x15AA074", VA = "0x15AA074")]
	public void SetWeaponObject_Left(GameObject leftObject, string leftName, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x15AA200", Offset = "0x15AA200", VA = "0x15AA200")]
	public void SetWeaponGroup(e_weapon_group _weaponGroup)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x15AADAC", Offset = "0x15AADAC", VA = "0x15AADAC")]
	public void RegisterInput()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x15AAF54", Offset = "0x15AAF54", VA = "0x15AAF54")]
	public void UnRegisterInput()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x15AB0F4", Offset = "0x15AB0F4", VA = "0x15AB0F4", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x15A6284", Offset = "0x15A6284", VA = "0x15A6284")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x15A5E94", Offset = "0x15A5E94", VA = "0x15A5E94")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x15A682C", Offset = "0x15A682C", VA = "0x15A682C")]
	public void SetFireEnable(bool flag)
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x15AB100", Offset = "0x15AB100", VA = "0x15AB100")]
	public void SetAimLineStatus(bool _status)
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x15AB1E4", Offset = "0x15AB1E4", VA = "0x15AB1E4")]
	public void SetShootLightStatus(bool _status)
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x15AB2B0", Offset = "0x15AB2B0", VA = "0x15AB2B0")]
	public void SetBulletInfiniteState(bool _status)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x15AB0FC", Offset = "0x15AB0FC", VA = "0x15AB0FC")]
	public void DropWeaponUpdate()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x15AB3C0", Offset = "0x15AB3C0", VA = "0x15AB3C0")]
	public void WeaponReset()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x15AB57C", Offset = "0x15AB57C", VA = "0x15AB57C")]
	public void SetDropWeaponAddBullet()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x15AB67C", Offset = "0x15AB67C", VA = "0x15AB67C")]
	private void OnRightWeaponPressDown()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x15AB71C", Offset = "0x15AB71C", VA = "0x15AB71C")]
	private void OnRightWeaponPressUp()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x15AB7BC", Offset = "0x15AB7BC", VA = "0x15AB7BC")]
	private void OnLeftWeaponPressDown()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x15AB85C", Offset = "0x15AB85C", VA = "0x15AB85C")]
	private void OnLeftWeaponPressUp()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x15AB8FC", Offset = "0x15AB8FC", VA = "0x15AB8FC")]
	public void SetAllAniCloseObjActive(bool isActive)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x15AB9E0", Offset = "0x15AB9E0", VA = "0x15AB9E0")]
	public void SyncCreateBullte(int id, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x15ABEDC", Offset = "0x15ABEDC", VA = "0x15ABEDC")]
	public void SyncCreateEffectBullte(int id, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x15AC1DC", Offset = "0x15AC1DC", VA = "0x15AC1DC")]
	public void SyncReload(int id, bool isNeedAni)
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x15AC488", Offset = "0x15AC488", VA = "0x15AC488")]
	public void SyncReloadMagazine()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x15A5C5C", Offset = "0x15A5C5C", VA = "0x15A5C5C")]
	public WeaponAgent()
	{
	}
}
[Token(Token = "0x2000265")]
public interface IDeathDefine
{
	[Token(Token = "0x6001147")]
	void TriggerDeathDefine(Action endAction);
}
[Token(Token = "0x2000266")]
public class NoHurtAgent : WAgent
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x1497FC0", Offset = "0x1497FC0", VA = "0x1497FC0", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x1497FC8", Offset = "0x1497FC8", VA = "0x1497FC8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x1497FE4", Offset = "0x1497FE4", VA = "0x1497FE4")]
	public void Hurt()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x1498000", Offset = "0x1498000", VA = "0x1498000")]
	public void NoHurt()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x1498020", Offset = "0x1498020", VA = "0x1498020")]
	public NoHurtAgent()
	{
	}
}
[Token(Token = "0x2000267")]
public class UDieState : UnitBaseState
{
	[Token(Token = "0x600114D")]
	[Address(RVA = "0x1466690", Offset = "0x1466690", VA = "0x1466690")]
	public UDieState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x14666E4", Offset = "0x14666E4", VA = "0x14666E4", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x14666E8", Offset = "0x14666E8", VA = "0x14666E8", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x14666EC", Offset = "0x14666EC", VA = "0x14666EC", Slot = "6")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x14666F0", Offset = "0x14666F0", VA = "0x14666F0", Slot = "7")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x2000268")]
public class UHurtState : UnitBaseState
{
	[Token(Token = "0x6001152")]
	[Address(RVA = "0x14666F4", Offset = "0x14666F4", VA = "0x14666F4")]
	public UHurtState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x14666F8", Offset = "0x14666F8", VA = "0x14666F8", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x14666FC", Offset = "0x14666FC", VA = "0x14666FC", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x1466700", Offset = "0x1466700", VA = "0x1466700", Slot = "6")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x1466704", Offset = "0x1466704", VA = "0x1466704", Slot = "7")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x2000269")]
public class UNormalState : UnitBaseState
{
	[Token(Token = "0x6001157")]
	[Address(RVA = "0x1467CE0", Offset = "0x1467CE0", VA = "0x1467CE0")]
	public UNormalState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x1467CE4", Offset = "0x1467CE4", VA = "0x1467CE4", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x1467CE8", Offset = "0x1467CE8", VA = "0x1467CE8", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x1467CEC", Offset = "0x1467CEC", VA = "0x1467CEC", Slot = "6")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x1467CF0", Offset = "0x1467CF0", VA = "0x1467CF0", Slot = "7")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x200026A")]
public abstract class UnitBaseState
{
	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected StateAgent stateOwner;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected WUnit owner;

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x1466694", Offset = "0x1466694", VA = "0x1466694")]
	public UnitBaseState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x600115D")]
	public abstract void DoInit();

	[Token(Token = "0x600115E")]
	public abstract void DoUpdate(float deltaTime, int millisDeltaTime);

	[Token(Token = "0x600115F")]
	public abstract void DoLateUpdate();

	[Token(Token = "0x6001160")]
	public abstract void DoExit();
}
[Token(Token = "0x200026B")]
public class WUnit
{
	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject mGameObject;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject mModelObject;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8860", Offset = "0xFD8860")]
	private UnitConfigMono <playerConfigMono>k__BackingField;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8870", Offset = "0xFD8870")]
	private ComponentCacheTools <componentCacheTools>k__BackingField;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DataAgent dataAgent;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationAgent animatonAgent;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BodyPartAgent bodyPartAgent;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AIAgent aiAgent;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WeaponAgent weaponAgent;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IKAgent ikAgent;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TransformSyncAgent transformSyncAgent;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public InterruptAgent InterruptAgent;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public NumericAgent characterNumericAgent;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NumericAgent weaponNumericAgent;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BuffAgent buffAgent;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PickupDropItemAgent pickupDropItemAgent;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NoHurtAgent noHurtAgent;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SimpleSkillAgent simpleSkillAgent;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool _isVisible;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	protected bool mIsDestory;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8880", Offset = "0xFD8880")]
	private bool <isLocalPlayer>k__BackingField;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8890", Offset = "0xFD8890")]
	private bool <isLiveing>k__BackingField;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected bool mIsDie;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<WUnit> OnDeadCB;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action<WUnit> OnReviveCB;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int IsLastUpdatePosCount;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int id;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private e_group_type groupId;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private e_type_role _roleType;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool IsNoHurt;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ReactiveProperty<int> CurrentRoomID;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool joinStatus;

	[Token(Token = "0x17000181")]
	public GameObject gameObject
	{
		[Token(Token = "0x6001161")]
		[Address(RVA = "0x15A4CA8", Offset = "0x15A4CA8", VA = "0x15A4CA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000182")]
	public GameObject modelObject
	{
		[Token(Token = "0x6001162")]
		[Address(RVA = "0x15A4CB0", Offset = "0x15A4CB0", VA = "0x15A4CB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001163")]
		[Address(RVA = "0x15A4CB8", Offset = "0x15A4CB8", VA = "0x15A4CB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public UnitConfigMono playerConfigMono
	{
		[Token(Token = "0x6001164")]
		[Address(RVA = "0x15A4CC0", Offset = "0x15A4CC0", VA = "0x15A4CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE1E0", Offset = "0xFDE1E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001165")]
		[Address(RVA = "0x15A4CC8", Offset = "0x15A4CC8", VA = "0x15A4CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE1F0", Offset = "0xFDE1F0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public ComponentCacheTools componentCacheTools
	{
		[Token(Token = "0x6001166")]
		[Address(RVA = "0x15A4CD0", Offset = "0x15A4CD0", VA = "0x15A4CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE200", Offset = "0xFDE200")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001167")]
		[Address(RVA = "0x15A4CD8", Offset = "0x15A4CD8", VA = "0x15A4CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE210", Offset = "0xFDE210")]
		private set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public string name
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0x15A4CE0", Offset = "0x15A4CE0", VA = "0x15A4CE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000186")]
	public Vector3 Position
	{
		[Token(Token = "0x6001169")]
		[Address(RVA = "0x15A4D80", Offset = "0x15A4D80", VA = "0x15A4D80")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600116A")]
		[Address(RVA = "0x15A4E44", Offset = "0x15A4E44", VA = "0x15A4E44")]
		set
		{
		}
	}

	[Token(Token = "0x17000187")]
	public Quaternion Rotation
	{
		[Token(Token = "0x600116B")]
		[Address(RVA = "0x15A4F14", Offset = "0x15A4F14", VA = "0x15A4F14")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600116C")]
		[Address(RVA = "0x15A4FD8", Offset = "0x15A4FD8", VA = "0x15A4FD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public Vector3 Forward
	{
		[Token(Token = "0x600116D")]
		[Address(RVA = "0x15A50B0", Offset = "0x15A50B0", VA = "0x15A50B0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600116E")]
		[Address(RVA = "0x15A5174", Offset = "0x15A5174", VA = "0x15A5174")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public virtual bool IsVisible
	{
		[Token(Token = "0x6001170")]
		[Address(RVA = "0x15A530C", Offset = "0x15A530C", VA = "0x15A530C", Slot = "5")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600116F")]
		[Address(RVA = "0x15A5244", Offset = "0x15A5244", VA = "0x15A5244", Slot = "4")]
		set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public bool isDestory
	{
		[Token(Token = "0x6001171")]
		[Address(RVA = "0x15A5314", Offset = "0x15A5314", VA = "0x15A5314")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018B")]
	public bool isLocalPlayer
	{
		[Token(Token = "0x6001172")]
		[Address(RVA = "0x15A531C", Offset = "0x15A531C", VA = "0x15A531C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE220", Offset = "0xFDE220")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001173")]
		[Address(RVA = "0x15A5324", Offset = "0x15A5324", VA = "0x15A5324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE230", Offset = "0xFDE230")]
		private set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public bool isLiveing
	{
		[Token(Token = "0x6001174")]
		[Address(RVA = "0x15A5330", Offset = "0x15A5330", VA = "0x15A5330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE240", Offset = "0xFDE240")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001175")]
		[Address(RVA = "0x15A5338", Offset = "0x15A5338", VA = "0x15A5338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE250", Offset = "0xFDE250")]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public bool IsDie
	{
		[Token(Token = "0x6001176")]
		[Address(RVA = "0x15A5344", Offset = "0x15A5344", VA = "0x15A5344")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018E")]
	public int Id
	{
		[Token(Token = "0x600117A")]
		[Address(RVA = "0x15A548C", Offset = "0x15A548C", VA = "0x15A548C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018F")]
	public e_group_type GroupId
	{
		[Token(Token = "0x600117B")]
		[Address(RVA = "0x15A5494", Offset = "0x15A5494", VA = "0x15A5494")]
		get
		{
			return default(e_group_type);
		}
	}

	[Token(Token = "0x17000190")]
	public e_type_role roleType
	{
		[Token(Token = "0x600117C")]
		[Address(RVA = "0x15A549C", Offset = "0x15A549C", VA = "0x15A549C")]
		get
		{
			return default(e_type_role);
		}
	}

	[Token(Token = "0x17000191")]
	public bool JoinStatus
	{
		[Token(Token = "0x600118A")]
		[Address(RVA = "0x15A674C", Offset = "0x15A674C", VA = "0x15A674C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x15A534C", Offset = "0x15A534C", VA = "0x15A534C")]
	public void SetDie(bool dead)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x15A5378", Offset = "0x15A5378", VA = "0x15A5378")]
	protected void OnDead()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x15A5428", Offset = "0x15A5428", VA = "0x15A5428")]
	protected void OnRevive()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x15A54A4", Offset = "0x15A54A4", VA = "0x15A54A4")]
	public void SetCurrentRoomID(int roomId)
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x15A550C", Offset = "0x15A550C", VA = "0x15A550C")]
	public int GetCurrentRoomID()
	{
		return default(int);
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x15A555C", Offset = "0x15A555C", VA = "0x15A555C")]
	private WUnit(int _id, e_group_type _groupId)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x15A5604", Offset = "0x15A5604", VA = "0x15A5604")]
	public void ChangePlayerGroup(e_group_type _groupId)
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x15A56F8", Offset = "0x15A56F8", VA = "0x15A56F8")]
	public static WUnit CreatePlayerUnit(int _id, e_group_type _groupId)
	{
		return null;
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x15A5778", Offset = "0x15A5778", VA = "0x15A5778")]
	public static WUnit CreateNPCUnit(int _id, e_group_type _groupId)
	{
		return null;
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x15A57F8", Offset = "0x15A57F8", VA = "0x15A57F8")]
	public static WUnit CreateMonsterUnit(int _id)
	{
		return null;
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x15A586C", Offset = "0x15A586C", VA = "0x15A586C")]
	public void Init(UnitAttribute attribute)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x15A5C70", Offset = "0x15A5C70", VA = "0x15A5C70")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x15A61C8", Offset = "0x15A61C8", VA = "0x15A61C8", Slot = "6")]
	public virtual void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x15A6374", Offset = "0x15A6374", VA = "0x15A6374")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x15A6408", Offset = "0x15A6408", VA = "0x15A6408")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x15A641C", Offset = "0x15A641C", VA = "0x15A641C")]
	public void SetGameObject(GameObject obj, string name, bool _isVisible = true, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x15A6754", Offset = "0x15A6754", VA = "0x15A6754")]
	public void JoinGame()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x15A6948", Offset = "0x15A6948", VA = "0x15A6948")]
	public void JoinGame(bool _joinStatus)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x15A696C", Offset = "0x15A696C", VA = "0x15A696C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE260", Offset = "0xFDE260")]
	private void <Init>b__82_0(int i)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x15A6A3C", Offset = "0x15A6A3C", VA = "0x15A6A3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE270", Offset = "0xFDE270")]
	private void <Destroy>b__83_0()
	{
	}
}
[Token(Token = "0x200026C")]
[AttributeAttribute(Name = "ComponentCacheAttribute", RVA = "0xFD35E4", Offset = "0xFD35E4")]
public abstract class BaseWeaponHitEffect : MonoBehaviour
{
	[Token(Token = "0x600118F")]
	public abstract void HitEffect(WUnit unit, Vector3 _hitPos, Vector3 _hitNormal);

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x16147B0", Offset = "0x16147B0", VA = "0x16147B0")]
	protected BaseWeaponHitEffect()
	{
	}
}
[Token(Token = "0x200026D")]
public class WeaponMotion : MonoBehaviour
{
	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD88A0", Offset = "0xFD88A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD88A0", Offset = "0xFD88A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD88A0", Offset = "0xFD88A0")]
	public float PositionSpring2Stiffness;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8918", Offset = "0xFD8918")]
	public float PositionSpring2Damping;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected vp_Spring m_PositionSpring2;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 m_PositionSpring2DefaultRotation;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8930", Offset = "0xFD8930")]
	protected Vector3 RotationOffset;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8968", Offset = "0xFD8968")]
	public float RotationSpring2Stiffness;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8980", Offset = "0xFD8980")]
	public float RotationSpring2Damping;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected vp_Spring m_RotationSpring2;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3 m_RotationSpring2DefaultRotation;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8998", Offset = "0xFD8998")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8998", Offset = "0xFD8998")]
	public float PositionPivotSpringStiffness;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD89EC", Offset = "0xFD89EC")]
	public float PositionPivotSpringDamping;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Vector3 PositionPivot;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected vp_Spring m_PositionPivotSpring;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8A04", Offset = "0xFD8A04")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8A04", Offset = "0xFD8A04")]
	public float RotationSpringStiffness;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8A58", Offset = "0xFD8A58")]
	public float RotationSpringDamping;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected vp_Spring m_RotationSpring;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8A70", Offset = "0xFD8A70")]
	public Transform WeaponMotionPoint;

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x15AD8D4", Offset = "0x15AD8D4", VA = "0x15AD8D4", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x15ADAE4", Offset = "0x15ADAE4", VA = "0x15ADAE4", Slot = "5")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x15ADAF0", Offset = "0x15ADAF0", VA = "0x15ADAF0", Slot = "6")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x15ADBC0", Offset = "0x15ADBC0", VA = "0x15ADBC0", Slot = "7")]
	public virtual void AddForce2(Vector3 positional, Vector3 angular)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x15ADC34", Offset = "0x15ADC34", VA = "0x15ADC34", Slot = "8")]
	public virtual void ResetSprings(float positionReset, float rotationReset, float positionPauseTime = 0f, float rotationPauseTime = 0f)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x15ADD90", Offset = "0x15ADD90", VA = "0x15ADD90", Slot = "9")]
	protected virtual void SnapSprings()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x15ADEC8", Offset = "0x15ADEC8", VA = "0x15ADEC8", Slot = "10")]
	protected virtual void StopSprings()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x15ADF3C", Offset = "0x15ADF3C", VA = "0x15ADF3C", Slot = "11")]
	protected virtual void Refresh()
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x15AE2D8", Offset = "0x15AE2D8", VA = "0x15AE2D8")]
	public WeaponMotion()
	{
	}
}
[Token(Token = "0x200026E")]
public class vp_Spring
{
	[Token(Token = "0x200051B")]
	public enum UpdateMode
	{
		[Token(Token = "0x4001D57")]
		Position,
		[Token(Token = "0x4001D58")]
		PositionAdditiveLocal,
		[Token(Token = "0x4001D59")]
		PositionAdditiveGlobal,
		[Token(Token = "0x4001D5A")]
		PositionAdditiveSelf,
		[Token(Token = "0x4001D5B")]
		Rotation,
		[Token(Token = "0x4001D5C")]
		RotationAdditiveLocal,
		[Token(Token = "0x4001D5D")]
		RotationAdditiveGlobal,
		[Token(Token = "0x4001D5E")]
		Scale,
		[Token(Token = "0x4001D5F")]
		ScaleAdditiveLocal
	}

	[Token(Token = "0x200051C")]
	protected delegate void UpdateDelegate();

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected UpdateMode Mode;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected bool m_AutoUpdate;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected UpdateDelegate m_UpdateFunc;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 State;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected Vector3 m_Velocity;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 RestState;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Stiffness;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 Damping;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected float m_VelocityFadeInCap;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float m_VelocityFadeInEndTime;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float m_VelocityFadeInLength;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector3[] m_SoftForceFrame;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float MaxVelocity;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float MinVelocity;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 MaxState;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 MinState;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform m_Transform;

	[Token(Token = "0x17000192")]
	public Transform Transform
	{
		[Token(Token = "0x600119A")]
		[Address(RVA = "0x29F4CB0", Offset = "0x29F4CB0", VA = "0x29F4CB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600119B")]
		[Address(RVA = "0x29F4CB8", Offset = "0x29F4CB8", VA = "0x29F4CB8")]
		set
		{
		}
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x29F505C", Offset = "0x29F505C", VA = "0x29F505C")]
	public vp_Spring(Transform transform, UpdateMode mode, bool autoUpdate = true)
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x29F5244", Offset = "0x29F5244", VA = "0x29F5244")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x29F595C", Offset = "0x29F595C", VA = "0x29F595C")]
	private void Position()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x29F5984", Offset = "0x29F5984", VA = "0x29F5984")]
	private void Rotation()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x29F59AC", Offset = "0x29F59AC", VA = "0x29F59AC")]
	private void Scale()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x29F59D4", Offset = "0x29F59D4", VA = "0x29F59D4")]
	private void PositionAdditiveLocal()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x29F5AA0", Offset = "0x29F5AA0", VA = "0x29F5AA0")]
	private void PositionAdditiveGlobal()
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x29F5B6C", Offset = "0x29F5B6C", VA = "0x29F5B6C")]
	private void PositionAdditiveSelf()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x29F5B98", Offset = "0x29F5B98", VA = "0x29F5B98")]
	private void RotationAdditiveLocal()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x29F5C64", Offset = "0x29F5C64", VA = "0x29F5C64")]
	private void RotationAdditiveGlobal()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x29F5D30", Offset = "0x29F5D30", VA = "0x29F5D30")]
	private void ScaleAdditiveLocal()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x29F5DFC", Offset = "0x29F5DFC", VA = "0x29F5DFC")]
	private void None()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x29F4CE0", Offset = "0x29F4CE0", VA = "0x29F4CE0")]
	protected void RefreshUpdateMode()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x29F557C", Offset = "0x29F557C", VA = "0x29F557C")]
	protected void Calculate()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x29F54A0", Offset = "0x29F54A0", VA = "0x29F54A0")]
	private void AddForceInternal(Vector3 force)
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x29F5FE8", Offset = "0x29F5FE8", VA = "0x29F5FE8")]
	public void AddForce(Vector3 force)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x29F606C", Offset = "0x29F606C", VA = "0x29F606C")]
	public void AddSoftForce(Vector3 force, float frames)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x29F5E14", Offset = "0x29F5E14", VA = "0x29F5E14")]
	protected void Move()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x29F5F68", Offset = "0x29F5F68", VA = "0x29F5F68")]
	public void Reset()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x29F6264", Offset = "0x29F6264", VA = "0x29F6264")]
	public void Stop(bool includeSoftForce = false)
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x29F62F8", Offset = "0x29F62F8", VA = "0x29F62F8")]
	public void StopSoftForce()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x29F63BC", Offset = "0x29F63BC", VA = "0x29F63BC")]
	public void ForceVelocityFadeIn(float seconds)
	{
	}
}
[Token(Token = "0x200026F")]
public class ShieldHitEffects : BaseWeaponHitEffect
{
	[Token(Token = "0x200051D")]
	public enum dir
	{
		[Token(Token = "0x4001D61")]
		none,
		[Token(Token = "0x4001D62")]
		left,
		[Token(Token = "0x4001D63")]
		right,
		[Token(Token = "0x4001D64")]
		up,
		[Token(Token = "0x4001D65")]
		down
	}

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform centerPoint;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 rect;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float x_borderValue;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float y_borderValue;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject effect;

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x141345C", Offset = "0x141345C", VA = "0x141345C", Slot = "4")]
	public override void HitEffect(WUnit unit, Vector3 _hitPos, Vector3 _hitNormal)
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x141358C", Offset = "0x141358C", VA = "0x141358C")]
	public dir GetDir(Vector3 _hitPos)
	{
		return default(dir);
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x141377C", Offset = "0x141377C", VA = "0x141377C")]
	public ShieldHitEffects()
	{
	}
}
[Token(Token = "0x2000270")]
public class ShieldHitHaptics : BaseWeaponHitEffect
{
	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticsTools.VirtualPart VirtualPart;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8AA8", Offset = "0xFD8AA8")]
	public byte level;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int time;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FollowVRController followVRController;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float hapticPulseDuration;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve hapticPulseCurve;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ushort hapticPulseVlaue;

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x1413790", Offset = "0x1413790", VA = "0x1413790", Slot = "4")]
	public override void HitEffect(WUnit unit, Vector3 _hitPos, Vector3 _hitNormal)
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x1413924", Offset = "0x1413924", VA = "0x1413924")]
	public ShieldHitHaptics()
	{
	}
}
[Token(Token = "0x2000271")]
public abstract class Weapon : MonoBehaviour
{
	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8AC4", Offset = "0xFD8AC4")]
	private WUnit <Owner>k__BackingField;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WeaponAttribute attributeTable;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<WUnit> weaponFireAct;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<WUnit> WeaponInitAct;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8AD4", Offset = "0xFD8AD4")]
	private int <WeaponId>k__BackingField;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8AE4", Offset = "0xFD8AE4")]
	public e_weapon_type WeaponType;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsCheckBulletCount;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool IsCheckMagazin;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8B1C", Offset = "0xFD8B1C")]
	public Transform FirePoint;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float FireForwardOffset;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject AimLine;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8B54", Offset = "0xFD8B54")]
	public Light ShootLight;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int ShootLightCloseFrame;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool IsLocalReloadBullet;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool IsAutoReloadBullet;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8B8C", Offset = "0xFD8B8C")]
	public float DownReloadEndAngle;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8BC4", Offset = "0xFD8BC4")]
	public Transform LeftHandTarget;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform RightHandTarget;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8BFC", Offset = "0xFD8BFC")]
	public bool IsBelongToLocalPlayer;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[SerializeField]
	private bool IsUseRecoil;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected WeaponMotion mWeaponMotion;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool mIsRecoiling;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int mFirBulletNum;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float mNotFirTime;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8C44", Offset = "0xFD8C44")]
	[SerializeField]
	private int mBeginSpreadBulletMinNum;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8C90", Offset = "0xFD8C90")]
	[SerializeField]
	private int mBeginSpreadBulletMaxNum;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8CDC", Offset = "0xFD8CDC")]
	[SerializeField]
	private float mRecoilMinOffsetX;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8D28", Offset = "0xFD8D28")]
	[SerializeField]
	private float mRecoilMaxOffsetX;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8D74", Offset = "0xFD8D74")]
	[SerializeField]
	private float mRecoilAddMinOffsetY;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8DC0", Offset = "0xFD8DC0")]
	[SerializeField]
	private float mRecoilAddMaxOffsetY;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8E0C", Offset = "0xFD8E0C")]
	[SerializeField]
	private float mRecoilTotalMaxOffsetY;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float mCurTotalOffsetY;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float mCurSpreadBulletNum;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8E58", Offset = "0xFD8E58")]
	public Vector3 MotionPositionRecoil;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Vector3 MotionRotationRecoil;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float MotionRotationRecoilDeadZone;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8E90", Offset = "0xFD8E90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8E90", Offset = "0xFD8E90")]
	public float MotionPositionReset;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD8EE4", Offset = "0xFD8EE4")]
	public float MotionRotationReset;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float MotionPositionPause;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float MotionRotationPause;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8EFC", Offset = "0xFD8EFC")]
	public SwitchInfoData audioSwitch;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SwitchInfoData audioSwitch_local;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SwitchInfoData audioSwitch_other;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioEvent ShootAudio;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool ShootAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject ShootObject;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioEvent ShellAudio;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool ShellAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject ShellObject;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioEvent NoBulletAudio;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool NoBulletAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject NoBulletObject;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioEvent ReloadBulletAudio;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public bool ReloadBulletAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject ReloadObject;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioEvent ReloadMagazineAudio;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool ReloadMagazineAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject ReloadMagazineObject;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioEvent EmptyMagazineAudio;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public bool EmptyMagazineAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject EmptyMagazineObject;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioEvent Gun_TransitionAudio;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool Gun_TransitionAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8F34", Offset = "0xFD8F34")]
	public GameObject ChildNode;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Vector3 ChildRot;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool isShowShootLight;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool isFire;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float fireIntervalTimer;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8F6C", Offset = "0xFD8F6C")]
	private int <CurBulletCount>k__BackingField;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8F7C", Offset = "0xFD8F7C")]
	public int SingleShots;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD8FB4", Offset = "0xFD8FB4")]
	private int <CurrentMagazineValue>k__BackingField;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int ShootLightTimer;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float lastAngle;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8FC4", Offset = "0xFD8FC4")]
	public bool IsCheckObstacle;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float CheckObstacleTime;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Collider CheckObstacleCollider;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private RendererConfigMono rendererConfigMono;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private MaterialPropertyBlock prop;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int colorId;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int colorId2;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected bool isEnterObstacle;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float enterObstacleTimer;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public BaseUI banUI;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD8FFC", Offset = "0xFD8FFC")]
	public HapticsTools.VirtualPart hapticsVirtualPart;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD9034", Offset = "0xFD9034")]
	public byte hapticsLevel;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int hapticsTime;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9050", Offset = "0xFD9050")]
	public bool isNeedPlayAni;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Animator animator;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public string Ani_IdleState;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public string Ani_ReloadState;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public string Ani_FireState;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public float reloadTime;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public float reloadPreTime;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float gun_clip_destory_Time;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject[] AniObj_Close;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject gun_clip_obj;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected bool isReloading;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Coroutine reloadCoroutine;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private GameObject gun_clip_obj_exploed;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Coroutine reloadPreCoroutine;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9088", Offset = "0xFD9088")]
	public WeaponInfoUI infoUI;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD90C0", Offset = "0xFD90C0")]
	public FollowVRController followVRController;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public float hapticPulseDuration;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public AnimationCurve hapticPulseCurve;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public float hapticPulseVlaue;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD90F8", Offset = "0xFD90F8")]
	private ComponentCacheTools <cacheTools>k__BackingField;

	[Token(Token = "0x17000193")]
	public WUnit Owner
	{
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x15A6E0C", Offset = "0x15A6E0C", VA = "0x15A6E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE280", Offset = "0xFDE280")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x15A6E14", Offset = "0x15A6E14", VA = "0x15A6E14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE290", Offset = "0xFDE290")]
		private set
		{
		}
	}

	[Token(Token = "0x17000194")]
	public int WeaponId
	{
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x15A6E1C", Offset = "0x15A6E1C", VA = "0x15A6E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE2A0", Offset = "0xFDE2A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x15A6E24", Offset = "0x15A6E24", VA = "0x15A6E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE2B0", Offset = "0xFDE2B0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000195")]
	public string weaponName
	{
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x15A6E2C", Offset = "0x15A6E2C", VA = "0x15A6E2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000196")]
	public int Atk
	{
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x15A6E90", Offset = "0x15A6E90", VA = "0x15A6E90")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000197")]
	public int HeadPer
	{
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x15A6EB8", Offset = "0x15A6EB8", VA = "0x15A6EB8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000198")]
	public float fireInterval
	{
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x15A6ED0", Offset = "0x15A6ED0", VA = "0x15A6ED0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000199")]
	public int bulletForce
	{
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x15A6EF8", Offset = "0x15A6EF8", VA = "0x15A6EF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700019A")]
	public int MaxBulletCount
	{
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x15A6F10", Offset = "0x15A6F10", VA = "0x15A6F10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700019B")]
	public int MaximumMagazineValue
	{
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x15A6F38", Offset = "0x15A6F38", VA = "0x15A6F38")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700019C")]
	protected bool IsFire
	{
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x15A6F60", Offset = "0x15A6F60", VA = "0x15A6F60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x15A6F68", Offset = "0x15A6F68", VA = "0x15A6F68")]
		set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	[HideInInspector]
	public int CurBulletCount
	{
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x15A6F74", Offset = "0x15A6F74", VA = "0x15A6F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE2C0", Offset = "0xFDE2C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x15A6F7C", Offset = "0x15A6F7C", VA = "0x15A6F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE2D0", Offset = "0xFDE2D0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	[HideInInspector]
	public int CurrentMagazineValue
	{
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x15A6F84", Offset = "0x15A6F84", VA = "0x15A6F84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE2E0", Offset = "0xFDE2E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x15A6F8C", Offset = "0x15A6F8C", VA = "0x15A6F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE2F0", Offset = "0xFDE2F0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019F")]
	public bool IsReloading
	{
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x15A6F94", Offset = "0x15A6F94", VA = "0x15A6F94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A0")]
	public ComponentCacheTools cacheTools
	{
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x15A6F9C", Offset = "0x15A6F9C", VA = "0x15A6F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE300", Offset = "0xFDE300")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x15A6FA4", Offset = "0x15A6FA4", VA = "0x15A6FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE310", Offset = "0xFDE310")]
		private set
		{
		}
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x15A6FB4", Offset = "0x15A6FB4", VA = "0x15A6FB4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x15A7094", Offset = "0x15A7094", VA = "0x15A7094", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x15A7290", Offset = "0x15A7290", VA = "0x15A7290", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x15A7498", Offset = "0x15A7498", VA = "0x15A7498", Slot = "7")]
	protected virtual void OnCheckObstacleEnter(Collider c1, Collider c2)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x15A761C", Offset = "0x15A761C", VA = "0x15A761C", Slot = "8")]
	protected virtual void EnterObstacle()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x15A78CC", Offset = "0x15A78CC", VA = "0x15A78CC", Slot = "9")]
	protected virtual void ExitObstacle()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x15A7B6C", Offset = "0x15A7B6C", VA = "0x15A7B6C", Slot = "10")]
	public virtual void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x15A80BC", Offset = "0x15A80BC", VA = "0x15A80BC", Slot = "11")]
	public virtual void InitAudioSwitch()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x15A80C0", Offset = "0x15A80C0", VA = "0x15A80C0", Slot = "12")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x15A850C", Offset = "0x15A850C", VA = "0x15A850C", Slot = "13")]
	public virtual void PreFireLogic()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x15A8AC8", Offset = "0x15A8AC8", VA = "0x15A8AC8")]
	public void SyncFireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x15A8ACC", Offset = "0x15A8ACC", VA = "0x15A8ACC")]
	public void SyncReloadLogic(bool isNeedAni)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x15A8AE0", Offset = "0x15A8AE0", VA = "0x15A8AE0")]
	public void SyncFireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x15A87AC", Offset = "0x15A87AC", VA = "0x15A87AC")]
	protected void Fire(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x15A8FB0", Offset = "0x15A8FB0", VA = "0x15A8FB0", Slot = "14")]
	protected virtual void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x15A8FB4", Offset = "0x15A8FB4", VA = "0x15A8FB4", Slot = "15")]
	protected virtual void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x15A8FB8", Offset = "0x15A8FB8", VA = "0x15A8FB8", Slot = "16")]
	protected virtual Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x15A9090", Offset = "0x15A9090", VA = "0x15A9090", Slot = "17")]
	public virtual void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x15A90A4", Offset = "0x15A90A4", VA = "0x15A90A4", Slot = "18")]
	protected virtual bool CheckFireInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x15A90F4", Offset = "0x15A90F4", VA = "0x15A90F4", Slot = "19")]
	public virtual bool CheckBulletCount()
	{
		return default(bool);
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x15A8AF0", Offset = "0x15A8AF0", VA = "0x15A8AF0")]
	private void ReduceBulletCount()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x15A83F0", Offset = "0x15A83F0", VA = "0x15A83F0")]
	private void PreReloadBullet(bool isNeedAni)
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x15A9104", Offset = "0x15A9104", VA = "0x15A9104", Slot = "20")]
	public virtual void ReloadBullet(bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x15A955C", Offset = "0x15A955C", VA = "0x15A955C")]
	public void ReloadMagazine(int value)
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x15A9630", Offset = "0x15A9630", VA = "0x15A9630")]
	private float GetModifiedAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x15A9668", Offset = "0x15A9668", VA = "0x15A9668", Slot = "21")]
	public virtual bool CheckReloadAction()
	{
		return default(bool);
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x15A7F38", Offset = "0x15A7F38", VA = "0x15A7F38")]
	protected void InitShootLight()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x15A8B88", Offset = "0x15A8B88", VA = "0x15A8B88")]
	protected void EnableShootLight()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x15A849C", Offset = "0x15A849C", VA = "0x15A849C")]
	protected void UpdateShootLight()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x15A9774", Offset = "0x15A9774", VA = "0x15A9774")]
	protected bool IsLocalPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x15A9834", Offset = "0x15A9834", VA = "0x15A9834")]
	public void SetAimLineStatus(bool status)
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x15A98DC", Offset = "0x15A98DC", VA = "0x15A98DC")]
	public void SetShootLightStatus(bool status)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x15A7FD0", Offset = "0x15A7FD0", VA = "0x15A7FD0")]
	public void SetAniCloseObjActive(bool isActive)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x15A98E4", Offset = "0x15A98E4", VA = "0x15A98E4")]
	private int GetBeginSpreadNum()
	{
		return default(int);
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x15A98F4", Offset = "0x15A98F4", VA = "0x15A98F4")]
	private float GetOffsetX()
	{
		return default(float);
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x15A9900", Offset = "0x15A9900", VA = "0x15A9900")]
	private float GetOffsetY()
	{
		return default(float);
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x15A8C40", Offset = "0x15A8C40", VA = "0x15A8C40")]
	private void SetRecoilSpread()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x15A8398", Offset = "0x15A8398", VA = "0x15A8398")]
	private void CheckNotFirUpdate(float dt)
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x15A990C", Offset = "0x15A990C", VA = "0x15A990C")]
	private void ResetNoFirStatus()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x15A8C28", Offset = "0x15A8C28", VA = "0x15A8C28")]
	private bool CheckCanRecoilAngleOffset()
	{
		return default(bool);
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x15A8D18", Offset = "0x15A8D18", VA = "0x15A8D18")]
	protected void ApplyRecoil()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x15A999C", Offset = "0x15A999C", VA = "0x15A999C")]
	protected Weapon()
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x15A9B24", Offset = "0x15A9B24", VA = "0x15A9B24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE320", Offset = "0xFDE320")]
	private void <ReloadBullet>b__162_0()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x15A9C84", Offset = "0x15A9C84", VA = "0x15A9C84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE330", Offset = "0xFDE330")]
	private void <ReloadBullet>b__162_2()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x15A9D18", Offset = "0x15A9D18", VA = "0x15A9D18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE340", Offset = "0xFDE340")]
	private void <ReloadBullet>b__162_1()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x15A9E44", Offset = "0x15A9E44", VA = "0x15A9E44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE350", Offset = "0xFDE350")]
	private void <ReloadBullet>b__162_3()
	{
	}
}
[Token(Token = "0x2000272")]
public class Weapon_Gatling : Weapon
{
	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E44", Offset = "0xFD5E44")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon_Gatling <>4__this;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectDistance;

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x29EBEC4", Offset = "0x29EBEC4", VA = "0x29EBEC4")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x29EC188", Offset = "0x29EC188", VA = "0x29EC188")]
		internal void <SpawnEffectBullet>b__0(Bullet go)
		{
		}
	}

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9108", Offset = "0xFD9108")]
	public Transform ShellPoint;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD9140", Offset = "0xFD9140")]
	public float ScatterCoefficient;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject BulletPrefab;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject BulletParticlePrefab;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private GameObject BulletParticleObj;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private ParticleSystem BulletParticleSystem;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private List<Transform> addFirePointList;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9158", Offset = "0xFD9158")]
	public GameObject BulletEffectPrefab_Local;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9190", Offset = "0xFD9190")]
	public GameObject BulletEffectPrefab_Other;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD91C8", Offset = "0xFD91C8")]
	public float bulletEffectInterval;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public float moveSpeed;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public float bulletOffset;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public Vector2 randOffset;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float minShowDistance;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public float delayDestroy;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private float fireEffectCoolDown;

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x29EB520", Offset = "0x29EB520", VA = "0x29EB520", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x29EB61C", Offset = "0x29EB61C", VA = "0x29EB61C", Slot = "16")]
	protected override Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x29EB778", Offset = "0x29EB778", VA = "0x29EB778", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x29EB98C", Offset = "0x29EB98C", VA = "0x29EB98C", Slot = "15")]
	protected override void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x29EBC9C", Offset = "0x29EBC9C", VA = "0x29EBC9C")]
	private void SpawnEffectBullet(GameObject prefab, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x29EBECC", Offset = "0x29EBECC", VA = "0x29EBECC", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x29EC114", Offset = "0x29EC114", VA = "0x29EC114")]
	protected bool CheckFireEffectInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x29EC14C", Offset = "0x29EC14C", VA = "0x29EC14C", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x29EC180", Offset = "0x29EC180", VA = "0x29EC180")]
	public Weapon_Gatling()
	{
	}
}
[Token(Token = "0x2000273")]
public class Weapon_Magic : Weapon
{
	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject BulletPrefab;

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x29EC33C", Offset = "0x29EC33C", VA = "0x29EC33C", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x29EC528", Offset = "0x29EC528", VA = "0x29EC528", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x29EC538", Offset = "0x29EC538", VA = "0x29EC538")]
	public Weapon_Magic()
	{
	}
}
[Token(Token = "0x2000274")]
public class Weapon_PlaneScattering : Weapon
{
	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float fireRangeDistance;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public int bulletNumber;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject BulletPrefab;

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x29EC540", Offset = "0x29EC540", VA = "0x29EC540", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x29EC8FC", Offset = "0x29EC8FC", VA = "0x29EC8FC")]
	public Weapon_PlaneScattering()
	{
	}
}
[Token(Token = "0x2000275")]
public class Weapon_PlaneScattering2 : Weapon
{
	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float fireRangeDistance;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public int bulletNumber;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject BulletPrefab;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public List<Transform> ShootList;

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x29EC910", Offset = "0x29EC910", VA = "0x29EC910", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x29ECBB4", Offset = "0x29ECBB4", VA = "0x29ECBB4")]
	public Weapon_PlaneScattering2()
	{
	}
}
[Token(Token = "0x2000276")]
public class Weapon_Rifle : Weapon
{
	[Token(Token = "0x200051F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E54", Offset = "0xFD5E54")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon_Rifle <>4__this;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectDistance;

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x29ED1CC", Offset = "0x29ED1CC", VA = "0x29ED1CC")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x29ED4B4", Offset = "0x29ED4B4", VA = "0x29ED4B4")]
		internal void <FireEffectLogic>b__0(Bullet go)
		{
		}
	}

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9200", Offset = "0xFD9200")]
	public Transform ShellPoint;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD9238", Offset = "0xFD9238")]
	public float ScatterCoefficient;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject BulletPrefab;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject BulletParticlePrefab;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private GameObject BulletParticleObj;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private ParticleSystem BulletParticleSystem;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9250", Offset = "0xFD9250")]
	public GameObject BulletEffectPrefab_Local;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9288", Offset = "0xFD9288")]
	public GameObject BulletEffectPrefab_Other;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD92C0", Offset = "0xFD92C0")]
	public float bulletEffectInterval;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public float moveSpeed;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public float bulletOffset;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public Vector2 randOffset;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public float minShowDistance;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public float delayDestroy;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private float fireEffectCoolDown;

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x29ECBC8", Offset = "0x29ECBC8", VA = "0x29ECBC8", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x29ECBD4", Offset = "0x29ECBD4", VA = "0x29ECBD4", Slot = "16")]
	protected override Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x29ECD30", Offset = "0x29ECD30", VA = "0x29ECD30", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x29ECF28", Offset = "0x29ECF28", VA = "0x29ECF28", Slot = "15")]
	protected override void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x29ED1D4", Offset = "0x29ED1D4", VA = "0x29ED1D4", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x29ED440", Offset = "0x29ED440", VA = "0x29ED440")]
	protected bool CheckFireEffectInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x29ED478", Offset = "0x29ED478", VA = "0x29ED478", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x29ED4AC", Offset = "0x29ED4AC", VA = "0x29ED4AC")]
	public Weapon_Rifle()
	{
	}
}
[Token(Token = "0x2000277")]
public class Weapon_RocketLauncher : Weapon
{
	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject BulletObj;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject BulletPrefab;

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x29ED668", Offset = "0x29ED668", VA = "0x29ED668", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x29ED6A4", Offset = "0x29ED6A4", VA = "0x29ED6A4", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x29ED808", Offset = "0x29ED808", VA = "0x29ED808", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x29ED958", Offset = "0x29ED958", VA = "0x29ED958")]
	public Weapon_RocketLauncher()
	{
	}
}
[Token(Token = "0x2000278")]
public class Weapon_Shield : Weapon
{
	[Token(Token = "0x6001215")]
	[Address(RVA = "0x29ED960", Offset = "0x29ED960", VA = "0x29ED960", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x29ED964", Offset = "0x29ED964", VA = "0x29ED964", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x29ED968", Offset = "0x29ED968", VA = "0x29ED968", Slot = "13")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x29ED96C", Offset = "0x29ED96C", VA = "0x29ED96C", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x29ED970", Offset = "0x29ED970", VA = "0x29ED970", Slot = "20")]
	public override void ReloadBullet(bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x29ED974", Offset = "0x29ED974", VA = "0x29ED974")]
	public Weapon_Shield()
	{
	}
}
[Token(Token = "0x2000279")]
public class Weapon_ShotGun : Weapon
{
	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float fireRange;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float fireRangeDistance;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public int bulletNumber;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Transform ShellPoint;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject BulletPrefab;

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x29ED97C", Offset = "0x29ED97C", VA = "0x29ED97C", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x29EDD40", Offset = "0x29EDD40", VA = "0x29EDD40", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x29EDD50", Offset = "0x29EDD50", VA = "0x29EDD50")]
	public Weapon_ShotGun()
	{
	}
}
[Token(Token = "0x200027A")]
public class Weapon_Throw : Weapon
{
	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject BulletPrefab;

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x29EDD6C", Offset = "0x29EDD6C", VA = "0x29EDD6C", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x29EE010", Offset = "0x29EE010", VA = "0x29EE010")]
	public Weapon_Throw()
	{
	}
}
[Token(Token = "0x200027B")]
public class HapticsConfig : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000520")]
	public class PointCell
	{
		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Pos pos;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Pos penetration_Pos;

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x14F5718", Offset = "0x14F5718", VA = "0x14F5718")]
		public PointCell()
		{
		}
	}

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PointCell pointCell;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public PointCell[] pointCells;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HapticsTools.VirtualPart hapticsPart;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public HapticsTools.TriggerType triggerType;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 size;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IsPenetration;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int grid_count_x;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int grid_count_y;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HapticsTools tools;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<int> templist;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<TactSource> tempSources;

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x14F4DBC", Offset = "0x14F4DBC", VA = "0x14F4DBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x14F4F30", Offset = "0x14F4F30", VA = "0x14F4F30")]
	public void Play(byte level, int timeMillis)
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x14F5408", Offset = "0x14F5408", VA = "0x14F5408")]
	public void GetScopePoints(int id, ref List<int> scopePoints)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x14F5660", Offset = "0x14F5660", VA = "0x14F5660")]
	public HapticsConfig()
	{
	}
}
[Token(Token = "0x200027C")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD3648", Offset = "0xFD3648")]
public class HapticsTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000521")]
	public class Part2VirtualPartCell
	{
		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject partType;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VirtualPart virtualPartType;

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x14F6180", Offset = "0x14F6180", VA = "0x14F6180")]
		public Part2VirtualPartCell()
		{
		}
	}

	[Token(Token = "0x2000522")]
	public enum VirtualPart
	{
		[Token(Token = "0x4001D70")]
		None = 0,
		[Token(Token = "0x4001D71")]
		Body = 1,
		[Token(Token = "0x4001D72")]
		Head = 5,
		[Token(Token = "0x4001D73")]
		Hand_Left = 6,
		[Token(Token = "0x4001D74")]
		Hand_Right = 7,
		[Token(Token = "0x4001D75")]
		Arm_Left = 8,
		[Token(Token = "0x4001D76")]
		Arm_Right = 9,
		[Token(Token = "0x4001D77")]
		Leg_Left = 10,
		[Token(Token = "0x4001D78")]
		Leg_Right = 11
	}

	[Token(Token = "0x2000523")]
	public enum TriggerType
	{
		[Token(Token = "0x4001D7A")]
		Point2Point,
		[Token(Token = "0x4001D7B")]
		Point2Multipoint
	}

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, VirtualPart> Part2VirtualPartDic;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<VirtualPart, List<HapticsConfig>> pointsDic;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Pos, TactSource> realityPartDic;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Part2VirtualPartCell> part2VirtualPartCells;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isRun;

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x14F5720", Offset = "0x14F5720", VA = "0x14F5720")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x14F58CC", Offset = "0x14F58CC", VA = "0x14F58CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x14F4E30", Offset = "0x14F4E30", VA = "0x14F4E30")]
	public void Register(HapticsConfig hapticsConfig)
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x14F5AC8", Offset = "0x14F5AC8", VA = "0x14F5AC8")]
	public void PlayPart(GameObject part, Vector3 hitPoint, byte level, int timeMillis)
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x14F5EF4", Offset = "0x14F5EF4", VA = "0x14F5EF4")]
	public void PlayAll(byte level, int timeMillis)
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x14F5B9C", Offset = "0x14F5B9C", VA = "0x14F5B9C")]
	public void PlayPoint(VirtualPart part, Vector3 hitPoint, byte level, int timeMillis)
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x14F5578", Offset = "0x14F5578", VA = "0x14F5578")]
	public TactSource GetTactSource(Pos pos)
	{
		return null;
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x14F609C", Offset = "0x14F609C", VA = "0x14F609C")]
	public HapticsTools()
	{
	}
}
[Token(Token = "0x200027D")]
public class AnimationGear : BaseHurtGear
{
	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float closeDelay;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Animator animatorCom;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string animationStateName;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject[] closeObjs;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timer;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isCloseDelay;

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x160A620", Offset = "0x160A620", VA = "0x160A620", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x160A854", Offset = "0x160A854", VA = "0x160A854", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x160A90C", Offset = "0x160A90C", VA = "0x160A90C", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x160AAE8", Offset = "0x160AAE8", VA = "0x160AAE8", Slot = "26")]
	public override void DoGearBrokenEffect()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x160ABC4", Offset = "0x160ABC4", VA = "0x160ABC4")]
	private void CloseDecal()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x160ACB8", Offset = "0x160ACB8", VA = "0x160ACB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x160AE48", Offset = "0x160AE48", VA = "0x160AE48")]
	public AnimationGear()
	{
	}
}
[Token(Token = "0x200027E")]
public class AxeGear : BaseGear
{
	[Token(Token = "0x2000524")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E64", Offset = "0xFD5E64")]
	private sealed class <PlayAni>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AxeGear <>4__this;

		[Token(Token = "0x17000401")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026CA")]
			[Address(RVA = "0x16132AC", Offset = "0x16132AC", VA = "0x16132AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000402")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026CC")]
			[Address(RVA = "0x1613314", Offset = "0x1613314", VA = "0x1613314", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x1612C94", Offset = "0x1612C94", VA = "0x1612C94")]
		[DebuggerHidden]
		public <PlayAni>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x16131DC", Offset = "0x16131DC", VA = "0x16131DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x16131E0", Offset = "0x16131E0", VA = "0x16131E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x16132B4", Offset = "0x16132B4", VA = "0x16132B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animation animation;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float time;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine coroutine;

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x16129B4", Offset = "0x16129B4", VA = "0x16129B4", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x1612B14", Offset = "0x1612B14", VA = "0x1612B14", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x1612C18", Offset = "0x1612C18", VA = "0x1612C18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDE360", Offset = "0xFDE360")]
	private IEnumerator PlayAni()
	{
		return null;
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x1612CC0", Offset = "0x1612CC0", VA = "0x1612CC0", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x1612E08", Offset = "0x1612E08", VA = "0x1612E08")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x161314C", Offset = "0x161314C", VA = "0x161314C")]
	public AxeGear()
	{
	}
}
[Token(Token = "0x200027F")]
public class DeadAreasGear : BaseGear
{
	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider[] deadColliders;

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x13D8AB8", Offset = "0x13D8AB8", VA = "0x13D8AB8", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x13D8BAC", Offset = "0x13D8BAC", VA = "0x13D8BAC", Slot = "17")]
	public override void GearUnInit()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x13D8CA0", Offset = "0x13D8CA0", VA = "0x13D8CA0")]
	private void DoTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x13D8EF4", Offset = "0x13D8EF4", VA = "0x13D8EF4")]
	public DeadAreasGear()
	{
	}
}
[Token(Token = "0x2000280")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD36AC", Offset = "0xFD36AC")]
public class ElevatorGear : BaseGear
{
	[Token(Token = "0x2000525")]
	private enum ElevatorState
	{
		[Token(Token = "0x4001D80")]
		Ready,
		[Token(Token = "0x4001D81")]
		PreRun,
		[Token(Token = "0x4001D82")]
		Run,
		[Token(Token = "0x4001D83")]
		RunEnd
	}

	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E74", Offset = "0xFD5E74")]
	private sealed class <ElevatorStart>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElevatorGear <>4__this;

		[Token(Token = "0x17000403")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026D0")]
			[Address(RVA = "0x13E2D4C", Offset = "0x13E2D4C", VA = "0x13E2D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026D2")]
			[Address(RVA = "0x13E2DB4", Offset = "0x13E2DB4", VA = "0x13E2DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x13E2818", Offset = "0x13E2818", VA = "0x13E2818")]
		[DebuggerHidden]
		public <ElevatorStart>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x13E2C08", Offset = "0x13E2C08", VA = "0x13E2C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x13E2C0C", Offset = "0x13E2C0C", VA = "0x13E2C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x13E2D54", Offset = "0x13E2D54", VA = "0x13E2D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animator animatorCom;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string animationStateName;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float elevatorRunDelay;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private HashSet<int> entryList;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ElevatorState elevatorState;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine coroutine;

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x13E1DF0", Offset = "0x13E1DF0", VA = "0x13E1DF0", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x13E2020", Offset = "0x13E2020", VA = "0x13E2020", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x13E20C8", Offset = "0x13E20C8", VA = "0x13E20C8", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x13E2170", Offset = "0x13E2170", VA = "0x13E2170")]
	private void Update()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x13E24E0", Offset = "0x13E24E0", VA = "0x13E24E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x13E259C", Offset = "0x13E259C", VA = "0x13E259C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x13E2698", Offset = "0x13E2698", VA = "0x13E2698")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x13E27C4", Offset = "0x13E27C4", VA = "0x13E27C4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x13E1EB4", Offset = "0x13E1EB4", VA = "0x13E1EB4")]
	private void ElevatorRestore()
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x13E2464", Offset = "0x13E2464", VA = "0x13E2464")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDE3C4", Offset = "0xFDE3C4")]
	private IEnumerator ElevatorStart()
	{
		return null;
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x13E24FC", Offset = "0x13E24FC", VA = "0x13E24FC")]
	private void ElevatorUpdate()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x13E2844", Offset = "0x13E2844", VA = "0x13E2844")]
	private void UpdatePlayerPos(float height)
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x13E21E0", Offset = "0x13E21E0", VA = "0x13E21E0")]
	private bool CheckIsCanElevatorRun()
	{
		return default(bool);
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x13E2A84", Offset = "0x13E2A84", VA = "0x13E2A84")]
	private WUnit GetUnit(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x13E25F0", Offset = "0x13E25F0", VA = "0x13E25F0")]
	private void EntryElevator(GameObject obj)
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x13E26E4", Offset = "0x13E26E4", VA = "0x13E26E4")]
	private void ExitElevator(GameObject obj)
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x13E2B8C", Offset = "0x13E2B8C", VA = "0x13E2B8C")]
	public ElevatorGear()
	{
	}
}
[Token(Token = "0x2000281")]
public class FlashLight : MonoBehaviour
{
	[Token(Token = "0x2000527")]
	public enum LightEventType
	{
		[Token(Token = "0x4001D88")]
		Enter,
		[Token(Token = "0x4001D89")]
		Stay,
		[Token(Token = "0x4001D8A")]
		Exit
	}

	[Token(Token = "0x2000528")]
	public struct RayData
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 direction;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distance;

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x10FEC48", Offset = "0x10FEC48", VA = "0x10FEC48")]
		public RayData(Vector3 dir, float range, Vector3 pos)
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x10FEC50", Offset = "0x10FEC50", VA = "0x10FEC50")]
		public RayData(float x, float y, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
		{
		}
	}

	[Token(Token = "0x2000529")]
	public class HitInfoList : List<RaycastHit>
	{
		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x15EECD4", Offset = "0x15EECD4", VA = "0x15EECD4")]
		public HitInfoList()
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x15EED44", Offset = "0x15EED44", VA = "0x15EED44")]
		public HitInfoList(HitInfoList copy)
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x15EDD40", Offset = "0x15EDD40", VA = "0x15EDD40")]
		public bool AddElement(RaycastHit info)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x15EE4AC", Offset = "0x15EE4AC", VA = "0x15EE4AC")]
		public bool RemoveElement(RaycastHit info)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x15EEED8", Offset = "0x15EEED8", VA = "0x15EEED8")]
		public HitInfoList GetSubList(HitInfoList another)
		{
			return null;
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x15EE230", Offset = "0x15EE230", VA = "0x15EE230")]
		public bool ExistElement(RaycastHit info, out RaycastHit result)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dampSpeed;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rangeOffset;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useMultipleRay;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD93D8", Offset = "0xFD93D8")]
	public float sectionOfMultipleRay;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float dampTmp;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float maxLightDistance;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HitInfoList InfoList;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<RayData> rayDatas;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] xP;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] yP;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HitInfoList Infolist2;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<FlashLight, RaycastHit, LightEventType> EventHandler;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distance;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[WriteOnly]
	private NativeArray<RaycastHit> results;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[ReadOnly]
	private NativeArray<RaycastCommand> commands;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private JobHandle handle;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool isDrawLine;

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x15ED444", Offset = "0x15ED444", VA = "0x15ED444")]
	private void Start()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x15ED4C0", Offset = "0x15ED4C0", VA = "0x15ED4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x15EDB34", Offset = "0x15EDB34", VA = "0x15EDB34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x15EDBCC", Offset = "0x15EDBCC", VA = "0x15EDBCC")]
	public void Switch(bool switchOn)
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x15ED4E4", Offset = "0x15ED4E4", VA = "0x15ED4E4")]
	private void ControlLightRange()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x15ED71C", Offset = "0x15ED71C", VA = "0x15ED71C")]
	private void DetectObject()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x15EDE0C", Offset = "0x15EDE0C", VA = "0x15EDE0C")]
	private void HandleEvent(HitInfoList current, int operate)
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x15EDBEC", Offset = "0x15EDBEC", VA = "0x15EDBEC")]
	private void UpdateRayDatas(float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x15EE568", Offset = "0x15EE568", VA = "0x15EE568")]
	private void GetFullCircleRay(ref List<RayData> list, int[] xParams, int[] yParams, float section, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x15EE77C", Offset = "0x15EE77C", VA = "0x15EE77C")]
	private void GetQuarterCircleRay(ref List<RayData> list, int xParam, int yParam, float section, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x15EEB4C", Offset = "0x15EEB4C", VA = "0x15EEB4C")]
	public FlashLight()
	{
	}
}
[Token(Token = "0x2000282")]
public class HurtBox : BaseHurtGear
{
	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject box;

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x1473C4C", Offset = "0x1473C4C", VA = "0x1473C4C", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x1473D68", Offset = "0x1473D68", VA = "0x1473D68", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x1473E28", Offset = "0x1473E28", VA = "0x1473E28", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x1473EE4", Offset = "0x1473EE4", VA = "0x1473EE4", Slot = "26")]
	public override void DoGearBrokenEffect()
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x1473F30", Offset = "0x1473F30", VA = "0x1473F30")]
	public HurtBox()
	{
	}
}
[Token(Token = "0x2000283")]
public class InfraredGear : BaseGear
{
	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private splineMove splinemove;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9444", Offset = "0xFD9444")]
	[SerializeField]
	private float maxHitDistance;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9490", Offset = "0xFD9490")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD94DC", Offset = "0xFD94DC")]
	[SerializeField]
	private float topOffset;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private RaycastHit hit_forward;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RaycastHit hit_back;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private LayerMask activeLayer;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AudioEvent audioEvent;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WwiseDefine audio;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private InfraredGearManager infraredGearManager;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int closeCount;

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x14765EC", Offset = "0x14765EC", VA = "0x14765EC", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x14767C0", Offset = "0x14767C0", VA = "0x14767C0", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x14767C8", Offset = "0x14767C8", VA = "0x14767C8", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x1476BB8", Offset = "0x1476BB8", VA = "0x1476BB8")]
	private void FindObjects(GameObject obj, bool state)
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x1476C5C", Offset = "0x1476C5C", VA = "0x1476C5C", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x1476F14", Offset = "0x1476F14", VA = "0x1476F14")]
	private void Update()
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x14777CC", Offset = "0x14777CC", VA = "0x14777CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0x1477484", Offset = "0x1477484", VA = "0x1477484")]
	private void OnTriggerCollider(Collider other)
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x1477934", Offset = "0x1477934", VA = "0x1477934")]
	public InfraredGear()
	{
	}
}
[Token(Token = "0x2000284")]
public class InfraredGearManager : MonoBehaviour
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InfraredGear[] infraredGears;

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x1477958", Offset = "0x1477958", VA = "0x1477958")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x1476B28", Offset = "0x1476B28", VA = "0x1476B28")]
	public void SetCheckTargetState(bool state)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x14779B8", Offset = "0x14779B8", VA = "0x14779B8")]
	public InfraredGearManager()
	{
	}
}
[Token(Token = "0x2000285")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3710", Offset = "0xFD3710")]
public class MagmaGear : BaseGear
{
	[Token(Token = "0x200052A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E84", Offset = "0xFD5E84")]
	private sealed class <PlayAni>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MagmaGear <>4__this;

		[Token(Token = "0x17000405")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026DE")]
			[Address(RVA = "0x14B0124", Offset = "0x14B0124", VA = "0x14B0124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026E0")]
			[Address(RVA = "0x14B018C", Offset = "0x14B018C", VA = "0x14B018C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x14AFAFC", Offset = "0x14AFAFC", VA = "0x14AFAFC")]
		[DebuggerHidden]
		public <PlayAni>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x14B0054", Offset = "0x14B0054", VA = "0x14B0054", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x14B0058", Offset = "0x14B0058", VA = "0x14B0058", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x14B012C", Offset = "0x14B012C", VA = "0x14B012C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animation animation;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float time;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine coroutine;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private e_setting_type GearDamageType;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private e_setting_type GearDamageFrequency;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float GearFrequency;

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x14AF5BC", Offset = "0x14AF5BC", VA = "0x14AF5BC", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x14AF7B0", Offset = "0x14AF7B0", VA = "0x14AF7B0", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x14AF9C4", Offset = "0x14AF9C4", VA = "0x14AF9C4", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x14AF948", Offset = "0x14AF948", VA = "0x14AF948")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDE428", Offset = "0xFDE428")]
	private IEnumerator PlayAni()
	{
		return null;
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x14AFB28", Offset = "0x14AFB28", VA = "0x14AFB28")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x14AFC2C", Offset = "0x14AFC2C", VA = "0x14AFC2C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x14AFB2C", Offset = "0x14AFB2C", VA = "0x14AFB2C")]
	private void DoTrigger(Collider other)
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x14AFDF0", Offset = "0x14AFDF0", VA = "0x14AFDF0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x14B004C", Offset = "0x14B004C", VA = "0x14B004C")]
	public MagmaGear()
	{
	}
}
[Token(Token = "0x2000286")]
public class MagmaGearManager : MonoSingleton<MagmaGearManager>
{
	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_setting_type GearDamageType;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public e_setting_type GearDamageFrequency;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GearFrequency;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<WUnit> hurtList;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isTime;

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x14AFC30", Offset = "0x14AFC30", VA = "0x14AFC30")]
	public void Enter(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x14AFEEC", Offset = "0x14AFEEC", VA = "0x14AFEEC")]
	public void Exit(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x14B0194", Offset = "0x14B0194", VA = "0x14B0194")]
	private void Update()
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x14B0508", Offset = "0x14B0508", VA = "0x14B0508")]
	public MagmaGearManager()
	{
	}
}
[Token(Token = "0x2000287")]
public class MovePlatformGear : BaseGear
{
	[Token(Token = "0x200052B")]
	private enum MovePlatformState
	{
		[Token(Token = "0x4001D92")]
		Idle,
		[Token(Token = "0x4001D93")]
		Run,
		[Token(Token = "0x4001D94")]
		Finish
	}

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform MovePlatform;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Transform> RoomRefPoint;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform MoveEndPoint;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MovePlatformGearRoom GearRoom;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform GearRoomPoint;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float MoveSpeed;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float MoveSpeedGUp;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float MoveSpeedGDown;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float MoveSpeedDownDis;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float DelayTimeMove;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private HashSet<int> entryList;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float DelayRunningTimeMove;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float RunningMoveSpeed;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 OrignalPosition;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float smoothSpeed;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 selfPosition;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float SyncFrameTime;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float SyncFrameRunningTime;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public AudioEvent movingSoundAudio;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WwiseDefine moveSoundObj;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine movingCor;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 OrignalOffset;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private MovePlatformState moveState;

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x14C2EFC", Offset = "0x14C2EFC", VA = "0x14C2EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x14C3038", Offset = "0x14C3038", VA = "0x14C3038", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x14C32D4", Offset = "0x14C32D4", VA = "0x14C32D4", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x14C3814", Offset = "0x14C3814", VA = "0x14C3814", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x14C3CC0", Offset = "0x14C3CC0", VA = "0x14C3CC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x14C46EC", Offset = "0x14C46EC", VA = "0x14C46EC")]
	private void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x14C47E8", Offset = "0x14C47E8", VA = "0x14C47E8")]
	private void DoTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x14C48E4", Offset = "0x14C48E4", VA = "0x14C48E4")]
	private void DoTriggerStay(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x14C3230", Offset = "0x14C3230", VA = "0x14C3230")]
	private void MovePlatformRestore()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x14C4938", Offset = "0x14C4938", VA = "0x14C4938")]
	private bool CheckMoveDis(float dis)
	{
		return default(bool);
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x14C4A30", Offset = "0x14C4A30", VA = "0x14C4A30")]
	private void MoveEnd()
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x14C42FC", Offset = "0x14C42FC", VA = "0x14C42FC")]
	private void PlayDelayMovingSound()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x14C3BD4", Offset = "0x14C3BD4", VA = "0x14C3BD4")]
	private void StopMovingSound()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x14C3514", Offset = "0x14C3514", VA = "0x14C3514")]
	private void SetPlayerMoveAniActive(bool isActive)
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x14C4388", Offset = "0x14C4388", VA = "0x14C4388")]
	private void MovePlatformUpdate(bool isMove = true)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x14C4AE0", Offset = "0x14C4AE0", VA = "0x14C4AE0")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x14C4D84", Offset = "0x14C4D84", VA = "0x14C4D84")]
	private Vector3 GetPlayerPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x14C3F80", Offset = "0x14C3F80", VA = "0x14C3F80")]
	private bool CheckIsCanMovePlatformRun()
	{
		return default(bool);
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x14C501C", Offset = "0x14C501C", VA = "0x14C501C")]
	private WUnit GetUnit(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x14C4740", Offset = "0x14C4740", VA = "0x14C4740")]
	private void EntryMovePlatform(GameObject obj)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x14C483C", Offset = "0x14C483C", VA = "0x14C483C")]
	private void ExitMovePlatform(GameObject obj)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x14C4204", Offset = "0x14C4204", VA = "0x14C4204")]
	private void PreSetOrignalOffset(Vector3 pos)
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x14C3A6C", Offset = "0x14C3A6C", VA = "0x14C3A6C")]
	private void SetPlatformPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x14C5124", Offset = "0x14C5124", VA = "0x14C5124", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x14C5474", Offset = "0x14C5474", VA = "0x14C5474", Slot = "23")]
	public override void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2)
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x14C5488", Offset = "0x14C5488", VA = "0x14C5488", Slot = "24")]
	public override void SetRoomStatus(int roomId)
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x14C5648", Offset = "0x14C5648", VA = "0x14C5648")]
	public MovePlatformGear()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x14C577C", Offset = "0x14C577C", VA = "0x14C577C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE48C", Offset = "0xFDE48C")]
	private void <PlayDelayMovingSound>b__36_0()
	{
	}
}
[Token(Token = "0x2000288")]
public class MovePlatformGearRoom : MonoBehaviour
{
	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation ani;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Room;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RoomActiveRoot;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform MotionFloorFollowRoot;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent OpenDoorAudio;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent CloseDoorAudio;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WwiseDefine OpenDoorObj;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WwiseDefine CloseDoorObj;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> aniClipNameList;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 OrignalPosition;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Vector3> MotionFloorMoveSyncAction;

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x148FA38", Offset = "0x148FA38", VA = "0x148FA38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x148FD08", Offset = "0x148FD08", VA = "0x148FD08")]
	public void GearInit()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x148FE68", Offset = "0x148FE68", VA = "0x148FE68")]
	public void GearStart()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x148FF0C", Offset = "0x148FF0C", VA = "0x148FF0C")]
	public void GearStop()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x1490124", Offset = "0x1490124", VA = "0x1490124")]
	private void Update()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x1490244", Offset = "0x1490244", VA = "0x1490244")]
	public void UpdatePosition(Vector3 pos)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x148FFE0", Offset = "0x148FFE0", VA = "0x148FFE0")]
	public void SetPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x148FD10", Offset = "0x148FD10", VA = "0x148FD10")]
	public void DoorAniPlay(bool open)
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x14903F8", Offset = "0x14903F8", VA = "0x14903F8")]
	private void SetSound(bool Open, bool isSet)
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x14900F0", Offset = "0x14900F0", VA = "0x14900F0")]
	private void StopSound()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x1490308", Offset = "0x1490308", VA = "0x1490308")]
	private void DoorAniPlay(string aniName)
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x14905EC", Offset = "0x14905EC", VA = "0x14905EC")]
	public MovePlatformGearRoom()
	{
	}
}
[Token(Token = "0x2000289")]
public class MovingWallGear : BaseGear
{
	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SingleInjuryGear[] MovingWall;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<int> list;

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x1490E48", Offset = "0x1490E48", VA = "0x1490E48", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x1490F18", Offset = "0x1490F18", VA = "0x1490F18", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x14910D4", Offset = "0x14910D4", VA = "0x14910D4", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x14910DC", Offset = "0x14910DC", VA = "0x14910DC")]
	public MovingWallGear()
	{
	}
}
[Token(Token = "0x200028A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3774", Offset = "0xFD3774")]
public class OffLimitsAreasGear : BaseGear
{
	[Token(Token = "0x200052C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5E94", Offset = "0xFD5E94")]
	private sealed class <PlayAni>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffLimitsAreasGear <>4__this;

		[Token(Token = "0x17000407")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x149E0D0", Offset = "0x149E0D0", VA = "0x149E0D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000408")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x149E138", Offset = "0x149E138", VA = "0x149E138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x149DB50", Offset = "0x149DB50", VA = "0x149DB50")]
		[DebuggerHidden]
		public <PlayAni>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x149DFC4", Offset = "0x149DFC4", VA = "0x149DFC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x149DFC8", Offset = "0x149DFC8", VA = "0x149DFC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x149E0D8", Offset = "0x149E0D8", VA = "0x149E0D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animator Animator;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float time;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine coroutine;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private e_setting_type GearDamageType;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private e_setting_type GearDamageFrequency;

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x149D6E8", Offset = "0x149D6E8", VA = "0x149D6E8", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x149D8B8", Offset = "0x149D8B8", VA = "0x149D8B8", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x149DA44", Offset = "0x149DA44", VA = "0x149DA44", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x149D9C8", Offset = "0x149D9C8", VA = "0x149D9C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDE49C", Offset = "0xFDE49C")]
	private IEnumerator PlayAni()
	{
		return null;
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x149DB7C", Offset = "0x149DB7C", VA = "0x149DB7C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x149DC80", Offset = "0x149DC80", VA = "0x149DC80")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x149DB80", Offset = "0x149DB80", VA = "0x149DB80")]
	private void DoTrigger(Collider other)
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x149DED4", Offset = "0x149DED4", VA = "0x149DED4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x149DFBC", Offset = "0x149DFBC", VA = "0x149DFBC")]
	public OffLimitsAreasGear()
	{
	}
}
[Token(Token = "0x200028B")]
public class OffLimitsAreasGearManager : MonoSingleton<OffLimitsAreasGearManager>
{
	[Token(Token = "0x200052D")]
	public class hurtTimer
	{
		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x149E140", Offset = "0x149E140", VA = "0x149E140")]
		public hurtTimer()
		{
		}
	}

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<WUnit, hurtTimer> hurtTimerDic;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<hurtTimer> RemoveList;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public e_setting_type GearDamageType;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public e_setting_type GearDamageFrequency;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isTime;

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x149DC84", Offset = "0x149DC84", VA = "0x149DC84")]
	public void Enter(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x149DFB8", Offset = "0x149DFB8", VA = "0x149DFB8")]
	public void Exit(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x149E148", Offset = "0x149E148", VA = "0x149E148")]
	private void Update()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x149E64C", Offset = "0x149E64C", VA = "0x149E64C")]
	public OffLimitsAreasGearManager()
	{
	}
}
[Token(Token = "0x200028C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD37D8", Offset = "0xFD37D8")]
public class PhysicalItemGear : BaseHurtGear
{
	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 initPos;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion initRot;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rigidbody;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float force;

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x139FF1C", Offset = "0x139FF1C", VA = "0x139FF1C", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x139FFD8", Offset = "0x139FFD8", VA = "0x139FFD8", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x13A0064", Offset = "0x13A0064", VA = "0x13A0064", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x13A00B0", Offset = "0x13A00B0", VA = "0x13A00B0", Slot = "25")]
	public override void GearHurt(e_group_type ackGroupType, int damage, Vector3 atkDir)
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x13A01AC", Offset = "0x13A01AC", VA = "0x13A01AC")]
	public PhysicalItemGear()
	{
	}
}
[Token(Token = "0x200028D")]
public class RebirtGear : BaseGear
{
	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider rebirtCollider;

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x155E868", Offset = "0x155E868", VA = "0x155E868", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x155E8A8", Offset = "0x155E8A8", VA = "0x155E8A8", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x155E94C", Offset = "0x155E94C", VA = "0x155E94C", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x155E9F8", Offset = "0x155E9F8", VA = "0x155E9F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x155EB6C", Offset = "0x155EB6C", VA = "0x155EB6C")]
	public RebirtGear()
	{
	}
}
[Token(Token = "0x200028E")]
public class SingleInjuryGear : BaseGear
{
	[Token(Token = "0x200052E")]
	public class hurtTimer
	{
		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x1414440", Offset = "0x1414440", VA = "0x1414440")]
		public hurtTimer()
		{
		}
	}

	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5EA4", Offset = "0xFD5EA4")]
	private sealed class <PlayAni>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SingleInjuryGear <>4__this;

		[Token(Token = "0x17000409")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x1414EA4", Offset = "0x1414EA4", VA = "0x1414EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026EE")]
			[Address(RVA = "0x1414F0C", Offset = "0x1414F0C", VA = "0x1414F0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x1414158", Offset = "0x1414158", VA = "0x1414158")]
		[DebuggerHidden]
		public <PlayAni>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x1414D1C", Offset = "0x1414D1C", VA = "0x1414D1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x1414D20", Offset = "0x1414D20", VA = "0x1414D20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x1414EAC", Offset = "0x1414EAC", VA = "0x1414EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animation animation;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float aniIntervals;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float time;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float aniStartTime;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine coroutine;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isPlayed;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private e_setting_type GearDamageType;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private e_setting_type GearDamageFrequency;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<WUnit, hurtTimer> hurtTimerDic;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<WUnit> hurtList;

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x1413D18", Offset = "0x1413D18", VA = "0x1413D18", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x1413EE8", Offset = "0x1413EE8", VA = "0x1413EE8", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x1414040", Offset = "0x1414040", VA = "0x1414040", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x1413FC4", Offset = "0x1413FC4", VA = "0x1413FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDE500", Offset = "0xFDE500")]
	private IEnumerator PlayAni()
	{
		return null;
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x1414184", Offset = "0x1414184", VA = "0x1414184")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x1414448", Offset = "0x1414448", VA = "0x1414448")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x14146B4", Offset = "0x14146B4", VA = "0x14146B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x1414C6C", Offset = "0x1414C6C", VA = "0x1414C6C")]
	public SingleInjuryGear()
	{
	}
}
[Token(Token = "0x200028F")]
public class SinglePlankBridgeGear : BaseGear
{
	[Token(Token = "0x2000530")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5EB4", Offset = "0xFD5EB4")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x14160D8", Offset = "0x14160D8", VA = "0x14160D8")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x141631C", Offset = "0x141631C", VA = "0x141631C")]
		internal bool <DoFXTriggerEnter>b__0(int a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Collider[] colliders;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Transform> ItemList;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Collider[] FXCollidersTrigger;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int PlayerMaxNum;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int RandPlayerIndex;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int RandPlayerRunningIndex;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<int> playerIdList;

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x1414F14", Offset = "0x1414F14", VA = "0x1414F14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x141516C", Offset = "0x141516C", VA = "0x141516C", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x1415460", Offset = "0x1415460", VA = "0x1415460", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x14157B8", Offset = "0x14157B8", VA = "0x14157B8", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x1415AA4", Offset = "0x1415AA4", VA = "0x1415AA4")]
	private void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x1415E9C", Offset = "0x1415E9C", VA = "0x1415E9C")]
	private void DoTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x1415C54", Offset = "0x1415C54", VA = "0x1415C54")]
	private void TriggerToAction(Vector3 dir, WUnit unit)
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x1415EA0", Offset = "0x1415EA0", VA = "0x1415EA0")]
	private void DoFXTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x14160E4", Offset = "0x14160E4", VA = "0x14160E4")]
	private void DoFXTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x14160E0", Offset = "0x14160E0", VA = "0x14160E0")]
	private void DoFxPlay()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x1416268", Offset = "0x1416268", VA = "0x1416268", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x141626C", Offset = "0x141626C", VA = "0x141626C")]
	public SinglePlankBridgeGear()
	{
	}
}
[Token(Token = "0x2000290")]
public class SpotGear : BaseGear
{
	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int CheckRoomId;

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x1418C34", Offset = "0x1418C34", VA = "0x1418C34", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x1418E00", Offset = "0x1418E00", VA = "0x1418E00", Slot = "17")]
	public override void GearUnInit()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x1418F28", Offset = "0x1418F28", VA = "0x1418F28", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x1419004", Offset = "0x1419004", VA = "0x1419004", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x141903C", Offset = "0x141903C", VA = "0x141903C", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x1419380", Offset = "0x1419380", VA = "0x1419380")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x1418F60", Offset = "0x1418F60", VA = "0x1418F60")]
	private void FindObjects(GameObject obj, bool state)
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x1419514", Offset = "0x1419514", VA = "0x1419514")]
	private void OnEventHandler(FlashLight flashLight, RaycastHit raycastHit, FlashLight.LightEventType lightEventType)
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x141958C", Offset = "0x141958C", VA = "0x141958C")]
	protected void OnLightEnter(RaycastHit info)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x14195C4", Offset = "0x14195C4", VA = "0x14195C4")]
	protected void OnLightStay(RaycastHit info)
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x14195FC", Offset = "0x14195FC", VA = "0x14195FC")]
	private void TriggerHit(RaycastHit info)
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x1419978", Offset = "0x1419978", VA = "0x1419978")]
	public SpotGear()
	{
	}
}
[Token(Token = "0x2000291")]
public class SupplyGear : BaseGear
{
	[Token(Token = "0x2000531")]
	public class DoInfoTimer
	{
		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x15CE444", Offset = "0x15CE444", VA = "0x15CE444")]
		public DoInfoTimer()
		{
		}
	}

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider rebirtCollider;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<DoInfoTimer> doList;

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x15CDD58", Offset = "0x15CDD58", VA = "0x15CDD58", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x15CDD98", Offset = "0x15CDD98", VA = "0x15CDD98", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x15CDE94", Offset = "0x15CDE94", VA = "0x15CDE94", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x15CDF7C", Offset = "0x15CDF7C", VA = "0x15CDF7C")]
	private bool CheckUnit(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x15CE08C", Offset = "0x15CE08C", VA = "0x15CE08C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x15CE1E8", Offset = "0x15CE1E8", VA = "0x15CE1E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x15CE44C", Offset = "0x15CE44C", VA = "0x15CE44C")]
	public SupplyGear()
	{
	}
}
[Token(Token = "0x2000292")]
public class ToStabGear : BaseGear
{
	[Token(Token = "0x2000532")]
	public class hurtTimer
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x1461BA8", Offset = "0x1461BA8", VA = "0x1461BA8")]
		public hurtTimer()
		{
		}
	}

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animation animation;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float Time;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float time;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<WUnit, hurtTimer> hurtTimerDic;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<WUnit> hurtList;

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x1461560", Offset = "0x1461560", VA = "0x1461560", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x14617A0", Offset = "0x14617A0", VA = "0x14617A0", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x1461844", Offset = "0x1461844", VA = "0x1461844", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x14616F8", Offset = "0x14616F8", VA = "0x14616F8")]
	private void InitClear()
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x14618EC", Offset = "0x14618EC", VA = "0x14618EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x1461BB0", Offset = "0x1461BB0", VA = "0x1461BB0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x1461E1C", Offset = "0x1461E1C", VA = "0x1461E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x1462300", Offset = "0x1462300", VA = "0x1462300")]
	public ToStabGear()
	{
	}
}
[Token(Token = "0x2000293")]
public class TriggerListening : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000533")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5EC4", Offset = "0xFD5EC4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Collider, Collider> <>9__8_0;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Collider, Collider> <>9__8_1;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Collider, Collider> <>9__8_2;

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x1466548", Offset = "0x1466548", VA = "0x1466548")]
		public <>c()
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x1466550", Offset = "0x1466550", VA = "0x1466550")]
		internal void <.ctor>b__8_0(Collider <p0>, Collider <p1>)
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x1466554", Offset = "0x1466554", VA = "0x1466554")]
		internal void <.ctor>b__8_1(Collider <p0>, Collider <p1>)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x1466558", Offset = "0x1466558", VA = "0x1466558")]
		internal void <.ctor>b__8_2(Collider <p0>, Collider <p1>)
		{
		}
	}

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Collider, Collider> OnTriggerEnterCB;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Collider, Collider> OnTriggerExitCB;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<Collider, Collider> OnTriggerStayCB;

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x1465F88", Offset = "0x1465F88", VA = "0x1465F88")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x146600C", Offset = "0x146600C", VA = "0x146600C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x1466090", Offset = "0x1466090", VA = "0x1466090")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x1466114", Offset = "0x1466114", VA = "0x1466114")]
	public static TriggerListening Add(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x14661C4", Offset = "0x14661C4", VA = "0x14661C4")]
	public static void Remove(GameObject go)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x14662A0", Offset = "0x14662A0", VA = "0x14662A0")]
	public TriggerListening()
	{
	}
}
[Token(Token = "0x2000294")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD383C", Offset = "0xFD383C")]
public class TriggerSuppressGear : BaseGear
{
	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x146655C", Offset = "0x146655C", VA = "0x146655C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x1466688", Offset = "0x1466688", VA = "0x1466688")]
	public TriggerSuppressGear()
	{
	}
}
[Token(Token = "0x2000295")]
public class InitBugly : MonoBehaviour
{
	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string appid;

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x14779C0", Offset = "0x14779C0", VA = "0x14779C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x1477AF0", Offset = "0x1477AF0", VA = "0x1477AF0")]
	public InitBugly()
	{
	}
}
[Token(Token = "0x2000296")]
public class Main : MonoBehaviour
{
	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Main _instance;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ulong GCTimeSlice;

	[Token(Token = "0x170001A1")]
	public static Main Instance
	{
		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x14B05AC", Offset = "0x14B05AC", VA = "0x14B05AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x14B05FC", Offset = "0x14B05FC", VA = "0x14B05FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x14B0714", Offset = "0x14B0714", VA = "0x14B0714")]
	private void Start()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x14B0B04", Offset = "0x14B0B04", VA = "0x14B0B04")]
	private void Update()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x14B0D74", Offset = "0x14B0D74", VA = "0x14B0D74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x14B0E84", Offset = "0x14B0E84", VA = "0x14B0E84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x14B0FF4", Offset = "0x14B0FF4", VA = "0x14B0FF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x14B10BC", Offset = "0x14B10BC", VA = "0x14B10BC")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x14B10C0", Offset = "0x14B10C0", VA = "0x14B10C0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x14B11B4", Offset = "0x14B11B4", VA = "0x14B11B4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x14B145C", Offset = "0x14B145C", VA = "0x14B145C")]
	public Main()
	{
	}
}
[Token(Token = "0x2000297")]
public static class MainController
{
	[Serializable]
	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5ED4", Offset = "0xFD5ED4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__1_0;

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x14B15A0", Offset = "0x14B15A0", VA = "0x14B15A0")]
		public <>c()
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x14B15A8", Offset = "0x14B15A8", VA = "0x14B15A8")]
		internal void <Start>b__1_0()
		{
		}
	}

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsUseOBB;

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x14B0770", Offset = "0x14B0770", VA = "0x14B0770")]
	public static void Start()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x14B0EE0", Offset = "0x14B0EE0", VA = "0x14B0EE0")]
	public static void FixedUpdate()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x14B0B60", Offset = "0x14B0B60", VA = "0x14B0B60")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x14B0DD0", Offset = "0x14B0DD0", VA = "0x14B0DD0")]
	public static void LateUpdate()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x14B1124", Offset = "0x14B1124", VA = "0x14B1124")]
	public static void OnPause(bool pause)
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x14B1050", Offset = "0x14B1050", VA = "0x14B1050")]
	public static void OnDestroy()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x14B1278", Offset = "0x14B1278", VA = "0x14B1278")]
	public static void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x14B146C", Offset = "0x14B146C", VA = "0x14B146C")]
	public static void OnGUI()
	{
	}
}
[Token(Token = "0x2000298")]
public interface IState
{
	[Token(Token = "0x6001309")]
	void DoInit(object param);

	[Token(Token = "0x600130A")]
	void DoUpdate();

	[Token(Token = "0x600130B")]
	void DoLateUpdate();

	[Token(Token = "0x600130C")]
	void DoFixedUpdate();

	[Token(Token = "0x600130D")]
	void DoGUI();

	[Token(Token = "0x600130E")]
	void DoLoad();

	[Token(Token = "0x600130F")]
	void DoStart(StateManager.StateDefine preType);

	[Token(Token = "0x6001310")]
	void DoTransformStartOver(StateManager.StateDefine preType);

	[Token(Token = "0x6001311")]
	bool DoExit(StateManager.StateDefine nextType);

	[Token(Token = "0x6001312")]
	void DoUpdateLoad();

	[Token(Token = "0x6001313")]
	void DoUpdateInTransEnd();
}
[Token(Token = "0x2000299")]
public class StateManager : Singleton<StateManager>
{
	[Token(Token = "0x2000535")]
	public enum StateDefine
	{
		[Token(Token = "0x4001DAB")]
		STATE_NONE = 0,
		[Token(Token = "0x4001DAC")]
		STATE_DEBUG_CONFIG = 1,
		[Token(Token = "0x4001DAD")]
		STATE_LOGO = 2,
		[Token(Token = "0x4001DAE")]
		STATE_CHECK = 3,
		[Token(Token = "0x4001DAF")]
		STATE_SCENE = 9,
		[Token(Token = "0x4001DB0")]
		STATE_BATTLE = 10
	}

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IState activeState;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StateDefine activeStateType;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<StateDefine, IState> stateList;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StateDefine preStateType;

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x15C70AC", Offset = "0x15C70AC", VA = "0x15C70AC")]
	public StateDefine STPreStateType()
	{
		return default(StateDefine);
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x15C70B4", Offset = "0x15C70B4", VA = "0x15C70B4")]
	public void Init()
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x15C711C", Offset = "0x15C711C", VA = "0x15C711C")]
	private void Register(StateDefine type, IState st)
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x15C71B4", Offset = "0x15C71B4", VA = "0x15C71B4")]
	private void UnRegister(StateDefine type)
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x15C72AC", Offset = "0x15C72AC", VA = "0x15C72AC")]
	public StateDefine GetStateType()
	{
		return default(StateDefine);
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x15C72C4", Offset = "0x15C72C4", VA = "0x15C72C4")]
	public IState GetState()
	{
		return null;
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x15C72CC", Offset = "0x15C72CC", VA = "0x15C72CC")]
	public IState GetStateByType(StateDefine type)
	{
		return null;
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x15C7358", Offset = "0x15C7358", VA = "0x15C7358")]
	public void SetActiveState(StateDefine nextType)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x15C7244", Offset = "0x15C7244", VA = "0x15C7244")]
	public bool IsHasState(StateDefine nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x15C73E8", Offset = "0x15C73E8", VA = "0x15C73E8")]
	public void Clear()
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x15C7458", Offset = "0x15C7458", VA = "0x15C7458")]
	public void DoStateExit(StateDefine nextType)
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x15C7534", Offset = "0x15C7534", VA = "0x15C7534")]
	public void DoTransformStartOver()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x15C75F8", Offset = "0x15C75F8", VA = "0x15C75F8")]
	public void DoInit(object param)
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x15C76C4", Offset = "0x15C76C4", VA = "0x15C76C4")]
	public void DoStateLoad()
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x15C7780", Offset = "0x15C7780", VA = "0x15C7780")]
	public void DoStateUpdateLoad()
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x15C783C", Offset = "0x15C783C", VA = "0x15C783C")]
	public void DoUpdateInTransEnd()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x15C78F8", Offset = "0x15C78F8", VA = "0x15C78F8")]
	public void DoStateStart()
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x15C79BC", Offset = "0x15C79BC", VA = "0x15C79BC")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x15C7A78", Offset = "0x15C7A78", VA = "0x15C7A78")]
	public void Update()
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x15C7B34", Offset = "0x15C7B34", VA = "0x15C7B34")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x15C7BF0", Offset = "0x15C7BF0", VA = "0x15C7BF0")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x15C7CAC", Offset = "0x15C7CAC", VA = "0x15C7CAC")]
	public void ChangeGameState(StateDefine _nextState, [Optional] object _param)
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x15C7CF0", Offset = "0x15C7CF0", VA = "0x15C7CF0")]
	public StateManager()
	{
	}
}
[Token(Token = "0x200029A")]
public class CSVBoss_Setting
{
	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVBoss_Setting> data_list;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string settingKey;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int intValue;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string strValue;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float floatValue;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Info;

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x1650664", Offset = "0x1650664", VA = "0x1650664")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x16506AC", Offset = "0x16506AC", VA = "0x16506AC")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x165080C", Offset = "0x165080C", VA = "0x165080C")]
	private static CSVBoss_Setting Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x1650A0C", Offset = "0x1650A0C", VA = "0x1650A0C")]
	public static CSVBoss_Setting GetBoss_Setting(int id)
	{
		return null;
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x16508F0", Offset = "0x16508F0", VA = "0x16508F0")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x1650C5C", Offset = "0x1650C5C", VA = "0x1650C5C")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x16512A8", Offset = "0x16512A8", VA = "0x16512A8")]
	public CSVBoss_Setting()
	{
	}
}
[Token(Token = "0x200029B")]
public class CSVExp_share
{
	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVExp_share> data_list;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int level_diff;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float killer_ratio;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float other_ratio;

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x1651338", Offset = "0x1651338", VA = "0x1651338")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x1651380", Offset = "0x1651380", VA = "0x1651380")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x1651430", Offset = "0x1651430", VA = "0x1651430")]
	private static CSVExp_share Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x1651630", Offset = "0x1651630", VA = "0x1651630")]
	public static CSVExp_share GetExp_share(int id)
	{
		return null;
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x1651514", Offset = "0x1651514", VA = "0x1651514")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x16516F0", Offset = "0x16516F0", VA = "0x16516F0")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x1651C70", Offset = "0x1651C70", VA = "0x1651C70")]
	public CSVExp_share()
	{
	}
}
[Token(Token = "0x200029C")]
public class CSVInstance_flow
{
	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVInstance_flow> data_list;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int instanceId;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int flowId;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string childs;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int levelCap;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int levelOffset;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string name;

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x1652444", Offset = "0x1652444", VA = "0x1652444")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x165248C", Offset = "0x165248C", VA = "0x165248C")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x165253C", Offset = "0x165253C", VA = "0x165253C")]
	private static CSVInstance_flow Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x165273C", Offset = "0x165273C", VA = "0x165273C")]
	public static CSVInstance_flow GetInstance_flow(int id)
	{
		return null;
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1652620", Offset = "0x1652620", VA = "0x1652620")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x16527FC", Offset = "0x16527FC", VA = "0x16527FC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x1652DF0", Offset = "0x1652DF0", VA = "0x1652DF0")]
	public CSVInstance_flow()
	{
	}
}
[Token(Token = "0x200029D")]
public class CSVLanguage
{
	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVLanguage> data_list;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Chinese;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string English_US;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Korean;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Japanese;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Chinese_TW;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Vietnamese;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string Thai;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Indonesian;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string German;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string French;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string Russian;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string Portuguese;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string Spanish;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string Italian;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string Polish;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string Turkish;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string Dutch;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string Arabic;

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x1652E80", Offset = "0x1652E80", VA = "0x1652E80")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x1652EC8", Offset = "0x1652EC8", VA = "0x1652EC8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x1652F78", Offset = "0x1652F78", VA = "0x1652F78")]
	private static CSVLanguage Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x1653178", Offset = "0x1653178", VA = "0x1653178")]
	public static CSVLanguage GetLanguage(int id)
	{
		return null;
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x165305C", Offset = "0x165305C", VA = "0x165305C")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x1653238", Offset = "0x1653238", VA = "0x1653238")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x1653DAC", Offset = "0x1653DAC", VA = "0x1653DAC")]
	public CSVLanguage()
	{
	}
}
[Token(Token = "0x200029E")]
public class CSVLive_camera_config_data
{
	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVLive_camera_config_data> data_list;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int camId;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int step;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int model;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int site;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int siteType;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int priority;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int swithTime;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minTime;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string aside;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string info;

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x1653E3C", Offset = "0x1653E3C", VA = "0x1653E3C")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x1653E84", Offset = "0x1653E84", VA = "0x1653E84")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x1653F34", Offset = "0x1653F34", VA = "0x1653F34")]
	private static CSVLive_camera_config_data Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x1654134", Offset = "0x1654134", VA = "0x1654134")]
	public static CSVLive_camera_config_data GetLive_camera_config_data(int id)
	{
		return null;
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x1654018", Offset = "0x1654018", VA = "0x1654018")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x16541F4", Offset = "0x16541F4", VA = "0x16541F4")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x16548A8", Offset = "0x16548A8", VA = "0x16548A8")]
	public CSVLive_camera_config_data()
	{
	}
}
[Token(Token = "0x200029F")]
public class CSVMonster
{
	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster> data_list;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int type;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsCreateWeapon;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int weaponType;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int headPer;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int frequency;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string dropList;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int dropRatio;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string name;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string info;

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x1436F20", Offset = "0x1436F20", VA = "0x1436F20")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x1436F68", Offset = "0x1436F68", VA = "0x1436F68")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x143701C", Offset = "0x143701C", VA = "0x143701C")]
	private static CSVMonster Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x1437220", Offset = "0x1437220", VA = "0x1437220")]
	public static CSVMonster GetMonster(int id)
	{
		return null;
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x1437100", Offset = "0x1437100", VA = "0x1437100")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x14372E4", Offset = "0x14372E4", VA = "0x14372E4")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x1437A34", Offset = "0x1437A34", VA = "0x1437A34")]
	public CSVMonster()
	{
	}
}
[Token(Token = "0x20002A0")]
public class CSVMonster_level
{
	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_level> data_list;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int monster_id;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int lv;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int exp_drop;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x1437AC4", Offset = "0x1437AC4", VA = "0x1437AC4")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x1437B0C", Offset = "0x1437B0C", VA = "0x1437B0C")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x1437BC0", Offset = "0x1437BC0", VA = "0x1437BC0")]
	private static CSVMonster_level Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x1437DC4", Offset = "0x1437DC4", VA = "0x1437DC4")]
	public static CSVMonster_level GetMonster_level(int id)
	{
		return null;
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x1437CA4", Offset = "0x1437CA4", VA = "0x1437CA4")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x1437E88", Offset = "0x1437E88", VA = "0x1437E88")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x1438448", Offset = "0x1438448", VA = "0x1438448")]
	public CSVMonster_level()
	{
	}
}
[Token(Token = "0x20002A1")]
public class CSVMonster_spawn_one
{
	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_spawn_one> data_list;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int areaId;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wave;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int time;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pointId;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int monsterId;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int spawnCount;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int spawnDelay;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int suicideDelayTime;

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x14384D8", Offset = "0x14384D8", VA = "0x14384D8")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x1438520", Offset = "0x1438520", VA = "0x1438520")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x14385D4", Offset = "0x14385D4", VA = "0x14385D4")]
	private static CSVMonster_spawn_one Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x14387D8", Offset = "0x14387D8", VA = "0x14387D8")]
	public static CSVMonster_spawn_one GetMonster_spawn_one(int id)
	{
		return null;
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x14386B8", Offset = "0x14386B8", VA = "0x14386B8")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x143889C", Offset = "0x143889C", VA = "0x143889C")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x1438E78", Offset = "0x1438E78", VA = "0x1438E78")]
	public CSVMonster_spawn_one()
	{
	}
}
[Token(Token = "0x20002A2")]
public class CSVMonster_spawn_three
{
	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_spawn_three> data_list;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int areaId;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wave;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int time;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pointId;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int monsterId;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int spawnCount;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int spawnDelay;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int suicideDelayTime;

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x1438F08", Offset = "0x1438F08", VA = "0x1438F08")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x1438F50", Offset = "0x1438F50", VA = "0x1438F50")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x1439004", Offset = "0x1439004", VA = "0x1439004")]
	private static CSVMonster_spawn_three Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x1439208", Offset = "0x1439208", VA = "0x1439208")]
	public static CSVMonster_spawn_three GetMonster_spawn_three(int id)
	{
		return null;
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x14390E8", Offset = "0x14390E8", VA = "0x14390E8")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x14392CC", Offset = "0x14392CC", VA = "0x14392CC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x14398A8", Offset = "0x14398A8", VA = "0x14398A8")]
	public CSVMonster_spawn_three()
	{
	}
}
[Token(Token = "0x20002A3")]
public class CSVMonster_spawn_two
{
	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_spawn_two> data_list;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int areaId;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wave;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int time;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pointId;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int monsterId;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int spawnCount;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int spawnDelay;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int suicideDelayTime;

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x1439938", Offset = "0x1439938", VA = "0x1439938")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x1439980", Offset = "0x1439980", VA = "0x1439980")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x1439A34", Offset = "0x1439A34", VA = "0x1439A34")]
	private static CSVMonster_spawn_two Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x1439C38", Offset = "0x1439C38", VA = "0x1439C38")]
	public static CSVMonster_spawn_two GetMonster_spawn_two(int id)
	{
		return null;
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x1439B18", Offset = "0x1439B18", VA = "0x1439B18")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x1439CFC", Offset = "0x1439CFC", VA = "0x1439CFC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x143A2D8", Offset = "0x143A2D8", VA = "0x143A2D8")]
	public CSVMonster_spawn_two()
	{
	}
}
[Token(Token = "0x20002A4")]
public class CSVMonster_summon
{
	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_summon> data_list;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int monster;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int areaId;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int wave;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int time;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int pointId;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int monsterId;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int spawnCount;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int spawnDelay;

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x143A368", Offset = "0x143A368", VA = "0x143A368")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x143A3B0", Offset = "0x143A3B0", VA = "0x143A3B0")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x143A464", Offset = "0x143A464", VA = "0x143A464")]
	private static CSVMonster_summon Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x143A668", Offset = "0x143A668", VA = "0x143A668")]
	public static CSVMonster_summon GetMonster_summon(int id)
	{
		return null;
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x143A548", Offset = "0x143A548", VA = "0x143A548")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x143A72C", Offset = "0x143A72C", VA = "0x143A72C")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x143AD08", Offset = "0x143AD08", VA = "0x143AD08")]
	public CSVMonster_summon()
	{
	}
}
[Token(Token = "0x20002A5")]
public class CSVPlayer
{
	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVPlayer> data_list;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int type;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hpRecoverInterval;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hpRecoverValue;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int score;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string name;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string info;

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x143AD98", Offset = "0x143AD98", VA = "0x143AD98")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x143ADE0", Offset = "0x143ADE0", VA = "0x143ADE0")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x143AE94", Offset = "0x143AE94", VA = "0x143AE94")]
	private static CSVPlayer Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x143B098", Offset = "0x143B098", VA = "0x143B098")]
	public static CSVPlayer GetPlayer(int id)
	{
		return null;
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x143AF78", Offset = "0x143AF78", VA = "0x143AF78")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x143B15C", Offset = "0x143B15C", VA = "0x143B15C")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x143B7B4", Offset = "0x143B7B4", VA = "0x143B7B4")]
	public CSVPlayer()
	{
	}
}
[Token(Token = "0x20002A6")]
public class CSVPlayer_level
{
	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVPlayer_level> data_list;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int player_id;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int lv;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int exp;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x143B844", Offset = "0x143B844", VA = "0x143B844")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x143B88C", Offset = "0x143B88C", VA = "0x143B88C")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x143B940", Offset = "0x143B940", VA = "0x143B940")]
	private static CSVPlayer_level Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x143BB44", Offset = "0x143BB44", VA = "0x143BB44")]
	public static CSVPlayer_level GetPlayer_level(int id)
	{
		return null;
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x143BA24", Offset = "0x143BA24", VA = "0x143BA24")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x143BC08", Offset = "0x143BC08", VA = "0x143BC08")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x143C198", Offset = "0x143C198", VA = "0x143C198")]
	public CSVPlayer_level()
	{
	}
}
[Token(Token = "0x20002A7")]
public class CSVSetting
{
	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVSetting> data_list;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Info;

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x143C228", Offset = "0x143C228", VA = "0x143C228")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x143C270", Offset = "0x143C270", VA = "0x143C270")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x143C324", Offset = "0x143C324", VA = "0x143C324")]
	private static CSVSetting Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x143C528", Offset = "0x143C528", VA = "0x143C528")]
	public static CSVSetting GetSetting(int id)
	{
		return null;
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x143C408", Offset = "0x143C408", VA = "0x143C408")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x143C5EC", Offset = "0x143C5EC", VA = "0x143C5EC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x143CB20", Offset = "0x143CB20", VA = "0x143CB20")]
	public CSVSetting()
	{
	}
}
[Token(Token = "0x20002A8")]
public class CSVWeapon
{
	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWeapon> data_list;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int bulletCount;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MagazineCount;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int headPer;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int fireInterval;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int scatterRadius;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int recoil;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int bulletForce;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string info;

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x143CBB0", Offset = "0x143CBB0", VA = "0x143CBB0")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x143CBF8", Offset = "0x143CBF8", VA = "0x143CBF8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x143CCAC", Offset = "0x143CCAC", VA = "0x143CCAC")]
	private static CSVWeapon Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x143CEB0", Offset = "0x143CEB0", VA = "0x143CEB0")]
	public static CSVWeapon GetWeapon(int id)
	{
		return null;
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x143CD90", Offset = "0x143CD90", VA = "0x143CD90")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x143CF74", Offset = "0x143CF74", VA = "0x143CF74")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x143D65C", Offset = "0x143D65C", VA = "0x143D65C")]
	public CSVWeapon()
	{
	}
}
[Token(Token = "0x20002A9")]
public class CSVWeapon_level
{
	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWeapon_level> data_list;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int weapon_id;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int lv;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int bulletCount;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int magazineCount;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int atk;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x143D6EC", Offset = "0x143D6EC", VA = "0x143D6EC")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x143D734", Offset = "0x143D734", VA = "0x143D734")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x143D7E8", Offset = "0x143D7E8", VA = "0x143D7E8")]
	private static CSVWeapon_level Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x143D9EC", Offset = "0x143D9EC", VA = "0x143D9EC")]
	public static CSVWeapon_level GetWeapon_level(int id)
	{
		return null;
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x143D8CC", Offset = "0x143D8CC", VA = "0x143D8CC")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x143DAB0", Offset = "0x143DAB0", VA = "0x143DAB0")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x143E070", Offset = "0x143E070", VA = "0x143E070")]
	public CSVWeapon_level()
	{
	}
}
[Token(Token = "0x20002AA")]
public class CSVWwise_ambient_video
{
	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWwise_ambient_video> data_list;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int videoID;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int time;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int point;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int eventID;

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x143E100", Offset = "0x143E100", VA = "0x143E100")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x143E148", Offset = "0x143E148", VA = "0x143E148")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x143E1FC", Offset = "0x143E1FC", VA = "0x143E1FC")]
	private static CSVWwise_ambient_video Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x143E400", Offset = "0x143E400", VA = "0x143E400")]
	public static CSVWwise_ambient_video GetWwise_ambient_video(int id)
	{
		return null;
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x143E2E0", Offset = "0x143E2E0", VA = "0x143E2E0")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x143E4C4", Offset = "0x143E4C4", VA = "0x143E4C4")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x143E9E0", Offset = "0x143E9E0", VA = "0x143E9E0")]
	public CSVWwise_ambient_video()
	{
	}
}
[Token(Token = "0x20002AB")]
public class CSVWwise_animation_define_setting
{
	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWwise_animation_define_setting> data_list;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelId;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string animationName;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLoop;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int frame;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> region;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int audioEventID;

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x143EA70", Offset = "0x143EA70", VA = "0x143EA70")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x143EAB8", Offset = "0x143EAB8", VA = "0x143EAB8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x143EB6C", Offset = "0x143EB6C", VA = "0x143EB6C")]
	private static CSVWwise_animation_define_setting Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x143ED70", Offset = "0x143ED70", VA = "0x143ED70")]
	public static CSVWwise_animation_define_setting GetWwise_animation_define_setting(int id)
	{
		return null;
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x143EC50", Offset = "0x143EC50", VA = "0x143EC50")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x143EE34", Offset = "0x143EE34", VA = "0x143EE34")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x143F55C", Offset = "0x143F55C", VA = "0x143F55C")]
	public CSVWwise_animation_define_setting()
	{
	}
}
[Token(Token = "0x20002AC")]
public enum e_LiveCamera_Cell_Type
{
	[Token(Token = "0x40011C3")]
	None,
	[Token(Token = "0x40011C4")]
	PlayerPoint,
	[Token(Token = "0x40011C5")]
	FixPoint
}
[Token(Token = "0x20002AD")]
public enum e_LiveCamera_Model_Type
{
	[Token(Token = "0x40011C7")]
	None,
	[Token(Token = "0x40011C8")]
	AutoSwith,
	[Token(Token = "0x40011C9")]
	ManualSwith,
	[Token(Token = "0x40011CA")]
	Event,
	[Token(Token = "0x40011CB")]
	HighEvent
}
[Token(Token = "0x20002AE")]
public enum e_LiveCamera_Event_Type
{
	[Token(Token = "0x40011CD")]
	Default = -1,
	[Token(Token = "0x40011CE")]
	NormaRollBack = 10001,
	[Token(Token = "0x40011CF")]
	DropRollBack = 10002,
	[Token(Token = "0x40011D0")]
	LookDoorSign = 10003
}
[Token(Token = "0x20002AF")]
public enum e_LiveCamera_HighEvent_Type
{
	[Token(Token = "0x40011D2")]
	Default = -1,
	[Token(Token = "0x40011D3")]
	Win_A = 6000,
	[Token(Token = "0x40011D4")]
	Win_B = 6001,
	[Token(Token = "0x40011D5")]
	Start_look_player1 = 6010,
	[Token(Token = "0x40011D6")]
	Start_look_player2 = 6011,
	[Token(Token = "0x40011D7")]
	Start_look_player3 = 6012
}
[Token(Token = "0x20002B0")]
public enum e_LiveCamera_Step_Type
{
	[Token(Token = "0x40011D9")]
	CombatRoom = 990,
	[Token(Token = "0x40011DA")]
	Room = 10
}
[Token(Token = "0x20002B1")]
public class LiveCameraConfigData
{
	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int camId;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int step;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int model;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int site;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int siteType;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int priority;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int swithTime;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minTime;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string aside;

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x14879B0", Offset = "0x14879B0", VA = "0x14879B0")]
	public LiveCameraConfigData()
	{
	}
}
[Token(Token = "0x20002B2")]
public interface ILiveCameraDataCell
{
	[Token(Token = "0x60013BC")]
	int ID();

	[Token(Token = "0x60013BD")]
	void SetPos(Vector3 pos);

	[Token(Token = "0x60013BE")]
	void SetRot(Quaternion rot);

	[Token(Token = "0x60013BF")]
	Vector3 Pos();

	[Token(Token = "0x60013C0")]
	Quaternion Rot();
}
[Token(Token = "0x20002B3")]
public class LiveCameraCustomDataCell : ILiveCameraDataCell
{
	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int site;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int id;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 mPos;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion mRot;

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x14879B8", Offset = "0x14879B8", VA = "0x14879B8", Slot = "4")]
	public int ID()
	{
		return default(int);
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x14879C0", Offset = "0x14879C0", VA = "0x14879C0")]
	public void Init(int site, int id)
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x1487D8C", Offset = "0x1487D8C", VA = "0x1487D8C")]
	public void UnInit(int site)
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x148812C", Offset = "0x148812C", VA = "0x148812C", Slot = "5")]
	public void SetPos(Vector3 pos)
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x1488138", Offset = "0x1488138", VA = "0x1488138", Slot = "6")]
	public void SetRot(Quaternion rot)
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x1488144", Offset = "0x1488144", VA = "0x1488144", Slot = "7")]
	public Vector3 Pos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x1488150", Offset = "0x1488150", VA = "0x1488150", Slot = "8")]
	public Quaternion Rot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x148815C", Offset = "0x148815C", VA = "0x148815C")]
	public LiveCameraCustomDataCell()
	{
	}
}
[Token(Token = "0x20002B4")]
public class LiveCameraDataCell : MonoBehaviour, ILiveCameraDataCell
{
	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_LiveCamera_Cell_Type CellType;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject mObj;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int id;

	[Token(Token = "0x170001A2")]
	public GameObject SelfPoint
	{
		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x148820C", Offset = "0x148820C", VA = "0x148820C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x1488214", Offset = "0x1488214", VA = "0x1488214", Slot = "4")]
	public int ID()
	{
		return default(int);
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x148821C", Offset = "0x148821C", VA = "0x148821C", Slot = "5")]
	public void SetPos(Vector3 pos)
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x1488220", Offset = "0x1488220", VA = "0x1488220", Slot = "6")]
	public void SetRot(Quaternion rot)
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x1488224", Offset = "0x1488224", VA = "0x1488224", Slot = "7")]
	public Vector3 Pos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x14882E8", Offset = "0x14882E8", VA = "0x14882E8", Slot = "8")]
	public Quaternion Rot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x14883AC", Offset = "0x14883AC", VA = "0x14883AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x14883E4", Offset = "0x14883E4", VA = "0x14883E4")]
	private void PareseID()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x1488548", Offset = "0x1488548", VA = "0x1488548")]
	public void Init(int site)
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x1488798", Offset = "0x1488798", VA = "0x1488798")]
	public void UnInit(int site)
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x14888A8", Offset = "0x14888A8", VA = "0x14888A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x1488B50", Offset = "0x1488B50", VA = "0x1488B50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x1488DF0", Offset = "0x1488DF0", VA = "0x1488DF0")]
	public LiveCameraDataCell()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B5")]
public class LiveCameraGameWinPoint
{
	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Point;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Time;

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x14893A4", Offset = "0x14893A4", VA = "0x14893A4")]
	public LiveCameraGameWinPoint()
	{
	}
}
[Token(Token = "0x20002B6")]
public class LiveCameraGameWinDataCell : LiveCameraDataCell
{
	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<LiveCameraGameWinPoint> OtherShotList;

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x1489320", Offset = "0x1489320", VA = "0x1489320")]
	public LiveCameraGameWinDataCell()
	{
	}
}
[Token(Token = "0x20002B7")]
public class LiveCameraManager : Singleton<LiveCameraManager>
{
	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD9688", Offset = "0xFD9688")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsEnter;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int CurStep;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<LiveCameraConfigData> curStepLCConfigDataList;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, LiveCameraConfigData> curCommonLCConfigDataDic;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, Dictionary<int, ILiveCameraDataCell>> AutoExPlayerDataCellDic;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, ILiveCameraDataCell> AutoExFixDataCellDic;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private e_LiveCamera_Model_Type mCurCameraModelStatus;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<e_LiveCamera_Model_Type, LiveCameraModelBase> lcModelDic;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LiveCameraModelBase mCurRunningModel;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isLCPause;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<int> ChangeStepAct;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<e_LiveCamera_Model_Type, List<LiveCameraConfigData>> ChangeModelAct;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<e_LiveCamera_Model_Type, int, LiveCameraConfigData, ILiveCameraDataCell> ChangeShotAct;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<e_LiveCamera_Model_Type, int, LiveCameraConfigData, ILiveCameraDataCell> ChangeShotInAct;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<e_LiveCamera_Model_Type, int, LiveCameraConfigData> ChangeShotOutAct;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<int, int, ILiveCameraDataCell> LiveDataCellChange;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int curSpecialSite;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool NoCamSmooth;

	[Token(Token = "0x170001A3")]
	public Camera camera
	{
		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x148A3C0", Offset = "0x148A3C0", VA = "0x148A3C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE564", Offset = "0xFDE564")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x148A3C8", Offset = "0x148A3C8", VA = "0x148A3C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE574", Offset = "0xFDE574")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A4")]
	public int CurSpecialSite
	{
		[Token(Token = "0x6001400")]
		[Address(RVA = "0x148C15C", Offset = "0x148C15C", VA = "0x148C15C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001401")]
		[Address(RVA = "0x148C164", Offset = "0x148C164", VA = "0x148C164")]
		set
		{
		}
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x148A3D0", Offset = "0x148A3D0", VA = "0x148A3D0")]
	public void ChangeStep(e_LiveCamera_Step_Type step)
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x148A3D4", Offset = "0x148A3D4", VA = "0x148A3D4")]
	public void ChangeStep(int step)
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x148A598", Offset = "0x148A598", VA = "0x148A598")]
	public void TriggerEvent(int site, e_LiveCamera_Event_Type eType)
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x148A9FC", Offset = "0x148A9FC", VA = "0x148A9FC")]
	public void ManualSellect(int site, bool isChaneModel = false)
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x148AD9C", Offset = "0x148AD9C", VA = "0x148AD9C")]
	public void EnableManualModel(bool isEnable)
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x148AF48", Offset = "0x148AF48", VA = "0x148AF48")]
	public void ChangeHighEvent(e_LiveCamera_HighEvent_Type eventType)
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x148B20C", Offset = "0x148B20C", VA = "0x148B20C")]
	public void SetEnable(bool status, bool isSetCam = false)
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x148A488", Offset = "0x148A488", VA = "0x148A488")]
	private void DoChangeStep(int step)
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x148B3FC", Offset = "0x148B3FC", VA = "0x148B3FC")]
	private bool SetAllModel(int step)
	{
		return default(bool);
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x148B86C", Offset = "0x148B86C", VA = "0x148B86C")]
	private void UnLoadAllModel()
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x148B674", Offset = "0x148B674", VA = "0x148B674")]
	private bool ChangeModelStatus(e_LiveCamera_Model_Type model, int site = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x148A654", Offset = "0x148A654", VA = "0x148A654")]
	private void DoTriggerEvent(int site, e_LiveCamera_Event_Type eType)
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x148AAB8", Offset = "0x148AAB8", VA = "0x148AAB8")]
	private void DoManualSellect(int site, bool isChaneModel = false)
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x148BAA4", Offset = "0x148BAA4", VA = "0x148BAA4")]
	private bool RejectManual()
	{
		return default(bool);
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x148BBB0", Offset = "0x148BBB0", VA = "0x148BBB0")]
	private bool RejectManual(int site)
	{
		return default(bool);
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x148BBB4", Offset = "0x148BBB4", VA = "0x148BBB4")]
	private bool RejectAuto()
	{
		return default(bool);
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x148AE50", Offset = "0x148AE50", VA = "0x148AE50")]
	private bool DoEnableManualModel(bool isEnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x148AFFC", Offset = "0x148AFFC", VA = "0x148AFFC")]
	private void DoTriggerHighEvent(e_LiveCamera_HighEvent_Type eventType)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x148B9A0", Offset = "0x148B9A0", VA = "0x148B9A0")]
	private bool RejectEvent(LiveCameraConfigData config)
	{
		return default(bool);
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x148BCC0", Offset = "0x148BCC0", VA = "0x148BCC0")]
	public bool CanCover(LiveCameraConfigData tgConfig, LiveCameraModelBase model)
	{
		return default(bool);
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x1480058", Offset = "0x1480058", VA = "0x1480058")]
	public bool CanCover(LiveCameraConfigData tgConfig, LiveCameraShotBase shot)
	{
		return default(bool);
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x147F464", Offset = "0x147F464", VA = "0x147F464")]
	public bool IsAIPlayer(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x148BF50", Offset = "0x148BF50", VA = "0x148BF50")]
	private void CleanOutPutEvent()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x1487A54", Offset = "0x1487A54", VA = "0x1487A54")]
	public void RegisterPlayerCell(int site, ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x14889B0", Offset = "0x14889B0", VA = "0x14889B0")]
	public void RegisterFixCell(ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x148914C", Offset = "0x148914C", VA = "0x148914C")]
	public void UnRegisterBySite(int site)
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x1488C58", Offset = "0x1488C58", VA = "0x1488C58")]
	public void UnRegisterByCell(ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x1487E18", Offset = "0x1487E18", VA = "0x1487E18")]
	public void UnRegisterBySiteAndCell(int site, ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x147F0EC", Offset = "0x147F0EC", VA = "0x147F0EC")]
	public ILiveCameraDataCell GetLiveCameraPlayerDataCell(int site, int camId)
	{
		return null;
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x147F524", Offset = "0x147F524", VA = "0x147F524")]
	public ILiveCameraDataCell GetLiveCameraFixDataCell(int camId)
	{
		return null;
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x147F334", Offset = "0x147F334", VA = "0x147F334")]
	public WUnit GetPlayerWUnitBySite(int site)
	{
		return null;
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x147F814", Offset = "0x147F814", VA = "0x147F814")]
	public void SetShotDataCell(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x14895D8", Offset = "0x14895D8", VA = "0x14895D8")]
	public bool IsPlayerSite(int site)
	{
		return default(bool);
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x1480000", Offset = "0x1480000", VA = "0x1480000")]
	public void SetShotDataCell(LiveCameraShotBase shot, int site)
	{
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x148BF84", Offset = "0x148BF84", VA = "0x148BF84")]
	public ILiveCameraDataCell LiveShotDataCell(LiveCameraConfigData config, out bool isAI)
	{
		return null;
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x148BFB8", Offset = "0x148BFB8", VA = "0x148BFB8")]
	public List<LiveCameraConfigData> GetModelConfigList(e_LiveCamera_Model_Type model)
	{
		return null;
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x148C0BC", Offset = "0x148C0BC", VA = "0x148C0BC")]
	public e_LiveCamera_Model_Type GetCurModel()
	{
		return default(e_LiveCamera_Model_Type);
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x148C0C4", Offset = "0x148C0C4", VA = "0x148C0C4")]
	public int GetCurRunningLiveShotSit()
	{
		return default(int);
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x148C16C", Offset = "0x148C16C", VA = "0x148C16C")]
	public void OnEnter(Camera camera)
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x148C280", Offset = "0x148C280", VA = "0x148C280")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x148C374", Offset = "0x148C374", VA = "0x148C374")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x148C3B8", Offset = "0x148C3B8", VA = "0x148C3B8")]
	public LiveCameraManager()
	{
	}
}
[Token(Token = "0x20002B8")]
public class LCAutoSwithModel : LiveCameraModelBase
{
	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LiveCameraConfigData> curAutoSwithConfigDataList;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LiveCameraShotBase> SwithShotList;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curIndex;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int preTargetIndex;

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x147E368", Offset = "0x147E368", VA = "0x147E368", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x147E3EC", Offset = "0x147E3EC", VA = "0x147E3EC", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x147EA5C", Offset = "0x147EA5C", VA = "0x147EA5C", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x147EB6C", Offset = "0x147EB6C", VA = "0x147EB6C", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x147EB98", Offset = "0x147EB98", VA = "0x147EB98", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x147EC1C", Offset = "0x147EC1C", VA = "0x147EC1C", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x147ECC4", Offset = "0x147ECC4", VA = "0x147ECC4", Slot = "5")]
	public override List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x147ECCC", Offset = "0x147ECCC", VA = "0x147ECCC", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x147ECE4", Offset = "0x147ECE4", VA = "0x147ECE4", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x147ECFC", Offset = "0x147ECFC", VA = "0x147ECFC", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x147ED14", Offset = "0x147ED14", VA = "0x147ED14", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x147ED88", Offset = "0x147ED88", VA = "0x147ED88")]
	public void PreSetSelectCam(int tSite)
	{
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x147F618", Offset = "0x147F618", VA = "0x147F618")]
	private int GetPreSelectCam()
	{
		return default(int);
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x147F620", Offset = "0x147F620", VA = "0x147F620")]
	public void SetData(List<LiveCameraConfigData> stepList)
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x147EA74", Offset = "0x147EA74", VA = "0x147EA74")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x147E4EC", Offset = "0x147E4EC", VA = "0x147E4EC")]
	private bool ChangeNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x147E450", Offset = "0x147E450", VA = "0x147E450")]
	private void SetShotDataCell()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x147F8A0", Offset = "0x147F8A0", VA = "0x147F8A0")]
	public LCAutoSwithModel()
	{
	}
}
[Token(Token = "0x20002B9")]
public class LCEventModel : LiveCameraModelBase
{
	[Token(Token = "0x6001418")]
	[Address(RVA = "0x147F958", Offset = "0x147F958", VA = "0x147F958", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x147F994", Offset = "0x147F994", VA = "0x147F994", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x147F9A0", Offset = "0x147F9A0", VA = "0x147F9A0", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x147F9EC", Offset = "0x147F9EC", VA = "0x147F9EC", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x147FA34", Offset = "0x147FA34", VA = "0x147FA34", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x147FA3C", Offset = "0x147FA3C", VA = "0x147FA3C", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x147FA54", Offset = "0x147FA54", VA = "0x147FA54", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x147FA6C", Offset = "0x147FA6C", VA = "0x147FA6C", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x147FA84", Offset = "0x147FA84", VA = "0x147FA84", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x147FAA0", Offset = "0x147FAA0", VA = "0x147FAA0", Slot = "12")]
	public override void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x147FC44", Offset = "0x147FC44", VA = "0x147FC44")]
	public void ChangeEvent(int site, LiveCameraConfigData config)
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x147FF4C", Offset = "0x147FF4C", VA = "0x147FF4C")]
	private void SetEvent(int site, LiveCameraConfigData config)
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x147FA18", Offset = "0x147FA18", VA = "0x147FA18")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x147FF30", Offset = "0x147FF30", VA = "0x147FF30")]
	private bool CanCover(LiveCameraConfigData config)
	{
		return default(bool);
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x147F9A8", Offset = "0x147F9A8", VA = "0x147F9A8")]
	private void ResetAllData()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x14802DC", Offset = "0x14802DC", VA = "0x14802DC", Slot = "6")]
	public override void ChangeShot(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x1480344", Offset = "0x1480344", VA = "0x1480344")]
	public LCEventModel()
	{
	}
}
[Token(Token = "0x20002BA")]
public class LCHighEventModel : LiveCameraModelBase
{
	[Token(Token = "0x6001429")]
	[Address(RVA = "0x148034C", Offset = "0x148034C", VA = "0x148034C", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x1480388", Offset = "0x1480388", VA = "0x1480388", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x1480394", Offset = "0x1480394", VA = "0x1480394", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x14803E0", Offset = "0x14803E0", VA = "0x14803E0", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x1480428", Offset = "0x1480428", VA = "0x1480428", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x1480430", Offset = "0x1480430", VA = "0x1480430", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x1480448", Offset = "0x1480448", VA = "0x1480448", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x1480460", Offset = "0x1480460", VA = "0x1480460", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0x1480478", Offset = "0x1480478", VA = "0x1480478", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0x1480494", Offset = "0x1480494", VA = "0x1480494", Slot = "12")]
	public override void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0x1480638", Offset = "0x1480638", VA = "0x1480638")]
	public void ChangeEvent(e_LiveCamera_HighEvent_Type eventType, LiveCameraConfigData config)
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0x1480814", Offset = "0x1480814", VA = "0x1480814")]
	private void SetEvent(e_LiveCamera_HighEvent_Type eventType, LiveCameraConfigData config, ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x148040C", Offset = "0x148040C", VA = "0x148040C")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x14807F8", Offset = "0x14807F8", VA = "0x14807F8")]
	private bool CanCover(LiveCameraConfigData config)
	{
		return default(bool);
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x148039C", Offset = "0x148039C", VA = "0x148039C")]
	private void ResetAllData()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x1480984", Offset = "0x1480984", VA = "0x1480984", Slot = "6")]
	public override void ChangeShot(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x14809EC", Offset = "0x14809EC", VA = "0x14809EC")]
	public LCHighEventModel()
	{
	}
}
[Token(Token = "0x20002BB")]
public class LCManualSwithModel : LiveCameraModelBase
{
	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LiveCameraConfigData> sellectShotConfigDic;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, LiveCameraShotBase> sellectShotDic;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curSellectSite;

	[Token(Token = "0x170001A5")]
	public int CurSellectSite
	{
		[Token(Token = "0x600143A")]
		[Address(RVA = "0x14809F4", Offset = "0x14809F4", VA = "0x14809F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600143B")]
		[Address(RVA = "0x14809FC", Offset = "0x14809FC", VA = "0x14809FC")]
		set
		{
		}
	}

	[Token(Token = "0x170001A6")]
	public List<LiveCameraConfigData> SellectShotConfigDic
	{
		[Token(Token = "0x600143C")]
		[Address(RVA = "0x1480A04", Offset = "0x1480A04", VA = "0x1480A04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x1480A0C", Offset = "0x1480A0C", VA = "0x1480A0C", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x1480A48", Offset = "0x1480A48", VA = "0x1480A48", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x1481180", Offset = "0x1481180", VA = "0x1481180", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x14811C8", Offset = "0x14811C8", VA = "0x14811C8", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x1481210", Offset = "0x1481210", VA = "0x1481210", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x1481234", Offset = "0x1481234", VA = "0x1481234", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x14812D4", Offset = "0x14812D4", VA = "0x14812D4", Slot = "5")]
	public override List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x14812DC", Offset = "0x14812DC", VA = "0x14812DC", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x1481350", Offset = "0x1481350", VA = "0x1481350", Slot = "12")]
	public override void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x1480BAC", Offset = "0x1480BAC", VA = "0x1480BAC")]
	private bool IsSiteOk(int sellectSite)
	{
		return default(bool);
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x1480CAC", Offset = "0x1480CAC", VA = "0x1480CAC")]
	private int GetFirstOkSite()
	{
		return default(int);
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x1481520", Offset = "0x1481520", VA = "0x1481520")]
	private ILiveCameraDataCell GetLCDataCell(LiveCameraShotBase shot, int site, int camId)
	{
		return null;
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x1481598", Offset = "0x1481598", VA = "0x1481598")]
	public void SetData(List<LiveCameraConfigData> stepList)
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x14811AC", Offset = "0x14811AC", VA = "0x14811AC")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x1480D98", Offset = "0x1480D98", VA = "0x1480D98")]
	private void Change(int site)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x1480A9C", Offset = "0x1480A9C", VA = "0x1480A9C")]
	private void SetShotDataCell()
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x1481768", Offset = "0x1481768", VA = "0x1481768")]
	public LCManualSwithModel()
	{
	}
}
[Token(Token = "0x20002BC")]
public class LCRandFixedModel : LiveCameraModelBase
{
	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LiveCameraConfigData> curAutoSwithConfigDataList;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LiveCameraShotBase> SwithShotList;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curIndex;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> successIndexList;

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x1481820", Offset = "0x1481820", VA = "0x1481820", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x1481868", Offset = "0x1481868", VA = "0x1481868", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x1481E0C", Offset = "0x1481E0C", VA = "0x1481E0C", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x1481F1C", Offset = "0x1481F1C", VA = "0x1481F1C", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x1481F40", Offset = "0x1481F40", VA = "0x1481F40", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x1481FA4", Offset = "0x1481FA4", VA = "0x1481FA4", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x1482044", Offset = "0x1482044", VA = "0x1482044", Slot = "5")]
	public override List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x148204C", Offset = "0x148204C", VA = "0x148204C", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x1482064", Offset = "0x1482064", VA = "0x1482064", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x148207C", Offset = "0x148207C", VA = "0x148207C", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x1482094", Offset = "0x1482094", VA = "0x1482094", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x1482108", Offset = "0x1482108", VA = "0x1482108")]
	public void SetData(List<LiveCameraConfigData> stepList)
	{
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x1481E24", Offset = "0x1481E24", VA = "0x1481E24")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x148195C", Offset = "0x148195C", VA = "0x148195C")]
	private bool DoRandFixed()
	{
		return default(bool);
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x14818C0", Offset = "0x14818C0", VA = "0x14818C0")]
	private void SetShotDataCell()
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x1482210", Offset = "0x1482210", VA = "0x1482210")]
	public LCRandFixedModel()
	{
	}
}
[Token(Token = "0x20002BD")]
public class LiveCameraModelBase
{
	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool IsInit;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool IsRunning;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Camera mAffectCam;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected LiveCameraShotBase CurLCAction;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LiveCameraManager LCMgr;

	[Token(Token = "0x170001A7")]
	public LiveCameraShotBase CurRunLCAction
	{
		[Token(Token = "0x600145E")]
		[Address(RVA = "0x148C9D8", Offset = "0x148C9D8", VA = "0x148C9D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x147E3B0", Offset = "0x147E3B0", VA = "0x147E3B0", Slot = "4")]
	public virtual void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x148C9E0", Offset = "0x148C9E0", VA = "0x148C9E0", Slot = "5")]
	public virtual List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x148C9E8", Offset = "0x148C9E8", VA = "0x148C9E8", Slot = "6")]
	public virtual void ChangeShot(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x148CA50", Offset = "0x148CA50", VA = "0x148CA50", Slot = "7")]
	public virtual int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x148CA58", Offset = "0x148CA58", VA = "0x148CA58", Slot = "8")]
	public virtual bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0x148CA60", Offset = "0x148CA60", VA = "0x148CA60", Slot = "9")]
	public virtual bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x148CA68", Offset = "0x148CA68", VA = "0x148CA68", Slot = "10")]
	public virtual bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x148CA70", Offset = "0x148CA70", VA = "0x148CA70", Slot = "11")]
	public virtual void SetStep(int step)
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x148CA74", Offset = "0x148CA74", VA = "0x148CA74", Slot = "12")]
	public virtual void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x147E444", Offset = "0x147E444", VA = "0x147E444", Slot = "13")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x148CA78", Offset = "0x148CA78", VA = "0x148CA78", Slot = "14")]
	public virtual void Update(float delta)
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x147EB90", Offset = "0x147EB90", VA = "0x147EB90", Slot = "15")]
	public virtual void Pause()
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x147EBFC", Offset = "0x147EBFC", VA = "0x147EBFC", Slot = "16")]
	public virtual void Restart()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x147ECBC", Offset = "0x147ECBC", VA = "0x147ECBC", Slot = "17")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x147F950", Offset = "0x147F950", VA = "0x147F950")]
	public LiveCameraModelBase()
	{
	}
}
[Token(Token = "0x20002BE")]
public class LiveCameraDataCollector : MonoBehaviour
{
	[Token(Token = "0x2000536")]
	[SerializeField]
	public enum e_PlayerDataCell_Type
	{
		[Token(Token = "0x4001DB2")]
		None,
		[Token(Token = "0x4001DB3")]
		FirstPlayer,
		[Token(Token = "0x4001DB4")]
		ThirdPlayer
	}

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_PlayerDataCell_Type DataCell_Type;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int FirstCamId;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LiveCameraDataCell> CellList;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WUnit owner;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int curSite;

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x1488E00", Offset = "0x1488E00", VA = "0x1488E00")]
	public void Init()
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x14890A8", Offset = "0x14890A8", VA = "0x14890A8")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x1489290", Offset = "0x1489290", VA = "0x1489290")]
	public LiveCameraDataCollector()
	{
	}
}
[Token(Token = "0x20002BF")]
public class LiveCameraGameWinShot : LiveCameraShotBase
{
	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float switchSpeed;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LiveCameraGameWinDataCell realDataCell;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float curUseTime;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float curRunningTime;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int curIndex;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject pointObj;

	[Token(Token = "0x6001471")]
	[Address(RVA = "0x14893AC", Offset = "0x14893AC", VA = "0x14893AC", Slot = "12")]
	public override void Init(Camera cam, LiveCameraConfigData config, e_LiveCamera_Model_Type model)
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0x1489540", Offset = "0x1489540", VA = "0x1489540", Slot = "9")]
	public override bool IsPlayerSite()
	{
		return default(bool);
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0x14895E8", Offset = "0x14895E8", VA = "0x14895E8", Slot = "11")]
	public override void SetDataCell(ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0x1489698", Offset = "0x1489698", VA = "0x1489698", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0x1489A30", Offset = "0x1489A30", VA = "0x1489A30", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0x1489980", Offset = "0x1489980", VA = "0x1489980")]
	private void StartCameraPoint()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x148A0D0", Offset = "0x148A0D0", VA = "0x148A0D0")]
	private LiveCameraGameWinPoint GetCurPointData(int index)
	{
		return null;
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x1489B54", Offset = "0x1489B54", VA = "0x1489B54")]
	private void NextCameraPoint()
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x1489D90", Offset = "0x1489D90", VA = "0x1489D90")]
	private void DoUpdateCamera()
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x148A1B4", Offset = "0x148A1B4", VA = "0x148A1B4", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0x148A264", Offset = "0x148A264", VA = "0x148A264", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x148A32C", Offset = "0x148A32C", VA = "0x148A32C", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x1480968", Offset = "0x1480968", VA = "0x1480968")]
	public LiveCameraGameWinShot()
	{
	}
}
[Token(Token = "0x20002C0")]
public class LiveCameraManualShot : LiveCameraNormalShot
{
	[Token(Token = "0x600147E")]
	[Address(RVA = "0x148C4D8", Offset = "0x148C4D8", VA = "0x148C4D8", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0x1481764", Offset = "0x1481764", VA = "0x1481764")]
	public LiveCameraManualShot()
	{
	}
}
[Token(Token = "0x20002C1")]
public class LiveCameraNormalShot : LiveCameraShotBase
{
	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float switchSpeed;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 prePos;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 curPos;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float posQuickDistance;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion preRot;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion curRot;

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x148CA7C", Offset = "0x148CA7C", VA = "0x148CA7C", Slot = "12")]
	public override void Init(Camera cam, LiveCameraConfigData config, e_LiveCamera_Model_Type model)
	{
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x148CAE0", Offset = "0x148CAE0", VA = "0x148CAE0", Slot = "9")]
	public override bool IsPlayerSite()
	{
		return default(bool);
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x148CB78", Offset = "0x148CB78", VA = "0x148CB78", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x148CD94", Offset = "0x148CD94", VA = "0x148CD94", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x148C578", Offset = "0x148C578", VA = "0x148C578")]
	protected void DoUpdateCamera(ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x148CE78", Offset = "0x148CE78", VA = "0x148CE78", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x148CE7C", Offset = "0x148CE7C", VA = "0x148CE7C", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x148CE80", Offset = "0x148CE80", VA = "0x148CE80", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x147F728", Offset = "0x147F728", VA = "0x147F728")]
	public LiveCameraNormalShot()
	{
	}
}
[Token(Token = "0x20002C2")]
public class LiveCameraShotBase
{
	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LiveCameraConfigData ConfigData;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ILiveCameraDataCell DataCell;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera AffectCam;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RunningTime;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float MinTime;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float SwithTime;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected int Site;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected e_LiveCamera_Model_Type LCCamModel;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int RealSite;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int mPriority;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected bool IsInit;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool IsRunning;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool mIsFinish;

	[Token(Token = "0x170001A8")]
	public int Priority
	{
		[Token(Token = "0x6001489")]
		[Address(RVA = "0x148CEC0", Offset = "0x148CEC0", VA = "0x148CEC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A9")]
	public virtual bool IsFinish
	{
		[Token(Token = "0x600148A")]
		[Address(RVA = "0x148CEC8", Offset = "0x148CEC8", VA = "0x148CEC8", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600148B")]
		[Address(RVA = "0x148CED0", Offset = "0x148CED0", VA = "0x148CED0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public virtual int SRealSite
	{
		[Token(Token = "0x600148C")]
		[Address(RVA = "0x148CEDC", Offset = "0x148CEDC", VA = "0x148CEDC", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x148CEE4", Offset = "0x148CEE4", VA = "0x148CEE4")]
	public void SetRealSite(int site)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x147EC08", Offset = "0x147EC08", VA = "0x147EC08")]
	public void HalfCurTime()
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x147F80C", Offset = "0x147F80C", VA = "0x147F80C")]
	public void TotalCurTime()
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x148CEEC", Offset = "0x148CEEC", VA = "0x148CEEC", Slot = "7")]
	public virtual bool IsMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0x148CEFC", Offset = "0x148CEFC", VA = "0x148CEFC", Slot = "8")]
	public virtual bool IsSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x148CF10", Offset = "0x148CF10", VA = "0x148CF10", Slot = "9")]
	public virtual bool IsPlayerSite()
	{
		return default(bool);
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0x148CF18", Offset = "0x148CF18", VA = "0x148CF18", Slot = "10")]
	public virtual bool IsDataCell()
	{
		return default(bool);
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x148CF28", Offset = "0x148CF28", VA = "0x148CF28", Slot = "11")]
	public virtual void SetDataCell(ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x1489410", Offset = "0x1489410", VA = "0x1489410", Slot = "12")]
	public virtual void Init(Camera cam, LiveCameraConfigData config, e_LiveCamera_Model_Type model)
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x14898BC", Offset = "0x14898BC", VA = "0x14898BC", Slot = "13")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x148CF30", Offset = "0x148CF30", VA = "0x148CF30", Slot = "14")]
	public virtual void Update(float delta)
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x148A1B8", Offset = "0x148A1B8", VA = "0x148A1B8", Slot = "15")]
	public virtual void Pause()
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x148A268", Offset = "0x148A268", VA = "0x148A268", Slot = "16")]
	public virtual void Restart()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0x148A36C", Offset = "0x148A36C", VA = "0x148A36C", Slot = "17")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0x148A3AC", Offset = "0x148A3AC", VA = "0x148A3AC")]
	public LiveCameraShotBase()
	{
	}
}
[Token(Token = "0x20002C3")]
public class LiveShowActiveCell : MonoBehaviour
{
	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image icon;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text cname;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text kill;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text headshot;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text die;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text lv;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text score;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite DefaultSp;

	[Token(Token = "0x600149C")]
	[Address(RVA = "0x14A9DB4", Offset = "0x14A9DB4", VA = "0x14A9DB4")]
	public void Show(bool isShow)
	{
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0x14A9E18", Offset = "0x14A9E18", VA = "0x14A9E18")]
	public void SetDataCell(WUnit unit, StatisticalManager.StatisticalResultData scoreLimitCell)
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0x14A9E1C", Offset = "0x14A9E1C", VA = "0x14A9E1C")]
	public void UpdateView(WUnit unit, StatisticalManager.StatisticalResultData cellData)
	{
	}

	[Token(Token = "0x600149F")]
	[Address(RVA = "0x14AA148", Offset = "0x14AA148", VA = "0x14AA148")]
	public LiveShowActiveCell()
	{
	}
}
[Token(Token = "0x20002C4")]
public class LiveShowGridCell : MonoBehaviour
{
	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image icon;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text cname;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text hp;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image HpProgressBar;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text CurAmmo;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text CurMagazineAmmo;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image AmmoProgressBar;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Lv;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image weaponBG;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite DefaultSp;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite RevolverSp;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite AssaultRifleSp;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite SpearGunSp;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite RocketLauncherSp;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite MachineGunSp;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite SubMGunSp;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WUnit unit;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int maxValue;

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0x14AA150", Offset = "0x14AA150", VA = "0x14AA150")]
	public void Show(bool isShow)
	{
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x14AA1B4", Offset = "0x14AA1B4", VA = "0x14AA1B4")]
	public void SetDataCell(WUnit unit)
	{
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0x14AA6C4", Offset = "0x14AA6C4", VA = "0x14AA6C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x14AA1F0", Offset = "0x14AA1F0", VA = "0x14AA1F0")]
	public void UpdateView(WUnit unit)
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x14AA3A4", Offset = "0x14AA3A4", VA = "0x14AA3A4")]
	public void FreshData(WUnit unit)
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0x14AA6CC", Offset = "0x14AA6CC", VA = "0x14AA6CC")]
	public LiveShowGridCell()
	{
	}
}
[Token(Token = "0x20002C5")]
public class LiveShowView : BaseUI
{
	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ActiveCellRoot;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LiveShowActiveCell BlueActiveCell;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LevelViewManager LevelViewManager;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<LiveShowGridCell> LiveLeftGridList;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text min;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text second;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text millisecond;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text levelProcess;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private e_LiveCamera_Model_Type modelType;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int curSellectSite;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float freqTime;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float freqRunningTime;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float allTime;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string totalNumStr3;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string totalNumStr4;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string totalNumStr5;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string totalRoomStr;

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0x14AA6DC", Offset = "0x14AA6DC", VA = "0x14AA6DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0x14AA824", Offset = "0x14AA824", VA = "0x14AA824", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x14AA82C", Offset = "0x14AA82C", VA = "0x14AA82C", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x14AAA30", Offset = "0x14AAA30", VA = "0x14AAA30", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x14AABC0", Offset = "0x14AABC0", VA = "0x14AABC0", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x14AAC9C", Offset = "0x14AAC9C", VA = "0x14AAC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x14AAFC4", Offset = "0x14AAFC4", VA = "0x14AAFC4")]
	private void FreqUpdateView()
	{
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x14AAFD0", Offset = "0x14AAFD0", VA = "0x14AAFD0")]
	private void OnLiveShowEvent()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x14AAFD4", Offset = "0x14AAFD4", VA = "0x14AAFD4")]
	private void SetGroupItems(List<LiveShowGridCell> cellList)
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x14AB2B4", Offset = "0x14AB2B4", VA = "0x14AB2B4")]
	private void SetCurSellectShot()
	{
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x14AA9E4", Offset = "0x14AA9E4", VA = "0x14AA9E4")]
	public void RefreshViewInfo()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x14AB524", Offset = "0x14AB524", VA = "0x14AB524")]
	public LiveShowView()
	{
	}
}
[Token(Token = "0x20002C6")]
public class ManualSellectCell : BaseUI
{
	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image beSellect_Image;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image sellect_Image_bg;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EventTrigger enableBeSellect_Trigger;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Site_Text;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text IsAi_Text;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isSellect;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int site;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canSellect;

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x14B2650", Offset = "0x14B2650", VA = "0x14B2650", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x14B2744", Offset = "0x14B2744", VA = "0x14B2744", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x14B274C", Offset = "0x14B274C", VA = "0x14B274C")]
	public void SetLiveSitData(int site)
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x14B2834", Offset = "0x14B2834", VA = "0x14B2834")]
	public void SetSitSellect(bool isSellect)
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x14B287C", Offset = "0x14B287C", VA = "0x14B287C")]
	public void SetCustonStatus(bool canSellect, bool isAI = false)
	{
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0x14B2840", Offset = "0x14B2840", VA = "0x14B2840")]
	private void SetSellectStatus()
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0x14B294C", Offset = "0x14B294C", VA = "0x14B294C")]
	public void OnSellectClick()
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0x14B29E4", Offset = "0x14B29E4", VA = "0x14B29E4")]
	public void LockUI()
	{
	}

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0x14B29E8", Offset = "0x14B29E8", VA = "0x14B29E8")]
	public void UnLockUI()
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0x14B29EC", Offset = "0x14B29EC", VA = "0x14B29EC")]
	public ManualSellectCell()
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0x14B2A04", Offset = "0x14B2A04", VA = "0x14B2A04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE584", Offset = "0xFDE584")]
	private void <OnInit>b__8_0(BaseEventData data)
	{
	}
}
[Token(Token = "0x20002C7")]
public class ManualSellectView : BaseUI
{
	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GridLayoutGroup Sellect_Item_Grid;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject SellectItemPrefab;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Tittle_Text;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text Auto_Btn_Text;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LiveCameraConfigData> LiveCameraSellectList;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ManualSellectCell> SellectCellList;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image beSellect_Image;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EventTrigger enableBeSellect_Trigger;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private e_LiveCamera_Model_Type modelType;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool doInit;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TestEventSellectView TestView;

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0x14B2A08", Offset = "0x14B2A08", VA = "0x14B2A08", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0x14B2AFC", Offset = "0x14B2AFC", VA = "0x14B2AFC")]
	private void DoInit()
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0x14B2BF0", Offset = "0x14B2BF0", VA = "0x14B2BF0", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x14B2C20", Offset = "0x14B2C20", VA = "0x14B2C20", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x14B2C3C", Offset = "0x14B2C3C", VA = "0x14B2C3C", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x14B2C84", Offset = "0x14B2C84", VA = "0x14B2C84", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x14B2CCC", Offset = "0x14B2CCC", VA = "0x14B2CCC")]
	public void ShowItems(List<LiveCameraConfigData> list)
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x14B2D20", Offset = "0x14B2D20", VA = "0x14B2D20")]
	private void SetItems()
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0x14AC374", Offset = "0x14AC374", VA = "0x14AC374")]
	public void SetSellectItem()
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0x14B31E4", Offset = "0x14B31E4", VA = "0x14B31E4")]
	private void SetItemInfoStatus(LiveCameraConfigData config, ManualSellectCell cell)
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0x14AC804", Offset = "0x14AC804", VA = "0x14AC804")]
	public void FreshAllItemInfoStatus()
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0x14B3008", Offset = "0x14B3008", VA = "0x14B3008")]
	private ManualSellectCell AddAndChangeRoleItem(LiveCameraConfigData data)
	{
		return null;
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0x14B2F4C", Offset = "0x14B2F4C", VA = "0x14B2F4C")]
	private void RemoveRoleItem(ManualSellectCell cell)
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0x14B32D0", Offset = "0x14B32D0", VA = "0x14B32D0")]
	public void OnClickExchangeModel()
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0x14B334C", Offset = "0x14B334C", VA = "0x14B334C")]
	private void SetExchangeModelBtn()
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0x14AC2B4", Offset = "0x14AC2B4", VA = "0x14AC2B4")]
	public void RefreshViewInfol()
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0x14B33F0", Offset = "0x14B33F0", VA = "0x14B33F0")]
	public void ShowTest(string rslt)
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0x14B340C", Offset = "0x14B340C", VA = "0x14B340C")]
	public ManualSellectView()
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0x14B3488", Offset = "0x14B3488", VA = "0x14B3488")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE594", Offset = "0xFDE594")]
	private void <OnInit>b__11_0(BaseEventData data)
	{
	}
}
[Token(Token = "0x20002C8")]
public class TestEventSellectView : MonoBehaviour
{
	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventTrigger enableBeSellect_Trigger;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EventTrigger enableBeSellect_Trigger1;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EventTrigger enableBeSellect_TriggerAdd;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Player_Text;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int playerSite;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EventTrigger enableStep_Trigger1;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EventTrigger enableRestStep_Trigger1;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EventTrigger enableStep_TriggerAdd;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EventTrigger enableStep_TriggerHighEvent;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text Step_Text;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int step;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int heighEvent;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text Result_Text;

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0x145C7EC", Offset = "0x145C7EC", VA = "0x145C7EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x145CD0C", Offset = "0x145CD0C", VA = "0x145CD0C")]
	private void OnSellectClick()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x145CD10", Offset = "0x145CD10", VA = "0x145CD10")]
	private void OnSellectClick1()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x145CD14", Offset = "0x145CD14", VA = "0x145CD14")]
	private void OnSellectClickAdd()
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x145CBC4", Offset = "0x145CBC4", VA = "0x145CBC4")]
	private void SetPlayerSiteText()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x145CD2C", Offset = "0x145CD2C", VA = "0x145CD2C")]
	private void OnStepClick1()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x145CDAC", Offset = "0x145CDAC", VA = "0x145CDAC")]
	private void OnStepClickAdd()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x145CDC4", Offset = "0x145CDC4", VA = "0x145CDC4")]
	private void OnRestStepClick()
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x145CC68", Offset = "0x145CC68", VA = "0x145CC68")]
	private void SetStepText()
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x145CDCC", Offset = "0x145CDCC", VA = "0x145CDCC")]
	public void SetResultText(string rslt)
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x145CDF0", Offset = "0x145CDF0", VA = "0x145CDF0")]
	private void OnHighEventClick()
	{
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0x145CE90", Offset = "0x145CE90", VA = "0x145CE90")]
	public TestEventSellectView()
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x145CEAC", Offset = "0x145CEAC", VA = "0x145CEAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE5A4", Offset = "0xFDE5A4")]
	private void <Start>b__13_0(BaseEventData data)
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x145CEB0", Offset = "0x145CEB0", VA = "0x145CEB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE5B4", Offset = "0xFDE5B4")]
	private void <Start>b__13_1(BaseEventData data)
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x145CEB4", Offset = "0x145CEB4", VA = "0x145CEB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE5C4", Offset = "0xFDE5C4")]
	private void <Start>b__13_2(BaseEventData data)
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x145CECC", Offset = "0x145CECC", VA = "0x145CECC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE5D4", Offset = "0xFDE5D4")]
	private void <Start>b__13_3(BaseEventData data)
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x145CED0", Offset = "0x145CED0", VA = "0x145CED0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE5E4", Offset = "0xFDE5E4")]
	private void <Start>b__13_4(BaseEventData data)
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x145CEE8", Offset = "0x145CEE8", VA = "0x145CEE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE5F4", Offset = "0xFDE5F4")]
	private void <Start>b__13_5(BaseEventData data)
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x145CEF0", Offset = "0x145CEF0", VA = "0x145CEF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE604", Offset = "0xFDE604")]
	private void <Start>b__13_6(BaseEventData data)
	{
	}
}
[Token(Token = "0x20002C9")]
public class LiveSystem : Singleton<LiveSystem>
{
	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsShowManual;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ManualSellectView mManualView;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LiveShowView mLiveView;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isForbidLiveView;

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x14AB600", Offset = "0x14AB600", VA = "0x14AB600")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x14ABB00", Offset = "0x14ABB00", VA = "0x14ABB00")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0x14ABE44", Offset = "0x14ABE44", VA = "0x14ABE44")]
	public void OnExit()
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0x14AC140", Offset = "0x14AC140", VA = "0x14AC140")]
	private void ChangeModel(e_LiveCamera_Model_Type model, List<LiveCameraConfigData> list)
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x14AC4C8", Offset = "0x14AC4C8", VA = "0x14AC4C8")]
	private void ChangeShot(e_LiveCamera_Model_Type model, int site, LiveCameraConfigData data, ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x14AC56C", Offset = "0x14AC56C", VA = "0x14AC56C")]
	private void FreshLiveView()
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0x14AC614", Offset = "0x14AC614", VA = "0x14AC614")]
	private void DoShotIn(e_LiveCamera_Model_Type model, int site, LiveCameraConfigData data, ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0x14AC6B8", Offset = "0x14AC6B8", VA = "0x14AC6B8")]
	private void DoShotOut(e_LiveCamera_Model_Type model, int site, LiveCameraConfigData data)
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x14AC75C", Offset = "0x14AC75C", VA = "0x14AC75C")]
	private void DoLiveShotDataCellFresh(int op, int site, ILiveCameraDataCell dCell)
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x14AB9B4", Offset = "0x14AB9B4", VA = "0x14AB9B4")]
	public void SetShowLiveView(bool isShow)
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x14ABB84", Offset = "0x14ABB84", VA = "0x14ABB84")]
	private void ForbidLiveView(bool isForbid)
	{
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x14ABBD0", Offset = "0x14ABBD0", VA = "0x14ABBD0")]
	private void ShowManualSellectView()
	{
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0x14ABD10", Offset = "0x14ABD10", VA = "0x14ABD10")]
	private void HiteManualSellectView()
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0x14AC808", Offset = "0x14AC808", VA = "0x14AC808")]
	public LiveSystem()
	{
	}
}
[Token(Token = "0x20002CA")]
public class CutScenesTools : Singleton<CutScenesTools>
{
	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Queue<e_CutScenesType> waitCutScenesQueue;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private e_CutScenesType curCutScenesType;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int cutScenesPoint_1_Time;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool cutScenesPoint_1_State;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int cutScenesPoint_2_Time;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool cutScenesPoint_2_State;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isInit;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timer;

	[Token(Token = "0x170001AB")]
	public bool IsInit
	{
		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x13D2540", Offset = "0x13D2540", VA = "0x13D2540")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x13D2548", Offset = "0x13D2548", VA = "0x13D2548")]
		private set
		{
		}
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0x13D2554", Offset = "0x13D2554", VA = "0x13D2554")]
	public void Init(GameDiffculty gameDiffculty)
	{
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0x13D2568", Offset = "0x13D2568", VA = "0x13D2568")]
	public void UnInit()
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0x13D2588", Offset = "0x13D2588", VA = "0x13D2588")]
	public void ProcessingCutScenes(int millisDeltaTime)
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0x13D27E4", Offset = "0x13D27E4", VA = "0x13D27E4")]
	public void TriggerCutScenes(int deadCount)
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0x13D2768", Offset = "0x13D2768", VA = "0x13D2768")]
	public void AddCutScenesQueue(e_CutScenesType type)
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x13D2858", Offset = "0x13D2858", VA = "0x13D2858")]
	public void ProcessingCutScenesEnd()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0x13D28FC", Offset = "0x13D28FC", VA = "0x13D28FC")]
	public CutScenesTools()
	{
	}
}
[Token(Token = "0x20002CB")]
public class TimeLineManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000537")]
	private class TimeLineCell
	{
		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public e_CutScenesType type;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector playableDirector;

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x1461388", Offset = "0x1461388", VA = "0x1461388")]
		public TimeLineCell()
		{
		}
	}

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TimeLineManager _instance;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TimeLineCell> timeLineList;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> enableList;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> disableList;

	[Token(Token = "0x170001AC")]
	public static TimeLineManager Instance
	{
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x1460A40", Offset = "0x1460A40", VA = "0x1460A40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x1460A90", Offset = "0x1460A90", VA = "0x1460A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x1460AE8", Offset = "0x1460AE8", VA = "0x1460AE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0x1460CA0", Offset = "0x1460CA0", VA = "0x1460CA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x1460E58", Offset = "0x1460E58", VA = "0x1460E58")]
	public void Control(e_CutScenesType type, bool isPlay)
	{
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x146102C", Offset = "0x146102C", VA = "0x146102C")]
	public void Control_Net(e_CutScenesType type, bool isPlay)
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0x1460E64", Offset = "0x1460E64", VA = "0x1460E64")]
	private void Play(e_CutScenesType type)
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0x1460F48", Offset = "0x1460F48", VA = "0x1460F48")]
	private void Stop(e_CutScenesType type)
	{
	}

	[Token(Token = "0x6001502")]
	[Address(RVA = "0x1461234", Offset = "0x1461234", VA = "0x1461234")]
	public bool CheckEnd(e_CutScenesType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x1461118", Offset = "0x1461118", VA = "0x1461118")]
	private TimeLineCell GetCellByType(e_CutScenesType type)
	{
		return null;
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x1461270", Offset = "0x1461270", VA = "0x1461270")]
	public void StopAll()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x1461380", Offset = "0x1461380", VA = "0x1461380")]
	public TimeLineManager()
	{
	}
}
[Token(Token = "0x20002CC")]
public class PlayAnimatorPlayable : PlayableBehaviour
{
	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator _animator;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _stateName;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _layer;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _normalizedTime;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _duration;

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x13A1168", Offset = "0x13A1168", VA = "0x13A1168")]
	public void Initialize(Animator animator, string stateName, int layer, float normalizedTime)
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x13A11C0", Offset = "0x13A11C0", VA = "0x13A11C0", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0x13A11C4", Offset = "0x13A11C4", VA = "0x13A11C4", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x13A11C8", Offset = "0x13A11C8", VA = "0x13A11C8", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x13A1268", Offset = "0x13A1268", VA = "0x13A1268", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x13A126C", Offset = "0x13A126C", VA = "0x13A126C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x13A1270", Offset = "0x13A1270", VA = "0x13A1270")]
	public PlayAnimatorPlayable()
	{
	}
}
[Token(Token = "0x20002CD")]
public class CameraFadePlayable : PlayableBehaviour
{
	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isFadeOut;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _isStop;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double _duration;

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x14404A8", Offset = "0x14404A8", VA = "0x14404A8")]
	public void Initialize(bool isFadeOut, bool isStop)
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x14404BC", Offset = "0x14404BC", VA = "0x14404BC", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x14404C0", Offset = "0x14404C0", VA = "0x14404C0", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0x14404C4", Offset = "0x14404C4", VA = "0x14404C4", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0x1440724", Offset = "0x1440724", VA = "0x1440724", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0x1440844", Offset = "0x1440844", VA = "0x1440844", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x1440848", Offset = "0x1440848", VA = "0x1440848")]
	public CameraFadePlayable()
	{
	}
}
[Token(Token = "0x20002CE")]
public class EffectPlayable : PlayableBehaviour
{
	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 _pos;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _rot;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _effectPrefabs;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isLocal;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _parent;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EffectDefine _effect;

	[Token(Token = "0x6001514")]
	[Address(RVA = "0x13E1844", Offset = "0x13E1844", VA = "0x13E1844")]
	public void Initialize(GameObject prefab, Vector3 pos, Vector3 rot, bool isLocal, GameObject parent)
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x13E18C8", Offset = "0x13E18C8", VA = "0x13E18C8", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x13E18CC", Offset = "0x13E18CC", VA = "0x13E18CC", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x13E18D0", Offset = "0x13E18D0", VA = "0x13E18D0", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0x13E1BAC", Offset = "0x13E1BAC", VA = "0x13E1BAC", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0x13E1C8C", Offset = "0x13E1C8C", VA = "0x13E1C8C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x13E1C90", Offset = "0x13E1C90", VA = "0x13E1C90")]
	public EffectPlayable()
	{
	}
}
[Token(Token = "0x20002CF")]
public class MoveCameraPlayable : PlayableBehaviour
{
	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 _targetPoint;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _lookPoint;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isResetCameraRot;

	[Token(Token = "0x600151B")]
	[Address(RVA = "0x14C21E4", Offset = "0x14C21E4", VA = "0x14C21E4")]
	public void Initialize(Vector3 targetPoint, GameObject lookPoint, bool isResetCameraRot)
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0x14C2220", Offset = "0x14C2220", VA = "0x14C2220", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0x14C222C", Offset = "0x14C222C", VA = "0x14C222C", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0x14C2234", Offset = "0x14C2234", VA = "0x14C2234", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0x14C26B4", Offset = "0x14C26B4", VA = "0x14C26B4", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0x14C26B8", Offset = "0x14C26B8", VA = "0x14C26B8", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x14C26BC", Offset = "0x14C26BC", VA = "0x14C26BC")]
	public MoveCameraPlayable()
	{
	}
}
[Token(Token = "0x20002D0")]
public class WayPointPlayable : PlayableBehaviour
{
	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PathManager _path;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _roleRoot;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private splineMove _splineMove;

	[Token(Token = "0x6001522")]
	[Address(RVA = "0x15A6ABC", Offset = "0x15A6ABC", VA = "0x15A6ABC")]
	public void Initialize(PathManager path, GameObject roleRoot)
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0x15A6AF0", Offset = "0x15A6AF0", VA = "0x15A6AF0", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0x15A6AFC", Offset = "0x15A6AFC", VA = "0x15A6AFC", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0x15A6B04", Offset = "0x15A6B04", VA = "0x15A6B04", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0x15A6C14", Offset = "0x15A6C14", VA = "0x15A6C14", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0x15A6C98", Offset = "0x15A6C98", VA = "0x15A6C98", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0x15A6C9C", Offset = "0x15A6C9C", VA = "0x15A6C9C")]
	public WayPointPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D1")]
public class CameraFadePlayableAsset : PlayableAsset
{
	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFadeOut;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isStop;

	[Token(Token = "0x6001529")]
	[Address(RVA = "0x1440850", Offset = "0x1440850", VA = "0x1440850", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0x1440928", Offset = "0x1440928", VA = "0x1440928")]
	public CameraFadePlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D2")]
public class EffectPlayableAsset : PlayableAsset
{
	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<GameObject> effectPrefabs;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<GameObject> parent;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isLocal;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 pos;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rot;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject _effectPrefabs;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject _parent;

	[Token(Token = "0x600152B")]
	[Address(RVA = "0x13E1C98", Offset = "0x13E1C98", VA = "0x13E1C98", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0x13E1DE8", Offset = "0x13E1DE8", VA = "0x13E1DE8")]
	public EffectPlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D3")]
public class MoveCameraPlayableAsset : PlayableAsset
{
	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _targetPoint;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<GameObject> lookPoint;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _isResetCameraRot;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _lookPoint;

	[Token(Token = "0x600152D")]
	[Address(RVA = "0x14C26C4", Offset = "0x14C26C4", VA = "0x14C26C4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0x14C27F8", Offset = "0x14C27F8", VA = "0x14C27F8")]
	public MoveCameraPlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D4")]
public class PlayAnimatorPlayableAsset : PlayableAsset
{
	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Animator> animator;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string stateName;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int layer;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float normalizedTime;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator _animator;

	[Token(Token = "0x600152F")]
	[Address(RVA = "0x13A1278", Offset = "0x13A1278", VA = "0x13A1278", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0x13A13A8", Offset = "0x13A13A8", VA = "0x13A13A8")]
	public PlayAnimatorPlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D5")]
public class WayPointPlayableAsset : PlayableAsset
{
	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<PathManager> path;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<GameObject> roleRoot;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PathManager _path;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _roleRoot;

	[Token(Token = "0x6001531")]
	[Address(RVA = "0x15A6CA4", Offset = "0x15A6CA4", VA = "0x15A6CA4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0x15A6E04", Offset = "0x15A6E04", VA = "0x15A6E04")]
	public WayPointPlayableAsset()
	{
	}
}
[Token(Token = "0x20002D6")]
public class CalibrationOffsetTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000538")]
	public class Calibrationinfo
	{
		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float y_offset;

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x143FEC4", Offset = "0x143FEC4", VA = "0x143FEC4")]
		public Calibrationinfo()
		{
		}
	}

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform calibrationCamera;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _idealStartPoint;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _idealEndPoint;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject calibrationRoot;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _actualStartPoint;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _actualEndPoint;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Calibrationinfo curCalibrationinfo;

	[Token(Token = "0x40012C0")]
	private const string jsonName = "/calibrationinfo.json";

	[Token(Token = "0x6001533")]
	[Address(RVA = "0x143F660", Offset = "0x143F660", VA = "0x143F660")]
	public void Init()
	{
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0x143F890", Offset = "0x143F890", VA = "0x143F890")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0x143F9DC", Offset = "0x143F9DC", VA = "0x143F9DC")]
	private void WriteJson()
	{
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0x143F6AC", Offset = "0x143F6AC", VA = "0x143F6AC")]
	private Calibrationinfo ReadJson()
	{
		return null;
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0x143F960", Offset = "0x143F960", VA = "0x143F960")]
	private void ClearJson()
	{
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0x143FA90", Offset = "0x143FA90", VA = "0x143FA90")]
	public void StartCalibration()
	{
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0x143FAC8", Offset = "0x143FAC8", VA = "0x143FAC8")]
	public void EndCalibration()
	{
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0x143FC48", Offset = "0x143FC48", VA = "0x143FC48")]
	public static float GetCalibrationAngle(Vector3 startPoint, Vector3 idealEndPoint, Vector3 actualStartPoint, Vector3 actualEndPoint)
	{
		return default(float);
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0x143F808", Offset = "0x143F808", VA = "0x143F808")]
	public void DoCalibration(Calibrationinfo info)
	{
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0x143F8D8", Offset = "0x143F8D8", VA = "0x143F8D8")]
	public void DoRestoreCalibration(Calibrationinfo info)
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0x143FECC", Offset = "0x143FECC", VA = "0x143FECC")]
	public CalibrationOffsetTools()
	{
	}
}
[Token(Token = "0x20002D7")]
public class CalibrationTest : MonoBehaviour
{
	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CalibrationOffsetTools cTools;

	[Token(Token = "0x600153E")]
	[Address(RVA = "0x143FED4", Offset = "0x143FED4", VA = "0x143FED4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0x14401D4", Offset = "0x14401D4", VA = "0x14401D4")]
	public CalibrationTest()
	{
	}
}
[Token(Token = "0x20002D8")]
public class FixSteamVR : Singleton<FixSteamVR>
{
	[Token(Token = "0x2000539")]
	public struct defaultsettings
	{
		[Token(Token = "0x200089C")]
		public struct steamvrsettings
		{
			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legacyInputRebinding;
		}

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public steamvrsettings steamvr;
	}

	[Token(Token = "0x200053A")]
	public struct driverdefaultsvrsettings
	{
		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enable;
	}

	[Token(Token = "0x40012C2")]
	private const string versionPath = "bin\\version.txt";

	[Token(Token = "0x40012C3")]
	private const string defaultPath = "resources\\settings\\default.vrsettings";

	[Token(Token = "0x40012C4")]
	private const string driver_defaultsPath = "resources\\settings\\driver_defaults.vrsettings";

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD97E8", Offset = "0xFD97E8")]
	private int <SteamVRRuntimeNum>k__BackingField;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD97F8", Offset = "0xFD97F8")]
	private bool <IsNeedCheckFix>k__BackingField;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD9808", Offset = "0xFD9808")]
	private bool <IsNeedFix>k__BackingField;

	[Token(Token = "0x170001AD")]
	public int SteamVRRuntimeNum
	{
		[Token(Token = "0x6001542")]
		[Address(RVA = "0x15ED384", Offset = "0x15ED384", VA = "0x15ED384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE614", Offset = "0xFDE614")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001543")]
		[Address(RVA = "0x15ED38C", Offset = "0x15ED38C", VA = "0x15ED38C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE624", Offset = "0xFDE624")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AE")]
	public bool IsNeedCheckFix
	{
		[Token(Token = "0x6001544")]
		[Address(RVA = "0x15ED394", Offset = "0x15ED394", VA = "0x15ED394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE634", Offset = "0xFDE634")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001545")]
		[Address(RVA = "0x15ED39C", Offset = "0x15ED39C", VA = "0x15ED39C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE644", Offset = "0xFDE644")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public bool IsNeedFix
	{
		[Token(Token = "0x6001546")]
		[Address(RVA = "0x15ED3A8", Offset = "0x15ED3A8", VA = "0x15ED3A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE654", Offset = "0xFDE654")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001547")]
		[Address(RVA = "0x15ED3B0", Offset = "0x15ED3B0", VA = "0x15ED3B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE664", Offset = "0xFDE664")]
		private set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x6001540")]
	[Address(RVA = "0x15ED2A0", Offset = "0x15ED2A0", VA = "0x15ED2A0")]
	internal static extern IntPtr RuntimePath();

	[Token(Token = "0x6001541")]
	[Address(RVA = "0x15ED314", Offset = "0x15ED314", VA = "0x15ED314")]
	public static string GetRuntimePath()
	{
		return null;
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0x15ED3BC", Offset = "0x15ED3BC", VA = "0x15ED3BC")]
	public void Init()
	{
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0x15ED3C0", Offset = "0x15ED3C0", VA = "0x15ED3C0")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0x15ED3C4", Offset = "0x15ED3C4", VA = "0x15ED3C4")]
	public bool IsNeedFixController(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0x15ED3CC", Offset = "0x15ED3CC", VA = "0x15ED3CC")]
	private void CheckRuntimeVersion()
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0x15ED3D0", Offset = "0x15ED3D0", VA = "0x15ED3D0")]
	private void CheckNeedFixRotation()
	{
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0x15ED3D4", Offset = "0x15ED3D4", VA = "0x15ED3D4")]
	public FixSteamVR()
	{
	}
}
[Token(Token = "0x20002D9")]
public class FollowVRCamera : MonoBehaviour
{
	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool syncPositionX;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool syncPositionY;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool syncPositionZ;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool syncRotateX;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool syncRotateY;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool syncRotateZ;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool isOverriadY;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool useDefaultRotate;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float overriadY;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion defaultRotate;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 offset;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float forwardOffset;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform mVRCamera;

	[Token(Token = "0x600154E")]
	[Address(RVA = "0x15F1310", Offset = "0x15F1310", VA = "0x15F1310")]
	private void Start()
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0x15F134C", Offset = "0x15F134C", VA = "0x15F134C")]
	public void Init()
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0x15F142C", Offset = "0x15F142C", VA = "0x15F142C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0x15F1944", Offset = "0x15F1944", VA = "0x15F1944")]
	public FollowVRCamera()
	{
	}
}
[Token(Token = "0x20002DA")]
public class FollowVRController : MonoBehaviour
{
	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool syncPositionX;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool syncPositionY;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool syncPositionZ;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool syncRotateX;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool syncRotateY;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool syncRotateZ;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool isOverriadY;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool useDefaultRotate;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float overriadY;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform offsetTarget;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion defaultRotate;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform currentController;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 controllerAdjustRotation;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 controllerAdjustPosition;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD9828", Offset = "0xFD9828")]
	private int <index>k__BackingField;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool isRight;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int weapon_type;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 offset_pos;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 offset_rot;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool isHapticPulse;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float hapticDuration;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float hapticValue;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AnimationCurve hapticCurve;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float hapticTimer;

	[Token(Token = "0x170001B0")]
	public int index
	{
		[Token(Token = "0x6001552")]
		[Address(RVA = "0x15F195C", Offset = "0x15F195C", VA = "0x15F195C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE674", Offset = "0xFDE674")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001553")]
		[Address(RVA = "0x15F1964", Offset = "0x15F1964", VA = "0x15F1964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE684", Offset = "0xFDE684")]
		private set
		{
		}
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0x15F196C", Offset = "0x15F196C", VA = "0x15F196C")]
	public void ChangeFollowController(Transform target, bool _isRight, int _weapon_type)
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0x15F1A38", Offset = "0x15F1A38", VA = "0x15F1A38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0x15F1B1C", Offset = "0x15F1B1C", VA = "0x15F1B1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0x15F1DD8", Offset = "0x15F1DD8", VA = "0x15F1DD8")]
	private void OnMoveEmulatorOffset(Vector3 _offset_pos, Vector3 _offset_rot)
	{
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0x15F1C48", Offset = "0x15F1C48", VA = "0x15F1C48")]
	private void ResetOffsetPosition()
	{
	}

	[Token(Token = "0x6001559")]
	[Address(RVA = "0x15F1DE8", Offset = "0x15F1DE8", VA = "0x15F1DE8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDE694", Offset = "0xFDE694")]
	public void TriggerHapticPulse_1()
	{
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0x15F1F08", Offset = "0x15F1F08", VA = "0x15F1F08")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xFDE6CC", Offset = "0xFDE6CC")]
	public void Refresh_1()
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0x15F1DFC", Offset = "0x15F1DFC", VA = "0x15F1DFC")]
	public void TriggerHapticPulse(float _duration, float _value, [Optional] AnimationCurve _hapticCurveCurve)
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0x15F1D3C", Offset = "0x15F1D3C", VA = "0x15F1D3C")]
	public void StopHapticPulse()
	{
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0x15F1F0C", Offset = "0x15F1F0C", VA = "0x15F1F0C")]
	private void ProcessingHapticPulse()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0x15F19B0", Offset = "0x15F19B0", VA = "0x15F19B0")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0x15F1FF8", Offset = "0x15F1FF8", VA = "0x15F1FF8")]
	private void ProcessHardwareType()
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0x15F24C8", Offset = "0x15F24C8", VA = "0x15F24C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0x15F2500", Offset = "0x15F2500", VA = "0x15F2500")]
	private void Update()
	{
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0x15F2504", Offset = "0x15F2504", VA = "0x15F2504")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0x15F2960", Offset = "0x15F2960", VA = "0x15F2960")]
	public FollowVRController()
	{
	}
}
[Token(Token = "0x20002DB")]
public class VRManager : MonoBehaviour
{
	[Token(Token = "0x200053B")]
	public enum ControllerType
	{
		[Token(Token = "0x4001DBC")]
		Left,
		[Token(Token = "0x4001DBD")]
		Right
	}

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckVRDeviced checkVRDeviced;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject VR_ControllerManager;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera mainCamera;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject VRHeadObject;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRCameraRig VRCameraRig;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRManager _instance;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD9858", Offset = "0xFD9858")]
	private Vector3 <InitPos>k__BackingField;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion InitRot;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform playerHeightRoot;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD9868", Offset = "0xFD9868")]
	private bool <OpenVRFeature>k__BackingField;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float DefaultPlayerHeight;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float DefaultModelHeight;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float DefaultHMDHeightOffset;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float DefaultModelMaxHeight;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float DefaultModelMaxHeightAntilatency;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float DefaultSapceHeightAntilatency;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD9878", Offset = "0xFD9878")]
	private float <PlayerHeight>k__BackingField;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD9888", Offset = "0xFD9888")]
	private float <PlayerHeightOffset>k__BackingField;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD9898", Offset = "0xFD9898")]
	private float <PlayerHeightRate>k__BackingField;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD98A8", Offset = "0xFD98A8")]
	private float <ModelHeight>k__BackingField;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action OnInitPlayer;

	[Token(Token = "0x170001B1")]
	public static VRManager Instance
	{
		[Token(Token = "0x6001564")]
		[Address(RVA = "0x159BB70", Offset = "0x159BB70", VA = "0x159BB70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B2")]
	public Vector3 InitPos
	{
		[Token(Token = "0x6001565")]
		[Address(RVA = "0x159BBC0", Offset = "0x159BBC0", VA = "0x159BBC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE704", Offset = "0xFDE704")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001566")]
		[Address(RVA = "0x159BBCC", Offset = "0x159BBCC", VA = "0x159BBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE714", Offset = "0xFDE714")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public bool OpenVRFeature
	{
		[Token(Token = "0x6001568")]
		[Address(RVA = "0x159BC30", Offset = "0x159BC30", VA = "0x159BC30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE724", Offset = "0xFDE724")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001569")]
		[Address(RVA = "0x159BC38", Offset = "0x159BC38", VA = "0x159BC38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE734", Offset = "0xFDE734")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	[HideInInspector]
	public float PlayerHeight
	{
		[Token(Token = "0x6001573")]
		[Address(RVA = "0x159CBA4", Offset = "0x159CBA4", VA = "0x159CBA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE744", Offset = "0xFDE744")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001574")]
		[Address(RVA = "0x159CBAC", Offset = "0x159CBAC", VA = "0x159CBAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE754", Offset = "0xFDE754")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B5")]
	[HideInInspector]
	public float PlayerHeightOffset
	{
		[Token(Token = "0x6001575")]
		[Address(RVA = "0x159CBB4", Offset = "0x159CBB4", VA = "0x159CBB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE764", Offset = "0xFDE764")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001576")]
		[Address(RVA = "0x159CBBC", Offset = "0x159CBBC", VA = "0x159CBBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE774", Offset = "0xFDE774")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	[HideInInspector]
	public float PlayerHeightRate
	{
		[Token(Token = "0x6001577")]
		[Address(RVA = "0x159CBC4", Offset = "0x159CBC4", VA = "0x159CBC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE784", Offset = "0xFDE784")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001578")]
		[Address(RVA = "0x159CBCC", Offset = "0x159CBCC", VA = "0x159CBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE794", Offset = "0xFDE794")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	[HideInInspector]
	public float ModelHeight
	{
		[Token(Token = "0x6001579")]
		[Address(RVA = "0x159CBD4", Offset = "0x159CBD4", VA = "0x159CBD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE7A4", Offset = "0xFDE7A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600157A")]
		[Address(RVA = "0x159CBDC", Offset = "0x159CBDC", VA = "0x159CBDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE7B4", Offset = "0xFDE7B4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public float CurRealHeight
	{
		[Token(Token = "0x600157B")]
		[Address(RVA = "0x159CBE4", Offset = "0x159CBE4", VA = "0x159CBE4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001B9")]
	public float CurPlayerHeight
	{
		[Token(Token = "0x600157C")]
		[Address(RVA = "0x159CD44", Offset = "0x159CD44", VA = "0x159CD44")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001BA")]
	public float CurGroundHeight
	{
		[Token(Token = "0x600157D")]
		[Address(RVA = "0x159CE80", Offset = "0x159CE80", VA = "0x159CE80")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001567")]
	[Address(RVA = "0x159BBD8", Offset = "0x159BBD8", VA = "0x159BBD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0x159BC44", Offset = "0x159BC44", VA = "0x159BC44")]
	public void Init(bool useVRInput)
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0x159C00C", Offset = "0x159C00C", VA = "0x159C00C")]
	public void SetVRCamera(GameObject vrMgr)
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0x159BDD0", Offset = "0x159BDD0", VA = "0x159BDD0")]
	public void SetFirstPersonCamera(Camera mainCamera)
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0x159C514", Offset = "0x159C514", VA = "0x159C514")]
	public Vector3 GetAreaStandPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0x159C5E4", Offset = "0x159C5E4", VA = "0x159C5E4")]
	public Vector3 GetAreaStandForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0x159C6B4", Offset = "0x159C6B4", VA = "0x159C6B4")]
	public Quaternion GetAreaStandRot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0x159C784", Offset = "0x159C784", VA = "0x159C784")]
	public Vector3 GetAreaStandRight()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0x159C854", Offset = "0x159C854", VA = "0x159C854")]
	public void SetAreaStandPosAndRot(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0x159CAA8", Offset = "0x159CAA8", VA = "0x159CAA8")]
	public void SetMainCameraInit()
	{
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0x159CF54", Offset = "0x159CF54", VA = "0x159CF54")]
	public void InitPlayerHeight()
	{
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0x159D08C", Offset = "0x159D08C", VA = "0x159D08C")]
	public void InitPlayerHeightOffset()
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0x159D530", Offset = "0x159D530", VA = "0x159D530")]
	public void ResetDefaultPlayerHeight()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x159D630", Offset = "0x159D630", VA = "0x159D630")]
	public VRManager()
	{
	}
}
[Token(Token = "0x20002DC")]
public class CheckVRDeviced : MonoBehaviour
{
	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD98B8", Offset = "0xFD98B8")]
	public bool executeGetpressDown;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject right;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isHmdNormal;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isControllerNormal;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool alreadyShot;

	[Token(Token = "0x4001309")]
	private const string HMD = "HMD";

	[Token(Token = "0x400130A")]
	private const string CONTROLLER = "controller";

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool isInit;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool controllerActive;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool wascontrollerActive;

	[Token(Token = "0x170001BB")]
	[HideInInspector]
	public bool AlreadyShot
	{
		[Token(Token = "0x6001582")]
		[Address(RVA = "0x14483BC", Offset = "0x14483BC", VA = "0x14483BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001583")]
		[Address(RVA = "0x14483C4", Offset = "0x14483C4", VA = "0x14483C4")]
		set
		{
		}
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0x1448500", Offset = "0x1448500", VA = "0x1448500")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0x1448690", Offset = "0x1448690", VA = "0x1448690")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0x144875C", Offset = "0x144875C", VA = "0x144875C")]
	public void GameReady()
	{
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x14487F4", Offset = "0x14487F4", VA = "0x14487F4")]
	public void GameStart()
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0x1448878", Offset = "0x1448878", VA = "0x1448878")]
	public void Init()
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0x1448990", Offset = "0x1448990", VA = "0x1448990")]
	private void Update()
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0x14489A0", Offset = "0x14489A0", VA = "0x14489A0")]
	private void CheckController()
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x1448A68", Offset = "0x1448A68", VA = "0x1448A68")]
	private void OnHMDAcquired()
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0x1448A7C", Offset = "0x1448A7C", VA = "0x1448A7C")]
	private void OnHMDLost()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0x14485E8", Offset = "0x14485E8", VA = "0x14485E8")]
	public void SendVRHmd(int vrValue)
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x1448458", Offset = "0x1448458", VA = "0x1448458")]
	public void SendVRController(int vrValue)
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x1448A90", Offset = "0x1448A90", VA = "0x1448A90")]
	public CheckVRDeviced()
	{
	}
}
[Token(Token = "0x20002DD")]
public interface ILanguageHotSwitch
{
	[Token(Token = "0x6001590")]
	void HotSwitch(e_type_language type_Language);
}
[Token(Token = "0x20002DE")]
public class SystemLanguageManager : Singleton<SystemLanguageManager>
{
	[Token(Token = "0x6001591")]
	[Address(RVA = "0x15CF03C", Offset = "0x15CF03C", VA = "0x15CF03C")]
	public e_type_language GetSystemLanguage()
	{
		return default(e_type_language);
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0x15CF190", Offset = "0x15CF190", VA = "0x15CF190")]
	public SystemLanguageManager()
	{
	}
}
[Token(Token = "0x20002DF")]
public class VRPlatformHelper : Singleton<VRPlatformHelper>
{
	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IPEndPoint rInfo;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IPEndPoint sInfo;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IPEndPoint localInfo;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action VRPlatformConnectCB;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<string, IPEndPoint> ipDic;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isConnect;

	[Token(Token = "0x4001314")]
	private const float reconnectHostInterval = 1f;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float reconnectTimer;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isInit;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isPlatformNewData;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private byte ERROR_NOT_CONNCET_TO_HOST;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private byte ERROR_NOT_CONNCET_TO_PLATFORM;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ObscuredInt GAMEID_1;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ObscuredInt GAMEID_2;

	[Token(Token = "0x170001BC")]
	private ObscuredInt GAMEID
	{
		[Token(Token = "0x6001593")]
		[Address(RVA = "0x159D654", Offset = "0x159D654", VA = "0x159D654")]
		get
		{
			return default(ObscuredInt);
		}
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0x159D700", Offset = "0x159D700", VA = "0x159D700")]
	public void DoInit(Action connectCB)
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0x159E5CC", Offset = "0x159E5CC", VA = "0x159E5CC")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x159E730", Offset = "0x159E730", VA = "0x159E730")]
	public void DoAppQuit()
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0x159E4C8", Offset = "0x159E4C8", VA = "0x159E4C8")]
	private void AutoConnection()
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x159E8A0", Offset = "0x159E8A0", VA = "0x159E8A0")]
	private void PlayerConnectHandle(PlayerConnectProtocol p)
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x159F688", Offset = "0x159F688", VA = "0x159F688")]
	private void PlayerStatusHandle(PlayerStatusProtocol p)
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0x159FC74", Offset = "0x159FC74", VA = "0x159FC74")]
	private void PlayerInfoHandle(PlayerInfoProtocol p)
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x15A00E8", Offset = "0x15A00E8", VA = "0x15A00E8")]
	private void GameStartHandle(GameStartProtocol p)
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0x15A0DAC", Offset = "0x15A0DAC", VA = "0x15A0DAC")]
	private void GameEndHandle()
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0x15A0F58", Offset = "0x15A0F58", VA = "0x15A0F58")]
	private void TeamInfoHandle(PlayerWXInfoProtocol playerWXInfoProtocol)
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0x15A15D4", Offset = "0x15A15D4", VA = "0x15A15D4")]
	private void LoadSavHandle(GetLoadSavProtocol getLoadSavProtocol)
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0x15A1B80", Offset = "0x15A1B80", VA = "0x15A1B80")]
	private void CloseGameHandle()
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x15A1BF4", Offset = "0x15A1BF4", VA = "0x15A1BF4")]
	public void SendGameStatistics(GameStatisticsProtocol protocol)
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x15A1DD4", Offset = "0x15A1DD4", VA = "0x15A1DD4")]
	public void SendCmd8(string type, int value)
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0x159FA00", Offset = "0x159FA00", VA = "0x159FA00")]
	public void SendIsEnableStatusRespon(byte type, string ip)
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0x15A0B3C", Offset = "0x15A0B3C", VA = "0x15A0B3C")]
	public void SendGameStartRespon(bool flag)
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0x15A1FEC", Offset = "0x15A1FEC", VA = "0x15A1FEC")]
	public void SendCmd15()
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0x159F658", Offset = "0x159F658", VA = "0x159F658")]
	private e_Player_Style ConvetorStyle(int rawData)
	{
		return default(e_Player_Style);
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x15A21F4", Offset = "0x15A21F4", VA = "0x15A21F4")]
	public VRPlatformHelper()
	{
	}
}
[Token(Token = "0x20002E0")]
public class VRPlatformTest : MonoBehaviour
{
	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sendIp;

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x15A2308", Offset = "0x15A2308", VA = "0x15A2308")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x15A24E4", Offset = "0x15A24E4", VA = "0x15A24E4")]
	public VRPlatformTest()
	{
	}
}
[Token(Token = "0x20002E1")]
public class TeleportPICO : MonoBehaviour
{
	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsBezierCurve;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material LineMat;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PointGo;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material PointGoMat;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Ovr_UnitySDKRoot;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject currentControllerL;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject currentControllerR;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isHandR;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 currentHitPoint;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color fadeColor;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material fademat;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LineRenderer line;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Ray ray;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int layerMask;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int terrainLayerMask;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color LineColorGreen;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color LineEmissionColorGreen;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color LineColorRed;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color LineEmissionColorRed;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float LineDefaultDis;

	[Token(Token = "0x170001BD")]
	public GameObject CurrentController
	{
		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1459B98", Offset = "0x1459B98", VA = "0x1459B98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x1459BB4", Offset = "0x1459BB4", VA = "0x1459BB4")]
	private bool GetTeleportKey()
	{
		return default(bool);
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x1459D1C", Offset = "0x1459D1C", VA = "0x1459D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x1459E54", Offset = "0x1459E54", VA = "0x1459E54")]
	private void LineInit()
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x1459F78", Offset = "0x1459F78", VA = "0x1459F78")]
	private void Update()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x145A460", Offset = "0x145A460", VA = "0x145A460")]
	private void SetLineActiveColor(bool isActive)
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x145A5B8", Offset = "0x145A5B8", VA = "0x145A5B8")]
	private void DrawLine()
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0x145A8D8", Offset = "0x145A8D8", VA = "0x145A8D8")]
	private void MoveCameraPrefab(Vector3 target)
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0x145AB24", Offset = "0x145AB24", VA = "0x145AB24")]
	private Vector3[] GetBeizerPathPointList(Vector3 startPoint, Vector3 controlPoint, Vector3 endPoint, int pointNum)
	{
		return null;
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0x145AC48", Offset = "0x145AC48", VA = "0x145AC48")]
	private Vector3 GetBeizerPathPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0x145ADA4", Offset = "0x145ADA4", VA = "0x145ADA4")]
	public TeleportPICO()
	{
	}
}
[Token(Token = "0x20002E2")]
public class TeleporterLayer : MonoBehaviour
{
	[Token(Token = "0x60015B4")]
	[Address(RVA = "0x145BA64", Offset = "0x145BA64", VA = "0x145BA64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x145BB28", Offset = "0x145BB28", VA = "0x145BB28")]
	public TeleporterLayer()
	{
	}
}
[Token(Token = "0x20002E3")]
public class MoveEmulator : MonoBehaviour
{
	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Vector3, Vector3> offset_Action;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Axis2D axis2D;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Button reset;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRManager manager;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform centerEyeAnchor;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Speed_Pos;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Speed_Rot;

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x14C2800", Offset = "0x14C2800", VA = "0x14C2800")]
	private void Start()
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x14C2804", Offset = "0x14C2804", VA = "0x14C2804")]
	public (Vector3, Vector3) GetOffset()
	{
		return default((Vector3, Vector3));
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0x14C297C", Offset = "0x14C297C", VA = "0x14C297C")]
	private void Update()
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x14C2E94", Offset = "0x14C2E94", VA = "0x14C2E94")]
	public MoveEmulator()
	{
	}
}
[Token(Token = "0x20002E4")]
public class AIBulletStraight : Bullet
{
	[Serializable]
	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5EF4", Offset = "0xFD5EF4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__15_0;

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x18C7870", Offset = "0x18C7870", VA = "0x18C7870")]
		public <>c()
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x18C7878", Offset = "0x18C7878", VA = "0x18C7878")]
		internal int <RayCheck>b__15_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float velocity;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject effectRoot;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float delayDisplay;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 lastPos;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 forward;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 curPos;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine coroutine;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0x18C6DA0", Offset = "0x18C6DA0", VA = "0x18C6DA0", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x18C6EEC", Offset = "0x18C6EEC", VA = "0x18C6EEC", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0x18C7478", Offset = "0x18C7478", VA = "0x18C7478", Slot = "6")]
	protected override void DoLateUpdate()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x18C7480", Offset = "0x18C7480", VA = "0x18C7480", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x18C6F34", Offset = "0x18C6F34", VA = "0x18C6F34")]
	private void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x18C7450", Offset = "0x18C7450", VA = "0x18C7450")]
	private void Move(float deltatime)
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x18C7014", Offset = "0x18C7014", VA = "0x18C7014")]
	private void RayCheck()
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x18C74B8", Offset = "0x18C74B8", VA = "0x18C74B8")]
	private bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x18C7678", Offset = "0x18C7678", VA = "0x18C7678")]
	public AIBulletStraight()
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0x18C77E8", Offset = "0x18C77E8", VA = "0x18C77E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE7C4", Offset = "0xFDE7C4")]
	private void <DoInit>b__7_0()
	{
	}
}
[Token(Token = "0x20002E5")]
public class AlphaGun : MonoBehaviour
{
	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon_AIRifle gun;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float retargetTime;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float reloadReactionTime;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float reloadDelay;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float checkBulletTime;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float findNearPercent;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine cr_fire;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine cr_find;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine cr_reload;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine cr_reload_delay;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine cr_Running;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isFire;

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x16065D0", Offset = "0x16065D0", VA = "0x16065D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x1606654", Offset = "0x1606654", VA = "0x1606654")]
	private void CheckBegin()
	{
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0x16066D8", Offset = "0x16066D8", VA = "0x16066D8")]
	private void CheckEnd()
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0x160675C", Offset = "0x160675C", VA = "0x160675C")]
	private bool CheckBullet()
	{
		return default(bool);
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x1606824", Offset = "0x1606824", VA = "0x1606824")]
	private bool Rate(float rate)
	{
		return default(bool);
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0x1606850", Offset = "0x1606850", VA = "0x1606850")]
	private WUnit GetNear(List<WUnit> units)
	{
		return null;
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x1606A88", Offset = "0x1606A88", VA = "0x1606A88")]
	private void Play()
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x1606E08", Offset = "0x1606E08", VA = "0x1606E08")]
	private void Stop()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x1606E84", Offset = "0x1606E84", VA = "0x1606E84")]
	public AlphaGun()
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x1606E9C", Offset = "0x1606E9C", VA = "0x1606E9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE7D4", Offset = "0xFDE7D4")]
	private bool <CheckBegin>b__13_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x1606F44", Offset = "0x1606F44", VA = "0x1606F44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE7E4", Offset = "0xFDE7E4")]
	private bool <CheckEnd>b__14_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x1606FEC", Offset = "0x1606FEC", VA = "0x1606FEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE7F4", Offset = "0xFDE7F4")]
	private void <CheckBullet>b__15_0()
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x16070C0", Offset = "0x16070C0", VA = "0x16070C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE804", Offset = "0xFDE804")]
	private void <CheckBullet>b__15_1()
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x1607180", Offset = "0x1607180", VA = "0x1607180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE814", Offset = "0xFDE814")]
	private void <Play>b__18_0()
	{
	}
}
[Token(Token = "0x20002E6")]
public class FPSTest : MonoBehaviour
{
	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text_fps;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ShowFPS fpsCom;

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x15E14A8", Offset = "0x15E14A8", VA = "0x15E14A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x15E1508", Offset = "0x15E1508", VA = "0x15E1508")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x15E16DC", Offset = "0x15E16DC", VA = "0x15E16DC")]
	public FPSTest()
	{
	}
}
[Token(Token = "0x20002E7")]
public class LogicTest : MonoBehaviour
{
	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 playerCenterPos;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 newPos;

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x14AE3C8", Offset = "0x14AE3C8", VA = "0x14AE3C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x14AE434", Offset = "0x14AE434", VA = "0x14AE434")]
	private void Start()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x14AE438", Offset = "0x14AE438", VA = "0x14AE438")]
	private void Update()
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x14AE760", Offset = "0x14AE760", VA = "0x14AE760")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x14AE8A4", Offset = "0x14AE8A4", VA = "0x14AE8A4")]
	public LogicTest()
	{
	}
}
[Token(Token = "0x20002E8")]
public class PlayWwiseAudioTest : MonoBehaviour
{
	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioEvent audioEvent;

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x13A13BC", Offset = "0x13A13BC", VA = "0x13A13BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x13A13C0", Offset = "0x13A13C0", VA = "0x13A13C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x13A1494", Offset = "0x13A1494", VA = "0x13A1494")]
	public PlayWwiseAudioTest()
	{
	}
}
[Token(Token = "0x20002E9")]
public class StatisticalInfoTest : MonoBehaviour
{
	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float updateInterval;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x15C9AD4", Offset = "0x15C9AD4", VA = "0x15C9AD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0x15C9B80", Offset = "0x15C9B80", VA = "0x15C9B80")]
	private void Update()
	{
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0x15CAC64", Offset = "0x15CAC64", VA = "0x15CAC64")]
	public StatisticalInfoTest()
	{
	}
}
[Token(Token = "0x20002EA")]
public class TestAimIK : MonoBehaviour
{
	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform aimTransform;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform aimTarget;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AimIKTools aimIKTools;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform weapon;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform weapon_a;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform weapon_2;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform weapon_2_a;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float aimTargetR;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string hideStateName;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string fireStateName;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string fireStateName2;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isAutoFire;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float autoFireFrequency;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 aimTargetInitPos;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float autoFireTime;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine coroutine;

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0x145BF34", Offset = "0x145BF34", VA = "0x145BF34")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0x145C1C4", Offset = "0x145C1C4", VA = "0x145C1C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0x145C208", Offset = "0x145C208", VA = "0x145C208")]
	private void UpdateAutoFire()
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0x145C2E4", Offset = "0x145C2E4", VA = "0x145C2E4")]
	private void UpdateAimTargetPos()
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x145C4B0", Offset = "0x145C4B0", VA = "0x145C4B0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x145C148", Offset = "0x145C148", VA = "0x145C148")]
	private void Hide()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x145C3C4", Offset = "0x145C3C4", VA = "0x145C3C4")]
	private void Fire()
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x145C720", Offset = "0x145C720", VA = "0x145C720")]
	public TestAimIK()
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x145C7BC", Offset = "0x145C7BC", VA = "0x145C7BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE824", Offset = "0xFDE824")]
	private void <UpdateAutoFire>b__18_0()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x145C7C0", Offset = "0x145C7C0", VA = "0x145C7C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE834", Offset = "0xFDE834")]
	private void <Fire>b__23_0()
	{
	}
}
[Token(Token = "0x20002EB")]
public class TestExploder : MonoBehaviour
{
	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RagdollTools ragdollTools;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExploderTools expolderTools;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExploderObject exploderObject;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Force;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ExploderForce;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 point;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 dir;

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x145CEF4", Offset = "0x145CEF4", VA = "0x145CEF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x145CF64", Offset = "0x145CF64", VA = "0x145CF64")]
	private void RayHit()
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x145D3E8", Offset = "0x145D3E8", VA = "0x145D3E8")]
	public TestExploder()
	{
	}
}
[Token(Token = "0x20002EC")]
public class TestGear : MonoBehaviour
{
	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x145D3F8", Offset = "0x145D3F8", VA = "0x145D3F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x145D4AC", Offset = "0x145D4AC", VA = "0x145D4AC")]
	public TestGear()
	{
	}
}
[Token(Token = "0x20002ED")]
public class TestIK : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200053D")]
	public class WeaponGroupConfig
	{
		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group weaponGroup;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon leftWeapon;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon rightWeapon;

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x145EEA0", Offset = "0x145EEA0", VA = "0x145EEA0")]
		public WeaponGroupConfig()
		{
		}
	}

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject other_role;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject local_role;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject headAnchor;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private WeaponGroupConfig[] weaponGroups;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 other_leftWeapon;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 other_rightWeapon;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Weapon other_weapon_1;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Weapon other_weapon_2;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 local_leftWeapon;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 local_rightWeapon;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Weapon local_weapon_1;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Weapon local_weapon_2;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool enableLeft;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool enableRight;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IKConfigMono other_ik;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IKConfigMono local_ik;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator other_animator;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator local_animator;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private e_weapon_group currentGroup;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float moveTime;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float moveTimer;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2[] moveDirs;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int moveDirIndex;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float smoothSpeed;

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x145D774", Offset = "0x145D774", VA = "0x145D774")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x145DD20", Offset = "0x145DD20", VA = "0x145DD20")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x145E118", Offset = "0x145E118", VA = "0x145E118")]
	private void Update()
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x145E49C", Offset = "0x145E49C", VA = "0x145E49C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x145D8A0", Offset = "0x145D8A0", VA = "0x145D8A0")]
	private void SwitchWeapon(e_weapon_group weapon_Group)
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x145EB24", Offset = "0x145EB24", VA = "0x145EB24")]
	public WeaponGroupConfig GetWeaponByGroup(e_weapon_group weaponGroup)
	{
		return null;
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x145EE80", Offset = "0x145EE80", VA = "0x145EE80")]
	public TestIK()
	{
	}
}
[Token(Token = "0x20002EE")]
public class TestPlayerHighlyMatched : MonoBehaviour
{
	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherPlayer;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject localPlayer;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 otherPos;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject cameraRig;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject vrcamera;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float playerHeight;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float playerHeightOffset;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float playerHeightRate;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isTest;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OtherPlayerNetSyncController syncController;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IKConfigMono iK;

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x145F388", Offset = "0x145F388", VA = "0x145F388")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x145F480", Offset = "0x145F480", VA = "0x145F480")]
	private void Update()
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x145F7AC", Offset = "0x145F7AC", VA = "0x145F7AC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x145F8B8", Offset = "0x145F8B8", VA = "0x145F8B8")]
	private void Reset()
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x145F948", Offset = "0x145F948", VA = "0x145F948")]
	private void TestPlayerHeight()
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x145F9E4", Offset = "0x145F9E4", VA = "0x145F9E4")]
	private void SetCameraRig()
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x145FAC0", Offset = "0x145FAC0", VA = "0x145FAC0")]
	public TestPlayerHighlyMatched()
	{
	}
}
[Token(Token = "0x20002EF")]
public class TimeTest : MonoBehaviour
{
	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text_time;

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x1461390", Offset = "0x1461390", VA = "0x1461390")]
	private void Start()
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x14613F0", Offset = "0x14613F0", VA = "0x14613F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0x1461558", Offset = "0x1461558", VA = "0x1461558")]
	public TimeTest()
	{
	}
}
[Token(Token = "0x20002F0")]
public class WeaponTest : MonoBehaviour
{
	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxBulletCount;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxMagazineCount;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int curBulletCount;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int curMagazineCount;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int atk;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int headPer;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fireInterval;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int scatterRadius;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int recoil;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bulletForce;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string weaponName;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Weapon weapon;

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x15AE8F4", Offset = "0x15AE8F4", VA = "0x15AE8F4")]
	public void Init(Weapon _weapon)
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0x15AE8FC", Offset = "0x15AE8FC", VA = "0x15AE8FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0x15AEA7C", Offset = "0x15AEA7C", VA = "0x15AEA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0x15AEA80", Offset = "0x15AEA80", VA = "0x15AEA80")]
	private void Update()
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0x15AE900", Offset = "0x15AE900", VA = "0x15AE900")]
	private void updateShowMessage()
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0x15AEA84", Offset = "0x15AEA84", VA = "0x15AEA84")]
	public WeaponTest()
	{
	}
}
[Token(Token = "0x20002F1")]
public class Weapon_AILaser : Weapon_Rifle
{
	[Token(Token = "0x6001607")]
	[Address(RVA = "0x15AEA8C", Offset = "0x15AEA8C", VA = "0x15AEA8C", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0x15AEA98", Offset = "0x15AEA98", VA = "0x15AEA98", Slot = "16")]
	protected override Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0x15AEAA0", Offset = "0x15AEAA0", VA = "0x15AEAA0", Slot = "13")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0x15AEAA4", Offset = "0x15AEAA4", VA = "0x15AEAA4", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0x15AECDC", Offset = "0x15AECDC", VA = "0x15AECDC", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0x15AECE4", Offset = "0x15AECE4", VA = "0x15AECE4", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0x15AECF0", Offset = "0x15AECF0", VA = "0x15AECF0")]
	public Weapon_AILaser()
	{
	}
}
[Token(Token = "0x20002F2")]
public class Weapon_AIRifle : Weapon
{
	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFD9930", Offset = "0xFD9930")]
	public Transform ShellPoint;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject BulletPrefab;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject BulletParticlePrefab;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private GameObject BulletParticleObj;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private ParticleSystem BulletParticleSystem;

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x29EAEE0", Offset = "0x29EAEE0", VA = "0x29EAEE0", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0x29EAEEC", Offset = "0x29EAEEC", VA = "0x29EAEEC")]
	private Vector3 GetFirePointPosLocal()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x29EAFC4", Offset = "0x29EAFC4", VA = "0x29EAFC4", Slot = "13")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x29EB04C", Offset = "0x29EB04C", VA = "0x29EB04C", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x29EB518", Offset = "0x29EB518", VA = "0x29EB518")]
	public Weapon_AIRifle()
	{
	}
}
[Token(Token = "0x20002F3")]
public class TestHaptics : MonoBehaviour
{
	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 point;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 dir;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ray ray;

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x145D4B4", Offset = "0x145D4B4", VA = "0x145D4B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x145D4F0", Offset = "0x145D4F0", VA = "0x145D4F0")]
	private void RayHit()
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x145D754", Offset = "0x145D754", VA = "0x145D754")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x145D76C", Offset = "0x145D76C", VA = "0x145D76C")]
	public TestHaptics()
	{
	}
}
[Token(Token = "0x20002F4")]
public class TestLightCast : MonoBehaviour
{
	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer r;

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x145EEA8", Offset = "0x145EEA8", VA = "0x145EEA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x145EFD4", Offset = "0x145EFD4", VA = "0x145EFD4")]
	private void OnEventHandler(FlashLight flashLight, RaycastHit raycastHit, FlashLight.LightEventType lightEventType)
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x145F050", Offset = "0x145F050", VA = "0x145F050")]
	protected void OnLightEnter(RaycastHit info)
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x145F160", Offset = "0x145F160", VA = "0x145F160")]
	protected void OnLightStay(RaycastHit info)
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x145F270", Offset = "0x145F270", VA = "0x145F270")]
	protected void OnLightExit(RaycastHit info)
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x145F380", Offset = "0x145F380", VA = "0x145F380")]
	public TestLightCast()
	{
	}
}
[Token(Token = "0x20002F5")]
public class TestSingleHaptics : MonoBehaviour
{
	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PositionTag PositionTag;

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x145FDA8", Offset = "0x145FDA8", VA = "0x145FDA8")]
	public TestSingleHaptics()
	{
	}
}
[Token(Token = "0x20002F6")]
public class TestWwiseObstruction : MonoBehaviour
{
	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5F04", Offset = "0xFD5F04")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AkEvent akevent;

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x145FE80", Offset = "0x145FE80", VA = "0x145FE80")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x1460884", Offset = "0x1460884", VA = "0x1460884")]
		internal void <Start>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5F14", Offset = "0xFD5F14")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__9_0;

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x1460838", Offset = "0x1460838", VA = "0x1460838")]
		public <>c()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x1460840", Offset = "0x1460840", VA = "0x1460840")]
		internal int <Update>b__9_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Listener;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxDis;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ObstructionValue;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layerMask;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float testP;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x145FDB0", Offset = "0x145FDB0", VA = "0x145FDB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x145FE88", Offset = "0x145FE88", VA = "0x145FE88")]
	private void Update()
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0x146071C", Offset = "0x146071C", VA = "0x146071C")]
	public TestWwiseObstruction()
	{
	}
}
[Token(Token = "0x20002F7")]
public class Testangle : MonoBehaviour
{
	[Token(Token = "0x2000540")]
	public struct DoCell
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0x14608A8", Offset = "0x14608A8", VA = "0x14608A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0x1460914", Offset = "0x1460914", VA = "0x1460914")]
	private void Update()
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0x1460918", Offset = "0x1460918", VA = "0x1460918")]
	public Testangle()
	{
	}
}
[Token(Token = "0x20002F8")]
public class VRCameraReset : MonoBehaviour
{
	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cameraEye;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 dropPreCamPos;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Quaternion dropPreCamRot;

	[Token(Token = "0x6001625")]
	[Address(RVA = "0x159A460", Offset = "0x159A460", VA = "0x159A460")]
	private void Start()
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0x159A4C8", Offset = "0x159A4C8", VA = "0x159A4C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0x159A6B8", Offset = "0x159A6B8", VA = "0x159A6B8")]
	public VRCameraReset()
	{
	}
}
[Token(Token = "0x20002F9")]
public class testheight : MonoBehaviour
{
	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text2;

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x29F4B98", Offset = "0x29F4B98", VA = "0x29F4B98")]
	private void Update()
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x29F4CA8", Offset = "0x29F4CA8", VA = "0x29F4CA8")]
	public testheight()
	{
	}
}
[Token(Token = "0x20002FA")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x144514C", Offset = "0x144514C", VA = "0x144514C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x14451F0", Offset = "0x14451F0", VA = "0x14451F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x1445294", Offset = "0x1445294", VA = "0x1445294")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x1445694", Offset = "0x1445694", VA = "0x1445694")]
	public ChatController()
	{
	}
}
[Token(Token = "0x20002FB")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5F24", Offset = "0xFD5F24")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x1700040B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002709")]
			[Address(RVA = "0x13E5180", Offset = "0x13E5180", VA = "0x13E5180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600270B")]
			[Address(RVA = "0x13E51E8", Offset = "0x13E51E8", VA = "0x13E51E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x13E4F4C", Offset = "0x13E4F4C", VA = "0x13E4F4C")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x13E4F80", Offset = "0x13E4F80", VA = "0x13E4F80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x13E4F84", Offset = "0x13E4F84", VA = "0x13E4F84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x13E5188", Offset = "0x13E5188", VA = "0x13E5188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x13E4E44", Offset = "0x13E4E44", VA = "0x13E4E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x13E4ED0", Offset = "0x13E4ED0", VA = "0x13E4ED0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDE844", Offset = "0xFDE844")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x13E4F78", Offset = "0x13E4F78", VA = "0x13E4F78")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x20002FC")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001BE")]
	public uint uPoolSize
	{
		[Token(Token = "0x6001638")]
		[Address(RVA = "0x18D98DC", Offset = "0x18D98DC", VA = "0x18D98DC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001637")]
		[Address(RVA = "0x18D8BC0", Offset = "0x18D8BC0", VA = "0x18D8BC0")]
		set
		{
		}
	}

	[Token(Token = "0x170001BF")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x600163A")]
		[Address(RVA = "0x18D9948", Offset = "0x18D9948", VA = "0x18D9948")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001639")]
		[Address(RVA = "0x18D8C3C", Offset = "0x18D8C3C", VA = "0x18D8C3C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	public ushort uCommandPort
	{
		[Token(Token = "0x600163C")]
		[Address(RVA = "0x18D99B4", Offset = "0x18D99B4", VA = "0x18D99B4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x600163B")]
		[Address(RVA = "0x18D8CB8", Offset = "0x18D8CB8", VA = "0x18D8CB8")]
		set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x600163E")]
		[Address(RVA = "0x18D9A20", Offset = "0x18D9A20", VA = "0x18D9A20")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x600163D")]
		[Address(RVA = "0x18D8D34", Offset = "0x18D8D34", VA = "0x18D8D34")]
		set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x6001640")]
		[Address(RVA = "0x18D9A8C", Offset = "0x18D9A8C", VA = "0x18D9A8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600163F")]
		[Address(RVA = "0x18D8DB0", Offset = "0x18D8DB0", VA = "0x18D8DB0")]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public string szAppNetworkName
	{
		[Token(Token = "0x6001642")]
		[Address(RVA = "0x18D9AF8", Offset = "0x18D9AF8", VA = "0x18D9AF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001641")]
		[Address(RVA = "0x18D8E2C", Offset = "0x18D8E2C", VA = "0x18D8E2C")]
		set
		{
		}
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x18D967C", Offset = "0x18D967C", VA = "0x18D967C")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0x18D96BC", Offset = "0x18D96BC", VA = "0x18D96BC")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x18D970C", Offset = "0x18D970C", VA = "0x18D970C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x18D9740", Offset = "0x18D9740", VA = "0x18D9740", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x18D97B0", Offset = "0x18D97B0", VA = "0x18D97B0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0x18D362C", Offset = "0x18D362C", VA = "0x18D362C")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x20002FD")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x40013C0")]
	AkNoAlloc = 0,
	[Token(Token = "0x40013C1")]
	AkMalloc = 1,
	[Token(Token = "0x40013C2")]
	AkAllocMask = 1,
	[Token(Token = "0x40013C3")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x40013C4")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x20002FE")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001C4")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x6001649")]
		[Address(RVA = "0x187B1B0", Offset = "0x187B1B0", VA = "0x187B1B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001648")]
		[Address(RVA = "0x187B120", Offset = "0x187B120", VA = "0x187B120")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public AkThreadProperties threadOutputMgr
	{
		[Token(Token = "0x600164B")]
		[Address(RVA = "0x187B2F0", Offset = "0x187B2F0", VA = "0x187B2F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600164A")]
		[Address(RVA = "0x187B260", Offset = "0x187B260", VA = "0x187B260")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x600164D")]
		[Address(RVA = "0x187B430", Offset = "0x187B430", VA = "0x187B430")]
		get
		{
			return null;
		}
		[Token(Token = "0x600164C")]
		[Address(RVA = "0x187B3A0", Offset = "0x187B3A0", VA = "0x187B3A0")]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x600164F")]
		[Address(RVA = "0x187B570", Offset = "0x187B570", VA = "0x187B570")]
		get
		{
			return null;
		}
		[Token(Token = "0x600164E")]
		[Address(RVA = "0x187B4E0", Offset = "0x187B4E0", VA = "0x187B4E0")]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6001651")]
		[Address(RVA = "0x187B69C", Offset = "0x187B69C", VA = "0x187B69C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001650")]
		[Address(RVA = "0x187B620", Offset = "0x187B620", VA = "0x187B620")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x6001653")]
		[Address(RVA = "0x187B784", Offset = "0x187B784", VA = "0x187B784")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001652")]
		[Address(RVA = "0x187B708", Offset = "0x187B708", VA = "0x187B708")]
		set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public uint uSampleRate
	{
		[Token(Token = "0x6001655")]
		[Address(RVA = "0x187B86C", Offset = "0x187B86C", VA = "0x187B86C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001654")]
		[Address(RVA = "0x187B7F0", Offset = "0x187B7F0", VA = "0x187B7F0")]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6001657")]
		[Address(RVA = "0x187B954", Offset = "0x187B954", VA = "0x187B954")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001656")]
		[Address(RVA = "0x187B8D8", Offset = "0x187B8D8", VA = "0x187B8D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	public uint uChannelMask
	{
		[Token(Token = "0x6001659")]
		[Address(RVA = "0x187BA3C", Offset = "0x187BA3C", VA = "0x187BA3C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001658")]
		[Address(RVA = "0x187B9C0", Offset = "0x187B9C0", VA = "0x187B9C0")]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x600165B")]
		[Address(RVA = "0x187BB24", Offset = "0x187BB24", VA = "0x187BB24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600165A")]
		[Address(RVA = "0x187BAA8", Offset = "0x187BAA8", VA = "0x187BAA8")]
		set
		{
		}
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x186F6AC", Offset = "0x186F6AC", VA = "0x186F6AC")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x186F5AC", Offset = "0x186F5AC", VA = "0x186F5AC")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x187AF50", Offset = "0x187AF50", VA = "0x187AF50", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x187AF84", Offset = "0x187AF84", VA = "0x187AF84", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x187AFF4", Offset = "0x187AFF4", VA = "0x187AFF4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x187BB90", Offset = "0x187BB90", VA = "0x187BB90")]
	public AkPlatformInitSettings()
	{
	}
}
[Token(Token = "0x20002FF")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x600165D")]
	[Address(RVA = "0x2961074", Offset = "0x2961074", VA = "0x2961074")]
	static AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600165E")]
	[Address(RVA = "0x2961078", Offset = "0x2961078", VA = "0x2961078")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x600165F")]
	[Address(RVA = "0x29610EC", Offset = "0x29610EC", VA = "0x29610EC")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001660")]
	[Address(RVA = "0x296117C", Offset = "0x296117C", VA = "0x296117C")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001661")]
	[Address(RVA = "0x29611FC", Offset = "0x29611FC", VA = "0x29611FC")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001662")]
	[Address(RVA = "0x296128C", Offset = "0x296128C", VA = "0x296128C")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001663")]
	[Address(RVA = "0x296130C", Offset = "0x296130C", VA = "0x296130C")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x6001664")]
	[Address(RVA = "0x2961380", Offset = "0x2961380", VA = "0x2961380")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001665")]
	[Address(RVA = "0x2961400", Offset = "0x2961400", VA = "0x2961400")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001666")]
	[Address(RVA = "0x2961490", Offset = "0x2961490", VA = "0x2961490")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001667")]
	[Address(RVA = "0x2961510", Offset = "0x2961510", VA = "0x2961510")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001668")]
	[Address(RVA = "0x29615A0", Offset = "0x29615A0", VA = "0x29615A0")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001669")]
	[Address(RVA = "0x2961620", Offset = "0x2961620", VA = "0x2961620")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600166A")]
	[Address(RVA = "0x29616C4", Offset = "0x29616C4", VA = "0x29616C4")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600166B")]
	[Address(RVA = "0x2961744", Offset = "0x2961744", VA = "0x2961744")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600166C")]
	[Address(RVA = "0x29617D4", Offset = "0x29617D4", VA = "0x29617D4")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600166D")]
	[Address(RVA = "0x2961854", Offset = "0x2961854", VA = "0x2961854")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600166E")]
	[Address(RVA = "0x29618E4", Offset = "0x29618E4", VA = "0x29618E4")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600166F")]
	[Address(RVA = "0x2961964", Offset = "0x2961964", VA = "0x2961964")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001670")]
	[Address(RVA = "0x29619F4", Offset = "0x29619F4", VA = "0x29619F4")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001671")]
	[Address(RVA = "0x2961A74", Offset = "0x2961A74", VA = "0x2961A74")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001672")]
	[Address(RVA = "0x2961AE8", Offset = "0x2961AE8", VA = "0x2961AE8")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001673")]
	[Address(RVA = "0x2961B90", Offset = "0x2961B90", VA = "0x2961B90")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001674")]
	[Address(RVA = "0x2961C40", Offset = "0x2961C40", VA = "0x2961C40")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001675")]
	[Address(RVA = "0x2961CD8", Offset = "0x2961CD8", VA = "0x2961CD8")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001676")]
	[Address(RVA = "0x2961D58", Offset = "0x2961D58", VA = "0x2961D58")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001677")]
	[Address(RVA = "0x2961DD8", Offset = "0x2961DD8", VA = "0x2961DD8")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001678")]
	[Address(RVA = "0x2961E68", Offset = "0x2961E68", VA = "0x2961E68")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001679")]
	[Address(RVA = "0x2961EE8", Offset = "0x2961EE8", VA = "0x2961EE8")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600167A")]
	[Address(RVA = "0x2961F78", Offset = "0x2961F78", VA = "0x2961F78")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600167B")]
	[Address(RVA = "0x2961FF8", Offset = "0x2961FF8", VA = "0x2961FF8")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600167C")]
	[Address(RVA = "0x2962088", Offset = "0x2962088", VA = "0x2962088")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600167D")]
	[Address(RVA = "0x2962108", Offset = "0x2962108", VA = "0x2962108")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x600167E")]
	[Address(RVA = "0x296217C", Offset = "0x296217C", VA = "0x296217C")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600167F")]
	[Address(RVA = "0x29621FC", Offset = "0x29621FC", VA = "0x29621FC")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001680")]
	[Address(RVA = "0x296227C", Offset = "0x296227C", VA = "0x296227C")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001681")]
	[Address(RVA = "0x29622FC", Offset = "0x29622FC", VA = "0x29622FC")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001682")]
	[Address(RVA = "0x296237C", Offset = "0x296237C", VA = "0x296237C")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001683")]
	[Address(RVA = "0x2962424", Offset = "0x2962424", VA = "0x2962424")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6001684")]
	[Address(RVA = "0x296250C", Offset = "0x296250C", VA = "0x296250C")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001685")]
	[Address(RVA = "0x296259C", Offset = "0x296259C", VA = "0x296259C")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001686")]
	[Address(RVA = "0x2962644", Offset = "0x2962644", VA = "0x2962644")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001687")]
	[Address(RVA = "0x29626DC", Offset = "0x29626DC", VA = "0x29626DC")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6001688")]
	[Address(RVA = "0x29627A4", Offset = "0x29627A4", VA = "0x29627A4")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6001689")]
	[Address(RVA = "0x2962818", Offset = "0x2962818", VA = "0x2962818")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600168A")]
	[Address(RVA = "0x2962898", Offset = "0x2962898", VA = "0x2962898")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600168B")]
	[Address(RVA = "0x2962928", Offset = "0x2962928", VA = "0x2962928")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600168C")]
	[Address(RVA = "0x29629A8", Offset = "0x29629A8", VA = "0x29629A8")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600168D")]
	[Address(RVA = "0x2962A38", Offset = "0x2962A38", VA = "0x2962A38")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600168E")]
	[Address(RVA = "0x2962AB8", Offset = "0x2962AB8", VA = "0x2962AB8")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x600168F")]
	[Address(RVA = "0x2962B2C", Offset = "0x2962B2C", VA = "0x2962B2C")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001690")]
	[Address(RVA = "0x2962BAC", Offset = "0x2962BAC", VA = "0x2962BAC")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001691")]
	[Address(RVA = "0x2962C3C", Offset = "0x2962C3C", VA = "0x2962C3C")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001692")]
	[Address(RVA = "0x2962CBC", Offset = "0x2962CBC", VA = "0x2962CBC")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001693")]
	[Address(RVA = "0x2962D4C", Offset = "0x2962D4C", VA = "0x2962D4C")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001694")]
	[Address(RVA = "0x2962DCC", Offset = "0x2962DCC", VA = "0x2962DCC")]
	public static extern IntPtr CSharp_new_AkChannelEmitter();

	[PreserveSig]
	[Token(Token = "0x6001695")]
	[Address(RVA = "0x2962E40", Offset = "0x2962E40", VA = "0x2962E40")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001696")]
	[Address(RVA = "0x2962EC0", Offset = "0x2962EC0", VA = "0x2962EC0")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001697")]
	[Address(RVA = "0x2962F50", Offset = "0x2962F50", VA = "0x2962F50")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001698")]
	[Address(RVA = "0x2962FD0", Offset = "0x2962FD0", VA = "0x2962FD0")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001699")]
	[Address(RVA = "0x2963060", Offset = "0x2963060", VA = "0x2963060")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600169A")]
	[Address(RVA = "0x29630E0", Offset = "0x29630E0", VA = "0x29630E0")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600169B")]
	[Address(RVA = "0x2963170", Offset = "0x2963170", VA = "0x2963170")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600169C")]
	[Address(RVA = "0x29631F0", Offset = "0x29631F0", VA = "0x29631F0")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x600169D")]
	[Address(RVA = "0x2963298", Offset = "0x2963298", VA = "0x2963298")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600169E")]
	[Address(RVA = "0x2963338", Offset = "0x2963338", VA = "0x2963338")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600169F")]
	[Address(RVA = "0x29633AC", Offset = "0x29633AC", VA = "0x29633AC")]
	public static extern int CSharp_AkAuxSendValue_SetGameObjectAuxSendValues(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60016A0")]
	[Address(RVA = "0x2963444", Offset = "0x2963444", VA = "0x2963444")]
	public static extern int CSharp_AkAuxSendValue_GetGameObjectAuxSendValues(IntPtr jarg1, ulong jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x29634DC", Offset = "0x29634DC", VA = "0x29634DC")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x296355C", Offset = "0x296355C", VA = "0x296355C")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x29635D0", Offset = "0x29635D0", VA = "0x29635D0")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x2963660", Offset = "0x2963660", VA = "0x2963660")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x29636F0", Offset = "0x29636F0", VA = "0x29636F0")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x2963770", Offset = "0x2963770", VA = "0x2963770")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x2963800", Offset = "0x2963800", VA = "0x2963800")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x2963880", Offset = "0x2963880", VA = "0x2963880")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x2963900", Offset = "0x2963900", VA = "0x2963900")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x60016AA")]
	[Address(RVA = "0x2963974", Offset = "0x2963974", VA = "0x2963974")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x60016AB")]
	[Address(RVA = "0x29639E8", Offset = "0x29639E8", VA = "0x29639E8")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x2963A5C", Offset = "0x2963A5C", VA = "0x2963A5C")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x2963AD0", Offset = "0x2963AD0", VA = "0x2963AD0")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x60016AE")]
	[Address(RVA = "0x2963B44", Offset = "0x2963B44", VA = "0x2963B44")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x60016AF")]
	[Address(RVA = "0x2963BB8", Offset = "0x2963BB8", VA = "0x2963BB8")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x60016B0")]
	[Address(RVA = "0x2963C2C", Offset = "0x2963C2C", VA = "0x2963C2C")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016B1")]
	[Address(RVA = "0x2963CBC", Offset = "0x2963CBC", VA = "0x2963CBC")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016B2")]
	[Address(RVA = "0x2963D3C", Offset = "0x2963D3C", VA = "0x2963D3C")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016B3")]
	[Address(RVA = "0x2963DCC", Offset = "0x2963DCC", VA = "0x2963DCC")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016B4")]
	[Address(RVA = "0x2963E4C", Offset = "0x2963E4C", VA = "0x2963E4C")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016B5")]
	[Address(RVA = "0x2963EDC", Offset = "0x2963EDC", VA = "0x2963EDC")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x2963F5C", Offset = "0x2963F5C", VA = "0x2963F5C")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x2963FEC", Offset = "0x2963FEC", VA = "0x2963FEC")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x296406C", Offset = "0x296406C", VA = "0x296406C")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x29640FC", Offset = "0x29640FC", VA = "0x29640FC")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x296417C", Offset = "0x296417C", VA = "0x296417C")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x296420C", Offset = "0x296420C", VA = "0x296420C")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016BC")]
	[Address(RVA = "0x296428C", Offset = "0x296428C", VA = "0x296428C")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x296430C", Offset = "0x296430C", VA = "0x296430C")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016BE")]
	[Address(RVA = "0x296438C", Offset = "0x296438C", VA = "0x296438C")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x296440C", Offset = "0x296440C", VA = "0x296440C")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016C0")]
	[Address(RVA = "0x296448C", Offset = "0x296448C", VA = "0x296448C")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016C1")]
	[Address(RVA = "0x296450C", Offset = "0x296450C", VA = "0x296450C")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x29645D4", Offset = "0x29645D4", VA = "0x29645D4")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016C3")]
	[Address(RVA = "0x296465C", Offset = "0x296465C", VA = "0x296465C")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x60016C4")]
	[Address(RVA = "0x29646D0", Offset = "0x29646D0", VA = "0x29646D0")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016C5")]
	[Address(RVA = "0x2964750", Offset = "0x2964750", VA = "0x2964750")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016C6")]
	[Address(RVA = "0x29647E0", Offset = "0x29647E0", VA = "0x29647E0")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x2964860", Offset = "0x2964860", VA = "0x2964860")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x29648E0", Offset = "0x29648E0", VA = "0x29648E0")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x2964960", Offset = "0x2964960", VA = "0x2964960")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x29649E0", Offset = "0x29649E0", VA = "0x29649E0")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016CB")]
	[Address(RVA = "0x2964A78", Offset = "0x2964A78", VA = "0x2964A78")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016CC")]
	[Address(RVA = "0x2964B10", Offset = "0x2964B10", VA = "0x2964B10")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x60016CD")]
	[Address(RVA = "0x2964B84", Offset = "0x2964B84", VA = "0x2964B84")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016CE")]
	[Address(RVA = "0x2964C04", Offset = "0x2964C04", VA = "0x2964C04")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60016CF")]
	[Address(RVA = "0x2964C78", Offset = "0x2964C78", VA = "0x2964C78")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x60016D0")]
	[Address(RVA = "0x2964CEC", Offset = "0x2964CEC", VA = "0x2964CEC")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016D1")]
	[Address(RVA = "0x2964D6C", Offset = "0x2964D6C", VA = "0x2964D6C")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60016D2")]
	[Address(RVA = "0x2964DE0", Offset = "0x2964DE0", VA = "0x2964DE0")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x60016D3")]
	[Address(RVA = "0x2964E54", Offset = "0x2964E54", VA = "0x2964E54")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016D4")]
	[Address(RVA = "0x2964ED4", Offset = "0x2964ED4", VA = "0x2964ED4")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60016D5")]
	[Address(RVA = "0x2964F48", Offset = "0x2964F48", VA = "0x2964F48")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016D6")]
	[Address(RVA = "0x2964FC8", Offset = "0x2964FC8", VA = "0x2964FC8")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016D7")]
	[Address(RVA = "0x2965048", Offset = "0x2965048", VA = "0x2965048")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016D8")]
	[Address(RVA = "0x29650D8", Offset = "0x29650D8", VA = "0x29650D8")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016D9")]
	[Address(RVA = "0x2965170", Offset = "0x2965170", VA = "0x2965170")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60016DA")]
	[Address(RVA = "0x2965208", Offset = "0x2965208", VA = "0x2965208")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016DB")]
	[Address(RVA = "0x2965298", Offset = "0x2965298", VA = "0x2965298")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016DC")]
	[Address(RVA = "0x2965318", Offset = "0x2965318", VA = "0x2965318")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60016DD")]
	[Address(RVA = "0x29653A8", Offset = "0x29653A8", VA = "0x29653A8")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016DE")]
	[Address(RVA = "0x2965428", Offset = "0x2965428", VA = "0x2965428")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016DF")]
	[Address(RVA = "0x29654B8", Offset = "0x29654B8", VA = "0x29654B8")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016E0")]
	[Address(RVA = "0x2965538", Offset = "0x2965538", VA = "0x2965538")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x60016E1")]
	[Address(RVA = "0x29655AC", Offset = "0x29655AC", VA = "0x29655AC")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x296562C", Offset = "0x296562C", VA = "0x296562C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x29656AC", Offset = "0x29656AC", VA = "0x29656AC")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x296572C", Offset = "0x296572C", VA = "0x296572C")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x29657BC", Offset = "0x29657BC", VA = "0x29657BC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016E6")]
	[Address(RVA = "0x296584C", Offset = "0x296584C", VA = "0x296584C")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x29658DC", Offset = "0x29658DC", VA = "0x29658DC")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x296596C", Offset = "0x296596C", VA = "0x296596C")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x29659FC", Offset = "0x29659FC", VA = "0x29659FC")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x2965A7C", Offset = "0x2965A7C", VA = "0x2965A7C")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x2965AFC", Offset = "0x2965AFC", VA = "0x2965AFC")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016EC")]
	[Address(RVA = "0x2965B7C", Offset = "0x2965B7C", VA = "0x2965B7C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x2965BFC", Offset = "0x2965BFC", VA = "0x2965BFC")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016EE")]
	[Address(RVA = "0x2965C84", Offset = "0x2965C84", VA = "0x2965C84")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016EF")]
	[Address(RVA = "0x2965D14", Offset = "0x2965D14", VA = "0x2965D14")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x2965D94", Offset = "0x2965D94", VA = "0x2965D94")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x2965E24", Offset = "0x2965E24", VA = "0x2965E24")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016F2")]
	[Address(RVA = "0x2965EA4", Offset = "0x2965EA4", VA = "0x2965EA4")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016F3")]
	[Address(RVA = "0x2965F24", Offset = "0x2965F24", VA = "0x2965F24")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016F4")]
	[Address(RVA = "0x2965FB4", Offset = "0x2965FB4", VA = "0x2965FB4")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016F5")]
	[Address(RVA = "0x2966044", Offset = "0x2966044", VA = "0x2966044")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016F6")]
	[Address(RVA = "0x29660C4", Offset = "0x29660C4", VA = "0x29660C4")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x2966154", Offset = "0x2966154", VA = "0x2966154")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x29661E4", Offset = "0x29661E4", VA = "0x29661E4")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016F9")]
	[Address(RVA = "0x296627C", Offset = "0x296627C", VA = "0x296627C")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60016FA")]
	[Address(RVA = "0x2966304", Offset = "0x2966304", VA = "0x2966304")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60016FB")]
	[Address(RVA = "0x296639C", Offset = "0x296639C", VA = "0x296639C")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016FC")]
	[Address(RVA = "0x296642C", Offset = "0x296642C", VA = "0x296642C")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60016FD")]
	[Address(RVA = "0x29664BC", Offset = "0x29664BC", VA = "0x29664BC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x60016FE")]
	[Address(RVA = "0x296657C", Offset = "0x296657C", VA = "0x296657C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60016FF")]
	[Address(RVA = "0x296662C", Offset = "0x296662C", VA = "0x296662C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001700")]
	[Address(RVA = "0x29666D4", Offset = "0x29666D4", VA = "0x29666D4")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001701")]
	[Address(RVA = "0x296676C", Offset = "0x296676C", VA = "0x296676C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001702")]
	[Address(RVA = "0x29667FC", Offset = "0x29667FC", VA = "0x29667FC")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x6001703")]
	[Address(RVA = "0x2966870", Offset = "0x2966870", VA = "0x2966870")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001704")]
	[Address(RVA = "0x29668F0", Offset = "0x29668F0", VA = "0x29668F0")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001705")]
	[Address(RVA = "0x29669A0", Offset = "0x29669A0", VA = "0x29669A0")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001706")]
	[Address(RVA = "0x2966A48", Offset = "0x2966A48", VA = "0x2966A48")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001707")]
	[Address(RVA = "0x2966AD8", Offset = "0x2966AD8", VA = "0x2966AD8")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_3(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001708")]
	[Address(RVA = "0x2966B58", Offset = "0x2966B58", VA = "0x2966B58")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001709")]
	[Address(RVA = "0x2966BD8", Offset = "0x2966BD8", VA = "0x2966BD8")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600170A")]
	[Address(RVA = "0x2966C70", Offset = "0x2966C70", VA = "0x2966C70")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600170B")]
	[Address(RVA = "0x2966D00", Offset = "0x2966D00", VA = "0x2966D00")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600170C")]
	[Address(RVA = "0x2966D80", Offset = "0x2966D80", VA = "0x2966D80")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600170D")]
	[Address(RVA = "0x2966E18", Offset = "0x2966E18", VA = "0x2966E18")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600170E")]
	[Address(RVA = "0x2966EA8", Offset = "0x2966EA8", VA = "0x2966EA8")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600170F")]
	[Address(RVA = "0x2966F28", Offset = "0x2966F28", VA = "0x2966F28")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001710")]
	[Address(RVA = "0x2966FC0", Offset = "0x2966FC0", VA = "0x2966FC0")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001711")]
	[Address(RVA = "0x2967050", Offset = "0x2967050", VA = "0x2967050")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001712")]
	[Address(RVA = "0x29670D0", Offset = "0x29670D0", VA = "0x29670D0")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001713")]
	[Address(RVA = "0x2967168", Offset = "0x2967168", VA = "0x2967168")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001714")]
	[Address(RVA = "0x29671F8", Offset = "0x29671F8", VA = "0x29671F8")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001715")]
	[Address(RVA = "0x2967278", Offset = "0x2967278", VA = "0x2967278")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001716")]
	[Address(RVA = "0x29672F8", Offset = "0x29672F8", VA = "0x29672F8")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001717")]
	[Address(RVA = "0x2967390", Offset = "0x2967390", VA = "0x2967390")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001718")]
	[Address(RVA = "0x2967410", Offset = "0x2967410", VA = "0x2967410")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001719")]
	[Address(RVA = "0x2967490", Offset = "0x2967490", VA = "0x2967490")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600171A")]
	[Address(RVA = "0x2967504", Offset = "0x2967504", VA = "0x2967504")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600171B")]
	[Address(RVA = "0x29675C4", Offset = "0x29675C4", VA = "0x29675C4")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x600171C")]
	[Address(RVA = "0x2967674", Offset = "0x2967674", VA = "0x2967674")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600171D")]
	[Address(RVA = "0x296771C", Offset = "0x296771C", VA = "0x296771C")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600171E")]
	[Address(RVA = "0x29677B4", Offset = "0x29677B4", VA = "0x29677B4")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600171F")]
	[Address(RVA = "0x2967844", Offset = "0x2967844", VA = "0x2967844")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001720")]
	[Address(RVA = "0x29678C4", Offset = "0x29678C4", VA = "0x29678C4")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001721")]
	[Address(RVA = "0x2967954", Offset = "0x2967954", VA = "0x2967954")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001722")]
	[Address(RVA = "0x29679D4", Offset = "0x29679D4", VA = "0x29679D4")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001723")]
	[Address(RVA = "0x2967A64", Offset = "0x2967A64", VA = "0x2967A64")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001724")]
	[Address(RVA = "0x2967AE4", Offset = "0x2967AE4", VA = "0x2967AE4")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001725")]
	[Address(RVA = "0x2967B74", Offset = "0x2967B74", VA = "0x2967B74")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001726")]
	[Address(RVA = "0x2967BF4", Offset = "0x2967BF4", VA = "0x2967BF4")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001727")]
	[Address(RVA = "0x2967C74", Offset = "0x2967C74", VA = "0x2967C74")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001728")]
	[Address(RVA = "0x2967D04", Offset = "0x2967D04", VA = "0x2967D04")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001729")]
	[Address(RVA = "0x2967D84", Offset = "0x2967D84", VA = "0x2967D84")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x600172A")]
	[Address(RVA = "0x2967DF8", Offset = "0x2967DF8", VA = "0x2967DF8")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600172B")]
	[Address(RVA = "0x2967E78", Offset = "0x2967E78", VA = "0x2967E78")]
	public static extern void CSharp_AkInitSettings_pfnAssertHook_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600172C")]
	[Address(RVA = "0x2967F08", Offset = "0x2967F08", VA = "0x2967F08")]
	public static extern IntPtr CSharp_AkInitSettings_pfnAssertHook_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600172D")]
	[Address(RVA = "0x2967F88", Offset = "0x2967F88", VA = "0x2967F88")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600172E")]
	[Address(RVA = "0x2968018", Offset = "0x2968018", VA = "0x2968018")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600172F")]
	[Address(RVA = "0x2968098", Offset = "0x2968098", VA = "0x2968098")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001730")]
	[Address(RVA = "0x2968128", Offset = "0x2968128", VA = "0x2968128")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001731")]
	[Address(RVA = "0x29681A8", Offset = "0x29681A8", VA = "0x29681A8")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001732")]
	[Address(RVA = "0x2968238", Offset = "0x2968238", VA = "0x2968238")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001733")]
	[Address(RVA = "0x29682B8", Offset = "0x29682B8", VA = "0x29682B8")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001734")]
	[Address(RVA = "0x2968348", Offset = "0x2968348", VA = "0x2968348")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001735")]
	[Address(RVA = "0x29683C8", Offset = "0x29683C8", VA = "0x29683C8")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001736")]
	[Address(RVA = "0x2968458", Offset = "0x2968458", VA = "0x2968458")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001737")]
	[Address(RVA = "0x29684D8", Offset = "0x29684D8", VA = "0x29684D8")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001738")]
	[Address(RVA = "0x2968568", Offset = "0x2968568", VA = "0x2968568")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001739")]
	[Address(RVA = "0x29685F0", Offset = "0x29685F0", VA = "0x29685F0")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600173A")]
	[Address(RVA = "0x2968680", Offset = "0x2968680", VA = "0x2968680")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600173B")]
	[Address(RVA = "0x2968700", Offset = "0x2968700", VA = "0x2968700")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600173C")]
	[Address(RVA = "0x2968790", Offset = "0x2968790", VA = "0x2968790")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600173D")]
	[Address(RVA = "0x2968810", Offset = "0x2968810", VA = "0x2968810")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600173E")]
	[Address(RVA = "0x29688A0", Offset = "0x29688A0", VA = "0x29688A0")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600173F")]
	[Address(RVA = "0x2968920", Offset = "0x2968920", VA = "0x2968920")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001740")]
	[Address(RVA = "0x29689B0", Offset = "0x29689B0", VA = "0x29689B0")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001741")]
	[Address(RVA = "0x2968A30", Offset = "0x2968A30", VA = "0x2968A30")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001742")]
	[Address(RVA = "0x2968AC0", Offset = "0x2968AC0", VA = "0x2968AC0")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001743")]
	[Address(RVA = "0x2968B40", Offset = "0x2968B40", VA = "0x2968B40")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001744")]
	[Address(RVA = "0x2968BD0", Offset = "0x2968BD0", VA = "0x2968BD0")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001745")]
	[Address(RVA = "0x2968C50", Offset = "0x2968C50", VA = "0x2968C50")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001746")]
	[Address(RVA = "0x2968CE0", Offset = "0x2968CE0", VA = "0x2968CE0")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001747")]
	[Address(RVA = "0x2968D68", Offset = "0x2968D68", VA = "0x2968D68")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001748")]
	[Address(RVA = "0x2968DF8", Offset = "0x2968DF8", VA = "0x2968DF8")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001749")]
	[Address(RVA = "0x2968E80", Offset = "0x2968E80", VA = "0x2968E80")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600174A")]
	[Address(RVA = "0x2968F24", Offset = "0x2968F24", VA = "0x2968F24")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600174B")]
	[Address(RVA = "0x2968FA4", Offset = "0x2968FA4", VA = "0x2968FA4")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600174C")]
	[Address(RVA = "0x2969034", Offset = "0x2969034", VA = "0x2969034")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600174D")]
	[Address(RVA = "0x29690B4", Offset = "0x29690B4", VA = "0x29690B4")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x600174E")]
	[Address(RVA = "0x2969128", Offset = "0x2969128", VA = "0x2969128")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600174F")]
	[Address(RVA = "0x29691A8", Offset = "0x29691A8", VA = "0x29691A8")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001750")]
	[Address(RVA = "0x2969238", Offset = "0x2969238", VA = "0x2969238")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001751")]
	[Address(RVA = "0x29692B8", Offset = "0x29692B8", VA = "0x29692B8")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001752")]
	[Address(RVA = "0x2969348", Offset = "0x2969348", VA = "0x2969348")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001753")]
	[Address(RVA = "0x29693C8", Offset = "0x29693C8", VA = "0x29693C8")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001754")]
	[Address(RVA = "0x2969458", Offset = "0x2969458", VA = "0x2969458")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001755")]
	[Address(RVA = "0x29694D8", Offset = "0x29694D8", VA = "0x29694D8")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6001756")]
	[Address(RVA = "0x296954C", Offset = "0x296954C", VA = "0x296954C")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001757")]
	[Address(RVA = "0x29695CC", Offset = "0x29695CC", VA = "0x29695CC")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6001758")]
	[Address(RVA = "0x2969648", Offset = "0x2969648", VA = "0x2969648")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001759")]
	[Address(RVA = "0x29696C8", Offset = "0x29696C8", VA = "0x29696C8")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600175A")]
	[Address(RVA = "0x2969748", Offset = "0x2969748", VA = "0x2969748")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x600175B")]
	[Address(RVA = "0x29697BC", Offset = "0x29697BC", VA = "0x29697BC")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600175C")]
	[Address(RVA = "0x296984C", Offset = "0x296984C", VA = "0x296984C")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x600175D")]
	[Address(RVA = "0x29698CC", Offset = "0x29698CC", VA = "0x29698CC")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600175E")]
	[Address(RVA = "0x296995C", Offset = "0x296995C", VA = "0x296995C")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x600175F")]
	[Address(RVA = "0x29699DC", Offset = "0x29699DC", VA = "0x29699DC")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001760")]
	[Address(RVA = "0x2969A8C", Offset = "0x2969A8C", VA = "0x2969A8C")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001761")]
	[Address(RVA = "0x2969B2C", Offset = "0x2969B2C", VA = "0x2969B2C")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001762")]
	[Address(RVA = "0x2969BDC", Offset = "0x2969BDC", VA = "0x2969BDC")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001763")]
	[Address(RVA = "0x2969C84", Offset = "0x2969C84", VA = "0x2969C84")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6001764")]
	[Address(RVA = "0x2969D0C", Offset = "0x2969D0C", VA = "0x2969D0C")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6001765")]
	[Address(RVA = "0x2969D8C", Offset = "0x2969D8C", VA = "0x2969D8C")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001766")]
	[Address(RVA = "0x2969E0C", Offset = "0x2969E0C", VA = "0x2969E0C")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001767")]
	[Address(RVA = "0x2969E80", Offset = "0x2969E80", VA = "0x2969E80")]
	public static extern int CSharp_RegisterPluginDLL(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001768")]
	[Address(RVA = "0x2969F18", Offset = "0x2969F18", VA = "0x2969F18")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001769")]
	[Address(RVA = "0x2969FB0", Offset = "0x2969FB0", VA = "0x2969FB0")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x600176A")]
	[Address(RVA = "0x296A088", Offset = "0x296A088", VA = "0x296A088")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x600176B")]
	[Address(RVA = "0x296A150", Offset = "0x296A150", VA = "0x296A150")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x600176C")]
	[Address(RVA = "0x296A210", Offset = "0x296A210", VA = "0x296A210")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x600176D")]
	[Address(RVA = "0x296A2C0", Offset = "0x296A2C0", VA = "0x296A2C0")]
	public static extern uint CSharp_PostEvent__SWIG_4(uint jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600176E")]
	[Address(RVA = "0x296A358", Offset = "0x296A358", VA = "0x296A358")]
	public static extern uint CSharp_PostEvent__SWIG_5(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600176F")]
	[Address(RVA = "0x296A3E8", Offset = "0x296A3E8", VA = "0x296A3E8")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6001770")]
	[Address(RVA = "0x296A4D8", Offset = "0x296A4D8", VA = "0x296A4D8")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001771")]
	[Address(RVA = "0x296A5B8", Offset = "0x296A5B8", VA = "0x296A5B8")]
	public static extern uint CSharp_PostEvent__SWIG_8(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001772")]
	[Address(RVA = "0x296A690", Offset = "0x296A690", VA = "0x296A690")]
	public static extern uint CSharp_PostEvent__SWIG_9(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001773")]
	[Address(RVA = "0x296A758", Offset = "0x296A758", VA = "0x296A758")]
	public static extern uint CSharp_PostEvent__SWIG_10(string jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001774")]
	[Address(RVA = "0x296A808", Offset = "0x296A808", VA = "0x296A808")]
	public static extern uint CSharp_PostEvent__SWIG_11(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001775")]
	[Address(RVA = "0x296A8B0", Offset = "0x296A8B0", VA = "0x296A8B0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001776")]
	[Address(RVA = "0x296A970", Offset = "0x296A970", VA = "0x296A970")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001777")]
	[Address(RVA = "0x296AA20", Offset = "0x296AA20", VA = "0x296AA20")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001778")]
	[Address(RVA = "0x296AAC8", Offset = "0x296AAC8", VA = "0x296AAC8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001779")]
	[Address(RVA = "0x296AB60", Offset = "0x296AB60", VA = "0x296AB60")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600177A")]
	[Address(RVA = "0x296ABF0", Offset = "0x296ABF0", VA = "0x296ABF0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x600177B")]
	[Address(RVA = "0x296ACC8", Offset = "0x296ACC8", VA = "0x296ACC8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x600177C")]
	[Address(RVA = "0x296AD90", Offset = "0x296AD90", VA = "0x296AD90")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600177D")]
	[Address(RVA = "0x296AE50", Offset = "0x296AE50", VA = "0x296AE50")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x600177E")]
	[Address(RVA = "0x296AF00", Offset = "0x296AF00", VA = "0x296AF00")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600177F")]
	[Address(RVA = "0x296AFA8", Offset = "0x296AFA8", VA = "0x296AFA8")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6001780")]
	[Address(RVA = "0x296B050", Offset = "0x296B050", VA = "0x296B050")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001781")]
	[Address(RVA = "0x296B0E0", Offset = "0x296B0E0", VA = "0x296B0E0")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001782")]
	[Address(RVA = "0x296B160", Offset = "0x296B160", VA = "0x296B160")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x6001783")]
	[Address(RVA = "0x296B1D4", Offset = "0x296B1D4", VA = "0x296B1D4")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6001784")]
	[Address(RVA = "0x296B26C", Offset = "0x296B26C", VA = "0x296B26C")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6001785")]
	[Address(RVA = "0x296B31C", Offset = "0x296B31C", VA = "0x296B31C")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001786")]
	[Address(RVA = "0x296B39C", Offset = "0x296B39C", VA = "0x296B39C")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001787")]
	[Address(RVA = "0x296B434", Offset = "0x296B434", VA = "0x296B434")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001788")]
	[Address(RVA = "0x296B4CC", Offset = "0x296B4CC", VA = "0x296B4CC")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001789")]
	[Address(RVA = "0x296B57C", Offset = "0x296B57C", VA = "0x296B57C")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600178A")]
	[Address(RVA = "0x296B62C", Offset = "0x296B62C", VA = "0x296B62C")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x600178B")]
	[Address(RVA = "0x296B6D4", Offset = "0x296B6D4", VA = "0x296B6D4")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600178C")]
	[Address(RVA = "0x296B76C", Offset = "0x296B76C", VA = "0x296B76C")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600178D")]
	[Address(RVA = "0x296B834", Offset = "0x296B834", VA = "0x296B834")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x600178E")]
	[Address(RVA = "0x296B8F4", Offset = "0x296B8F4", VA = "0x296B8F4")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600178F")]
	[Address(RVA = "0x296B9A4", Offset = "0x296B9A4", VA = "0x296B9A4")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001790")]
	[Address(RVA = "0x296BA5C", Offset = "0x296BA5C", VA = "0x296BA5C")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001791")]
	[Address(RVA = "0x296BB04", Offset = "0x296BB04", VA = "0x296BB04")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001792")]
	[Address(RVA = "0x296BBA4", Offset = "0x296BBA4", VA = "0x296BBA4")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001793")]
	[Address(RVA = "0x296BC74", Offset = "0x296BC74", VA = "0x296BC74")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001794")]
	[Address(RVA = "0x296BD34", Offset = "0x296BD34", VA = "0x296BD34")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001795")]
	[Address(RVA = "0x296BDEC", Offset = "0x296BDEC", VA = "0x296BDEC")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001796")]
	[Address(RVA = "0x296BE6C", Offset = "0x296BE6C", VA = "0x296BE6C")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001797")]
	[Address(RVA = "0x296BEEC", Offset = "0x296BEEC", VA = "0x296BEEC")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001798")]
	[Address(RVA = "0x296BF6C", Offset = "0x296BF6C", VA = "0x296BF6C")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001799")]
	[Address(RVA = "0x296C004", Offset = "0x296C004", VA = "0x296C004")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x600179A")]
	[Address(RVA = "0x296C094", Offset = "0x296C094", VA = "0x296C094")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x600179B")]
	[Address(RVA = "0x296C12C", Offset = "0x296C12C", VA = "0x296C12C")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600179C")]
	[Address(RVA = "0x296C1AC", Offset = "0x296C1AC", VA = "0x296C1AC")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x600179D")]
	[Address(RVA = "0x296C21C", Offset = "0x296C21C", VA = "0x296C21C")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600179E")]
	[Address(RVA = "0x296C2B4", Offset = "0x296C2B4", VA = "0x296C2B4")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600179F")]
	[Address(RVA = "0x296C344", Offset = "0x296C344", VA = "0x296C344")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60017A0")]
	[Address(RVA = "0x296C3C4", Offset = "0x296C3C4", VA = "0x296C3C4")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60017A1")]
	[Address(RVA = "0x296C444", Offset = "0x296C444", VA = "0x296C444")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x60017A2")]
	[Address(RVA = "0x296C4C4", Offset = "0x296C4C4", VA = "0x296C4C4")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x60017A3")]
	[Address(RVA = "0x296C540", Offset = "0x296C540", VA = "0x296C540")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x60017A4")]
	[Address(RVA = "0x296C608", Offset = "0x296C608", VA = "0x296C608")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x296C67C", Offset = "0x296C67C", VA = "0x296C67C")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60017A6")]
	[Address(RVA = "0x296C724", Offset = "0x296C724", VA = "0x296C724")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x60017A7")]
	[Address(RVA = "0x296C7BC", Offset = "0x296C7BC", VA = "0x296C7BC")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60017A8")]
	[Address(RVA = "0x296C864", Offset = "0x296C864", VA = "0x296C864")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x60017A9")]
	[Address(RVA = "0x296C8FC", Offset = "0x296C8FC", VA = "0x296C8FC")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60017AA")]
	[Address(RVA = "0x296C98C", Offset = "0x296C98C", VA = "0x296C98C")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x60017AB")]
	[Address(RVA = "0x296CA00", Offset = "0x296CA00", VA = "0x296CA00")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x296CA90", Offset = "0x296CA90", VA = "0x296CA90")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x296CB40", Offset = "0x296CB40", VA = "0x296CB40")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x296CBD0", Offset = "0x296CBD0", VA = "0x296CBD0")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x296CC68", Offset = "0x296CC68", VA = "0x296CC68")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x296CD10", Offset = "0x296CD10", VA = "0x296CD10")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x296CDD8", Offset = "0x296CDD8", VA = "0x296CDD8")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x296CE80", Offset = "0x296CE80", VA = "0x296CE80")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x296CF30", Offset = "0x296CF30", VA = "0x296CF30")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x296CFF0", Offset = "0x296CFF0", VA = "0x296CFF0")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x296D0A0", Offset = "0x296D0A0", VA = "0x296D0A0")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x296D148", Offset = "0x296D148", VA = "0x296D148")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x296D1E0", Offset = "0x296D1E0", VA = "0x296D1E0")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x296D270", Offset = "0x296D270", VA = "0x296D270")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x296D330", Offset = "0x296D330", VA = "0x296D330")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x296D3D8", Offset = "0x296D3D8", VA = "0x296D3D8")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x296D458", Offset = "0x296D458", VA = "0x296D458")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x296D50C", Offset = "0x296D50C", VA = "0x296D50C")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x296D5B8", Offset = "0x296D5B8", VA = "0x296D5B8")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60017BE")]
	[Address(RVA = "0x296D650", Offset = "0x296D650", VA = "0x296D650")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60017BF")]
	[Address(RVA = "0x296D6E0", Offset = "0x296D6E0", VA = "0x296D6E0")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60017C0")]
	[Address(RVA = "0x296D7AC", Offset = "0x296D7AC", VA = "0x296D7AC")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60017C1")]
	[Address(RVA = "0x296D870", Offset = "0x296D870", VA = "0x296D870")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60017C2")]
	[Address(RVA = "0x296D920", Offset = "0x296D920", VA = "0x296D920")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60017C3")]
	[Address(RVA = "0x296D9C8", Offset = "0x296D9C8", VA = "0x296D9C8")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x60017C4")]
	[Address(RVA = "0x296DA3C", Offset = "0x296DA3C", VA = "0x296DA3C")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017C5")]
	[Address(RVA = "0x296DAD4", Offset = "0x296DAD4", VA = "0x296DAD4")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017C6")]
	[Address(RVA = "0x296DB74", Offset = "0x296DB74", VA = "0x296DB74")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60017C7")]
	[Address(RVA = "0x296DC24", Offset = "0x296DC24", VA = "0x296DC24")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60017C8")]
	[Address(RVA = "0x296DCDC", Offset = "0x296DCDC", VA = "0x296DCDC")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60017C9")]
	[Address(RVA = "0x296DD6C", Offset = "0x296DD6C", VA = "0x296DD6C")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60017CA")]
	[Address(RVA = "0x296DDFC", Offset = "0x296DDFC", VA = "0x296DDFC")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60017CB")]
	[Address(RVA = "0x296DEC8", Offset = "0x296DEC8", VA = "0x296DEC8")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60017CC")]
	[Address(RVA = "0x296DF80", Offset = "0x296DF80", VA = "0x296DF80")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60017CD")]
	[Address(RVA = "0x296E064", Offset = "0x296E064", VA = "0x296E064")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60017CE")]
	[Address(RVA = "0x296E134", Offset = "0x296E134", VA = "0x296E134")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60017CF")]
	[Address(RVA = "0x296E1C4", Offset = "0x296E1C4", VA = "0x296E1C4")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60017D0")]
	[Address(RVA = "0x296E254", Offset = "0x296E254", VA = "0x296E254")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60017D1")]
	[Address(RVA = "0x296E2D4", Offset = "0x296E2D4", VA = "0x296E2D4")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60017D2")]
	[Address(RVA = "0x296E354", Offset = "0x296E354", VA = "0x296E354")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60017D3")]
	[Address(RVA = "0x296E3D4", Offset = "0x296E3D4", VA = "0x296E3D4")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x60017D4")]
	[Address(RVA = "0x296E484", Offset = "0x296E484", VA = "0x296E484")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60017D5")]
	[Address(RVA = "0x296E51C", Offset = "0x296E51C", VA = "0x296E51C")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60017D6")]
	[Address(RVA = "0x296E5DC", Offset = "0x296E5DC", VA = "0x296E5DC")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60017D7")]
	[Address(RVA = "0x296E694", Offset = "0x296E694", VA = "0x296E694")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60017D8")]
	[Address(RVA = "0x296E73C", Offset = "0x296E73C", VA = "0x296E73C")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60017D9")]
	[Address(RVA = "0x296E7DC", Offset = "0x296E7DC", VA = "0x296E7DC")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60017DA")]
	[Address(RVA = "0x296E86C", Offset = "0x296E86C", VA = "0x296E86C")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60017DB")]
	[Address(RVA = "0x296E944", Offset = "0x296E944", VA = "0x296E944")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60017DC")]
	[Address(RVA = "0x296EA14", Offset = "0x296EA14", VA = "0x296EA14")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60017DD")]
	[Address(RVA = "0x296EAD4", Offset = "0x296EAD4", VA = "0x296EAD4")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60017DE")]
	[Address(RVA = "0x296EB8C", Offset = "0x296EB8C", VA = "0x296EB8C")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60017DF")]
	[Address(RVA = "0x296EC34", Offset = "0x296EC34", VA = "0x296EC34")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60017E0")]
	[Address(RVA = "0x296ECF4", Offset = "0x296ECF4", VA = "0x296ECF4")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60017E1")]
	[Address(RVA = "0x296EDAC", Offset = "0x296EDAC", VA = "0x296EDAC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60017E2")]
	[Address(RVA = "0x296EE54", Offset = "0x296EE54", VA = "0x296EE54")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017E3")]
	[Address(RVA = "0x296EEF4", Offset = "0x296EEF4", VA = "0x296EEF4")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60017E4")]
	[Address(RVA = "0x296EFCC", Offset = "0x296EFCC", VA = "0x296EFCC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60017E5")]
	[Address(RVA = "0x296F09C", Offset = "0x296F09C", VA = "0x296F09C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60017E6")]
	[Address(RVA = "0x296F15C", Offset = "0x296F15C", VA = "0x296F15C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017E7")]
	[Address(RVA = "0x296F214", Offset = "0x296F214", VA = "0x296F214")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60017E8")]
	[Address(RVA = "0x296F2C4", Offset = "0x296F2C4", VA = "0x296F2C4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60017E9")]
	[Address(RVA = "0x296F36C", Offset = "0x296F36C", VA = "0x296F36C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60017EA")]
	[Address(RVA = "0x296F404", Offset = "0x296F404", VA = "0x296F404")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60017EB")]
	[Address(RVA = "0x296F494", Offset = "0x296F494", VA = "0x296F494")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60017EC")]
	[Address(RVA = "0x296F514", Offset = "0x296F514", VA = "0x296F514")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60017ED")]
	[Address(RVA = "0x296F5DC", Offset = "0x296F5DC", VA = "0x296F5DC")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60017EE")]
	[Address(RVA = "0x296F69C", Offset = "0x296F69C", VA = "0x296F69C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60017EF")]
	[Address(RVA = "0x296F74C", Offset = "0x296F74C", VA = "0x296F74C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60017F0")]
	[Address(RVA = "0x296F7F4", Offset = "0x296F7F4", VA = "0x296F7F4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60017F1")]
	[Address(RVA = "0x296F88C", Offset = "0x296F88C", VA = "0x296F88C")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60017F2")]
	[Address(RVA = "0x296F924", Offset = "0x296F924", VA = "0x296F924")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60017F3")]
	[Address(RVA = "0x296F9E8", Offset = "0x296F9E8", VA = "0x296F9E8")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60017F4")]
	[Address(RVA = "0x296FA78", Offset = "0x296FA78", VA = "0x296FA78")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60017F5")]
	[Address(RVA = "0x296FB20", Offset = "0x296FB20", VA = "0x296FB20")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60017F6")]
	[Address(RVA = "0x296FBB0", Offset = "0x296FBB0", VA = "0x296FBB0")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60017F7")]
	[Address(RVA = "0x296FC70", Offset = "0x296FC70", VA = "0x296FC70")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017F8")]
	[Address(RVA = "0x296FD08", Offset = "0x296FD08", VA = "0x296FD08")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60017F9")]
	[Address(RVA = "0x296FDA8", Offset = "0x296FDA8", VA = "0x296FDA8")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017FA")]
	[Address(RVA = "0x296FE40", Offset = "0x296FE40", VA = "0x296FE40")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017FB")]
	[Address(RVA = "0x296FED8", Offset = "0x296FED8", VA = "0x296FED8")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60017FC")]
	[Address(RVA = "0x296FF88", Offset = "0x296FF88", VA = "0x296FF88")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60017FD")]
	[Address(RVA = "0x2970018", Offset = "0x2970018", VA = "0x2970018")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60017FE")]
	[Address(RVA = "0x29700C0", Offset = "0x29700C0", VA = "0x29700C0")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60017FF")]
	[Address(RVA = "0x2970150", Offset = "0x2970150", VA = "0x2970150")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001800")]
	[Address(RVA = "0x29701F8", Offset = "0x29701F8", VA = "0x29701F8")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001801")]
	[Address(RVA = "0x29702A0", Offset = "0x29702A0", VA = "0x29702A0")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001802")]
	[Address(RVA = "0x2970348", Offset = "0x2970348", VA = "0x2970348")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001803")]
	[Address(RVA = "0x29703E0", Offset = "0x29703E0", VA = "0x29703E0")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x6001804")]
	[Address(RVA = "0x2970454", Offset = "0x2970454", VA = "0x2970454")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001805")]
	[Address(RVA = "0x29704EC", Offset = "0x29704EC", VA = "0x29704EC")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001806")]
	[Address(RVA = "0x2970584", Offset = "0x2970584", VA = "0x2970584")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x6001807")]
	[Address(RVA = "0x29705F8", Offset = "0x29705F8", VA = "0x29705F8")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001808")]
	[Address(RVA = "0x2970678", Offset = "0x2970678", VA = "0x2970678")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001809")]
	[Address(RVA = "0x2970708", Offset = "0x2970708", VA = "0x2970708")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600180A")]
	[Address(RVA = "0x29707B0", Offset = "0x29707B0", VA = "0x29707B0")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600180B")]
	[Address(RVA = "0x2970840", Offset = "0x2970840", VA = "0x2970840")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600180C")]
	[Address(RVA = "0x2970900", Offset = "0x2970900", VA = "0x2970900")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600180D")]
	[Address(RVA = "0x2970990", Offset = "0x2970990", VA = "0x2970990")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x600180E")]
	[Address(RVA = "0x2970A10", Offset = "0x2970A10", VA = "0x2970A10")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x600180F")]
	[Address(RVA = "0x2970A84", Offset = "0x2970A84", VA = "0x2970A84")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6001810")]
	[Address(RVA = "0x2970AF8", Offset = "0x2970AF8", VA = "0x2970AF8")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6001811")]
	[Address(RVA = "0x2970B6C", Offset = "0x2970B6C", VA = "0x2970B6C")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001812")]
	[Address(RVA = "0x2970BFC", Offset = "0x2970BFC", VA = "0x2970BFC")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001813")]
	[Address(RVA = "0x2970C7C", Offset = "0x2970C7C", VA = "0x2970C7C")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001814")]
	[Address(RVA = "0x2970D0C", Offset = "0x2970D0C", VA = "0x2970D0C")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001815")]
	[Address(RVA = "0x2970D8C", Offset = "0x2970D8C", VA = "0x2970D8C")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001816")]
	[Address(RVA = "0x2970E1C", Offset = "0x2970E1C", VA = "0x2970E1C")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001817")]
	[Address(RVA = "0x2970E9C", Offset = "0x2970E9C", VA = "0x2970E9C")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001818")]
	[Address(RVA = "0x2970F2C", Offset = "0x2970F2C", VA = "0x2970F2C")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001819")]
	[Address(RVA = "0x2970FAC", Offset = "0x2970FAC", VA = "0x2970FAC")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600181A")]
	[Address(RVA = "0x297103C", Offset = "0x297103C", VA = "0x297103C")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600181B")]
	[Address(RVA = "0x29710BC", Offset = "0x29710BC", VA = "0x29710BC")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600181C")]
	[Address(RVA = "0x297114C", Offset = "0x297114C", VA = "0x297114C")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600181D")]
	[Address(RVA = "0x29711CC", Offset = "0x29711CC", VA = "0x29711CC")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600181E")]
	[Address(RVA = "0x297125C", Offset = "0x297125C", VA = "0x297125C")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600181F")]
	[Address(RVA = "0x29712DC", Offset = "0x29712DC", VA = "0x29712DC")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001820")]
	[Address(RVA = "0x297136C", Offset = "0x297136C", VA = "0x297136C")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001821")]
	[Address(RVA = "0x29713EC", Offset = "0x29713EC", VA = "0x29713EC")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001822")]
	[Address(RVA = "0x297147C", Offset = "0x297147C", VA = "0x297147C")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001823")]
	[Address(RVA = "0x29714FC", Offset = "0x29714FC", VA = "0x29714FC")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6001824")]
	[Address(RVA = "0x2971570", Offset = "0x2971570", VA = "0x2971570")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001825")]
	[Address(RVA = "0x29715F0", Offset = "0x29715F0", VA = "0x29715F0")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6001826")]
	[Address(RVA = "0x2971664", Offset = "0x2971664", VA = "0x2971664")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x6001827")]
	[Address(RVA = "0x29716D8", Offset = "0x29716D8", VA = "0x29716D8")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001828")]
	[Address(RVA = "0x2971768", Offset = "0x2971768", VA = "0x2971768")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001829")]
	[Address(RVA = "0x29717E8", Offset = "0x29717E8", VA = "0x29717E8")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600182A")]
	[Address(RVA = "0x2971878", Offset = "0x2971878", VA = "0x2971878")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600182B")]
	[Address(RVA = "0x29718F8", Offset = "0x29718F8", VA = "0x29718F8")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600182C")]
	[Address(RVA = "0x2971988", Offset = "0x2971988", VA = "0x2971988")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600182D")]
	[Address(RVA = "0x2971A08", Offset = "0x2971A08", VA = "0x2971A08")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x600182E")]
	[Address(RVA = "0x2971A7C", Offset = "0x2971A7C", VA = "0x2971A7C")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600182F")]
	[Address(RVA = "0x2971AFC", Offset = "0x2971AFC", VA = "0x2971AFC")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001830")]
	[Address(RVA = "0x2971B8C", Offset = "0x2971B8C", VA = "0x2971B8C")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001831")]
	[Address(RVA = "0x2971C0C", Offset = "0x2971C0C", VA = "0x2971C0C")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001832")]
	[Address(RVA = "0x2971C9C", Offset = "0x2971C9C", VA = "0x2971C9C")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001833")]
	[Address(RVA = "0x2971D1C", Offset = "0x2971D1C", VA = "0x2971D1C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6001834")]
	[Address(RVA = "0x2971D90", Offset = "0x2971D90", VA = "0x2971D90")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001835")]
	[Address(RVA = "0x2971E10", Offset = "0x2971E10", VA = "0x2971E10")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001836")]
	[Address(RVA = "0x2971EA0", Offset = "0x2971EA0", VA = "0x2971EA0")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001837")]
	[Address(RVA = "0x2971F20", Offset = "0x2971F20", VA = "0x2971F20")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001838")]
	[Address(RVA = "0x2971FB0", Offset = "0x2971FB0", VA = "0x2971FB0")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001839")]
	[Address(RVA = "0x2972030", Offset = "0x2972030", VA = "0x2972030")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x600183A")]
	[Address(RVA = "0x29720A4", Offset = "0x29720A4", VA = "0x29720A4")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600183B")]
	[Address(RVA = "0x2972124", Offset = "0x2972124", VA = "0x2972124")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600183C")]
	[Address(RVA = "0x29721B4", Offset = "0x29721B4", VA = "0x29721B4")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600183D")]
	[Address(RVA = "0x2972234", Offset = "0x2972234", VA = "0x2972234")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600183E")]
	[Address(RVA = "0x29722C4", Offset = "0x29722C4", VA = "0x29722C4")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600183F")]
	[Address(RVA = "0x2972344", Offset = "0x2972344", VA = "0x2972344")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6001840")]
	[Address(RVA = "0x29723B8", Offset = "0x29723B8", VA = "0x29723B8")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001841")]
	[Address(RVA = "0x2972438", Offset = "0x2972438", VA = "0x2972438")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001842")]
	[Address(RVA = "0x29724C8", Offset = "0x29724C8", VA = "0x29724C8")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001843")]
	[Address(RVA = "0x2972548", Offset = "0x2972548", VA = "0x2972548")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001844")]
	[Address(RVA = "0x29725D8", Offset = "0x29725D8", VA = "0x29725D8")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001845")]
	[Address(RVA = "0x2972658", Offset = "0x2972658", VA = "0x2972658")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6001846")]
	[Address(RVA = "0x29726CC", Offset = "0x29726CC", VA = "0x29726CC")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001847")]
	[Address(RVA = "0x297274C", Offset = "0x297274C", VA = "0x297274C")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001848")]
	[Address(RVA = "0x29727DC", Offset = "0x29727DC", VA = "0x29727DC")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001849")]
	[Address(RVA = "0x297285C", Offset = "0x297285C", VA = "0x297285C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x600184A")]
	[Address(RVA = "0x29728D0", Offset = "0x29728D0", VA = "0x29728D0")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600184B")]
	[Address(RVA = "0x2972950", Offset = "0x2972950", VA = "0x2972950")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600184C")]
	[Address(RVA = "0x29729E0", Offset = "0x29729E0", VA = "0x29729E0")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600184D")]
	[Address(RVA = "0x2972A60", Offset = "0x2972A60", VA = "0x2972A60")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x600184E")]
	[Address(RVA = "0x2972AD4", Offset = "0x2972AD4", VA = "0x2972AD4")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600184F")]
	[Address(RVA = "0x2972B54", Offset = "0x2972B54", VA = "0x2972B54")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001850")]
	[Address(RVA = "0x2972BE4", Offset = "0x2972BE4", VA = "0x2972BE4")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001851")]
	[Address(RVA = "0x2972C64", Offset = "0x2972C64", VA = "0x2972C64")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001852")]
	[Address(RVA = "0x2972CF4", Offset = "0x2972CF4", VA = "0x2972CF4")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001853")]
	[Address(RVA = "0x2972D74", Offset = "0x2972D74", VA = "0x2972D74")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001854")]
	[Address(RVA = "0x2972E04", Offset = "0x2972E04", VA = "0x2972E04")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001855")]
	[Address(RVA = "0x2972E84", Offset = "0x2972E84", VA = "0x2972E84")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001856")]
	[Address(RVA = "0x2972F14", Offset = "0x2972F14", VA = "0x2972F14")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001857")]
	[Address(RVA = "0x2972F94", Offset = "0x2972F94", VA = "0x2972F94")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001858")]
	[Address(RVA = "0x2973024", Offset = "0x2973024", VA = "0x2973024")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001859")]
	[Address(RVA = "0x29730A4", Offset = "0x29730A4", VA = "0x29730A4")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600185A")]
	[Address(RVA = "0x2973134", Offset = "0x2973134", VA = "0x2973134")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600185B")]
	[Address(RVA = "0x29731B4", Offset = "0x29731B4", VA = "0x29731B4")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600185C")]
	[Address(RVA = "0x2973244", Offset = "0x2973244", VA = "0x2973244")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600185D")]
	[Address(RVA = "0x29732C4", Offset = "0x29732C4", VA = "0x29732C4")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600185E")]
	[Address(RVA = "0x2973354", Offset = "0x2973354", VA = "0x2973354")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600185F")]
	[Address(RVA = "0x29733D4", Offset = "0x29733D4", VA = "0x29733D4")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001860")]
	[Address(RVA = "0x2973464", Offset = "0x2973464", VA = "0x2973464")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001861")]
	[Address(RVA = "0x29734E4", Offset = "0x29734E4", VA = "0x29734E4")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001862")]
	[Address(RVA = "0x2973574", Offset = "0x2973574", VA = "0x2973574")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001863")]
	[Address(RVA = "0x29735F4", Offset = "0x29735F4", VA = "0x29735F4")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001864")]
	[Address(RVA = "0x2973684", Offset = "0x2973684", VA = "0x2973684")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001865")]
	[Address(RVA = "0x2973704", Offset = "0x2973704", VA = "0x2973704")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001866")]
	[Address(RVA = "0x2973794", Offset = "0x2973794", VA = "0x2973794")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001867")]
	[Address(RVA = "0x2973814", Offset = "0x2973814", VA = "0x2973814")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001868")]
	[Address(RVA = "0x29738A4", Offset = "0x29738A4", VA = "0x29738A4")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001869")]
	[Address(RVA = "0x2973924", Offset = "0x2973924", VA = "0x2973924")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600186A")]
	[Address(RVA = "0x29739B4", Offset = "0x29739B4", VA = "0x29739B4")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600186B")]
	[Address(RVA = "0x2973A34", Offset = "0x2973A34", VA = "0x2973A34")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600186C")]
	[Address(RVA = "0x2973AC4", Offset = "0x2973AC4", VA = "0x2973AC4")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600186D")]
	[Address(RVA = "0x2973B44", Offset = "0x2973B44", VA = "0x2973B44")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600186E")]
	[Address(RVA = "0x2973BD4", Offset = "0x2973BD4", VA = "0x2973BD4")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600186F")]
	[Address(RVA = "0x2973C54", Offset = "0x2973C54", VA = "0x2973C54")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001870")]
	[Address(RVA = "0x2973CE4", Offset = "0x2973CE4", VA = "0x2973CE4")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001871")]
	[Address(RVA = "0x2973D64", Offset = "0x2973D64", VA = "0x2973D64")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001872")]
	[Address(RVA = "0x2973DF4", Offset = "0x2973DF4", VA = "0x2973DF4")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001873")]
	[Address(RVA = "0x2973E74", Offset = "0x2973E74", VA = "0x2973E74")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6001874")]
	[Address(RVA = "0x2973EE8", Offset = "0x2973EE8", VA = "0x2973EE8")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001875")]
	[Address(RVA = "0x2973F68", Offset = "0x2973F68", VA = "0x2973F68")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001876")]
	[Address(RVA = "0x2973FF8", Offset = "0x2973FF8", VA = "0x2973FF8")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001877")]
	[Address(RVA = "0x2974078", Offset = "0x2974078", VA = "0x2974078")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001878")]
	[Address(RVA = "0x2974120", Offset = "0x2974120", VA = "0x2974120")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001879")]
	[Address(RVA = "0x29741B0", Offset = "0x29741B0", VA = "0x29741B0")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600187A")]
	[Address(RVA = "0x2974224", Offset = "0x2974224", VA = "0x2974224")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x600187B")]
	[Address(RVA = "0x2974298", Offset = "0x2974298", VA = "0x2974298")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600187C")]
	[Address(RVA = "0x2974318", Offset = "0x2974318", VA = "0x2974318")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x600187D")]
	[Address(RVA = "0x297438C", Offset = "0x297438C", VA = "0x297438C")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600187E")]
	[Address(RVA = "0x297441C", Offset = "0x297441C", VA = "0x297441C")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600187F")]
	[Address(RVA = "0x297449C", Offset = "0x297449C", VA = "0x297449C")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001880")]
	[Address(RVA = "0x297452C", Offset = "0x297452C", VA = "0x297452C")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001881")]
	[Address(RVA = "0x29745AC", Offset = "0x29745AC", VA = "0x29745AC")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001882")]
	[Address(RVA = "0x297462C", Offset = "0x297462C", VA = "0x297462C")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001883")]
	[Address(RVA = "0x29746BC", Offset = "0x29746BC", VA = "0x29746BC")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001884")]
	[Address(RVA = "0x297473C", Offset = "0x297473C", VA = "0x297473C")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x6001885")]
	[Address(RVA = "0x29747B0", Offset = "0x29747B0", VA = "0x29747B0")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001886")]
	[Address(RVA = "0x2974830", Offset = "0x2974830", VA = "0x2974830")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001887")]
	[Address(RVA = "0x29748C8", Offset = "0x29748C8", VA = "0x29748C8")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001888")]
	[Address(RVA = "0x2974958", Offset = "0x2974958", VA = "0x2974958")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001889")]
	[Address(RVA = "0x29749D8", Offset = "0x29749D8", VA = "0x29749D8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600188A")]
	[Address(RVA = "0x2974A58", Offset = "0x2974A58", VA = "0x2974A58")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600188B")]
	[Address(RVA = "0x2974AD8", Offset = "0x2974AD8", VA = "0x2974AD8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600188C")]
	[Address(RVA = "0x2974B58", Offset = "0x2974B58", VA = "0x2974B58")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x600188D")]
	[Address(RVA = "0x2974BCC", Offset = "0x2974BCC", VA = "0x2974BCC")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600188E")]
	[Address(RVA = "0x2974C4C", Offset = "0x2974C4C", VA = "0x2974C4C")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600188F")]
	[Address(RVA = "0x2974CCC", Offset = "0x2974CCC", VA = "0x2974CCC")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001890")]
	[Address(RVA = "0x2974D4C", Offset = "0x2974D4C", VA = "0x2974D4C")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001891")]
	[Address(RVA = "0x2974DC0", Offset = "0x2974DC0", VA = "0x2974DC0")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001892")]
	[Address(RVA = "0x2974E40", Offset = "0x2974E40", VA = "0x2974E40")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001893")]
	[Address(RVA = "0x2974EC0", Offset = "0x2974EC0", VA = "0x2974EC0")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001894")]
	[Address(RVA = "0x2974F40", Offset = "0x2974F40", VA = "0x2974F40")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001895")]
	[Address(RVA = "0x2974FB4", Offset = "0x2974FB4", VA = "0x2974FB4")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001896")]
	[Address(RVA = "0x2975034", Offset = "0x2975034", VA = "0x2975034")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001897")]
	[Address(RVA = "0x29750B4", Offset = "0x29750B4", VA = "0x29750B4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001898")]
	[Address(RVA = "0x2975134", Offset = "0x2975134", VA = "0x2975134")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001899")]
	[Address(RVA = "0x29751B4", Offset = "0x29751B4", VA = "0x29751B4")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600189A")]
	[Address(RVA = "0x2975234", Offset = "0x2975234", VA = "0x2975234")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600189B")]
	[Address(RVA = "0x29752B4", Offset = "0x29752B4", VA = "0x29752B4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600189C")]
	[Address(RVA = "0x2975334", Offset = "0x2975334", VA = "0x2975334")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600189D")]
	[Address(RVA = "0x29753B4", Offset = "0x29753B4", VA = "0x29753B4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600189E")]
	[Address(RVA = "0x2975434", Offset = "0x2975434", VA = "0x2975434")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600189F")]
	[Address(RVA = "0x29754B4", Offset = "0x29754B4", VA = "0x29754B4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018A0")]
	[Address(RVA = "0x2975534", Offset = "0x2975534", VA = "0x2975534")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018A1")]
	[Address(RVA = "0x29755B4", Offset = "0x29755B4", VA = "0x29755B4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018A2")]
	[Address(RVA = "0x2975634", Offset = "0x2975634", VA = "0x2975634")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018A3")]
	[Address(RVA = "0x29756B4", Offset = "0x29756B4", VA = "0x29756B4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018A4")]
	[Address(RVA = "0x2975734", Offset = "0x2975734", VA = "0x2975734")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018A5")]
	[Address(RVA = "0x29757A8", Offset = "0x29757A8", VA = "0x29757A8")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018A6")]
	[Address(RVA = "0x2975828", Offset = "0x2975828", VA = "0x2975828")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018A7")]
	[Address(RVA = "0x29758A8", Offset = "0x29758A8", VA = "0x29758A8")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018A8")]
	[Address(RVA = "0x2975928", Offset = "0x2975928", VA = "0x2975928")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018A9")]
	[Address(RVA = "0x29759A8", Offset = "0x29759A8", VA = "0x29759A8")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018AA")]
	[Address(RVA = "0x2975A1C", Offset = "0x2975A1C", VA = "0x2975A1C")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018AB")]
	[Address(RVA = "0x2975A9C", Offset = "0x2975A9C", VA = "0x2975A9C")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018AC")]
	[Address(RVA = "0x2975B1C", Offset = "0x2975B1C", VA = "0x2975B1C")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018AD")]
	[Address(RVA = "0x2975B9C", Offset = "0x2975B9C", VA = "0x2975B9C")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018AE")]
	[Address(RVA = "0x2975C1C", Offset = "0x2975C1C", VA = "0x2975C1C")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018AF")]
	[Address(RVA = "0x2975C9C", Offset = "0x2975C9C", VA = "0x2975C9C")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018B0")]
	[Address(RVA = "0x2975D24", Offset = "0x2975D24", VA = "0x2975D24")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018B1")]
	[Address(RVA = "0x2975D98", Offset = "0x2975D98", VA = "0x2975D98")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018B2")]
	[Address(RVA = "0x2975E18", Offset = "0x2975E18", VA = "0x2975E18")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018B3")]
	[Address(RVA = "0x2975E98", Offset = "0x2975E98", VA = "0x2975E98")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018B4")]
	[Address(RVA = "0x2975F18", Offset = "0x2975F18", VA = "0x2975F18")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018B5")]
	[Address(RVA = "0x2975F98", Offset = "0x2975F98", VA = "0x2975F98")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018B6")]
	[Address(RVA = "0x297600C", Offset = "0x297600C", VA = "0x297600C")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018B7")]
	[Address(RVA = "0x297608C", Offset = "0x297608C", VA = "0x297608C")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018B8")]
	[Address(RVA = "0x297610C", Offset = "0x297610C", VA = "0x297610C")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018B9")]
	[Address(RVA = "0x297618C", Offset = "0x297618C", VA = "0x297618C")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018BA")]
	[Address(RVA = "0x297620C", Offset = "0x297620C", VA = "0x297620C")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018BB")]
	[Address(RVA = "0x297628C", Offset = "0x297628C", VA = "0x297628C")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018BC")]
	[Address(RVA = "0x297630C", Offset = "0x297630C", VA = "0x297630C")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018BD")]
	[Address(RVA = "0x297638C", Offset = "0x297638C", VA = "0x297638C")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018BE")]
	[Address(RVA = "0x297640C", Offset = "0x297640C", VA = "0x297640C")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018BF")]
	[Address(RVA = "0x297648C", Offset = "0x297648C", VA = "0x297648C")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018C0")]
	[Address(RVA = "0x297650C", Offset = "0x297650C", VA = "0x297650C")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018C1")]
	[Address(RVA = "0x297658C", Offset = "0x297658C", VA = "0x297658C")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018C2")]
	[Address(RVA = "0x297660C", Offset = "0x297660C", VA = "0x297660C")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018C3")]
	[Address(RVA = "0x297668C", Offset = "0x297668C", VA = "0x297668C")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018C4")]
	[Address(RVA = "0x2976700", Offset = "0x2976700", VA = "0x2976700")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018C5")]
	[Address(RVA = "0x2976780", Offset = "0x2976780", VA = "0x2976780")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018C6")]
	[Address(RVA = "0x2976800", Offset = "0x2976800", VA = "0x2976800")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018C7")]
	[Address(RVA = "0x2976880", Offset = "0x2976880", VA = "0x2976880")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018C8")]
	[Address(RVA = "0x2976900", Offset = "0x2976900", VA = "0x2976900")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018C9")]
	[Address(RVA = "0x2976980", Offset = "0x2976980", VA = "0x2976980")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018CA")]
	[Address(RVA = "0x29769F4", Offset = "0x29769F4", VA = "0x29769F4")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018CB")]
	[Address(RVA = "0x2976A74", Offset = "0x2976A74", VA = "0x2976A74")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018CC")]
	[Address(RVA = "0x2976AF4", Offset = "0x2976AF4", VA = "0x2976AF4")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018CD")]
	[Address(RVA = "0x2976B74", Offset = "0x2976B74", VA = "0x2976B74")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018CE")]
	[Address(RVA = "0x2976BF4", Offset = "0x2976BF4", VA = "0x2976BF4")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018CF")]
	[Address(RVA = "0x2976C74", Offset = "0x2976C74", VA = "0x2976C74")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018D0")]
	[Address(RVA = "0x2976CE8", Offset = "0x2976CE8", VA = "0x2976CE8")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018D1")]
	[Address(RVA = "0x2976D68", Offset = "0x2976D68", VA = "0x2976D68")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018D2")]
	[Address(RVA = "0x2976DE8", Offset = "0x2976DE8", VA = "0x2976DE8")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018D3")]
	[Address(RVA = "0x2976E68", Offset = "0x2976E68", VA = "0x2976E68")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018D4")]
	[Address(RVA = "0x2976EE8", Offset = "0x2976EE8", VA = "0x2976EE8")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018D5")]
	[Address(RVA = "0x2976F68", Offset = "0x2976F68", VA = "0x2976F68")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018D6")]
	[Address(RVA = "0x2976FE8", Offset = "0x2976FE8", VA = "0x2976FE8")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018D7")]
	[Address(RVA = "0x297705C", Offset = "0x297705C", VA = "0x297705C")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018D8")]
	[Address(RVA = "0x29770DC", Offset = "0x29770DC", VA = "0x29770DC")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018D9")]
	[Address(RVA = "0x2977164", Offset = "0x2977164", VA = "0x2977164")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018DA")]
	[Address(RVA = "0x29771D8", Offset = "0x29771D8", VA = "0x29771D8")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018DB")]
	[Address(RVA = "0x2977258", Offset = "0x2977258", VA = "0x2977258")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018DC")]
	[Address(RVA = "0x29772E0", Offset = "0x29772E0", VA = "0x29772E0")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60018DD")]
	[Address(RVA = "0x2977354", Offset = "0x2977354", VA = "0x2977354")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018DE")]
	[Address(RVA = "0x29773D4", Offset = "0x29773D4", VA = "0x29773D4")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60018DF")]
	[Address(RVA = "0x2977464", Offset = "0x2977464", VA = "0x2977464")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x60018E0")]
	[Address(RVA = "0x29774D4", Offset = "0x29774D4", VA = "0x29774D4")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x60018E1")]
	[Address(RVA = "0x2977548", Offset = "0x2977548", VA = "0x2977548")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60018E2")]
	[Address(RVA = "0x29775C8", Offset = "0x29775C8", VA = "0x29775C8")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x60018E3")]
	[Address(RVA = "0x2977638", Offset = "0x2977638", VA = "0x2977638")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60018E4")]
	[Address(RVA = "0x29776C8", Offset = "0x29776C8", VA = "0x29776C8")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x60018E5")]
	[Address(RVA = "0x297773C", Offset = "0x297773C", VA = "0x297773C")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018E6")]
	[Address(RVA = "0x29777BC", Offset = "0x29777BC", VA = "0x29777BC")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60018E7")]
	[Address(RVA = "0x297787C", Offset = "0x297787C", VA = "0x297787C")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60018E8")]
	[Address(RVA = "0x297792C", Offset = "0x297792C", VA = "0x297792C")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60018E9")]
	[Address(RVA = "0x29779D4", Offset = "0x29779D4", VA = "0x29779D4")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60018EA")]
	[Address(RVA = "0x2977A6C", Offset = "0x2977A6C", VA = "0x2977A6C")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60018EB")]
	[Address(RVA = "0x2977AFC", Offset = "0x2977AFC", VA = "0x2977AFC")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60018EC")]
	[Address(RVA = "0x2977BD4", Offset = "0x2977BD4", VA = "0x2977BD4")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60018ED")]
	[Address(RVA = "0x2977C9C", Offset = "0x2977C9C", VA = "0x2977C9C")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60018EE")]
	[Address(RVA = "0x2977D5C", Offset = "0x2977D5C", VA = "0x2977D5C")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60018EF")]
	[Address(RVA = "0x2977E0C", Offset = "0x2977E0C", VA = "0x2977E0C")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60018F0")]
	[Address(RVA = "0x2977EB4", Offset = "0x2977EB4", VA = "0x2977EB4")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x60018F1")]
	[Address(RVA = "0x2977F28", Offset = "0x2977F28", VA = "0x2977F28")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60018F2")]
	[Address(RVA = "0x2977FA8", Offset = "0x2977FA8", VA = "0x2977FA8")]
	public static extern void CSharp_AkGetDefaultHighPriorityThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018F3")]
	[Address(RVA = "0x2978028", Offset = "0x2978028", VA = "0x2978028")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60018F4")]
	[Address(RVA = "0x29780D8", Offset = "0x29780D8", VA = "0x29780D8")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60018F5")]
	[Address(RVA = "0x2978178", Offset = "0x2978178", VA = "0x2978178")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60018F6")]
	[Address(RVA = "0x2978210", Offset = "0x2978210", VA = "0x2978210")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x60018F7")]
	[Address(RVA = "0x29782A8", Offset = "0x29782A8", VA = "0x29782A8")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60018F8")]
	[Address(RVA = "0x2978338", Offset = "0x2978338", VA = "0x2978338")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018F9")]
	[Address(RVA = "0x29783B8", Offset = "0x29783B8", VA = "0x29783B8")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60018FA")]
	[Address(RVA = "0x2978448", Offset = "0x2978448", VA = "0x2978448")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018FB")]
	[Address(RVA = "0x29784C8", Offset = "0x29784C8", VA = "0x29784C8")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60018FC")]
	[Address(RVA = "0x2978558", Offset = "0x2978558", VA = "0x2978558")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018FD")]
	[Address(RVA = "0x29785D8", Offset = "0x29785D8", VA = "0x29785D8")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60018FE")]
	[Address(RVA = "0x2978668", Offset = "0x2978668", VA = "0x2978668")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60018FF")]
	[Address(RVA = "0x29786F0", Offset = "0x29786F0", VA = "0x29786F0")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001900")]
	[Address(RVA = "0x2978780", Offset = "0x2978780", VA = "0x2978780")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001901")]
	[Address(RVA = "0x2978800", Offset = "0x2978800", VA = "0x2978800")]
	public static extern void CSharp_AkPositioningInfo_bUseAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001902")]
	[Address(RVA = "0x2978890", Offset = "0x2978890", VA = "0x2978890")]
	public static extern bool CSharp_AkPositioningInfo_bUseAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001903")]
	[Address(RVA = "0x2978918", Offset = "0x2978918", VA = "0x2978918")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001904")]
	[Address(RVA = "0x29789A8", Offset = "0x29789A8", VA = "0x29789A8")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001905")]
	[Address(RVA = "0x2978A30", Offset = "0x2978A30", VA = "0x2978A30")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001906")]
	[Address(RVA = "0x2978AC0", Offset = "0x2978AC0", VA = "0x2978AC0")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001907")]
	[Address(RVA = "0x2978B40", Offset = "0x2978B40", VA = "0x2978B40")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001908")]
	[Address(RVA = "0x2978BD0", Offset = "0x2978BD0", VA = "0x2978BD0")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001909")]
	[Address(RVA = "0x2978C50", Offset = "0x2978C50", VA = "0x2978C50")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600190A")]
	[Address(RVA = "0x2978CE0", Offset = "0x2978CE0", VA = "0x2978CE0")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600190B")]
	[Address(RVA = "0x2978D60", Offset = "0x2978D60", VA = "0x2978D60")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600190C")]
	[Address(RVA = "0x2978DF0", Offset = "0x2978DF0", VA = "0x2978DF0")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600190D")]
	[Address(RVA = "0x2978E70", Offset = "0x2978E70", VA = "0x2978E70")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600190E")]
	[Address(RVA = "0x2978F00", Offset = "0x2978F00", VA = "0x2978F00")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600190F")]
	[Address(RVA = "0x2978F80", Offset = "0x2978F80", VA = "0x2978F80")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001910")]
	[Address(RVA = "0x2979010", Offset = "0x2979010", VA = "0x2979010")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001911")]
	[Address(RVA = "0x2979090", Offset = "0x2979090", VA = "0x2979090")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001912")]
	[Address(RVA = "0x2979120", Offset = "0x2979120", VA = "0x2979120")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001913")]
	[Address(RVA = "0x29791A0", Offset = "0x29791A0", VA = "0x29791A0")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001914")]
	[Address(RVA = "0x2979230", Offset = "0x2979230", VA = "0x2979230")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001915")]
	[Address(RVA = "0x29792B0", Offset = "0x29792B0", VA = "0x29792B0")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001916")]
	[Address(RVA = "0x2979340", Offset = "0x2979340", VA = "0x2979340")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001917")]
	[Address(RVA = "0x29793C0", Offset = "0x29793C0", VA = "0x29793C0")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001918")]
	[Address(RVA = "0x2979450", Offset = "0x2979450", VA = "0x2979450")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001919")]
	[Address(RVA = "0x29794D0", Offset = "0x29794D0", VA = "0x29794D0")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600191A")]
	[Address(RVA = "0x2979560", Offset = "0x2979560", VA = "0x2979560")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600191B")]
	[Address(RVA = "0x29795E0", Offset = "0x29795E0", VA = "0x29795E0")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x600191C")]
	[Address(RVA = "0x2979654", Offset = "0x2979654", VA = "0x2979654")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600191D")]
	[Address(RVA = "0x29796D4", Offset = "0x29796D4", VA = "0x29796D4")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600191E")]
	[Address(RVA = "0x2979764", Offset = "0x2979764", VA = "0x2979764")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600191F")]
	[Address(RVA = "0x29797E4", Offset = "0x29797E4", VA = "0x29797E4")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001920")]
	[Address(RVA = "0x2979874", Offset = "0x2979874", VA = "0x2979874")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001921")]
	[Address(RVA = "0x29798F4", Offset = "0x29798F4", VA = "0x29798F4")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001922")]
	[Address(RVA = "0x2979984", Offset = "0x2979984", VA = "0x2979984")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001923")]
	[Address(RVA = "0x2979A04", Offset = "0x2979A04", VA = "0x2979A04")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x6001924")]
	[Address(RVA = "0x2979A78", Offset = "0x2979A78", VA = "0x2979A78")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001925")]
	[Address(RVA = "0x2979AF8", Offset = "0x2979AF8", VA = "0x2979AF8")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001926")]
	[Address(RVA = "0x2979B88", Offset = "0x2979B88", VA = "0x2979B88")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001927")]
	[Address(RVA = "0x2979C18", Offset = "0x2979C18", VA = "0x2979C18")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001928")]
	[Address(RVA = "0x2979CC8", Offset = "0x2979CC8", VA = "0x2979CC8")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001929")]
	[Address(RVA = "0x2979D90", Offset = "0x2979D90", VA = "0x2979D90")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600192A")]
	[Address(RVA = "0x2979E28", Offset = "0x2979E28", VA = "0x2979E28")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600192B")]
	[Address(RVA = "0x2979ED4", Offset = "0x2979ED4", VA = "0x2979ED4")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600192C")]
	[Address(RVA = "0x2979F64", Offset = "0x2979F64", VA = "0x2979F64")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600192D")]
	[Address(RVA = "0x297A00C", Offset = "0x297A00C", VA = "0x297A00C")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600192E")]
	[Address(RVA = "0x297A0A4", Offset = "0x297A0A4", VA = "0x297A0A4")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600192F")]
	[Address(RVA = "0x297A13C", Offset = "0x297A13C", VA = "0x297A13C")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001930")]
	[Address(RVA = "0x297A1E4", Offset = "0x297A1E4", VA = "0x297A1E4")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001931")]
	[Address(RVA = "0x297A27C", Offset = "0x297A27C", VA = "0x297A27C")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001932")]
	[Address(RVA = "0x297A32C", Offset = "0x297A32C", VA = "0x297A32C")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001933")]
	[Address(RVA = "0x297A3BC", Offset = "0x297A3BC", VA = "0x297A3BC")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001934")]
	[Address(RVA = "0x297A444", Offset = "0x297A444", VA = "0x297A444")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001935")]
	[Address(RVA = "0x297A4C4", Offset = "0x297A4C4", VA = "0x297A4C4")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001936")]
	[Address(RVA = "0x297A544", Offset = "0x297A544", VA = "0x297A544")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001937")]
	[Address(RVA = "0x297A5C4", Offset = "0x297A5C4", VA = "0x297A5C4")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x6001938")]
	[Address(RVA = "0x297A6EC", Offset = "0x297A6EC", VA = "0x297A6EC")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001939")]
	[Address(RVA = "0x297A784", Offset = "0x297A784", VA = "0x297A784")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600193A")]
	[Address(RVA = "0x297A81C", Offset = "0x297A81C", VA = "0x297A81C")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600193B")]
	[Address(RVA = "0x297A89C", Offset = "0x297A89C", VA = "0x297A89C")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600193C")]
	[Address(RVA = "0x297A91C", Offset = "0x297A91C", VA = "0x297A91C")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600193D")]
	[Address(RVA = "0x297A99C", Offset = "0x297A99C", VA = "0x297A99C")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600193E")]
	[Address(RVA = "0x297AA1C", Offset = "0x297AA1C", VA = "0x297AA1C")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600193F")]
	[Address(RVA = "0x297AA9C", Offset = "0x297AA9C", VA = "0x297AA9C")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001940")]
	[Address(RVA = "0x297AB2C", Offset = "0x297AB2C", VA = "0x297AB2C")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001941")]
	[Address(RVA = "0x297ABB4", Offset = "0x297ABB4", VA = "0x297ABB4")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001942")]
	[Address(RVA = "0x297AC3C", Offset = "0x297AC3C", VA = "0x297AC3C")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001943")]
	[Address(RVA = "0x297ACC4", Offset = "0x297ACC4", VA = "0x297ACC4")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001944")]
	[Address(RVA = "0x297AD4C", Offset = "0x297AD4C", VA = "0x297AD4C")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001945")]
	[Address(RVA = "0x297ADCC", Offset = "0x297ADCC", VA = "0x297ADCC")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001946")]
	[Address(RVA = "0x297AE64", Offset = "0x297AE64", VA = "0x297AE64")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001947")]
	[Address(RVA = "0x297AEF4", Offset = "0x297AEF4", VA = "0x297AEF4")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001948")]
	[Address(RVA = "0x297AF74", Offset = "0x297AF74", VA = "0x297AF74")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001949")]
	[Address(RVA = "0x297B004", Offset = "0x297B004", VA = "0x297B004")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600194A")]
	[Address(RVA = "0x297B084", Offset = "0x297B084", VA = "0x297B084")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600194B")]
	[Address(RVA = "0x297B114", Offset = "0x297B114", VA = "0x297B114")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600194C")]
	[Address(RVA = "0x297B194", Offset = "0x297B194", VA = "0x297B194")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600194D")]
	[Address(RVA = "0x297B208", Offset = "0x297B208", VA = "0x297B208")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600194E")]
	[Address(RVA = "0x297B298", Offset = "0x297B298", VA = "0x297B298")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600194F")]
	[Address(RVA = "0x297B318", Offset = "0x297B318", VA = "0x297B318")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001950")]
	[Address(RVA = "0x297B3A8", Offset = "0x297B3A8", VA = "0x297B3A8")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001951")]
	[Address(RVA = "0x297B440", Offset = "0x297B440", VA = "0x297B440")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001952")]
	[Address(RVA = "0x297B4D0", Offset = "0x297B4D0", VA = "0x297B4D0")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001953")]
	[Address(RVA = "0x297B560", Offset = "0x297B560", VA = "0x297B560")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001954")]
	[Address(RVA = "0x297B5E8", Offset = "0x297B5E8", VA = "0x297B5E8")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001955")]
	[Address(RVA = "0x297B668", Offset = "0x297B668", VA = "0x297B668")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001956")]
	[Address(RVA = "0x297B6F8", Offset = "0x297B6F8", VA = "0x297B6F8")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001957")]
	[Address(RVA = "0x297B778", Offset = "0x297B778", VA = "0x297B778")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001958")]
	[Address(RVA = "0x297B7F8", Offset = "0x297B7F8", VA = "0x297B7F8")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001959")]
	[Address(RVA = "0x297B880", Offset = "0x297B880", VA = "0x297B880")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600195A")]
	[Address(RVA = "0x297B900", Offset = "0x297B900", VA = "0x297B900")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600195B")]
	[Address(RVA = "0x297B974", Offset = "0x297B974", VA = "0x297B974")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600195C")]
	[Address(RVA = "0x297BA0C", Offset = "0x297BA0C", VA = "0x297BA0C")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600195D")]
	[Address(RVA = "0x297BA9C", Offset = "0x297BA9C", VA = "0x297BA9C")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600195E")]
	[Address(RVA = "0x297BB1C", Offset = "0x297BB1C", VA = "0x297BB1C")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600195F")]
	[Address(RVA = "0x297BBAC", Offset = "0x297BBAC", VA = "0x297BBAC")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001960")]
	[Address(RVA = "0x297BC2C", Offset = "0x297BC2C", VA = "0x297BC2C")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001961")]
	[Address(RVA = "0x297BCBC", Offset = "0x297BCBC", VA = "0x297BCBC")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001962")]
	[Address(RVA = "0x297BD3C", Offset = "0x297BD3C", VA = "0x297BD3C")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001963")]
	[Address(RVA = "0x297BDCC", Offset = "0x297BDCC", VA = "0x297BDCC")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001964")]
	[Address(RVA = "0x297BE4C", Offset = "0x297BE4C", VA = "0x297BE4C")]
	public static extern void CSharp_AkImageSourceParams_bDiffractedEmitterSide_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001965")]
	[Address(RVA = "0x297BEDC", Offset = "0x297BEDC", VA = "0x297BEDC")]
	public static extern bool CSharp_AkImageSourceParams_bDiffractedEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001966")]
	[Address(RVA = "0x297BF64", Offset = "0x297BF64", VA = "0x297BF64")]
	public static extern void CSharp_AkImageSourceParams_bDiffractedListenerSide_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001967")]
	[Address(RVA = "0x297BFF4", Offset = "0x297BFF4", VA = "0x297BFF4")]
	public static extern bool CSharp_AkImageSourceParams_bDiffractedListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001968")]
	[Address(RVA = "0x297C07C", Offset = "0x297C07C", VA = "0x297C07C")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001969")]
	[Address(RVA = "0x297C0FC", Offset = "0x297C0FC", VA = "0x297C0FC")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x600196A")]
	[Address(RVA = "0x297C16C", Offset = "0x297C16C", VA = "0x297C16C")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x600196B")]
	[Address(RVA = "0x297C1DC", Offset = "0x297C1DC", VA = "0x297C1DC")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x600196C")]
	[Address(RVA = "0x297C25C", Offset = "0x297C25C", VA = "0x297C25C")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x600196D")]
	[Address(RVA = "0x297C2D0", Offset = "0x297C2D0", VA = "0x297C2D0")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x600196E")]
	[Address(RVA = "0x297C344", Offset = "0x297C344", VA = "0x297C344")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x600196F")]
	[Address(RVA = "0x297C3B8", Offset = "0x297C3B8", VA = "0x297C3B8")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001970")]
	[Address(RVA = "0x297C438", Offset = "0x297C438", VA = "0x297C438")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001971")]
	[Address(RVA = "0x297C4AC", Offset = "0x297C4AC", VA = "0x297C4AC")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001972")]
	[Address(RVA = "0x297C53C", Offset = "0x297C53C", VA = "0x297C53C")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001973")]
	[Address(RVA = "0x297C5BC", Offset = "0x297C5BC", VA = "0x297C5BC")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001974")]
	[Address(RVA = "0x297C64C", Offset = "0x297C64C", VA = "0x297C64C")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001975")]
	[Address(RVA = "0x297C6CC", Offset = "0x297C6CC", VA = "0x297C6CC")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001976")]
	[Address(RVA = "0x297C75C", Offset = "0x297C75C", VA = "0x297C75C")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001977")]
	[Address(RVA = "0x297C7DC", Offset = "0x297C7DC", VA = "0x297C7DC")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001978")]
	[Address(RVA = "0x297C86C", Offset = "0x297C86C", VA = "0x297C86C")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001979")]
	[Address(RVA = "0x297C8EC", Offset = "0x297C8EC", VA = "0x297C8EC")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600197A")]
	[Address(RVA = "0x297C97C", Offset = "0x297C97C", VA = "0x297C97C")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600197B")]
	[Address(RVA = "0x297C9FC", Offset = "0x297C9FC", VA = "0x297C9FC")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600197C")]
	[Address(RVA = "0x297CA8C", Offset = "0x297CA8C", VA = "0x297CA8C")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600197D")]
	[Address(RVA = "0x297CB0C", Offset = "0x297CB0C", VA = "0x297CB0C")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600197E")]
	[Address(RVA = "0x297CB8C", Offset = "0x297CB8C", VA = "0x297CB8C")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600197F")]
	[Address(RVA = "0x297CC00", Offset = "0x297CC00", VA = "0x297CC00")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001980")]
	[Address(RVA = "0x297CC98", Offset = "0x297CC98", VA = "0x297CC98")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001981")]
	[Address(RVA = "0x297CD18", Offset = "0x297CD18", VA = "0x297CD18")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001982")]
	[Address(RVA = "0x297CDA8", Offset = "0x297CDA8", VA = "0x297CDA8")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001983")]
	[Address(RVA = "0x297CE4C", Offset = "0x297CE4C", VA = "0x297CE4C")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001984")]
	[Address(RVA = "0x297CEDC", Offset = "0x297CEDC", VA = "0x297CEDC")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001985")]
	[Address(RVA = "0x297CF5C", Offset = "0x297CF5C", VA = "0x297CF5C")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x6001986")]
	[Address(RVA = "0x297CFD0", Offset = "0x297CFD0", VA = "0x297CFD0")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001987")]
	[Address(RVA = "0x297D060", Offset = "0x297D060", VA = "0x297D060")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001988")]
	[Address(RVA = "0x297D0E0", Offset = "0x297D0E0", VA = "0x297D0E0")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001989")]
	[Address(RVA = "0x297D170", Offset = "0x297D170", VA = "0x297D170")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600198A")]
	[Address(RVA = "0x297D1F0", Offset = "0x297D1F0", VA = "0x297D1F0")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600198B")]
	[Address(RVA = "0x297D280", Offset = "0x297D280", VA = "0x297D280")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600198C")]
	[Address(RVA = "0x297D300", Offset = "0x297D300", VA = "0x297D300")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600198D")]
	[Address(RVA = "0x297D390", Offset = "0x297D390", VA = "0x297D390")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600198E")]
	[Address(RVA = "0x297D410", Offset = "0x297D410", VA = "0x297D410")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600198F")]
	[Address(RVA = "0x297D4A0", Offset = "0x297D4A0", VA = "0x297D4A0")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001990")]
	[Address(RVA = "0x297D520", Offset = "0x297D520", VA = "0x297D520")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001991")]
	[Address(RVA = "0x297D5B0", Offset = "0x297D5B0", VA = "0x297D5B0")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001992")]
	[Address(RVA = "0x297D630", Offset = "0x297D630", VA = "0x297D630")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001993")]
	[Address(RVA = "0x297D6C0", Offset = "0x297D6C0", VA = "0x297D6C0")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001994")]
	[Address(RVA = "0x297D740", Offset = "0x297D740", VA = "0x297D740")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001995")]
	[Address(RVA = "0x297D7D0", Offset = "0x297D7D0", VA = "0x297D7D0")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001996")]
	[Address(RVA = "0x297D850", Offset = "0x297D850", VA = "0x297D850")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001997")]
	[Address(RVA = "0x297D8E0", Offset = "0x297D8E0", VA = "0x297D8E0")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001998")]
	[Address(RVA = "0x297D960", Offset = "0x297D960", VA = "0x297D960")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001999")]
	[Address(RVA = "0x297D9F0", Offset = "0x297D9F0", VA = "0x297D9F0")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600199A")]
	[Address(RVA = "0x297DA70", Offset = "0x297DA70", VA = "0x297DA70")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600199B")]
	[Address(RVA = "0x297DAF0", Offset = "0x297DAF0", VA = "0x297DAF0")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600199C")]
	[Address(RVA = "0x297DB64", Offset = "0x297DB64", VA = "0x297DB64")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600199D")]
	[Address(RVA = "0x297DC04", Offset = "0x297DC04", VA = "0x297DC04")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600199E")]
	[Address(RVA = "0x297DC94", Offset = "0x297DC94", VA = "0x297DC94")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600199F")]
	[Address(RVA = "0x297DD14", Offset = "0x297DD14", VA = "0x297DD14")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019A0")]
	[Address(RVA = "0x297DDA4", Offset = "0x297DDA4", VA = "0x297DDA4")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019A1")]
	[Address(RVA = "0x297DE24", Offset = "0x297DE24", VA = "0x297DE24")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019A2")]
	[Address(RVA = "0x297DEB4", Offset = "0x297DEB4", VA = "0x297DEB4")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019A3")]
	[Address(RVA = "0x297DF34", Offset = "0x297DF34", VA = "0x297DF34")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019A4")]
	[Address(RVA = "0x297DFB4", Offset = "0x297DFB4", VA = "0x297DFB4")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60019A5")]
	[Address(RVA = "0x297E028", Offset = "0x297E028", VA = "0x297E028")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019A6")]
	[Address(RVA = "0x297E0B8", Offset = "0x297E0B8", VA = "0x297E0B8")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019A7")]
	[Address(RVA = "0x297E138", Offset = "0x297E138", VA = "0x297E138")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60019A8")]
	[Address(RVA = "0x297E1AC", Offset = "0x297E1AC", VA = "0x297E1AC")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x60019A9")]
	[Address(RVA = "0x297E254", Offset = "0x297E254", VA = "0x297E254")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60019AA")]
	[Address(RVA = "0x297E2E4", Offset = "0x297E2E4", VA = "0x297E2E4")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019AB")]
	[Address(RVA = "0x297E364", Offset = "0x297E364", VA = "0x297E364")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60019AC")]
	[Address(RVA = "0x297E3F4", Offset = "0x297E3F4", VA = "0x297E3F4")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019AD")]
	[Address(RVA = "0x297E474", Offset = "0x297E474", VA = "0x297E474")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60019AE")]
	[Address(RVA = "0x297E504", Offset = "0x297E504", VA = "0x297E504")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019AF")]
	[Address(RVA = "0x297E584", Offset = "0x297E584", VA = "0x297E584")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60019B0")]
	[Address(RVA = "0x297E614", Offset = "0x297E614", VA = "0x297E614")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019B1")]
	[Address(RVA = "0x297E694", Offset = "0x297E694", VA = "0x297E694")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019B2")]
	[Address(RVA = "0x297E714", Offset = "0x297E714", VA = "0x297E714")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60019B3")]
	[Address(RVA = "0x297E788", Offset = "0x297E788", VA = "0x297E788")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019B4")]
	[Address(RVA = "0x297E818", Offset = "0x297E818", VA = "0x297E818")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019B5")]
	[Address(RVA = "0x297E898", Offset = "0x297E898", VA = "0x297E898")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x60019B6")]
	[Address(RVA = "0x297E90C", Offset = "0x297E90C", VA = "0x297E90C")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019B7")]
	[Address(RVA = "0x297E99C", Offset = "0x297E99C", VA = "0x297E99C")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019B8")]
	[Address(RVA = "0x297EA1C", Offset = "0x297EA1C", VA = "0x297EA1C")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019B9")]
	[Address(RVA = "0x297EAAC", Offset = "0x297EAAC", VA = "0x297EAAC")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019BA")]
	[Address(RVA = "0x297EB2C", Offset = "0x297EB2C", VA = "0x297EB2C")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60019BB")]
	[Address(RVA = "0x297EBD0", Offset = "0x297EBD0", VA = "0x297EBD0")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019BC")]
	[Address(RVA = "0x297EC50", Offset = "0x297EC50", VA = "0x297EC50")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019BD")]
	[Address(RVA = "0x297ECD0", Offset = "0x297ECD0", VA = "0x297ECD0")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019BE")]
	[Address(RVA = "0x297ED50", Offset = "0x297ED50", VA = "0x297ED50")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60019BF")]
	[Address(RVA = "0x297EDC4", Offset = "0x297EDC4", VA = "0x297EDC4")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019C0")]
	[Address(RVA = "0x297EE54", Offset = "0x297EE54", VA = "0x297EE54")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019C1")]
	[Address(RVA = "0x297EED4", Offset = "0x297EED4", VA = "0x297EED4")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019C2")]
	[Address(RVA = "0x297EF64", Offset = "0x297EF64", VA = "0x297EF64")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019C3")]
	[Address(RVA = "0x297EFE4", Offset = "0x297EFE4", VA = "0x297EFE4")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019C4")]
	[Address(RVA = "0x297F074", Offset = "0x297F074", VA = "0x297F074")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019C5")]
	[Address(RVA = "0x297F0F4", Offset = "0x297F0F4", VA = "0x297F0F4")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019C6")]
	[Address(RVA = "0x297F184", Offset = "0x297F184", VA = "0x297F184")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019C7")]
	[Address(RVA = "0x297F204", Offset = "0x297F204", VA = "0x297F204")]
	public static extern void CSharp_AkReflectionPathInfo_occlusionPoint_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019C8")]
	[Address(RVA = "0x297F294", Offset = "0x297F294", VA = "0x297F294")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_occlusionPoint_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019C9")]
	[Address(RVA = "0x297F314", Offset = "0x297F314", VA = "0x297F314")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019CA")]
	[Address(RVA = "0x297F3A4", Offset = "0x297F3A4", VA = "0x297F3A4")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019CB")]
	[Address(RVA = "0x297F424", Offset = "0x297F424", VA = "0x297F424")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60019CC")]
	[Address(RVA = "0x297F4B4", Offset = "0x297F4B4", VA = "0x297F4B4")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019CD")]
	[Address(RVA = "0x297F53C", Offset = "0x297F53C", VA = "0x297F53C")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60019CE")]
	[Address(RVA = "0x297F5B0", Offset = "0x297F5B0", VA = "0x297F5B0")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019CF")]
	[Address(RVA = "0x297F640", Offset = "0x297F640", VA = "0x297F640")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019D0")]
	[Address(RVA = "0x297F6D0", Offset = "0x297F6D0", VA = "0x297F6D0")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019D1")]
	[Address(RVA = "0x297F760", Offset = "0x297F760", VA = "0x297F760")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019D2")]
	[Address(RVA = "0x297F7F0", Offset = "0x297F7F0", VA = "0x297F7F0")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x60019D3")]
	[Address(RVA = "0x297F864", Offset = "0x297F864", VA = "0x297F864")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019D4")]
	[Address(RVA = "0x297F8E4", Offset = "0x297F8E4", VA = "0x297F8E4")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019D5")]
	[Address(RVA = "0x297F974", Offset = "0x297F974", VA = "0x297F974")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019D6")]
	[Address(RVA = "0x297F9F4", Offset = "0x297F9F4", VA = "0x297F9F4")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019D7")]
	[Address(RVA = "0x297FA84", Offset = "0x297FA84", VA = "0x297FA84")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019D8")]
	[Address(RVA = "0x297FB04", Offset = "0x297FB04", VA = "0x297FB04")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019D9")]
	[Address(RVA = "0x297FB94", Offset = "0x297FB94", VA = "0x297FB94")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019DA")]
	[Address(RVA = "0x297FC14", Offset = "0x297FC14", VA = "0x297FC14")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019DB")]
	[Address(RVA = "0x297FCA4", Offset = "0x297FCA4", VA = "0x297FCA4")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019DC")]
	[Address(RVA = "0x297FD24", Offset = "0x297FD24", VA = "0x297FD24")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019DD")]
	[Address(RVA = "0x297FDB4", Offset = "0x297FDB4", VA = "0x297FDB4")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019DE")]
	[Address(RVA = "0x297FE34", Offset = "0x297FE34", VA = "0x297FE34")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60019DF")]
	[Address(RVA = "0x297FEA8", Offset = "0x297FEA8", VA = "0x297FEA8")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019E0")]
	[Address(RVA = "0x297FF38", Offset = "0x297FF38", VA = "0x297FF38")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019E1")]
	[Address(RVA = "0x297FFC8", Offset = "0x297FFC8", VA = "0x297FFC8")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019E2")]
	[Address(RVA = "0x2980058", Offset = "0x2980058", VA = "0x2980058")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x60019E3")]
	[Address(RVA = "0x29800CC", Offset = "0x29800CC", VA = "0x29800CC")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019E4")]
	[Address(RVA = "0x298014C", Offset = "0x298014C", VA = "0x298014C")]
	public static extern void CSharp_AkPropagationPathInfo_nodePoint_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019E5")]
	[Address(RVA = "0x29801DC", Offset = "0x29801DC", VA = "0x29801DC")]
	public static extern IntPtr CSharp_AkPropagationPathInfo_nodePoint_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019E6")]
	[Address(RVA = "0x298025C", Offset = "0x298025C", VA = "0x298025C")]
	public static extern void CSharp_AkPropagationPathInfo_numNodes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019E7")]
	[Address(RVA = "0x29802EC", Offset = "0x29802EC", VA = "0x29802EC")]
	public static extern uint CSharp_AkPropagationPathInfo_numNodes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019E8")]
	[Address(RVA = "0x298036C", Offset = "0x298036C", VA = "0x298036C")]
	public static extern void CSharp_AkPropagationPathInfo_length_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019E9")]
	[Address(RVA = "0x29803FC", Offset = "0x29803FC", VA = "0x29803FC")]
	public static extern float CSharp_AkPropagationPathInfo_length_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019EA")]
	[Address(RVA = "0x298047C", Offset = "0x298047C", VA = "0x298047C")]
	public static extern void CSharp_AkPropagationPathInfo_gain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019EB")]
	[Address(RVA = "0x298050C", Offset = "0x298050C", VA = "0x298050C")]
	public static extern float CSharp_AkPropagationPathInfo_gain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019EC")]
	[Address(RVA = "0x298058C", Offset = "0x298058C", VA = "0x298058C")]
	public static extern void CSharp_AkPropagationPathInfo_dryDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019ED")]
	[Address(RVA = "0x298061C", Offset = "0x298061C", VA = "0x298061C")]
	public static extern float CSharp_AkPropagationPathInfo_dryDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019EE")]
	[Address(RVA = "0x298069C", Offset = "0x298069C", VA = "0x298069C")]
	public static extern void CSharp_AkPropagationPathInfo_wetDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019EF")]
	[Address(RVA = "0x298072C", Offset = "0x298072C", VA = "0x298072C")]
	public static extern float CSharp_AkPropagationPathInfo_wetDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019F0")]
	[Address(RVA = "0x29807AC", Offset = "0x29807AC", VA = "0x29807AC")]
	public static extern int CSharp_AkPropagationPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60019F1")]
	[Address(RVA = "0x2980820", Offset = "0x2980820", VA = "0x2980820")]
	public static extern IntPtr CSharp_AkPropagationPathInfo_GetNodePoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019F2")]
	[Address(RVA = "0x29808B0", Offset = "0x29808B0", VA = "0x29808B0")]
	public static extern void CSharp_AkPropagationPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019F3")]
	[Address(RVA = "0x2980940", Offset = "0x2980940", VA = "0x2980940")]
	public static extern IntPtr CSharp_new_AkPropagationPathInfo();

	[PreserveSig]
	[Token(Token = "0x60019F4")]
	[Address(RVA = "0x29809B4", Offset = "0x29809B4", VA = "0x29809B4")]
	public static extern void CSharp_delete_AkPropagationPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019F5")]
	[Address(RVA = "0x2980A34", Offset = "0x2980A34", VA = "0x2980A34")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x60019F6")]
	[Address(RVA = "0x2980AA8", Offset = "0x2980AA8", VA = "0x2980AA8")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019F7")]
	[Address(RVA = "0x2980B38", Offset = "0x2980B38", VA = "0x2980B38")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019F8")]
	[Address(RVA = "0x2980BB8", Offset = "0x2980BB8", VA = "0x2980BB8")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019F9")]
	[Address(RVA = "0x2980C48", Offset = "0x2980C48", VA = "0x2980C48")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019FA")]
	[Address(RVA = "0x2980CC8", Offset = "0x2980CC8", VA = "0x2980CC8")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019FB")]
	[Address(RVA = "0x2980D58", Offset = "0x2980D58", VA = "0x2980D58")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019FC")]
	[Address(RVA = "0x2980DD8", Offset = "0x2980DD8", VA = "0x2980DD8")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019FD")]
	[Address(RVA = "0x2980E68", Offset = "0x2980E68", VA = "0x2980E68")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019FE")]
	[Address(RVA = "0x2980EE8", Offset = "0x2980EE8", VA = "0x2980EE8")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019FF")]
	[Address(RVA = "0x2980F78", Offset = "0x2980F78", VA = "0x2980F78")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A00")]
	[Address(RVA = "0x2980FF8", Offset = "0x2980FF8", VA = "0x2980FF8")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A01")]
	[Address(RVA = "0x2981088", Offset = "0x2981088", VA = "0x2981088")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A02")]
	[Address(RVA = "0x2981108", Offset = "0x2981108", VA = "0x2981108")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A03")]
	[Address(RVA = "0x2981198", Offset = "0x2981198", VA = "0x2981198")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A04")]
	[Address(RVA = "0x2981220", Offset = "0x2981220", VA = "0x2981220")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A05")]
	[Address(RVA = "0x29812A0", Offset = "0x29812A0", VA = "0x29812A0")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x6001A06")]
	[Address(RVA = "0x2981314", Offset = "0x2981314", VA = "0x2981314")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A07")]
	[Address(RVA = "0x29813A4", Offset = "0x29813A4", VA = "0x29813A4")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A08")]
	[Address(RVA = "0x2981424", Offset = "0x2981424", VA = "0x2981424")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A09")]
	[Address(RVA = "0x29814BC", Offset = "0x29814BC", VA = "0x29814BC")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0x298156C", Offset = "0x298156C", VA = "0x298156C")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0x2981614", Offset = "0x2981614", VA = "0x2981614")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0x29816AC", Offset = "0x29816AC", VA = "0x29816AC")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0x298173C", Offset = "0x298173C", VA = "0x298173C")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0x29817BC", Offset = "0x29817BC", VA = "0x29817BC")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0x298186C", Offset = "0x298186C", VA = "0x298186C")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A10")]
	[Address(RVA = "0x29818EC", Offset = "0x29818EC", VA = "0x29818EC")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A11")]
	[Address(RVA = "0x298196C", Offset = "0x298196C", VA = "0x298196C")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A12")]
	[Address(RVA = "0x29819FC", Offset = "0x29819FC", VA = "0x29819FC")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A13")]
	[Address(RVA = "0x2981A94", Offset = "0x2981A94", VA = "0x2981A94")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A14")]
	[Address(RVA = "0x2981B2C", Offset = "0x2981B2C", VA = "0x2981B2C")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A15")]
	[Address(RVA = "0x2981BBC", Offset = "0x2981BBC", VA = "0x2981BBC")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A16")]
	[Address(RVA = "0x2981C3C", Offset = "0x2981C3C", VA = "0x2981C3C")]
	public static extern void CSharp_AkPlatformInitSettings_threadOutputMgr_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A17")]
	[Address(RVA = "0x2981CCC", Offset = "0x2981CCC", VA = "0x2981CCC")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadOutputMgr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A18")]
	[Address(RVA = "0x2981D4C", Offset = "0x2981D4C", VA = "0x2981D4C")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A19")]
	[Address(RVA = "0x2981DDC", Offset = "0x2981DDC", VA = "0x2981DDC")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0x2981E5C", Offset = "0x2981E5C", VA = "0x2981E5C")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A1B")]
	[Address(RVA = "0x2981EEC", Offset = "0x2981EEC", VA = "0x2981EEC")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A1C")]
	[Address(RVA = "0x2981F6C", Offset = "0x2981F6C", VA = "0x2981F6C")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0x2981FFC", Offset = "0x2981FFC", VA = "0x2981FFC")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0x298207C", Offset = "0x298207C", VA = "0x298207C")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0x298210C", Offset = "0x298210C", VA = "0x298210C")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A20")]
	[Address(RVA = "0x298218C", Offset = "0x298218C", VA = "0x298218C")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A21")]
	[Address(RVA = "0x298221C", Offset = "0x298221C", VA = "0x298221C")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A22")]
	[Address(RVA = "0x298229C", Offset = "0x298229C", VA = "0x298229C")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A23")]
	[Address(RVA = "0x298232C", Offset = "0x298232C", VA = "0x298232C")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A24")]
	[Address(RVA = "0x29823AC", Offset = "0x29823AC", VA = "0x29823AC")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A25")]
	[Address(RVA = "0x298243C", Offset = "0x298243C", VA = "0x298243C")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A26")]
	[Address(RVA = "0x29824BC", Offset = "0x29824BC", VA = "0x29824BC")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A27")]
	[Address(RVA = "0x298254C", Offset = "0x298254C", VA = "0x298254C")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A28")]
	[Address(RVA = "0x29825D4", Offset = "0x29825D4", VA = "0x29825D4")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001A29")]
	[Address(RVA = "0x2982648", Offset = "0x2982648", VA = "0x2982648")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0x29826C8", Offset = "0x29826C8", VA = "0x29826C8")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0x2982758", Offset = "0x2982758", VA = "0x2982758")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0x29827E8", Offset = "0x29827E8", VA = "0x29827E8")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0x2982868", Offset = "0x2982868", VA = "0x2982868")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0x29828DC", Offset = "0x29828DC", VA = "0x29828DC")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0x298295C", Offset = "0x298295C", VA = "0x298295C")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A30")]
	[Address(RVA = "0x29829EC", Offset = "0x29829EC", VA = "0x29829EC")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A31")]
	[Address(RVA = "0x2982A6C", Offset = "0x2982A6C", VA = "0x2982A6C")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A32")]
	[Address(RVA = "0x2982AFC", Offset = "0x2982AFC", VA = "0x2982AFC")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A33")]
	[Address(RVA = "0x2982B7C", Offset = "0x2982B7C", VA = "0x2982B7C")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A34")]
	[Address(RVA = "0x2982C0C", Offset = "0x2982C0C", VA = "0x2982C0C")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A35")]
	[Address(RVA = "0x2982C8C", Offset = "0x2982C8C", VA = "0x2982C8C")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A36")]
	[Address(RVA = "0x2982D1C", Offset = "0x2982D1C", VA = "0x2982D1C")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A37")]
	[Address(RVA = "0x2982D9C", Offset = "0x2982D9C", VA = "0x2982D9C")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A38")]
	[Address(RVA = "0x2982E2C", Offset = "0x2982E2C", VA = "0x2982E2C")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A39")]
	[Address(RVA = "0x2982EAC", Offset = "0x2982EAC", VA = "0x2982EAC")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A3A")]
	[Address(RVA = "0x2982F3C", Offset = "0x2982F3C", VA = "0x2982F3C")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A3B")]
	[Address(RVA = "0x2982FBC", Offset = "0x2982FBC", VA = "0x2982FBC")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A3C")]
	[Address(RVA = "0x298304C", Offset = "0x298304C", VA = "0x298304C")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A3D")]
	[Address(RVA = "0x29830CC", Offset = "0x29830CC", VA = "0x29830CC")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A3E")]
	[Address(RVA = "0x298315C", Offset = "0x298315C", VA = "0x298315C")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A3F")]
	[Address(RVA = "0x29831DC", Offset = "0x29831DC", VA = "0x29831DC")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A40")]
	[Address(RVA = "0x298326C", Offset = "0x298326C", VA = "0x298326C")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A41")]
	[Address(RVA = "0x29832EC", Offset = "0x29832EC", VA = "0x29832EC")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A42")]
	[Address(RVA = "0x298337C", Offset = "0x298337C", VA = "0x298337C")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A43")]
	[Address(RVA = "0x2983404", Offset = "0x2983404", VA = "0x2983404")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A44")]
	[Address(RVA = "0x2983494", Offset = "0x2983494", VA = "0x2983494")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A45")]
	[Address(RVA = "0x2983514", Offset = "0x2983514", VA = "0x2983514")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x6001A46")]
	[Address(RVA = "0x2983588", Offset = "0x2983588", VA = "0x2983588")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A47")]
	[Address(RVA = "0x2983608", Offset = "0x2983608", VA = "0x2983608")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A48")]
	[Address(RVA = "0x2983698", Offset = "0x2983698", VA = "0x2983698")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A49")]
	[Address(RVA = "0x2983718", Offset = "0x2983718", VA = "0x2983718")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0x29837A8", Offset = "0x29837A8", VA = "0x29837A8")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0x2983828", Offset = "0x2983828", VA = "0x2983828")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A4C")]
	[Address(RVA = "0x29838B8", Offset = "0x29838B8", VA = "0x29838B8")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A4D")]
	[Address(RVA = "0x2983938", Offset = "0x2983938", VA = "0x2983938")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A4E")]
	[Address(RVA = "0x29839C8", Offset = "0x29839C8", VA = "0x29839C8")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A4F")]
	[Address(RVA = "0x2983A48", Offset = "0x2983A48", VA = "0x2983A48")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x6001A50")]
	[Address(RVA = "0x2983ABC", Offset = "0x2983ABC", VA = "0x2983ABC")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A51")]
	[Address(RVA = "0x2983B3C", Offset = "0x2983B3C", VA = "0x2983B3C")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A52")]
	[Address(RVA = "0x2983BC0", Offset = "0x2983BC0", VA = "0x2983BC0")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001A53")]
	[Address(RVA = "0x2983C30", Offset = "0x2983C30", VA = "0x2983C30")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A54")]
	[Address(RVA = "0x2983CD4", Offset = "0x2983CD4", VA = "0x2983CD4")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A55")]
	[Address(RVA = "0x2983D64", Offset = "0x2983D64", VA = "0x2983D64")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A56")]
	[Address(RVA = "0x2983DE4", Offset = "0x2983DE4", VA = "0x2983DE4")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A57")]
	[Address(RVA = "0x2983E74", Offset = "0x2983E74", VA = "0x2983E74")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A58")]
	[Address(RVA = "0x2983EF4", Offset = "0x2983EF4", VA = "0x2983EF4")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A59")]
	[Address(RVA = "0x2983F84", Offset = "0x2983F84", VA = "0x2983F84")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A5A")]
	[Address(RVA = "0x2984004", Offset = "0x2984004", VA = "0x2984004")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x6001A5B")]
	[Address(RVA = "0x2984078", Offset = "0x2984078", VA = "0x2984078")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A5C")]
	[Address(RVA = "0x29840F8", Offset = "0x29840F8", VA = "0x29840F8")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x6001A5D")]
	[Address(RVA = "0x298416C", Offset = "0x298416C", VA = "0x298416C")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A5E")]
	[Address(RVA = "0x29841EC", Offset = "0x29841EC", VA = "0x29841EC")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x6001A5F")]
	[Address(RVA = "0x2984260", Offset = "0x2984260", VA = "0x2984260")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A60")]
	[Address(RVA = "0x29842F0", Offset = "0x29842F0", VA = "0x29842F0")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A61")]
	[Address(RVA = "0x2984370", Offset = "0x2984370", VA = "0x2984370")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A62")]
	[Address(RVA = "0x2984400", Offset = "0x2984400", VA = "0x2984400")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A63")]
	[Address(RVA = "0x2984480", Offset = "0x2984480", VA = "0x2984480")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A64")]
	[Address(RVA = "0x2984510", Offset = "0x2984510", VA = "0x2984510")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A65")]
	[Address(RVA = "0x2984590", Offset = "0x2984590", VA = "0x2984590")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A66")]
	[Address(RVA = "0x2984620", Offset = "0x2984620", VA = "0x2984620")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A67")]
	[Address(RVA = "0x29846A0", Offset = "0x29846A0", VA = "0x29846A0")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A68")]
	[Address(RVA = "0x2984730", Offset = "0x2984730", VA = "0x2984730")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A69")]
	[Address(RVA = "0x29847B8", Offset = "0x29847B8", VA = "0x29847B8")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A6A")]
	[Address(RVA = "0x298485C", Offset = "0x298485C", VA = "0x298485C")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0x29848DC", Offset = "0x29848DC", VA = "0x29848DC")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0x298495C", Offset = "0x298495C", VA = "0x298495C")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0x29849D0", Offset = "0x29849D0", VA = "0x29849D0")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0x2984A60", Offset = "0x2984A60", VA = "0x2984A60")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0x2984AE0", Offset = "0x2984AE0", VA = "0x2984AE0")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A70")]
	[Address(RVA = "0x2984B70", Offset = "0x2984B70", VA = "0x2984B70")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A71")]
	[Address(RVA = "0x2984BF0", Offset = "0x2984BF0", VA = "0x2984BF0")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A72")]
	[Address(RVA = "0x2984C80", Offset = "0x2984C80", VA = "0x2984C80")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A73")]
	[Address(RVA = "0x2984D00", Offset = "0x2984D00", VA = "0x2984D00")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A74")]
	[Address(RVA = "0x2984D90", Offset = "0x2984D90", VA = "0x2984D90")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A75")]
	[Address(RVA = "0x2984E10", Offset = "0x2984E10", VA = "0x2984E10")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A76")]
	[Address(RVA = "0x2984EA0", Offset = "0x2984EA0", VA = "0x2984EA0")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A77")]
	[Address(RVA = "0x2984F20", Offset = "0x2984F20", VA = "0x2984F20")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A78")]
	[Address(RVA = "0x2984FB0", Offset = "0x2984FB0", VA = "0x2984FB0")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A79")]
	[Address(RVA = "0x2985030", Offset = "0x2985030", VA = "0x2985030")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A7A")]
	[Address(RVA = "0x29850C0", Offset = "0x29850C0", VA = "0x29850C0")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A7B")]
	[Address(RVA = "0x2985140", Offset = "0x2985140", VA = "0x2985140")]
	public static extern void CSharp_AkInitializationSettings_communicationSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A7C")]
	[Address(RVA = "0x29851D0", Offset = "0x29851D0", VA = "0x29851D0")]
	public static extern IntPtr CSharp_AkInitializationSettings_communicationSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A7D")]
	[Address(RVA = "0x2985250", Offset = "0x2985250", VA = "0x2985250")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A7E")]
	[Address(RVA = "0x29852E0", Offset = "0x29852E0", VA = "0x29852E0")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A7F")]
	[Address(RVA = "0x2985360", Offset = "0x2985360", VA = "0x2985360")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A80")]
	[Address(RVA = "0x29853E0", Offset = "0x29853E0", VA = "0x29853E0")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A81")]
	[Address(RVA = "0x2985460", Offset = "0x2985460", VA = "0x2985460")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A82")]
	[Address(RVA = "0x29854E0", Offset = "0x29854E0", VA = "0x29854E0")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A83")]
	[Address(RVA = "0x2985560", Offset = "0x2985560", VA = "0x2985560")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x6001A84")]
	[Address(RVA = "0x29855D0", Offset = "0x29855D0", VA = "0x29855D0")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A85")]
	[Address(RVA = "0x2985650", Offset = "0x2985650", VA = "0x2985650")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A86")]
	[Address(RVA = "0x29856D0", Offset = "0x29856D0", VA = "0x29856D0")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A87")]
	[Address(RVA = "0x298577C", Offset = "0x298577C", VA = "0x298577C")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A88")]
	[Address(RVA = "0x2985814", Offset = "0x2985814", VA = "0x2985814")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A89")]
	[Address(RVA = "0x29858AC", Offset = "0x29858AC", VA = "0x29858AC")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0x298595C", Offset = "0x298595C", VA = "0x298595C")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A8B")]
	[Address(RVA = "0x29859F4", Offset = "0x29859F4", VA = "0x29859F4")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A8C")]
	[Address(RVA = "0x2985A8C", Offset = "0x2985A8C", VA = "0x2985A8C")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A8D")]
	[Address(RVA = "0x2985B24", Offset = "0x2985B24", VA = "0x2985B24")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0x2985BD4", Offset = "0x2985BD4", VA = "0x2985BD4")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001A8F")]
	[Address(RVA = "0x2985CB0", Offset = "0x2985CB0", VA = "0x2985CB0")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x6001A90")]
	[Address(RVA = "0x2985D24", Offset = "0x2985D24", VA = "0x2985D24")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A91")]
	[Address(RVA = "0x2985DA4", Offset = "0x2985DA4", VA = "0x2985DA4")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x6001A92")]
	[Address(RVA = "0x2985E18", Offset = "0x2985E18", VA = "0x2985E18")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6001A93")]
	[Address(RVA = "0x2985F00", Offset = "0x2985F00", VA = "0x2985F00")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001A94")]
	[Address(RVA = "0x2986110", Offset = "0x2986110", VA = "0x2986110")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A95")]
	[Address(RVA = "0x29861B0", Offset = "0x29861B0", VA = "0x29861B0")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A96")]
	[Address(RVA = "0x2986248", Offset = "0x2986248", VA = "0x2986248")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001A97")]
	[Address(RVA = "0x29862F8", Offset = "0x29862F8", VA = "0x29862F8")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A98")]
	[Address(RVA = "0x2986378", Offset = "0x2986378", VA = "0x2986378")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A99")]
	[Address(RVA = "0x29863F8", Offset = "0x29863F8", VA = "0x29863F8")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A9A")]
	[Address(RVA = "0x2986478", Offset = "0x2986478", VA = "0x2986478")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A9B")]
	[Address(RVA = "0x29864F8", Offset = "0x29864F8", VA = "0x29864F8")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A9C")]
	[Address(RVA = "0x2986578", Offset = "0x2986578", VA = "0x2986578")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x6001A9D")]
	[Address(RVA = "0x29865EC", Offset = "0x29865EC", VA = "0x29865EC")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x6001A9E")]
	[Address(RVA = "0x2986660", Offset = "0x2986660", VA = "0x2986660")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0x2986708", Offset = "0x2986708", VA = "0x2986708")]
	public static extern int CSharp_QuerySoundPropagationPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0x29867B0", Offset = "0x29867B0", VA = "0x29867B0")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0x2986854", Offset = "0x2986854", VA = "0x2986854")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0x2986914", Offset = "0x2986914", VA = "0x2986914")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0x29869C8", Offset = "0x29869C8", VA = "0x29869C8")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0x2986A48", Offset = "0x2986A48", VA = "0x2986A48")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0x2986AC8", Offset = "0x2986AC8", VA = "0x2986AC8")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, bool jarg8, bool jarg9);

	[PreserveSig]
	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0x2986BAC", Offset = "0x2986BAC", VA = "0x2986BAC")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA7")]
	[Address(RVA = "0x2986C2C", Offset = "0x2986C2C", VA = "0x2986C2C")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA8")]
	[Address(RVA = "0x2986CAC", Offset = "0x2986CAC", VA = "0x2986CAC")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA9")]
	[Address(RVA = "0x2986D2C", Offset = "0x2986D2C", VA = "0x2986D2C")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AAA")]
	[Address(RVA = "0x2986DAC", Offset = "0x2986DAC", VA = "0x2986DAC")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AAB")]
	[Address(RVA = "0x2986E2C", Offset = "0x2986E2C", VA = "0x2986E2C")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0x2986EAC", Offset = "0x2986EAC", VA = "0x2986EAC")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0x2986F2C", Offset = "0x2986F2C", VA = "0x2986F2C")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0x2986FAC", Offset = "0x2986FAC", VA = "0x2986FAC")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0x298702C", Offset = "0x298702C", VA = "0x298702C")]
	public AkSoundEnginePINVOKE()
	{
	}
}
[Token(Token = "0x2000300")]
public class AkSoundEngine
{
	[Token(Token = "0x2000542")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x2000543")]
	private class AutoObject
	{
		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x29604D8", Offset = "0x29604D8", VA = "0x29604D8")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x29605E8", Offset = "0x29605E8", VA = "0x29605E8", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x40013C7")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x40013C8")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x40013C9")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x40013CA")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x40013CB")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x40013CC")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x40013CD")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x40013CE")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x40013CF")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x40013D0")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x40013D1")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x40013D2")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x40013D3")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x40013D4")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x40013D5")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x40013D6")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x40013D7")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x40013D8")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x40013D9")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x40013DA")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x40013DB")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x40013DC")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x40013DD")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x40013DE")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x40013DF")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x40013E0")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x40013E1")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x40013E2")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x40013E3")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x40013E4")]
	public const int NULL = 0;

	[Token(Token = "0x40013E5")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x40013E6")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x40013E7")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x40013E8")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x40013E9")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x40013EA")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x40013EB")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x40013EC")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x40013ED")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x40013EE")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x40013EF")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x40013F0")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x40013F1")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x40013F2")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x40013F3")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x40013F4")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x40013F5")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x40013F6")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x40013F7")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x40013F8")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x40013F9")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x40013FA")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x40013FB")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x40013FC")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x40013FD")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x40013FE")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x40013FF")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x4001400")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x4001401")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x4001402")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x4001403")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x4001404")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x4001405")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x4001406")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x4001407")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x4001408")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x4001409")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x400140A")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x400140B")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x400140C")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x400140D")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x400140E")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x400140F")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x4001410")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x4001411")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x4001412")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x4001413")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x4001414")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x4001415")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x4001416")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x4001417")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001418")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001419")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x400141A")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x400141B")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x400141C")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x400141D")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x400141E")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x400141F")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x4001420")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x4001421")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x4001422")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x4001423")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x4001424")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x4001425")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x4001426")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x4001427")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x4001428")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x4001429")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x400142A")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x400142B")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x400142C")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x400142D")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x400142E")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x400142F")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x4001430")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x4001431")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x4001432")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x4001433")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x4001434")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x4001435")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x4001436")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x4001437")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x4001438")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x4001439")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x400143A")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x400143B")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x400143C")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x400143D")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x400143E")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x400143F")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x4001440")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x4001441")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x4001442")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x4001443")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x4001444")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x4001445")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x4001446")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x4001447")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x4001448")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x4001449")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x400144A")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x400144B")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x400144C")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x400144D")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x400144E")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x400144F")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x4001450")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x4001451")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x4001452")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x4001453")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x4001454")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x4001455")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x4001456")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x4001457")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x4001458")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x4001459")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x400145A")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x400145B")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x400145C")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x400145D")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x400145E")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x400145F")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x4001460")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x4001461")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x4001462")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x4001463")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x4001464")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x4001465")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x4001466")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x4001467")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x4001468")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x4001469")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x400146A")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x400146B")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x400146C")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x400146D")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x400146E")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x400146F")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x4001470")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x4001471")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x4001472")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x4001473")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x4001474")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x4001475")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x4001476")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x4001477")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x4001478")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x4001479")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x400147A")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x400147B")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x400147C")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x400147D")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x400147E")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x400147F")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x4001480")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x4001481")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x4001482")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x4001483")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x4001484")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x4001485")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x4001486")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x4001487")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x4001488")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x4001489")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x400148A")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x400148B")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x400148C")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x400148D")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x400148E")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x400148F")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x4001490")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x4001491")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x4001492")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x4001493")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x4001494")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x4001495")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x4001496")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x4001497")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x4001498")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x4001499")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x400149A")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x400149B")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x400149C")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x400149D")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x400149E")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x400149F")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x40014A0")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x40014A1")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x40014A2")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x40014A3")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x40014A4")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x40014A5")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x40014A6")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x40014A7")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x40014A8")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x40014A9")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x40014AA")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x40014AB")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x40014AC")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x40014AD")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x40014AE")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x40014AF")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x40014B0")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x40014B1")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x40014B2")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x40014B3")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x40014B4")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x40014B5")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x40014B6")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x40014B7")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x40014B8")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x40014B9")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x40014BA")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x40014BB")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x40014BC")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x40014BD")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x40014BE")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x40014BF")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x40014C0")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x40014C1")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x40014C2")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x40014C3")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x40014C4")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x40014C5")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x40014C6")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x40014C7")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x40014C8")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x40014C9")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x40014CA")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x40014CB")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x40014CC")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x40014CD")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x40014CE")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x40014CF")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x40014D0")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x40014D1")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x40014D2")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x40014D3")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x40014D4")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x40014D5")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x40014D6")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x40014D7")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x40014D8")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x40014D9")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x40014DA")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x40014DB")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x40014DC")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x40014DD")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x40014DE")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x40014DF")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x40014E0")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x40014E1")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x40014E2")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x40014E3")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x40014E4")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x40014E5")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x40014E6")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x40014E7")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x40014E8")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x40014E9")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x40014EA")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x40014EB")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x40014EC")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x40014ED")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x40014EE")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x40014EF")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x40014F0")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x40014F1")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x40014F2")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x40014F3")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x40014F4")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x40014F5")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x40014F6")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x40014F7")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x40014F8")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x40014F9")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x40014FA")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x40014FB")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x40014FC")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x40014FD")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x40014FE")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x40014FF")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x4001500")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x4001501")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x4001502")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x4001503")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x4001504")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x4001505")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x4001506")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x4001507")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x4001508")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x4001509")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x400150A")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x400150B")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x400150C")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x400150D")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x400150E")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x400150F")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x4001510")]
	public const double AK_SA_PLANE_THICKNESS_RATIO = 0.005;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x4001512")]
	public const string Deprecation_2018_1_2 = "This functionality is deprecated as of Wwise v2018.1.2 and will be removed in a future release.";

	[Token(Token = "0x4001513")]
	public const string Deprecation_2018_1_6 = "This functionality is deprecated as of Wwise v2018.1.6 and will be removed in a future release.";

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x170001CE")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x1885DA8", Offset = "0x1885DA8", VA = "0x1885DA8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001CF")]
	public static ushort AK_INT
	{
		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x1885E08", Offset = "0x1885E08", VA = "0x1885E08")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x170001D0")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x1885E68", Offset = "0x1885E68", VA = "0x1885E68")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x170001D1")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x1885EC8", Offset = "0x1885EC8", VA = "0x1885EC8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170001D2")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x1885F28", Offset = "0x1885F28", VA = "0x1885F28")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170001D3")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x1885F88", Offset = "0x1885F88", VA = "0x1885F88")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001D4")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x1885FE8", Offset = "0x1885FE8", VA = "0x1885FE8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001D5")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x1886048", Offset = "0x1886048", VA = "0x1886048")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001D6")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x188EC00", Offset = "0x188EC00", VA = "0x188EC00")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170001D7")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x188EC60", Offset = "0x188EC60", VA = "0x188EC60")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170001D8")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1890AF8", Offset = "0x1890AF8", VA = "0x1890AF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001D9")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1890B58", Offset = "0x1890B58", VA = "0x1890B58")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001DA")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x1890C20", Offset = "0x1890C20", VA = "0x1890C20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x1890BB8", Offset = "0x1890BB8", VA = "0x1890BB8")]
		set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x1892B24", Offset = "0x1892B24", VA = "0x1892B24")]
		set
		{
		}
	}

	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0x18860A8", Offset = "0x18860A8", VA = "0x18860A8")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AB9")]
	[Address(RVA = "0x1886210", Offset = "0x1886210", VA = "0x1886210")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6001ABA")]
	[Address(RVA = "0x1886370", Offset = "0x1886370", VA = "0x1886370")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x6001ABB")]
	[Address(RVA = "0x188645C", Offset = "0x188645C", VA = "0x188645C")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001ABC")]
	[Address(RVA = "0x1886538", Offset = "0x1886538", VA = "0x1886538")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ABD")]
	[Address(RVA = "0x18865A0", Offset = "0x18865A0", VA = "0x18865A0")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ABE")]
	[Address(RVA = "0x1886620", Offset = "0x1886620", VA = "0x1886620")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ABF")]
	[Address(RVA = "0x1886698", Offset = "0x1886698", VA = "0x1886698")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC0")]
	[Address(RVA = "0x1886700", Offset = "0x1886700", VA = "0x1886700")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC1")]
	[Address(RVA = "0x1886780", Offset = "0x1886780", VA = "0x1886780")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC2")]
	[Address(RVA = "0x18867F8", Offset = "0x18867F8", VA = "0x18867F8")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC3")]
	[Address(RVA = "0x1886860", Offset = "0x1886860", VA = "0x1886860")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC4")]
	[Address(RVA = "0x18868E0", Offset = "0x18868E0", VA = "0x18868E0")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0x1886958", Offset = "0x1886958", VA = "0x1886958")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0x18869C0", Offset = "0x18869C0", VA = "0x18869C0")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC7")]
	[Address(RVA = "0x1886A40", Offset = "0x1886A40", VA = "0x1886A40")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0x1886AB8", Offset = "0x1886AB8", VA = "0x1886AB8")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0x1886B20", Offset = "0x1886B20", VA = "0x1886B20")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0x1886B88", Offset = "0x1886B88", VA = "0x1886B88")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0x1886C08", Offset = "0x1886C08", VA = "0x1886C08")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0x1886CB0", Offset = "0x1886CB0", VA = "0x1886CB0")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ACD")]
	[Address(RVA = "0x186C728", Offset = "0x186C728", VA = "0x186C728")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ACE")]
	[Address(RVA = "0x1886D18", Offset = "0x1886D18", VA = "0x1886D18")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ACF")]
	[Address(RVA = "0x1886D94", Offset = "0x1886D94", VA = "0x1886D94")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0x1886E30", Offset = "0x1886E30", VA = "0x1886E30")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x6001AD1")]
	[Address(RVA = "0x1886EC4", Offset = "0x1886EC4", VA = "0x1886EC4")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AD2")]
	[Address(RVA = "0x1886F3C", Offset = "0x1886F3C", VA = "0x1886F3C")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0x1886FA4", Offset = "0x1886FA4", VA = "0x1886FA4")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0x188701C", Offset = "0x188701C", VA = "0x188701C")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AD5")]
	[Address(RVA = "0x1887084", Offset = "0x1887084", VA = "0x1887084")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AD6")]
	[Address(RVA = "0x1887114", Offset = "0x1887114", VA = "0x1887114")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AD7")]
	[Address(RVA = "0x1887194", Offset = "0x1887194", VA = "0x1887194")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0x1887224", Offset = "0x1887224", VA = "0x1887224")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0x18872AC", Offset = "0x18872AC", VA = "0x18872AC")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0x188731C", Offset = "0x188731C", VA = "0x188731C")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0x1887384", Offset = "0x1887384", VA = "0x1887384")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0x18873EC", Offset = "0x18873EC", VA = "0x18873EC")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0x188744C", Offset = "0x188744C", VA = "0x188744C")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ADE")]
	[Address(RVA = "0x18874B4", Offset = "0x18874B4", VA = "0x18874B4")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x6001ADF")]
	[Address(RVA = "0x188751C", Offset = "0x188751C", VA = "0x188751C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE0")]
	[Address(RVA = "0x18876C0", Offset = "0x18876C0", VA = "0x18876C0")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE1")]
	[Address(RVA = "0x1887854", Offset = "0x1887854", VA = "0x1887854")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE2")]
	[Address(RVA = "0x18879CC", Offset = "0x18879CC", VA = "0x18879CC")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE3")]
	[Address(RVA = "0x1887B34", Offset = "0x1887B34", VA = "0x1887B34")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE4")]
	[Address(RVA = "0x1887C28", Offset = "0x1887C28", VA = "0x1887C28")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE5")]
	[Address(RVA = "0x1887D14", Offset = "0x1887D14", VA = "0x1887D14")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE6")]
	[Address(RVA = "0x1887EB8", Offset = "0x1887EB8", VA = "0x1887EB8")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE7")]
	[Address(RVA = "0x188804C", Offset = "0x188804C", VA = "0x188804C")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE8")]
	[Address(RVA = "0x18881C4", Offset = "0x18881C4", VA = "0x18881C4")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AE9")]
	[Address(RVA = "0x188832C", Offset = "0x188832C", VA = "0x188832C")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AEA")]
	[Address(RVA = "0x1888420", Offset = "0x1888420", VA = "0x1888420")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AEB")]
	[Address(RVA = "0x188850C", Offset = "0x188850C", VA = "0x188850C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AEC")]
	[Address(RVA = "0x18885EC", Offset = "0x18885EC", VA = "0x18885EC")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AED")]
	[Address(RVA = "0x18886BC", Offset = "0x18886BC", VA = "0x18886BC")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AEE")]
	[Address(RVA = "0x1888784", Offset = "0x1888784", VA = "0x1888784")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AEF")]
	[Address(RVA = "0x188883C", Offset = "0x188883C", VA = "0x188883C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF0")]
	[Address(RVA = "0x18888B4", Offset = "0x18888B4", VA = "0x18888B4")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF1")]
	[Address(RVA = "0x1888994", Offset = "0x1888994", VA = "0x1888994")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF2")]
	[Address(RVA = "0x1888A64", Offset = "0x1888A64", VA = "0x1888A64")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF3")]
	[Address(RVA = "0x1888B2C", Offset = "0x1888B2C", VA = "0x1888B2C")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF4")]
	[Address(RVA = "0x1888BE4", Offset = "0x1888BE4", VA = "0x1888BE4")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF5")]
	[Address(RVA = "0x1888C5C", Offset = "0x1888C5C", VA = "0x1888C5C")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF6")]
	[Address(RVA = "0x1888D30", Offset = "0x1888D30", VA = "0x1888D30")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF7")]
	[Address(RVA = "0x1888DE0", Offset = "0x1888DE0", VA = "0x1888DE0")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF8")]
	[Address(RVA = "0x1888E48", Offset = "0x1888E48", VA = "0x1888E48")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AF9")]
	[Address(RVA = "0x1888EA8", Offset = "0x1888EA8", VA = "0x1888EA8")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AFA")]
	[Address(RVA = "0x1888F28", Offset = "0x1888F28", VA = "0x1888F28")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AFB")]
	[Address(RVA = "0x1888FA8", Offset = "0x1888FA8", VA = "0x1888FA8")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AFC")]
	[Address(RVA = "0x1889010", Offset = "0x1889010", VA = "0x1889010")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AFD")]
	[Address(RVA = "0x1889078", Offset = "0x1889078", VA = "0x1889078")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AFE")]
	[Address(RVA = "0x18890F8", Offset = "0x18890F8", VA = "0x18890F8")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001AFF")]
	[Address(RVA = "0x1889178", Offset = "0x1889178", VA = "0x1889178")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B00")]
	[Address(RVA = "0x1889248", Offset = "0x1889248", VA = "0x1889248")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B01")]
	[Address(RVA = "0x1889310", Offset = "0x1889310", VA = "0x1889310")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B02")]
	[Address(RVA = "0x18893C8", Offset = "0x18893C8", VA = "0x18893C8")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B03")]
	[Address(RVA = "0x1889498", Offset = "0x1889498", VA = "0x1889498")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0x1889560", Offset = "0x1889560", VA = "0x1889560")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0x1889618", Offset = "0x1889618", VA = "0x1889618")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0x18896F0", Offset = "0x18896F0", VA = "0x18896F0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0x18897B8", Offset = "0x18897B8", VA = "0x18897B8")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0x1889878", Offset = "0x1889878", VA = "0x1889878")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0x1889950", Offset = "0x1889950", VA = "0x1889950")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0x1889A18", Offset = "0x1889A18", VA = "0x1889A18")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0x1889AD8", Offset = "0x1889AD8", VA = "0x1889AD8")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6001B0C")]
	[Address(RVA = "0x1889B40", Offset = "0x1889B40", VA = "0x1889B40")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6001B0D")]
	[Address(RVA = "0x1889BE0", Offset = "0x1889BE0", VA = "0x1889BE0")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0x1889C48", Offset = "0x1889C48", VA = "0x1889C48")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0x1889CC8", Offset = "0x1889CC8", VA = "0x1889CC8")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B10")]
	[Address(RVA = "0x1889D40", Offset = "0x1889D40", VA = "0x1889D40")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B11")]
	[Address(RVA = "0x1889DC0", Offset = "0x1889DC0", VA = "0x1889DC0")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6001B12")]
	[Address(RVA = "0x1889E60", Offset = "0x1889E60", VA = "0x1889E60")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6001B13")]
	[Address(RVA = "0x1889EC0", Offset = "0x1889EC0", VA = "0x1889EC0")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6001B14")]
	[Address(RVA = "0x1889F40", Offset = "0x1889F40", VA = "0x1889F40")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6001B15")]
	[Address(RVA = "0x1889FB8", Offset = "0x1889FB8", VA = "0x1889FB8")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6001B16")]
	[Address(RVA = "0x188A020", Offset = "0x188A020", VA = "0x188A020")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6001B17")]
	[Address(RVA = "0x188A088", Offset = "0x188A088", VA = "0x188A088")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6001B18")]
	[Address(RVA = "0x188A0F0", Offset = "0x188A0F0", VA = "0x188A0F0")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B19")]
	[Address(RVA = "0x188A150", Offset = "0x188A150", VA = "0x188A150")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0x188A238", Offset = "0x188A238", VA = "0x188A238")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0x188A298", Offset = "0x188A298", VA = "0x188A298")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0x188A360", Offset = "0x188A360", VA = "0x188A360")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B1D")]
	[Address(RVA = "0x188A418", Offset = "0x188A418", VA = "0x188A418")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0x188A4E0", Offset = "0x188A4E0", VA = "0x188A4E0")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0x188A598", Offset = "0x188A598", VA = "0x188A598")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B20")]
	[Address(RVA = "0x188A640", Offset = "0x188A640", VA = "0x188A640")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B21")]
	[Address(RVA = "0x188A6A0", Offset = "0x188A6A0", VA = "0x188A6A0")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B22")]
	[Address(RVA = "0x188A718", Offset = "0x188A718", VA = "0x188A718")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B23")]
	[Address(RVA = "0x188A798", Offset = "0x188A798", VA = "0x188A798")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B24")]
	[Address(RVA = "0x1876E4C", Offset = "0x1876E4C", VA = "0x1876E4C")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0x188A810", Offset = "0x188A810", VA = "0x188A810")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0x188A8A0", Offset = "0x188A8A0", VA = "0x188A8A0")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B27")]
	[Address(RVA = "0x188A984", Offset = "0x188A984", VA = "0x188A984")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B28")]
	[Address(RVA = "0x188AA60", Offset = "0x188AA60", VA = "0x188AA60")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B29")]
	[Address(RVA = "0x188AB44", Offset = "0x188AB44", VA = "0x188AB44")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B2A")]
	[Address(RVA = "0x188AC38", Offset = "0x188AC38", VA = "0x188AC38")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B2B")]
	[Address(RVA = "0x188ACB8", Offset = "0x188ACB8", VA = "0x188ACB8")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B2C")]
	[Address(RVA = "0x188AD30", Offset = "0x188AD30", VA = "0x188AD30")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B2D")]
	[Address(RVA = "0x1876BD0", Offset = "0x1876BD0", VA = "0x1876BD0")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B2E")]
	[Address(RVA = "0x188ADB0", Offset = "0x188ADB0", VA = "0x188ADB0")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B2F")]
	[Address(RVA = "0x188AE8C", Offset = "0x188AE8C", VA = "0x188AE8C")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B30")]
	[Address(RVA = "0x188AF68", Offset = "0x188AF68", VA = "0x188AF68")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6001B31")]
	[Address(RVA = "0x188AFD0", Offset = "0x188AFD0", VA = "0x188AFD0")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0x188B050", Offset = "0x188B050", VA = "0x188B050")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B33")]
	[Address(RVA = "0x188B0C8", Offset = "0x188B0C8", VA = "0x188B0C8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B34")]
	[Address(RVA = "0x188B148", Offset = "0x188B148", VA = "0x188B148")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B35")]
	[Address(RVA = "0x188B1C0", Offset = "0x188B1C0", VA = "0x188B1C0")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B36")]
	[Address(RVA = "0x188B2A4", Offset = "0x188B2A4", VA = "0x188B2A4")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B37")]
	[Address(RVA = "0x188B380", Offset = "0x188B380", VA = "0x188B380")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B38")]
	[Address(RVA = "0x188B464", Offset = "0x188B464", VA = "0x188B464")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B39")]
	[Address(RVA = "0x188B540", Offset = "0x188B540", VA = "0x188B540")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0x188B5A0", Offset = "0x188B5A0", VA = "0x188B5A0")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0x188B83C", Offset = "0x188B83C", VA = "0x188B83C")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0x188B8BC", Offset = "0x188B8BC", VA = "0x188B8BC")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0x188BBBC", Offset = "0x188BBBC", VA = "0x188BBBC")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0x188BCA0", Offset = "0x188BCA0", VA = "0x188BCA0")]
	public static AKRESULT SetMedia(AkSourceSettings in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0x188BD2C", Offset = "0x188BD2C", VA = "0x188BD2C")]
	public static AKRESULT UnsetMedia(AkSourceSettings in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B40")]
	[Address(RVA = "0x188BDB8", Offset = "0x188BDB8", VA = "0x188BDB8")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B41")]
	[Address(RVA = "0x188C064", Offset = "0x188C064", VA = "0x188C064")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B42")]
	[Address(RVA = "0x188C0FC", Offset = "0x188C0FC", VA = "0x188C0FC")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B43")]
	[Address(RVA = "0x188C40C", Offset = "0x188C40C", VA = "0x188C40C")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B44")]
	[Address(RVA = "0x186C3BC", Offset = "0x186C3BC", VA = "0x186C3BC")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B45")]
	[Address(RVA = "0x186C870", Offset = "0x186C870", VA = "0x186C870")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B46")]
	[Address(RVA = "0x188C508", Offset = "0x188C508", VA = "0x188C508")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B47")]
	[Address(RVA = "0x188C5A8", Offset = "0x188C5A8", VA = "0x188C5A8")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B48")]
	[Address(RVA = "0x186C31C", Offset = "0x186C31C", VA = "0x186C31C")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B49")]
	[Address(RVA = "0x188C648", Offset = "0x188C648", VA = "0x188C648")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B4A")]
	[Address(RVA = "0x188C724", Offset = "0x188C724", VA = "0x188C724")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B4B")]
	[Address(RVA = "0x188C7F0", Offset = "0x188C7F0", VA = "0x188C7F0")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B4C")]
	[Address(RVA = "0x188C8D0", Offset = "0x188C8D0", VA = "0x188C8D0")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B4D")]
	[Address(RVA = "0x188C9A8", Offset = "0x188C9A8", VA = "0x188C9A8")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0x188CA70", Offset = "0x188CA70", VA = "0x188CA70")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0x188CB30", Offset = "0x188CB30", VA = "0x188CB30")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B50")]
	[Address(RVA = "0x188CBA8", Offset = "0x188CBA8", VA = "0x188CBA8")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B51")]
	[Address(RVA = "0x188CC88", Offset = "0x188CC88", VA = "0x188CC88")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B52")]
	[Address(RVA = "0x188CD60", Offset = "0x188CD60", VA = "0x188CD60")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0x188CE28", Offset = "0x188CE28", VA = "0x188CE28")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B54")]
	[Address(RVA = "0x188CEE8", Offset = "0x188CEE8", VA = "0x188CEE8")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B55")]
	[Address(RVA = "0x188CF60", Offset = "0x188CF60", VA = "0x188CF60")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B56")]
	[Address(RVA = "0x188D008", Offset = "0x188D008", VA = "0x188D008")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B57")]
	[Address(RVA = "0x188D0A8", Offset = "0x188D0A8", VA = "0x188D0A8")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B58")]
	[Address(RVA = "0x188D138", Offset = "0x188D138", VA = "0x188D138")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B59")]
	[Address(RVA = "0x188D1C0", Offset = "0x188D1C0", VA = "0x188D1C0")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B5A")]
	[Address(RVA = "0x188D268", Offset = "0x188D268", VA = "0x188D268")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B5B")]
	[Address(RVA = "0x188D308", Offset = "0x188D308", VA = "0x188D308")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B5C")]
	[Address(RVA = "0x188D398", Offset = "0x188D398", VA = "0x188D398")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B5D")]
	[Address(RVA = "0x188D420", Offset = "0x188D420", VA = "0x188D420")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B5E")]
	[Address(RVA = "0x188D4F0", Offset = "0x188D4F0", VA = "0x188D4F0")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B5F")]
	[Address(RVA = "0x188D5B8", Offset = "0x188D5B8", VA = "0x188D5B8")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B60")]
	[Address(RVA = "0x188D670", Offset = "0x188D670", VA = "0x188D670")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B61")]
	[Address(RVA = "0x188D720", Offset = "0x188D720", VA = "0x188D720")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B62")]
	[Address(RVA = "0x188D788", Offset = "0x188D788", VA = "0x188D788")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B63")]
	[Address(RVA = "0x188D858", Offset = "0x188D858", VA = "0x188D858")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0x188D920", Offset = "0x188D920", VA = "0x188D920")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B65")]
	[Address(RVA = "0x188D9D8", Offset = "0x188D9D8", VA = "0x188D9D8")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B66")]
	[Address(RVA = "0x188DA88", Offset = "0x188DA88", VA = "0x188DA88")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B67")]
	[Address(RVA = "0x188DAF0", Offset = "0x188DAF0", VA = "0x188DAF0")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0x188DBA8", Offset = "0x188DBA8", VA = "0x188DBA8")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0x188DC60", Offset = "0x188DC60", VA = "0x188DC60")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B6A")]
	[Address(RVA = "0x188DD10", Offset = "0x188DD10", VA = "0x188DD10")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B6B")]
	[Address(RVA = "0x188DDC0", Offset = "0x188DDC0", VA = "0x188DDC0")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0x188DE38", Offset = "0x188DE38", VA = "0x188DE38")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0x188DEB0", Offset = "0x188DEB0", VA = "0x188DEB0")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0x188DF74", Offset = "0x188DF74", VA = "0x188DF74")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0x188E04C", Offset = "0x188E04C", VA = "0x188E04C")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0x188E0CC", Offset = "0x188E0CC", VA = "0x188E0CC")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B71")]
	[Address(RVA = "0x188E14C", Offset = "0x188E14C", VA = "0x188E14C")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B72")]
	[Address(RVA = "0x188E1CC", Offset = "0x188E1CC", VA = "0x188E1CC")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0x188E244", Offset = "0x188E244", VA = "0x188E244")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B74")]
	[Address(RVA = "0x188E2BC", Offset = "0x188E2BC", VA = "0x188E2BC")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B75")]
	[Address(RVA = "0x188E348", Offset = "0x188E348", VA = "0x188E348")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0x188E3D4", Offset = "0x188E3D4", VA = "0x188E3D4")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0x188E4B4", Offset = "0x188E4B4", VA = "0x188E4B4")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValues in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0x188E5C0", Offset = "0x188E5C0", VA = "0x188E5C0")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B79")]
	[Address(RVA = "0x188E628", Offset = "0x188E628", VA = "0x188E628")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B7A")]
	[Address(RVA = "0x188E688", Offset = "0x188E688", VA = "0x188E688")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0x188E6F0", Offset = "0x188E6F0", VA = "0x188E6F0")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B7C")]
	[Address(RVA = "0x188E758", Offset = "0x188E758", VA = "0x188E758")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0x188E7B8", Offset = "0x188E7B8", VA = "0x188E7B8")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0x188E820", Offset = "0x188E820", VA = "0x188E820")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0x188E898", Offset = "0x188E898", VA = "0x188E898")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001B80")]
	[Address(RVA = "0x188E910", Offset = "0x188E910", VA = "0x188E910")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B81")]
	[Address(RVA = "0x188E988", Offset = "0x188E988", VA = "0x188E988")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B82")]
	[Address(RVA = "0x188EA00", Offset = "0x188EA00", VA = "0x188EA00")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B83")]
	[Address(RVA = "0x188EA78", Offset = "0x188EA78", VA = "0x188EA78")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B84")]
	[Address(RVA = "0x188EAE0", Offset = "0x188EAE0", VA = "0x188EAE0")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0x188EB40", Offset = "0x188EB40", VA = "0x188EB40")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B86")]
	[Address(RVA = "0x188EBA0", Offset = "0x188EBA0", VA = "0x188EBA0")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x6001B89")]
	[Address(RVA = "0x188ECC0", Offset = "0x188ECC0", VA = "0x188ECC0")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B8A")]
	[Address(RVA = "0x188ED6C", Offset = "0x188ED6C", VA = "0x188ED6C")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0x188EE10", Offset = "0x188EE10", VA = "0x188EE10")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B8C")]
	[Address(RVA = "0x188EEF0", Offset = "0x188EEF0", VA = "0x188EEF0")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B8D")]
	[Address(RVA = "0x188EFC0", Offset = "0x188EFC0", VA = "0x188EFC0")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B8E")]
	[Address(RVA = "0x188F088", Offset = "0x188F088", VA = "0x188F088")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B8F")]
	[Address(RVA = "0x188F108", Offset = "0x188F108", VA = "0x188F108")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B90")]
	[Address(RVA = "0x188F180", Offset = "0x188F180", VA = "0x188F180")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B91")]
	[Address(RVA = "0x188F260", Offset = "0x188F260", VA = "0x188F260")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B92")]
	[Address(RVA = "0x188F330", Offset = "0x188F330", VA = "0x188F330")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B93")]
	[Address(RVA = "0x188F3F8", Offset = "0x188F3F8", VA = "0x188F3F8")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B94")]
	[Address(RVA = "0x188F478", Offset = "0x188F478", VA = "0x188F478")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B95")]
	[Address(RVA = "0x188F4F0", Offset = "0x188F4F0", VA = "0x188F4F0")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x6001B96")]
	[Address(RVA = "0x188F550", Offset = "0x188F550", VA = "0x188F550")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x6001B97")]
	[Address(RVA = "0x188F5B8", Offset = "0x188F5B8", VA = "0x188F5B8")]
	public static void AkGetDefaultHighPriorityThreadProperties(AkThreadProperties out_threadProperties)
	{
	}

	[Token(Token = "0x6001B98")]
	[Address(RVA = "0x188F634", Offset = "0x188F634", VA = "0x188F634")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x6001B99")]
	[Address(RVA = "0x188F6C4", Offset = "0x188F6C4", VA = "0x188F6C4")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x6001B9A")]
	[Address(RVA = "0x188F744", Offset = "0x188F744", VA = "0x188F744")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B9B")]
	[Address(RVA = "0x188F7C4", Offset = "0x188F7C4", VA = "0x188F7C4")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B9C")]
	[Address(RVA = "0x188F844", Offset = "0x188F844", VA = "0x188F844")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B9D")]
	[Address(RVA = "0x188F8FC", Offset = "0x188F8FC", VA = "0x188F8FC")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B9E")]
	[Address(RVA = "0x188F9C0", Offset = "0x188F9C0", VA = "0x188F9C0")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B9F")]
	[Address(RVA = "0x188FA90", Offset = "0x188FA90", VA = "0x188FA90")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA0")]
	[Address(RVA = "0x188FB60", Offset = "0x188FB60", VA = "0x188FB60")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA1")]
	[Address(RVA = "0x188FC18", Offset = "0x188FC18", VA = "0x188FC18")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA2")]
	[Address(RVA = "0x188FCC8", Offset = "0x188FCC8", VA = "0x188FCC8")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA3")]
	[Address(RVA = "0x188FD40", Offset = "0x188FD40", VA = "0x188FD40")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA4")]
	[Address(RVA = "0x188FDB8", Offset = "0x188FDB8", VA = "0x188FDB8")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA5")]
	[Address(RVA = "0x188FE7C", Offset = "0x188FE7C", VA = "0x188FE7C")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA6")]
	[Address(RVA = "0x188FF4C", Offset = "0x188FF4C", VA = "0x188FF4C")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA7")]
	[Address(RVA = "0x189002C", Offset = "0x189002C", VA = "0x189002C")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfo out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA8")]
	[Address(RVA = "0x18900D8", Offset = "0x18900D8", VA = "0x18900D8")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfo out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BA9")]
	[Address(RVA = "0x1890184", Offset = "0x1890184", VA = "0x1890184")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BAA")]
	[Address(RVA = "0x1890228", Offset = "0x1890228", VA = "0x1890228")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BAB")]
	[Address(RVA = "0x18902C8", Offset = "0x18902C8", VA = "0x18902C8")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x6001BAC")]
	[Address(RVA = "0x1890368", Offset = "0x1890368", VA = "0x1890368")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0x18903D0", Offset = "0x18903D0", VA = "0x18903D0")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001BAE")]
	[Address(RVA = "0x1890438", Offset = "0x1890438", VA = "0x1890438")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BAF")]
	[Address(RVA = "0x18904F0", Offset = "0x18904F0", VA = "0x18904F0")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BB0")]
	[Address(RVA = "0x1890570", Offset = "0x1890570", VA = "0x1890570")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0x18905F0", Offset = "0x18905F0", VA = "0x18905F0")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001BB2")]
	[Address(RVA = "0x1890658", Offset = "0x1890658", VA = "0x1890658")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001BB3")]
	[Address(RVA = "0x18906C0", Offset = "0x18906C0", VA = "0x18906C0")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001BB4")]
	[Address(RVA = "0x1890728", Offset = "0x1890728", VA = "0x1890728")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x6001BB5")]
	[Address(RVA = "0x1890790", Offset = "0x1890790", VA = "0x1890790")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x6001BB6")]
	[Address(RVA = "0x18907F8", Offset = "0x18907F8", VA = "0x18907F8")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x6001BB7")]
	[Address(RVA = "0x1890870", Offset = "0x1890870", VA = "0x1890870")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB8")]
	[Address(RVA = "0x18908D8", Offset = "0x18908D8", VA = "0x18908D8")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB9")]
	[Address(RVA = "0x1890940", Offset = "0x1890940", VA = "0x1890940")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BBA")]
	[Address(RVA = "0x18909A8", Offset = "0x18909A8", VA = "0x18909A8")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BBB")]
	[Address(RVA = "0x1890A10", Offset = "0x1890A10", VA = "0x1890A10")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x6001BBC")]
	[Address(RVA = "0x1890A78", Offset = "0x1890A78", VA = "0x1890A78")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x6001BC1")]
	[Address(RVA = "0x1890C80", Offset = "0x1890C80", VA = "0x1890C80")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x6001BC2")]
	[Address(RVA = "0x1890CE0", Offset = "0x1890CE0", VA = "0x1890CE0")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BC3")]
	[Address(RVA = "0x1890DA4", Offset = "0x1890DA4", VA = "0x1890DA4")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BC4")]
	[Address(RVA = "0x1890E44", Offset = "0x1890E44", VA = "0x1890E44")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BC5")]
	[Address(RVA = "0x1890F08", Offset = "0x1890F08", VA = "0x1890F08")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BC6")]
	[Address(RVA = "0x1891004", Offset = "0x1891004", VA = "0x1891004")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BC7")]
	[Address(RVA = "0x18910C0", Offset = "0x18910C0", VA = "0x18910C0")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BC8")]
	[Address(RVA = "0x1891178", Offset = "0x1891178", VA = "0x1891178")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BC9")]
	[Address(RVA = "0x18911F0", Offset = "0x18911F0", VA = "0x18911F0")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BCA")]
	[Address(RVA = "0x1891258", Offset = "0x1891258", VA = "0x1891258")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BCB")]
	[Address(RVA = "0x1882A9C", Offset = "0x1882A9C", VA = "0x1882A9C")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BCC")]
	[Address(RVA = "0x1891354", Offset = "0x1891354", VA = "0x1891354")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BCD")]
	[Address(RVA = "0x18913BC", Offset = "0x18913BC", VA = "0x18913BC")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BCE")]
	[Address(RVA = "0x189146C", Offset = "0x189146C", VA = "0x189146C")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BCF")]
	[Address(RVA = "0x1884D2C", Offset = "0x1884D2C", VA = "0x1884D2C")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0x1891524", Offset = "0x1891524", VA = "0x1891524")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BD1")]
	[Address(RVA = "0x1870B8C", Offset = "0x1870B8C", VA = "0x1870B8C")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x6001BD2")]
	[Address(RVA = "0x1870D78", Offset = "0x1870D78", VA = "0x1870D78")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0x18915F4", Offset = "0x18915F4", VA = "0x18915F4")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0x189166C", Offset = "0x189166C", VA = "0x189166C")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0x1891700", Offset = "0x1891700", VA = "0x1891700")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0x189177C", Offset = "0x189177C", VA = "0x189177C")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0x18917F8", Offset = "0x18917F8", VA = "0x18917F8")]
	public static void Term()
	{
	}

	[Token(Token = "0x6001BD8")]
	[Address(RVA = "0x1891858", Offset = "0x1891858", VA = "0x1891858")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BD9")]
	[Address(RVA = "0x18918F0", Offset = "0x18918F0", VA = "0x18918F0")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BDA")]
	[Address(RVA = "0x1891988", Offset = "0x1891988", VA = "0x1891988")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BDB")]
	[Address(RVA = "0x1891A30", Offset = "0x1891A30", VA = "0x1891A30")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BDC")]
	[Address(RVA = "0x1891A98", Offset = "0x1891A98", VA = "0x1891A98")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BDD")]
	[Address(RVA = "0x1891B00", Offset = "0x1891B00", VA = "0x1891B00")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BDE")]
	[Address(RVA = "0x1891B80", Offset = "0x1891B80", VA = "0x1891B80")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BDF")]
	[Address(RVA = "0x1891BE8", Offset = "0x1891BE8", VA = "0x1891BE8")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BE0")]
	[Address(RVA = "0x1891C50", Offset = "0x1891C50", VA = "0x1891C50")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BE1")]
	[Address(RVA = "0x1891CB8", Offset = "0x1891CB8", VA = "0x1891CB8")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BE2")]
	[Address(RVA = "0x1891D38", Offset = "0x1891D38", VA = "0x1891D38")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BE3")]
	[Address(RVA = "0x18767BC", Offset = "0x18767BC", VA = "0x18767BC")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x6001BE4")]
	[Address(RVA = "0x1891DE0", Offset = "0x1891DE0", VA = "0x1891DE0")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BE5")]
	[Address(RVA = "0x1891E48", Offset = "0x1891E48", VA = "0x1891E48")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BE6")]
	[Address(RVA = "0x1891EA8", Offset = "0x1891EA8", VA = "0x1891EA8")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BE7")]
	[Address(RVA = "0x1891FB0", Offset = "0x1891FB0", VA = "0x1891FB0")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0x186C484", Offset = "0x186C484", VA = "0x186C484")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BE9")]
	[Address(RVA = "0x1892058", Offset = "0x1892058", VA = "0x1892058")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0x18920D0", Offset = "0x18920D0", VA = "0x18920D0")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BEB")]
	[Address(RVA = "0x189218C", Offset = "0x189218C", VA = "0x189218C")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0x1892208", Offset = "0x1892208", VA = "0x1892208")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x6001BED")]
	[Address(RVA = "0x1892284", Offset = "0x1892284", VA = "0x1892284")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x6001BEE")]
	[Address(RVA = "0x1892318", Offset = "0x1892318", VA = "0x1892318")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x6001BEF")]
	[Address(RVA = "0x18923AC", Offset = "0x18923AC", VA = "0x18923AC")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x6001BF0")]
	[Address(RVA = "0x1892440", Offset = "0x1892440", VA = "0x1892440")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6001BF1")]
	[Address(RVA = "0x18924A0", Offset = "0x18924A0", VA = "0x18924A0")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6001BF2")]
	[Address(RVA = "0x1892500", Offset = "0x1892500", VA = "0x1892500")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BF3")]
	[Address(RVA = "0x1892600", Offset = "0x1892600", VA = "0x1892600")]
	public static AKRESULT QuerySoundPropagationPaths(GameObject in_gameObjectID, AkPathParams arg1, AkPropagationPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BF4")]
	[Address(RVA = "0x1892700", Offset = "0x1892700", VA = "0x1892700")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BF5")]
	[Address(RVA = "0x1884030", Offset = "0x1884030", VA = "0x1884030")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BF6")]
	[Address(RVA = "0x1882908", Offset = "0x1882908", VA = "0x1882908")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BF7")]
	[Address(RVA = "0x1892800", Offset = "0x1892800", VA = "0x1892800")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BF8")]
	[Address(RVA = "0x18928A0", Offset = "0x18928A0", VA = "0x18928A0")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BF9")]
	[Address(RVA = "0x1892940", Offset = "0x1892940", VA = "0x1892940")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BFA")]
	[Address(RVA = "0x18764BC", Offset = "0x18764BC", VA = "0x18764BC")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6001BFB")]
	[Address(RVA = "0x1892A28", Offset = "0x1892A28", VA = "0x1892A28")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6001BFC")]
	[Address(RVA = "0x186EA90", Offset = "0x186EA90", VA = "0x186EA90")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6001BFD")]
	[Address(RVA = "0x1892A90", Offset = "0x1892A90", VA = "0x1892A90")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001BFF")]
	[Address(RVA = "0x1875828", Offset = "0x1875828", VA = "0x1875828")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001C00")]
	[Address(RVA = "0x1892BC4", Offset = "0x1892BC4", VA = "0x1892BC4")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001C01")]
	[Address(RVA = "0x1892D18", Offset = "0x1892D18", VA = "0x1892D18")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001C02")]
	[Address(RVA = "0x1892DD4", Offset = "0x1892DD4", VA = "0x1892DD4")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001C03")]
	[Address(RVA = "0x1892F28", Offset = "0x1892F28", VA = "0x1892F28")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001C04")]
	[Address(RVA = "0x18930B0", Offset = "0x18930B0", VA = "0x18930B0")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001C05")]
	[Address(RVA = "0x18758A4", Offset = "0x18758A4", VA = "0x18758A4")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001C06")]
	[Address(RVA = "0x18931B4", Offset = "0x18931B4", VA = "0x18931B4")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001C07")]
	[Address(RVA = "0x1892C70", Offset = "0x1892C70", VA = "0x1892C70")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001C08")]
	[Address(RVA = "0x1892E80", Offset = "0x1892E80", VA = "0x1892E80")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001C09")]
	[Address(RVA = "0x18932FC", Offset = "0x18932FC", VA = "0x18932FC")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001C0A")]
	[Address(RVA = "0x1893278", Offset = "0x1893278", VA = "0x1893278")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0B")]
	[Address(RVA = "0x1893410", Offset = "0x1893410", VA = "0x1893410")]
	public static bool IsGameObjectRegistered(GameObject in_gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0C")]
	[Address(RVA = "0x1893478", Offset = "0x1893478", VA = "0x1893478")]
	public AkSoundEngine()
	{
	}
}
[Token(Token = "0x2000301")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001DC")]
	public int nPriority
	{
		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x16000E0", Offset = "0x16000E0", VA = "0x16000E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1600064", Offset = "0x1600064", VA = "0x1600064")]
		set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public uint uStackSize
	{
		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x16001C8", Offset = "0x16001C8", VA = "0x16001C8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x160014C", Offset = "0x160014C", VA = "0x160014C")]
		set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public int uSchedPolicy
	{
		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x16002B0", Offset = "0x16002B0", VA = "0x16002B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1600234", Offset = "0x1600234", VA = "0x1600234")]
		set
		{
		}
	}

	[Token(Token = "0x170001DF")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1600398", Offset = "0x1600398", VA = "0x1600398")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x160031C", Offset = "0x160031C", VA = "0x160031C")]
		set
		{
		}
	}

	[Token(Token = "0x6001C0E")]
	[Address(RVA = "0x15FFE04", Offset = "0x15FFE04", VA = "0x15FFE04")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C0F")]
	[Address(RVA = "0x15FFE44", Offset = "0x15FFE44", VA = "0x15FFE44")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C10")]
	[Address(RVA = "0x15FFE94", Offset = "0x15FFE94", VA = "0x15FFE94", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C11")]
	[Address(RVA = "0x15FFEC8", Offset = "0x15FFEC8", VA = "0x15FFEC8", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x6001C12")]
	[Address(RVA = "0x15FFF38", Offset = "0x15FFF38", VA = "0x15FFF38", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C1B")]
	[Address(RVA = "0x1600404", Offset = "0x1600404", VA = "0x1600404")]
	public AkThreadProperties()
	{
	}
}
[Token(Token = "0x2000302")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001C1C")]
	[Address(RVA = "0x1603030", Offset = "0x1603030", VA = "0x1603030")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C1D")]
	[Address(RVA = "0x1603070", Offset = "0x1603070", VA = "0x1603070")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C1E")]
	[Address(RVA = "0x16030C0", Offset = "0x16030C0", VA = "0x16030C0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C1F")]
	[Address(RVA = "0x16030F4", Offset = "0x16030F4", VA = "0x16030F4", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6001C20")]
	[Address(RVA = "0x1603164", Offset = "0x1603164", VA = "0x1603164", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C21")]
	[Address(RVA = "0x1603290", Offset = "0x1603290", VA = "0x1603290")]
	public AkUnityPlatformSpecificSettings()
	{
	}
}
[Token(Token = "0x2000303")]
public enum AKRESULT
{
	[Token(Token = "0x400151A")]
	AK_NotImplemented = 0,
	[Token(Token = "0x400151B")]
	AK_Success = 1,
	[Token(Token = "0x400151C")]
	AK_Fail = 2,
	[Token(Token = "0x400151D")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x400151E")]
	AK_NotCompatible = 4,
	[Token(Token = "0x400151F")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x4001520")]
	AK_NameNotSet = 6,
	[Token(Token = "0x4001521")]
	AK_InvalidFile = 7,
	[Token(Token = "0x4001522")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x4001523")]
	AK_MaxReached = 9,
	[Token(Token = "0x4001524")]
	AK_InputsInUsed = 10,
	[Token(Token = "0x4001525")]
	AK_OutputsInUsed = 11,
	[Token(Token = "0x4001526")]
	AK_InvalidName = 12,
	[Token(Token = "0x4001527")]
	AK_NameAlreadyInUse = 13,
	[Token(Token = "0x4001528")]
	AK_InvalidID = 14,
	[Token(Token = "0x4001529")]
	AK_IDNotFound = 15,
	[Token(Token = "0x400152A")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x400152B")]
	AK_NoMoreData = 17,
	[Token(Token = "0x400152C")]
	AK_NoSourceAvailable = 18,
	[Token(Token = "0x400152D")]
	AK_StateGroupAlreadyExists = 19,
	[Token(Token = "0x400152E")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x400152F")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x4001530")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x4001531")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x4001532")]
	AK_UserNotInList = 29,
	[Token(Token = "0x4001533")]
	AK_NoTransitionPoint = 30,
	[Token(Token = "0x4001534")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x4001535")]
	AK_ParameterAdjusted = 32,
	[Token(Token = "0x4001536")]
	AK_IsA3DSound = 33,
	[Token(Token = "0x4001537")]
	AK_NotA3DSound = 34,
	[Token(Token = "0x4001538")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x4001539")]
	AK_PathNotFound = 36,
	[Token(Token = "0x400153A")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x400153B")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x400153C")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x400153D")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x400153E")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x400153F")]
	AK_VoiceNotFound = 42,
	[Token(Token = "0x4001540")]
	AK_DataNeeded = 43,
	[Token(Token = "0x4001541")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x4001542")]
	AK_DataReady = 45,
	[Token(Token = "0x4001543")]
	AK_NoDataReady = 46,
	[Token(Token = "0x4001544")]
	AK_NoMoreSlotAvailable = 47,
	[Token(Token = "0x4001545")]
	AK_SlotNotFound = 48,
	[Token(Token = "0x4001546")]
	AK_ProcessingOnly = 49,
	[Token(Token = "0x4001547")]
	AK_MemoryLeak = 50,
	[Token(Token = "0x4001548")]
	AK_CorruptedBlockList = 51,
	[Token(Token = "0x4001549")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x400154A")]
	AK_Cancelled = 53,
	[Token(Token = "0x400154B")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x400154C")]
	AK_IsProcessing = 55,
	[Token(Token = "0x400154D")]
	AK_BankReadError = 56,
	[Token(Token = "0x400154E")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x400154F")]
	AK_VoiceDone = 58,
	[Token(Token = "0x4001550")]
	AK_UnknownEnvironment = 59,
	[Token(Token = "0x4001551")]
	AK_EnvironmentInUse = 60,
	[Token(Token = "0x4001552")]
	AK_UnknownObject = 61,
	[Token(Token = "0x4001553")]
	AK_NoConversionNeeded = 62,
	[Token(Token = "0x4001554")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x4001555")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x4001556")]
	AK_DataReadyNoProcess = 65,
	[Token(Token = "0x4001557")]
	AK_FileNotFound = 66,
	[Token(Token = "0x4001558")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x4001559")]
	AK_CouldNotCreateSecBuffer = 68,
	[Token(Token = "0x400155A")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x400155B")]
	AK_RenderedFX = 71,
	[Token(Token = "0x400155C")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x400155D")]
	AK_ProcessDone = 73,
	[Token(Token = "0x400155E")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x400155F")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x4001560")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x4001561")]
	AK_Busy = 77,
	[Token(Token = "0x4001562")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x4001563")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x4001564")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x4001565")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x4001566")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x4001567")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x4001568")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x4001569")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x400156A")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x400156B")]
	AK_OpenSLError = 87,
	[Token(Token = "0x400156C")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x400156D")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x400156E")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x400156F")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x4001570")]
	AK_InitBankNotLoaded = 92
}
[Token(Token = "0x2000304")]
public enum Ak3DPositionType
{
	[Token(Token = "0x4001572")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x4001573")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x4001574")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x2000305")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x4001576")]
	AK_SpatializationMode_None,
	[Token(Token = "0x4001577")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x4001578")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x2000306")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001E0")]
	public uint textureID
	{
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x18CA988", Offset = "0x18CA988", VA = "0x18CA988")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x18CA90C", Offset = "0x18CA90C", VA = "0x18CA90C")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x18CAA70", Offset = "0x18CAA70", VA = "0x18CAA70")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x18CA9F4", Offset = "0x18CA9F4", VA = "0x18CA9F4")]
		set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	public string strName
	{
		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x18CAB58", Offset = "0x18CAB58", VA = "0x18CAB58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x18CAADC", Offset = "0x18CAADC", VA = "0x18CAADC")]
		set
		{
		}
	}

	[Token(Token = "0x6001C22")]
	[Address(RVA = "0x18CA628", Offset = "0x18CA628", VA = "0x18CA628")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C23")]
	[Address(RVA = "0x18CA668", Offset = "0x18CA668", VA = "0x18CA668")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C24")]
	[Address(RVA = "0x18CA6B8", Offset = "0x18CA6B8", VA = "0x18CA6B8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C25")]
	[Address(RVA = "0x18CA6EC", Offset = "0x18CA6EC", VA = "0x18CA6EC", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001C26")]
	[Address(RVA = "0x18CA75C", Offset = "0x18CA75C", VA = "0x18CA75C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C27")]
	[Address(RVA = "0x18CA888", Offset = "0x18CA888", VA = "0x18CA888")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001C2E")]
	[Address(RVA = "0x18CABF8", Offset = "0x18CABF8", VA = "0x18CABF8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001C2F")]
	[Address(RVA = "0x18CAC64", Offset = "0x18CAC64", VA = "0x18CAC64")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x6001C30")]
	[Address(RVA = "0x18CACD0", Offset = "0x18CACD0", VA = "0x18CACD0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001C31")]
	[Address(RVA = "0x18CAD30", Offset = "0x18CAD30", VA = "0x18CAD30")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x2000307")]
public enum AkActionOnEventType
{
	[Token(Token = "0x400157C")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x400157D")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x400157E")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x400157F")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4001580")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x2000308")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x4001582")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x4001583")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x4001584")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x4001585")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x4001586")]
	AkDeviceState_All = 15
}
[Token(Token = "0x2000309")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001E3")]
	public uint uSampleRate
	{
		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x18CC5E4", Offset = "0x18CC5E4", VA = "0x18CC5E4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x18CC568", Offset = "0x18CC568", VA = "0x18CC568")]
		set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x18CC748", Offset = "0x18CC748", VA = "0x18CC748")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x18CC650", Offset = "0x18CC650", VA = "0x18CC650")]
		set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x18CC8B4", Offset = "0x18CC8B4", VA = "0x18CC8B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x18CC838", Offset = "0x18CC838", VA = "0x18CC838")]
		set
		{
		}
	}

	[Token(Token = "0x170001E6")]
	public uint uBlockAlign
	{
		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x18CC99C", Offset = "0x18CC99C", VA = "0x18CC99C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x18CC920", Offset = "0x18CC920", VA = "0x18CC920")]
		set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	public uint uTypeID
	{
		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x18CCA84", Offset = "0x18CCA84", VA = "0x18CCA84")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x18CCA08", Offset = "0x18CCA08", VA = "0x18CCA08")]
		set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public uint uInterleaveID
	{
		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x18CCB6C", Offset = "0x18CCB6C", VA = "0x18CCB6C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x18CCAF0", Offset = "0x18CCAF0", VA = "0x18CCAF0")]
		set
		{
		}
	}

	[Token(Token = "0x6001C32")]
	[Address(RVA = "0x18CC308", Offset = "0x18CC308", VA = "0x18CC308")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C33")]
	[Address(RVA = "0x18CC348", Offset = "0x18CC348", VA = "0x18CC348")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C34")]
	[Address(RVA = "0x18CC398", Offset = "0x18CC398", VA = "0x18CC398", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C35")]
	[Address(RVA = "0x18CC3CC", Offset = "0x18CC3CC", VA = "0x18CC3CC", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x6001C36")]
	[Address(RVA = "0x18CC43C", Offset = "0x18CC43C", VA = "0x18CC43C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C43")]
	[Address(RVA = "0x18CCBD8", Offset = "0x18CCBD8", VA = "0x18CCBD8")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x6001C44")]
	[Address(RVA = "0x18CCC44", Offset = "0x18CCC44", VA = "0x18CCC44")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x6001C45")]
	[Address(RVA = "0x18CCCB0", Offset = "0x18CCCB0", VA = "0x18CCCB0")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x6001C46")]
	[Address(RVA = "0x18CCD1C", Offset = "0x18CCD1C", VA = "0x18CCD1C")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001C47")]
	[Address(RVA = "0x18CCD88", Offset = "0x18CCD88", VA = "0x18CCD88")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001C48")]
	[Address(RVA = "0x18CCDF4", Offset = "0x18CCDF4", VA = "0x18CCDF4")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x6001C49")]
	[Address(RVA = "0x18CCED4", Offset = "0x18CCED4", VA = "0x18CCED4")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C4A")]
	[Address(RVA = "0x18CCF40", Offset = "0x18CCF40", VA = "0x18CCF40")]
	public AkAudioFormat()
	{
	}
}
[Token(Token = "0x200030A")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001E9")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x18CE9D4", Offset = "0x18CE9D4", VA = "0x18CE9D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001C4B")]
	[Address(RVA = "0x18CE774", Offset = "0x18CE774", VA = "0x18CE774")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C4C")]
	[Address(RVA = "0x18CE7B4", Offset = "0x18CE7B4", VA = "0x18CE7B4")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C4D")]
	[Address(RVA = "0x18CE804", Offset = "0x18CE804", VA = "0x18CE804", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C4E")]
	[Address(RVA = "0x18CE838", Offset = "0x18CE838", VA = "0x18CE838", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x6001C4F")]
	[Address(RVA = "0x18CE8A8", Offset = "0x18CE8A8", VA = "0x18CE8A8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C51")]
	[Address(RVA = "0x18CEA40", Offset = "0x18CEA40", VA = "0x18CEA40")]
	public AkAudioInterruptionCallbackInfo()
	{
	}
}
[Token(Token = "0x200030B")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001EA")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x18CFBB8", Offset = "0x18CFBB8", VA = "0x18CFBB8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x18CFB3C", Offset = "0x18CFB3C", VA = "0x18CFB3C")]
		set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x18CFCA0", Offset = "0x18CFCA0", VA = "0x18CFCA0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x18CFC24", Offset = "0x18CFC24", VA = "0x18CFC24")]
		set
		{
		}
	}

	[Token(Token = "0x6001C52")]
	[Address(RVA = "0x18CF8DC", Offset = "0x18CF8DC", VA = "0x18CF8DC")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C53")]
	[Address(RVA = "0x18CF91C", Offset = "0x18CF91C", VA = "0x18CF91C")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C54")]
	[Address(RVA = "0x18CF96C", Offset = "0x18CF96C", VA = "0x18CF96C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C55")]
	[Address(RVA = "0x18CF9A0", Offset = "0x18CF9A0", VA = "0x18CF9A0", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x6001C56")]
	[Address(RVA = "0x18CFA10", Offset = "0x18CFA10", VA = "0x18CFA10", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C5B")]
	[Address(RVA = "0x18CFD0C", Offset = "0x18CFD0C", VA = "0x18CFD0C")]
	public AkAudioSettings()
	{
	}
}
[Token(Token = "0x200030C")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001EC")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x18CFFF0", Offset = "0x18CFFF0", VA = "0x18CFFF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0x18CFD90", Offset = "0x18CFD90", VA = "0x18CFD90")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C5D")]
	[Address(RVA = "0x18CFDD0", Offset = "0x18CFDD0", VA = "0x18CFDD0")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C5E")]
	[Address(RVA = "0x18CFE20", Offset = "0x18CFE20", VA = "0x18CFE20", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C5F")]
	[Address(RVA = "0x18CFE54", Offset = "0x18CFE54", VA = "0x18CFE54", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x6001C60")]
	[Address(RVA = "0x18CFEC4", Offset = "0x18CFEC4", VA = "0x18CFEC4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C62")]
	[Address(RVA = "0x18D005C", Offset = "0x18D005C", VA = "0x18D005C")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}
}
[Token(Token = "0x200030D")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001ED")]
	public ulong listenerID
	{
		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x18D0CB0", Offset = "0x18D0CB0", VA = "0x18D0CB0")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x18D0C34", Offset = "0x18D0C34", VA = "0x18D0C34")]
		set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public uint auxBusID
	{
		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x18D0D98", Offset = "0x18D0D98", VA = "0x18D0D98")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x18D0D1C", Offset = "0x18D0D1C", VA = "0x18D0D1C")]
		set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public float fControlValue
	{
		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x18D0E80", Offset = "0x18D0E80", VA = "0x18D0E80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x18D0E04", Offset = "0x18D0E04", VA = "0x18D0E04")]
		set
		{
		}
	}

	[Token(Token = "0x6001C63")]
	[Address(RVA = "0x18D02B0", Offset = "0x18D02B0", VA = "0x18D02B0")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C64")]
	[Address(RVA = "0x18D0A14", Offset = "0x18D0A14", VA = "0x18D0A14")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C65")]
	[Address(RVA = "0x18D0A64", Offset = "0x18D0A64", VA = "0x18D0A64", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C66")]
	[Address(RVA = "0x18D0A98", Offset = "0x18D0A98", VA = "0x18D0A98", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x6001C67")]
	[Address(RVA = "0x18D0B08", Offset = "0x18D0B08", VA = "0x18D0B08", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0x18D0EEC", Offset = "0x18D0EEC", VA = "0x18D0EEC")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0x18D0FC0", Offset = "0x18D0FC0", VA = "0x18D0FC0")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C70")]
	[Address(RVA = "0x18D1084", Offset = "0x18D1084", VA = "0x18D1084")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001C71")]
	[Address(RVA = "0x18D10E4", Offset = "0x18D10E4", VA = "0x18D10E4")]
	public AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001C72")]
	[Address(RVA = "0x18D11A8", Offset = "0x18D11A8", VA = "0x18D11A8")]
	public AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200030E")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F0")]
	public uint bankID
	{
		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x18D197C", Offset = "0x18D197C", VA = "0x18D197C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001F1")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x18D19E8", Offset = "0x18D19E8", VA = "0x18D19E8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170001F2")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x18D1A54", Offset = "0x18D1A54", VA = "0x18D1A54")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x170001F3")]
	public int memPoolId
	{
		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x18D1AC0", Offset = "0x18D1AC0", VA = "0x18D1AC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0x18D171C", Offset = "0x18D171C", VA = "0x18D171C")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0x18D175C", Offset = "0x18D175C", VA = "0x18D175C")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C75")]
	[Address(RVA = "0x18D17AC", Offset = "0x18D17AC", VA = "0x18D17AC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C76")]
	[Address(RVA = "0x18D17E0", Offset = "0x18D17E0", VA = "0x18D17E0", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x6001C77")]
	[Address(RVA = "0x18D1850", Offset = "0x18D1850", VA = "0x18D1850", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0x18D1B2C", Offset = "0x18D1B2C", VA = "0x18D1B2C")]
	public AkBankCallbackInfo()
	{
	}
}
[Token(Token = "0x200030F")]
public enum AkBankContent
{
	[Token(Token = "0x4001594")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x4001595")]
	AkBankContent_All
}
[Token(Token = "0x2000310")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x4001597")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x4001598")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x4001599")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x2000311")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F4")]
	public IntPtr pCookie
	{
		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x18D3918", Offset = "0x18D3918", VA = "0x18D3918")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170001F5")]
	public ulong gameObjID
	{
		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x18D3984", Offset = "0x18D3984", VA = "0x18D3984")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0x18D36B8", Offset = "0x18D36B8", VA = "0x18D36B8")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0x18D36F8", Offset = "0x18D36F8", VA = "0x18D36F8")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0x18D3748", Offset = "0x18D3748", VA = "0x18D3748", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C80")]
	[Address(RVA = "0x18D377C", Offset = "0x18D377C", VA = "0x18D377C", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0x18D37EC", Offset = "0x18D37EC", VA = "0x18D37EC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0x18D39F0", Offset = "0x18D39F0", VA = "0x18D39F0")]
	public AkCallbackInfo()
	{
	}
}
[Token(Token = "0x2000312")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001C85")]
	[Address(RVA = "0x18D6DE0", Offset = "0x18D6DE0", VA = "0x18D6DE0")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C86")]
	[Address(RVA = "0x18D6E20", Offset = "0x18D6E20", VA = "0x18D6E20")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C87")]
	[Address(RVA = "0x18D6E70", Offset = "0x18D6E70", VA = "0x18D6E70", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C88")]
	[Address(RVA = "0x18D6EA4", Offset = "0x18D6EA4", VA = "0x18D6EA4", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x6001C89")]
	[Address(RVA = "0x18D6F14", Offset = "0x18D6F14", VA = "0x18D6F14", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C8A")]
	[Address(RVA = "0x18D4860", Offset = "0x18D4860", VA = "0x18D4860")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001C8B")]
	[Address(RVA = "0x18D49B4", Offset = "0x18D49B4", VA = "0x18D49B4")]
	public static void Term()
	{
	}

	[Token(Token = "0x6001C8C")]
	[Address(RVA = "0x18D57BC", Offset = "0x18D57BC", VA = "0x18D57BC")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C8D")]
	[Address(RVA = "0x18D4A9C", Offset = "0x18D4A9C", VA = "0x18D4A9C")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x6001C8E")]
	[Address(RVA = "0x18D61D4", Offset = "0x18D61D4", VA = "0x18D61D4")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0x18D7040", Offset = "0x18D7040", VA = "0x18D7040")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001C90")]
	[Address(RVA = "0x18D70D8", Offset = "0x18D70D8", VA = "0x18D70D8")]
	public AkCallbackSerializer()
	{
	}
}
[Token(Token = "0x2000313")]
public enum AkCallbackType
{
	[Token(Token = "0x400159F")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x40015A0")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x40015A1")]
	AK_Marker = 4,
	[Token(Token = "0x40015A2")]
	AK_Duration = 8,
	[Token(Token = "0x40015A3")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x40015A4")]
	AK_Starvation = 32,
	[Token(Token = "0x40015A5")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x40015A6")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x40015A7")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x40015A8")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x40015A9")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x40015AA")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x40015AB")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x40015AC")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x40015AD")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x40015AE")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x40015AF")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x40015B0")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x40015B1")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x40015B2")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x40015B3")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x40015B4")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x40015B5")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x40015B6")]
	AK_Bank = 1073741824,
	[Token(Token = "0x40015B7")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x2000314")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F6")]
	public uint uNumChannels
	{
		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x18D73A8", Offset = "0x18D73A8", VA = "0x18D73A8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x18D732C", Offset = "0x18D732C", VA = "0x18D732C")]
		set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public uint eConfigType
	{
		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x18D7490", Offset = "0x18D7490", VA = "0x18D7490")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x18D7414", Offset = "0x18D7414", VA = "0x18D7414")]
		set
		{
		}
	}

	[Token(Token = "0x170001F8")]
	public uint uChannelMask
	{
		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x18D7578", Offset = "0x18D7578", VA = "0x18D7578")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x18D74FC", Offset = "0x18D74FC", VA = "0x18D74FC")]
		set
		{
		}
	}

	[Token(Token = "0x6001C91")]
	[Address(RVA = "0x18CC7F8", Offset = "0x18CC7F8", VA = "0x18CC7F8")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001C92")]
	[Address(RVA = "0x18CC6F8", Offset = "0x18CC6F8", VA = "0x18CC6F8")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001C93")]
	[Address(RVA = "0x18D715C", Offset = "0x18D715C", VA = "0x18D715C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001C94")]
	[Address(RVA = "0x18D7190", Offset = "0x18D7190", VA = "0x18D7190", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x6001C95")]
	[Address(RVA = "0x18D7200", Offset = "0x18D7200", VA = "0x18D7200", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001C9C")]
	[Address(RVA = "0x18D75E4", Offset = "0x18D75E4", VA = "0x18D75E4")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x6001C9D")]
	[Address(RVA = "0x18D7668", Offset = "0x18D7668", VA = "0x18D7668")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001C9E")]
	[Address(RVA = "0x18D7704", Offset = "0x18D7704", VA = "0x18D7704")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001C9F")]
	[Address(RVA = "0x18D7770", Offset = "0x18D7770", VA = "0x18D7770")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001CA0")]
	[Address(RVA = "0x18D77EC", Offset = "0x18D77EC", VA = "0x18D77EC")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001CA1")]
	[Address(RVA = "0x18D7870", Offset = "0x18D7870", VA = "0x18D7870")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6001CA2")]
	[Address(RVA = "0x18D78EC", Offset = "0x18D78EC", VA = "0x18D78EC")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6001CA3")]
	[Address(RVA = "0x18D7968", Offset = "0x18D7968", VA = "0x18D7968")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CA4")]
	[Address(RVA = "0x18D79D4", Offset = "0x18D79D4", VA = "0x18D79D4")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x6001CA5")]
	[Address(RVA = "0x18D7A40", Offset = "0x18D7A40", VA = "0x18D7A40")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x6001CA6")]
	[Address(RVA = "0x18D7ABC", Offset = "0x18D7ABC", VA = "0x18D7ABC")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x6001CA7")]
	[Address(RVA = "0x18D7B60", Offset = "0x18D7B60", VA = "0x18D7B60")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x6001CA8")]
	[Address(RVA = "0x18D7C04", Offset = "0x18D7C04", VA = "0x18D7C04")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000315")]
public enum AkChannelConfigType
{
	[Token(Token = "0x40015BB")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x40015BC")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x40015BD")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x2000316")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F9")]
	public AkTransform position
	{
		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x18D7F60", Offset = "0x18D7F60", VA = "0x18D7F60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x18D7ED0", Offset = "0x18D7ED0", VA = "0x18D7ED0")]
		set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public uint uInputChannels
	{
		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x18D808C", Offset = "0x18D808C", VA = "0x18D808C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x18D8010", Offset = "0x18D8010", VA = "0x18D8010")]
		set
		{
		}
	}

	[Token(Token = "0x6001CA9")]
	[Address(RVA = "0x18D7C70", Offset = "0x18D7C70", VA = "0x18D7C70")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001CAA")]
	[Address(RVA = "0x18D7CB0", Offset = "0x18D7CB0", VA = "0x18D7CB0")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001CAB")]
	[Address(RVA = "0x18D7D00", Offset = "0x18D7D00", VA = "0x18D7D00", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001CAC")]
	[Address(RVA = "0x18D7D34", Offset = "0x18D7D34", VA = "0x18D7D34", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x6001CAD")]
	[Address(RVA = "0x18D7DA4", Offset = "0x18D7DA4", VA = "0x18D7DA4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0x18D80F8", Offset = "0x18D80F8", VA = "0x18D80F8")]
	public AkChannelEmitter()
	{
	}
}
[Token(Token = "0x2000317")]
public enum AkChannelOrdering
{
	[Token(Token = "0x40015C1")]
	ChannelOrdering_Standard,
	[Token(Token = "0x40015C2")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x2000318")]
public enum AkConnectionType
{
	[Token(Token = "0x40015C4")]
	ConnectionType_Direct,
	[Token(Token = "0x40015C5")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x40015C6")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x2000319")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x40015C8")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x40015C9")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x40015CA")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x40015CB")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x40015CC")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x40015CD")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x40015CE")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x40015CF")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x40015D0")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x40015D1")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x40015D2")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x200031A")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001FB")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x18D9E74", Offset = "0x18D9E74", VA = "0x18D9E74")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x18D9DF8", Offset = "0x18D9DF8", VA = "0x18D9DF8")]
		set
		{
		}
	}

	[Token(Token = "0x170001FC")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x18D9EE0", Offset = "0x18D9EE0", VA = "0x18D9EE0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x18D875C", Offset = "0x18D875C", VA = "0x18D875C")]
		set
		{
		}
	}

	[Token(Token = "0x170001FD")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x18D9FC8", Offset = "0x18D9FC8", VA = "0x18D9FC8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x18D9F4C", Offset = "0x18D9F4C", VA = "0x18D9F4C")]
		set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	public int ePoolAttributes
	{
		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x18DA0B0", Offset = "0x18DA0B0", VA = "0x18DA0B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x18DA034", Offset = "0x18DA034", VA = "0x18DA034")]
		set
		{
		}
	}

	[Token(Token = "0x170001FF")]
	public uint uGranularity
	{
		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x18DA198", Offset = "0x18DA198", VA = "0x18DA198")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x18DA11C", Offset = "0x18DA11C", VA = "0x18DA11C")]
		set
		{
		}
	}

	[Token(Token = "0x17000200")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x18DA280", Offset = "0x18DA280", VA = "0x18DA280")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x18DA204", Offset = "0x18DA204", VA = "0x18DA204")]
		set
		{
		}
	}

	[Token(Token = "0x17000201")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x18DA37C", Offset = "0x18DA37C", VA = "0x18DA37C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x18DA2EC", Offset = "0x18DA2EC", VA = "0x18DA2EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000202")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x18DA42C", Offset = "0x18DA42C", VA = "0x18DA42C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x18D87D8", Offset = "0x18D87D8", VA = "0x18D87D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000203")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x18DA514", Offset = "0x18DA514", VA = "0x18DA514")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x18DA498", Offset = "0x18DA498", VA = "0x18DA498")]
		set
		{
		}
	}

	[Token(Token = "0x17000204")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x18DA580", Offset = "0x18DA580", VA = "0x18DA580")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x18D8854", Offset = "0x18D8854", VA = "0x18D8854")]
		set
		{
		}
	}

	[Token(Token = "0x17000205")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x18DA5EC", Offset = "0x18DA5EC", VA = "0x18DA5EC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x18D88D0", Offset = "0x18D88D0", VA = "0x18D88D0")]
		set
		{
		}
	}

	[Token(Token = "0x6001CB3")]
	[Address(RVA = "0x18D9B98", Offset = "0x18D9B98", VA = "0x18D9B98")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001CB4")]
	[Address(RVA = "0x18D9BD8", Offset = "0x18D9BD8", VA = "0x18D9BD8")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001CB5")]
	[Address(RVA = "0x18D9C28", Offset = "0x18D9C28", VA = "0x18D9C28", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0x18D9C5C", Offset = "0x18D9C5C", VA = "0x18D9C5C", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x6001CB7")]
	[Address(RVA = "0x18D9CCC", Offset = "0x18D9CCC", VA = "0x18D9CCC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001CCE")]
	[Address(RVA = "0x18DA658", Offset = "0x18DA658", VA = "0x18DA658")]
	public AkDeviceSettings()
	{
	}
}
[Token(Token = "0x200031B")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x40015D6")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x40015D7")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x40015D8")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x40015D9")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x200031C")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x40015DC")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x17000206")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x18DA9CC", Offset = "0x18DA9CC", VA = "0x18DA9CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x18DA93C", Offset = "0x18DA93C", VA = "0x18DA93C")]
		set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public uint nodeCount
	{
		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x18DAAF8", Offset = "0x18DAAF8", VA = "0x18DAAF8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x18DAA7C", Offset = "0x18DAA7C", VA = "0x18DAA7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000208")]
	public float diffraction
	{
		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x18DABE0", Offset = "0x18DABE0", VA = "0x18DABE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x18DAB64", Offset = "0x18DAB64", VA = "0x18DAB64")]
		set
		{
		}
	}

	[Token(Token = "0x17000209")]
	public float totLength
	{
		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x18DACC8", Offset = "0x18DACC8", VA = "0x18DACC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x18DAC4C", Offset = "0x18DAC4C", VA = "0x18DAC4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700020A")]
	public float obstructionValue
	{
		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x18DADB0", Offset = "0x18DADB0", VA = "0x18DADB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x18DAD34", Offset = "0x18DAD34", VA = "0x18DAD34")]
		set
		{
		}
	}

	[Token(Token = "0x6001CCF")]
	[Address(RVA = "0x18DA6DC", Offset = "0x18DA6DC", VA = "0x18DA6DC")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001CD0")]
	[Address(RVA = "0x18DA71C", Offset = "0x18DA71C", VA = "0x18DA71C")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001CD1")]
	[Address(RVA = "0x18DA76C", Offset = "0x18DA76C", VA = "0x18DA76C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001CD2")]
	[Address(RVA = "0x18DA7A0", Offset = "0x18DA7A0", VA = "0x18DA7A0", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x6001CD3")]
	[Address(RVA = "0x18DA810", Offset = "0x18DA810", VA = "0x18DA810", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001CDE")]
	[Address(RVA = "0x18DAE1C", Offset = "0x18DAE1C", VA = "0x18DAE1C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001CDF")]
	[Address(RVA = "0x18DAE7C", Offset = "0x18DAE7C", VA = "0x18DAE7C")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001CE0")]
	[Address(RVA = "0x18DAF3C", Offset = "0x18DAF3C", VA = "0x18DAF3C")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6001CE1")]
	[Address(RVA = "0x18DAFB8", Offset = "0x18DAFB8", VA = "0x18DAFB8")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}

	[Token(Token = "0x6001CE2")]
	[Address(RVA = "0x18DB060", Offset = "0x18DB060", VA = "0x18DB060")]
	public AkDiffractionPathInfo()
	{
	}
}
[Token(Token = "0x200031D")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700020B")]
	public float fDuration
	{
		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x18DB7D4", Offset = "0x18DB7D4", VA = "0x18DB7D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020C")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x18DB840", Offset = "0x18DB840", VA = "0x18DB840")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020D")]
	public uint audioNodeID
	{
		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x18DB8AC", Offset = "0x18DB8AC", VA = "0x18DB8AC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700020E")]
	public uint mediaID
	{
		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x18DB918", Offset = "0x18DB918", VA = "0x18DB918")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700020F")]
	public bool bStreaming
	{
		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x18DB984", Offset = "0x18DB984", VA = "0x18DB984")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0x18D6688", Offset = "0x18D6688", VA = "0x18D6688")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001CE4")]
	[Address(RVA = "0x18DB330", Offset = "0x18DB330", VA = "0x18DB330")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001CE5")]
	[Address(RVA = "0x18DB380", Offset = "0x18DB380", VA = "0x18DB380", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001CE6")]
	[Address(RVA = "0x18DB49C", Offset = "0x18DB49C", VA = "0x18DB49C", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x6001CE7")]
	[Address(RVA = "0x18DB56C", Offset = "0x18DB56C", VA = "0x18DB56C", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001CED")]
	[Address(RVA = "0x18DB9F0", Offset = "0x18DB9F0", VA = "0x18DB9F0")]
	public AkDurationCallbackInfo()
	{
	}
}
[Token(Token = "0x200031E")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000210")]
	public uint playingID
	{
		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x18DBCE4", Offset = "0x18DBCE4", VA = "0x18DBCE4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000211")]
	public uint audioNodeID
	{
		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x18DBD50", Offset = "0x18DBD50", VA = "0x18DBD50")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000212")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x18DBDBC", Offset = "0x18DBDBC", VA = "0x18DBDBC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x6001CEE")]
	[Address(RVA = "0x18D65EC", Offset = "0x18D65EC", VA = "0x18D65EC")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001CEF")]
	[Address(RVA = "0x18DBA64", Offset = "0x18DBA64", VA = "0x18DBA64")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001CF0")]
	[Address(RVA = "0x18DBAB4", Offset = "0x18DBAB4", VA = "0x18DBAB4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001CF1")]
	[Address(RVA = "0x18DBB48", Offset = "0x18DBB48", VA = "0x18DBB48", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6001CF2")]
	[Address(RVA = "0x18DBBB0", Offset = "0x18DBBB0", VA = "0x18DBBB0", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001CF6")]
	[Address(RVA = "0x18DBE28", Offset = "0x18DBE28", VA = "0x18DBE28")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}
}
[Token(Token = "0x200031F")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x40015E0")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x40015E1")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x2000320")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000213")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x18DC54C", Offset = "0x18DC54C", VA = "0x18DC54C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x18DC4D0", Offset = "0x18DC4D0", VA = "0x18DC4D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000214")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x18DC634", Offset = "0x18DC634", VA = "0x18DC634")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x18DC5B8", Offset = "0x18DC5B8", VA = "0x18DC5B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000215")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x18DC71C", Offset = "0x18DC71C", VA = "0x18DC71C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x18DC6A0", Offset = "0x18DC6A0", VA = "0x18DC6A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000216")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x18DC804", Offset = "0x18DC804", VA = "0x18DC804")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x18DC788", Offset = "0x18DC788", VA = "0x18DC788")]
		set
		{
		}
	}

	[Token(Token = "0x17000217")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x18DC8EC", Offset = "0x18DC8EC", VA = "0x18DC8EC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x18DC870", Offset = "0x18DC870", VA = "0x18DC870")]
		set
		{
		}
	}

	[Token(Token = "0x17000218")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x18DC9D4", Offset = "0x18DC9D4", VA = "0x18DC9D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x18DC958", Offset = "0x18DC958", VA = "0x18DC958")]
		set
		{
		}
	}

	[Token(Token = "0x17000219")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x18DCABC", Offset = "0x18DCABC", VA = "0x18DCABC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x18DCA40", Offset = "0x18DCA40", VA = "0x18DCA40")]
		set
		{
		}
	}

	[Token(Token = "0x1700021A")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x18DCBA4", Offset = "0x18DCBA4", VA = "0x18DCBA4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x18DCB28", Offset = "0x18DCB28", VA = "0x18DCB28")]
		set
		{
		}
	}

	[Token(Token = "0x1700021B")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x18DCC8C", Offset = "0x18DCC8C", VA = "0x18DCC8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x18DCC10", Offset = "0x18DCC10", VA = "0x18DCC10")]
		set
		{
		}
	}

	[Token(Token = "0x1700021C")]
	public byte useImageSources
	{
		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x18DCD74", Offset = "0x18DCD74", VA = "0x18DCD74")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x18DCCF8", Offset = "0x18DCCF8", VA = "0x18DCCF8")]
		set
		{
		}
	}

	[Token(Token = "0x6001CF7")]
	[Address(RVA = "0x18DC1EC", Offset = "0x18DC1EC", VA = "0x18DC1EC")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001CF8")]
	[Address(RVA = "0x18DC22C", Offset = "0x18DC22C", VA = "0x18DC22C")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001CF9")]
	[Address(RVA = "0x18DC27C", Offset = "0x18DC27C", VA = "0x18DC27C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001CFA")]
	[Address(RVA = "0x18DC2B0", Offset = "0x18DC2B0", VA = "0x18DC2B0", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x6001CFB")]
	[Address(RVA = "0x18DC320", Offset = "0x18DC320", VA = "0x18DC320", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001CFC")]
	[Address(RVA = "0x18DC44C", Offset = "0x18DC44C", VA = "0x18DC44C")]
	public AkEmitterSettings()
	{
	}
}
[Token(Token = "0x2000321")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700021D")]
	public uint playingID
	{
		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x18CDCE0", Offset = "0x18CDCE0", VA = "0x18CDCE0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700021E")]
	public uint eventID
	{
		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x18DD92C", Offset = "0x18DD92C", VA = "0x18DD92C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6001D11")]
	[Address(RVA = "0x18D6550", Offset = "0x18D6550", VA = "0x18D6550")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001D12")]
	[Address(RVA = "0x18DD8DC", Offset = "0x18DD8DC", VA = "0x18DD8DC")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001D13")]
	[Address(RVA = "0x18DB408", Offset = "0x18DB408", VA = "0x18DB408", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001D14")]
	[Address(RVA = "0x18DB504", Offset = "0x18DB504", VA = "0x18DB504", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001D15")]
	[Address(RVA = "0x18DB6A0", Offset = "0x18DB6A0", VA = "0x18DB6A0", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001D18")]
	[Address(RVA = "0x18DD998", Offset = "0x18DD998", VA = "0x18DD998")]
	public AkEventCallbackInfo()
	{
	}
}
[Token(Token = "0x2000322")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700021F")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x18E05DC", Offset = "0x18E05DC", VA = "0x18E05DC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x18E0560", Offset = "0x18E0560", VA = "0x18E0560")]
		set
		{
		}
	}

	[Token(Token = "0x17000220")]
	public uint idCodec
	{
		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x18E06C4", Offset = "0x18E06C4", VA = "0x18E06C4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x18E0648", Offset = "0x18E0648", VA = "0x18E0648")]
		set
		{
		}
	}

	[Token(Token = "0x17000221")]
	public string szFile
	{
		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x18E07AC", Offset = "0x18E07AC", VA = "0x18E07AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x18E0730", Offset = "0x18E0730", VA = "0x18E0730")]
		set
		{
		}
	}

	[Token(Token = "0x17000222")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x18E08C8", Offset = "0x18E08C8", VA = "0x18E08C8")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x18E084C", Offset = "0x18E084C", VA = "0x18E084C")]
		set
		{
		}
	}

	[Token(Token = "0x17000223")]
	public uint uiMemorySize
	{
		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x18E09B0", Offset = "0x18E09B0", VA = "0x18E09B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x18E0934", Offset = "0x18E0934", VA = "0x18E0934")]
		set
		{
		}
	}

	[Token(Token = "0x17000224")]
	public uint idFile
	{
		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x18E0A98", Offset = "0x18E0A98", VA = "0x18E0A98")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x18E0A1C", Offset = "0x18E0A1C", VA = "0x18E0A1C")]
		set
		{
		}
	}

	[Token(Token = "0x6001D19")]
	[Address(RVA = "0x18E0300", Offset = "0x18E0300", VA = "0x18E0300")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001D1A")]
	[Address(RVA = "0x18E0340", Offset = "0x18E0340", VA = "0x18E0340")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001D1B")]
	[Address(RVA = "0x18E0390", Offset = "0x18E0390", VA = "0x18E0390", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001D1C")]
	[Address(RVA = "0x18E03C4", Offset = "0x18E03C4", VA = "0x18E03C4", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6001D1D")]
	[Address(RVA = "0x18E0434", Offset = "0x18E0434", VA = "0x18E0434", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001D2A")]
	[Address(RVA = "0x18E0B04", Offset = "0x18E0B04", VA = "0x18E0B04")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6001D2B")]
	[Address(RVA = "0x18E0B88", Offset = "0x18E0B88", VA = "0x18E0B88")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001D2C")]
	[Address(RVA = "0x18E0C3C", Offset = "0x18E0C3C", VA = "0x18E0C3C")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001D2D")]
	[Address(RVA = "0x18E0CE8", Offset = "0x18E0CE8", VA = "0x18E0CE8")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}
}
[Token(Token = "0x2000323")]
public enum AkFloorPlane
{
	[Token(Token = "0x40015E8")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x40015E9")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x40015EA")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x40015EB")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x2000324")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x40015ED")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x40015EE")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x40015EF")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x40015F0")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x40015F1")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x40015F2")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x40015F3")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x40015F4")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x40015F5")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x40015F6")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x40015F7")]
	AkGlobalCallbackLocation_Num = 10
}
[Token(Token = "0x2000325")]
public enum AkGroupType
{
	[Token(Token = "0x40015F9")]
	AkGroupType_Switch,
	[Token(Token = "0x40015FA")]
	AkGroupType_State
}
[Token(Token = "0x2000326")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000225")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x186CE30", Offset = "0x186CE30", VA = "0x186CE30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x186CDA0", Offset = "0x186CDA0", VA = "0x186CDA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000226")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x186CF5C", Offset = "0x186CF5C", VA = "0x186CF5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x186CEE0", Offset = "0x186CEE0", VA = "0x186CEE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000227")]
	public float fLevel
	{
		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x186D044", Offset = "0x186D044", VA = "0x186D044")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x186CFC8", Offset = "0x186CFC8", VA = "0x186CFC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000228")]
	public float fDiffraction
	{
		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x186D12C", Offset = "0x186D12C", VA = "0x186D12C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x186D0B0", Offset = "0x186D0B0", VA = "0x186D0B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000229")]
	public bool bDiffractedEmitterSide
	{
		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x186D214", Offset = "0x186D214", VA = "0x186D214")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x186D198", Offset = "0x186D198", VA = "0x186D198")]
		set
		{
		}
	}

	[Token(Token = "0x1700022A")]
	public bool bDiffractedListenerSide
	{
		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x186D2FC", Offset = "0x186D2FC", VA = "0x186D2FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x186D280", Offset = "0x186D280", VA = "0x186D280")]
		set
		{
		}
	}

	[Token(Token = "0x6001D2E")]
	[Address(RVA = "0x186C9FC", Offset = "0x186C9FC", VA = "0x186C9FC")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001D2F")]
	[Address(RVA = "0x186CA3C", Offset = "0x186CA3C", VA = "0x186CA3C")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001D30")]
	[Address(RVA = "0x186CA8C", Offset = "0x186CA8C", VA = "0x186CA8C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001D31")]
	[Address(RVA = "0x186CAC0", Offset = "0x186CAC0", VA = "0x186CAC0", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001D32")]
	[Address(RVA = "0x186CB30", Offset = "0x186CB30", VA = "0x186CB30", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001D33")]
	[Address(RVA = "0x186CC5C", Offset = "0x186CC5C", VA = "0x186CC5C")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001D34")]
	[Address(RVA = "0x186CCE0", Offset = "0x186CCE0", VA = "0x186CCE0")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}
}
[Token(Token = "0x2000327")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700022B")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x186D8AC", Offset = "0x186D8AC", VA = "0x186D8AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x186D804", Offset = "0x186D804", VA = "0x186D804")]
		set
		{
		}
	}

	[Token(Token = "0x6001D41")]
	[Address(RVA = "0x186D368", Offset = "0x186D368", VA = "0x186D368")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001D42")]
	[Address(RVA = "0x186D3A8", Offset = "0x186D3A8", VA = "0x186D3A8")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001D43")]
	[Address(RVA = "0x186D3F8", Offset = "0x186D3F8", VA = "0x186D3F8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001D44")]
	[Address(RVA = "0x186D42C", Offset = "0x186D42C", VA = "0x186D42C", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6001D45")]
	[Address(RVA = "0x186D49C", Offset = "0x186D49C", VA = "0x186D49C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001D46")]
	[Address(RVA = "0x186D5C8", Offset = "0x186D5C8", VA = "0x186D5C8")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6001D47")]
	[Address(RVA = "0x186D64C", Offset = "0x186D64C", VA = "0x186D64C")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x6001D48")]
	[Address(RVA = "0x186D70C", Offset = "0x186D70C", VA = "0x186D70C")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x6001D49")]
	[Address(RVA = "0x186D788", Offset = "0x186D788", VA = "0x186D788")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x2000328")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700022C")]
	public int pfnAssertHook
	{
		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x186DBC0", Offset = "0x186DBC0", VA = "0x186DBC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x186DBBC", Offset = "0x186DBBC", VA = "0x186DBBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x186DC44", Offset = "0x186DC44", VA = "0x186DC44")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x186DBC8", Offset = "0x186DBC8", VA = "0x186DBC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700022E")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x186DD2C", Offset = "0x186DD2C", VA = "0x186DD2C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x186DCB0", Offset = "0x186DCB0", VA = "0x186DCB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x186DE14", Offset = "0x186DE14", VA = "0x186DE14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x186DD98", Offset = "0x186DD98", VA = "0x186DD98")]
		set
		{
		}
	}

	[Token(Token = "0x17000230")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x186DEFC", Offset = "0x186DEFC", VA = "0x186DEFC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x186DE80", Offset = "0x186DE80", VA = "0x186DE80")]
		set
		{
		}
	}

	[Token(Token = "0x17000231")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x186DFE4", Offset = "0x186DFE4", VA = "0x186DFE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x186DF68", Offset = "0x186DF68", VA = "0x186DF68")]
		set
		{
		}
	}

	[Token(Token = "0x17000232")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x186E0CC", Offset = "0x186E0CC", VA = "0x186E0CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x186E050", Offset = "0x186E050", VA = "0x186E050")]
		set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x186E1B4", Offset = "0x186E1B4", VA = "0x186E1B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x186E138", Offset = "0x186E138", VA = "0x186E138")]
		set
		{
		}
	}

	[Token(Token = "0x17000234")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x186E29C", Offset = "0x186E29C", VA = "0x186E29C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x186E220", Offset = "0x186E220", VA = "0x186E220")]
		set
		{
		}
	}

	[Token(Token = "0x17000235")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x186E384", Offset = "0x186E384", VA = "0x186E384")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x186E308", Offset = "0x186E308", VA = "0x186E308")]
		set
		{
		}
	}

	[Token(Token = "0x17000236")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x186E46C", Offset = "0x186E46C", VA = "0x186E46C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x186E3F0", Offset = "0x186E3F0", VA = "0x186E3F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x186E5D0", Offset = "0x186E5D0", VA = "0x186E5D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x186E4D8", Offset = "0x186E4D8", VA = "0x186E4D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000238")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x186E73C", Offset = "0x186E73C", VA = "0x186E73C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x186E6C0", Offset = "0x186E6C0", VA = "0x186E6C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000239")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x186E824", Offset = "0x186E824", VA = "0x186E824")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x186E7A8", Offset = "0x186E7A8", VA = "0x186E7A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x186E90C", Offset = "0x186E90C", VA = "0x186E90C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x186E890", Offset = "0x186E890", VA = "0x186E890")]
		set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x186E9F4", Offset = "0x186E9F4", VA = "0x186E9F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x186E978", Offset = "0x186E978", VA = "0x186E978")]
		set
		{
		}
	}

	[Token(Token = "0x1700023C")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x186EB70", Offset = "0x186EB70", VA = "0x186EB70")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x186EAF4", Offset = "0x186EAF4", VA = "0x186EAF4")]
		set
		{
		}
	}

	[Token(Token = "0x6001D4C")]
	[Address(RVA = "0x186D95C", Offset = "0x186D95C", VA = "0x186D95C")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001D4D")]
	[Address(RVA = "0x186D99C", Offset = "0x186D99C", VA = "0x186D99C")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001D4E")]
	[Address(RVA = "0x186D9EC", Offset = "0x186D9EC", VA = "0x186D9EC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001D4F")]
	[Address(RVA = "0x186DA20", Offset = "0x186DA20", VA = "0x186DA20", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x6001D50")]
	[Address(RVA = "0x186DA90", Offset = "0x186DA90", VA = "0x186DA90", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001D73")]
	[Address(RVA = "0x186EBDC", Offset = "0x186EBDC", VA = "0x186EBDC")]
	public AkInitSettings()
	{
	}
}
[Token(Token = "0x2000329")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700023D")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x186F03C", Offset = "0x186F03C", VA = "0x186F03C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x186EF44", Offset = "0x186EF44", VA = "0x186EF44")]
		set
		{
		}
	}

	[Token(Token = "0x1700023E")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x186F1BC", Offset = "0x186F1BC", VA = "0x186F1BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x186F12C", Offset = "0x186F12C", VA = "0x186F12C")]
		set
		{
		}
	}

	[Token(Token = "0x1700023F")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x186F2FC", Offset = "0x186F2FC", VA = "0x186F2FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x186F26C", Offset = "0x186F26C", VA = "0x186F26C")]
		set
		{
		}
	}

	[Token(Token = "0x17000240")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x186F454", Offset = "0x186F454", VA = "0x186F454")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x186F3AC", Offset = "0x186F3AC", VA = "0x186F3AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000241")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x186F5FC", Offset = "0x186F5FC", VA = "0x186F5FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x186F504", Offset = "0x186F504", VA = "0x186F504")]
		set
		{
		}
	}

	[Token(Token = "0x17000242")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x186F7E4", Offset = "0x186F7E4", VA = "0x186F7E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x186F6EC", Offset = "0x186F6EC", VA = "0x186F6EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000243")]
	public uint preparePoolSize
	{
		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x186F950", Offset = "0x186F950", VA = "0x186F950")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x186F8D4", Offset = "0x186F8D4", VA = "0x186F8D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000244")]
	public AkCommunicationSettings communicationSettings
	{
		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x186FA4C", Offset = "0x186FA4C", VA = "0x186FA4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x186F9BC", Offset = "0x186F9BC", VA = "0x186F9BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000245")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x186FB8C", Offset = "0x186FB8C", VA = "0x186FB8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x186FAFC", Offset = "0x186FAFC", VA = "0x186FAFC")]
		set
		{
		}
	}

	[Token(Token = "0x6001D74")]
	[Address(RVA = "0x186EC60", Offset = "0x186EC60", VA = "0x186EC60")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001D75")]
	[Address(RVA = "0x186ECA0", Offset = "0x186ECA0", VA = "0x186ECA0")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001D76")]
	[Address(RVA = "0x186ECF0", Offset = "0x186ECF0", VA = "0x186ECF0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001D77")]
	[Address(RVA = "0x186ED24", Offset = "0x186ED24", VA = "0x186ED24", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x6001D78")]
	[Address(RVA = "0x186ED94", Offset = "0x186ED94", VA = "0x186ED94", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001D79")]
	[Address(RVA = "0x186EEC0", Offset = "0x186EEC0", VA = "0x186EEC0")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x200032A")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000246")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x1870520", Offset = "0x1870520", VA = "0x1870520")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1870428", Offset = "0x1870428", VA = "0x1870428")]
		set
		{
		}
	}

	[Token(Token = "0x6001D8C")]
	[Address(RVA = "0x18701C8", Offset = "0x18701C8", VA = "0x18701C8")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001D8D")]
	[Address(RVA = "0x1870208", Offset = "0x1870208", VA = "0x1870208")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001D8E")]
	[Address(RVA = "0x1870258", Offset = "0x1870258", VA = "0x1870258", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001D8F")]
	[Address(RVA = "0x187028C", Offset = "0x187028C", VA = "0x187028C", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x6001D90")]
	[Address(RVA = "0x18702FC", Offset = "0x18702FC", VA = "0x18702FC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001D93")]
	[Address(RVA = "0x1870610", Offset = "0x1870610", VA = "0x1870610")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x6001D94")]
	[Address(RVA = "0x18706B0", Offset = "0x18706B0", VA = "0x18706B0")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x6001D95")]
	[Address(RVA = "0x1870750", Offset = "0x1870750", VA = "0x1870750")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x6001D96")]
	[Address(RVA = "0x18707F0", Offset = "0x18707F0", VA = "0x18707F0")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D97")]
	[Address(RVA = "0x1870898", Offset = "0x1870898", VA = "0x1870898")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D98")]
	[Address(RVA = "0x1870940", Offset = "0x1870940", VA = "0x1870940")]
	public AkIterator()
	{
	}
}
[Token(Token = "0x200032B")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x4001606")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x4001607")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x4001608")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x4001609")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x400160A")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x400160B")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x400160C")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x400160D")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x400160E")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x400160F")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x4001610")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x4001611")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x4001612")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x4001613")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x4001614")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x4001615")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x4001616")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x4001617")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x4001618")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x4001619")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x400161A")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x400161B")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x400161C")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x400161D")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x400161E")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x400161F")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x4001620")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x4001621")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x4001622")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x4001623")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x4001624")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x4001625")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x4001626")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x4001627")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x4001628")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x4001629")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x400162A")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x400162B")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x400162C")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x400162D")]
	VOLUME_FINE = 39,
	[Token(Token = "0x400162E")]
	BALANCE_FINE = 40,
	[Token(Token = "0x400162F")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x4001630")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x4001631")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x4001632")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x4001633")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x4001634")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x4001635")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x4001636")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x4001637")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x4001638")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x4001639")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x400163A")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x400163B")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x400163C")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x400163D")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x400163E")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x400163F")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x4001640")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x4001641")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x4001642")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x4001643")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x4001644")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x4001645")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x4001646")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x4001647")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x4001648")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x4001649")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x400164A")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x400164B")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x400164C")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x400164D")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x400164E")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x400164F")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x4001650")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x4001651")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x4001652")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x4001653")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x4001654")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x4001655")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x4001656")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x4001657")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x4001658")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x4001659")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x400165A")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x400165B")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x400165C")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x400165D")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x400165E")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x400165F")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x4001660")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x4001661")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x4001662")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x4001663")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x4001664")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x4001665")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x4001666")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x200032C")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x2000544")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700040D")]
		public byte byParam1
		{
			[Token(Token = "0x6002718")]
			[Address(RVA = "0x1873864", Offset = "0x1873864", VA = "0x1873864")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002717")]
			[Address(RVA = "0x18737E8", Offset = "0x18737E8", VA = "0x18737E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public byte byParam2
		{
			[Token(Token = "0x600271A")]
			[Address(RVA = "0x187394C", Offset = "0x187394C", VA = "0x187394C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002719")]
			[Address(RVA = "0x18738D0", Offset = "0x18738D0", VA = "0x18738D0")]
			set
			{
			}
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x187188C", Offset = "0x187188C", VA = "0x187188C")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x187178C", Offset = "0x187178C", VA = "0x187178C")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x1873618", Offset = "0x1873618", VA = "0x1873618", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x187364C", Offset = "0x187364C", VA = "0x187364C", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x18736BC", Offset = "0x18736BC", VA = "0x18736BC", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x18739B8", Offset = "0x18739B8", VA = "0x18739B8")]
		public tGen()
		{
		}
	}

	[Token(Token = "0x2000545")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700040F")]
		public byte byNote
		{
			[Token(Token = "0x6002722")]
			[Address(RVA = "0x18740AC", Offset = "0x18740AC", VA = "0x18740AC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002721")]
			[Address(RVA = "0x1874030", Offset = "0x1874030", VA = "0x1874030")]
			set
			{
			}
		}

		[Token(Token = "0x17000410")]
		public byte byVelocity
		{
			[Token(Token = "0x6002724")]
			[Address(RVA = "0x1874194", Offset = "0x1874194", VA = "0x1874194")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002723")]
			[Address(RVA = "0x1874118", Offset = "0x1874118", VA = "0x1874118")]
			set
			{
			}
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x1871C5C", Offset = "0x1871C5C", VA = "0x1871C5C")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x1871B5C", Offset = "0x1871B5C", VA = "0x1871B5C")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x1873E60", Offset = "0x1873E60", VA = "0x1873E60", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x1873E94", Offset = "0x1873E94", VA = "0x1873E94", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x1873F04", Offset = "0x1873F04", VA = "0x1873F04", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x1874200", Offset = "0x1874200", VA = "0x1874200")]
		public tNoteOnOff()
		{
		}
	}

	[Token(Token = "0x2000546")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000411")]
		public byte byCc
		{
			[Token(Token = "0x600272C")]
			[Address(RVA = "0x1873104", Offset = "0x1873104", VA = "0x1873104")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600272B")]
			[Address(RVA = "0x1873088", Offset = "0x1873088", VA = "0x1873088")]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public byte byValue
		{
			[Token(Token = "0x600272E")]
			[Address(RVA = "0x18731EC", Offset = "0x18731EC", VA = "0x18731EC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600272D")]
			[Address(RVA = "0x1873170", Offset = "0x1873170", VA = "0x1873170")]
			set
			{
			}
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x1871A74", Offset = "0x1871A74", VA = "0x1871A74")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x1871974", Offset = "0x1871974", VA = "0x1871974")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x1872EB8", Offset = "0x1872EB8", VA = "0x1872EB8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x1872EEC", Offset = "0x1872EEC", VA = "0x1872EEC", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x1872F5C", Offset = "0x1872F5C", VA = "0x1872F5C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x1873258", Offset = "0x1873258", VA = "0x1873258")]
		public tCc()
		{
		}
	}

	[Token(Token = "0x2000547")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000413")]
		public byte byValueLsb
		{
			[Token(Token = "0x6002736")]
			[Address(RVA = "0x18744D0", Offset = "0x18744D0", VA = "0x18744D0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002735")]
			[Address(RVA = "0x1874454", Offset = "0x1874454", VA = "0x1874454")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public byte byValueMsb
		{
			[Token(Token = "0x6002738")]
			[Address(RVA = "0x18745B8", Offset = "0x18745B8", VA = "0x18745B8")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002737")]
			[Address(RVA = "0x187453C", Offset = "0x187453C", VA = "0x187453C")]
			set
			{
			}
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x1871E44", Offset = "0x1871E44", VA = "0x1871E44")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x1871D44", Offset = "0x1871D44", VA = "0x1871D44")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x1874284", Offset = "0x1874284", VA = "0x1874284", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x18742B8", Offset = "0x18742B8", VA = "0x18742B8", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x1874328", Offset = "0x1874328", VA = "0x1874328", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x1874624", Offset = "0x1874624", VA = "0x1874624")]
		public tPitchBend()
		{
		}
	}

	[Token(Token = "0x2000548")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000415")]
		public byte byNote
		{
			[Token(Token = "0x6002740")]
			[Address(RVA = "0x1873C88", Offset = "0x1873C88", VA = "0x1873C88")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600273F")]
			[Address(RVA = "0x1873C0C", Offset = "0x1873C0C", VA = "0x1873C0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public byte byValue
		{
			[Token(Token = "0x6002742")]
			[Address(RVA = "0x1873D70", Offset = "0x1873D70", VA = "0x1873D70")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002741")]
			[Address(RVA = "0x1873CF4", Offset = "0x1873CF4", VA = "0x1873CF4")]
			set
			{
			}
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x187202C", Offset = "0x187202C", VA = "0x187202C")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x1871F2C", Offset = "0x1871F2C", VA = "0x1871F2C")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x1873A3C", Offset = "0x1873A3C", VA = "0x1873A3C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x1873A70", Offset = "0x1873A70", VA = "0x1873A70", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x1873AE0", Offset = "0x1873AE0", VA = "0x1873AE0", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x1873DDC", Offset = "0x1873DDC", VA = "0x1873DDC")]
		public tNoteAftertouch()
		{
		}
	}

	[Token(Token = "0x2000549")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000417")]
		public byte byValue
		{
			[Token(Token = "0x600274A")]
			[Address(RVA = "0x1873528", Offset = "0x1873528", VA = "0x1873528")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002749")]
			[Address(RVA = "0x18734AC", Offset = "0x18734AC", VA = "0x18734AC")]
			set
			{
			}
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x1872214", Offset = "0x1872214", VA = "0x1872214")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x1872114", Offset = "0x1872114", VA = "0x1872114")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x18732DC", Offset = "0x18732DC", VA = "0x18732DC", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x1873310", Offset = "0x1873310", VA = "0x1873310", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x1873380", Offset = "0x1873380", VA = "0x1873380", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x1873594", Offset = "0x1873594", VA = "0x1873594")]
		public tChanAftertouch()
		{
		}
	}

	[Token(Token = "0x200054A")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000418")]
		public byte byProgramNum
		{
			[Token(Token = "0x6002752")]
			[Address(RVA = "0x18748F4", Offset = "0x18748F4", VA = "0x18748F4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002751")]
			[Address(RVA = "0x1874878", Offset = "0x1874878", VA = "0x1874878")]
			set
			{
			}
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x18723FC", Offset = "0x18723FC", VA = "0x18723FC")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x18722FC", Offset = "0x18722FC", VA = "0x18722FC")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x18746A8", Offset = "0x18746A8", VA = "0x18746A8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x18746DC", Offset = "0x18746DC", VA = "0x18746DC", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x187474C", Offset = "0x187474C", VA = "0x187474C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x1874960", Offset = "0x1874960", VA = "0x1874960")]
		public tProgramChange()
		{
		}
	}

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000247")]
	public byte byChan
	{
		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x1871678", Offset = "0x1871678", VA = "0x1871678")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x18715FC", Offset = "0x18715FC", VA = "0x18715FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000248")]
	public tGen Gen
	{
		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x18717DC", Offset = "0x18717DC", VA = "0x18717DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x18716E4", Offset = "0x18716E4", VA = "0x18716E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000249")]
	public tCc Cc
	{
		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x18719C4", Offset = "0x18719C4", VA = "0x18719C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x18718CC", Offset = "0x18718CC", VA = "0x18718CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700024A")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x1871BAC", Offset = "0x1871BAC", VA = "0x1871BAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x1871AB4", Offset = "0x1871AB4", VA = "0x1871AB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700024B")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x1871D94", Offset = "0x1871D94", VA = "0x1871D94")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x1871C9C", Offset = "0x1871C9C", VA = "0x1871C9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700024C")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x1871F7C", Offset = "0x1871F7C", VA = "0x1871F7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x1871E84", Offset = "0x1871E84", VA = "0x1871E84")]
		set
		{
		}
	}

	[Token(Token = "0x1700024D")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x1872164", Offset = "0x1872164", VA = "0x1872164")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x187206C", Offset = "0x187206C", VA = "0x187206C")]
		set
		{
		}
	}

	[Token(Token = "0x1700024E")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x187234C", Offset = "0x187234C", VA = "0x187234C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x1872254", Offset = "0x1872254", VA = "0x1872254")]
		set
		{
		}
	}

	[Token(Token = "0x1700024F")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x18724B8", Offset = "0x18724B8", VA = "0x18724B8")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x187243C", Offset = "0x187243C", VA = "0x187243C")]
		set
		{
		}
	}

	[Token(Token = "0x17000250")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x18725A0", Offset = "0x18725A0", VA = "0x18725A0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x1872524", Offset = "0x1872524", VA = "0x1872524")]
		set
		{
		}
	}

	[Token(Token = "0x17000251")]
	public byte byVelocity
	{
		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x1872688", Offset = "0x1872688", VA = "0x1872688")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x187260C", Offset = "0x187260C", VA = "0x187260C")]
		set
		{
		}
	}

	[Token(Token = "0x17000252")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x1872770", Offset = "0x1872770", VA = "0x1872770")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x18726F4", Offset = "0x18726F4", VA = "0x18726F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000253")]
	public byte byCcValue
	{
		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x1872858", Offset = "0x1872858", VA = "0x1872858")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x18727DC", Offset = "0x18727DC", VA = "0x18727DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000254")]
	public byte byValueLsb
	{
		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x1872940", Offset = "0x1872940", VA = "0x1872940")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x18728C4", Offset = "0x18728C4", VA = "0x18728C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000255")]
	public byte byValueMsb
	{
		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1872A28", Offset = "0x1872A28", VA = "0x1872A28")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x18729AC", Offset = "0x18729AC", VA = "0x18729AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000256")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x1872B10", Offset = "0x1872B10", VA = "0x1872B10")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x1872A94", Offset = "0x1872A94", VA = "0x1872A94")]
		set
		{
		}
	}

	[Token(Token = "0x17000257")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1872BF8", Offset = "0x1872BF8", VA = "0x1872BF8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x1872B7C", Offset = "0x1872B7C", VA = "0x1872B7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000258")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1872CE0", Offset = "0x1872CE0", VA = "0x1872CE0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x1872C64", Offset = "0x1872C64", VA = "0x1872C64")]
		set
		{
		}
	}

	[Token(Token = "0x17000259")]
	public byte byProgramNum
	{
		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1872DC8", Offset = "0x1872DC8", VA = "0x1872DC8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x1872D4C", Offset = "0x1872D4C", VA = "0x1872D4C")]
		set
		{
		}
	}

	[Token(Token = "0x6001D99")]
	[Address(RVA = "0x187139C", Offset = "0x187139C", VA = "0x187139C")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001D9A")]
	[Address(RVA = "0x18713DC", Offset = "0x18713DC", VA = "0x18713DC")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001D9B")]
	[Address(RVA = "0x187142C", Offset = "0x187142C", VA = "0x187142C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001D9C")]
	[Address(RVA = "0x1871460", Offset = "0x1871460", VA = "0x1871460", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x6001D9D")]
	[Address(RVA = "0x18714D0", Offset = "0x18714D0", VA = "0x18714D0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001DC4")]
	[Address(RVA = "0x1872E34", Offset = "0x1872E34", VA = "0x1872E34")]
	public AkMIDIEvent()
	{
	}
}
[Token(Token = "0x200032D")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700025A")]
	public byte byChan
	{
		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x1874CFC", Offset = "0x1874CFC", VA = "0x1874CFC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700025B")]
	public byte byParam1
	{
		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1874D68", Offset = "0x1874D68", VA = "0x1874D68")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700025C")]
	public byte byParam2
	{
		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x1874DD4", Offset = "0x1874DD4", VA = "0x1874DD4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700025D")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x1874E40", Offset = "0x1874E40", VA = "0x1874E40")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x1700025E")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x1874EAC", Offset = "0x1874EAC", VA = "0x1874EAC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700025F")]
	public byte byVelocity
	{
		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x1874F18", Offset = "0x1874F18", VA = "0x1874F18")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000260")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1874F84", Offset = "0x1874F84", VA = "0x1874F84")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x17000261")]
	public byte byCcValue
	{
		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x1874FF0", Offset = "0x1874FF0", VA = "0x1874FF0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000262")]
	public byte byValueLsb
	{
		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x187505C", Offset = "0x187505C", VA = "0x187505C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000263")]
	public byte byValueMsb
	{
		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x18750C8", Offset = "0x18750C8", VA = "0x18750C8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000264")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x1875134", Offset = "0x1875134", VA = "0x1875134")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000265")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x18751A0", Offset = "0x18751A0", VA = "0x18751A0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000266")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x187520C", Offset = "0x187520C", VA = "0x187520C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000267")]
	public byte byProgramNum
	{
		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x1875278", Offset = "0x1875278", VA = "0x1875278")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6001DC5")]
	[Address(RVA = "0x18749E4", Offset = "0x18749E4", VA = "0x18749E4")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001DC6")]
	[Address(RVA = "0x1874A78", Offset = "0x1874A78", VA = "0x1874A78")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001DC7")]
	[Address(RVA = "0x1874AC8", Offset = "0x1874AC8", VA = "0x1874AC8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001DC8")]
	[Address(RVA = "0x1874B54", Offset = "0x1874B54", VA = "0x1874B54", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001DC9")]
	[Address(RVA = "0x1874BC4", Offset = "0x1874BC4", VA = "0x1874BC4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001DD8")]
	[Address(RVA = "0x18752E4", Offset = "0x18752E4", VA = "0x18752E4")]
	public AkMIDIEventCallbackInfo()
	{
	}
}
[Token(Token = "0x200032E")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x400166B")]
	NOTE_OFF = 128,
	[Token(Token = "0x400166C")]
	NOTE_ON = 144,
	[Token(Token = "0x400166D")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x400166E")]
	CONTROLLER = 176,
	[Token(Token = "0x400166F")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x4001670")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x4001671")]
	PITCH_BEND = 224,
	[Token(Token = "0x4001672")]
	SYSEX = 240,
	[Token(Token = "0x4001673")]
	ESCAPE = 247,
	[Token(Token = "0x4001674")]
	META = 255
}
[Token(Token = "0x200032F")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000268")]
	public uint uOffset
	{
		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x18756F0", Offset = "0x18756F0", VA = "0x18756F0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x1875674", Offset = "0x1875674", VA = "0x1875674")]
		set
		{
		}
	}

	[Token(Token = "0x6001DD9")]
	[Address(RVA = "0x1875358", Offset = "0x1875358", VA = "0x1875358")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001DDA")]
	[Address(RVA = "0x18753F4", Offset = "0x18753F4", VA = "0x18753F4")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001DDB")]
	[Address(RVA = "0x1875444", Offset = "0x1875444", VA = "0x1875444", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001DDC")]
	[Address(RVA = "0x18754D8", Offset = "0x18754D8", VA = "0x18754D8", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x6001DDD")]
	[Address(RVA = "0x1875540", Offset = "0x1875540", VA = "0x1875540", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001DE0")]
	[Address(RVA = "0x187575C", Offset = "0x187575C", VA = "0x187575C")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001DE1")]
	[Address(RVA = "0x1875918", Offset = "0x1875918", VA = "0x1875918")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x6001DE2")]
	[Address(RVA = "0x18759C0", Offset = "0x18759C0", VA = "0x18759C0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001DE3")]
	[Address(RVA = "0x1875A20", Offset = "0x1875A20", VA = "0x1875A20")]
	public AkMIDIPost()
	{
	}
}
[Token(Token = "0x2000330")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000269")]
	public uint uIdentifier
	{
		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x1876348", Offset = "0x1876348", VA = "0x1876348")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700026A")]
	public uint uPosition
	{
		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x18763B4", Offset = "0x18763B4", VA = "0x18763B4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700026B")]
	public string strLabel
	{
		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x1876420", Offset = "0x1876420", VA = "0x1876420")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001DE4")]
	[Address(RVA = "0x1876030", Offset = "0x1876030", VA = "0x1876030")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001DE5")]
	[Address(RVA = "0x18760C4", Offset = "0x18760C4", VA = "0x18760C4")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001DE6")]
	[Address(RVA = "0x1876114", Offset = "0x1876114", VA = "0x1876114", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001DE7")]
	[Address(RVA = "0x18761A0", Offset = "0x18761A0", VA = "0x18761A0", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x6001DE8")]
	[Address(RVA = "0x1876210", Offset = "0x1876210", VA = "0x1876210", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001DEC")]
	[Address(RVA = "0x1876524", Offset = "0x1876524", VA = "0x1876524")]
	public AkMarkerCallbackInfo()
	{
	}
}
[Token(Token = "0x2000331")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700026C")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x187720C", Offset = "0x187720C", VA = "0x187720C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x1877190", Offset = "0x1877190", VA = "0x1877190")]
		set
		{
		}
	}

	[Token(Token = "0x1700026D")]
	public uint uDebugFlags
	{
		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x18772F4", Offset = "0x18772F4", VA = "0x18772F4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x1877278", Offset = "0x1877278", VA = "0x1877278")]
		set
		{
		}
	}

	[Token(Token = "0x6001DED")]
	[Address(RVA = "0x186F0EC", Offset = "0x186F0EC", VA = "0x186F0EC")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001DEE")]
	[Address(RVA = "0x186EFEC", Offset = "0x186EFEC", VA = "0x186EFEC")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001DEF")]
	[Address(RVA = "0x1876F3C", Offset = "0x1876F3C", VA = "0x1876F3C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001DF0")]
	[Address(RVA = "0x1876F70", Offset = "0x1876F70", VA = "0x1876F70", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x6001DF1")]
	[Address(RVA = "0x1876FE0", Offset = "0x1876FE0", VA = "0x1876FE0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001DF2")]
	[Address(RVA = "0x187710C", Offset = "0x187710C", VA = "0x187710C")]
	public AkMemSettings()
	{
	}
}
[Token(Token = "0x2000332")]
public enum AkMeteringFlags
{
	[Token(Token = "0x400167A")]
	AK_NoMetering = 0,
	[Token(Token = "0x400167B")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x400167C")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x400167D")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x400167E")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x400167F")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x2000333")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x4001681")]
	ErrorCode_NoError,
	[Token(Token = "0x4001682")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x4001683")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x4001684")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x4001685")]
	ErrorCode_IODevice,
	[Token(Token = "0x4001686")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x4001687")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x4001688")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x4001689")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x400168A")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x400168B")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x400168C")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x400168D")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x400168E")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x400168F")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x4001690")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x4001691")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x4001692")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x4001693")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x4001694")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x4001695")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x4001696")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x4001697")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x4001698")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x4001699")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x400169A")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x400169B")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x400169C")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x400169D")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x400169E")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x400169F")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x40016A0")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x40016A1")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x40016A2")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x40016A3")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x40016A4")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x40016A5")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x40016A6")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x40016A7")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x40016A8")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x40016A9")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x40016AA")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x40016AB")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x40016AC")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x40016AD")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x40016AE")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x40016AF")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x40016B0")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x40016B1")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x40016B2")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x40016B3")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x40016B4")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x40016B5")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x40016B6")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x40016B7")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x40016B8")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x40016B9")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x40016BA")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x40016BB")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x40016BC")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x40016BD")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x40016BE")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x40016BF")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x40016C0")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x40016C1")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x40016C2")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x40016C3")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x40016C4")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x40016C5")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x40016C6")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x40016C7")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x40016C8")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x40016C9")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x40016CA")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x40016CB")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x40016CC")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x40016CD")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x40016CE")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x40016CF")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x40016D0")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x40016D1")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x40016D2")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x40016D3")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x40016D4")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x40016D5")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x40016D6")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x40016D7")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x40016D8")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x40016D9")]
	Num_ErrorCodes
}
[Token(Token = "0x2000334")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x40016DB")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x40016DC")]
	ErrorLevel_Error,
	[Token(Token = "0x40016DD")]
	ErrorLevel_All
}
[Token(Token = "0x2000335")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700026E")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x18775C0", Offset = "0x18775C0", VA = "0x18775C0")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x1700026F")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x187762C", Offset = "0x187762C", VA = "0x187762C")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x17000270")]
	public uint playingID
	{
		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x1877698", Offset = "0x1877698", VA = "0x1877698")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000271")]
	public ulong gameObjID
	{
		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x1877704", Offset = "0x1877704", VA = "0x1877704")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000272")]
	public string message
	{
		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x1877770", Offset = "0x1877770", VA = "0x1877770")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001DF7")]
	[Address(RVA = "0x1877360", Offset = "0x1877360", VA = "0x1877360")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001DF8")]
	[Address(RVA = "0x18773A0", Offset = "0x18773A0", VA = "0x18773A0")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001DF9")]
	[Address(RVA = "0x18773F0", Offset = "0x18773F0", VA = "0x18773F0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001DFA")]
	[Address(RVA = "0x1877424", Offset = "0x1877424", VA = "0x1877424", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x6001DFB")]
	[Address(RVA = "0x1877494", Offset = "0x1877494", VA = "0x1877494", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001E01")]
	[Address(RVA = "0x187780C", Offset = "0x187780C", VA = "0x187780C")]
	public AkMonitoringCallbackInfo()
	{
	}
}
[Token(Token = "0x2000336")]
public enum AkMultiPositionType
{
	[Token(Token = "0x40016E1")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x40016E2")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x40016E3")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x2000337")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000273")]
	public uint playlistID
	{
		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x1877C2C", Offset = "0x1877C2C", VA = "0x1877C2C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000274")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x1877C98", Offset = "0x1877C98", VA = "0x1877C98")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000275")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x1877D04", Offset = "0x1877D04", VA = "0x1877D04")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000276")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x1877D70", Offset = "0x1877D70", VA = "0x1877D70")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6001E02")]
	[Address(RVA = "0x1877914", Offset = "0x1877914", VA = "0x1877914")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E03")]
	[Address(RVA = "0x18779A8", Offset = "0x18779A8", VA = "0x18779A8")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E04")]
	[Address(RVA = "0x18779F8", Offset = "0x18779F8", VA = "0x18779F8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E05")]
	[Address(RVA = "0x1877A84", Offset = "0x1877A84", VA = "0x1877A84", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x6001E06")]
	[Address(RVA = "0x1877AF4", Offset = "0x1877AF4", VA = "0x1877AF4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001E0B")]
	[Address(RVA = "0x1877DDC", Offset = "0x1877DDC", VA = "0x1877DDC")]
	public AkMusicPlaylistCallbackInfo()
	{
	}
}
[Token(Token = "0x2000338")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000277")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x187809C", Offset = "0x187809C", VA = "0x187809C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x1878020", Offset = "0x1878020", VA = "0x1878020")]
		set
		{
		}
	}

	[Token(Token = "0x6001E0C")]
	[Address(RVA = "0x186F894", Offset = "0x186F894", VA = "0x186F894")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E0D")]
	[Address(RVA = "0x186F794", Offset = "0x186F794", VA = "0x186F794")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E0E")]
	[Address(RVA = "0x1877E50", Offset = "0x1877E50", VA = "0x1877E50", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E0F")]
	[Address(RVA = "0x1877E84", Offset = "0x1877E84", VA = "0x1877E84", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x6001E10")]
	[Address(RVA = "0x1877EF4", Offset = "0x1877EF4", VA = "0x1877EF4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001E13")]
	[Address(RVA = "0x1878108", Offset = "0x1878108", VA = "0x1878108")]
	public AkMusicSettings()
	{
	}
}
[Token(Token = "0x2000339")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000278")]
	public uint playingID
	{
		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x18784A4", Offset = "0x18784A4", VA = "0x18784A4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000279")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x1878510", Offset = "0x1878510", VA = "0x1878510")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700027A")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x187857C", Offset = "0x187857C", VA = "0x187857C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700027B")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x18785E8", Offset = "0x18785E8", VA = "0x18785E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700027C")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x1878654", Offset = "0x1878654", VA = "0x1878654")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700027D")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x18786C0", Offset = "0x18786C0", VA = "0x18786C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700027E")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x187872C", Offset = "0x187872C", VA = "0x187872C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700027F")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x1878798", Offset = "0x1878798", VA = "0x1878798")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000280")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x1878804", Offset = "0x1878804", VA = "0x1878804")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000281")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x1878870", Offset = "0x1878870", VA = "0x1878870")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000282")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x18788DC", Offset = "0x18788DC", VA = "0x18788DC")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x17000283")]
	public string userCueName
	{
		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x1878948", Offset = "0x1878948", VA = "0x1878948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001E14")]
	[Address(RVA = "0x187818C", Offset = "0x187818C", VA = "0x187818C")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E15")]
	[Address(RVA = "0x1878220", Offset = "0x1878220", VA = "0x1878220")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E16")]
	[Address(RVA = "0x1878270", Offset = "0x1878270", VA = "0x1878270", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E17")]
	[Address(RVA = "0x18782FC", Offset = "0x18782FC", VA = "0x18782FC", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x6001E18")]
	[Address(RVA = "0x187836C", Offset = "0x187836C", VA = "0x187836C", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001E25")]
	[Address(RVA = "0x18789E4", Offset = "0x18789E4", VA = "0x18789E4")]
	public AkMusicSyncCallbackInfo()
	{
	}
}
[Token(Token = "0x200033A")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40016E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000284")]
	public uint objID
	{
		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x1878D34", Offset = "0x1878D34", VA = "0x1878D34")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x1878CB8", Offset = "0x1878CB8", VA = "0x1878CB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000285")]
	public uint parentID
	{
		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x1878E1C", Offset = "0x1878E1C", VA = "0x1878E1C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x1878DA0", Offset = "0x1878DA0", VA = "0x1878DA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000286")]
	public int iDepth
	{
		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x1878F04", Offset = "0x1878F04", VA = "0x1878F04")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x1878E88", Offset = "0x1878E88", VA = "0x1878E88")]
		set
		{
		}
	}

	[Token(Token = "0x6001E26")]
	[Address(RVA = "0x1878A58", Offset = "0x1878A58", VA = "0x1878A58")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E27")]
	[Address(RVA = "0x1878A98", Offset = "0x1878A98", VA = "0x1878A98")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E28")]
	[Address(RVA = "0x1878AE8", Offset = "0x1878AE8", VA = "0x1878AE8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E29")]
	[Address(RVA = "0x1878B1C", Offset = "0x1878B1C", VA = "0x1878B1C", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x6001E2A")]
	[Address(RVA = "0x1878B8C", Offset = "0x1878B8C", VA = "0x1878B8C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001E31")]
	[Address(RVA = "0x1878F70", Offset = "0x1878F70", VA = "0x1878F70")]
	public AkObjectInfo()
	{
	}
}
[Token(Token = "0x200033B")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000287")]
	public float occlusion
	{
		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x1879E28", Offset = "0x1879E28", VA = "0x1879E28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x1879DAC", Offset = "0x1879DAC", VA = "0x1879DAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000288")]
	public float obstruction
	{
		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x1879F10", Offset = "0x1879F10", VA = "0x1879F10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x1879E94", Offset = "0x1879E94", VA = "0x1879E94")]
		set
		{
		}
	}

	[Token(Token = "0x6001E32")]
	[Address(RVA = "0x1879B4C", Offset = "0x1879B4C", VA = "0x1879B4C")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E33")]
	[Address(RVA = "0x1879B8C", Offset = "0x1879B8C", VA = "0x1879B8C")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E34")]
	[Address(RVA = "0x1879BDC", Offset = "0x1879BDC", VA = "0x1879BDC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E35")]
	[Address(RVA = "0x1879C10", Offset = "0x1879C10", VA = "0x1879C10", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6001E36")]
	[Address(RVA = "0x1879C80", Offset = "0x1879C80", VA = "0x1879C80", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001E3B")]
	[Address(RVA = "0x1879F7C", Offset = "0x1879F7C", VA = "0x1879F7C")]
	public AkObstructionOcclusionValues()
	{
	}
}
[Token(Token = "0x200033C")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000289")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x187A588", Offset = "0x187A588", VA = "0x187A588")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x187A50C", Offset = "0x187A50C", VA = "0x187A50C")]
		set
		{
		}
	}

	[Token(Token = "0x1700028A")]
	public uint idDevice
	{
		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x187A670", Offset = "0x187A670", VA = "0x187A670")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x187A5F4", Offset = "0x187A5F4", VA = "0x187A5F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700028B")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x187A758", Offset = "0x187A758", VA = "0x187A758")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x187A6DC", Offset = "0x187A6DC", VA = "0x187A6DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700028C")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x187A854", Offset = "0x187A854", VA = "0x187A854")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x187A7C4", Offset = "0x187A7C4", VA = "0x187A7C4")]
		set
		{
		}
	}

	[Token(Token = "0x6001E3C")]
	[Address(RVA = "0x186E680", Offset = "0x186E680", VA = "0x186E680")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E3D")]
	[Address(RVA = "0x186E580", Offset = "0x186E580", VA = "0x186E580")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E3E")]
	[Address(RVA = "0x187A000", Offset = "0x187A000", VA = "0x187A000", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E3F")]
	[Address(RVA = "0x187A034", Offset = "0x187A034", VA = "0x187A034", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x6001E40")]
	[Address(RVA = "0x187A0A4", Offset = "0x187A0A4", VA = "0x187A0A4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001E41")]
	[Address(RVA = "0x187A1D0", Offset = "0x187A1D0", VA = "0x187A1D0")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x6001E42")]
	[Address(RVA = "0x187A254", Offset = "0x187A254", VA = "0x187A254")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x6001E43")]
	[Address(RVA = "0x187A31C", Offset = "0x187A31C", VA = "0x187A31C")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x6001E44")]
	[Address(RVA = "0x187A3DC", Offset = "0x187A3DC", VA = "0x187A3DC")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x6001E45")]
	[Address(RVA = "0x187A478", Offset = "0x187A478", VA = "0x187A478")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}
}
[Token(Token = "0x200033D")]
public enum AkPanningRule
{
	[Token(Token = "0x40016EF")]
	AkPanningRule_Speakers,
	[Token(Token = "0x40016F0")]
	AkPanningRule_Headphones
}
[Token(Token = "0x200033E")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700028D")]
	public AkVector listenerPos
	{
		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x187ABF4", Offset = "0x187ABF4", VA = "0x187ABF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x187AB64", Offset = "0x187AB64", VA = "0x187AB64")]
		set
		{
		}
	}

	[Token(Token = "0x1700028E")]
	public AkVector emitterPos
	{
		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x187AD34", Offset = "0x187AD34", VA = "0x187AD34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x187ACA4", Offset = "0x187ACA4", VA = "0x187ACA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700028F")]
	public uint numValidPaths
	{
		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x187AE60", Offset = "0x187AE60", VA = "0x187AE60")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x187ADE4", Offset = "0x187ADE4", VA = "0x187ADE4")]
		set
		{
		}
	}

	[Token(Token = "0x6001E4E")]
	[Address(RVA = "0x187A904", Offset = "0x187A904", VA = "0x187A904")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E4F")]
	[Address(RVA = "0x187A944", Offset = "0x187A944", VA = "0x187A944")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E50")]
	[Address(RVA = "0x187A994", Offset = "0x187A994", VA = "0x187A994", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E51")]
	[Address(RVA = "0x187A9C8", Offset = "0x187A9C8", VA = "0x187A9C8", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x6001E52")]
	[Address(RVA = "0x187AA38", Offset = "0x187AA38", VA = "0x187AA38", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001E59")]
	[Address(RVA = "0x187AECC", Offset = "0x187AECC", VA = "0x187AECC")]
	public AkPathParams()
	{
	}
}
[Token(Token = "0x200033F")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6001E5A")]
	[Address(RVA = "0x187BC14", Offset = "0x187BC14", VA = "0x187BC14")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E5B")]
	[Address(RVA = "0x187BCF0", Offset = "0x187BCF0", VA = "0x187BCF0")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E5C")]
	[Address(RVA = "0x187BD40", Offset = "0x187BD40", VA = "0x187BD40", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E5D")]
	[Address(RVA = "0x187BE08", Offset = "0x187BE08", VA = "0x187BE08", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x6001E5E")]
	[Address(RVA = "0x187BEE0", Offset = "0x187BEE0", VA = "0x187BEE0", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001E5F")]
	[Address(RVA = "0x187C140", Offset = "0x187C140", VA = "0x187C140")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E60")]
	[Address(RVA = "0x187C200", Offset = "0x187C200", VA = "0x187C200")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E61")]
	[Address(RVA = "0x187C29C", Offset = "0x187C29C", VA = "0x187C29C")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E62")]
	[Address(RVA = "0x187C330", Offset = "0x187C330", VA = "0x187C330")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E63")]
	[Address(RVA = "0x187C3B4", Offset = "0x187C3B4", VA = "0x187C3B4")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E64")]
	[Address(RVA = "0x187C430", Offset = "0x187C430", VA = "0x187C430")]
	public AkPlaylist()
	{
	}
}
[Token(Token = "0x2000340")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001E65")]
	[Address(RVA = "0x187BCB0", Offset = "0x187BCB0", VA = "0x187BCB0")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E66")]
	[Address(RVA = "0x187C4A4", Offset = "0x187C4A4", VA = "0x187C4A4")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E67")]
	[Address(RVA = "0x187BDD4", Offset = "0x187BDD4", VA = "0x187BDD4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E68")]
	[Address(RVA = "0x187BE70", Offset = "0x187BE70", VA = "0x187BE70", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x6001E69")]
	[Address(RVA = "0x187C014", Offset = "0x187C014", VA = "0x187C014", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001E6A")]
	[Address(RVA = "0x187C4F4", Offset = "0x187C4F4", VA = "0x187C4F4")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x6001E6B")]
	[Address(RVA = "0x187C578", Offset = "0x187C578", VA = "0x187C578")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x6001E6C")]
	[Address(RVA = "0x187C61C", Offset = "0x187C61C", VA = "0x187C61C")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x6001E6D")]
	[Address(RVA = "0x187C6C0", Offset = "0x187C6C0", VA = "0x187C6C0")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6001E6E")]
	[Address(RVA = "0x187C7A0", Offset = "0x187C7A0", VA = "0x187C7A0")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6001E6F")]
	[Address(RVA = "0x187C880", Offset = "0x187C880", VA = "0x187C880")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x6001E70")]
	[Address(RVA = "0x187C8FC", Offset = "0x187C8FC", VA = "0x187C8FC")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6001E71")]
	[Address(RVA = "0x187C9DC", Offset = "0x187C9DC", VA = "0x187C9DC")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E72")]
	[Address(RVA = "0x187CA58", Offset = "0x187CA58", VA = "0x187CA58")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x6001E73")]
	[Address(RVA = "0x187CAC4", Offset = "0x187CAC4", VA = "0x187CAC4")]
	public void Term()
	{
	}

	[Token(Token = "0x6001E74")]
	[Address(RVA = "0x187CB30", Offset = "0x187CB30", VA = "0x187CB30")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x6001E75")]
	[Address(RVA = "0x187CB9C", Offset = "0x187CB9C", VA = "0x187CB9C")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x6001E76")]
	[Address(RVA = "0x187CC4C", Offset = "0x187CC4C", VA = "0x187CC4C")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E77")]
	[Address(RVA = "0x187CCB8", Offset = "0x187CCB8", VA = "0x187CCB8")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6001E78")]
	[Address(RVA = "0x187CDA4", Offset = "0x187CDA4", VA = "0x187CDA4")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x6001E79")]
	[Address(RVA = "0x187CE54", Offset = "0x187CE54", VA = "0x187CE54")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x6001E7A")]
	[Address(RVA = "0x187CF40", Offset = "0x187CF40", VA = "0x187CF40")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x6001E7B")]
	[Address(RVA = "0x187CFE0", Offset = "0x187CFE0", VA = "0x187CFE0")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x6001E7C")]
	[Address(RVA = "0x187D04C", Offset = "0x187D04C", VA = "0x187D04C")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E7D")]
	[Address(RVA = "0x187D0F4", Offset = "0x187D0F4", VA = "0x187D0F4")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E7E")]
	[Address(RVA = "0x187D19C", Offset = "0x187D19C", VA = "0x187D19C")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6001E7F")]
	[Address(RVA = "0x187D208", Offset = "0x187D208", VA = "0x187D208")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x6001E80")]
	[Address(RVA = "0x187D2B8", Offset = "0x187D2B8", VA = "0x187D2B8")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x6001E81")]
	[Address(RVA = "0x187D378", Offset = "0x187D378", VA = "0x187D378")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E82")]
	[Address(RVA = "0x187D3F4", Offset = "0x187D3F4", VA = "0x187D3F4")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E83")]
	[Address(RVA = "0x187D460", Offset = "0x187D460", VA = "0x187D460")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E84")]
	[Address(RVA = "0x187D4DC", Offset = "0x187D4DC", VA = "0x187D4DC")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x6001E85")]
	[Address(RVA = "0x187D584", Offset = "0x187D584", VA = "0x187D584")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000341")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000290")]
	public uint audioNodeID
	{
		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x187DBD8", Offset = "0x187DBD8", VA = "0x187DBD8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x187DB5C", Offset = "0x187DB5C", VA = "0x187DB5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000291")]
	public int msDelay
	{
		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x187DCC0", Offset = "0x187DCC0", VA = "0x187DCC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x187DC44", Offset = "0x187DC44", VA = "0x187DC44")]
		set
		{
		}
	}

	[Token(Token = "0x17000292")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x187DDA8", Offset = "0x187DDA8", VA = "0x187DDA8")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x187DD2C", Offset = "0x187DD2C", VA = "0x187DD2C")]
		set
		{
		}
	}

	[Token(Token = "0x6001E86")]
	[Address(RVA = "0x18705D0", Offset = "0x18705D0", VA = "0x18705D0")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E87")]
	[Address(RVA = "0x18704D0", Offset = "0x18704D0", VA = "0x18704D0")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E88")]
	[Address(RVA = "0x187D62C", Offset = "0x187D62C", VA = "0x187D62C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E89")]
	[Address(RVA = "0x187D660", Offset = "0x187D660", VA = "0x187D660", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x6001E8A")]
	[Address(RVA = "0x187D6D0", Offset = "0x187D6D0", VA = "0x187D6D0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001E8B")]
	[Address(RVA = "0x187D7FC", Offset = "0x187D7FC", VA = "0x187D7FC")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x6001E8C")]
	[Address(RVA = "0x187D880", Offset = "0x187D880", VA = "0x187D880")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x6001E8D")]
	[Address(RVA = "0x187D940", Offset = "0x187D940", VA = "0x187D940")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x6001E8E")]
	[Address(RVA = "0x187DA1C", Offset = "0x187DA1C", VA = "0x187DA1C")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E8F")]
	[Address(RVA = "0x187DAC4", Offset = "0x187DAC4", VA = "0x187DAC4")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfo in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000342")]
public enum AkPluginType
{
	[Token(Token = "0x40016F9")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x40016FA")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x40016FB")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x40016FC")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x40016FD")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x40016FE")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x40016FF")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x4001700")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x2000343")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000293")]
	public float fCenterPct
	{
		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x187E650", Offset = "0x187E650", VA = "0x187E650")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x187E5D4", Offset = "0x187E5D4", VA = "0x187E5D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000294")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x187E738", Offset = "0x187E738", VA = "0x187E738")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x187E6BC", Offset = "0x187E6BC", VA = "0x187E6BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000295")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x187E820", Offset = "0x187E820", VA = "0x187E820")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x187E7A4", Offset = "0x187E7A4", VA = "0x187E7A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000296")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x187E908", Offset = "0x187E908", VA = "0x187E908")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x187E88C", Offset = "0x187E88C", VA = "0x187E88C")]
		set
		{
		}
	}

	[Token(Token = "0x17000297")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x187E9F0", Offset = "0x187E9F0", VA = "0x187E9F0")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x187E974", Offset = "0x187E974", VA = "0x187E974")]
		set
		{
		}
	}

	[Token(Token = "0x17000298")]
	public bool bUseAttenuation
	{
		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x187EAD8", Offset = "0x187EAD8", VA = "0x187EAD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x187EA5C", Offset = "0x187EA5C", VA = "0x187EA5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000299")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x187EBC0", Offset = "0x187EBC0", VA = "0x187EBC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x187EB44", Offset = "0x187EB44", VA = "0x187EB44")]
		set
		{
		}
	}

	[Token(Token = "0x1700029A")]
	public float fInnerAngle
	{
		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x187ECA8", Offset = "0x187ECA8", VA = "0x187ECA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x187EC2C", Offset = "0x187EC2C", VA = "0x187EC2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700029B")]
	public float fOuterAngle
	{
		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x187ED90", Offset = "0x187ED90", VA = "0x187ED90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x187ED14", Offset = "0x187ED14", VA = "0x187ED14")]
		set
		{
		}
	}

	[Token(Token = "0x1700029C")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x187EE78", Offset = "0x187EE78", VA = "0x187EE78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x187EDFC", Offset = "0x187EDFC", VA = "0x187EDFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700029D")]
	public float LPFCone
	{
		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x187EF60", Offset = "0x187EF60", VA = "0x187EF60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x187EEE4", Offset = "0x187EEE4", VA = "0x187EEE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700029E")]
	public float HPFCone
	{
		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x187F048", Offset = "0x187F048", VA = "0x187F048")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x187EFCC", Offset = "0x187EFCC", VA = "0x187EFCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700029F")]
	public float fMaxDistance
	{
		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x187F130", Offset = "0x187F130", VA = "0x187F130")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x187F0B4", Offset = "0x187F0B4", VA = "0x187F0B4")]
		set
		{
		}
	}

	[Token(Token = "0x170002A0")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x187F218", Offset = "0x187F218", VA = "0x187F218")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x187F19C", Offset = "0x187F19C", VA = "0x187F19C")]
		set
		{
		}
	}

	[Token(Token = "0x170002A1")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x187F300", Offset = "0x187F300", VA = "0x187F300")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x187F284", Offset = "0x187F284", VA = "0x187F284")]
		set
		{
		}
	}

	[Token(Token = "0x170002A2")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x187F3E8", Offset = "0x187F3E8", VA = "0x187F3E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x187F36C", Offset = "0x187F36C", VA = "0x187F36C")]
		set
		{
		}
	}

	[Token(Token = "0x170002A3")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x187F4D0", Offset = "0x187F4D0", VA = "0x187F4D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x187F454", Offset = "0x187F454", VA = "0x187F454")]
		set
		{
		}
	}

	[Token(Token = "0x170002A4")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x187F5B8", Offset = "0x187F5B8", VA = "0x187F5B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x187F53C", Offset = "0x187F53C", VA = "0x187F53C")]
		set
		{
		}
	}

	[Token(Token = "0x6001E96")]
	[Address(RVA = "0x187E374", Offset = "0x187E374", VA = "0x187E374")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E97")]
	[Address(RVA = "0x187E3B4", Offset = "0x187E3B4", VA = "0x187E3B4")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E98")]
	[Address(RVA = "0x187E404", Offset = "0x187E404", VA = "0x187E404", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E99")]
	[Address(RVA = "0x187E438", Offset = "0x187E438", VA = "0x187E438", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x6001E9A")]
	[Address(RVA = "0x187E4A8", Offset = "0x187E4A8", VA = "0x187E4A8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001EBF")]
	[Address(RVA = "0x187F624", Offset = "0x187F624", VA = "0x187F624")]
	public AkPositioningInfo()
	{
	}
}
[Token(Token = "0x2000344")]
public enum AkPreparationType
{
	[Token(Token = "0x4001704")]
	Preparation_Load,
	[Token(Token = "0x4001705")]
	Preparation_Unload,
	[Token(Token = "0x4001706")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x2000345")]
public class AkPropagationPathInfo : IDisposable
{
	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x4001709")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x170002A5")]
	public AkVector nodePoint
	{
		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x187F998", Offset = "0x187F998", VA = "0x187F998")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x187F908", Offset = "0x187F908", VA = "0x187F908")]
		set
		{
		}
	}

	[Token(Token = "0x170002A6")]
	public uint numNodes
	{
		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x187FAC4", Offset = "0x187FAC4", VA = "0x187FAC4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x187FA48", Offset = "0x187FA48", VA = "0x187FA48")]
		set
		{
		}
	}

	[Token(Token = "0x170002A7")]
	public float length
	{
		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x187FBAC", Offset = "0x187FBAC", VA = "0x187FBAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x187FB30", Offset = "0x187FB30", VA = "0x187FB30")]
		set
		{
		}
	}

	[Token(Token = "0x170002A8")]
	public float gain
	{
		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x187FC94", Offset = "0x187FC94", VA = "0x187FC94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x187FC18", Offset = "0x187FC18", VA = "0x187FC18")]
		set
		{
		}
	}

	[Token(Token = "0x170002A9")]
	public float dryDiffraction
	{
		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x187FD7C", Offset = "0x187FD7C", VA = "0x187FD7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x187FD00", Offset = "0x187FD00", VA = "0x187FD00")]
		set
		{
		}
	}

	[Token(Token = "0x170002AA")]
	public float wetDiffraction
	{
		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x187FE64", Offset = "0x187FE64", VA = "0x187FE64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x187FDE8", Offset = "0x187FDE8", VA = "0x187FDE8")]
		set
		{
		}
	}

	[Token(Token = "0x6001EC0")]
	[Address(RVA = "0x187F6A8", Offset = "0x187F6A8", VA = "0x187F6A8")]
	internal AkPropagationPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001EC1")]
	[Address(RVA = "0x187F6E8", Offset = "0x187F6E8", VA = "0x187F6E8")]
	internal static IntPtr getCPtr(AkPropagationPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001EC2")]
	[Address(RVA = "0x187F738", Offset = "0x187F738", VA = "0x187F738", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001EC3")]
	[Address(RVA = "0x187F76C", Offset = "0x187F76C", VA = "0x187F76C", Slot = "1")]
	~AkPropagationPathInfo()
	{
	}

	[Token(Token = "0x6001EC4")]
	[Address(RVA = "0x187F7DC", Offset = "0x187F7DC", VA = "0x187F7DC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001ED1")]
	[Address(RVA = "0x187FED0", Offset = "0x187FED0", VA = "0x187FED0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001ED2")]
	[Address(RVA = "0x187FF30", Offset = "0x187FF30", VA = "0x187FF30")]
	public AkVector GetNodePoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001ED3")]
	[Address(RVA = "0x187FFF0", Offset = "0x187FFF0", VA = "0x187FFF0")]
	public void Clone(AkPropagationPathInfo other)
	{
	}

	[Token(Token = "0x6001ED4")]
	[Address(RVA = "0x1880098", Offset = "0x1880098", VA = "0x1880098")]
	public AkPropagationPathInfo()
	{
	}
}
[Token(Token = "0x2000346")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x400170B")]
	RTPCValue_Default,
	[Token(Token = "0x400170C")]
	RTPCValue_Global,
	[Token(Token = "0x400170D")]
	RTPCValue_GameObject,
	[Token(Token = "0x400170E")]
	RTPCValue_PlayingID,
	[Token(Token = "0x400170F")]
	RTPCValue_Unavailable
}
[Token(Token = "0x2000347")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x4001710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002AB")]
	public float fPrev
	{
		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x18811BC", Offset = "0x18811BC", VA = "0x18811BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x1881140", Offset = "0x1881140", VA = "0x1881140")]
		set
		{
		}
	}

	[Token(Token = "0x170002AC")]
	public float fNext
	{
		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x18812A4", Offset = "0x18812A4", VA = "0x18812A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x1881228", Offset = "0x1881228", VA = "0x1881228")]
		set
		{
		}
	}

	[Token(Token = "0x6001ED5")]
	[Address(RVA = "0x1880DC0", Offset = "0x1880DC0", VA = "0x1880DC0")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001ED6")]
	[Address(RVA = "0x1880E00", Offset = "0x1880E00", VA = "0x1880E00")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001ED7")]
	[Address(RVA = "0x1880E50", Offset = "0x1880E50", VA = "0x1880E50", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001ED8")]
	[Address(RVA = "0x1880E84", Offset = "0x1880E84", VA = "0x1880E84", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x6001ED9")]
	[Address(RVA = "0x1880EF4", Offset = "0x1880EF4", VA = "0x1880EF4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001EDA")]
	[Address(RVA = "0x1881020", Offset = "0x1881020", VA = "0x1881020")]
	public AkRamp()
	{
	}

	[Token(Token = "0x6001EDB")]
	[Address(RVA = "0x18810A4", Offset = "0x18810A4", VA = "0x18810A4")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}
}
[Token(Token = "0x2000348")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x4001712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002AD")]
	public AkVector imageSource
	{
		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x1881600", Offset = "0x1881600", VA = "0x1881600")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x1881570", Offset = "0x1881570", VA = "0x1881570")]
		set
		{
		}
	}

	[Token(Token = "0x170002AE")]
	public uint numPathPoints
	{
		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x188172C", Offset = "0x188172C", VA = "0x188172C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x18816B0", Offset = "0x18816B0", VA = "0x18816B0")]
		set
		{
		}
	}

	[Token(Token = "0x170002AF")]
	public uint numReflections
	{
		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x1881814", Offset = "0x1881814", VA = "0x1881814")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x1881798", Offset = "0x1881798", VA = "0x1881798")]
		set
		{
		}
	}

	[Token(Token = "0x170002B0")]
	public AkVector occlusionPoint
	{
		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x1881910", Offset = "0x1881910", VA = "0x1881910")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x1881880", Offset = "0x1881880", VA = "0x1881880")]
		set
		{
		}
	}

	[Token(Token = "0x170002B1")]
	public float level
	{
		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x1881A3C", Offset = "0x1881A3C", VA = "0x1881A3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x18819C0", Offset = "0x18819C0", VA = "0x18819C0")]
		set
		{
		}
	}

	[Token(Token = "0x170002B2")]
	public bool isOccluded
	{
		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x1881B24", Offset = "0x1881B24", VA = "0x1881B24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x1881AA8", Offset = "0x1881AA8", VA = "0x1881AA8")]
		set
		{
		}
	}

	[Token(Token = "0x6001EE0")]
	[Address(RVA = "0x1881310", Offset = "0x1881310", VA = "0x1881310")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001EE1")]
	[Address(RVA = "0x1881350", Offset = "0x1881350", VA = "0x1881350")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001EE2")]
	[Address(RVA = "0x18813A0", Offset = "0x18813A0", VA = "0x18813A0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001EE3")]
	[Address(RVA = "0x18813D4", Offset = "0x18813D4", VA = "0x18813D4", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x6001EE4")]
	[Address(RVA = "0x1881444", Offset = "0x1881444", VA = "0x1881444", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001EF1")]
	[Address(RVA = "0x1881B90", Offset = "0x1881B90", VA = "0x1881B90")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001EF2")]
	[Address(RVA = "0x1881BF0", Offset = "0x1881BF0", VA = "0x1881BF0")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001EF3")]
	[Address(RVA = "0x1881CB0", Offset = "0x1881CB0", VA = "0x1881CB0")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001EF4")]
	[Address(RVA = "0x1881D60", Offset = "0x1881D60", VA = "0x1881D60")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6001EF5")]
	[Address(RVA = "0x1881DDC", Offset = "0x1881DDC", VA = "0x1881DDC")]
	public void Clone(AkReflectionPathInfo other)
	{
	}

	[Token(Token = "0x6001EF6")]
	[Address(RVA = "0x1881E84", Offset = "0x1881E84", VA = "0x1881E84")]
	public AkReflectionPathInfo()
	{
	}
}
[Token(Token = "0x2000349")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002B3")]
	public AkVector Up
	{
		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x188253C", Offset = "0x188253C", VA = "0x188253C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x1883504", Offset = "0x1883504", VA = "0x1883504")]
		set
		{
		}
	}

	[Token(Token = "0x170002B4")]
	public AkVector Front
	{
		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x18825EC", Offset = "0x18825EC", VA = "0x18825EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x1883594", Offset = "0x1883594", VA = "0x1883594")]
		set
		{
		}
	}

	[Token(Token = "0x170002B5")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1883624", Offset = "0x1883624", VA = "0x1883624")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x188269C", Offset = "0x188269C", VA = "0x188269C")]
		set
		{
		}
	}

	[Token(Token = "0x170002B6")]
	public float ReverbLevel
	{
		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x1883690", Offset = "0x1883690", VA = "0x1883690")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1882718", Offset = "0x1882718", VA = "0x1882718")]
		set
		{
		}
	}

	[Token(Token = "0x170002B7")]
	public float WallOcclusion
	{
		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x18836FC", Offset = "0x18836FC", VA = "0x18836FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x1882794", Offset = "0x1882794", VA = "0x1882794")]
		set
		{
		}
	}

	[Token(Token = "0x170002B8")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x1883768", Offset = "0x1883768", VA = "0x1883768")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1882810", Offset = "0x1882810", VA = "0x1882810")]
		set
		{
		}
	}

	[Token(Token = "0x170002B9")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x18837D4", Offset = "0x18837D4", VA = "0x18837D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x188288C", Offset = "0x188288C", VA = "0x188288C")]
		set
		{
		}
	}

	[Token(Token = "0x6001EF7")]
	[Address(RVA = "0x18832A4", Offset = "0x18832A4", VA = "0x18832A4")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001EF8")]
	[Address(RVA = "0x18832E4", Offset = "0x18832E4", VA = "0x18832E4")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001EF9")]
	[Address(RVA = "0x1883334", Offset = "0x1883334", VA = "0x1883334", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001EFA")]
	[Address(RVA = "0x1883368", Offset = "0x1883368", VA = "0x1883368", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x6001EFB")]
	[Address(RVA = "0x18833D8", Offset = "0x18833D8", VA = "0x18833D8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001EFC")]
	[Address(RVA = "0x18824B8", Offset = "0x18824B8", VA = "0x18824B8")]
	public AkRoomParams()
	{
	}
}
[Token(Token = "0x200034A")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002BA")]
	public int iCurrentPosition
	{
		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x188508C", Offset = "0x188508C", VA = "0x188508C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x1885010", Offset = "0x1885010", VA = "0x1885010")]
		set
		{
		}
	}

	[Token(Token = "0x170002BB")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x1885174", Offset = "0x1885174", VA = "0x1885174")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x18850F8", Offset = "0x18850F8", VA = "0x18850F8")]
		set
		{
		}
	}

	[Token(Token = "0x170002BC")]
	public int iActiveDuration
	{
		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x188525C", Offset = "0x188525C", VA = "0x188525C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x18851E0", Offset = "0x18851E0", VA = "0x18851E0")]
		set
		{
		}
	}

	[Token(Token = "0x170002BD")]
	public int iPostExitDuration
	{
		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x1885344", Offset = "0x1885344", VA = "0x1885344")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x18852C8", Offset = "0x18852C8", VA = "0x18852C8")]
		set
		{
		}
	}

	[Token(Token = "0x170002BE")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x188542C", Offset = "0x188542C", VA = "0x188542C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x18853B0", Offset = "0x18853B0", VA = "0x18853B0")]
		set
		{
		}
	}

	[Token(Token = "0x170002BF")]
	public float fBeatDuration
	{
		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x1885514", Offset = "0x1885514", VA = "0x1885514")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x1885498", Offset = "0x1885498", VA = "0x1885498")]
		set
		{
		}
	}

	[Token(Token = "0x170002C0")]
	public float fBarDuration
	{
		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x18855FC", Offset = "0x18855FC", VA = "0x18855FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x1885580", Offset = "0x1885580", VA = "0x1885580")]
		set
		{
		}
	}

	[Token(Token = "0x170002C1")]
	public float fGridDuration
	{
		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x18856E4", Offset = "0x18856E4", VA = "0x18856E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x1885668", Offset = "0x1885668", VA = "0x1885668")]
		set
		{
		}
	}

	[Token(Token = "0x170002C2")]
	public float fGridOffset
	{
		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x18857CC", Offset = "0x18857CC", VA = "0x18857CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x1885750", Offset = "0x1885750", VA = "0x1885750")]
		set
		{
		}
	}

	[Token(Token = "0x6001F0B")]
	[Address(RVA = "0x1884DB0", Offset = "0x1884DB0", VA = "0x1884DB0")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F0C")]
	[Address(RVA = "0x1884DF0", Offset = "0x1884DF0", VA = "0x1884DF0")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F0D")]
	[Address(RVA = "0x1884E40", Offset = "0x1884E40", VA = "0x1884E40", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F0E")]
	[Address(RVA = "0x1884E74", Offset = "0x1884E74", VA = "0x1884E74", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x6001F0F")]
	[Address(RVA = "0x1884EE4", Offset = "0x1884EE4", VA = "0x1884EE4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F22")]
	[Address(RVA = "0x1885838", Offset = "0x1885838", VA = "0x1885838")]
	public AkSegmentInfo()
	{
	}
}
[Token(Token = "0x200034B")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002C3")]
	public IntPtr pPackage
	{
		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x1885B1C", Offset = "0x1885B1C", VA = "0x1885B1C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170002C4")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x1885B88", Offset = "0x1885B88", VA = "0x1885B88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C5")]
	public AkCallbackType eType
	{
		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x1885C38", Offset = "0x1885C38", VA = "0x1885C38")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x6001F23")]
	[Address(RVA = "0x18858BC", Offset = "0x18858BC", VA = "0x18858BC")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F24")]
	[Address(RVA = "0x18858FC", Offset = "0x18858FC", VA = "0x18858FC")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F25")]
	[Address(RVA = "0x188594C", Offset = "0x188594C", VA = "0x188594C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F26")]
	[Address(RVA = "0x1885980", Offset = "0x1885980", VA = "0x1885980", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x6001F27")]
	[Address(RVA = "0x18859F0", Offset = "0x18859F0", VA = "0x18859F0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F2B")]
	[Address(RVA = "0x1885CA4", Offset = "0x1885CA4", VA = "0x1885CA4")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F2C")]
	[Address(RVA = "0x1885D10", Offset = "0x1885D10", VA = "0x1885D10")]
	public AkSerializedCallbackHeader()
	{
	}
}
[Token(Token = "0x200034C")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x400171B")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x400171C")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x400171D")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x200034D")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002C6")]
	public uint sourceID
	{
		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x15FC764", Offset = "0x15FC764", VA = "0x15FC764")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x15FC6E8", Offset = "0x15FC6E8", VA = "0x15FC6E8")]
		set
		{
		}
	}

	[Token(Token = "0x170002C7")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x15FC84C", Offset = "0x15FC84C", VA = "0x15FC84C")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x15FC7D0", Offset = "0x15FC7D0", VA = "0x15FC7D0")]
		set
		{
		}
	}

	[Token(Token = "0x170002C8")]
	public uint uMediaSize
	{
		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x15FC934", Offset = "0x15FC934", VA = "0x15FC934")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x15FC8B8", Offset = "0x15FC8B8", VA = "0x15FC8B8")]
		set
		{
		}
	}

	[Token(Token = "0x6001F2D")]
	[Address(RVA = "0x15FC488", Offset = "0x15FC488", VA = "0x15FC488")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F2E")]
	[Address(RVA = "0x15FC4C8", Offset = "0x15FC4C8", VA = "0x15FC4C8")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F2F")]
	[Address(RVA = "0x15FC518", Offset = "0x15FC518", VA = "0x15FC518", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F30")]
	[Address(RVA = "0x15FC54C", Offset = "0x15FC54C", VA = "0x15FC54C", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x6001F31")]
	[Address(RVA = "0x15FC5BC", Offset = "0x15FC5BC", VA = "0x15FC5BC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F38")]
	[Address(RVA = "0x15FC9A0", Offset = "0x15FC9A0", VA = "0x15FC9A0")]
	public AkSourceSettings()
	{
	}
}
[Token(Token = "0x200034E")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002C9")]
	public int uPoolID
	{
		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x15FD2B0", Offset = "0x15FD2B0", VA = "0x15FD2B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x15FD234", Offset = "0x15FD234", VA = "0x15FD234")]
		set
		{
		}
	}

	[Token(Token = "0x170002CA")]
	public uint uPoolSize
	{
		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x15FD398", Offset = "0x15FD398", VA = "0x15FD398")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x15FD31C", Offset = "0x15FD31C", VA = "0x15FD31C")]
		set
		{
		}
	}

	[Token(Token = "0x170002CB")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x15FD480", Offset = "0x15FD480", VA = "0x15FD480")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x15FD404", Offset = "0x15FD404", VA = "0x15FD404")]
		set
		{
		}
	}

	[Token(Token = "0x170002CC")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x15FD568", Offset = "0x15FD568", VA = "0x15FD568")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x15FD4EC", Offset = "0x15FD4EC", VA = "0x15FD4EC")]
		set
		{
		}
	}

	[Token(Token = "0x170002CD")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x15FD650", Offset = "0x15FD650", VA = "0x15FD650")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x15FD5D4", Offset = "0x15FD5D4", VA = "0x15FD5D4")]
		set
		{
		}
	}

	[Token(Token = "0x170002CE")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x15FD738", Offset = "0x15FD738", VA = "0x15FD738")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x15FD6BC", Offset = "0x15FD6BC", VA = "0x15FD6BC")]
		set
		{
		}
	}

	[Token(Token = "0x6001F39")]
	[Address(RVA = "0x15FCF50", Offset = "0x15FCF50", VA = "0x15FCF50")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F3A")]
	[Address(RVA = "0x15FCF90", Offset = "0x15FCF90", VA = "0x15FCF90")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F3B")]
	[Address(RVA = "0x15FCFE0", Offset = "0x15FCFE0", VA = "0x15FCFE0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F3C")]
	[Address(RVA = "0x15FD014", Offset = "0x15FD014", VA = "0x15FD014", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x6001F3D")]
	[Address(RVA = "0x15FD084", Offset = "0x15FD084", VA = "0x15FD084", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F3E")]
	[Address(RVA = "0x15FD1B0", Offset = "0x15FD1B0", VA = "0x15FD1B0")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x200034F")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x4001723")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x4001724")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x2000350")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002CF")]
	public uint uMemorySize
	{
		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x15FE4DC", Offset = "0x15FE4DC", VA = "0x15FE4DC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x15FE460", Offset = "0x15FE460", VA = "0x15FE460")]
		set
		{
		}
	}

	[Token(Token = "0x6001F4B")]
	[Address(RVA = "0x15FE200", Offset = "0x15FE200", VA = "0x15FE200")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F4C")]
	[Address(RVA = "0x15FE240", Offset = "0x15FE240", VA = "0x15FE240")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F4D")]
	[Address(RVA = "0x15FE290", Offset = "0x15FE290", VA = "0x15FE290", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F4E")]
	[Address(RVA = "0x15FE2C4", Offset = "0x15FE2C4", VA = "0x15FE2C4", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x6001F4F")]
	[Address(RVA = "0x15FE334", Offset = "0x15FE334", VA = "0x15FE334", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F52")]
	[Address(RVA = "0x15FE548", Offset = "0x15FE548", VA = "0x15FE548")]
	public AkStreamMgrSettings()
	{
	}
}
[Token(Token = "0x2000351")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D0")]
	public uint uIdxThread
	{
		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x15FFD0C", Offset = "0x15FFD0C", VA = "0x15FFD0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x15FFC90", Offset = "0x15FFC90", VA = "0x15FFC90")]
		set
		{
		}
	}

	[Token(Token = "0x6001F53")]
	[Address(RVA = "0x15FFA30", Offset = "0x15FFA30", VA = "0x15FFA30")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F54")]
	[Address(RVA = "0x15FFA70", Offset = "0x15FFA70", VA = "0x15FFA70")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F55")]
	[Address(RVA = "0x15FFAC0", Offset = "0x15FFAC0", VA = "0x15FFAC0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F56")]
	[Address(RVA = "0x15FFAF4", Offset = "0x15FFAF4", VA = "0x15FFAF4", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x6001F57")]
	[Address(RVA = "0x15FFB64", Offset = "0x15FFB64", VA = "0x15FFB64", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F5A")]
	[Address(RVA = "0x15FFD78", Offset = "0x15FFD78", VA = "0x15FFD78")]
	public AkTaskContext()
	{
	}
}
[Token(Token = "0x2000352")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001F5B")]
	[Address(RVA = "0x1600488", Offset = "0x1600488", VA = "0x1600488")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F5C")]
	[Address(RVA = "0x16004C8", Offset = "0x16004C8", VA = "0x16004C8")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F5D")]
	[Address(RVA = "0x1600518", Offset = "0x1600518", VA = "0x1600518", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F5E")]
	[Address(RVA = "0x160054C", Offset = "0x160054C", VA = "0x160054C", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x6001F5F")]
	[Address(RVA = "0x16005BC", Offset = "0x16005BC", VA = "0x16005BC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F60")]
	[Address(RVA = "0x16006E8", Offset = "0x16006E8", VA = "0x16006E8")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x6001F61")]
	[Address(RVA = "0x16007C8", Offset = "0x16007C8", VA = "0x16007C8")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x6001F62")]
	[Address(RVA = "0x1600868", Offset = "0x1600868", VA = "0x1600868")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x6001F63")]
	[Address(RVA = "0x1600908", Offset = "0x1600908", VA = "0x1600908")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6001F64")]
	[Address(RVA = "0x1600A28", Offset = "0x1600A28", VA = "0x1600A28")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6001F65")]
	[Address(RVA = "0x1600B54", Offset = "0x1600B54", VA = "0x1600B54")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x6001F66")]
	[Address(RVA = "0x1600BFC", Offset = "0x1600BFC", VA = "0x1600BFC")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x6001F67")]
	[Address(RVA = "0x1600C90", Offset = "0x1600C90", VA = "0x1600C90")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6001F68")]
	[Address(RVA = "0x1600D48", Offset = "0x1600D48", VA = "0x1600D48")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6001F69")]
	[Address(RVA = "0x1600DFC", Offset = "0x1600DFC", VA = "0x1600DFC")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x2000353")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D1")]
	public ushort point0
	{
		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x1601218", Offset = "0x1601218", VA = "0x1601218")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x15FF3B0", Offset = "0x15FF3B0", VA = "0x15FF3B0")]
		set
		{
		}
	}

	[Token(Token = "0x170002D2")]
	public ushort point1
	{
		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x1601284", Offset = "0x1601284", VA = "0x1601284")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x15FF42C", Offset = "0x15FF42C", VA = "0x15FF42C")]
		set
		{
		}
	}

	[Token(Token = "0x170002D3")]
	public ushort point2
	{
		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x16012F0", Offset = "0x16012F0", VA = "0x16012F0")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x15FF4A8", Offset = "0x15FF4A8", VA = "0x15FF4A8")]
		set
		{
		}
	}

	[Token(Token = "0x170002D4")]
	public ushort surface
	{
		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x160135C", Offset = "0x160135C", VA = "0x160135C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x15FF524", Offset = "0x15FF524", VA = "0x15FF524")]
		set
		{
		}
	}

	[Token(Token = "0x6001F6A")]
	[Address(RVA = "0x1600E80", Offset = "0x1600E80", VA = "0x1600E80")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F6B")]
	[Address(RVA = "0x1600EC0", Offset = "0x1600EC0", VA = "0x1600EC0")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F6C")]
	[Address(RVA = "0x1600F10", Offset = "0x1600F10", VA = "0x1600F10", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F6D")]
	[Address(RVA = "0x1600F44", Offset = "0x1600F44", VA = "0x1600F44", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x6001F6E")]
	[Address(RVA = "0x1600FB4", Offset = "0x1600FB4", VA = "0x1600FB4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F6F")]
	[Address(RVA = "0x16010E0", Offset = "0x16010E0", VA = "0x16010E0")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x6001F70")]
	[Address(RVA = "0x1601164", Offset = "0x1601164", VA = "0x1601164")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x6001F79")]
	[Address(RVA = "0x16013C8", Offset = "0x16013C8", VA = "0x16013C8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001F7A")]
	[Address(RVA = "0x1601434", Offset = "0x1601434", VA = "0x1601434")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001F7B")]
	[Address(RVA = "0x1601494", Offset = "0x1601494", VA = "0x1601494")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x2000354")]
public class AkVector : IDisposable
{
	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D5")]
	public float X
	{
		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x16036D4", Offset = "0x16036D4", VA = "0x16036D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x1603658", Offset = "0x1603658", VA = "0x1603658")]
		set
		{
		}
	}

	[Token(Token = "0x170002D6")]
	public float Y
	{
		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x16037BC", Offset = "0x16037BC", VA = "0x16037BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x1603740", Offset = "0x1603740", VA = "0x1603740")]
		set
		{
		}
	}

	[Token(Token = "0x170002D7")]
	public float Z
	{
		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x16038A4", Offset = "0x16038A4", VA = "0x16038A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x1603828", Offset = "0x1603828", VA = "0x1603828")]
		set
		{
		}
	}

	[Token(Token = "0x6001F7C")]
	[Address(RVA = "0x1600788", Offset = "0x1600788", VA = "0x1600788")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F7D")]
	[Address(RVA = "0x16009D8", Offset = "0x16009D8", VA = "0x16009D8")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F7E")]
	[Address(RVA = "0x160341C", Offset = "0x160341C", VA = "0x160341C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F7F")]
	[Address(RVA = "0x1603450", Offset = "0x1603450", VA = "0x1603450", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x6001F80")]
	[Address(RVA = "0x16034C0", Offset = "0x16034C0", VA = "0x16034C0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F81")]
	[Address(RVA = "0x16035EC", Offset = "0x16035EC", VA = "0x16035EC")]
	public void Zero()
	{
	}

	[Token(Token = "0x6001F88")]
	[Address(RVA = "0x1603910", Offset = "0x1603910", VA = "0x1603910")]
	public AkVector()
	{
	}
}
[Token(Token = "0x2000355")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D8")]
	public float X
	{
		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x1603D24", Offset = "0x1603D24", VA = "0x1603D24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x15FF1DC", Offset = "0x15FF1DC", VA = "0x15FF1DC")]
		set
		{
		}
	}

	[Token(Token = "0x170002D9")]
	public float Y
	{
		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x1603D90", Offset = "0x1603D90", VA = "0x1603D90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x15FF258", Offset = "0x15FF258", VA = "0x15FF258")]
		set
		{
		}
	}

	[Token(Token = "0x170002DA")]
	public float Z
	{
		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x1603DFC", Offset = "0x1603DFC", VA = "0x1603DFC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x15FF2D4", Offset = "0x15FF2D4", VA = "0x15FF2D4")]
		set
		{
		}
	}

	[Token(Token = "0x6001F89")]
	[Address(RVA = "0x1603994", Offset = "0x1603994", VA = "0x1603994")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F8A")]
	[Address(RVA = "0x16039D4", Offset = "0x16039D4", VA = "0x16039D4")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F8B")]
	[Address(RVA = "0x1603A24", Offset = "0x1603A24", VA = "0x1603A24", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F8C")]
	[Address(RVA = "0x1603A58", Offset = "0x1603A58", VA = "0x1603A58", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x6001F8D")]
	[Address(RVA = "0x1603AC8", Offset = "0x1603AC8", VA = "0x1603AC8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F8E")]
	[Address(RVA = "0x1603BF4", Offset = "0x1603BF4", VA = "0x1603BF4")]
	public AkVertex()
	{
	}

	[Token(Token = "0x6001F8F")]
	[Address(RVA = "0x1603C78", Offset = "0x1603C78", VA = "0x1603C78")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x6001F96")]
	[Address(RVA = "0x1603E68", Offset = "0x1603E68", VA = "0x1603E68")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001F97")]
	[Address(RVA = "0x1603ED4", Offset = "0x1603ED4", VA = "0x1603ED4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001F98")]
	[Address(RVA = "0x1603F34", Offset = "0x1603F34", VA = "0x1603F34")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x2000356")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001F99")]
	[Address(RVA = "0x29F3CA0", Offset = "0x29F3CA0", VA = "0x29F3CA0")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F9A")]
	[Address(RVA = "0x29F3CE0", Offset = "0x29F3CE0", VA = "0x29F3CE0")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F9B")]
	[Address(RVA = "0x29F3D30", Offset = "0x29F3D30", VA = "0x29F3D30", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F9C")]
	[Address(RVA = "0x29F3D64", Offset = "0x29F3D64", VA = "0x29F3D64", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x6001F9D")]
	[Address(RVA = "0x29F3DD4", Offset = "0x29F3DD4", VA = "0x29F3DD4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F9E")]
	[Address(RVA = "0x29F3F00", Offset = "0x29F3F00", VA = "0x29F3F00")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001F9F")]
	[Address(RVA = "0x29F3F60", Offset = "0x29F3F60", VA = "0x29F3F60")]
	public _ArrayPoolDefault()
	{
	}
}
[Token(Token = "0x2000357")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001FA0")]
	[Address(RVA = "0x29F3FE4", Offset = "0x29F3FE4", VA = "0x29F3FE4")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001FA1")]
	[Address(RVA = "0x29F4024", Offset = "0x29F4024", VA = "0x29F4024")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FA2")]
	[Address(RVA = "0x29F4074", Offset = "0x29F4074", VA = "0x29F4074", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FA3")]
	[Address(RVA = "0x29F40A8", Offset = "0x29F40A8", VA = "0x29F40A8", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x6001FA4")]
	[Address(RVA = "0x29F4118", Offset = "0x29F4118", VA = "0x29F4118", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FA5")]
	[Address(RVA = "0x29F4244", Offset = "0x29F4244", VA = "0x29F4244")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001FA6")]
	[Address(RVA = "0x29F42A4", Offset = "0x29F42A4", VA = "0x29F42A4")]
	public _ArrayPoolLEngineDefault()
	{
	}
}
[Token(Token = "0x2000358")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001FA7")]
	[Address(RVA = "0x29F4328", Offset = "0x29F4328", VA = "0x29F4328")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001FA8")]
	[Address(RVA = "0x29F4368", Offset = "0x29F4368", VA = "0x29F4368")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FA9")]
	[Address(RVA = "0x29F43B8", Offset = "0x29F43B8", VA = "0x29F43B8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FAA")]
	[Address(RVA = "0x29F43EC", Offset = "0x29F43EC", VA = "0x29F43EC", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6001FAB")]
	[Address(RVA = "0x29F445C", Offset = "0x29F445C", VA = "0x29F445C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FAC")]
	[Address(RVA = "0x29F4588", Offset = "0x29F4588", VA = "0x29F4588")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001FAD")]
	[Address(RVA = "0x29F45E8", Offset = "0x29F45E8", VA = "0x29F45E8")]
	public _ArrayPoolSpatialAudio()
	{
	}
}
[Token(Token = "0x2000359")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x200054B")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDB888", Offset = "0xFDB888")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x18CC28C", Offset = "0x18CC28C", VA = "0x18CC28C", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x18CC2B0", Offset = "0x18CC2B0", VA = "0x18CC2B0")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001FAE")]
	[Address(RVA = "0x18CBF78", Offset = "0x18CBF78", VA = "0x18CBF78")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x6001FAF")]
	[Address(RVA = "0x18CC274", Offset = "0x18CC274", VA = "0x18CC274", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001FB0")]
	[Address(RVA = "0x18CC27C", Offset = "0x18CC27C", VA = "0x18CC27C", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001FB1")]
	[Address(RVA = "0x18CC284", Offset = "0x18CC284", VA = "0x18CC284", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x200035A")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x170002DB")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x18CAE38", Offset = "0x18CAE38", VA = "0x18CAE38", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001FB2")]
	[Address(RVA = "0x18CADD8", Offset = "0x18CADD8", VA = "0x18CADD8")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x6001FB4")]
	[Address(RVA = "0x18CAE98", Offset = "0x18CAE98", VA = "0x18CAE98", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001FB5")]
	[Address(RVA = "0x18CAF00", Offset = "0x18CAF00", VA = "0x18CAF00", Slot = "8")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001FB6")]
	[Address(RVA = "0x18CAF68", Offset = "0x18CAF68", VA = "0x18CAF68", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x200035B")]
public static class AkAudioInputManager
{
	[Token(Token = "0x200054C")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xFD5F34", Offset = "0xFD5F34")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x200054E")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xFD5F48", Offset = "0xFD5F48")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x6001FB7")]
	[Address(RVA = "0x18CD1D8", Offset = "0x18CD1D8", VA = "0x18CD1D8")]
	public static uint PostAudioInputEvent(AK.Wwise.Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001FB8")]
	[Address(RVA = "0x18CD48C", Offset = "0x18CD48C", VA = "0x18CD48C")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001FB9")]
	[Address(RVA = "0x18CD594", Offset = "0x18CD594", VA = "0x18CD594")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001FBA")]
	[Address(RVA = "0x18CCFC4", Offset = "0x18CCFC4", VA = "0x18CCFC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xFDE8A8", Offset = "0xFDE8A8")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FBB")]
	[Address(RVA = "0x18CD0C0", Offset = "0x18CD0C0", VA = "0x18CD0C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xFDE90C", Offset = "0xFDE90C")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x6001FBC")]
	[Address(RVA = "0x18CD2C4", Offset = "0x18CD2C4", VA = "0x18CD2C4")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x6001FBD")]
	[Address(RVA = "0x18CD398", Offset = "0x18CD398", VA = "0x18CD398")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6001FBE")]
	[Address(RVA = "0x18CDBBC", Offset = "0x18CDBBC", VA = "0x18CDBBC")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x200035C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFD38A0", Offset = "0xFD38A0")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x4001740")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x170002DC")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x18D0190", Offset = "0x18D0190", VA = "0x18D0190")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002DD")]
	public bool isFull
	{
		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x18D02F0", Offset = "0x18D02F0", VA = "0x18D02F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001FC0")]
	[Address(RVA = "0x18D00E0", Offset = "0x18D00E0", VA = "0x18D00E0")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001FC3")]
	[Address(RVA = "0x18D0358", Offset = "0x18D0358", VA = "0x18D0358", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001FC4")]
	[Address(RVA = "0x18D03E4", Offset = "0x18D03E4", VA = "0x18D03E4", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001FC5")]
	[Address(RVA = "0x18D044C", Offset = "0x18D044C", VA = "0x18D044C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001FC6")]
	[Address(RVA = "0x18D0454", Offset = "0x18D0454", VA = "0x18D0454")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FC7")]
	[Address(RVA = "0x18D056C", Offset = "0x18D056C", VA = "0x18D056C")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FC8")]
	[Address(RVA = "0x18D064C", Offset = "0x18D064C", VA = "0x18D064C")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FC9")]
	[Address(RVA = "0x18D078C", Offset = "0x18D078C", VA = "0x18D078C")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FCA")]
	[Address(RVA = "0x18D0884", Offset = "0x18D0884", VA = "0x18D0884")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001FCB")]
	[Address(RVA = "0x18D093C", Offset = "0x18D093C", VA = "0x18D093C")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001FCC")]
	[Address(RVA = "0x18D0A04", Offset = "0x18D0A04", VA = "0x18D0A04")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FCD")]
	[Address(RVA = "0x18D0A0C", Offset = "0x18D0A0C", VA = "0x18D0A0C")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001FCE")]
	[Address(RVA = "0x18D0274", Offset = "0x18D0274", VA = "0x18D0274")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200035D")]
public static class AkBankManager
{
	[Token(Token = "0x2000550")]
	private class BankHandle
	{
		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB8C0", Offset = "0xFDB8C0")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x17000419")]
		public int RefCount
		{
			[Token(Token = "0x6002767")]
			[Address(RVA = "0x18D2AE0", Offset = "0x18D2AE0", VA = "0x18D2AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFE06E4", Offset = "0xFE06E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002768")]
			[Address(RVA = "0x18D2AE8", Offset = "0x18D2AE8", VA = "0x18D2AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFE06F4", Offset = "0xFE06F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x18D1D70", Offset = "0x18D1D70", VA = "0x18D1D70")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x18D2AF0", Offset = "0x18D2AF0", VA = "0x18D2AF0", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x18D2070", Offset = "0x18D2070", VA = "0x18D2070")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x18D2B68", Offset = "0x18D2B68", VA = "0x18D2B68", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x18D216C", Offset = "0x18D216C", VA = "0x18D216C")]
		public void IncRef()
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x18D21CC", Offset = "0x18D21CC", VA = "0x18D21CC")]
		public void DecRef()
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x18D24EC", Offset = "0x18D24EC", VA = "0x18D24EC")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x2000551")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x18D217C", Offset = "0x18D217C", VA = "0x18D217C")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x18D234C", Offset = "0x18D234C", VA = "0x18D234C")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x18D2A0C", Offset = "0x18D2A0C", VA = "0x18D2A0C", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x2000552")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x18D1DA4", Offset = "0x18D1DA4", VA = "0x18D1DA4")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x18D2CC8", Offset = "0x18D2CC8", VA = "0x18D2CC8", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x18D2E5C", Offset = "0x18D2E5C", VA = "0x18D2E5C", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x6001FCF")]
	[Address(RVA = "0x18D1BB0", Offset = "0x18D1BB0", VA = "0x18D1BB0")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6001FD0")]
	[Address(RVA = "0x18D1CD4", Offset = "0x18D1CD4", VA = "0x18D1CD4")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6001FD1")]
	[Address(RVA = "0x18C7B78", Offset = "0x18C7B78", VA = "0x18C7B78")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6001FD2")]
	[Address(RVA = "0x18C7DF8", Offset = "0x18C7DF8", VA = "0x18C7DF8")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6001FD3")]
	[Address(RVA = "0x18C8028", Offset = "0x18C8028", VA = "0x18C8028")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x200035E")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFD38D8", Offset = "0xFD38D8")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD9998", Offset = "0xFD9998")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x170002DE")]
	public int Capacity
	{
		[Token(Token = "0x6001FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE970", Offset = "0xFDE970")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001FD9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE980", Offset = "0xFDE980")]
		private set
		{
		}
	}

	[Token(Token = "0x170002DF")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x6001FDB")]
		get;
	}

	[Token(Token = "0x170002E0")]
	public T Item
	{
		[Token(Token = "0x6001FDF")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6001FE0")]
		set
		{
		}
	}

	[Token(Token = "0x6001FD5")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6001FD6")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001FD7")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x6001FDA")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001FDC")]
	protected virtual void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001FDD")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6001FDE")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x6001FE1")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FE2")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200035F")]
public class AkBasePathGetter
{
	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DefaultBasePath;

	[Token(Token = "0x6001FE3")]
	[Address(RVA = "0x18D2EEC", Offset = "0x18D2EEC", VA = "0x18D2EEC")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x6001FE4")]
	[Address(RVA = "0x18D2F5C", Offset = "0x18D2F5C", VA = "0x18D2F5C")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x6001FE5")]
	[Address(RVA = "0x18D3018", Offset = "0x18D3018", VA = "0x18D3018")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x6001FE6")]
	[Address(RVA = "0x18D319C", Offset = "0x18D319C", VA = "0x18D319C")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x6001FE7")]
	[Address(RVA = "0x18D30E8", Offset = "0x18D30E8", VA = "0x18D30E8")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x6001FE8")]
	[Address(RVA = "0x18D2BE0", Offset = "0x18D2BE0", VA = "0x18D2BE0")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}

	[Token(Token = "0x6001FE9")]
	[Address(RVA = "0x18D32F0", Offset = "0x18D32F0", VA = "0x18D32F0")]
	public AkBasePathGetter()
	{
	}
}
[Token(Token = "0x2000360")]
public static class AkCallbackManager
{
	[Token(Token = "0x2000553")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x2000554")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x2000555")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x2000556")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x18D6A6C", Offset = "0x18D6A6C", VA = "0x18D6A6C")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x18D6BB0", Offset = "0x18D6BB0", VA = "0x18D6BB0", Slot = "1")]
		~EventCallbackPackage()
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x18D6BA8", Offset = "0x18D6BA8", VA = "0x18D6BA8")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000557")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x18D68E8", Offset = "0x18D68E8", VA = "0x18D68E8")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x2000558")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x2000559")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x18D4BC4", Offset = "0x18D4BC4", VA = "0x18D4BC4")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x200055A")]
	public class InitializationSettings
	{
		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x18D34A0", Offset = "0x18D34A0", VA = "0x18D34A0")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD99A8", Offset = "0xFD99A8")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly ConcurrentDictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly ConcurrentDictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ConcurrentQueue<int> cookiesToRemove;

	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x170002E1")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x18D3A74", Offset = "0x18D3A74", VA = "0x18D3A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE990", Offset = "0xFDE990")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x18D3ADC", Offset = "0x18D3ADC", VA = "0x18D3ADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE9A0", Offset = "0xFDE9A0")]
		set
		{
		}
	}

	[Token(Token = "0x6001FED")]
	[Address(RVA = "0x18D3B4C", Offset = "0x18D3B4C", VA = "0x18D3B4C")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6001FEE")]
	[Address(RVA = "0x18D3FB0", Offset = "0x18D3FB0", VA = "0x18D3FB0")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x6001FEF")]
	[Address(RVA = "0x18D430C", Offset = "0x18D430C", VA = "0x18D430C")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x6001FF0")]
	[Address(RVA = "0x18D4668", Offset = "0x18D4668", VA = "0x18D4668")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6001FF1")]
	[Address(RVA = "0x18D4730", Offset = "0x18D4730", VA = "0x18D4730")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001FF2")]
	[Address(RVA = "0x18D48D8", Offset = "0x18D48D8", VA = "0x18D48D8")]
	public static void Term()
	{
	}

	[Token(Token = "0x6001FF3")]
	[Address(RVA = "0x18D4A14", Offset = "0x18D4A14", VA = "0x18D4A14")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x6001FF4")]
	[Address(RVA = "0x18D4B04", Offset = "0x18D4B04", VA = "0x18D4B04")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x6001FF5")]
	[Address(RVA = "0x18D4BCC", Offset = "0x18D4BCC", VA = "0x18D4BCC")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x2000361")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD99B8", Offset = "0xFD99B8")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x170002E2")]
	public uint Count
	{
		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x18D820C", Offset = "0x18D820C", VA = "0x18D820C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE9B0", Offset = "0xFDE9B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x18D8214", Offset = "0x18D8214", VA = "0x18D8214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDE9C0", Offset = "0xFDE9C0")]
		private set
		{
		}
	}

	[Token(Token = "0x6001FF7")]
	[Address(RVA = "0x18D817C", Offset = "0x18D817C", VA = "0x18D817C")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x6001FFA")]
	[Address(RVA = "0x18D821C", Offset = "0x18D821C", VA = "0x18D821C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001FFB")]
	[Address(RVA = "0x18D82A8", Offset = "0x18D82A8", VA = "0x18D82A8", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x6001FFC")]
	[Address(RVA = "0x18D8310", Offset = "0x18D8310", VA = "0x18D8310")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001FFD")]
	[Address(RVA = "0x18D8320", Offset = "0x18D8320", VA = "0x18D8320")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x2000362")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x170002E3")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x18D3390", Offset = "0x18D3390", VA = "0x18D3390", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002E4")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x18D33EC", Offset = "0x18D33EC", VA = "0x18D33EC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002E5")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6002000")]
		[Address(RVA = "0x18D3448", Offset = "0x18D3448", VA = "0x18D3448", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002E6")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x6002001")]
		[Address(RVA = "0x18D3524", Offset = "0x18D3524", VA = "0x18D3524", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002E7")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x6002002")]
		[Address(RVA = "0x18D356C", Offset = "0x18D356C", VA = "0x18D356C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002E8")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6002003")]
		[Address(RVA = "0x18D35D4", Offset = "0x18D35D4", VA = "0x18D35D4", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002004")]
	[Address(RVA = "0x18D36B0", Offset = "0x18D36B0", VA = "0x18D36B0")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000363")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x200055B")]
	public enum PanningRule
	{
		[Token(Token = "0x4001DEE")]
		Speakers,
		[Token(Token = "0x4001DEF")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x200055C")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x200089D")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x4001F0D")]
			Anonymous,
			[Token(Token = "0x4001F0E")]
			Standard,
			[Token(Token = "0x4001F0F")]
			Ambisonic
		}

		[Token(Token = "0x200089E")]
		public enum ChannelMask
		{
			[Token(Token = "0x4001F11")]
			NONE = 0,
			[Token(Token = "0x4001F12")]
			FRONT_LEFT = 1,
			[Token(Token = "0x4001F13")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x4001F14")]
			FRONT_CENTER = 4,
			[Token(Token = "0x4001F15")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x4001F16")]
			BACK_LEFT = 16,
			[Token(Token = "0x4001F17")]
			BACK_RIGHT = 32,
			[Token(Token = "0x4001F18")]
			BACK_CENTER = 256,
			[Token(Token = "0x4001F19")]
			SIDE_LEFT = 512,
			[Token(Token = "0x4001F1A")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x4001F1B")]
			TOP = 2048,
			[Token(Token = "0x4001F1C")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x4001F1D")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x4001F1E")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x4001F1F")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x4001F20")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x4001F21")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x4001F22")]
			SETUP_MONO = 4,
			[Token(Token = "0x4001F23")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x4001F24")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x4001F25")]
			SETUP_STEREO = 3,
			[Token(Token = "0x4001F26")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x4001F27")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x4001F28")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x4001F29")]
			SETUP_4 = 1539,
			[Token(Token = "0x4001F2A")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x4001F2B")]
			SETUP_5 = 1543,
			[Token(Token = "0x4001F2C")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x4001F2D")]
			SETUP_6 = 1587,
			[Token(Token = "0x4001F2E")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x4001F2F")]
			SETUP_7 = 1591,
			[Token(Token = "0x4001F30")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x4001F31")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x4001F32")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x4001F33")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x4001F34")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x4001F35")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x4001F36")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x4001F37")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x4001F38")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x4001F39")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x4001F3A")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x4001F3B")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x4001F3C")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x4001F3D")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x4001F3E")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x4001F3F")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x4001F40")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x4001F41")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x4001F42")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x4001F43")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x4001F44")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x4001F45")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x4001F46")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x4001F47")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x4001F48")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x4001F49")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x4001F4A")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x4001F4B")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x4001F4C")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDB8D0", Offset = "0xFDB8D0")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDB908", Offset = "0xFDB908")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xFDB908", Offset = "0xFDB908")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDB990", Offset = "0xFDB990")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x18D9070", Offset = "0x18D9070", VA = "0x18D9070")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x18CC26C", Offset = "0x18CC26C", VA = "0x18CC26C")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD99C8", Offset = "0xFD99C8")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9A00", Offset = "0xFD9A00")]
	public uint m_DeviceID;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9A38", Offset = "0xFD9A38")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9A70", Offset = "0xFD9A70")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x6002005")]
	[Address(RVA = "0x18D8F84", Offset = "0x18D8F84", VA = "0x18D8F84")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x6002006")]
	[Address(RVA = "0x18CC1D8", Offset = "0x18CC1D8", VA = "0x18CC1D8")]
	public AkCommonOutputSettings()
	{
	}
}
[Token(Token = "0x2000364")]
public class AkSettingsValidationHandler
{
	[Token(Token = "0x6002007")]
	[Address(RVA = "0x1885D94", Offset = "0x1885D94", VA = "0x1885D94", Slot = "4")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x6002008")]
	[Address(RVA = "0x1885D98", Offset = "0x1885D98", VA = "0x1885D98")]
	public AkSettingsValidationHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x2000365")]
public class AkCommonUserSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x200055D")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x200089F")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x4001F4E")]
			UseBuiltInParam = 1,
			[Token(Token = "0x4001F4F")]
			UseObstruction = 2,
			[Token(Token = "0x4001F50")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDB9C8", Offset = "0xFDB9C8")]
		public uint m_PoolSize;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDBA00", Offset = "0xFDBA00")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDBA00", Offset = "0xFDBA00")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDBA54", Offset = "0xFDBA54")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xFDBA54", Offset = "0xFDBA54")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x18D9660", Offset = "0x18D9660", VA = "0x18D9660")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9AA8", Offset = "0xFD9AA8")]
	public string m_BasePath;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9AE0", Offset = "0xFD9AE0")]
	public string m_StartupLanguage;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9B18", Offset = "0xFD9B18")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9B50", Offset = "0xFD9B50")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9B88", Offset = "0xFD9B88")]
	public bool m_EngineLogging;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9BC0", Offset = "0xFD9BC0")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9BF8", Offset = "0xFD9BF8")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9C30", Offset = "0xFD9C30")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9C68", Offset = "0xFD9C68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD9C68", Offset = "0xFD9C68")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9CBC", Offset = "0xFD9CBC")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9CF4", Offset = "0xFD9CF4")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9D2C", Offset = "0xFD9D2C")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9D64", Offset = "0xFD9D64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD9D64", Offset = "0xFD9D64")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9DB8", Offset = "0xFD9DB8")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9DF0", Offset = "0xFD9DF0")]
	public uint m_SampleRate;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9E28", Offset = "0xFD9E28")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9E60", Offset = "0xFD9E60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFD9E60", Offset = "0xFD9E60")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9EB4", Offset = "0xFD9EB4")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9EEC", Offset = "0xFD9EEC")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x6002009")]
	[Address(RVA = "0x18D92B0", Offset = "0x18D92B0", VA = "0x18D92B0")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x600200A")]
	[Address(RVA = "0x18D94C4", Offset = "0x18D94C4", VA = "0x18D94C4", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x600200B")]
	[Address(RVA = "0x18D92F8", Offset = "0x18D92F8", VA = "0x18D92F8")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x600200C")]
	[Address(RVA = "0x18D92D4", Offset = "0x18D92D4", VA = "0x18D92D4")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x600200D")]
	[Address(RVA = "0x18D9568", Offset = "0x18D9568", VA = "0x18D9568", Slot = "6")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x600200E")]
	[Address(RVA = "0x18D956C", Offset = "0x18D956C", VA = "0x18D956C", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x600200F")]
	[Address(RVA = "0x18D95D0", Offset = "0x18D95D0", VA = "0x18D95D0", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6002010")]
	[Address(RVA = "0x18D963C", Offset = "0x18D963C", VA = "0x18D963C", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6002011")]
	[Address(RVA = "0x18D9640", Offset = "0x18D9640", VA = "0x18D9640", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6002012")]
	[Address(RVA = "0x18CC0BC", Offset = "0x18CC0BC", VA = "0x18CC0BC")]
	public AkCommonUserSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000366")]
public class AkCommonAdvancedSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x200055E")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDBADC", Offset = "0xFDBADC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDBADC", Offset = "0xFDBADC")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDBB30", Offset = "0xFDBB30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDBB30", Offset = "0xFDBB30")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x18D8B20", Offset = "0x18D8B20", VA = "0x18D8B20")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9F24", Offset = "0xFD9F24")]
	public uint m_IOMemorySize;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9F5C", Offset = "0xFD9F5C")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9F94", Offset = "0xFD9F94")]
	public bool m_UseStreamCache;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFD9FCC", Offset = "0xFD9FCC")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x400177B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA004", Offset = "0xFDA004")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x400177C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA03C", Offset = "0xFDA03C")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA074", Offset = "0xFDA074")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA0AC", Offset = "0xFDA0AC")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA0E4", Offset = "0xFDA0E4")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA11C", Offset = "0xFDA11C")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA154", Offset = "0xFDA154")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x6002013")]
	[Address(RVA = "0x18D8708", Offset = "0x18D8708", VA = "0x18D8708", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6002014")]
	[Address(RVA = "0x18D894C", Offset = "0x18D894C", VA = "0x18D894C", Slot = "6")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6002015")]
	[Address(RVA = "0x18D89D0", Offset = "0x18D89D0", VA = "0x18D89D0", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6002016")]
	[Address(RVA = "0x18D89D4", Offset = "0x18D89D4", VA = "0x18D89D4", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6002017")]
	[Address(RVA = "0x18D8A28", Offset = "0x18D8A28", VA = "0x18D8A28", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6002018")]
	[Address(RVA = "0x18D8A2C", Offset = "0x18D8A2C", VA = "0x18D8A2C", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6002019")]
	[Address(RVA = "0x18CC2E0", Offset = "0x18CC2E0", VA = "0x18CC2E0")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000367")]
public class AkCommonCommSettings : AkSettingsValidationHandler
{
	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA18C", Offset = "0xFDA18C")]
	public uint m_PoolSize;

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA1C4", Offset = "0xFDA1C4")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA1FC", Offset = "0xFDA1FC")]
	public ushort m_CommandPort;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA234", Offset = "0xFDA234")]
	public ushort m_NotificationPort;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA26C", Offset = "0xFDA26C")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA2A4", Offset = "0xFDA2A4")]
	public string m_NetworkName;

	[Token(Token = "0x600201A")]
	[Address(RVA = "0x18D8B34", Offset = "0x18D8B34", VA = "0x18D8B34", Slot = "5")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x600201B")]
	[Address(RVA = "0x18D8EA8", Offset = "0x18D8EA8", VA = "0x18D8EA8")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x2000368")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x170002E9")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6002020")]
		[Address(RVA = "0x18D90E4", Offset = "0x18D90E4", VA = "0x18D90E4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002EA")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6002021")]
		[Address(RVA = "0x18D9318", Offset = "0x18D9318", VA = "0x18D9318", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002EB")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6002022")]
		[Address(RVA = "0x18D938C", Offset = "0x18D938C", VA = "0x18D938C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002EC")]
	public override string InitialLanguage
	{
		[Token(Token = "0x6002023")]
		[Address(RVA = "0x18D941C", Offset = "0x18D941C", VA = "0x18D941C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002ED")]
	public override string SoundbankPath
	{
		[Token(Token = "0x6002024")]
		[Address(RVA = "0x18D9444", Offset = "0x18D9444", VA = "0x18D9444", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002EE")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6002025")]
		[Address(RVA = "0x18D946C", Offset = "0x18D946C", VA = "0x18D946C", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600201D")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x600201E")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x600201F")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x6002026")]
	[Address(RVA = "0x18D94BC", Offset = "0x18D94BC", VA = "0x18D94BC")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x2000369")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x170002EF")]
	protected override int StructureSize
	{
		[Token(Token = "0x6002028")]
		[Address(RVA = "0x18DB144", Offset = "0x18DB144", VA = "0x18DB144", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6002027")]
	[Address(RVA = "0x18DB0E4", Offset = "0x18DB0E4", VA = "0x18DB0E4")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6002029")]
	[Address(RVA = "0x18DB1A4", Offset = "0x18DB1A4", VA = "0x18DB1A4", Slot = "8")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x600202A")]
	[Address(RVA = "0x18DB20C", Offset = "0x18DB20C", VA = "0x18DB20C", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x200036A")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD3910", Offset = "0xFD3910")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type Type;

	[Token(Token = "0x600202B")]
	[Address(RVA = "0x18DCDE0", Offset = "0x18DCDE0", VA = "0x18DCDE0")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x200036B")]
public class AkLogger
{
	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xFD5F5C", Offset = "0xFD5F5C")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x170002F0")]
	public static AkLogger Instance
	{
		[Token(Token = "0x600202D")]
		[Address(RVA = "0x1870BF4", Offset = "0x1870BF4", VA = "0x1870BF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600202C")]
	[Address(RVA = "0x1870A54", Offset = "0x1870A54", VA = "0x1870A54")]
	private AkLogger()
	{
	}

	[Token(Token = "0x600202E")]
	[Address(RVA = "0x1870C5C", Offset = "0x1870C5C", VA = "0x1870C5C", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x600202F")]
	[Address(RVA = "0x1870DD8", Offset = "0x1870DD8", VA = "0x1870DD8")]
	public void Init()
	{
	}

	[Token(Token = "0x6002030")]
	[Address(RVA = "0x18709CC", Offset = "0x18709CC", VA = "0x18709CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xFDE9D0", Offset = "0xFDE9D0")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x6002031")]
	[Address(RVA = "0x1870DDC", Offset = "0x1870DDC", VA = "0x1870DDC")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x6002032")]
	[Address(RVA = "0x1870E64", Offset = "0x1870E64", VA = "0x1870E64")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x6002033")]
	[Address(RVA = "0x1870EEC", Offset = "0x1870EEC", VA = "0x1870EEC")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x200036C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFD3948", Offset = "0xFD3948")]
public class AkMIDIPostArray
{
	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int m_Count;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly int SIZE_OF;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x170002F1")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x6002036")]
		[Address(RVA = "0x1875B54", Offset = "0x1875B54", VA = "0x1875B54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002037")]
		[Address(RVA = "0x1875C70", Offset = "0x1875C70", VA = "0x1875C70")]
		set
		{
		}
	}

	[Token(Token = "0x6002035")]
	[Address(RVA = "0x1875A94", Offset = "0x1875A94", VA = "0x1875A94")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x6002038")]
	[Address(RVA = "0x1875D84", Offset = "0x1875D84", VA = "0x1875D84", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x6002039")]
	[Address(RVA = "0x1875E40", Offset = "0x1875E40", VA = "0x1875E40")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x600203A")]
	[Address(RVA = "0x1875F04", Offset = "0x1875F04", VA = "0x1875F04")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x600203B")]
	[Address(RVA = "0x1876018", Offset = "0x1876018", VA = "0x1876018")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600203C")]
	[Address(RVA = "0x1876020", Offset = "0x1876020", VA = "0x1876020")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600203D")]
	[Address(RVA = "0x1875C34", Offset = "0x1875C34", VA = "0x1875C34")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200036D")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDA2DC", Offset = "0xFDA2DC")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x170002F2")]
	public uint Count
	{
		[Token(Token = "0x600203F")]
		[Address(RVA = "0x187DEA4", Offset = "0x187DEA4", VA = "0x187DEA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEA34", Offset = "0xFDEA34")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002040")]
		[Address(RVA = "0x187DEAC", Offset = "0x187DEAC", VA = "0x187DEAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEA44", Offset = "0xFDEA44")]
		private set
		{
		}
	}

	[Token(Token = "0x600203E")]
	[Address(RVA = "0x187DE14", Offset = "0x187DE14", VA = "0x187DE14")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x6002041")]
	[Address(RVA = "0x187DEB4", Offset = "0x187DEB4", VA = "0x187DEB4", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002042")]
	[Address(RVA = "0x187DF40", Offset = "0x187DF40", VA = "0x187DF40", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x6002043")]
	[Address(RVA = "0x187DFA8", Offset = "0x187DFA8", VA = "0x187DFA8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6002044")]
	[Address(RVA = "0x187DFB8", Offset = "0x187DFB8", VA = "0x187DFB8")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x200036E")]
public class AkPropagationPathInfoArray : AkBaseArray<AkPropagationPathInfo>
{
	[Token(Token = "0x170002F3")]
	protected override int StructureSize
	{
		[Token(Token = "0x6002046")]
		[Address(RVA = "0x188017C", Offset = "0x188017C", VA = "0x188017C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6002045")]
	[Address(RVA = "0x188011C", Offset = "0x188011C", VA = "0x188011C")]
	public AkPropagationPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6002047")]
	[Address(RVA = "0x18801DC", Offset = "0x18801DC", VA = "0x18801DC", Slot = "8")]
	protected override AkPropagationPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6002048")]
	[Address(RVA = "0x1880244", Offset = "0x1880244", VA = "0x1880244", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkPropagationPathInfo other)
	{
	}
}
[Token(Token = "0x200036F")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x170002F4")]
	protected override int StructureSize
	{
		[Token(Token = "0x600204A")]
		[Address(RVA = "0x1881F68", Offset = "0x1881F68", VA = "0x1881F68", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6002049")]
	[Address(RVA = "0x1881F08", Offset = "0x1881F08", VA = "0x1881F08")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x600204B")]
	[Address(RVA = "0x1881FC8", Offset = "0x1881FC8", VA = "0x1881FC8", Slot = "8")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x600204C")]
	[Address(RVA = "0x1882030", Offset = "0x1882030", VA = "0x1882030", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x2000370")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x600204D")]
	[Address(RVA = "0x1885DA0", Offset = "0x1885DA0", VA = "0x1885DA0")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000371")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x170002F5")]
	protected override int StructureSize
	{
		[Token(Token = "0x600204F")]
		[Address(RVA = "0x160153C", Offset = "0x160153C", VA = "0x160153C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600204E")]
	[Address(RVA = "0x15FF350", Offset = "0x15FF350", VA = "0x15FF350")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x6002050")]
	[Address(RVA = "0x160159C", Offset = "0x160159C", VA = "0x160159C", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6002051")]
	[Address(RVA = "0x1601604", Offset = "0x1601604", VA = "0x1601604", Slot = "8")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6002052")]
	[Address(RVA = "0x160166C", Offset = "0x160166C", VA = "0x160166C", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x2000372")]
public class AkUtilities
{
	[Token(Token = "0x2000560")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x4001DF8")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x4001DF9")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x1700041A")]
		public static byte HashSize
		{
			[Token(Token = "0x6002795")]
			[Address(RVA = "0x16033AC", Offset = "0x16033AC", VA = "0x16033AC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002796")]
			[Address(RVA = "0x1603324", Offset = "0x1603324", VA = "0x1603324")]
			set
			{
			}
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x160331C", Offset = "0x160331C", VA = "0x160331C")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x16019EC", Offset = "0x16019EC", VA = "0x16019EC")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x1603414", Offset = "0x1603414", VA = "0x1603414")]
		public ShortIDGenerator()
		{
		}
	}

	[Token(Token = "0x6002053")]
	[Address(RVA = "0x1603314", Offset = "0x1603314", VA = "0x1603314")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x2000373")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x170002F6")]
	protected override int StructureSize
	{
		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1603FDC", Offset = "0x1603FDC", VA = "0x1603FDC", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6002054")]
	[Address(RVA = "0x15FF17C", Offset = "0x15FF17C", VA = "0x15FF17C")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x6002056")]
	[Address(RVA = "0x160403C", Offset = "0x160403C", VA = "0x160403C", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6002057")]
	[Address(RVA = "0x16040A4", Offset = "0x16040A4", VA = "0x16040A4", Slot = "8")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6002058")]
	[Address(RVA = "0x160410C", Offset = "0x160410C", VA = "0x160410C", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x2000374")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x2000561")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x1700041B")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x600279F")]
			[Address(RVA = "0x1606534", Offset = "0x1606534", VA = "0x1606534")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x16065C8", Offset = "0x16065C8", VA = "0x16065C8")]
			set
			{
			}
		}

		[Token(Token = "0x6002799")]
		[Address(RVA = "0x1606058", Offset = "0x1606058", VA = "0x1606058")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x16060F0", Offset = "0x16060F0", VA = "0x16060F0")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x16041CC", Offset = "0x16041CC", VA = "0x16041CC")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x1606158", Offset = "0x1606158", VA = "0x1606158")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x1606214", Offset = "0x1606214", VA = "0x1606214")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x16064CC", Offset = "0x16064CC", VA = "0x16064CC")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000562")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x160603C", Offset = "0x160603C", VA = "0x160603C", Slot = "10")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x1606044", Offset = "0x1606044", VA = "0x1606044", Slot = "11")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x160604C", Offset = "0x160604C", VA = "0x160604C", Slot = "12")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x1606054", Offset = "0x1606054", VA = "0x1606054")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x170002F7")]
	public bool IsValid
	{
		[Token(Token = "0x6002059")]
		[Address(RVA = "0x16042C4", Offset = "0x16042C4", VA = "0x16042C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002F8")]
	public int Count
	{
		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1604328", Offset = "0x1604328", VA = "0x1604328")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002F9")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x600205E")]
		[Address(RVA = "0x1604390", Offset = "0x1604390", VA = "0x1604390")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002FA")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x6002060")]
		[Address(RVA = "0x160467C", Offset = "0x160467C", VA = "0x160467C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600205B")]
	[Address(RVA = "0x1604378", Offset = "0x1604378", VA = "0x1604378", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x600205C")]
	[Address(RVA = "0x1604380", Offset = "0x1604380", VA = "0x1604380", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x600205D")]
	[Address(RVA = "0x1604388", Offset = "0x1604388", VA = "0x1604388", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x600205F")]
	[Address(RVA = "0x16044CC", Offset = "0x16044CC", VA = "0x16044CC")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6002061")]
	[Address(RVA = "0x16047A8", Offset = "0x16047A8", VA = "0x16047A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002062")]
	[Address(RVA = "0x160491C", Offset = "0x160491C", VA = "0x160491C")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6002063")]
	[Address(RVA = "0x1604EEC", Offset = "0x1604EEC", VA = "0x1604EEC")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6002064")]
	[Address(RVA = "0x1604DD4", Offset = "0x1604DD4", VA = "0x1604DD4")]
	private static void LoadInitBank()
	{
	}

	[Token(Token = "0x6002065")]
	[Address(RVA = "0x1604FEC", Offset = "0x1604FEC", VA = "0x1604FEC")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x6002066")]
	[Address(RVA = "0x16051A0", Offset = "0x16051A0", VA = "0x16051A0")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x6002067")]
	[Address(RVA = "0x16052F4", Offset = "0x16052F4", VA = "0x16052F4")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x2000375")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170002FB")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002069")]
		[Address(RVA = "0x29EE6EC", Offset = "0x29EE6EC", VA = "0x29EE6EC", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600206A")]
	[Address(RVA = "0x29EE754", Offset = "0x29EE754", VA = "0x29EE754")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x2000376")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170002FC")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600206C")]
		[Address(RVA = "0x29F01A4", Offset = "0x29F01A4", VA = "0x29F01A4", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600206D")]
	[Address(RVA = "0x29F020C", Offset = "0x29F020C", VA = "0x29F020C")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x2000377")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170002FD")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600206F")]
		[Address(RVA = "0x29F0268", Offset = "0x29F0268", VA = "0x29F0268", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002070")]
	[Address(RVA = "0x29F02D0", Offset = "0x29F02D0", VA = "0x29F02D0")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x2000378")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170002FE")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002072")]
		[Address(RVA = "0x29F18B0", Offset = "0x29F18B0", VA = "0x29F18B0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002073")]
	[Address(RVA = "0x29F1918", Offset = "0x29F1918", VA = "0x29F1918")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x2000379")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AkShowOnly]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AkShowOnly]
	[SerializeField]
	private uint id;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AkShowOnly]
	[SerializeField]
	private string guid;

	[Token(Token = "0x170002FF")]
	public Guid Guid
	{
		[Token(Token = "0x6002075")]
		[Address(RVA = "0x29F2898", Offset = "0x29F2898", VA = "0x29F2898")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x17000300")]
	public string ObjectName
	{
		[Token(Token = "0x6002076")]
		[Address(RVA = "0x29F293C", Offset = "0x29F293C", VA = "0x29F293C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000301")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6002077")]
		[Address(RVA = "0x29F2944", Offset = "0x29F2944", VA = "0x29F2944", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000302")]
	public uint Id
	{
		[Token(Token = "0x6002078")]
		[Address(RVA = "0x29F294C", Offset = "0x29F294C", VA = "0x29F294C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000303")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002079")]
		get;
	}

	[Token(Token = "0x600207A")]
	[Address(RVA = "0x29EE75C", Offset = "0x29EE75C", VA = "0x29EE75C")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x200037A")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x17000304")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x600207B")]
		get;
		[Token(Token = "0x600207C")]
		set;
	}

	[Token(Token = "0x17000305")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x600207D")]
		get;
	}

	[Token(Token = "0x17000306")]
	public override string DisplayName
	{
		[Token(Token = "0x600207E")]
		[Address(RVA = "0x29F1A50", Offset = "0x29F1A50", VA = "0x29F1A50", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600207F")]
	[Address(RVA = "0x29F1B08", Offset = "0x29F1B08", VA = "0x29F1B08")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x200037B")]
public enum WwiseObjectType
{
	[Token(Token = "0x40017A4")]
	None,
	[Token(Token = "0x40017A5")]
	AuxBus,
	[Token(Token = "0x40017A6")]
	Bus,
	[Token(Token = "0x40017A7")]
	Event,
	[Token(Token = "0x40017A8")]
	Folder,
	[Token(Token = "0x40017A9")]
	PhysicalFolder,
	[Token(Token = "0x40017AA")]
	Project,
	[Token(Token = "0x40017AB")]
	Soundbank,
	[Token(Token = "0x40017AC")]
	State,
	[Token(Token = "0x40017AD")]
	StateGroup,
	[Token(Token = "0x40017AE")]
	Switch,
	[Token(Token = "0x40017AF")]
	SwitchGroup,
	[Token(Token = "0x40017B0")]
	WorkUnit,
	[Token(Token = "0x40017B1")]
	GameParameter,
	[Token(Token = "0x40017B2")]
	Trigger,
	[Token(Token = "0x40017B3")]
	AcousticTexture
}
[Token(Token = "0x200037C")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000307")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002080")]
		[Address(RVA = "0x29F323C", Offset = "0x29F323C", VA = "0x29F323C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002081")]
	[Address(RVA = "0x29F32A4", Offset = "0x29F32A4", VA = "0x29F32A4")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x200037D")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x40017B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000308")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002083")]
		[Address(RVA = "0x29F3300", Offset = "0x29F3300", VA = "0x29F3300", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002084")]
	[Address(RVA = "0x29F3368", Offset = "0x29F3368", VA = "0x29F3368")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x200037E")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x40017B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x17000309")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002086")]
		[Address(RVA = "0x29F33C4", Offset = "0x29F33C4", VA = "0x29F33C4", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x1700030A")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6002087")]
		[Address(RVA = "0x29F342C", Offset = "0x29F342C", VA = "0x29F342C", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002088")]
		[Address(RVA = "0x29F3434", Offset = "0x29F3434", VA = "0x29F3434", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700030B")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6002089")]
		[Address(RVA = "0x29F34C8", Offset = "0x29F34C8", VA = "0x29F34C8", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600208A")]
	[Address(RVA = "0x29F3530", Offset = "0x29F3530", VA = "0x29F3530")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x200037F")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700030C")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600208C")]
		[Address(RVA = "0x29F359C", Offset = "0x29F359C", VA = "0x29F359C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600208D")]
	[Address(RVA = "0x29F3604", Offset = "0x29F3604", VA = "0x29F3604")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x2000380")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x1700030D")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600208F")]
		[Address(RVA = "0x29F3660", Offset = "0x29F3660", VA = "0x29F3660", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x1700030E")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6002090")]
		[Address(RVA = "0x29F36C8", Offset = "0x29F36C8", VA = "0x29F36C8", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002091")]
		[Address(RVA = "0x29F36D0", Offset = "0x29F36D0", VA = "0x29F36D0", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700030F")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6002092")]
		[Address(RVA = "0x29F3764", Offset = "0x29F3764", VA = "0x29F3764", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002093")]
	[Address(RVA = "0x29F37CC", Offset = "0x29F37CC", VA = "0x29F37CC")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x2000381")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000310")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002095")]
		[Address(RVA = "0x29F3838", Offset = "0x29F3838", VA = "0x29F3838", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002096")]
	[Address(RVA = "0x29F38A0", Offset = "0x29F38A0", VA = "0x29F38A0")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x2000382")]
public class AkLinuxSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x6002098")]
	[Address(RVA = "0x18709C4", Offset = "0x18709C4", VA = "0x18709C4")]
	public AkLinuxSettings()
	{
	}
}
[Token(Token = "0x2000383")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x6002099")]
	[Address(RVA = "0x1876028", Offset = "0x1876028", VA = "0x1876028")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x2000384")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000563")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x20008A0")]
		public enum AudioAPI
		{
			[Token(Token = "0x4001F52")]
			None = 0,
			[Token(Token = "0x4001F53")]
			Wasapi = 1,
			[Token(Token = "0x4001F54")]
			XAudio2 = 2,
			[Token(Token = "0x4001F55")]
			DirectSound = 4,
			[Token(Token = "0x4001F56")]
			Default = -1
		}

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDBC2C", Offset = "0xFDBC2C")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xFDBC2C", Offset = "0xFDBC2C")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDBCB4", Offset = "0xFDBCB4")]
		public bool m_GlobalFocus;

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x16042A8", Offset = "0x16042A8", VA = "0x16042A8", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x16042AC", Offset = "0x16042AC", VA = "0x16042AC")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x600209A")]
	[Address(RVA = "0x16041B0", Offset = "0x16041B0", VA = "0x16041B0", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x600209B")]
	[Address(RVA = "0x16041B8", Offset = "0x16041B8", VA = "0x16041B8", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x600209C")]
	[Address(RVA = "0x16041C0", Offset = "0x16041C0", VA = "0x16041C0", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x600209D")]
	[Address(RVA = "0x16041C8", Offset = "0x16041C8", VA = "0x16041C8")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x2000385")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x40017C2")]
	Simple_Mode,
	[Token(Token = "0x40017C3")]
	Large_Mode,
	[Token(Token = "0x40017C4")]
	MultiPosition_Mode
}
[Token(Token = "0x2000386")]
public class AkMultiPosEvent
{
	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x600209E")]
	[Address(RVA = "0x1877890", Offset = "0x1877890", VA = "0x1877890")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x600209F")]
	[Address(RVA = "0x1877898", Offset = "0x1877898", VA = "0x1877898")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x2000387")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3980", Offset = "0xFD3980")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDA494", Offset = "0xFDA494")]
	private AkAmbient <ParentAkAmbience>k__BackingField;

	[Token(Token = "0x17000311")]
	public AkAmbient ParentAkAmbience
	{
		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x18CB00C", Offset = "0x18CB00C", VA = "0x18CB00C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEA54", Offset = "0xFDEA54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x18CB014", Offset = "0x18CB014", VA = "0x18CB014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEA64", Offset = "0xFDEA64")]
		set
		{
		}
	}

	[Token(Token = "0x60020A2")]
	[Address(RVA = "0x18CB01C", Offset = "0x18CB01C", VA = "0x18CB01C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60020A3")]
	[Address(RVA = "0x18CB74C", Offset = "0x18CB74C", VA = "0x18CB74C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60020A4")]
	[Address(RVA = "0x18CB914", Offset = "0x18CB914", VA = "0x18CB914", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60020A5")]
	[Address(RVA = "0x18CBD64", Offset = "0x18CBD64", VA = "0x18CBD64")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60020A6")]
	[Address(RVA = "0x18CB58C", Offset = "0x18CB58C", VA = "0x18CB58C")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x60020A7")]
	[Address(RVA = "0x18CB3B4", Offset = "0x18CB3B4", VA = "0x18CB3B4")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x60020A8")]
	[Address(RVA = "0x18CBDD4", Offset = "0x18CBDD4", VA = "0x18CBDD4")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x2000388")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD39B8", Offset = "0xFD39B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD39B8", Offset = "0xFD39B8")]
[DisallowMultipleComponent]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x2000564")]
	public class BaseListenerList
	{
		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x1700041C")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x18CF444", Offset = "0x18CF444", VA = "0x18CF444")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x18CF44C", Offset = "0x18CF44C", VA = "0x18CF44C", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x18CF53C", Offset = "0x18CF53C", VA = "0x18CF53C", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x18CF62C", Offset = "0x18CF62C", VA = "0x18CF62C")]
		public ulong[] GetListenerIds()
		{
			return null;
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x18CF684", Offset = "0x18CF684", VA = "0x18CF684")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x2000565")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x18CF734", Offset = "0x18CF734", VA = "0x18CF734", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x18CF808", Offset = "0x18CF808", VA = "0x18CF808", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x18CF440", Offset = "0x18CF440", VA = "0x18CF440")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x17000312")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x18CEAC4", Offset = "0x18CEAC4", VA = "0x18CEAC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60020AB")]
	[Address(RVA = "0x18CEB2C", Offset = "0x18CEB2C", VA = "0x18CEB2C")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x60020AC")]
	[Address(RVA = "0x18CEBB0", Offset = "0x18CEBB0", VA = "0x18CEBB0")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x60020AD")]
	[Address(RVA = "0x18CEC34", Offset = "0x18CEC34", VA = "0x18CEC34")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x60020AE")]
	[Address(RVA = "0x18CED94", Offset = "0x18CED94", VA = "0x18CED94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020AF")]
	[Address(RVA = "0x18CEF34", Offset = "0x18CEF34", VA = "0x18CEF34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60020B0")]
	[Address(RVA = "0x18CF010", Offset = "0x18CF010", VA = "0x18CF010")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60020B1")]
	[Address(RVA = "0x18CF0EC", Offset = "0x18CF0EC", VA = "0x18CF0EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60020B2")]
	[Address(RVA = "0x18CF250", Offset = "0x18CF250", VA = "0x18CF250")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x60020B3")]
	[Address(RVA = "0x18CF258", Offset = "0x18CF258", VA = "0x18CF258")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x60020B4")]
	[Address(RVA = "0x18CF31C", Offset = "0x18CF31C", VA = "0x18CF31C")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x2000389")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3A50", Offset = "0xFD3A50")]
[ExecuteInEditMode]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bank data;

	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x40017D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x40017D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x40017D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x40017D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDA4B4", Offset = "0xFDA4B4")]
	private string bankNameInternal;

	[Token(Token = "0x40017D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDA510", Offset = "0xFDA510")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x17000313")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1638", Offset = "0xFE1638")]
	public string bankName
	{
		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x18D14FC", Offset = "0x18D14FC", VA = "0x18D14FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000314")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1670", Offset = "0xFE1670")]
	public byte[] valueGuid
	{
		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x18D156C", Offset = "0x18D156C", VA = "0x18D156C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60020B6")]
	[Address(RVA = "0x18D126C", Offset = "0x18D126C", VA = "0x18D126C", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60020B7")]
	[Address(RVA = "0x18D135C", Offset = "0x18D135C", VA = "0x18D135C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60020B8")]
	[Address(RVA = "0x18D13E4", Offset = "0x18D13E4", VA = "0x18D13E4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60020B9")]
	[Address(RVA = "0x18D1344", Offset = "0x18D1344", VA = "0x18D1344")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60020BA")]
	[Address(RVA = "0x18D1424", Offset = "0x18D1424", VA = "0x18D1424", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60020BD")]
	[Address(RVA = "0x18D1630", Offset = "0x18D1630", VA = "0x18D1630")]
	public AkBank()
	{
	}
}
[Token(Token = "0x200038A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3A9C", Offset = "0xFD3A9C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3A9C", Offset = "0xFD3A9C")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x40017D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x60020BE")]
	[Address(RVA = "0x18DBE9C", Offset = "0x18DBE9C", VA = "0x18DBE9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020BF")]
	[Address(RVA = "0x18DBF08", Offset = "0x18DBF08", VA = "0x18DBF08", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x60020C0")]
	[Address(RVA = "0x18DC0AC", Offset = "0x18DC0AC", VA = "0x18DC0AC", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x60020C1")]
	[Address(RVA = "0x18DC1E4", Offset = "0x18DC1E4", VA = "0x18DC1E4")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x200038B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3B24", Offset = "0xFD3B24")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3B24", Offset = "0xFD3B24")]
[ExecuteInEditMode]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x2000566")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x18DD0A4", Offset = "0x18DD0A4", VA = "0x18DD0A4", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x18DD094", Offset = "0x18DD094", VA = "0x18DD094")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x2000567")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x18DD144", Offset = "0x18DD144", VA = "0x18DD144", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x18DD09C", Offset = "0x18DD09C", VA = "0x18DD09C")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x40017DA")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x40017DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x40017DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x40017DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x40017DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x40017E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDA56C", Offset = "0xFDA56C")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x40017E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x40017E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDA57C", Offset = "0xFDA57C")]
	private int auxBusIdInternal;

	[Token(Token = "0x40017E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDA5D8", Offset = "0xFDA5D8")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x17000315")]
	public Collider Collider
	{
		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x18DCE14", Offset = "0x18DCE14", VA = "0x18DCE14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEA74", Offset = "0xFDEA74")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x18DCE1C", Offset = "0x18DCE1C", VA = "0x18DCE1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEA84", Offset = "0xFDEA84")]
		private set
		{
		}
	}

	[Token(Token = "0x17000316")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE16A8", Offset = "0xFE16A8")]
	public int m_auxBusID
	{
		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x18DCE8C", Offset = "0x18DCE8C", VA = "0x18DCE8C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000317")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE16E0", Offset = "0xFE16E0")]
	public byte[] valueGuid
	{
		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x18DCE9C", Offset = "0x18DCE9C", VA = "0x18DCE9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60020C4")]
	[Address(RVA = "0x18DCE24", Offset = "0x18DCE24", VA = "0x18DCE24")]
	public float GetAuxSendValueForPosition(Vector3 in_position)
	{
		return default(float);
	}

	[Token(Token = "0x60020C5")]
	[Address(RVA = "0x18DCE2C", Offset = "0x18DCE2C", VA = "0x18DCE2C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60020C8")]
	[Address(RVA = "0x18DCF60", Offset = "0x18DCF60", VA = "0x18DCF60")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFDEA94", Offset = "0xFDEA94")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x60020C9")]
	[Address(RVA = "0x18DCF78", Offset = "0x18DCF78", VA = "0x18DCF78")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFDEACC", Offset = "0xFDEACC")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x60020CA")]
	[Address(RVA = "0x18DCF80", Offset = "0x18DCF80", VA = "0x18DCF80")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x200038C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3BBC", Offset = "0xFD3BBC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3BBC", Offset = "0xFD3BBC")]
[ExecuteInEditMode]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x40017E4")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x40017E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x60020CC")]
	[Address(RVA = "0x18DD1A0", Offset = "0x18DD1A0", VA = "0x18DD1A0")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x60020CD")]
	[Address(RVA = "0x18DD404", Offset = "0x18DD404", VA = "0x18DD404")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x200038D")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x60020CE")]
	[Address(RVA = "0x18DD554", Offset = "0x18DD554", VA = "0x18DD554")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x200038E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3C54", Offset = "0xFD3C54")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3C54", Offset = "0xFD3C54")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x2000568")]
	public class CallbackData
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x18DD61C", Offset = "0x18DD61C", VA = "0x18DD61C")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x18DD7F0", Offset = "0x18DD7F0", VA = "0x18DD7F0")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x40017ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AK.Wwise.Event data;

	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x40017F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x40017F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x40017F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x40017F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDA634", Offset = "0xFDA634")]
	private int eventIdInternal;

	[Token(Token = "0x40017F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDA690", Offset = "0xFDA690")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x40017F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDA6EC", Offset = "0xFDA6EC")]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x17000318")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x18DD4AC", Offset = "0x18DD4AC", VA = "0x18DD4AC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000319")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1718", Offset = "0xFE1718")]
	public int eventID
	{
		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x18DD714", Offset = "0x18DD714", VA = "0x18DD714")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700031A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1750", Offset = "0xFE1750")]
	public byte[] valueGuid
	{
		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x18DD724", Offset = "0x18DD724", VA = "0x18DD724")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1788", Offset = "0xFE1788")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x18DD7E8", Offset = "0x18DD7E8", VA = "0x18DD7E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60020D0")]
	[Address(RVA = "0x18DD4B4", Offset = "0x18DD4B4", VA = "0x18DD4B4", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60020D1")]
	[Address(RVA = "0x18DD55C", Offset = "0x18DD55C", VA = "0x18DD55C")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x60020D2")]
	[Address(RVA = "0x18CBAE4", Offset = "0x18CBAE4", VA = "0x18CBAE4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60020D3")]
	[Address(RVA = "0x18DD6E0", Offset = "0x18DD6E0", VA = "0x18DD6E0")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x60020D4")]
	[Address(RVA = "0x18DD6E8", Offset = "0x18DD6E8", VA = "0x18DD6E8")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x60020D8")]
	[Address(RVA = "0x18CBE54", Offset = "0x18CBE54", VA = "0x18CBE54")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x200038F")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x40017F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x40017F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x40017F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x40017FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x60020D9")]
	[Address(RVA = "0x18DD7F8", Offset = "0x18DD7F8", VA = "0x18DD7F8")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x2000390")]
public class WwiseEventTracker
{
	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float currentDuration;

	[Token(Token = "0x40017FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float currentDurationProportion;

	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool eventIsPlaying;

	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool fadeoutTriggered;

	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public uint playingID;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float previousEventStartTime;

	[Token(Token = "0x60020DA")]
	[Address(RVA = "0x29F1974", Offset = "0x29F1974", VA = "0x29F1974")]
	public void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x60020DB")]
	[Address(RVA = "0x29F1A3C", Offset = "0x29F1A3C", VA = "0x29F1A3C")]
	public WwiseEventTracker()
	{
	}
}
[Serializable]
[Token(Token = "0x2000391")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly WwiseEventTracker eventTracker;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float blendInDuration;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float blendOutDuration;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float easeInDuration;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float easeOutDuration;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float eventDurationMax;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float eventDurationMin;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TimelineClip owningClip;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool retriggerEvent;

	[Token(Token = "0x1700031C")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x18DDA0C", Offset = "0x18DDA0C", VA = "0x18DDA0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x18DDA14", Offset = "0x18DDA14", VA = "0x18DDA14")]
		set
		{
		}
	}

	[Token(Token = "0x1700031D")]
	public override double duration
	{
		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x18DDA1C", Offset = "0x18DDA1C", VA = "0x18DDA1C", Slot = "7")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700031E")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x18DDA38", Offset = "0x18DDA38", VA = "0x18DDA38", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60020E0")]
	[Address(RVA = "0x18DDA44", Offset = "0x18DDA44", VA = "0x18DDA44")]
	public void setEaseInDuration(float d)
	{
	}

	[Token(Token = "0x60020E1")]
	[Address(RVA = "0x18DDA4C", Offset = "0x18DDA4C", VA = "0x18DDA4C")]
	public void setEaseOutDuration(float d)
	{
	}

	[Token(Token = "0x60020E2")]
	[Address(RVA = "0x18DDA54", Offset = "0x18DDA54", VA = "0x18DDA54")]
	public void setBlendInDuration(float d)
	{
	}

	[Token(Token = "0x60020E3")]
	[Address(RVA = "0x18DDA5C", Offset = "0x18DDA5C", VA = "0x18DDA5C")]
	public void setBlendOutDuration(float d)
	{
	}

	[Token(Token = "0x60020E4")]
	[Address(RVA = "0x18DDA64", Offset = "0x18DDA64", VA = "0x18DDA64", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60020E5")]
	[Address(RVA = "0x18DDB6C", Offset = "0x18DDB6C", VA = "0x18DDB6C")]
	public void initializeBehaviour(PlayableGraph graph, AkEventPlayableBehavior b, GameObject owner)
	{
	}

	[Token(Token = "0x60020E6")]
	[Address(RVA = "0x18DDC84", Offset = "0x18DDC84", VA = "0x18DDC84")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x2000392")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x2000569")]
	[Flags]
	public enum AkPlayableAction
	{
		[Token(Token = "0x4001E0A")]
		None = 0,
		[Token(Token = "0x4001E0B")]
		Playback = 1,
		[Token(Token = "0x4001E0C")]
		Retrigger = 2,
		[Token(Token = "0x4001E0D")]
		Stop = 4,
		[Token(Token = "0x4001E0E")]
		DelayedStop = 8,
		[Token(Token = "0x4001E0F")]
		Seek = 0x10,
		[Token(Token = "0x4001E10")]
		FadeIn = 0x20,
		[Token(Token = "0x4001E11")]
		FadeOut = 0x40
	}

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scrubPlaybackLengthMs;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float akEventMaxDuration;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float akEventMinDuration;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float blendInDuration;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blendOutDuration;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float easeInDuration;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float easeOutDuration;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject eventObject;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool eventShouldRetrigger;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WwiseEventTracker eventTracker;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lastEffectiveWeight;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool overrideTrackEmittorObject;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AkPlayableAction requiredActions;

	[Token(Token = "0x60020E7")]
	[Address(RVA = "0x18DDD00", Offset = "0x18DDD00", VA = "0x18DDD00", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60020E8")]
	[Address(RVA = "0x18DE020", Offset = "0x18DE020", VA = "0x18DE020", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60020E9")]
	[Address(RVA = "0x18DE264", Offset = "0x18DE264", VA = "0x18DE264", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60020EA")]
	[Address(RVA = "0x18DE3B0", Offset = "0x18DE3B0", VA = "0x18DE3B0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60020EB")]
	[Address(RVA = "0x18DE5F4", Offset = "0x18DE5F4", VA = "0x18DE5F4")]
	private bool actionIsRequired(AkPlayableAction actionType)
	{
		return default(bool);
	}

	[Token(Token = "0x60020EC")]
	[Address(RVA = "0x18DDEA4", Offset = "0x18DDEA4", VA = "0x18DDEA4")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x60020ED")]
	[Address(RVA = "0x18DEBA4", Offset = "0x18DEBA4", VA = "0x18DEBA4")]
	private bool fadeInRequired(float currentClipTime)
	{
		return default(bool);
	}

	[Token(Token = "0x60020EE")]
	[Address(RVA = "0x18DDFAC", Offset = "0x18DDFAC", VA = "0x18DDFAC")]
	private void checkForFadeIn(float currentClipTime)
	{
	}

	[Token(Token = "0x60020EF")]
	[Address(RVA = "0x18DEBCC", Offset = "0x18DEBCC", VA = "0x18DEBCC")]
	private void checkForFadeInImmediate(float currentClipTime)
	{
	}

	[Token(Token = "0x60020F0")]
	[Address(RVA = "0x18DEBF4", Offset = "0x18DEBF4", VA = "0x18DEBF4")]
	private bool fadeOutRequired(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x60020F1")]
	[Address(RVA = "0x18DECAC", Offset = "0x18DECAC", VA = "0x18DECAC")]
	private void checkForFadeOutImmediate(Playable playable)
	{
	}

	[Token(Token = "0x60020F2")]
	[Address(RVA = "0x18DDFE0", Offset = "0x18DDFE0", VA = "0x18DDFE0")]
	private void checkForFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x60020F3")]
	[Address(RVA = "0x18DE9A0", Offset = "0x18DE9A0", VA = "0x18DE9A0")]
	protected void triggerFadeIn(float currentClipTime)
	{
	}

	[Token(Token = "0x60020F4")]
	[Address(RVA = "0x18DEAD0", Offset = "0x18DEAD0", VA = "0x18DEAD0")]
	protected void triggerFadeOut(float fadeDuration)
	{
	}

	[Token(Token = "0x60020F5")]
	[Address(RVA = "0x18DE2F0", Offset = "0x18DE2F0", VA = "0x18DE2F0")]
	protected void stopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x60020F6")]
	[Address(RVA = "0x18DE604", Offset = "0x18DE604", VA = "0x18DE604")]
	protected void playEvent()
	{
	}

	[Token(Token = "0x60020F7")]
	[Address(RVA = "0x18DE72C", Offset = "0x18DE72C", VA = "0x18DE72C")]
	protected void retriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x60020F8")]
	[Address(RVA = "0x18DE160", Offset = "0x18DE160", VA = "0x18DE160")]
	protected float getProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x60020F9")]
	[Address(RVA = "0x18DE88C", Offset = "0x18DE88C", VA = "0x18DE88C")]
	protected float seekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x60020FA")]
	[Address(RVA = "0x18DED7C", Offset = "0x18DED7C", VA = "0x18DED7C")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x2000393")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xFD3CDC", Offset = "0xFD3CDC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xFD3CDC", Offset = "0xFD3CDC")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xFD3CDC", Offset = "0xFD3CDC")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x60020FC")]
	[Address(RVA = "0x18DEDE8", Offset = "0x18DEDE8", VA = "0x18DEDE8", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60020FD")]
	[Address(RVA = "0x18DEEC0", Offset = "0x18DEEC0", VA = "0x18DEEC0")]
	public void setFadeTimes()
	{
	}

	[Token(Token = "0x60020FE")]
	[Address(RVA = "0x18DF1DC", Offset = "0x18DF1DC", VA = "0x18DF1DC")]
	public void setOwnerClips()
	{
	}

	[Token(Token = "0x60020FF")]
	[Address(RVA = "0x18DF498", Offset = "0x18DF498", VA = "0x18DF498")]
	public double getBlendInTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x6002100")]
	[Address(RVA = "0x18DF818", Offset = "0x18DF818", VA = "0x18DF818")]
	public double getBlendOutTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x6002101")]
	[Address(RVA = "0x18DFB98", Offset = "0x18DFB98", VA = "0x18DFB98")]
	public double getEaseInTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x6002102")]
	[Address(RVA = "0x18DFF18", Offset = "0x18DFF18", VA = "0x18DFF18")]
	public double getEaseOutTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x6002103")]
	[Address(RVA = "0x18E0298", Offset = "0x18E0298", VA = "0x18E0298")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x2000394")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x6002104")]
	[Address(RVA = "0x18E2508", Offset = "0x18E2508", VA = "0x18E2508")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x6002105")]
	[Address(RVA = "0x18E2718", Offset = "0x18E2718", VA = "0x18E2718")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x6002106")]
	[Address(RVA = "0x18E1AC4", Offset = "0x18E1AC4", VA = "0x18E1AC4")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x6002107")]
	[Address(RVA = "0x18E2840", Offset = "0x18E2840", VA = "0x18E2840")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6002108")]
	[Address(RVA = "0x18E29A4", Offset = "0x18E29A4", VA = "0x18E29A4")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6002109")]
	[Address(RVA = "0x18E198C", Offset = "0x18E198C", VA = "0x18E198C")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x600210A")]
	[Address(RVA = "0x18E2A2C", Offset = "0x18E2A2C", VA = "0x18E2A2C")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x600210B")]
	[Address(RVA = "0x18E2214", Offset = "0x18E2214", VA = "0x18E2214")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x600210C")]
	[Address(RVA = "0x18E1844", Offset = "0x18E1844", VA = "0x18E1844")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000395")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x600210D")]
	[Address(RVA = "0x186C150", Offset = "0x186C150", VA = "0x186C150")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x600210E")]
	[Address(RVA = "0x186C53C", Offset = "0x186C53C", VA = "0x186C53C")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x600210F")]
	[Address(RVA = "0x186C640", Offset = "0x186C640", VA = "0x186C640", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6002110")]
	[Address(RVA = "0x186C788", Offset = "0x186C788", VA = "0x186C788", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6002111")]
	[Address(RVA = "0x186C938", Offset = "0x186C938", VA = "0x186C938")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x2000396")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x6002112")]
	[Address(RVA = "0x186C9BC", Offset = "0x186C9BC", VA = "0x186C9BC")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x2000397")]
public class AkGameObjPositionData
{
	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x6002113")]
	[Address(RVA = "0x186C9C4", Offset = "0x186C9C4", VA = "0x186C9C4")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000398")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;

	[Token(Token = "0x6002114")]
	[Address(RVA = "0x186C9CC", Offset = "0x186C9CC", VA = "0x186C9CC")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x2000399")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3D90", Offset = "0xFD3D90")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x6002115")]
	[Address(RVA = "0x186FC3C", Offset = "0x186FC3C", VA = "0x186FC3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002116")]
	[Address(RVA = "0x186FD2C", Offset = "0x186FD2C", VA = "0x186FD2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002117")]
	[Address(RVA = "0x186FDA0", Offset = "0x186FDA0", VA = "0x186FDA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002118")]
	[Address(RVA = "0x186FE48", Offset = "0x186FE48", VA = "0x186FE48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002119")]
	[Address(RVA = "0x186FEF8", Offset = "0x186FEF8", VA = "0x186FEF8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600211A")]
	[Address(RVA = "0x186FFB4", Offset = "0x186FFB4", VA = "0x186FFB4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600211B")]
	[Address(RVA = "0x1870070", Offset = "0x1870070", VA = "0x1870070")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600211C")]
	[Address(RVA = "0x1870118", Offset = "0x1870118", VA = "0x1870118")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600211D")]
	[Address(RVA = "0x18701C0", Offset = "0x18701C0", VA = "0x18701C0")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x200039A")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5F80", Offset = "0xFD5F80")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x1700041D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x1876ECC", Offset = "0x1876ECC", VA = "0x1876ECC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x1876F34", Offset = "0x1876F34", VA = "0x1876F34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x1876AF4", Offset = "0x1876AF4", VA = "0x1876AF4")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x1876CAC", Offset = "0x1876CAC", VA = "0x1876CAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x1876CB0", Offset = "0x1876CB0", VA = "0x1876CB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x1876ED4", Offset = "0x1876ED4", VA = "0x1876ED4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400182E")]
	private const int WaitMs = 50;

	[Token(Token = "0x400182F")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x4001830")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x600211E")]
	[Address(RVA = "0x1876598", Offset = "0x1876598", VA = "0x1876598")]
	private void Start()
	{
	}

	[Token(Token = "0x600211F")]
	[Address(RVA = "0x18766B4", Offset = "0x18766B4", VA = "0x18766B4")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6002120")]
	[Address(RVA = "0x18765AC", Offset = "0x18765AC", VA = "0x18765AC")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6002121")]
	[Address(RVA = "0x187684C", Offset = "0x187684C", VA = "0x187684C")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x6002122")]
	[Address(RVA = "0x1876A78", Offset = "0x1876A78", VA = "0x1876A78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEB04", Offset = "0xFDEB04")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x6002123")]
	[Address(RVA = "0x1876784", Offset = "0x1876784", VA = "0x1876784")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x6002124")]
	[Address(RVA = "0x1876B20", Offset = "0x1876B20", VA = "0x1876B20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002125")]
	[Address(RVA = "0x1876C48", Offset = "0x1876C48", VA = "0x1876C48")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x200039B")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x200056B")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x1879988", Offset = "0x1879988", VA = "0x1879988")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x18792AC", Offset = "0x18792AC", VA = "0x18792AC")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float fadeRate;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA798", Offset = "0xFDA798")]
	public float fadeTime;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA7D0", Offset = "0xFDA7D0")]
	public LayerMask LayerMask;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA808", Offset = "0xFDA808")]
	public float maxDistance;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA840", Offset = "0xFDA840")]
	public float refreshInterval;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float refreshTime;

	[Token(Token = "0x6002126")]
	[Address(RVA = "0x1878FF4", Offset = "0x1878FF4", VA = "0x1878FF4")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6002127")]
	[Address(RVA = "0x1879034", Offset = "0x1879034", VA = "0x1879034")]
	protected void UpdateObstructionOcclusionValues(List<AkAudioListener> listenerList)
	{
	}

	[Token(Token = "0x6002128")]
	[Address(RVA = "0x18792B4", Offset = "0x18792B4", VA = "0x18792B4")]
	protected void UpdateObstructionOcclusionValues(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6002129")]
	[Address(RVA = "0x187950C", Offset = "0x187950C", VA = "0x187950C")]
	private void CastRays()
	{
	}

	[Token(Token = "0x600212A")]
	protected abstract void UpdateObstructionOcclusionValuesForListeners();

	[Token(Token = "0x600212B")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x600212C")]
	[Address(RVA = "0x1879840", Offset = "0x1879840", VA = "0x1879840")]
	private void Update()
	{
	}

	[Token(Token = "0x600212D")]
	[Address(RVA = "0x1879A78", Offset = "0x1879A78", VA = "0x1879A78")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x200039C")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDA878", Offset = "0xFDA878")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDA888", Offset = "0xFDA888")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x1700031F")]
	public RTPC Parameter
	{
		[Token(Token = "0x600212E")]
		[Address(RVA = "0x18802E8", Offset = "0x18802E8", VA = "0x18802E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEB68", Offset = "0xFDEB68")]
		get
		{
			return null;
		}
		[Token(Token = "0x600212F")]
		[Address(RVA = "0x18802F0", Offset = "0x18802F0", VA = "0x18802F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEB78", Offset = "0xFDEB78")]
		set
		{
		}
	}

	[Token(Token = "0x17000320")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x6002130")]
		[Address(RVA = "0x18802F8", Offset = "0x18802F8", VA = "0x18802F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEB88", Offset = "0xFDEB88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1880300", Offset = "0x1880300", VA = "0x1880300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDEB98", Offset = "0xFDEB98")]
		set
		{
		}
	}

	[Token(Token = "0x17000321")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1880308", Offset = "0x1880308", VA = "0x1880308", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6002133")]
	[Address(RVA = "0x1880310", Offset = "0x1880310", VA = "0x1880310", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6002134")]
	[Address(RVA = "0x188040C", Offset = "0x188040C", VA = "0x188040C")]
	public void InitializeBehavior(PlayableGraph graph, ref AkRTPCPlayableBehaviour b, GameObject owner)
	{
	}

	[Token(Token = "0x6002135")]
	[Address(RVA = "0x18804FC", Offset = "0x18804FC", VA = "0x18804FC")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x200039D")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_OverrideTrackObject;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RTPC m_Parameter;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_RTPCObject;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_SetRTPCGlobally;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RTPCValue;

	[Token(Token = "0x17000322")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x6002136")]
		[Address(RVA = "0x1880578", Offset = "0x1880578", VA = "0x1880578")]
		set
		{
		}
	}

	[Token(Token = "0x17000323")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x6002137")]
		[Address(RVA = "0x1880584", Offset = "0x1880584", VA = "0x1880584")]
		set
		{
		}
	}

	[Token(Token = "0x17000324")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x6002139")]
		[Address(RVA = "0x1880598", Offset = "0x1880598", VA = "0x1880598")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002138")]
		[Address(RVA = "0x1880590", Offset = "0x1880590", VA = "0x1880590")]
		set
		{
		}
	}

	[Token(Token = "0x17000325")]
	public RTPC parameter
	{
		[Token(Token = "0x600213A")]
		[Address(RVA = "0x18805A0", Offset = "0x18805A0", VA = "0x18805A0")]
		set
		{
		}
	}

	[Token(Token = "0x600213B")]
	[Address(RVA = "0x18805A8", Offset = "0x18805A8", VA = "0x18805A8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600213C")]
	[Address(RVA = "0x1880570", Offset = "0x1880570", VA = "0x1880570")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x200039E")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xFD3DEC", Offset = "0xFD3DEC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xFD3DEC", Offset = "0xFD3DEC")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xFD3DEC", Offset = "0xFD3DEC")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x600213D")]
	[Address(RVA = "0x18806F0", Offset = "0x18806F0", VA = "0x18806F0", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600213E")]
	[Address(RVA = "0x18807AC", Offset = "0x18807AC", VA = "0x18807AC")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x600213F")]
	[Address(RVA = "0x1880A98", Offset = "0x1880A98", VA = "0x1880A98")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6002140")]
	[Address(RVA = "0x1880D58", Offset = "0x1880D58", VA = "0x1880D58")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x200039F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3E9C", Offset = "0xFD3E9C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3E9C", Offset = "0xFD3E9C")]
[DisallowMultipleComponent]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x200056C")]
	public class PriorityList
	{
		[Token(Token = "0x20008A1")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0x18831F4", Offset = "0x18831F4", VA = "0x18831F4", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x18831EC", Offset = "0x18831EC", VA = "0x18831EC")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AkRoom> rooms;

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x1882DE4", Offset = "0x1882DE4", VA = "0x1882DE4")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x1882EAC", Offset = "0x1882EAC", VA = "0x1882EAC")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x1882F10", Offset = "0x1882F10", VA = "0x1882F10")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x188307C", Offset = "0x188307C", VA = "0x188307C")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x18830E4", Offset = "0x18830E4", VA = "0x18830E4")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x1882FA0", Offset = "0x1882FA0", VA = "0x1882FA0")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x1883100", Offset = "0x1883100", VA = "0x1883100")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA898", Offset = "0xFDA898")]
	public int priority;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDA8D0", Offset = "0xFDA8D0")]
	public float reverbLevel;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDA8E8", Offset = "0xFDA8E8")]
	public float wallOcclusion;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AK.Wwise.Event roomToneEvent;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDA900", Offset = "0xFDA900")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA900", Offset = "0xFDA900")]
	public float roomToneAuxSend;

	[Token(Token = "0x17000326")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x6002141")]
		[Address(RVA = "0x18820D4", Offset = "0x18820D4", VA = "0x18820D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002142")]
	[Address(RVA = "0x18821B0", Offset = "0x18821B0", VA = "0x18821B0")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6002143")]
	[Address(RVA = "0x1882228", Offset = "0x1882228", VA = "0x1882228")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002144")]
	[Address(RVA = "0x18829B4", Offset = "0x18829B4", VA = "0x18829B4", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6002145")]
	[Address(RVA = "0x18829BC", Offset = "0x18829BC", VA = "0x18829BC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002146")]
	[Address(RVA = "0x18829F4", Offset = "0x18829F4", VA = "0x18829F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002147")]
	[Address(RVA = "0x1882B04", Offset = "0x1882B04", VA = "0x1882B04")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6002148")]
	[Address(RVA = "0x1882BE0", Offset = "0x1882BE0", VA = "0x1882BE0")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6002149")]
	[Address(RVA = "0x1882CBC", Offset = "0x1882CBC", VA = "0x1882CBC")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x20003A0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3F34", Offset = "0xFD3F34")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3F34", Offset = "0xFD3F34")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x4001854")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkVector extent;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkTransform portalTransform;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ulong backRoomID;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ulong frontRoomID;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AkRoom[] rooms;

	[Token(Token = "0x17000327")]
	public bool IsValid
	{
		[Token(Token = "0x600214B")]
		[Address(RVA = "0x1883840", Offset = "0x1883840", VA = "0x1883840")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600214C")]
	[Address(RVA = "0x1883854", Offset = "0x1883854", VA = "0x1883854")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x600214D")]
	[Address(RVA = "0x1883870", Offset = "0x1883870", VA = "0x1883870", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600214E")]
	[Address(RVA = "0x1883D74", Offset = "0x1883D74", VA = "0x1883D74", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600214F")]
	[Address(RVA = "0x1883DFC", Offset = "0x1883DFC", VA = "0x1883DFC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002150")]
	[Address(RVA = "0x1883D6C", Offset = "0x1883D6C", VA = "0x1883D6C")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002151")]
	[Address(RVA = "0x1883E14", Offset = "0x1883E14", VA = "0x1883E14", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6002152")]
	[Address(RVA = "0x1883E04", Offset = "0x1883E04", VA = "0x1883E04")]
	public void Open()
	{
	}

	[Token(Token = "0x6002153")]
	[Address(RVA = "0x1883E0C", Offset = "0x1883E0C", VA = "0x1883E0C")]
	public void Close()
	{
	}

	[Token(Token = "0x6002154")]
	[Address(RVA = "0x1883EEC", Offset = "0x1883EEC", VA = "0x1883EEC")]
	private void ActivatePortal(bool active)
	{
	}

	[Token(Token = "0x6002155")]
	[Address(RVA = "0x18840FC", Offset = "0x18840FC", VA = "0x18840FC")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x6002156")]
	[Address(RVA = "0x1884314", Offset = "0x1884314", VA = "0x1884314")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x6002157")]
	[Address(RVA = "0x18844F4", Offset = "0x18844F4", VA = "0x18844F4")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6002158")]
	[Address(RVA = "0x1884638", Offset = "0x1884638", VA = "0x1884638")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6002159")]
	[Address(RVA = "0x1884770", Offset = "0x1884770", VA = "0x1884770")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x600215A")]
	[Address(RVA = "0x1884A68", Offset = "0x1884A68", VA = "0x1884A68")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x20003A1")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD3FCC", Offset = "0xFD3FCC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD3FCC", Offset = "0xFD3FCC")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x600215B")]
	[Address(RVA = "0x1884B70", Offset = "0x1884B70", VA = "0x1884B70")]
	private void Awake()
	{
	}

	[Token(Token = "0x600215C")]
	[Address(RVA = "0x1884BF4", Offset = "0x1884BF4", VA = "0x1884BF4", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x600215D")]
	[Address(RVA = "0x1884C64", Offset = "0x1884C64", VA = "0x1884C64", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x600215E")]
	[Address(RVA = "0x1884DAC", Offset = "0x1884DAC", VA = "0x1884DAC")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x20003A2")]
public class AkSoundEngineController
{
	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x17000328")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x600215F")]
		[Address(RVA = "0x2960AA0", Offset = "0x2960AA0", VA = "0x2960AA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002160")]
	[Address(RVA = "0x2960B28", Offset = "0x2960B28", VA = "0x2960B28")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x6002161")]
	[Address(RVA = "0x2960B30", Offset = "0x2960B30", VA = "0x2960B30", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x6002162")]
	[Address(RVA = "0x2960BE0", Offset = "0x2960BE0", VA = "0x2960BE0")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x6002163")]
	[Address(RVA = "0x2960C28", Offset = "0x2960C28", VA = "0x2960C28")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x6002164")]
	[Address(RVA = "0x2960CCC", Offset = "0x2960CCC", VA = "0x2960CCC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6002165")]
	[Address(RVA = "0x2960D7C", Offset = "0x2960D7C", VA = "0x2960D7C")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x6002166")]
	[Address(RVA = "0x2960F34", Offset = "0x2960F34", VA = "0x2960F34")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6002167")]
	[Address(RVA = "0x2960F38", Offset = "0x2960F38", VA = "0x2960F38")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6002168")]
	[Address(RVA = "0x2960F98", Offset = "0x2960F98", VA = "0x2960F98")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6002169")]
	[Address(RVA = "0x2960F9C", Offset = "0x2960F9C", VA = "0x2960F9C")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600216A")]
	[Address(RVA = "0x2960FA0", Offset = "0x2960FA0", VA = "0x2960FA0")]
	private void ActivateAudio(bool activate)
	{
	}
}
[Token(Token = "0x20003A3")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x600216B")]
	[Address(RVA = "0x15FCA24", Offset = "0x15FCA24", VA = "0x15FCA24")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x600216C")]
	[Address(RVA = "0x15FCABC", Offset = "0x15FCABC", VA = "0x15FCABC")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x600216D")]
	[Address(RVA = "0x15FCAF0", Offset = "0x15FCAF0", VA = "0x15FCAF0")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x600216E")]
	[Address(RVA = "0x15FCB24", Offset = "0x15FCB24", VA = "0x15FCB24")]
	public void SetGameObjectInRoom()
	{
	}

	[Token(Token = "0x600216F")]
	[Address(RVA = "0x15FCC54", Offset = "0x15FCC54", VA = "0x15FCC54")]
	protected AkSpatialAudioBase()
	{
	}
}
[Token(Token = "0x20003A4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD4054", Offset = "0xFD4054")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD4054", Offset = "0xFD4054")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFDA954", Offset = "0xFDA954")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA954", Offset = "0xFDA954")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA9B4", Offset = "0xFDA9B4")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDA9EC", Offset = "0xFDA9EC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDA9EC", Offset = "0xFDA9EC")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDAA40", Offset = "0xFDAA40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDAA40", Offset = "0xFDAA40")]
	public uint reflectionsOrder;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFDAA94", Offset = "0xFDAA94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDAA94", Offset = "0xFDAA94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDAA94", Offset = "0xFDAA94")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFDAB0C", Offset = "0xFDAB0C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDAB0C", Offset = "0xFDAB0C")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDAB6C", Offset = "0xFDAB6C")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDABA4", Offset = "0xFDABA4")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6002170")]
	[Address(RVA = "0x15FCCC8", Offset = "0x15FCCC8", VA = "0x15FCCC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002171")]
	[Address(RVA = "0x15FCE4C", Offset = "0x15FCE4C", VA = "0x15FCE4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002172")]
	[Address(RVA = "0x15FCEC8", Offset = "0x15FCEC8", VA = "0x15FCEC8")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x20003A5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD40DC", Offset = "0xFD40DC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD40DC", Offset = "0xFD40DC")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x200056D")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x1700041F")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x60027C5")]
			[Address(RVA = "0x15FDCC8", Offset = "0x15FDCC8", VA = "0x15FDCC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x15FD9BC", Offset = "0x15FD9BC", VA = "0x15FD9BC")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x15FDB08", Offset = "0x15FDB08", VA = "0x15FDB08")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x15FDCD0", Offset = "0x15FDCD0", VA = "0x15FDCD0")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x15FDC4C", Offset = "0x15FDC4C", VA = "0x15FDC4C")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x17000329")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x6002173")]
		[Address(RVA = "0x15FD7A4", Offset = "0x15FD7A4", VA = "0x15FD7A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032A")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x6002174")]
		[Address(RVA = "0x15FD87C", Offset = "0x15FD87C", VA = "0x15FD87C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002175")]
	[Address(RVA = "0x15FD8E4", Offset = "0x15FD8E4", VA = "0x15FD8E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002176")]
	[Address(RVA = "0x15FD944", Offset = "0x15FD944", VA = "0x15FD944")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002177")]
	[Address(RVA = "0x15FDA90", Offset = "0x15FDA90", VA = "0x15FDA90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002178")]
	[Address(RVA = "0x15FDBDC", Offset = "0x15FDBDC", VA = "0x15FDBDC")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x20003A6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD4174", Offset = "0xFD4174")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State data;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDABDC", Offset = "0xFDABDC")]
	private int valueIdInternal;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDAC38", Offset = "0xFDAC38")]
	private int groupIdInternal;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDAC94", Offset = "0xFDAC94")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDACF0", Offset = "0xFDACF0")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x1700032B")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x600217A")]
		[Address(RVA = "0x15FDFBC", Offset = "0x15FDFBC", VA = "0x15FDFBC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE17C0", Offset = "0xFE17C0")]
	public int valueID
	{
		[Token(Token = "0x600217C")]
		[Address(RVA = "0x15FDFE0", Offset = "0x15FDFE0", VA = "0x15FDFE0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700032D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE17F8", Offset = "0xFE17F8")]
	public int groupID
	{
		[Token(Token = "0x600217D")]
		[Address(RVA = "0x15FDFF4", Offset = "0x15FDFF4", VA = "0x15FDFF4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700032E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1830", Offset = "0xFE1830")]
	public byte[] valueGuid
	{
		[Token(Token = "0x600217E")]
		[Address(RVA = "0x15FE008", Offset = "0x15FE008", VA = "0x15FE008")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1868", Offset = "0xFE1868")]
	public byte[] groupGuid
	{
		[Token(Token = "0x600217F")]
		[Address(RVA = "0x15FE0CC", Offset = "0x15FE0CC", VA = "0x15FE0CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600217B")]
	[Address(RVA = "0x15FDFC4", Offset = "0x15FDFC4", VA = "0x15FDFC4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002180")]
	[Address(RVA = "0x15FE18C", Offset = "0x15FE18C", VA = "0x15FE18C")]
	public AkState()
	{
	}
}
[Token(Token = "0x20003A7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD41AC", Offset = "0xFD41AC")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD41AC", Offset = "0xFD41AC")]
[ExecuteInEditMode]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDAD4C", Offset = "0xFDAD4C")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFDAD84", Offset = "0xFDAD84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDAD84", Offset = "0xFDAD84")]
	public bool EnableDiffraction;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFDADE4", Offset = "0xFDADE4")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x6002181")]
	[Address(RVA = "0x15FE5CC", Offset = "0x15FE5CC", VA = "0x15FE5CC")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6002182")]
	[Address(RVA = "0x15FE5F0", Offset = "0x15FE5F0", VA = "0x15FE5F0")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6002183")]
	[Address(RVA = "0x15FF5A0", Offset = "0x15FF5A0", VA = "0x15FF5A0")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6002184")]
	[Address(RVA = "0x15FF664", Offset = "0x15FF664", VA = "0x15FF664")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002185")]
	[Address(RVA = "0x15FF6C4", Offset = "0x15FF6C4", VA = "0x15FF6C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002186")]
	[Address(RVA = "0x15FF6DC", Offset = "0x15FF6DC", VA = "0x15FF6DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002187")]
	[Address(RVA = "0x15FF6E4", Offset = "0x15FF6E4", VA = "0x15FF6E4")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x20003A8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD4254", Offset = "0xFD4254")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AK.Wwise.Switch data;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDAE1C", Offset = "0xFDAE1C")]
	private int valueIdInternal;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDAE78", Offset = "0xFDAE78")]
	private int groupIdInternal;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDAED4", Offset = "0xFDAED4")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDAF30", Offset = "0xFDAF30")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000330")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6002188")]
		[Address(RVA = "0x15FF758", Offset = "0x15FF758", VA = "0x15FF758", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000331")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE18A0", Offset = "0xFE18A0")]
	public int valueID
	{
		[Token(Token = "0x600218A")]
		[Address(RVA = "0x15FF810", Offset = "0x15FF810", VA = "0x15FF810")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000332")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE18D8", Offset = "0xFE18D8")]
	public int groupID
	{
		[Token(Token = "0x600218B")]
		[Address(RVA = "0x15FF824", Offset = "0x15FF824", VA = "0x15FF824")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000333")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1910", Offset = "0xFE1910")]
	public byte[] valueGuid
	{
		[Token(Token = "0x600218C")]
		[Address(RVA = "0x15FF838", Offset = "0x15FF838", VA = "0x15FF838")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000334")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1948", Offset = "0xFE1948")]
	public byte[] groupGuid
	{
		[Token(Token = "0x600218D")]
		[Address(RVA = "0x15FF8FC", Offset = "0x15FF8FC", VA = "0x15FF8FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002189")]
	[Address(RVA = "0x15FF760", Offset = "0x15FF760", VA = "0x15FF760", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600218E")]
	[Address(RVA = "0x15FF9BC", Offset = "0x15FF9BC", VA = "0x15FF9BC")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x20003A9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFD428C", Offset = "0xFD428C")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x600218F")]
	[Address(RVA = "0x15FFDFC", Offset = "0x15FFDFC", VA = "0x15FFDFC")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x20003AA")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x200056E")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6002190")]
	[Address(RVA = "0x1601710", Offset = "0x1601710", VA = "0x1601710")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6002191")]
	[Address(RVA = "0x1601B2C", Offset = "0x1601B2C", VA = "0x1601B2C")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x20003AB")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6002192")]
	[Address(RVA = "0x1601F0C", Offset = "0x1601F0C", VA = "0x1601F0C")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6002193")]
	[Address(RVA = "0x1602018", Offset = "0x1602018", VA = "0x1602018")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6002194")]
	[Address(RVA = "0x1602124", Offset = "0x1602124", VA = "0x1602124")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x20003AC")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6002195")]
	[Address(RVA = "0x160212C", Offset = "0x160212C", VA = "0x160212C")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x6002196")]
	[Address(RVA = "0x1602238", Offset = "0x1602238", VA = "0x1602238")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x20003AD")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x6002197")]
	[Address(RVA = "0x1602240", Offset = "0x1602240", VA = "0x1602240")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002198")]
	[Address(RVA = "0x1602254", Offset = "0x1602254", VA = "0x1602254")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x20003AE")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x6002199")]
	[Address(RVA = "0x160225C", Offset = "0x160225C", VA = "0x160225C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600219A")]
	[Address(RVA = "0x1602270", Offset = "0x1602270", VA = "0x1602270")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x20003AF")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x600219B")]
	[Address(RVA = "0x1602278", Offset = "0x1602278", VA = "0x1602278")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x600219C")]
	[Address(RVA = "0x1602384", Offset = "0x1602384", VA = "0x1602384")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x20003B0")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x600219D")]
	[Address(RVA = "0x160238C", Offset = "0x160238C", VA = "0x160238C")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x600219E")]
	[Address(RVA = "0x1602498", Offset = "0x1602498", VA = "0x1602498")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x20003B1")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x400187C")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x400187D")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x400187E")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x400187F")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x600219F")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x60021A0")]
	[Address(RVA = "0x16024A0", Offset = "0x16024A0", VA = "0x16024A0", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60021A1")]
	[Address(RVA = "0x1602990", Offset = "0x1602990", VA = "0x1602990", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60021A2")]
	[Address(RVA = "0x1602A14", Offset = "0x1602A14", VA = "0x1602A14", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60021A3")]
	[Address(RVA = "0x1602A24", Offset = "0x1602A24", VA = "0x1602A24")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x60021A4")]
	[Address(RVA = "0x160257C", Offset = "0x160257C", VA = "0x160257C")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x60021A5")]
	[Address(RVA = "0x1602B08", Offset = "0x1602B08", VA = "0x1602B08")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x60021A6")]
	[Address(RVA = "0x1602EC4", Offset = "0x1602EC4", VA = "0x1602EC4")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x20003B2")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x17000335")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x60021A8")]
		get;
	}

	[Token(Token = "0x60021A9")]
	[Address(RVA = "0x18DB2B0", Offset = "0x18DB2B0", VA = "0x18DB2B0", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60021AA")]
	[Address(RVA = "0x18DB2B8", Offset = "0x18DB2B8", VA = "0x18DB2B8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60021AB")]
	[Address(RVA = "0x18DB2C0", Offset = "0x18DB2C0", VA = "0x18DB2C0", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60021AC")]
	[Address(RVA = "0x18DB2C8", Offset = "0x18DB2C8", VA = "0x18DB2C8")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x20003B3")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x60021AD")]
	[Address(RVA = "0x1602FC0", Offset = "0x1602FC0", VA = "0x1602FC0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60021AE")]
	[Address(RVA = "0x1602FD4", Offset = "0x1602FD4", VA = "0x1602FD4")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x20003B4")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x60021AF")]
	[Address(RVA = "0x1602FDC", Offset = "0x1602FDC", VA = "0x1602FDC")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60021B0")]
	[Address(RVA = "0x1602FF0", Offset = "0x1602FF0", VA = "0x1602FF0")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x20003B5")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x60021B1")]
	[Address(RVA = "0x1602FF8", Offset = "0x1602FF8", VA = "0x1602FF8")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60021B2")]
	[Address(RVA = "0x160300C", Offset = "0x160300C", VA = "0x160300C")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x20003B6")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x60021B3")]
	[Address(RVA = "0x1603014", Offset = "0x1603014", VA = "0x1603014")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x60021B4")]
	[Address(RVA = "0x1603028", Offset = "0x1603028", VA = "0x1603028")]
	public AkTriggerMouseUp()
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x20003B7")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x17000336")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x18C78BC", Offset = "0x18C78BC", VA = "0x18C78BC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0x18C78C4", Offset = "0x18C78C4", VA = "0x18C78C4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x18C7958", Offset = "0x18C7958", VA = "0x18C7958", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x18C7960", Offset = "0x18C7960", VA = "0x18C7960")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B8")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x17000338")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x18C7970", Offset = "0x18C7970", VA = "0x18C7970", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021BA")]
			[Address(RVA = "0x18C7978", Offset = "0x18C7978", VA = "0x18C7978", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000339")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60021BB")]
			[Address(RVA = "0x18C7A0C", Offset = "0x18C7A0C", VA = "0x18C7A0C", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x18C7A14", Offset = "0x18C7A14", VA = "0x18C7A14")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B9")]
	public class Bank : BaseType
	{
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x1700033A")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60021BD")]
			[Address(RVA = "0x18C7A1C", Offset = "0x18C7A1C", VA = "0x18C7A1C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021BE")]
			[Address(RVA = "0x18C7A24", Offset = "0x18C7A24", VA = "0x18C7A24", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60021BF")]
			[Address(RVA = "0x18C7AB8", Offset = "0x18C7AB8", VA = "0x18C7AB8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x18C7AC0", Offset = "0x18C7AC0", VA = "0x18C7AC0")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x18C7D48", Offset = "0x18C7D48", VA = "0x18C7D48")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x18C7F8C", Offset = "0x18C7F8C", VA = "0x18C7F8C")]
		public void Unload()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x18C816C", Offset = "0x18C816C", VA = "0x18C816C")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BA")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDAF8C", Offset = "0xFDAF8C")]
		private int groupIdInternal;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDAFE8", Offset = "0xFDAFE8")]
		private byte[] groupGuidInternal;

		[Token(Token = "0x1700033C")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x18C8174", Offset = "0x18C8174", VA = "0x18C8174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		public abstract WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60021C5")]
			get;
		}

		[Token(Token = "0x1700033E")]
		public uint GroupId
		{
			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x18C8258", Offset = "0x18C8258", VA = "0x18C8258")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700033F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1980", Offset = "0xFE1980")]
		public int groupID
		{
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x18C8410", Offset = "0x18C8410", VA = "0x18C8410")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000340")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE19B8", Offset = "0xFE19B8")]
		public byte[] groupGuid
		{
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x18C8414", Offset = "0x18C8414", VA = "0x18C8414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x18C82F4", Offset = "0x18C82F4", VA = "0x18C82F4", Slot = "8")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x18C84D4", Offset = "0x18C84D4", VA = "0x18C84D4")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BB")]
	public abstract class BaseType
	{
		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDB044", Offset = "0xFDB044")]
		private int idInternal;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFDB0A0", Offset = "0xFDB0A0")]
		private byte[] valueGuidInternal;

		[Token(Token = "0x17000341")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60021CB")]
			get;
			[Token(Token = "0x60021CC")]
			set;
		}

		[Token(Token = "0x17000342")]
		public abstract WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60021CD")]
			get;
		}

		[Token(Token = "0x17000343")]
		public virtual string Name
		{
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x18C84DC", Offset = "0x18C84DC", VA = "0x18C84DC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		public uint Id
		{
			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x18C8570", Offset = "0x18C8570", VA = "0x18C8570")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000345")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE19F0", Offset = "0xFE19F0")]
		public int ID
		{
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x18C8750", Offset = "0x18C8750", VA = "0x18C8750")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000346")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFE1A28", Offset = "0xFE1A28")]
		public byte[] valueGuid
		{
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0x18C8754", Offset = "0x18C8754", VA = "0x18C8754")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x18C838C", Offset = "0x18C838C", VA = "0x18C838C", Slot = "8")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x18C85C0", Offset = "0x18C85C0", VA = "0x18C85C0")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x18C869C", Offset = "0x18C869C", VA = "0x18C869C")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x18C86A0", Offset = "0x18C86A0", VA = "0x18C86A0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x18C7968", Offset = "0x18C7968", VA = "0x18C7968")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BC")]
	public class CallbackFlags
	{
		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x18C8814", Offset = "0x18C8814", VA = "0x18C8814")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BD")]
	public class Event : BaseType
	{
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x17000347")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x18C881C", Offset = "0x18C881C", VA = "0x18C881C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021D9")]
			[Address(RVA = "0x18C8824", Offset = "0x18C8824", VA = "0x18C8824", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000348")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60021DA")]
			[Address(RVA = "0x18C88B8", Offset = "0x18C88B8", VA = "0x18C88B8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x18C88C0", Offset = "0x18C88C0", VA = "0x18C88C0")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x18C88C4", Offset = "0x18C88C4", VA = "0x18C88C4")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x18C8974", Offset = "0x18C8974", VA = "0x18C8974")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x18C8A50", Offset = "0x18C8A50", VA = "0x18C8A50")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x18C8B24", Offset = "0x18C8B24", VA = "0x18C8B24")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x18C8B34", Offset = "0x18C8B34", VA = "0x18C8B34")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x18C8C04", Offset = "0x18C8C04", VA = "0x18C8C04")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x18C8C74", Offset = "0x18C8C74", VA = "0x18C8C74")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x18C8CEC", Offset = "0x18C8CEC", VA = "0x18C8CEC")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x18C8D98", Offset = "0x18C8D98", VA = "0x18C8D98")]
		public void StopMIDI()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x18C8E30", Offset = "0x18C8E30", VA = "0x18C8E30")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BE")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x17000349")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x18C8E38", Offset = "0x18C8E38", VA = "0x18C8E38", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021E7")]
			[Address(RVA = "0x18C8E40", Offset = "0x18C8E40", VA = "0x18C8E40", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x18C8ED4", Offset = "0x18C8ED4", VA = "0x18C8ED4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x18C8EDC", Offset = "0x18C8EDC", VA = "0x18C8EDC")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x18C8F9C", Offset = "0x18C8F9C", VA = "0x18C8F9C")]
		public float GetValue(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x18C9090", Offset = "0x18C9090", VA = "0x18C9090")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x18C913C", Offset = "0x18C913C", VA = "0x18C913C")]
		public float GetGlobalValue()
		{
			return default(float);
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x18C9144", Offset = "0x18C9144", VA = "0x18C9144")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BF")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x1700034B")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x18C914C", Offset = "0x18C914C", VA = "0x18C914C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x18C9154", Offset = "0x18C9154", VA = "0x18C9154", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x18C91E8", Offset = "0x18C91E8", VA = "0x18C91E8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x1700034D")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x18C91F0", Offset = "0x18C91F0", VA = "0x18C91F0", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x18C91F8", Offset = "0x18C91F8", VA = "0x18C91F8")]
		public void SetValue()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x18C92A0", Offset = "0x18C92A0", VA = "0x18C92A0")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C0")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x1700034E")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0x18C92A8", Offset = "0x18C92A8", VA = "0x18C92A8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021F5")]
			[Address(RVA = "0x18C92B0", Offset = "0x18C92B0", VA = "0x18C92B0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60021F6")]
			[Address(RVA = "0x18C9344", Offset = "0x18C9344", VA = "0x18C9344", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x17000350")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0x18C934C", Offset = "0x18C934C", VA = "0x18C934C", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x18C9354", Offset = "0x18C9354", VA = "0x18C9354")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x18C9410", Offset = "0x18C9410", VA = "0x18C9410")]
		public Switch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C1")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseTriggerReference WwiseObjectReference;

		[Token(Token = "0x17000351")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x18C9418", Offset = "0x18C9418", VA = "0x18C9418", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x18C9420", Offset = "0x18C9420", VA = "0x18C9420", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x18C94B4", Offset = "0x18C94B4", VA = "0x18C94B4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x18C94BC", Offset = "0x18C94BC", VA = "0x18C94BC")]
		public void Post(GameObject gameObject)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x18C9568", Offset = "0x18C9568", VA = "0x18C9568")]
		public Trigger()
		{
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x20003C2")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x15DF6D0", Offset = "0x15DF6D0", VA = "0x15DF6D0", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x15DF6FC", Offset = "0x15DF6FC", VA = "0x15DF6FC")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C3")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x6002201")]
		[Address(RVA = "0x15DF704", Offset = "0x15DF704", VA = "0x15DF704", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x15DFB4C", Offset = "0x15DFB4C", VA = "0x15DFB4C")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x200056F")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0x1458390", Offset = "0x1458390", VA = "0x1458390")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000570")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60027CF")]
			[Address(RVA = "0x14583E0", Offset = "0x14583E0", VA = "0x14583E0")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000571")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60027D0")]
			[Address(RVA = "0x1458430", Offset = "0x1458430", VA = "0x1458430")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000572")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60027D1")]
			[Address(RVA = "0x1458480", Offset = "0x1458480", VA = "0x1458480")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000573")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x60027D2")]
			[Address(RVA = "0x14584D0", Offset = "0x14584D0", VA = "0x14584D0")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x17000353")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x6002203")]
			[Address(RVA = "0x1457928", Offset = "0x1457928", VA = "0x1457928")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002204")]
			[Address(RVA = "0x1457930", Offset = "0x1457930", VA = "0x1457930")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6002205")]
			[Address(RVA = "0x1457938", Offset = "0x1457938", VA = "0x1457938")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002206")]
			[Address(RVA = "0x1457940", Offset = "0x1457940", VA = "0x1457940")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6002207")]
			[Address(RVA = "0x1457948", Offset = "0x1457948", VA = "0x1457948")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002208")]
			[Address(RVA = "0x1457950", Offset = "0x1457950", VA = "0x1457950")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x6002209")]
			[Address(RVA = "0x1457958", Offset = "0x1457958", VA = "0x1457958")]
			get
			{
				return null;
			}
			[Token(Token = "0x600220A")]
			[Address(RVA = "0x1457960", Offset = "0x1457960", VA = "0x1457960")]
			set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x600220B")]
			[Address(RVA = "0x1457968", Offset = "0x1457968", VA = "0x1457968")]
			get
			{
				return null;
			}
			[Token(Token = "0x600220C")]
			[Address(RVA = "0x1457970", Offset = "0x1457970", VA = "0x1457970")]
			set
			{
			}
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x1457978", Offset = "0x1457978", VA = "0x1457978")]
		private void Awake()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x1457B24", Offset = "0x1457B24", VA = "0x1457B24")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x1458270", Offset = "0x1458270", VA = "0x1458270", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x1458274", Offset = "0x1458274", VA = "0x1458274", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x1457FC8", Offset = "0x1457FC8", VA = "0x1457FC8")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1458044", Offset = "0x1458044", VA = "0x1458044")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x14580C0", Offset = "0x14580C0", VA = "0x14580C0")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x1458150", Offset = "0x1458150", VA = "0x1458150")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x14581E0", Offset = "0x14581E0", VA = "0x14581E0")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1458278", Offset = "0x1458278", VA = "0x1458278")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x20003C5")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5F90", Offset = "0xFD5F90")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000420")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027D6")]
				[Address(RVA = "0x15CF81C", Offset = "0x15CF81C", VA = "0x15CF81C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000421")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D8")]
				[Address(RVA = "0x15CF884", Offset = "0x15CF884", VA = "0x15CF884", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D3")]
			[Address(RVA = "0x15CF27C", Offset = "0x15CF27C", VA = "0x15CF27C")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x15CF2B0", Offset = "0x15CF2B0", VA = "0x15CF2B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027D5")]
			[Address(RVA = "0x15CF2B4", Offset = "0x15CF2B4", VA = "0x15CF2B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027D7")]
			[Address(RVA = "0x15CF824", Offset = "0x15CF824", VA = "0x15CF824", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40018A3")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x40018A4")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x15CF200", Offset = "0x15CF200", VA = "0x15CF200")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEBA8", Offset = "0xFDEBA8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x15CF2A8", Offset = "0x15CF2A8", VA = "0x15CF2A8")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5FA0", Offset = "0xFD5FA0")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000422")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027DC")]
				[Address(RVA = "0x15CFDC8", Offset = "0x15CFDC8", VA = "0x15CFDC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000423")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027DE")]
				[Address(RVA = "0x15CFE30", Offset = "0x15CFE30", VA = "0x15CFE30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D9")]
			[Address(RVA = "0x15CF908", Offset = "0x15CF908", VA = "0x15CF908")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x15CF93C", Offset = "0x15CF93C", VA = "0x15CF93C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x15CF940", Offset = "0x15CF940", VA = "0x15CF940", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027DD")]
			[Address(RVA = "0x15CFDD0", Offset = "0x15CFDD0", VA = "0x15CFDD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x40018AD")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x40018AE")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x15CF88C", Offset = "0x15CF88C", VA = "0x15CF88C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEC0C", Offset = "0xFDEC0C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x15CF934", Offset = "0x15CF934", VA = "0x15CF934")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x15CFE38", Offset = "0x15CFE38", VA = "0x15CFE38")]
		private void Start()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x15D0450", Offset = "0x15D0450", VA = "0x15D0450")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x15D0460", Offset = "0x15D0460", VA = "0x15D0460")]
		private void Awake()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x15D0464", Offset = "0x15D0464", VA = "0x15D0464")]
		private void Start()
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x15D070C", Offset = "0x15D070C", VA = "0x15D070C")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x15D071C", Offset = "0x15D071C", VA = "0x15D071C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x15D0A90", Offset = "0x15D0A90", VA = "0x15D0A90")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x2000576")]
		public enum CameraModes
		{
			[Token(Token = "0x4001E23")]
			Follow,
			[Token(Token = "0x4001E24")]
			Isometric,
			[Token(Token = "0x4001E25")]
			Free
		}

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x40018D3")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x40018D4")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x15D0AAC", Offset = "0x15D0AAC", VA = "0x15D0AAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x15D0B3C", Offset = "0x15D0B3C", VA = "0x15D0B3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x15D0C28", Offset = "0x15D0C28", VA = "0x15D0C28")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x15D10A4", Offset = "0x15D10A4", VA = "0x15D10A4")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x15D19B8", Offset = "0x15D19B8", VA = "0x15D19B8")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x2000577")]
		public enum MotionType
		{
			[Token(Token = "0x4001E27")]
			Rotation,
			[Token(Token = "0x4001E28")]
			BackAndForth,
			[Token(Token = "0x4001E29")]
			Translation
		}

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x15D1A60", Offset = "0x15D1A60", VA = "0x15D1A60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x15D1B88", Offset = "0x15D1B88", VA = "0x15D1B88")]
		private void Update()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x15D1DC4", Offset = "0x15D1DC4", VA = "0x15D1DC4")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5FB0", Offset = "0xFD5FB0")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x17000424")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027E2")]
				[Address(RVA = "0x15D20A0", Offset = "0x15D20A0", VA = "0x15D20A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000425")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027E4")]
				[Address(RVA = "0x15D2108", Offset = "0x15D2108", VA = "0x15D2108", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027DF")]
			[Address(RVA = "0x15D1F04", Offset = "0x15D1F04", VA = "0x15D1F04")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x15D1F38", Offset = "0x15D1F38", VA = "0x15D1F38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x15D1F3C", Offset = "0x15D1F3C", VA = "0x15D1F3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E3")]
			[Address(RVA = "0x15D20A8", Offset = "0x15D20A8", VA = "0x15D20A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x15D1DD8", Offset = "0x15D1DD8", VA = "0x15D1DD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x15D1E5C", Offset = "0x15D1E5C", VA = "0x15D1E5C")]
		private void Start()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x15D1E88", Offset = "0x15D1E88", VA = "0x15D1E88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEC70", Offset = "0xFDEC70")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x15D1F30", Offset = "0x15D1F30", VA = "0x15D1F30")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40018E4")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x15D2110", Offset = "0x15D2110", VA = "0x15D2110")]
		private void Start()
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x15D21DC", Offset = "0x15D21DC", VA = "0x15D21DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x15D2278", Offset = "0x15D2278", VA = "0x15D2278")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5FC0", Offset = "0xFD5FC0")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x17000426")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027E8")]
				[Address(RVA = "0x15D33A4", Offset = "0x15D33A4", VA = "0x15D33A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000427")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027EA")]
				[Address(RVA = "0x15D340C", Offset = "0x15D340C", VA = "0x15D340C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E5")]
			[Address(RVA = "0x15D2420", Offset = "0x15D2420", VA = "0x15D2420")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60027E6")]
			[Address(RVA = "0x15D2688", Offset = "0x15D2688", VA = "0x15D2688", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027E7")]
			[Address(RVA = "0x15D268C", Offset = "0x15D268C", VA = "0x15D268C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E9")]
			[Address(RVA = "0x15D33AC", Offset = "0x15D33AC", VA = "0x15D33AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x15D2280", Offset = "0x15D2280", VA = "0x15D2280")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x15D22F0", Offset = "0x15D22F0", VA = "0x15D22F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x15D2398", Offset = "0x15D2398", VA = "0x15D2398")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x15D231C", Offset = "0x15D231C", VA = "0x15D231C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDECD4", Offset = "0xFDECD4")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x15D244C", Offset = "0x15D244C", VA = "0x15D244C")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x200057A")]
		public enum objectType
		{
			[Token(Token = "0x4001E34")]
			TextMeshPro,
			[Token(Token = "0x4001E35")]
			TextMeshProUGUI
		}

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x40018ED")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x15D3414", Offset = "0x15D3414", VA = "0x15D3414")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x15D35F4", Offset = "0x15D35F4", VA = "0x15D35F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x15D3690", Offset = "0x15D3690", VA = "0x15D3690")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200057B")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001E37")]
			TopLeft,
			[Token(Token = "0x4001E38")]
			BottomLeft,
			[Token(Token = "0x4001E39")]
			TopRight,
			[Token(Token = "0x4001E3A")]
			BottomRight
		}

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x40018F4")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x15D3698", Offset = "0x15D3698", VA = "0x15D3698")]
		private void Awake()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x15D3B50", Offset = "0x15D3B50", VA = "0x15D3B50")]
		private void Start()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x15D3B7C", Offset = "0x15D3B7C", VA = "0x15D3B7C")]
		private void Update()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x15D38B0", Offset = "0x15D38B0", VA = "0x15D38B0")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x15D3CEC", Offset = "0x15D3CEC", VA = "0x15D3CEC")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x15D3D04", Offset = "0x15D3D04", VA = "0x15D3D04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x15D3F3C", Offset = "0x15D3F3C", VA = "0x15D3F3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x15D4174", Offset = "0x15D4174", VA = "0x15D4174")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x15D4394", Offset = "0x15D4394", VA = "0x15D4394")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x15D45B4", Offset = "0x15D45B4", VA = "0x15D45B4")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x15D485C", Offset = "0x15D485C", VA = "0x15D485C")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x15D4B04", Offset = "0x15D4B04", VA = "0x15D4B04")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x15D4D98", Offset = "0x15D4D98", VA = "0x15D4D98")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x6002246")]
		[Address(RVA = "0x15D4DA0", Offset = "0x15D4DA0", VA = "0x15D4DA0")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x15D4DA8", Offset = "0x15D4DA8", VA = "0x15D4DA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x15D4E48", Offset = "0x15D4E48", VA = "0x15D4E48")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x15D5584", Offset = "0x15D5584", VA = "0x15D5584", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x15D5600", Offset = "0x15D5600", VA = "0x15D5600", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x15D5678", Offset = "0x15D5678", VA = "0x15D5678")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4001903")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4001904")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x15D5690", Offset = "0x15D5690", VA = "0x15D5690")]
		private void Awake()
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x15D5840", Offset = "0x15D5840", VA = "0x15D5840")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x15D5904", Offset = "0x15D5904", VA = "0x15D5904")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x15D59C8", Offset = "0x15D59C8", VA = "0x15D59C8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x15D5A84", Offset = "0x15D5A84", VA = "0x15D5A84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x15D71E8", Offset = "0x15D71E8", VA = "0x15D71E8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x15D71F4", Offset = "0x15D71F4", VA = "0x15D71F4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x15D71FC", Offset = "0x15D71FC", VA = "0x15D71FC", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x15D7200", Offset = "0x15D7200", VA = "0x15D7200", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x15D6958", Offset = "0x15D6958", VA = "0x15D6958")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x15D7204", Offset = "0x15D7204", VA = "0x15D7204")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200057C")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001E3C")]
			TopLeft,
			[Token(Token = "0x4001E3D")]
			BottomLeft,
			[Token(Token = "0x4001E3E")]
			TopRight,
			[Token(Token = "0x4001E3F")]
			BottomRight
		}

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4001913")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x15D721C", Offset = "0x15D721C", VA = "0x15D721C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x15D7770", Offset = "0x15D7770", VA = "0x15D7770")]
		private void Start()
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x15D779C", Offset = "0x15D779C", VA = "0x15D779C")]
		private void Update()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x15D73EC", Offset = "0x15D73EC", VA = "0x15D73EC")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x15D790C", Offset = "0x15D790C", VA = "0x15D790C")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x200057D")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001E41")]
			TopLeft,
			[Token(Token = "0x4001E42")]
			BottomLeft,
			[Token(Token = "0x4001E43")]
			TopRight,
			[Token(Token = "0x4001E44")]
			BottomRight
		}

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4001918")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x15D7924", Offset = "0x15D7924", VA = "0x15D7924")]
		private void Awake()
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x15D7B60", Offset = "0x15D7B60", VA = "0x15D7B60")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x15D7CB0", Offset = "0x15D7CB0", VA = "0x15D7CB0")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5FD0", Offset = "0xFD5FD0")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x17000428")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027EE")]
				[Address(RVA = "0x15D80CC", Offset = "0x15D80CC", VA = "0x15D80CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000429")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027F0")]
				[Address(RVA = "0x15D8134", Offset = "0x15D8134", VA = "0x15D8134", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027EB")]
			[Address(RVA = "0x15D7DE0", Offset = "0x15D7DE0", VA = "0x15D7DE0")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60027EC")]
			[Address(RVA = "0x15D7E84", Offset = "0x15D7E84", VA = "0x15D7E84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027ED")]
			[Address(RVA = "0x15D7E88", Offset = "0x15D7E88", VA = "0x15D7E88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0x15D80D4", Offset = "0x15D80D4", VA = "0x15D80D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x15D7CC0", Offset = "0x15D7CC0", VA = "0x15D7CC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x15D7D64", Offset = "0x15D7D64", VA = "0x15D7D64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDED38", Offset = "0xFDED38")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x15D7E0C", Offset = "0x15D7E0C", VA = "0x15D7E0C")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5FE0", Offset = "0xFD5FE0")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027F4")]
				[Address(RVA = "0x15D8664", Offset = "0x15D8664", VA = "0x15D8664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027F6")]
				[Address(RVA = "0x15D86CC", Offset = "0x15D86CC", VA = "0x15D86CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027F1")]
			[Address(RVA = "0x15D8408", Offset = "0x15D8408", VA = "0x15D8408")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60027F2")]
			[Address(RVA = "0x15D84E4", Offset = "0x15D84E4", VA = "0x15D84E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F3")]
			[Address(RVA = "0x15D84E8", Offset = "0x15D84E8", VA = "0x15D84E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F5")]
			[Address(RVA = "0x15D866C", Offset = "0x15D866C", VA = "0x15D866C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD5FF0", Offset = "0xFD5FF0")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x1700042C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027FA")]
				[Address(RVA = "0x15D88C8", Offset = "0x15D88C8", VA = "0x15D88C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027FC")]
				[Address(RVA = "0x15D8930", Offset = "0x15D8930", VA = "0x15D8930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027F7")]
			[Address(RVA = "0x15D84B0", Offset = "0x15D84B0", VA = "0x15D84B0")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60027F8")]
			[Address(RVA = "0x15D86D4", Offset = "0x15D86D4", VA = "0x15D86D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x15D86D8", Offset = "0x15D86D8", VA = "0x15D86D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027FB")]
			[Address(RVA = "0x15D88D0", Offset = "0x15D88D0", VA = "0x15D88D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x15D813C", Offset = "0x15D813C", VA = "0x15D813C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x15D81AC", Offset = "0x15D81AC", VA = "0x15D81AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x15D8274", Offset = "0x15D8274", VA = "0x15D8274")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x15D8338", Offset = "0x15D8338", VA = "0x15D8338")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x15D83FC", Offset = "0x15D83FC", VA = "0x15D83FC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x15D81DC", Offset = "0x15D81DC", VA = "0x15D81DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDED9C", Offset = "0xFDED9C")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x15D8434", Offset = "0x15D8434", VA = "0x15D8434")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEE00", Offset = "0xFDEE00")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x15D84DC", Offset = "0x15D84DC", VA = "0x15D84DC")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6000", Offset = "0xFD6000")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x1700042E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002800")]
				[Address(RVA = "0x15D9AFC", Offset = "0x15D9AFC", VA = "0x15D9AFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002802")]
				[Address(RVA = "0x15D9B64", Offset = "0x15D9B64", VA = "0x15D9B64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027FD")]
			[Address(RVA = "0x15D8FAC", Offset = "0x15D8FAC", VA = "0x15D8FAC")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60027FE")]
			[Address(RVA = "0x15D9604", Offset = "0x15D9604", VA = "0x15D9604", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027FF")]
			[Address(RVA = "0x15D9608", Offset = "0x15D9608", VA = "0x15D9608", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002801")]
			[Address(RVA = "0x15D9B04", Offset = "0x15D9B04", VA = "0x15D9B04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6010", Offset = "0xFD6010")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000430")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002806")]
				[Address(RVA = "0x15D9594", Offset = "0x15D9594", VA = "0x15D9594", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000431")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002808")]
				[Address(RVA = "0x15D95FC", Offset = "0x15D95FC", VA = "0x15D95FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002803")]
			[Address(RVA = "0x15D8FD8", Offset = "0x15D8FD8", VA = "0x15D8FD8")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002804")]
			[Address(RVA = "0x15D90AC", Offset = "0x15D90AC", VA = "0x15D90AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002805")]
			[Address(RVA = "0x15D90B0", Offset = "0x15D90B0", VA = "0x15D90B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002807")]
			[Address(RVA = "0x15D959C", Offset = "0x15D959C", VA = "0x15D959C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x15D8938", Offset = "0x15D8938", VA = "0x15D8938")]
		private void Awake()
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x15D8A18", Offset = "0x15D8A18", VA = "0x15D8A18")]
		private void Start()
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x15D8EB4", Offset = "0x15D8EB4", VA = "0x15D8EB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEE64", Offset = "0xFDEE64")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x15D8F30", Offset = "0x15D8F30", VA = "0x15D8F30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEEC8", Offset = "0xFDEEC8")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x15D9004", Offset = "0x15D9004", VA = "0x15D9004")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x15D9B6C", Offset = "0x15D9B6C", VA = "0x15D9B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x15D9B70", Offset = "0x15D9B70", VA = "0x15D9B70")]
		private void Start()
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x15D9EAC", Offset = "0x15D9EAC", VA = "0x15D9EAC")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6020", Offset = "0xFD6020")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x17000432")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600280C")]
				[Address(RVA = "0x15DA2D8", Offset = "0x15DA2D8", VA = "0x15DA2D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000433")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600280E")]
				[Address(RVA = "0x15DA340", Offset = "0x15DA340", VA = "0x15DA340", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002809")]
			[Address(RVA = "0x15D9FC4", Offset = "0x15D9FC4", VA = "0x15D9FC4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600280A")]
			[Address(RVA = "0x15D9FF8", Offset = "0x15D9FF8", VA = "0x15D9FF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600280B")]
			[Address(RVA = "0x15D9FFC", Offset = "0x15D9FFC", VA = "0x15D9FFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600280D")]
			[Address(RVA = "0x15DA2E0", Offset = "0x15DA2E0", VA = "0x15DA2E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x15D9EBC", Offset = "0x15D9EBC", VA = "0x15D9EBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x15D9F1C", Offset = "0x15D9F1C", VA = "0x15D9F1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x15D9F48", Offset = "0x15D9F48", VA = "0x15D9F48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEF2C", Offset = "0xFDEF2C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x15D9FF0", Offset = "0x15D9FF0", VA = "0x15D9FF0")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x2000584")]
		private struct VertexAnim
		{
			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6030", Offset = "0xFD6030")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x17000434")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002812")]
				[Address(RVA = "0x15DB18C", Offset = "0x15DB18C", VA = "0x15DB18C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000435")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002814")]
				[Address(RVA = "0x15DB1F4", Offset = "0x15DB1F4", VA = "0x15DB1F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600280F")]
			[Address(RVA = "0x15DA664", Offset = "0x15DA664", VA = "0x15DA664")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002810")]
			[Address(RVA = "0x15DA6A8", Offset = "0x15DA6A8", VA = "0x15DA6A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002811")]
			[Address(RVA = "0x15DA6AC", Offset = "0x15DA6AC", VA = "0x15DA6AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002813")]
			[Address(RVA = "0x15DB194", Offset = "0x15DB194", VA = "0x15DB194", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x15DA348", Offset = "0x15DA348", VA = "0x15DA348")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x15DA3A8", Offset = "0x15DA3A8", VA = "0x15DA3A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x15DA46C", Offset = "0x15DA46C", VA = "0x15DA46C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x15DA530", Offset = "0x15DA530", VA = "0x15DA530")]
		private void Start()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x15DA5D8", Offset = "0x15DA5D8", VA = "0x15DA5D8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x15DA55C", Offset = "0x15DA55C", VA = "0x15DA55C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEF90", Offset = "0xFDEF90")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x15DA690", Offset = "0x15DA690", VA = "0x15DA690")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6040", Offset = "0xFD6040")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002818")]
				[Address(RVA = "0x15DC08C", Offset = "0x15DC08C", VA = "0x15DC08C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600281A")]
				[Address(RVA = "0x15DC0F4", Offset = "0x15DC0F4", VA = "0x15DC0F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002815")]
			[Address(RVA = "0x15DB508", Offset = "0x15DB508", VA = "0x15DB508")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002816")]
			[Address(RVA = "0x15DB544", Offset = "0x15DB544", VA = "0x15DB544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002817")]
			[Address(RVA = "0x15DB548", Offset = "0x15DB548", VA = "0x15DB548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002819")]
			[Address(RVA = "0x15DC094", Offset = "0x15DC094", VA = "0x15DC094", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x15DB1FC", Offset = "0x15DB1FC", VA = "0x15DB1FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x15DB25C", Offset = "0x15DB25C", VA = "0x15DB25C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x15DB320", Offset = "0x15DB320", VA = "0x15DB320")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x15DB3E4", Offset = "0x15DB3E4", VA = "0x15DB3E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x15DB48C", Offset = "0x15DB48C", VA = "0x15DB48C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x15DB410", Offset = "0x15DB410", VA = "0x15DB410")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDEFF4", Offset = "0xFDEFF4")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x15DB534", Offset = "0x15DB534", VA = "0x15DB534")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6050", Offset = "0xFD6050")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600281E")]
				[Address(RVA = "0x15DD4D8", Offset = "0x15DD4D8", VA = "0x15DD4D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002820")]
				[Address(RVA = "0x15DD540", Offset = "0x15DD540", VA = "0x15DD540", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600281B")]
			[Address(RVA = "0x15DC408", Offset = "0x15DC408", VA = "0x15DC408")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600281C")]
			[Address(RVA = "0x15DC44C", Offset = "0x15DC44C", VA = "0x15DC44C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600281D")]
			[Address(RVA = "0x15DC450", Offset = "0x15DC450", VA = "0x15DC450", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600281F")]
			[Address(RVA = "0x15DD4E0", Offset = "0x15DD4E0", VA = "0x15DD4E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x15DC0FC", Offset = "0x15DC0FC", VA = "0x15DC0FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x15DC15C", Offset = "0x15DC15C", VA = "0x15DC15C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x15DC220", Offset = "0x15DC220", VA = "0x15DC220")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x15DC2E4", Offset = "0x15DC2E4", VA = "0x15DC2E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x15DC38C", Offset = "0x15DC38C", VA = "0x15DC38C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x15DC310", Offset = "0x15DC310", VA = "0x15DC310")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDF058", Offset = "0xFDF058")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x15DC434", Offset = "0x15DC434", VA = "0x15DC434")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6060", Offset = "0xFD6060")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6002821")]
			[Address(RVA = "0x15DD8A8", Offset = "0x15DD8A8", VA = "0x15DD8A8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002822")]
			[Address(RVA = "0x15DD8B0", Offset = "0x15DD8B0", VA = "0x15DD8B0")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6070", Offset = "0xFD6070")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x1700043A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002826")]
				[Address(RVA = "0x15DE6C4", Offset = "0x15DE6C4", VA = "0x15DE6C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002828")]
				[Address(RVA = "0x15DE72C", Offset = "0x15DE72C", VA = "0x15DE72C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002823")]
			[Address(RVA = "0x15DD864", Offset = "0x15DD864", VA = "0x15DD864")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002824")]
			[Address(RVA = "0x15DD974", Offset = "0x15DD974", VA = "0x15DD974", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002825")]
			[Address(RVA = "0x15DD978", Offset = "0x15DD978", VA = "0x15DD978", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002827")]
			[Address(RVA = "0x15DE6CC", Offset = "0x15DE6CC", VA = "0x15DE6CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x15DD548", Offset = "0x15DD548", VA = "0x15DD548")]
		private void Awake()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x15DD5A8", Offset = "0x15DD5A8", VA = "0x15DD5A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x15DD66C", Offset = "0x15DD66C", VA = "0x15DD66C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x15DD730", Offset = "0x15DD730", VA = "0x15DD730")]
		private void Start()
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x15DD7D8", Offset = "0x15DD7D8", VA = "0x15DD7D8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x15DD75C", Offset = "0x15DD75C", VA = "0x15DD75C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDF0BC", Offset = "0xFDF0BC")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x15DD890", Offset = "0x15DD890", VA = "0x15DD890")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6080", Offset = "0xFD6080")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x1700043C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600282C")]
				[Address(RVA = "0x15DF660", Offset = "0x15DF660", VA = "0x15DF660", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600282E")]
				[Address(RVA = "0x15DF6C8", Offset = "0x15DF6C8", VA = "0x15DF6C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002829")]
			[Address(RVA = "0x15DE8D4", Offset = "0x15DE8D4", VA = "0x15DE8D4")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600282A")]
			[Address(RVA = "0x15DEB44", Offset = "0x15DEB44", VA = "0x15DEB44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282B")]
			[Address(RVA = "0x15DEB48", Offset = "0x15DEB48", VA = "0x15DEB48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600282D")]
			[Address(RVA = "0x15DF668", Offset = "0x15DF668", VA = "0x15DF668", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x15DE734", Offset = "0x15DE734", VA = "0x15DE734")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x15DE7A4", Offset = "0x15DE7A4", VA = "0x15DE7A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x15DE84C", Offset = "0x15DE84C", VA = "0x15DE84C")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x15DE7D0", Offset = "0x15DE7D0", VA = "0x15DE7D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFDF120", Offset = "0xFDF120")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x15DE900", Offset = "0x15DE900", VA = "0x15DE900")]
		public WarpTextExample()
		{
		}
	}
}
namespace SSA
{
	[Token(Token = "0x20003E1")]
	public class FlyMonsterSkillOne : SkillBase
	{
		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float fxBeginTime;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool isFxBTimeEnd;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 pos;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion rot;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 TPos;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject chargeFx;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject fireFx;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WwiseDefine soundWwise;

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x156CB30", Offset = "0x156CB30", VA = "0x156CB30", Slot = "5")]
		public override void Start()
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x156D030", Offset = "0x156D030", VA = "0x156D030", Slot = "8")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x156D290", Offset = "0x156D290", VA = "0x156D290")]
		private void OnCharge_Start(int state)
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x156D5C0", Offset = "0x156D5C0", VA = "0x156D5C0")]
		private void OnCharge_Quit(int state_id)
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x156D5C4", Offset = "0x156D5C4", VA = "0x156D5C4")]
		private void OnCharge_Update(int state_id, float deltaTime)
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x156D93C", Offset = "0x156D93C", VA = "0x156D93C")]
		private void OnFire_Start(int state_id)
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x156DAE4", Offset = "0x156DAE4", VA = "0x156DAE4")]
		private void OnFire_Quit(int state_id)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x156DBD0", Offset = "0x156DBD0", VA = "0x156DBD0")]
		private void OnFire_Update(int state_id, float deltaTime)
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x156DF9C", Offset = "0x156DF9C", VA = "0x156DF9C")]
		private void OnFire_LateUpdate(int state_id)
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x156E094", Offset = "0x156E094", VA = "0x156E094")]
		public FlyMonsterSkillOne()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class FlyMonsterSkillThree : SkillBase
	{
		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float fxBeginTime;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool isFxBTimeEnd;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 pos;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion rot;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 TPos;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject chargeFx;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject fireFx;

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x156E0A4", Offset = "0x156E0A4", VA = "0x156E0A4", Slot = "5")]
		public override void Start()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x156E2BC", Offset = "0x156E2BC", VA = "0x156E2BC", Slot = "8")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x156E4EC", Offset = "0x156E4EC", VA = "0x156E4EC")]
		private void OnCharge_Start(int state)
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x156E670", Offset = "0x156E670", VA = "0x156E670")]
		private void OnCharge_Quit(int state_id)
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x156E674", Offset = "0x156E674", VA = "0x156E674")]
		private void OnCharge_Update(int state_id, float deltaTime)
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x156E808", Offset = "0x156E808", VA = "0x156E808")]
		private void OnFire_Start(int state_id)
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x156E9B0", Offset = "0x156E9B0", VA = "0x156E9B0")]
		private void OnFire_Quit(int state_id)
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x156EA64", Offset = "0x156EA64", VA = "0x156EA64")]
		private void OnFire_Update(int state_id, float deltaTime)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x156ED00", Offset = "0x156ED00", VA = "0x156ED00")]
		private void OnFire_LateUpdate(int state_id)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x156EDF8", Offset = "0x156EDF8", VA = "0x156EDF8")]
		public FlyMonsterSkillThree()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public enum e_Skill_Net_Op_Type
	{
		[Token(Token = "0x400195B")]
		Create,
		[Token(Token = "0x400195C")]
		Change,
		[Token(Token = "0x400195D")]
		Stop
	}
	[Token(Token = "0x20003E4")]
	public enum e_Skill_Type
	{
		[Token(Token = "0x400195F")]
		Skill1,
		[Token(Token = "0x4001960")]
		Skill2
	}
	[Token(Token = "0x20003E5")]
	public enum e_Skill_State_Type
	{
		[Token(Token = "0x4001962")]
		None,
		[Token(Token = "0x4001963")]
		Charge,
		[Token(Token = "0x4001964")]
		Fire
	}
	[Token(Token = "0x20003E6")]
	public struct SkillInfoStruct
	{
		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Pos;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion Rot;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 TPos;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Target;
	}
	[Token(Token = "0x20003E7")]
	public class SimpleSkillAgent : WAgent
	{
		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WUnit owner;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkillConfigMono configMono;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SkillBase curSkill;

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x156EE00", Offset = "0x156EE00", VA = "0x156EE00", Slot = "4")]
		public void Init(WUnit owner)
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x156EE08", Offset = "0x156EE08", VA = "0x156EE08")]
		public void OnGameObjectLoad()
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x156EE78", Offset = "0x156EE78", VA = "0x156EE78")]
		public void DoUpdate(float deltaTime, int millisDeltaTime)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x156EE90", Offset = "0x156EE90", VA = "0x156EE90")]
		public void DoLateUpdate()
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x156EEA8", Offset = "0x156EEA8", VA = "0x156EEA8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x156EFA4", Offset = "0x156EFA4", VA = "0x156EFA4")]
		public void CreateSkill(e_Skill_Type skillType)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x156F09C", Offset = "0x156F09C", VA = "0x156F09C")]
		private void DoCreateSkill(e_Skill_Type skillType)
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x156F160", Offset = "0x156F160", VA = "0x156F160")]
		public void ChangeSkill(e_Skill_Type skillType, e_Skill_State_Type state, [Optional] SkillInfoStruct info)
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x156F2D4", Offset = "0x156F2D4", VA = "0x156F2D4")]
		private void DoChangeSkill(e_Skill_Type skillType, e_Skill_State_Type state, [Optional] SkillInfoStruct info)
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x156EEAC", Offset = "0x156EEAC", VA = "0x156EEAC")]
		public void StopSkill()
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x156F32C", Offset = "0x156F32C", VA = "0x156F32C")]
		public void DoStopSkill()
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x156F374", Offset = "0x156F374", VA = "0x156F374")]
		public void SyncSkill(e_Skill_Type skill, e_Skill_Net_Op_Type op, e_Skill_State_Type state, Vector3 pos, Quaternion rot, Vector3 tPos)
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x156D758", Offset = "0x156D758", VA = "0x156D758")]
		public Vector3 GetMiddlePoint(e_Skill_Type skillType, e_Skill_State_Type state)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x156F500", Offset = "0x156F500", VA = "0x156F500")]
		public SimpleSkillAgent()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class SkillBase
	{
		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected WUnit owner;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected FSMSystem fsm;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float runningTime;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float leftTime;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool isTimeEnd;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected SkillInfoStruct curSkillInfo;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected SkillConfigMono configMono;

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x156F508", Offset = "0x156F508", VA = "0x156F508", Slot = "4")]
		public virtual void Init(WUnit owner, SkillConfigMono configMono)
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x156CD48", Offset = "0x156CD48", VA = "0x156CD48", Slot = "5")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x156F53C", Offset = "0x156F53C", VA = "0x156F53C", Slot = "6")]
		public virtual void Update(float deltaTime)
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x156F550", Offset = "0x156F550", VA = "0x156F550", Slot = "7")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x156F564", Offset = "0x156F564", VA = "0x156F564", Slot = "8")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x156F568", Offset = "0x156F568", VA = "0x156F568")]
		public void Reset()
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x156CDE4", Offset = "0x156CDE4", VA = "0x156CDE4")]
		protected void AddNextState(string name, int stateIndex, OnStateStart onStateStart, [Optional] OnStateQuit onStateQuit, [Optional] OnStateUpdate onStateUpdate, [Optional] OnStateFixedUpdate onStateFixedUpdate, [Optional] OnStateLateUpdate onStateLateUpdate)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x156F574", Offset = "0x156F574", VA = "0x156F574", Slot = "9")]
		public virtual void ChangeState(int state_id, [Optional] SkillInfoStruct info)
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x156E09C", Offset = "0x156E09C", VA = "0x156E09C")]
		public SkillBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E9")]
	public class SkillConfig
	{
		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_Skill_Type SkillType;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ChargeAni;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ChargeTime;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ChargeFx;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ChargeFxBTime;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ChargePoint;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform ChargePoint2;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioEvent chargeAudio;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string FireAni;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float FireTime;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject FireFx;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float FireFxBTime;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform FirePoint;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform FirePoint2;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioEvent fireAudio;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float ForwardDis;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool IsBulletMonster;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int BulletMonsterId;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Transform> CommonTrans;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<float> CommonFloats;

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x156F614", Offset = "0x156F614", VA = "0x156F614")]
		public SkillConfig()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xFD42F8", Offset = "0xFD42F8")]
	public class SkillConfigMono : MonoBehaviour
	{
		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFD6090", Offset = "0xFD6090")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public e_Skill_Type type;

			[Token(Token = "0x600282F")]
			[Address(RVA = "0x156F6C4", Offset = "0x156F6C4", VA = "0x156F6C4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002830")]
			[Address(RVA = "0x156F748", Offset = "0x156F748", VA = "0x156F748")]
			internal bool <GetSkillConfigByType>b__0(SkillConfig a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkillConfig> SkillCofings;

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x156D4FC", Offset = "0x156D4FC", VA = "0x156D4FC")]
		public SkillConfig GetSkillConfigByType(e_Skill_Type type)
		{
			return null;
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x156F6CC", Offset = "0x156F6CC", VA = "0x156F6CC")]
		public SkillConfigMono()
		{
		}
	}
}
namespace YanCheZuo
{
	[Token(Token = "0x20003EB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFD435C", Offset = "0xFD435C")]
	public class TestMeshViewer : MonoBehaviour
	{
		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh _mesh;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> verticesList;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Vector2> uvList;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<int> triList;

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x29F3988", Offset = "0x29F3988", VA = "0x29F3988")]
		private void Start()
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x29F3A14", Offset = "0x29F3A14", VA = "0x29F3A14")]
		private void ReadMeshInfo()
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x29F3BBC", Offset = "0x29F3BBC", VA = "0x29F3BBC")]
		public TestMeshViewer()
		{
		}
	}
}
namespace SubjectNerd.Utilities
{
	[Token(Token = "0x20003EC")]
	public class EditScriptableAttribute : PropertyAttribute
	{
		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x15CD708", Offset = "0x15CD708", VA = "0x15CD708")]
		public EditScriptableAttribute()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class ReorderableAttribute : PropertyAttribute
	{
		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB14C", Offset = "0xFDB14C")]
		private string <ElementHeader>k__BackingField;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB15C", Offset = "0xFDB15C")]
		private bool <HeaderZeroIndex>k__BackingField;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB16C", Offset = "0xFDB16C")]
		private bool <ElementSingleLine>k__BackingField;

		[Token(Token = "0x17000358")]
		public string ElementHeader
		{
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x15CD710", Offset = "0x15CD710", VA = "0x15CD710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF184", Offset = "0xFDF184")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x15CD718", Offset = "0x15CD718", VA = "0x15CD718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF194", Offset = "0xFDF194")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public bool HeaderZeroIndex
		{
			[Token(Token = "0x60022CB")]
			[Address(RVA = "0x15CD720", Offset = "0x15CD720", VA = "0x15CD720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF1A4", Offset = "0xFDF1A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0x15CD728", Offset = "0x15CD728", VA = "0x15CD728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF1B4", Offset = "0xFDF1B4")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public bool ElementSingleLine
		{
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x15CD734", Offset = "0x15CD734", VA = "0x15CD734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF1C4", Offset = "0xFDF1C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x15CD73C", Offset = "0x15CD73C", VA = "0x15CD73C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF1D4", Offset = "0xFDF1D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x15CD748", Offset = "0x15CD748", VA = "0x15CD748")]
		public ReorderableAttribute()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x15CD7B8", Offset = "0x15CD7B8", VA = "0x15CD7B8")]
		public ReorderableAttribute(string headerString = "", bool isZeroIndex = true, bool isSingleLine = false)
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20003EE")]
	public static class TweenCustomExtensions
	{
		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x13D29B8", Offset = "0x13D29B8", VA = "0x13D29B8")]
		public static float PathGetTime(this Tween t, int index)
		{
			return default(float);
		}
	}
}
namespace NodeCanvas.Tasks.Actions
{
	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD43E0", Offset = "0xFD43E0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD43E0", Offset = "0xFD43E0")]
	public class CrowTweenMove : ActionTask<Transform>
	{
		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFDB17C", Offset = "0xFDB17C")]
		public BBParameter<GameObject> player;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> minMiddleRadius;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> maxMiddleRadius;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> speed;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<float> hoverHeight;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<float> keepDistance;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BBParameter<GoTween> saveAsTween;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BBParameter<float> highPercent;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BBParameter<Transform> area1;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BBParameter<Transform> area2;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BBParameter<List<Transform>> areas;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float duration;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<GameObject> pointList;

		[Token(Token = "0x1700035B")]
		protected override string info
		{
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x1498028", Offset = "0x1498028", VA = "0x1498028", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x1498070", Offset = "0x1498070", VA = "0x1498070")]
		public CrowTweenMove()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x1498118", Offset = "0x1498118", VA = "0x1498118", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x1498794", Offset = "0x1498794", VA = "0x1498794", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x14987D8", Offset = "0x14987D8", VA = "0x14987D8")]
		private Vector3 RandomMiddlePoint(Vector3 pointA, Vector3 pointB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x149863C", Offset = "0x149863C", VA = "0x149863C")]
		private Vector3 RandomMiddlePoint2(Vector3 pointBegin, Vector3 pointEnd)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4440", Offset = "0xFD4440")]
	public class GetLerpTwoVector3 : ActionTask<Transform>
	{
		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> begin;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> end;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDB18C", Offset = "0xFDB18C")]
		public BBParameter<float> ratio;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x1700035C")]
		protected override string info
		{
			[Token(Token = "0x60022D8")]
			[Address(RVA = "0x1498C64", Offset = "0x1498C64", VA = "0x1498C64", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x1498D3C", Offset = "0x1498D3C", VA = "0x1498D3C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x1498E6C", Offset = "0x1498E6C", VA = "0x1498E6C")]
		public GetLerpTwoVector3()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4478", Offset = "0xFD4478")]
	public class LerpTwoVector3 : ActionTask<Transform>
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> begin;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> end;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDB1B4", Offset = "0xFDB1B4")]
		public BBParameter<float> time;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float timer;

		[Token(Token = "0x1700035D")]
		protected override string info
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x1499D28", Offset = "0x1499D28", VA = "0x1499D28", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x1499E00", Offset = "0x1499E00", VA = "0x1499E00", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x1499E08", Offset = "0x1499E08", VA = "0x1499E08", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x1499F98", Offset = "0x1499F98", VA = "0x1499F98")]
		public LerpTwoVector3()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD44B0", Offset = "0xFD44B0")]
	public class GetRandomClosePoint : ActionTask
	{
		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> orignal;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> radius;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x1700035E")]
		protected override string info
		{
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0x1498EBC", Offset = "0x1498EBC", VA = "0x1498EBC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x1498F94", Offset = "0x1498F94", VA = "0x1498F94", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x14990AC", Offset = "0x14990AC", VA = "0x14990AC")]
		public GetRandomClosePoint()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD44E8", Offset = "0xFD44E8")]
	public class GetRandomPointInList : ActionTask
	{
		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<List<GameObject>> inputList;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> result;

		[Token(Token = "0x1700035F")]
		protected override string info
		{
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x14990B4", Offset = "0x14990B4", VA = "0x14990B4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x149918C", Offset = "0x149918C", VA = "0x149918C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x14992C4", Offset = "0x14992C4", VA = "0x14992C4")]
		public GetRandomPointInList()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4520", Offset = "0xFD4520")]
	public class GetLaserLookAtPoint : ActionTask
	{
		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<Transform> result;

		[Token(Token = "0x17000360")]
		protected override string info
		{
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0x1498A30", Offset = "0x1498A30", VA = "0x1498A30", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x1498B08", Offset = "0x1498B08", VA = "0x1498B08", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x1498C5C", Offset = "0x1498C5C", VA = "0x1498C5C")]
		public GetLaserLookAtPoint()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4558", Offset = "0xFD4558")]
	public class GetRangeRealValue : ActionTask<Transform>
	{
		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> ratio;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> oldValue;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> resultValue;

		[Token(Token = "0x17000361")]
		protected override string info
		{
			[Token(Token = "0x60022E8")]
			[Address(RVA = "0x14992CC", Offset = "0x14992CC", VA = "0x14992CC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x14993A4", Offset = "0x14993A4", VA = "0x14993A4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x149944C", Offset = "0x149944C", VA = "0x149944C")]
		public GetRangeRealValue()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4590", Offset = "0xFD4590")]
	public class GetRealBulletOffsetDisntance : ActionTask<Transform>
	{
		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> BulletV;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> MovePanV;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> MaxDistance;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> beginPoint;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<GameObject> endPoint;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<Vector3> orignalDir;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[BlackboardOnly]
		public BBParameter<Vector3> resultDirOffset;

		[Token(Token = "0x17000362")]
		protected override string info
		{
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x149949C", Offset = "0x149949C", VA = "0x149949C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x1499574", Offset = "0x1499574", VA = "0x1499574", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x1499764", Offset = "0x1499764", VA = "0x1499764")]
		public GetRealBulletOffsetDisntance()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD45C8", Offset = "0xFD45C8")]
	public class GetTwoPointDirection : ActionTask<Transform>
	{
		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> begin;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> end;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x17000363")]
		protected override string info
		{
			[Token(Token = "0x60022EE")]
			[Address(RVA = "0x14997B4", Offset = "0x14997B4", VA = "0x14997B4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x149988C", Offset = "0x149988C", VA = "0x149988C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x14999F8", Offset = "0x14999F8", VA = "0x14999F8")]
		public GetTwoPointDirection()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4600", Offset = "0xFD4600")]
	public class GetTwoPointLimitRatioDisntance : ActionTask<Transform>
	{
		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<AnimationCurve> RatioCurve;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> baseDis;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> maxDistance;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> beginPoint;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<GameObject> endPoint;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[BlackboardOnly]
		public BBParameter<float> resultDis;

		[Token(Token = "0x17000364")]
		protected override string info
		{
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x1499A48", Offset = "0x1499A48", VA = "0x1499A48", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x1499B20", Offset = "0x1499B20", VA = "0x1499B20", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x1499CD8", Offset = "0x1499CD8", VA = "0x1499CD8")]
		public GetTwoPointLimitRatioDisntance()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFD4638", Offset = "0xFD4638")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4638", Offset = "0xFD4638")]
	public class RotateTorwardToLocalRotation : ActionTask<Transform>
	{
		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFDB24C", Offset = "0xFDB24C")]
		public BBParameter<Transform> target;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFDB25C", Offset = "0xFDB25C")]
		public BBParameter<float> angleDifference;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> upVector;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool waitActionFinish;

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x1499FE8", Offset = "0x1499FE8", VA = "0x1499FE8", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x149A2BC", Offset = "0x149A2BC", VA = "0x149A2BC")]
		public RotateTorwardToLocalRotation()
		{
		}
	}
}
namespace PVE.Tasks.Actions
{
	[Token(Token = "0x20003FA")]
	public enum e_Direction_Type
	{
		[Token(Token = "0x40019C5")]
		Forward,
		[Token(Token = "0x40019C6")]
		Back,
		[Token(Token = "0x40019C7")]
		Right,
		[Token(Token = "0x40019C8")]
		Left
	}
	[Token(Token = "0x20003FB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD469C", Offset = "0xFD469C")]
	public class Avoid : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<GameObject> enemy;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> shelterList;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> speed;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float keepDistance;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 pointToMove;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 lastEnemyPostion;

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x14A25D0", Offset = "0x14A25D0", VA = "0x14A25D0")]
		private void CalculatePointToMove()
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x14A2C18", Offset = "0x14A2C18", VA = "0x14A2C18", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x14A2B70", Offset = "0x14A2B70", VA = "0x14A2B70")]
		private float GetDot(Vector3 _lhs, Vector3 _rhs)
		{
			return default(float);
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x14A2D94", Offset = "0x14A2D94", VA = "0x14A2D94", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x14A2ECC", Offset = "0x14A2ECC", VA = "0x14A2ECC", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x14A2F60", Offset = "0x14A2F60", VA = "0x14A2F60", Slot = "15")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x14A2F70", Offset = "0x14A2F70", VA = "0x14A2F70", Slot = "10")]
		public override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x14A2F80", Offset = "0x14A2F80", VA = "0x14A2F80")]
		public Avoid()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD46D4", Offset = "0xFD46D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD46D4", Offset = "0xFD46D4")]
	public class FindMovePoint : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> pointToMove;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> radius;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 bornPos;

		[Token(Token = "0x17000365")]
		protected override string info
		{
			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x14A307C", Offset = "0x14A307C", VA = "0x14A307C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x14A3000", Offset = "0x14A3000", VA = "0x14A3000", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x14A30D0", Offset = "0x14A30D0", VA = "0x14A30D0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x14A31C8", Offset = "0x14A31C8", VA = "0x14A31C8")]
		private Vector3 FindNextMovePoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x14A33C4", Offset = "0x14A33C4", VA = "0x14A33C4")]
		public FindMovePoint()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4734", Offset = "0xFD4734")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4734", Offset = "0xFD4734")]
	public class FindRandomMovePoint : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> pointToMove;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> pathMaxDis;

		[Token(Token = "0x17000366")]
		protected override string info
		{
			[Token(Token = "0x6002303")]
			[Address(RVA = "0x14A3438", Offset = "0x14A3438", VA = "0x14A3438", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x14A348C", Offset = "0x14A348C", VA = "0x14A348C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x14A3570", Offset = "0x14A3570", VA = "0x14A3570")]
		private Vector3 RandomPoint(Vector3 center, float range)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x14A36FC", Offset = "0x14A36FC", VA = "0x14A36FC")]
		public FindRandomMovePoint()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4794", Offset = "0xFD4794")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4794", Offset = "0xFD4794")]
	public class FindSelfRandomPoint : ActionTask<Transform>
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> minRadius;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> maxRadius;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<Transform> RectTrn;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> point;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<bool> isUseY;

		[Token(Token = "0x17000367")]
		protected override string info
		{
			[Token(Token = "0x6002307")]
			[Address(RVA = "0x14A374C", Offset = "0x14A374C", VA = "0x14A374C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x14A37A0", Offset = "0x14A37A0", VA = "0x14A37A0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x14A3814", Offset = "0x14A3814", VA = "0x14A3814")]
		private Vector3 FindNextMovePoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x14A3CC8", Offset = "0x14A3CC8", VA = "0x14A3CC8")]
		public FindSelfRandomPoint()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD47F4", Offset = "0xFD47F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD47F4", Offset = "0xFD47F4")]
	public class FindSelfRangeRandomPoint : ActionTask<Transform>
	{
		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> minRadius;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> maxRadius;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<SpawnPointInfo> SpawnPointRectTrn;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> point;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<bool> isUseY;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float totalV;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] everyV;

		[Token(Token = "0x17000368")]
		protected override string info
		{
			[Token(Token = "0x600230B")]
			[Address(RVA = "0x14A3D58", Offset = "0x14A3D58", VA = "0x14A3D58", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x14A3DAC", Offset = "0x14A3DAC", VA = "0x14A3DAC", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x14A3E20", Offset = "0x14A3E20", VA = "0x14A3E20")]
		private Vector3 FindNextMovePoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x14A4298", Offset = "0x14A4298", VA = "0x14A4298")]
		private Transform GetVolumeRatioPoint()
		{
			return null;
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x14A4540", Offset = "0x14A4540", VA = "0x14A4540")]
		public FindSelfRangeRandomPoint()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4854", Offset = "0xFD4854")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4854", Offset = "0xFD4854")]
	public class GetCloseEludePoint : ActionTask
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> unit;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> Dis;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<EludePointCell> EPoint;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<bool> HavePoint;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<eMonsterAttackType> AttackType;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<eMonsterAttackDirType> AttackDirType;

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x14A45F4", Offset = "0x14A45F4", VA = "0x14A45F4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x14A490C", Offset = "0x14A490C", VA = "0x14A490C")]
		public GetCloseEludePoint()
		{
		}
	}
	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD48B4", Offset = "0xFD48B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD48B4", Offset = "0xFD48B4")]
	public class ResetMonsterWarning : ActionTask
	{
		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x14A4BE0", Offset = "0x14A4BE0", VA = "0x14A4BE0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x14A4D4C", Offset = "0x14A4D4C", VA = "0x14A4D4C")]
		public ResetMonsterWarning()
		{
		}
	}
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4914", Offset = "0xFD4914")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4914", Offset = "0xFD4914")]
	public class UseEludePoint : ActionTask
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<EludePointCell> EPointCell;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<Vector3> point;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<GameObject> pointObj;

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x14A5B50", Offset = "0x14A5B50", VA = "0x14A5B50", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x14A5CCC", Offset = "0x14A5CCC", VA = "0x14A5CCC")]
		public UseEludePoint()
		{
		}
	}
	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4974", Offset = "0xFD4974")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4974", Offset = "0xFD4974")]
	public class PVERotateTowards : ActionTask<Transform>
	{
		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> upVector;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool alreadyRotate;

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x14A4914", Offset = "0x14A4914", VA = "0x14A4914", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x14A4B48", Offset = "0x14A4B48", VA = "0x14A4B48")]
		public PVERotateTowards()
		{
		}
	}
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD49D4", Offset = "0xFD49D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD49D4", Offset = "0xFD49D4")]
	public class SetBornPosition : ActionTask
	{
		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> bornPosition;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x17000369")]
		protected override string info
		{
			[Token(Token = "0x6002318")]
			[Address(RVA = "0x14A4D54", Offset = "0x14A4D54", VA = "0x14A4D54", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x14A4D9C", Offset = "0x14A4D9C", VA = "0x14A4D9C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x14A4E8C", Offset = "0x14A4E8C", VA = "0x14A4E8C")]
		public SetBornPosition()
		{
		}
	}
	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4A34", Offset = "0xFD4A34")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4A34", Offset = "0xFD4A34")]
	public class SetDirection : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> directionV3;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Direction direction;

		[Token(Token = "0x1700036A")]
		protected override string info
		{
			[Token(Token = "0x600231C")]
			[Address(RVA = "0x14A4F24", Offset = "0x14A4F24", VA = "0x14A4F24", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x14A4E94", Offset = "0x14A4E94", VA = "0x14A4E94", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x14A4F6C", Offset = "0x14A4F6C", VA = "0x14A4F6C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x14A4FB8", Offset = "0x14A4FB8", VA = "0x14A4FB8")]
		private bool CalculatePath(Direction _dir, int _calculationTimes)
		{
			return default(bool);
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x14A5350", Offset = "0x14A5350", VA = "0x14A5350")]
		private void DrawPathLine(NavMeshPath _path, Vector3[] _allWayPoints)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x14A54B8", Offset = "0x14A54B8", VA = "0x14A54B8")]
		public SetDirection()
		{
		}
	}
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4A94", Offset = "0xFD4A94")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4A94", Offset = "0xFD4A94")]
	public class SetMonsterVisible : ActionTask<Transform>
	{
		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<bool> isVisible;

		[Token(Token = "0x1700036B")]
		protected override string info
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0x14A5508", Offset = "0x14A5508", VA = "0x14A5508", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x14A55E0", Offset = "0x14A55E0", VA = "0x14A55E0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x14A56C8", Offset = "0x14A56C8", VA = "0x14A56C8")]
		public SetMonsterVisible()
		{
		}
	}
	[Token(Token = "0x2000407")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4AF4", Offset = "0xFD4AF4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4AF4", Offset = "0xFD4AF4")]
	public class ShowTeleportEffect : ActionTask<Transform>
	{
		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> targetPoint;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Quaternion> targetRot;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<bool> isShow;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<bool> isUntilFinish;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TeleportEffect teleport;

		[Token(Token = "0x1700036C")]
		protected override string info
		{
			[Token(Token = "0x6002324")]
			[Address(RVA = "0x14A5718", Offset = "0x14A5718", VA = "0x14A5718", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x14A57F0", Offset = "0x14A57F0", VA = "0x14A57F0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x14A5A5C", Offset = "0x14A5A5C", VA = "0x14A5A5C", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x14A5B00", Offset = "0x14A5B00", VA = "0x14A5B00")]
		public ShowTeleportEffect()
		{
		}
	}
}
namespace PVE.Tasks.Conditions
{
	[Token(Token = "0x2000408")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4B54", Offset = "0xFD4B54")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4B54", Offset = "0xFD4B54")]
	public class AlreadyMove : ConditionTask<Transform>
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float limitDistance;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 startAgainPos;

		[Token(Token = "0x1700036D")]
		protected override string info
		{
			[Token(Token = "0x6002328")]
			[Address(RVA = "0x14A5CD4", Offset = "0x14A5CD4", VA = "0x14A5CD4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x14A5DFC", Offset = "0x14A5DFC", VA = "0x14A5DFC", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x14A5E78", Offset = "0x14A5E78", VA = "0x14A5E78", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x14A5FC0", Offset = "0x14A5FC0", VA = "0x14A5FC0", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x14A615C", Offset = "0x14A615C", VA = "0x14A615C")]
		public AlreadyMove()
		{
		}
	}
	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4BB4", Offset = "0xFD4BB4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4BB4", Offset = "0xFD4BB4")]
	public class CheckWarningActive : ConditionTask
	{
		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x1700036E")]
		protected override string info
		{
			[Token(Token = "0x600232D")]
			[Address(RVA = "0x14A6788", Offset = "0x14A6788", VA = "0x14A6788", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x14A6860", Offset = "0x14A6860", VA = "0x14A6860", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x14A69C4", Offset = "0x14A69C4", VA = "0x14A69C4")]
		public CheckWarningActive()
		{
		}
	}
	[Token(Token = "0x200040A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4C14", Offset = "0xFD4C14")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4C14", Offset = "0xFD4C14")]
	public class HoldGround : ConditionTask<Transform>
	{
		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float limitDistance;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float currentDistance;

		[Token(Token = "0x1700036F")]
		protected override string info
		{
			[Token(Token = "0x6002330")]
			[Address(RVA = "0x14A6C58", Offset = "0x14A6C58", VA = "0x14A6C58", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x14A6CD8", Offset = "0x14A6CD8", VA = "0x14A6CD8", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x14A6E04", Offset = "0x14A6E04", VA = "0x14A6E04")]
		public HoldGround()
		{
		}
	}
	[Token(Token = "0x200040B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4C74", Offset = "0xFD4C74")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4C74", Offset = "0xFD4C74")]
	public class IsRoomMonsterActive : ConditionTask
	{
		[Token(Token = "0x17000370")]
		protected override string info
		{
			[Token(Token = "0x6002333")]
			[Address(RVA = "0x14A6E54", Offset = "0x14A6E54", VA = "0x14A6E54", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x14A6F2C", Offset = "0x14A6F2C", VA = "0x14A6F2C", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x14A6FA4", Offset = "0x14A6FA4", VA = "0x14A6FA4")]
		public IsRoomMonsterActive()
		{
		}
	}
	[Token(Token = "0x200040C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4CD4", Offset = "0xFD4CD4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4CD4", Offset = "0xFD4CD4")]
	public class JudgeBeHit : ConditionTask
	{
		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> selfUnit;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<bool> isBeHit;

		[Token(Token = "0x17000371")]
		protected override string info
		{
			[Token(Token = "0x6002337")]
			[Address(RVA = "0x14A70AC", Offset = "0x14A70AC", VA = "0x14A70AC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x14A6FAC", Offset = "0x14A6FAC", VA = "0x14A6FAC", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x14A715C", Offset = "0x14A715C", VA = "0x14A715C", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x14A71B4", Offset = "0x14A71B4", VA = "0x14A71B4")]
		private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x14A72D0", Offset = "0x14A72D0", VA = "0x14A72D0")]
		public JudgeBeHit()
		{
		}
	}
	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4D34", Offset = "0xFD4D34")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4D34", Offset = "0xFD4D34")]
	public class JudgeHit : ConditionTask
	{
		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<WUnit> selfUnit;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<bool> isItHit;

		[Token(Token = "0x17000372")]
		protected override string info
		{
			[Token(Token = "0x600233C")]
			[Address(RVA = "0x14A73D8", Offset = "0x14A73D8", VA = "0x14A73D8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x14A72D8", Offset = "0x14A72D8", VA = "0x14A72D8", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x14A7488", Offset = "0x14A7488", VA = "0x14A7488", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x14A74E0", Offset = "0x14A74E0", VA = "0x14A74E0")]
		private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x14A7604", Offset = "0x14A7604", VA = "0x14A7604")]
		public JudgeHit()
		{
		}
	}
	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4D94", Offset = "0xFD4D94")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4D94", Offset = "0xFD4D94")]
	public class CheckIsElude : ConditionTask
	{
		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x17000373")]
		protected override string info
		{
			[Token(Token = "0x6002340")]
			[Address(RVA = "0x14A61AC", Offset = "0x14A61AC", VA = "0x14A61AC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x14A6284", Offset = "0x14A6284", VA = "0x14A6284", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x14A63DC", Offset = "0x14A63DC", VA = "0x14A63DC")]
		public CheckIsElude()
		{
		}
	}
	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4DF4", Offset = "0xFD4DF4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4DF4", Offset = "0xFD4DF4")]
	public class CheckIsStandingMode : ConditionTask
	{
		[Token(Token = "0x17000374")]
		protected override string info
		{
			[Token(Token = "0x6002343")]
			[Address(RVA = "0x14A63E4", Offset = "0x14A63E4", VA = "0x14A63E4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x14A64BC", Offset = "0x14A64BC", VA = "0x14A64BC", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x14A6534", Offset = "0x14A6534", VA = "0x14A6534")]
		public CheckIsStandingMode()
		{
		}
	}
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4E54", Offset = "0xFD4E54")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4E54", Offset = "0xFD4E54")]
	public class CheckMonsterBeHit : ConditionTask
	{
		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x17000375")]
		protected override string info
		{
			[Token(Token = "0x6002346")]
			[Address(RVA = "0x14A653C", Offset = "0x14A653C", VA = "0x14A653C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x14A6614", Offset = "0x14A6614", VA = "0x14A6614", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x14A6780", Offset = "0x14A6780", VA = "0x14A6780")]
		public CheckMonsterBeHit()
		{
		}
	}
	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFD4EB4", Offset = "0xFD4EB4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFD4EB4", Offset = "0xFD4EB4")]
	public class CheckWarningTime : ConditionTask
	{
		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> warningTime;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CompareMethod checkType;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFDB2C4", Offset = "0xFDB2C4")]
		public float differenceThreshold;

		[Token(Token = "0x17000376")]
		protected override string info
		{
			[Token(Token = "0x6002349")]
			[Address(RVA = "0x14A69CC", Offset = "0x14A69CC", VA = "0x14A69CC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x14A6AA4", Offset = "0x14A6AA4", VA = "0x14A6AA4", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x14A6C44", Offset = "0x14A6C44", VA = "0x14A6C44")]
		public CheckWarningTime()
		{
		}
	}
}
namespace ParagonAI
{
	[Token(Token = "0x2000412")]
	public class RotateToAimGunScript : MonoBehaviour
	{
		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform spineBone;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bulletSpawnTransform;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetTransform;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 targetTransformOffset;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool shouldDebug;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 maximumRotationAngles;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float rotationSpeed;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion spineRotationLastFrame;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 tempSpineLocalEulerAngles;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool isEnabled;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float minDistToAim;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion targetRot;

		[Token(Token = "0x17000377")]
		private Vector3 targetTransformPos
		{
			[Token(Token = "0x600234C")]
			[Address(RVA = "0x139F024", Offset = "0x139F024", VA = "0x139F024")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x139F154", Offset = "0x139F154", VA = "0x139F154")]
		private void Awake()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x139F1FC", Offset = "0x139F1FC", VA = "0x139F1FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x139F2A4", Offset = "0x139F2A4", VA = "0x139F2A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x139F2BC", Offset = "0x139F2BC", VA = "0x139F2BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x139F8D0", Offset = "0x139F8D0", VA = "0x139F8D0")]
		public void Activate()
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x139F2B4", Offset = "0x139F2B4", VA = "0x139F2B4")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x139F910", Offset = "0x139F910", VA = "0x139F910")]
		public void SetTargetTransform(Transform x, Vector3 offset)
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x139F838", Offset = "0x139F838", VA = "0x139F838")]
		private float ClampEulerAngles(float r, float lim)
		{
			return default(float);
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x139F95C", Offset = "0x139F95C", VA = "0x139F95C")]
		private float ResetIfTooHigh(float r, float lim)
		{
			return default(float);
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x139F99C", Offset = "0x139F99C", VA = "0x139F99C")]
		public RotateToAimGunScript()
		{
		}
	}
}
namespace Dissonance
{
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD4F14", Offset = "0xFD4F14")]
	internal sealed class CanBeNullAttribute : Attribute
	{
		[Token(Token = "0x6002357")]
		[Address(RVA = "0x13D9AA4", Offset = "0x13D9AA4", VA = "0x13D9AA4")]
		public CanBeNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD4F28", Offset = "0xFD4F28")]
	internal sealed class NotNullAttribute : Attribute
	{
		[Token(Token = "0x6002358")]
		[Address(RVA = "0x13DD348", Offset = "0x13DD348", VA = "0x13DD348")]
		public NotNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD4F3C", Offset = "0xFD4F3C")]
	internal sealed class ItemNotNullAttribute : Attribute
	{
		[Token(Token = "0x6002359")]
		[Address(RVA = "0x13DD14C", Offset = "0x13DD14C", VA = "0x13DD14C")]
		public ItemNotNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD4F50", Offset = "0xFD4F50")]
	internal sealed class ItemCanBeNullAttribute : Attribute
	{
		[Token(Token = "0x600235A")]
		[Address(RVA = "0x13DD144", Offset = "0x13DD144", VA = "0x13DD144")]
		public ItemCanBeNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD4F64", Offset = "0xFD4F64")]
	internal sealed class StringFormatMethodAttribute : Attribute
	{
		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB2E0", Offset = "0xFDB2E0")]
		private string <FormatParameterName>k__BackingField;

		[Token(Token = "0x17000378")]
		[Dissonance.NotNull]
		public string FormatParameterName
		{
			[Token(Token = "0x600235C")]
			[Address(RVA = "0x13DD5B0", Offset = "0x13DD5B0", VA = "0x13DD5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF1F4", Offset = "0xFDF1F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600235D")]
			[Address(RVA = "0x13DD5B8", Offset = "0x13DD5B8", VA = "0x13DD5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF204", Offset = "0xFDF204")]
			private set
			{
			}
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x13DD57C", Offset = "0x13DD57C", VA = "0x13DD57C")]
		public StringFormatMethodAttribute([Dissonance.NotNull] string formatParameterName)
		{
		}
	}
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD4F78", Offset = "0xFD4F78")]
	internal sealed class ValueProviderAttribute : Attribute
	{
		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB2F0", Offset = "0xFDB2F0")]
		private string <Name>k__BackingField;

		[Token(Token = "0x17000379")]
		[Dissonance.NotNull]
		public string Name
		{
			[Token(Token = "0x600235F")]
			[Address(RVA = "0x13DD6E4", Offset = "0x13DD6E4", VA = "0x13DD6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF214", Offset = "0xFDF214")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002360")]
			[Address(RVA = "0x13DD6EC", Offset = "0x13DD6EC", VA = "0x13DD6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF224", Offset = "0xFDF224")]
			private set
			{
			}
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x13DD6B0", Offset = "0x13DD6B0", VA = "0x13DD6B0")]
		public ValueProviderAttribute([Dissonance.NotNull] string name)
		{
		}
	}
	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD4FB0", Offset = "0xFD4FB0")]
	internal sealed class InvokerParameterNameAttribute : Attribute
	{
		[Token(Token = "0x6002361")]
		[Address(RVA = "0x13DD13C", Offset = "0x13DD13C", VA = "0x13DD13C")]
		public InvokerParameterNameAttribute()
		{
		}
	}
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD4FC4", Offset = "0xFD4FC4")]
	internal sealed class NotifyPropertyChangedInvocatorAttribute : Attribute
	{
		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB300", Offset = "0xFDB300")]
		private string <ParameterName>k__BackingField;

		[Token(Token = "0x1700037A")]
		[Dissonance.CanBeNull]
		public string ParameterName
		{
			[Token(Token = "0x6002364")]
			[Address(RVA = "0x13DD38C", Offset = "0x13DD38C", VA = "0x13DD38C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF234", Offset = "0xFDF234")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002365")]
			[Address(RVA = "0x13DD394", Offset = "0x13DD394", VA = "0x13DD394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF244", Offset = "0xFDF244")]
			private set
			{
			}
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x13DD350", Offset = "0x13DD350", VA = "0x13DD350")]
		public NotifyPropertyChangedInvocatorAttribute()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x13DD358", Offset = "0x13DD358", VA = "0x13DD358")]
		public NotifyPropertyChangedInvocatorAttribute([Dissonance.NotNull] string parameterName)
		{
		}
	}
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD4FD8", Offset = "0xFD4FD8")]
	internal sealed class ContractAnnotationAttribute : Attribute
	{
		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB310", Offset = "0xFDB310")]
		private string <Contract>k__BackingField;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB320", Offset = "0xFDB320")]
		private bool <ForceFullStates>k__BackingField;

		[Token(Token = "0x1700037B")]
		[Dissonance.NotNull]
		public string Contract
		{
			[Token(Token = "0x6002368")]
			[Address(RVA = "0x13D9B78", Offset = "0x13D9B78", VA = "0x13D9B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF254", Offset = "0xFDF254")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002369")]
			[Address(RVA = "0x13D9B80", Offset = "0x13D9B80", VA = "0x13D9B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF264", Offset = "0xFDF264")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public bool ForceFullStates
		{
			[Token(Token = "0x600236A")]
			[Address(RVA = "0x13D9B88", Offset = "0x13D9B88", VA = "0x13D9B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF274", Offset = "0xFDF274")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600236B")]
			[Address(RVA = "0x13D9B90", Offset = "0x13D9B90", VA = "0x13D9B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF284", Offset = "0xFDF284")]
			private set
			{
			}
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x13D9AF0", Offset = "0x13D9AF0", VA = "0x13D9AF0")]
		public ContractAnnotationAttribute([Dissonance.NotNull] string contract)
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x13D9B2C", Offset = "0x13D9B2C", VA = "0x13D9B2C")]
		public ContractAnnotationAttribute([Dissonance.NotNull] string contract, bool forceFullStates)
		{
		}
	}
	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5010", Offset = "0xFD5010")]
	internal sealed class LocalizationRequiredAttribute : Attribute
	{
		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB330", Offset = "0xFDB330")]
		private bool <Required>k__BackingField;

		[Token(Token = "0x1700037D")]
		public bool Required
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0x13DD1B8", Offset = "0x13DD1B8", VA = "0x13DD1B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF294", Offset = "0xFDF294")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600236F")]
			[Address(RVA = "0x13DD1C0", Offset = "0x13DD1C0", VA = "0x13DD1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF2A4", Offset = "0xFDF2A4")]
			private set
			{
			}
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x13DD15C", Offset = "0x13DD15C", VA = "0x13DD15C")]
		public LocalizationRequiredAttribute()
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x13DD188", Offset = "0x13DD188", VA = "0x13DD188")]
		public LocalizationRequiredAttribute(bool required)
		{
		}
	}
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5024", Offset = "0xFD5024")]
	internal sealed class CannotApplyEqualityOperatorAttribute : Attribute
	{
		[Token(Token = "0x6002370")]
		[Address(RVA = "0x13D9AAC", Offset = "0x13D9AAC", VA = "0x13D9AAC")]
		public CannotApplyEqualityOperatorAttribute()
		{
		}
	}
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5038", Offset = "0xFD5038")]
	[AttributeAttribute(Name = "BaseTypeRequiredAttribute", RVA = "0xFD5038", Offset = "0xFD5038")]
	internal sealed class BaseTypeRequiredAttribute : Attribute
	{
		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB340", Offset = "0xFDB340")]
		private Type <BaseType>k__BackingField;

		[Token(Token = "0x1700037E")]
		[Dissonance.NotNull]
		public Type BaseType
		{
			[Token(Token = "0x6002372")]
			[Address(RVA = "0x13D9A94", Offset = "0x13D9A94", VA = "0x13D9A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF2B4", Offset = "0xFDF2B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002373")]
			[Address(RVA = "0x13D9A9C", Offset = "0x13D9A9C", VA = "0x13D9A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF2C4", Offset = "0xFDF2C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x13D9A60", Offset = "0x13D9A60", VA = "0x13D9A60")]
		public BaseTypeRequiredAttribute([Dissonance.NotNull] Type baseType)
		{
		}
	}
	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD50BC", Offset = "0xFD50BC")]
	internal sealed class UsedImplicitlyAttribute : Attribute
	{
		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB350", Offset = "0xFDB350")]
		private Dissonance.ImplicitUseKindFlags <UseKindFlags>k__BackingField;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB360", Offset = "0xFDB360")]
		private Dissonance.ImplicitUseTargetFlags <TargetFlags>k__BackingField;

		[Token(Token = "0x1700037F")]
		public Dissonance.ImplicitUseKindFlags UseKindFlags
		{
			[Token(Token = "0x6002378")]
			[Address(RVA = "0x13DD690", Offset = "0x13DD690", VA = "0x13DD690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF2D4", Offset = "0xFDF2D4")]
			get
			{
				return default(Dissonance.ImplicitUseKindFlags);
			}
			[Token(Token = "0x6002379")]
			[Address(RVA = "0x13DD698", Offset = "0x13DD698", VA = "0x13DD698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF2E4", Offset = "0xFDF2E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public Dissonance.ImplicitUseTargetFlags TargetFlags
		{
			[Token(Token = "0x600237A")]
			[Address(RVA = "0x13DD6A0", Offset = "0x13DD6A0", VA = "0x13DD6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF2F4", Offset = "0xFDF2F4")]
			get
			{
				return default(Dissonance.ImplicitUseTargetFlags);
			}
			[Token(Token = "0x600237B")]
			[Address(RVA = "0x13DD6A8", Offset = "0x13DD6A8", VA = "0x13DD6A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF304", Offset = "0xFDF304")]
			private set
			{
			}
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x13DD5C8", Offset = "0x13DD5C8", VA = "0x13DD5C8")]
		public UsedImplicitlyAttribute()
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x13DD630", Offset = "0x13DD630", VA = "0x13DD630")]
		public UsedImplicitlyAttribute(Dissonance.ImplicitUseKindFlags useKindFlags)
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x13DD660", Offset = "0x13DD660", VA = "0x13DD660")]
		public UsedImplicitlyAttribute(Dissonance.ImplicitUseTargetFlags targetFlags)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x13DD5F8", Offset = "0x13DD5F8", VA = "0x13DD5F8")]
		public UsedImplicitlyAttribute(Dissonance.ImplicitUseKindFlags useKindFlags, Dissonance.ImplicitUseTargetFlags targetFlags)
		{
		}
	}
	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD50D0", Offset = "0xFD50D0")]
	internal sealed class MeansImplicitUseAttribute : Attribute
	{
		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB370", Offset = "0xFDB370")]
		private Dissonance.ImplicitUseKindFlags <UseKindFlags>k__BackingField;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB380", Offset = "0xFDB380")]
		private Dissonance.ImplicitUseTargetFlags <TargetFlags>k__BackingField;

		[Token(Token = "0x17000381")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFE1AB0", Offset = "0xFE1AB0")]
		public Dissonance.ImplicitUseKindFlags UseKindFlags
		{
			[Token(Token = "0x6002380")]
			[Address(RVA = "0x13DD2CC", Offset = "0x13DD2CC", VA = "0x13DD2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF314", Offset = "0xFDF314")]
			get
			{
				return default(Dissonance.ImplicitUseKindFlags);
			}
			[Token(Token = "0x6002381")]
			[Address(RVA = "0x13DD2D4", Offset = "0x13DD2D4", VA = "0x13DD2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF324", Offset = "0xFDF324")]
			private set
			{
			}
		}

		[Token(Token = "0x17000382")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFE1AC0", Offset = "0xFE1AC0")]
		public Dissonance.ImplicitUseTargetFlags TargetFlags
		{
			[Token(Token = "0x6002382")]
			[Address(RVA = "0x13DD2DC", Offset = "0x13DD2DC", VA = "0x13DD2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF334", Offset = "0xFDF334")]
			get
			{
				return default(Dissonance.ImplicitUseTargetFlags);
			}
			[Token(Token = "0x6002383")]
			[Address(RVA = "0x13DD2E4", Offset = "0x13DD2E4", VA = "0x13DD2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF344", Offset = "0xFDF344")]
			private set
			{
			}
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x13DD204", Offset = "0x13DD204", VA = "0x13DD204")]
		public MeansImplicitUseAttribute()
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x13DD26C", Offset = "0x13DD26C", VA = "0x13DD26C")]
		public MeansImplicitUseAttribute(Dissonance.ImplicitUseKindFlags useKindFlags)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x13DD29C", Offset = "0x13DD29C", VA = "0x13DD29C")]
		public MeansImplicitUseAttribute(Dissonance.ImplicitUseTargetFlags targetFlags)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x13DD234", Offset = "0x13DD234", VA = "0x13DD234")]
		public MeansImplicitUseAttribute(Dissonance.ImplicitUseKindFlags useKindFlags, Dissonance.ImplicitUseTargetFlags targetFlags)
		{
		}
	}
	[Token(Token = "0x2000421")]
	[Flags]
	internal enum ImplicitUseKindFlags
	{
		[Token(Token = "0x4001A20")]
		Default = 7,
		[Token(Token = "0x4001A21")]
		Access = 1,
		[Token(Token = "0x4001A22")]
		Assign = 2,
		[Token(Token = "0x4001A23")]
		InstantiatedWithFixedConstructorSignature = 4,
		[Token(Token = "0x4001A24")]
		InstantiatedNoFixedConstructorSignature = 8
	}
	[Token(Token = "0x2000422")]
	[Flags]
	internal enum ImplicitUseTargetFlags
	{
		[Token(Token = "0x4001A26")]
		Default = 1,
		[Token(Token = "0x4001A27")]
		Itself = 1,
		[Token(Token = "0x4001A28")]
		Members = 2,
		[Token(Token = "0x4001A29")]
		WithMembers = 3
	}
	[Token(Token = "0x2000423")]
	[AttributeAttribute(Name = "MeansImplicitUseAttribute", RVA = "0xFD5104", Offset = "0xFD5104")]
	internal sealed class PublicAPIAttribute : Attribute
	{
		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB390", Offset = "0xFDB390")]
		private string <Comment>k__BackingField;

		[Token(Token = "0x17000383")]
		[Dissonance.CanBeNull]
		public string Comment
		{
			[Token(Token = "0x6002386")]
			[Address(RVA = "0x13DD42C", Offset = "0x13DD42C", VA = "0x13DD42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF354", Offset = "0xFDF354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002387")]
			[Address(RVA = "0x13DD434", Offset = "0x13DD434", VA = "0x13DD434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF364", Offset = "0xFDF364")]
			private set
			{
			}
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x13DD3F0", Offset = "0x13DD3F0", VA = "0x13DD3F0")]
		public PublicAPIAttribute()
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x13DD3F8", Offset = "0x13DD3F8", VA = "0x13DD3F8")]
		public PublicAPIAttribute([Dissonance.NotNull] string comment)
		{
		}
	}
	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5118", Offset = "0xFD5118")]
	internal sealed class InstantHandleAttribute : Attribute
	{
		[Token(Token = "0x6002388")]
		[Address(RVA = "0x13D9C2C", Offset = "0x13D9C2C", VA = "0x13D9C2C")]
		public InstantHandleAttribute()
		{
		}
	}
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD512C", Offset = "0xFD512C")]
	internal sealed class PureAttribute : Attribute
	{
		[Token(Token = "0x6002389")]
		[Address(RVA = "0x13DD43C", Offset = "0x13DD43C", VA = "0x13DD43C")]
		public PureAttribute()
		{
		}
	}
	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5140", Offset = "0xFD5140")]
	internal sealed class MustUseReturnValueAttribute : Attribute
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB3A0", Offset = "0xFDB3A0")]
		private string <Justification>k__BackingField;

		[Token(Token = "0x17000384")]
		[Dissonance.CanBeNull]
		public string Justification
		{
			[Token(Token = "0x600238C")]
			[Address(RVA = "0x13DD328", Offset = "0x13DD328", VA = "0x13DD328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF374", Offset = "0xFDF374")]
			get
			{
				return null;
			}
			[Token(Token = "0x600238D")]
			[Address(RVA = "0x13DD330", Offset = "0x13DD330", VA = "0x13DD330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF384", Offset = "0xFDF384")]
			private set
			{
			}
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x13DD2EC", Offset = "0x13DD2EC", VA = "0x13DD2EC")]
		public MustUseReturnValueAttribute()
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x13DD2F4", Offset = "0x13DD2F4", VA = "0x13DD2F4")]
		public MustUseReturnValueAttribute([Dissonance.NotNull] string justification)
		{
		}
	}
	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5154", Offset = "0xFD5154")]
	internal sealed class ProvidesContextAttribute : Attribute
	{
		[Token(Token = "0x600238E")]
		[Address(RVA = "0x13DD3E8", Offset = "0x13DD3E8", VA = "0x13DD3E8")]
		public ProvidesContextAttribute()
		{
		}
	}
	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5168", Offset = "0xFD5168")]
	internal sealed class PathReferenceAttribute : Attribute
	{
		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB3B0", Offset = "0xFDB3B0")]
		private string <BasePath>k__BackingField;

		[Token(Token = "0x17000385")]
		[Dissonance.CanBeNull]
		public string BasePath
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x13DD3D8", Offset = "0x13DD3D8", VA = "0x13DD3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF394", Offset = "0xFDF394")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002392")]
			[Address(RVA = "0x13DD3E0", Offset = "0x13DD3E0", VA = "0x13DD3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF3A4", Offset = "0xFDF3A4")]
			private set
			{
			}
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x13DD39C", Offset = "0x13DD39C", VA = "0x13DD39C")]
		public PathReferenceAttribute()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x13DD3A4", Offset = "0x13DD3A4", VA = "0x13DD3A4")]
		public PathReferenceAttribute([Dissonance.NotNull][AttributeAttribute(Name = "PathReferenceAttribute", RVA = "0xFE1288", Offset = "0xFE1288")] string basePath)
		{
		}
	}
	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD517C", Offset = "0xFD517C")]
	internal sealed class SourceTemplateAttribute : Attribute
	{
		[Token(Token = "0x6002393")]
		[Address(RVA = "0x13DD574", Offset = "0x13DD574", VA = "0x13DD574")]
		public SourceTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x200042A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5190", Offset = "0xFD5190")]
	internal sealed class MacroAttribute : Attribute
	{
		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB3C0", Offset = "0xFDB3C0")]
		private string <Expression>k__BackingField;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB3D0", Offset = "0xFDB3D0")]
		private int <Editable>k__BackingField;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB3E0", Offset = "0xFDB3E0")]
		private string <Target>k__BackingField;

		[Token(Token = "0x17000386")]
		[Dissonance.CanBeNull]
		public string Expression
		{
			[Token(Token = "0x6002394")]
			[Address(RVA = "0x13DD1CC", Offset = "0x13DD1CC", VA = "0x13DD1CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF3B4", Offset = "0xFDF3B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002395")]
			[Address(RVA = "0x13DD1D4", Offset = "0x13DD1D4", VA = "0x13DD1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF3C4", Offset = "0xFDF3C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000387")]
		public int Editable
		{
			[Token(Token = "0x6002396")]
			[Address(RVA = "0x13DD1DC", Offset = "0x13DD1DC", VA = "0x13DD1DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF3D4", Offset = "0xFDF3D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002397")]
			[Address(RVA = "0x13DD1E4", Offset = "0x13DD1E4", VA = "0x13DD1E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF3E4", Offset = "0xFDF3E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000388")]
		[Dissonance.CanBeNull]
		public string Target
		{
			[Token(Token = "0x6002398")]
			[Address(RVA = "0x13DD1EC", Offset = "0x13DD1EC", VA = "0x13DD1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF3F4", Offset = "0xFDF3F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x13DD1F4", Offset = "0x13DD1F4", VA = "0x13DD1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF404", Offset = "0xFDF404")]
			set
			{
			}
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x13DD1FC", Offset = "0x13DD1FC", VA = "0x13DD1FC")]
		public MacroAttribute()
		{
		}
	}
	[Token(Token = "0x200042B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD51C8", Offset = "0xFD51C8")]
	internal sealed class AspMvcAreaMasterLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB3F0", Offset = "0xFDB3F0")]
		private string <Format>k__BackingField;

		[Token(Token = "0x17000389")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x13D9794", Offset = "0x13D9794", VA = "0x13D9794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF414", Offset = "0xFDF414")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x13D979C", Offset = "0x13D979C", VA = "0x13D979C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF424", Offset = "0xFDF424")]
			private set
			{
			}
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x13D9760", Offset = "0x13D9760", VA = "0x13D9760")]
		public AspMvcAreaMasterLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5200", Offset = "0xFD5200")]
	internal sealed class AspMvcAreaPartialViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB400", Offset = "0xFDB400")]
		private string <Format>k__BackingField;

		[Token(Token = "0x1700038A")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x600239F")]
			[Address(RVA = "0x13D97D8", Offset = "0x13D97D8", VA = "0x13D97D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF434", Offset = "0xFDF434")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023A0")]
			[Address(RVA = "0x13D97E0", Offset = "0x13D97E0", VA = "0x13D97E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF444", Offset = "0xFDF444")]
			private set
			{
			}
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x13D97A4", Offset = "0x13D97A4", VA = "0x13D97A4")]
		public AspMvcAreaPartialViewLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5238", Offset = "0xFD5238")]
	internal sealed class AspMvcAreaViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB410", Offset = "0xFDB410")]
		private string <Format>k__BackingField;

		[Token(Token = "0x1700038B")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x13D981C", Offset = "0x13D981C", VA = "0x13D981C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF454", Offset = "0xFDF454")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x13D9824", Offset = "0x13D9824", VA = "0x13D9824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF464", Offset = "0xFDF464")]
			private set
			{
			}
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x13D97E8", Offset = "0x13D97E8", VA = "0x13D97E8")]
		public AspMvcAreaViewLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5270", Offset = "0xFD5270")]
	internal sealed class AspMvcMasterLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB420", Offset = "0xFDB420")]
		private string <Format>k__BackingField;

		[Token(Token = "0x1700038C")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x13D98C4", Offset = "0x13D98C4", VA = "0x13D98C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF474", Offset = "0xFDF474")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023A6")]
			[Address(RVA = "0x13D98CC", Offset = "0x13D98CC", VA = "0x13D98CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF484", Offset = "0xFDF484")]
			private set
			{
			}
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x13D9890", Offset = "0x13D9890", VA = "0x13D9890")]
		public AspMvcMasterLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD52A8", Offset = "0xFD52A8")]
	internal sealed class AspMvcPartialViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB430", Offset = "0xFDB430")]
		private string <Format>k__BackingField;

		[Token(Token = "0x1700038D")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x13D9918", Offset = "0x13D9918", VA = "0x13D9918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF494", Offset = "0xFDF494")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x13D9920", Offset = "0x13D9920", VA = "0x13D9920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF4A4", Offset = "0xFDF4A4")]
			private set
			{
			}
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x13D98E4", Offset = "0x13D98E4", VA = "0x13D98E4")]
		public AspMvcPartialViewLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD52E0", Offset = "0xFD52E0")]
	internal sealed class AspMvcViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB440", Offset = "0xFDB440")]
		private string <Format>k__BackingField;

		[Token(Token = "0x1700038E")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x13D9984", Offset = "0x13D9984", VA = "0x13D9984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF4B4", Offset = "0xFDF4B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x13D998C", Offset = "0x13D998C", VA = "0x13D998C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF4C4", Offset = "0xFDF4C4")]
			private set
			{
			}
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x13D9950", Offset = "0x13D9950", VA = "0x13D9950")]
		public AspMvcViewLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x2000431")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5318", Offset = "0xFD5318")]
	internal sealed class AspMvcActionAttribute : Attribute
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB450", Offset = "0xFDB450")]
		private string <AnonymousProperty>k__BackingField;

		[Token(Token = "0x1700038F")]
		[Dissonance.CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x60023AF")]
			[Address(RVA = "0x13D96FC", Offset = "0x13D96FC", VA = "0x13D96FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF4D4", Offset = "0xFDF4D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B0")]
			[Address(RVA = "0x13D9704", Offset = "0x13D9704", VA = "0x13D9704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF4E4", Offset = "0xFDF4E4")]
			private set
			{
			}
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x13D96C0", Offset = "0x13D96C0", VA = "0x13D96C0")]
		public AspMvcActionAttribute()
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x13D96C8", Offset = "0x13D96C8", VA = "0x13D96C8")]
		public AspMvcActionAttribute([Dissonance.NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD532C", Offset = "0xFD532C")]
	internal sealed class AspMvcAreaAttribute : Attribute
	{
		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB460", Offset = "0xFDB460")]
		private string <AnonymousProperty>k__BackingField;

		[Token(Token = "0x17000390")]
		[Dissonance.CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0x13D9750", Offset = "0x13D9750", VA = "0x13D9750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF4F4", Offset = "0xFDF4F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B4")]
			[Address(RVA = "0x13D9758", Offset = "0x13D9758", VA = "0x13D9758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF504", Offset = "0xFDF504")]
			private set
			{
			}
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x13D9714", Offset = "0x13D9714", VA = "0x13D9714")]
		public AspMvcAreaAttribute()
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x13D971C", Offset = "0x13D971C", VA = "0x13D971C")]
		public AspMvcAreaAttribute([Dissonance.NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5340", Offset = "0xFD5340")]
	internal sealed class AspMvcControllerAttribute : Attribute
	{
		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB470", Offset = "0xFDB470")]
		private string <AnonymousProperty>k__BackingField;

		[Token(Token = "0x17000391")]
		[Dissonance.CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0x13D9868", Offset = "0x13D9868", VA = "0x13D9868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF514", Offset = "0xFDF514")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B8")]
			[Address(RVA = "0x13D9870", Offset = "0x13D9870", VA = "0x13D9870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF524", Offset = "0xFDF524")]
			private set
			{
			}
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x13D982C", Offset = "0x13D982C", VA = "0x13D982C")]
		public AspMvcControllerAttribute()
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x13D9834", Offset = "0x13D9834", VA = "0x13D9834")]
		public AspMvcControllerAttribute([Dissonance.NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5354", Offset = "0xFD5354")]
	internal sealed class AspMvcMasterAttribute : Attribute
	{
		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x13D9888", Offset = "0x13D9888", VA = "0x13D9888")]
		public AspMvcMasterAttribute()
		{
		}
	}
	[Token(Token = "0x2000435")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5368", Offset = "0xFD5368")]
	internal sealed class AspMvcModelTypeAttribute : Attribute
	{
		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x13D98D4", Offset = "0x13D98D4", VA = "0x13D98D4")]
		public AspMvcModelTypeAttribute()
		{
		}
	}
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD537C", Offset = "0xFD537C")]
	internal sealed class AspMvcPartialViewAttribute : Attribute
	{
		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x13D98DC", Offset = "0x13D98DC", VA = "0x13D98DC")]
		public AspMvcPartialViewAttribute()
		{
		}
	}
	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5390", Offset = "0xFD5390")]
	internal sealed class AspMvcSuppressViewErrorAttribute : Attribute
	{
		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x13D9928", Offset = "0x13D9928", VA = "0x13D9928")]
		public AspMvcSuppressViewErrorAttribute()
		{
		}
	}
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD53A4", Offset = "0xFD53A4")]
	internal sealed class AspMvcDisplayTemplateAttribute : Attribute
	{
		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x13D9878", Offset = "0x13D9878", VA = "0x13D9878")]
		public AspMvcDisplayTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD53B8", Offset = "0xFD53B8")]
	internal sealed class AspMvcEditorTemplateAttribute : Attribute
	{
		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x13D9880", Offset = "0x13D9880", VA = "0x13D9880")]
		public AspMvcEditorTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD53CC", Offset = "0xFD53CC")]
	internal sealed class AspMvcTemplateAttribute : Attribute
	{
		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x13D9930", Offset = "0x13D9930", VA = "0x13D9930")]
		public AspMvcTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD53E0", Offset = "0xFD53E0")]
	internal sealed class AspMvcViewAttribute : Attribute
	{
		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x13D9938", Offset = "0x13D9938", VA = "0x13D9938")]
		public AspMvcViewAttribute()
		{
		}
	}
	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD53F4", Offset = "0xFD53F4")]
	internal sealed class AspMvcViewComponentAttribute : Attribute
	{
		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x13D9940", Offset = "0x13D9940", VA = "0x13D9940")]
		public AspMvcViewComponentAttribute()
		{
		}
	}
	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5408", Offset = "0xFD5408")]
	internal sealed class AspMvcViewComponentViewAttribute : Attribute
	{
		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x13D9948", Offset = "0x13D9948", VA = "0x13D9948")]
		public AspMvcViewComponentViewAttribute()
		{
		}
	}
	[Token(Token = "0x200043E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD541C", Offset = "0xFD541C")]
	internal sealed class AspMvcActionSelectorAttribute : Attribute
	{
		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x13D970C", Offset = "0x13D970C", VA = "0x13D970C")]
		public AspMvcActionSelectorAttribute()
		{
		}
	}
	[Token(Token = "0x200043F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5430", Offset = "0xFD5430")]
	internal sealed class HtmlElementAttributesAttribute : Attribute
	{
		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB480", Offset = "0xFDB480")]
		private string <Name>k__BackingField;

		[Token(Token = "0x17000392")]
		[Dissonance.CanBeNull]
		public string Name
		{
			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x13D9C1C", Offset = "0x13D9C1C", VA = "0x13D9C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF534", Offset = "0xFDF534")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x13D9C24", Offset = "0x13D9C24", VA = "0x13D9C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF544", Offset = "0xFDF544")]
			private set
			{
			}
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x13D9BE0", Offset = "0x13D9BE0", VA = "0x13D9BE0")]
		public HtmlElementAttributesAttribute()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x13D9BE8", Offset = "0x13D9BE8", VA = "0x13D9BE8")]
		public HtmlElementAttributesAttribute([Dissonance.NotNull] string name)
		{
		}
	}
	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5444", Offset = "0xFD5444")]
	internal sealed class HtmlAttributeValueAttribute : Attribute
	{
		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB490", Offset = "0xFDB490")]
		private string <Name>k__BackingField;

		[Token(Token = "0x17000393")]
		[Dissonance.NotNull]
		public string Name
		{
			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x13D9BD0", Offset = "0x13D9BD0", VA = "0x13D9BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF554", Offset = "0xFDF554")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x13D9BD8", Offset = "0x13D9BD8", VA = "0x13D9BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF564", Offset = "0xFDF564")]
			private set
			{
			}
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x13D9B9C", Offset = "0x13D9B9C", VA = "0x13D9B9C")]
		public HtmlAttributeValueAttribute([Dissonance.NotNull] string name)
		{
		}
	}
	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5458", Offset = "0xFD5458")]
	internal sealed class RazorSectionAttribute : Attribute
	{
		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x13DD54C", Offset = "0x13DD54C", VA = "0x13DD54C")]
		public RazorSectionAttribute()
		{
		}
	}
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD546C", Offset = "0xFD546C")]
	internal sealed class CollectionAccessAttribute : Attribute
	{
		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB4A0", Offset = "0xFDB4A0")]
		private Dissonance.CollectionAccessType <CollectionAccessType>k__BackingField;

		[Token(Token = "0x17000394")]
		public Dissonance.CollectionAccessType CollectionAccessType
		{
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x13D9AE0", Offset = "0x13D9AE0", VA = "0x13D9AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF574", Offset = "0xFDF574")]
			get
			{
				return default(Dissonance.CollectionAccessType);
			}
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x13D9AE8", Offset = "0x13D9AE8", VA = "0x13D9AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF584", Offset = "0xFDF584")]
			private set
			{
			}
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x13D9AB4", Offset = "0x13D9AB4", VA = "0x13D9AB4")]
		public CollectionAccessAttribute(Dissonance.CollectionAccessType collectionAccessType)
		{
		}
	}
	[Token(Token = "0x2000443")]
	[Flags]
	internal enum CollectionAccessType
	{
		[Token(Token = "0x4001A3D")]
		None = 0,
		[Token(Token = "0x4001A3E")]
		Read = 1,
		[Token(Token = "0x4001A3F")]
		ModifyExistingContent = 2,
		[Token(Token = "0x4001A40")]
		UpdatedContent = 6
	}
	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5490", Offset = "0xFD5490")]
	internal sealed class AssertionMethodAttribute : Attribute
	{
		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x13D9A58", Offset = "0x13D9A58", VA = "0x13D9A58")]
		public AssertionMethodAttribute()
		{
		}
	}
	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD54A4", Offset = "0xFD54A4")]
	internal sealed class AssertionConditionAttribute : Attribute
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB4B0", Offset = "0xFDB4B0")]
		private Dissonance.AssertionConditionType <ConditionType>k__BackingField;

		[Token(Token = "0x17000395")]
		public Dissonance.AssertionConditionType ConditionType
		{
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x13D9A48", Offset = "0x13D9A48", VA = "0x13D9A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF594", Offset = "0xFDF594")]
			get
			{
				return default(Dissonance.AssertionConditionType);
			}
			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x13D9A50", Offset = "0x13D9A50", VA = "0x13D9A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF5A4", Offset = "0xFDF5A4")]
			private set
			{
			}
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x13D9A1C", Offset = "0x13D9A1C", VA = "0x13D9A1C")]
		public AssertionConditionAttribute(Dissonance.AssertionConditionType conditionType)
		{
		}
	}
	[Token(Token = "0x2000446")]
	internal enum AssertionConditionType
	{
		[Token(Token = "0x4001A43")]
		IS_TRUE,
		[Token(Token = "0x4001A44")]
		IS_FALSE,
		[Token(Token = "0x4001A45")]
		IS_NULL,
		[Token(Token = "0x4001A46")]
		IS_NOT_NULL
	}
	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFD54B8", Offset = "0xFD54B8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD54B8", Offset = "0xFD54B8")]
	internal sealed class TerminatesProgramAttribute : Attribute
	{
		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x13DD5C0", Offset = "0x13DD5C0", VA = "0x13DD5C0")]
		public TerminatesProgramAttribute()
		{
		}
	}
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5508", Offset = "0xFD5508")]
	internal sealed class LinqTunnelAttribute : Attribute
	{
		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x13DD154", Offset = "0x13DD154", VA = "0x13DD154")]
		public LinqTunnelAttribute()
		{
		}
	}
	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD551C", Offset = "0xFD551C")]
	internal sealed class NoEnumerationAttribute : Attribute
	{
		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x13DD338", Offset = "0x13DD338", VA = "0x13DD338")]
		public NoEnumerationAttribute()
		{
		}
	}
	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5530", Offset = "0xFD5530")]
	internal sealed class RegexPatternAttribute : Attribute
	{
		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x13DD56C", Offset = "0x13DD56C", VA = "0x13DD56C")]
		public RegexPatternAttribute()
		{
		}
	}
	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5544", Offset = "0xFD5544")]
	internal sealed class NoReorderAttribute : Attribute
	{
		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x13DD340", Offset = "0x13DD340", VA = "0x13DD340")]
		public NoReorderAttribute()
		{
		}
	}
	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5558", Offset = "0xFD5558")]
	internal sealed class XamlItemsControlAttribute : Attribute
	{
		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x13DD6FC", Offset = "0x13DD6FC", VA = "0x13DD6FC")]
		public XamlItemsControlAttribute()
		{
		}
	}
	[Token(Token = "0x200044D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD556C", Offset = "0xFD556C")]
	internal sealed class XamlItemBindingOfItemsControlAttribute : Attribute
	{
		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x13DD6F4", Offset = "0x13DD6F4", VA = "0x13DD6F4")]
		public XamlItemBindingOfItemsControlAttribute()
		{
		}
	}
	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5580", Offset = "0xFD5580")]
	internal sealed class AspChildControlTypeAttribute : Attribute
	{
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB4C0", Offset = "0xFDB4C0")]
		private string <TagName>k__BackingField;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB4D0", Offset = "0xFDB4D0")]
		private Type <ControlType>k__BackingField;

		[Token(Token = "0x17000396")]
		[Dissonance.NotNull]
		public string TagName
		{
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x13D9688", Offset = "0x13D9688", VA = "0x13D9688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF5B4", Offset = "0xFDF5B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x13D9690", Offset = "0x13D9690", VA = "0x13D9690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF5C4", Offset = "0xFDF5C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000397")]
		[Dissonance.NotNull]
		public Type ControlType
		{
			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x13D9698", Offset = "0x13D9698", VA = "0x13D9698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF5D4", Offset = "0xFDF5D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x13D96A0", Offset = "0x13D96A0", VA = "0x13D96A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF5E4", Offset = "0xFDF5E4")]
			private set
			{
			}
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x13D9638", Offset = "0x13D9638", VA = "0x13D9638")]
		public AspChildControlTypeAttribute([Dissonance.NotNull] string tagName, [Dissonance.NotNull] Type controlType)
		{
		}
	}
	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD55B8", Offset = "0xFD55B8")]
	internal sealed class AspDataFieldAttribute : Attribute
	{
		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x13D96A8", Offset = "0x13D96A8", VA = "0x13D96A8")]
		public AspDataFieldAttribute()
		{
		}
	}
	[Token(Token = "0x2000450")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD55CC", Offset = "0xFD55CC")]
	internal sealed class AspDataFieldsAttribute : Attribute
	{
		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x13D96B0", Offset = "0x13D96B0", VA = "0x13D96B0")]
		public AspDataFieldsAttribute()
		{
		}
	}
	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD55E0", Offset = "0xFD55E0")]
	internal sealed class AspMethodPropertyAttribute : Attribute
	{
		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x13D96B8", Offset = "0x13D96B8", VA = "0x13D96B8")]
		public AspMethodPropertyAttribute()
		{
		}
	}
	[Token(Token = "0x2000452")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD55F4", Offset = "0xFD55F4")]
	internal sealed class AspRequiredAttributeAttribute : Attribute
	{
		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB4E0", Offset = "0xFDB4E0")]
		private string <Attribute>k__BackingField;

		[Token(Token = "0x17000398")]
		[Dissonance.NotNull]
		public string Attribute
		{
			[Token(Token = "0x60023E3")]
			[Address(RVA = "0x13D99C8", Offset = "0x13D99C8", VA = "0x13D99C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF5F4", Offset = "0xFDF5F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0x13D99D0", Offset = "0x13D99D0", VA = "0x13D99D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF604", Offset = "0xFDF604")]
			private set
			{
			}
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x13D9994", Offset = "0x13D9994", VA = "0x13D9994")]
		public AspRequiredAttributeAttribute([Dissonance.NotNull] string attribute)
		{
		}
	}
	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD562C", Offset = "0xFD562C")]
	internal sealed class AspTypePropertyAttribute : Attribute
	{
		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB4F0", Offset = "0xFDB4F0")]
		private bool <CreateConstructorReferences>k__BackingField;

		[Token(Token = "0x17000399")]
		public bool CreateConstructorReferences
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x13D99D8", Offset = "0x13D99D8", VA = "0x13D99D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF614", Offset = "0xFDF614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023E6")]
			[Address(RVA = "0x13D99E0", Offset = "0x13D99E0", VA = "0x13D99E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF624", Offset = "0xFDF624")]
			private set
			{
			}
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x13D99EC", Offset = "0x13D99EC", VA = "0x13D99EC")]
		public AspTypePropertyAttribute(bool createConstructorReferences)
		{
		}
	}
	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5640", Offset = "0xFD5640")]
	internal sealed class RazorImportNamespaceAttribute : Attribute
	{
		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB500", Offset = "0xFDB500")]
		private string <Name>k__BackingField;

		[Token(Token = "0x1700039A")]
		[Dissonance.NotNull]
		public string Name
		{
			[Token(Token = "0x60023E9")]
			[Address(RVA = "0x13DD4C4", Offset = "0x13DD4C4", VA = "0x13DD4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF634", Offset = "0xFDF634")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023EA")]
			[Address(RVA = "0x13DD4CC", Offset = "0x13DD4CC", VA = "0x13DD4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF644", Offset = "0xFDF644")]
			private set
			{
			}
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x13DD490", Offset = "0x13DD490", VA = "0x13DD490")]
		public RazorImportNamespaceAttribute([Dissonance.NotNull] string name)
		{
		}
	}
	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5678", Offset = "0xFD5678")]
	internal sealed class RazorInjectionAttribute : Attribute
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB510", Offset = "0xFDB510")]
		private string <Type>k__BackingField;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB520", Offset = "0xFDB520")]
		private string <FieldName>k__BackingField;

		[Token(Token = "0x1700039B")]
		[Dissonance.NotNull]
		public string Type
		{
			[Token(Token = "0x60023EC")]
			[Address(RVA = "0x13DD524", Offset = "0x13DD524", VA = "0x13DD524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF654", Offset = "0xFDF654")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023ED")]
			[Address(RVA = "0x13DD52C", Offset = "0x13DD52C", VA = "0x13DD52C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF664", Offset = "0xFDF664")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		[Dissonance.NotNull]
		public string FieldName
		{
			[Token(Token = "0x60023EE")]
			[Address(RVA = "0x13DD534", Offset = "0x13DD534", VA = "0x13DD534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF674", Offset = "0xFDF674")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023EF")]
			[Address(RVA = "0x13DD53C", Offset = "0x13DD53C", VA = "0x13DD53C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF684", Offset = "0xFDF684")]
			private set
			{
			}
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x13DD4D4", Offset = "0x13DD4D4", VA = "0x13DD4D4")]
		public RazorInjectionAttribute([Dissonance.NotNull] string type, [Dissonance.NotNull] string fieldName)
		{
		}
	}
	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD56B0", Offset = "0xFD56B0")]
	internal sealed class RazorDirectiveAttribute : Attribute
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB530", Offset = "0xFDB530")]
		private string <Directive>k__BackingField;

		[Token(Token = "0x1700039D")]
		[Dissonance.NotNull]
		public string Directive
		{
			[Token(Token = "0x60023F1")]
			[Address(RVA = "0x13DD478", Offset = "0x13DD478", VA = "0x13DD478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF694", Offset = "0xFDF694")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023F2")]
			[Address(RVA = "0x13DD480", Offset = "0x13DD480", VA = "0x13DD480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF6A4", Offset = "0xFDF6A4")]
			private set
			{
			}
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x13DD444", Offset = "0x13DD444", VA = "0x13DD444")]
		public RazorDirectiveAttribute([Dissonance.NotNull] string directive)
		{
		}
	}
	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD56E8", Offset = "0xFD56E8")]
	internal sealed class RazorHelperCommonAttribute : Attribute
	{
		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x13DD488", Offset = "0x13DD488", VA = "0x13DD488")]
		public RazorHelperCommonAttribute()
		{
		}
	}
	[Token(Token = "0x2000458")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD56FC", Offset = "0xFD56FC")]
	internal sealed class RazorLayoutAttribute : Attribute
	{
		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x13DD544", Offset = "0x13DD544", VA = "0x13DD544")]
		public RazorLayoutAttribute()
		{
		}
	}
	[Token(Token = "0x2000459")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5710", Offset = "0xFD5710")]
	internal sealed class RazorWriteLiteralMethodAttribute : Attribute
	{
		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x13DD554", Offset = "0x13DD554", VA = "0x13DD554")]
		public RazorWriteLiteralMethodAttribute()
		{
		}
	}
	[Token(Token = "0x200045A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5724", Offset = "0xFD5724")]
	internal sealed class RazorWriteMethodAttribute : Attribute
	{
		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x13DD55C", Offset = "0x13DD55C", VA = "0x13DD55C")]
		public RazorWriteMethodAttribute()
		{
		}
	}
	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFD5738", Offset = "0xFD5738")]
	internal sealed class RazorWriteMethodParameterAttribute : Attribute
	{
		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x13DD564", Offset = "0x13DD564", VA = "0x13DD564")]
		public RazorWriteMethodParameterAttribute()
		{
		}
	}
}
namespace Dissonance.Integrations.UNet_LLAPI
{
	[Token(Token = "0x200045C")]
	public class UNetClient : BaseClient<UNetServer, UNetClient, int>
	{
		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly UNetCommsNetwork _network;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly ClientConnectionDetails _server;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly byte[] _readBuffer;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _connectionEstablished;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int _socket;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int _connection;

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x13DBEC0", Offset = "0x13DBEC0", VA = "0x13DBEC0")]
		public UNetClient([Dissonance.NotNull] UNetCommsNetwork network, ClientConnectionDetails server)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x13DBF80", Offset = "0x13DBF80", VA = "0x13DBF80", Slot = "8")]
		public override void Connect()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x13DC0B0", Offset = "0x13DC0B0", VA = "0x13DC0B0", Slot = "9")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x13DC1BC", Offset = "0x13DC1BC", VA = "0x13DC1BC", Slot = "11")]
		protected override void ReadMessages()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x13DC4B4", Offset = "0x13DC4B4", VA = "0x13DC4B4")]
		private void Send(int channel, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x13DC6BC", Offset = "0x13DC6BC", VA = "0x13DC6BC", Slot = "12")]
		protected override void SendReliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x13DC6E0", Offset = "0x13DC6E0", VA = "0x13DC6E0", Slot = "13")]
		protected override void SendUnreliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x13DC3F0", Offset = "0x13DC3F0", VA = "0x13DC3F0")]
		private bool IsFatalError(NetworkError error)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200045D")]
	public struct ClientConnectionDetails
	{
		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB540", Offset = "0xFDB540")]
		private string <Address>k__BackingField;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB550", Offset = "0xFDB550")]
		private int <Port>k__BackingField;

		[Token(Token = "0x1700039E")]
		public string Address
		{
			[Token(Token = "0x6002400")]
			[Address(RVA = "0x10FCF80", Offset = "0x10FCF80", VA = "0x10FCF80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF6B4", Offset = "0xFDF6B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002401")]
			[Address(RVA = "0x10FCF88", Offset = "0x10FCF88", VA = "0x10FCF88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF6C4", Offset = "0xFDF6C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public int Port
		{
			[Token(Token = "0x6002402")]
			[Address(RVA = "0x10FCF90", Offset = "0x10FCF90", VA = "0x10FCF90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF6D4", Offset = "0xFDF6D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002403")]
			[Address(RVA = "0x10FCF98", Offset = "0x10FCF98", VA = "0x10FCF98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF6E4", Offset = "0xFDF6E4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200045E")]
	public struct ServerConnectionDetails
	{
		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB560", Offset = "0xFDB560")]
		private int <Port>k__BackingField;

		[Token(Token = "0x170003A0")]
		public int Port
		{
			[Token(Token = "0x6002404")]
			[Address(RVA = "0x10FCFA0", Offset = "0x10FCFA0", VA = "0x10FCFA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF6F4", Offset = "0xFDF6F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002405")]
			[Address(RVA = "0x10FCFA8", Offset = "0x10FCFA8", VA = "0x10FCFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF704", Offset = "0xFDF704")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFD574C", Offset = "0xFD574C")]
	public class UNetCommsNetwork : BaseCommsNetwork<UNetServer, UNetClient, int, ClientConnectionDetails, ServerConnectionDetails>
	{
		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB570", Offset = "0xFDB570")]
		private string <ServerAddress>k__BackingField;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private int _maxConnections;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private readonly int _voiceChannel;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly int _sysChannel;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private int _port;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly HostTopology _topology;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFDB5A0", Offset = "0xFDB5A0")]
		private bool _disableNetworkLifetimeManagement;

		[Token(Token = "0x170003A1")]
		public string ServerAddress
		{
			[Token(Token = "0x6002406")]
			[Address(RVA = "0x13DC704", Offset = "0x13DC704", VA = "0x13DC704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF714", Offset = "0xFDF714")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002407")]
			[Address(RVA = "0x13DC70C", Offset = "0x13DC70C", VA = "0x13DC70C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF724", Offset = "0xFDF724")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public int MaxConnections
		{
			[Token(Token = "0x6002408")]
			[Address(RVA = "0x13DC714", Offset = "0x13DC714", VA = "0x13DC714")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A3")]
		public int VoiceDataChannel
		{
			[Token(Token = "0x6002409")]
			[Address(RVA = "0x13DC71C", Offset = "0x13DC71C", VA = "0x13DC71C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A4")]
		public int SystemMessagesChannel
		{
			[Token(Token = "0x600240A")]
			[Address(RVA = "0x13DC724", Offset = "0x13DC724", VA = "0x13DC724")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A5")]
		public ushort Port
		{
			[Token(Token = "0x600240B")]
			[Address(RVA = "0x13DC72C", Offset = "0x13DC72C", VA = "0x13DC72C")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x600240C")]
			[Address(RVA = "0x13DC734", Offset = "0x13DC734", VA = "0x13DC734")]
			set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		[Dissonance.NotNull]
		internal HostTopology Topology
		{
			[Token(Token = "0x600240D")]
			[Address(RVA = "0x13DC7C0", Offset = "0x13DC7C0", VA = "0x13DC7C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x13DC7C8", Offset = "0x13DC7C8", VA = "0x13DC7C8")]
		public UNetCommsNetwork()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0x13DC8BC", Offset = "0x13DC8BC", VA = "0x13DC8BC", Slot = "32")]
		protected override UNetServer CreateServer(ServerConnectionDetails details)
		{
			return null;
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x13DC9D0", Offset = "0x13DC9D0", VA = "0x13DC9D0", Slot = "33")]
		protected override UNetClient CreateClient(ClientConnectionDetails details)
		{
			return null;
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x13DCA48", Offset = "0x13DCA48", VA = "0x13DCA48", Slot = "34")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x13DCAC0", Offset = "0x13DCAC0", VA = "0x13DCAC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x13DAA8C", Offset = "0x13DAA8C", VA = "0x13DAA8C")]
		public void InitializeAsDedicatedServer()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x13DB4B8", Offset = "0x13DB4B8", VA = "0x13DB4B8")]
		public void InitializeAsServer()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x13DA010", Offset = "0x13DA010", VA = "0x13DA010")]
		public void InitializeAsClient(string serverAddress)
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x13DC5C0", Offset = "0x13DC5C0", VA = "0x13DC5C0")]
		internal static NetworkError Send(int socket, int connection, int channel, ArraySegment<byte> packet)
		{
			return default(NetworkError);
		}
	}
	[Token(Token = "0x2000460")]
	public class UNetServer : BaseServer<UNetServer, UNetClient, int>
	{
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly UNetCommsNetwork _network;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ServerConnectionDetails _connection;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly byte[] _receiveBuffer;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _socketValid;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _socket;

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x13DC92C", Offset = "0x13DC92C", VA = "0x13DC92C")]
		public UNetServer(UNetCommsNetwork network, ServerConnectionDetails connection)
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x13DCB38", Offset = "0x13DCB38", VA = "0x13DCB38", Slot = "9")]
		public override void Connect()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x13DCC60", Offset = "0x13DCC60", VA = "0x13DCC60", Slot = "10")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x13DCCF0", Offset = "0x13DCCF0", VA = "0x13DCCF0", Slot = "16")]
		protected override void ReadMessages()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x13DCFD4", Offset = "0x13DCFD4", VA = "0x13DCFD4")]
		private void Send(int connection, int channel, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x13DD0F4", Offset = "0x13DD0F4", VA = "0x13DD0F4", Slot = "12")]
		protected override void SendReliable(int connection, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x13DD118", Offset = "0x13DD118", VA = "0x13DD118", Slot = "13")]
		protected override void SendUnreliable(int connection, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x13DCF10", Offset = "0x13DCF10", VA = "0x13DCF10")]
		private bool IsFatalError(NetworkError error)
		{
			return default(bool);
		}
	}
}
namespace Dissonance.Integrations.UNet_LLAPI.Demo
{
	[Token(Token = "0x2000461")]
	public class StateManager : MonoBehaviour
	{
		[Token(Token = "0x200058C")]
		private interface IState
		{
			[Token(Token = "0x6002831")]
			void Awake();

			[Token(Token = "0x6002832")]
			[Dissonance.NotNull]
			IState Update();
		}

		[Token(Token = "0x200058D")]
		private class LoadWorld : IState
		{
			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly IState _nextState;

			[Token(Token = "0x6002833")]
			[Address(RVA = "0x13DB33C", Offset = "0x13DB33C", VA = "0x13DB33C")]
			public LoadWorld(IState nextState)
			{
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0x13DB370", Offset = "0x13DB370", VA = "0x13DB370", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002835")]
			[Address(RVA = "0x13DB400", Offset = "0x13DB400", VA = "0x13DB400", Slot = "5")]
			public IState Update()
			{
				return null;
			}
		}

		[Token(Token = "0x200058E")]
		private class UnloadWorld : IState
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly IState _nextState;

			[Token(Token = "0x6002836")]
			[Address(RVA = "0x13DA9CC", Offset = "0x13DA9CC", VA = "0x13DA9CC")]
			public UnloadWorld(IState nextState)
			{
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0x13DBDE0", Offset = "0x13DBDE0", VA = "0x13DBDE0", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002838")]
			[Address(RVA = "0x13DBEA8", Offset = "0x13DBEA8", VA = "0x13DBEA8", Slot = "5")]
			public IState Update()
			{
				return null;
			}
		}

		[Token(Token = "0x200058F")]
		private class InMenu : IState
		{
			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string _serverIp;

			[Token(Token = "0x6002839")]
			[Address(RVA = "0x13DADE0", Offset = "0x13DADE0", VA = "0x13DADE0", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x600283A")]
			[Address(RVA = "0x13DADE4", Offset = "0x13DADE4", VA = "0x13DADE4", Slot = "5")]
			public IState Update()
			{
				return null;
			}

			[Token(Token = "0x600283B")]
			[Address(RVA = "0x13D9D14", Offset = "0x13D9D14", VA = "0x13D9D14")]
			public InMenu()
			{
			}
		}

		[Token(Token = "0x2000590")]
		private class DedicatedServer : IState
		{
			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private UNetCommsNetwork _net;

			[Token(Token = "0x600283C")]
			[Address(RVA = "0x13DAA00", Offset = "0x13DAA00", VA = "0x13DAA00", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x600283D")]
			[Address(RVA = "0x13DAAE0", Offset = "0x13DAAE0", VA = "0x13DAAE0", Slot = "5")]
			public IState Update()
			{
				return null;
			}

			[Token(Token = "0x600283E")]
			[Address(RVA = "0x13DADD8", Offset = "0x13DADD8", VA = "0x13DADD8")]
			public DedicatedServer()
			{
			}
		}

		[Token(Token = "0x2000591")]
		private class Server : IState
		{
			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private UNetCommsNetwork _net;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private DissonanceComms _comms;

			[Token(Token = "0x600283F")]
			[Address(RVA = "0x13DB408", Offset = "0x13DB408", VA = "0x13DB408", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002840")]
			[Address(RVA = "0x13DB55C", Offset = "0x13DB55C", VA = "0x13DB55C", Slot = "5")]
			public IState Update()
			{
				return null;
			}

			[Token(Token = "0x6002841")]
			[Address(RVA = "0x13DB334", Offset = "0x13DB334", VA = "0x13DB334")]
			public Server()
			{
			}
		}

		[Token(Token = "0x2000592")]
		private class Client : IState
		{
			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private UNetCommsNetwork _net;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly string _serverIp;

			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private DissonanceComms _comms;

			[Token(Token = "0x6002842")]
			[Address(RVA = "0x13D9F28", Offset = "0x13D9F28", VA = "0x13D9F28")]
			public Client(string serverIp)
			{
			}

			[Token(Token = "0x6002843")]
			[Address(RVA = "0x13D9F5C", Offset = "0x13D9F5C", VA = "0x13D9F5C", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002844")]
			[Address(RVA = "0x13DA0E0", Offset = "0x13DA0E0", VA = "0x13DA0E0", Slot = "5")]
			public IState Update()
			{
				return null;
			}
		}

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IState _state;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IState _nextState;

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x13D9C54", Offset = "0x13D9C54", VA = "0x13D9C54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x13D9D74", Offset = "0x13D9D74", VA = "0x13D9D74")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x13D9E38", Offset = "0x13D9E38", VA = "0x13D9E38")]
		private void Update()
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x13D9F20", Offset = "0x13D9F20", VA = "0x13D9F20")]
		public StateManager()
		{
		}
	}
}
namespace UnityEngine.Experimental.Rendering
{
	[Token(Token = "0x2000462")]
	public class SRPBatcherProfiler : MonoBehaviour
	{
		[Token(Token = "0x2000593")]
		internal class RecorderEntry
		{
			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string oldName;

			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int callCount;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float accTime;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Recorder recorder;

			[Token(Token = "0x6002845")]
			[Address(RVA = "0x1593FE0", Offset = "0x1593FE0", VA = "0x1593FE0")]
			public RecorderEntry()
			{
			}
		}

		[Token(Token = "0x2000594")]
		private enum SRPBMarkers
		{
			[Token(Token = "0x4001EA3")]
			kStdRenderDraw,
			[Token(Token = "0x4001EA4")]
			kStdShadowDraw,
			[Token(Token = "0x4001EA5")]
			kSRPBRenderDraw,
			[Token(Token = "0x4001EA6")]
			kSRPBShadowDraw,
			[Token(Token = "0x4001EA7")]
			kRenderThreadIdle,
			[Token(Token = "0x4001EA8")]
			kStdRenderApplyShader,
			[Token(Token = "0x4001EA9")]
			kStdShadowApplyShader,
			[Token(Token = "0x4001EAA")]
			kSRPBRenderApplyShader,
			[Token(Token = "0x4001EAB")]
			kSRPBShadowApplyShader,
			[Token(Token = "0x4001EAC")]
			kPrepareBatchRendererGroupNodes
		}

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_Enable;

		[Token(Token = "0x4001A67")]
		private const float kAverageStatDuration = 1f;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_frameCount;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_AccDeltaTime;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_statsLabel;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIStyle m_style;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_oldBatcherEnable;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RecorderEntry[] recordersList;

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x1471B74", Offset = "0x1471B74", VA = "0x1471B74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x1471DC0", Offset = "0x1471DC0", VA = "0x1471DC0")]
		private void RazCounters()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1471D64", Offset = "0x1471D64", VA = "0x1471D64")]
		private void ResetStats()
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x1471E40", Offset = "0x1471E40", VA = "0x1471E40")]
		private void ToggleStats()
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x1471E50", Offset = "0x1471E50", VA = "0x1471E50")]
		private void Update()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x1472560", Offset = "0x1472560", VA = "0x1472560")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x14727B4", Offset = "0x14727B4", VA = "0x14727B4")]
		public SRPBatcherProfiler()
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal
{
	[Token(Token = "0x2000463")]
	public class Outline : ScriptableRendererFeature
	{
		[Serializable]
		[Token(Token = "0x2000595")]
		public class OutlineSettings
		{
			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string passTag;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RenderPassEvent Event;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Source source;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string srcTextureId;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target destination;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string dstTextureId;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FilterSettings filterSettings;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool overrideDepthState;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public CompareFunction depthCompareFunction;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool enableWrite;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public BlurMethod blurMethod;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool highQualitySampling;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDBCEC", Offset = "0xFDBCEC")]
			public float maxRadius;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDBD08", Offset = "0xFDBD08")]
			public int iteration;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFDBD20", Offset = "0xFDBD20")]
			public float downScaling;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xFDBD38", Offset = "0xFDBD38")]
			public Color outlineColor;

			[Token(Token = "0x6002846")]
			[Address(RVA = "0x159724C", Offset = "0x159724C", VA = "0x159724C")]
			public OutlineSettings()
			{
			}
		}

		[Token(Token = "0x2000596")]
		public enum Source
		{
			[Token(Token = "0x4001EBE")]
			Color,
			[Token(Token = "0x4001EBF")]
			RenderTexture
		}

		[Token(Token = "0x2000597")]
		public enum Target
		{
			[Token(Token = "0x4001EC1")]
			Color,
			[Token(Token = "0x4001EC2")]
			RenderTexture
		}

		[Token(Token = "0x2000598")]
		public enum BlurMethod
		{
			[Token(Token = "0x4001EC4")]
			Gaussian,
			[Token(Token = "0x4001EC5")]
			Kawase,
			[Token(Token = "0x4001EC6")]
			Grainy
		}

		[Serializable]
		[Token(Token = "0x2000599")]
		public class FilterSettings
		{
			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderQueueType RenderQueueType;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LayerMask LayerMask;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] PassNames;

			[Token(Token = "0x6002847")]
			[Address(RVA = "0x159735C", Offset = "0x159735C", VA = "0x159735C")]
			public FilterSettings()
			{
			}
		}

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OutlineSettings settings;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTargetHandle m_SrcRenderTextureHandle;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private RenderTargetHandle m_DstRenderTextureHandle;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTargetHandle m_InternalRenderTextureHandle;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OutlinePrefilterPass outlinePrefilterPass;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OutlineBlurPass outlineBlurPass;

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x1596DE4", Offset = "0x1596DE4", VA = "0x1596DE4", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x1596FB0", Offset = "0x1596FB0", VA = "0x1596FB0", Slot = "5")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x15971A8", Offset = "0x15971A8", VA = "0x15971A8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x15971DC", Offset = "0x15971DC", VA = "0x15971DC")]
		public Outline()
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal.Internal
{
	[Token(Token = "0x2000464")]
	public class OutlineBlurPass : ScriptableRenderPass
	{
		[Token(Token = "0x200059A")]
		public enum RenderTarget
		{
			[Token(Token = "0x4001ECB")]
			Color,
			[Token(Token = "0x4001ECC")]
			RenderTexture
		}

		[Token(Token = "0x200059B")]
		public enum BlurMethod
		{
			[Token(Token = "0x4001ECE")]
			Gaussian,
			[Token(Token = "0x4001ECF")]
			Kawase,
			[Token(Token = "0x4001ED0")]
			Grainy
		}

		[Token(Token = "0x200059C")]
		private struct Level
		{
			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int down;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int up;
		}

		[Token(Token = "0x200059D")]
		private static class ShaderConstants
		{
			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int _MainTex;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int _ColorTexture;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int _Params;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static readonly int _PongTexture;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static readonly int _PingTexture;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static readonly int _OutlineColor;
		}

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB5D8", Offset = "0xFDB5D8")]
		private RenderTargetIdentifier <source>k__BackingField;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB5E8", Offset = "0xFDB5E8")]
		private RenderTargetHandle <destination>k__BackingField;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB5F8", Offset = "0xFDB5F8")]
		private RenderTargetIdentifier <cameraColorTarget>k__BackingField;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB608", Offset = "0xFDB608")]
		private BlurMethod <blurMethod>k__BackingField;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB618", Offset = "0xFDB618")]
		private bool <highQualitySampling>k__BackingField;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB628", Offset = "0xFDB628")]
		private float <gaussianMaxRadius>k__BackingField;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB638", Offset = "0xFDB638")]
		private int <iteration>k__BackingField;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB648", Offset = "0xFDB648")]
		private float <downScaling>k__BackingField;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB658", Offset = "0xFDB658")]
		private Color <outlineColor>k__BackingField;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Shader outlineGaussianPS;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Shader outlineKawasePS;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Shader outlineGrainyPS;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material m_gaussianBlur;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material m_kawaseBlur;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material m_grainyBlur;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material m_outline;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RenderTextureDescriptor m_Descriptor;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private string m_ProfilerTag;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private ProfilingSampler m_ProfilingSampler;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private readonly GraphicsFormat m_DefaultHDRFormat;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Level[] m_Pyramid;

		[Token(Token = "0x4001A89")]
		private const int k_MaxPyramidSize = 16;

		[Token(Token = "0x170003A7")]
		private RenderTargetIdentifier source
		{
			[Token(Token = "0x600242E")]
			[Address(RVA = "0x1593FE8", Offset = "0x1593FE8", VA = "0x1593FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF734", Offset = "0xFDF734")]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x600242F")]
			[Address(RVA = "0x1594000", Offset = "0x1594000", VA = "0x1594000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF744", Offset = "0xFDF744")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		private RenderTargetHandle destination
		{
			[Token(Token = "0x6002430")]
			[Address(RVA = "0x1594018", Offset = "0x1594018", VA = "0x1594018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF754", Offset = "0xFDF754")]
			get
			{
				return default(RenderTargetHandle);
			}
			[Token(Token = "0x6002431")]
			[Address(RVA = "0x1594020", Offset = "0x1594020", VA = "0x1594020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF764", Offset = "0xFDF764")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		private RenderTargetIdentifier cameraColorTarget
		{
			[Token(Token = "0x6002432")]
			[Address(RVA = "0x1594028", Offset = "0x1594028", VA = "0x1594028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF774", Offset = "0xFDF774")]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x6002433")]
			[Address(RVA = "0x1594040", Offset = "0x1594040", VA = "0x1594040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF784", Offset = "0xFDF784")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		private BlurMethod blurMethod
		{
			[Token(Token = "0x6002434")]
			[Address(RVA = "0x1594058", Offset = "0x1594058", VA = "0x1594058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF794", Offset = "0xFDF794")]
			get
			{
				return default(BlurMethod);
			}
			[Token(Token = "0x6002435")]
			[Address(RVA = "0x1594060", Offset = "0x1594060", VA = "0x1594060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF7A4", Offset = "0xFDF7A4")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		private bool highQualitySampling
		{
			[Token(Token = "0x6002436")]
			[Address(RVA = "0x1594068", Offset = "0x1594068", VA = "0x1594068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF7B4", Offset = "0xFDF7B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002437")]
			[Address(RVA = "0x1594070", Offset = "0x1594070", VA = "0x1594070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF7C4", Offset = "0xFDF7C4")]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		private float gaussianMaxRadius
		{
			[Token(Token = "0x6002438")]
			[Address(RVA = "0x159407C", Offset = "0x159407C", VA = "0x159407C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF7D4", Offset = "0xFDF7D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002439")]
			[Address(RVA = "0x1594084", Offset = "0x1594084", VA = "0x1594084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF7E4", Offset = "0xFDF7E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		private int iteration
		{
			[Token(Token = "0x600243A")]
			[Address(RVA = "0x159408C", Offset = "0x159408C", VA = "0x159408C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF7F4", Offset = "0xFDF7F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600243B")]
			[Address(RVA = "0x1594094", Offset = "0x1594094", VA = "0x1594094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF804", Offset = "0xFDF804")]
			set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		private float downScaling
		{
			[Token(Token = "0x600243C")]
			[Address(RVA = "0x159409C", Offset = "0x159409C", VA = "0x159409C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF814", Offset = "0xFDF814")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600243D")]
			[Address(RVA = "0x15940A4", Offset = "0x15940A4", VA = "0x15940A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF824", Offset = "0xFDF824")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		private Color outlineColor
		{
			[Token(Token = "0x600243E")]
			[Address(RVA = "0x15940AC", Offset = "0x15940AC", VA = "0x15940AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF834", Offset = "0xFDF834")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600243F")]
			[Address(RVA = "0x15940B8", Offset = "0x15940B8", VA = "0x15940B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF844", Offset = "0xFDF844")]
			set
			{
			}
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x15940C4", Offset = "0x15940C4", VA = "0x15940C4")]
		public void SetBlurSetting(int blurMethod, bool highQualitySampling, float gaussianMaxRadius, Color outlineColor)
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x1594118", Offset = "0x1594118", VA = "0x1594118")]
		public void SetKawaseSetting(int iteration, float downScaling)
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1594124", Offset = "0x1594124", VA = "0x1594124")]
		public void SetGrainySetting(int iteration, float downScaling)
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x1594130", Offset = "0x1594130", VA = "0x1594130")]
		public OutlineBlurPass(RenderPassEvent renderPassEvent, string profilerTag)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x15943C8", Offset = "0x15943C8", VA = "0x15943C8")]
		public void Setup(RenderTargetIdentifier source, RenderTargetHandle destination, RenderTargetIdentifier cameraColorTarget)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x15943F8", Offset = "0x15943F8", VA = "0x15943F8", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x1595C54", Offset = "0x1595C54", VA = "0x1595C54", Slot = "4")]
		public override void Configure(CommandBuffer cmd, RenderTextureDescriptor cameraTextureDescriptor)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x1595CA4", Offset = "0x1595CA4", VA = "0x1595CA4")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1594420", Offset = "0x1594420", VA = "0x1594420")]
		private void ExecuteGaussianBlur(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1594CFC", Offset = "0x1594CFC", VA = "0x1594CFC")]
		private void ExecuteKawaseBlur(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x15957F8", Offset = "0x15957F8", VA = "0x15957F8")]
		private void ExecuteGrainyBlur(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x1595D34", Offset = "0x1595D34", VA = "0x1595D34")]
		private RenderTextureDescriptor GetStereoCompatibleDescriptor(int width, int height, GraphicsFormat format, int depthBufferBits = 0)
		{
			return default(RenderTextureDescriptor);
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x1595DC8", Offset = "0x1595DC8", VA = "0x1595DC8")]
		private BuiltinRenderTextureType BlitDstDiscardContent(CommandBuffer cmd, RenderTargetIdentifier rt)
		{
			return default(BuiltinRenderTextureType);
		}
	}
	[Token(Token = "0x2000465")]
	public class OutlinePrefilterPass : ScriptableRenderPass
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RenderQueueType renderQueueType;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FilteringSettings m_FilteringSettings;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string m_ProfilerTag;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ProfilingSampler m_ProfilingSampler;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material overrideMaterial;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int overrideMaterialPassIndex;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_ScaleBiasId;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool createDstRT;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool copyDepthToDst;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB668", Offset = "0xFDB668")]
		private RenderTargetIdentifier <source>k__BackingField;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB678", Offset = "0xFDB678")]
		private RenderTargetHandle <destination>k__BackingField;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDB688", Offset = "0xFDB688")]
		private FilterMode <filterMode>k__BackingField;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTextureDescriptor m_Descriptor;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material m_CopyDepthMaterial;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<ShaderTagId> m_ShaderTagIdList;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RenderStateBlock m_RenderStateBlock;

		[Token(Token = "0x170003B0")]
		private RenderTargetIdentifier source
		{
			[Token(Token = "0x600244D")]
			[Address(RVA = "0x1595F6C", Offset = "0x1595F6C", VA = "0x1595F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF854", Offset = "0xFDF854")]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x600244E")]
			[Address(RVA = "0x1595F84", Offset = "0x1595F84", VA = "0x1595F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF864", Offset = "0xFDF864")]
			set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		private RenderTargetHandle destination
		{
			[Token(Token = "0x600244F")]
			[Address(RVA = "0x1595F9C", Offset = "0x1595F9C", VA = "0x1595F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF874", Offset = "0xFDF874")]
			get
			{
				return default(RenderTargetHandle);
			}
			[Token(Token = "0x6002450")]
			[Address(RVA = "0x1595FA4", Offset = "0x1595FA4", VA = "0x1595FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF884", Offset = "0xFDF884")]
			set
			{
			}
		}

		[Token(Token = "0x170003B2")]
		public FilterMode filterMode
		{
			[Token(Token = "0x6002451")]
			[Address(RVA = "0x1595FAC", Offset = "0x1595FAC", VA = "0x1595FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF894", Offset = "0xFDF894")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x6002452")]
			[Address(RVA = "0x1595FB4", Offset = "0x1595FB4", VA = "0x1595FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFDF8A4", Offset = "0xFDF8A4")]
			set
			{
			}
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x1595FBC", Offset = "0x1595FBC", VA = "0x1595FBC")]
		public void Setup(RenderTargetIdentifier source, RenderTargetHandle destination, bool createDstRT = false)
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x1595FE0", Offset = "0x1595FE0", VA = "0x1595FE0")]
		public void SetDetphState(bool overrideDepth, bool writeEnabled, CompareFunction function = CompareFunction.Less)
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x1596058", Offset = "0x1596058", VA = "0x1596058")]
		public void SetStencilState(int reference, CompareFunction compareFunction, StencilOp passOp, StencilOp failOp, StencilOp zFailOp)
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x1596144", Offset = "0x1596144", VA = "0x1596144")]
		public OutlinePrefilterPass(string profilerTag, RenderPassEvent renderPassEvent, string[] shaderTags, RenderQueueType renderQueueType, int layerMask)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x15964F8", Offset = "0x15964F8", VA = "0x15964F8", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1596B3C", Offset = "0x1596B3C", VA = "0x1596B3C", Slot = "4")]
		public override void Configure(CommandBuffer cmd, RenderTextureDescriptor cameraTextureDescriptor)
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x1596CE4", Offset = "0x1596CE4", VA = "0x1596CE4", Slot = "5")]
		public override void FrameCleanup(CommandBuffer cmd)
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x1596D14", Offset = "0x1596D14", VA = "0x1596D14")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x1596D80", Offset = "0x1596D80", VA = "0x1596D80")]
		private RenderTextureDescriptor GetStereoCompatibleDescriptor(GraphicsFormat format, int depthBufferBits = 0)
		{
			return default(RenderTextureDescriptor);
		}
	}
}
namespace ParadoxNotion.Internal
{
	[Token(Token = "0x2000466")]
	internal class AOTDummy
	{
		[Token(Token = "0x200059E")]
		private class _CreateList_System_Boolean : CreateList<bool>
		{
			[Token(Token = "0x6002849")]
			[Address(RVA = "0x139D094", Offset = "0x139D094", VA = "0x139D094")]
			public _CreateList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200059F")]
		private class _CreateList_System_Single : CreateList<float>
		{
			[Token(Token = "0x600284A")]
			[Address(RVA = "0x139D134", Offset = "0x139D134", VA = "0x139D134")]
			public _CreateList_System_Single()
			{
			}
		}

		[Token(Token = "0x20005A0")]
		private class _CreateList_System_Int32 : CreateList<int>
		{
			[Token(Token = "0x600284B")]
			[Address(RVA = "0x139D0E4", Offset = "0x139D0E4", VA = "0x139D0E4")]
			public _CreateList_System_Int32()
			{
			}
		}

		[Token(Token = "0x20005A1")]
		private class _CreateList_UnityEngine_Vector2 : CreateList<Vector2>
		{
			[Token(Token = "0x600284C")]
			[Address(RVA = "0x139D5E4", Offset = "0x139D5E4", VA = "0x139D5E4")]
			public _CreateList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20005A2")]
		private class _CreateList_UnityEngine_Vector3 : CreateList<Vector3>
		{
			[Token(Token = "0x600284D")]
			[Address(RVA = "0x139D634", Offset = "0x139D634", VA = "0x139D634")]
			public _CreateList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20005A3")]
		private class _CreateList_UnityEngine_Vector4 : CreateList<Vector4>
		{
			[Token(Token = "0x600284E")]
			[Address(RVA = "0x139D684", Offset = "0x139D684", VA = "0x139D684")]
			public _CreateList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20005A4")]
		private class _CreateList_UnityEngine_Quaternion : CreateList<Quaternion>
		{
			[Token(Token = "0x600284F")]
			[Address(RVA = "0x139D404", Offset = "0x139D404", VA = "0x139D404")]
			public _CreateList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20005A5")]
		private class _CreateList_UnityEngine_Keyframe : CreateList<Keyframe>
		{
			[Token(Token = "0x6002850")]
			[Address(RVA = "0x139D364", Offset = "0x139D364", VA = "0x139D364")]
			public _CreateList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20005A6")]
		private class _CreateList_UnityEngine_Bounds : CreateList<Bounds>
		{
			[Token(Token = "0x6002851")]
			[Address(RVA = "0x139D184", Offset = "0x139D184", VA = "0x139D184")]
			public _CreateList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20005A7")]
		private class _CreateList_UnityEngine_Color : CreateList<Color>
		{
			[Token(Token = "0x6002852")]
			[Address(RVA = "0x139D274", Offset = "0x139D274", VA = "0x139D274")]
			public _CreateList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20005A8")]
		private class _CreateList_UnityEngine_Rect : CreateList<Rect>
		{
			[Token(Token = "0x6002853")]
			[Address(RVA = "0x139D544", Offset = "0x139D544", VA = "0x139D544")]
			public _CreateList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20005A9")]
		private class _CreateList_UnityEngine_ContactPoint : CreateList<ContactPoint>
		{
			[Token(Token = "0x6002854")]
			[Address(RVA = "0x139D2C4", Offset = "0x139D2C4", VA = "0x139D2C4")]
			public _CreateList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20005AA")]
		private class _CreateList_UnityEngine_ContactPoint2D : CreateList<ContactPoint2D>
		{
			[Token(Token = "0x6002855")]
			[Address(RVA = "0x139D314", Offset = "0x139D314", VA = "0x139D314")]
			public _CreateList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20005AB")]
		private class _CreateList_UnityEngine_Collision : CreateList<Collision>
		{
			[Token(Token = "0x6002856")]
			[Address(RVA = "0x139D1D4", Offset = "0x139D1D4", VA = "0x139D1D4")]
			public _CreateList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20005AC")]
		private class _CreateList_UnityEngine_Collision2D : CreateList<Collision2D>
		{
			[Token(Token = "0x6002857")]
			[Address(RVA = "0x139D224", Offset = "0x139D224", VA = "0x139D224")]
			public _CreateList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20005AD")]
		private class _CreateList_UnityEngine_RaycastHit : CreateList<RaycastHit>
		{
			[Token(Token = "0x6002858")]
			[Address(RVA = "0x139D4A4", Offset = "0x139D4A4", VA = "0x139D4A4")]
			public _CreateList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20005AE")]
		private class _CreateList_UnityEngine_RaycastHit2D : CreateList<RaycastHit2D>
		{
			[Token(Token = "0x6002859")]
			[Address(RVA = "0x139D4F4", Offset = "0x139D4F4", VA = "0x139D4F4")]
			public _CreateList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20005AF")]
		private class _CreateList_UnityEngine_Ray : CreateList<Ray>
		{
			[Token(Token = "0x600285A")]
			[Address(RVA = "0x139D454", Offset = "0x139D454", VA = "0x139D454")]
			public _CreateList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20005B0")]
		private class _CreateList_UnityEngine_Space : CreateList<Space>
		{
			[Token(Token = "0x600285B")]
			[Address(RVA = "0x139D594", Offset = "0x139D594", VA = "0x139D594")]
			public _CreateList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20005B1")]
		private class _CreateList_BossMainDone : CreateList<BossMainDone>
		{
			[Token(Token = "0x600285C")]
			[Address(RVA = "0x139CFA4", Offset = "0x139CFA4", VA = "0x139CFA4")]
			public _CreateList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20005B2")]
		private class _CreateList_BossMainToDo : CreateList<BossMainToDo>
		{
			[Token(Token = "0x600285D")]
			[Address(RVA = "0x139CFF4", Offset = "0x139CFF4", VA = "0x139CFF4")]
			public _CreateList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20005B3")]
		private class _CreateList_e_group_type : CreateList<e_group_type>
		{
			[Token(Token = "0x600285E")]
			[Address(RVA = "0x139D774", Offset = "0x139D774", VA = "0x139D774")]
			public _CreateList_e_group_type()
			{
			}
		}

		[Token(Token = "0x20005B4")]
		private class _CreateList_eMonsterAttackDirType : CreateList<eMonsterAttackDirType>
		{
			[Token(Token = "0x600285F")]
			[Address(RVA = "0x139D6D4", Offset = "0x139D6D4", VA = "0x139D6D4")]
			public _CreateList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20005B5")]
		private class _CreateList_eMonsterAttackType : CreateList<eMonsterAttackType>
		{
			[Token(Token = "0x6002860")]
			[Address(RVA = "0x139D724", Offset = "0x139D724", VA = "0x139D724")]
			public _CreateList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20005B6")]
		private class _CreateList_MoveTargetType : CreateList<MoveTargetType>
		{
			[Token(Token = "0x6002861")]
			[Address(RVA = "0x139D044", Offset = "0x139D044", VA = "0x139D044")]
			public _CreateList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20005B7")]
		private class _CreateList_UnityEngine_LayerMask : CreateList<LayerMask>
		{
			[Token(Token = "0x6002862")]
			[Address(RVA = "0x139D3B4", Offset = "0x139D3B4", VA = "0x139D3B4")]
			public _CreateList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20005B8")]
		private class _CreateVariable_System_Boolean : CreateVariable<bool>
		{
			[Token(Token = "0x6002863")]
			[Address(RVA = "0x139D8B4", Offset = "0x139D8B4", VA = "0x139D8B4")]
			public _CreateVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20005B9")]
		private class _CreateVariable_System_Single : CreateVariable<float>
		{
			[Token(Token = "0x6002864")]
			[Address(RVA = "0x139D954", Offset = "0x139D954", VA = "0x139D954")]
			public _CreateVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x20005BA")]
		private class _CreateVariable_System_Int32 : CreateVariable<int>
		{
			[Token(Token = "0x6002865")]
			[Address(RVA = "0x139D904", Offset = "0x139D904", VA = "0x139D904")]
			public _CreateVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x20005BB")]
		private class _CreateVariable_UnityEngine_Vector2 : CreateVariable<Vector2>
		{
			[Token(Token = "0x6002866")]
			[Address(RVA = "0x139DE04", Offset = "0x139DE04", VA = "0x139DE04")]
			public _CreateVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20005BC")]
		private class _CreateVariable_UnityEngine_Vector3 : CreateVariable<Vector3>
		{
			[Token(Token = "0x6002867")]
			[Address(RVA = "0x139DE54", Offset = "0x139DE54", VA = "0x139DE54")]
			public _CreateVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20005BD")]
		private class _CreateVariable_UnityEngine_Vector4 : CreateVariable<Vector4>
		{
			[Token(Token = "0x6002868")]
			[Address(RVA = "0x139DEA4", Offset = "0x139DEA4", VA = "0x139DEA4")]
			public _CreateVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20005BE")]
		private class _CreateVariable_UnityEngine_Quaternion : CreateVariable<Quaternion>
		{
			[Token(Token = "0x6002869")]
			[Address(RVA = "0x139DC24", Offset = "0x139DC24", VA = "0x139DC24")]
			public _CreateVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20005BF")]
		private class _CreateVariable_UnityEngine_Keyframe : CreateVariable<Keyframe>
		{
			[Token(Token = "0x600286A")]
			[Address(RVA = "0x139DB84", Offset = "0x139DB84", VA = "0x139DB84")]
			public _CreateVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20005C0")]
		private class _CreateVariable_UnityEngine_Bounds : CreateVariable<Bounds>
		{
			[Token(Token = "0x600286B")]
			[Address(RVA = "0x139D9A4", Offset = "0x139D9A4", VA = "0x139D9A4")]
			public _CreateVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20005C1")]
		private class _CreateVariable_UnityEngine_Color : CreateVariable<Color>
		{
			[Token(Token = "0x600286C")]
			[Address(RVA = "0x139DA94", Offset = "0x139DA94", VA = "0x139DA94")]
			public _CreateVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20005C2")]
		private class _CreateVariable_UnityEngine_Rect : CreateVariable<Rect>
		{
			[Token(Token = "0x600286D")]
			[Address(RVA = "0x139DD64", Offset = "0x139DD64", VA = "0x139DD64")]
			public _CreateVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20005C3")]
		private class _CreateVariable_UnityEngine_ContactPoint : CreateVariable<ContactPoint>
		{
			[Token(Token = "0x600286E")]
			[Address(RVA = "0x139DAE4", Offset = "0x139DAE4", VA = "0x139DAE4")]
			public _CreateVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20005C4")]
		private class _CreateVariable_UnityEngine_ContactPoint2D : CreateVariable<ContactPoint2D>
		{
			[Token(Token = "0x600286F")]
			[Address(RVA = "0x139DB34", Offset = "0x139DB34", VA = "0x139DB34")]
			public _CreateVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20005C5")]
		private class _CreateVariable_UnityEngine_Collision : CreateVariable<Collision>
		{
			[Token(Token = "0x6002870")]
			[Address(RVA = "0x139D9F4", Offset = "0x139D9F4", VA = "0x139D9F4")]
			public _CreateVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20005C6")]
		private class _CreateVariable_UnityEngine_Collision2D : CreateVariable<Collision2D>
		{
			[Token(Token = "0x6002871")]
			[Address(RVA = "0x139DA44", Offset = "0x139DA44", VA = "0x139DA44")]
			public _CreateVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20005C7")]
		private class _CreateVariable_UnityEngine_RaycastHit : CreateVariable<RaycastHit>
		{
			[Token(Token = "0x6002872")]
			[Address(RVA = "0x139DCC4", Offset = "0x139DCC4", VA = "0x139DCC4")]
			public _CreateVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20005C8")]
		private class _CreateVariable_UnityEngine_RaycastHit2D : CreateVariable<RaycastHit2D>
		{
			[Token(Token = "0x6002873")]
			[Address(RVA = "0x139DD14", Offset = "0x139DD14", VA = "0x139DD14")]
			public _CreateVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20005C9")]
		private class _CreateVariable_UnityEngine_Ray : CreateVariable<Ray>
		{
			[Token(Token = "0x6002874")]
			[Address(RVA = "0x139DC74", Offset = "0x139DC74", VA = "0x139DC74")]
			public _CreateVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20005CA")]
		private class _CreateVariable_UnityEngine_Space : CreateVariable<Space>
		{
			[Token(Token = "0x6002875")]
			[Address(RVA = "0x139DDB4", Offset = "0x139DDB4", VA = "0x139DDB4")]
			public _CreateVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20005CB")]
		private class _CreateVariable_BossMainDone : CreateVariable<BossMainDone>
		{
			[Token(Token = "0x6002876")]
			[Address(RVA = "0x139D7C4", Offset = "0x139D7C4", VA = "0x139D7C4")]
			public _CreateVariable_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20005CC")]
		private class _CreateVariable_BossMainToDo : CreateVariable<BossMainToDo>
		{
			[Token(Token = "0x6002877")]
			[Address(RVA = "0x139D814", Offset = "0x139D814", VA = "0x139D814")]
			public _CreateVariable_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20005CD")]
		private class _CreateVariable_e_group_type : CreateVariable<e_group_type>
		{
			[Token(Token = "0x6002878")]
			[Address(RVA = "0x139DF94", Offset = "0x139DF94", VA = "0x139DF94")]
			public _CreateVariable_e_group_type()
			{
			}
		}

		[Token(Token = "0x20005CE")]
		private class _CreateVariable_eMonsterAttackDirType : CreateVariable<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002879")]
			[Address(RVA = "0x139DEF4", Offset = "0x139DEF4", VA = "0x139DEF4")]
			public _CreateVariable_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20005CF")]
		private class _CreateVariable_eMonsterAttackType : CreateVariable<eMonsterAttackType>
		{
			[Token(Token = "0x600287A")]
			[Address(RVA = "0x139DF44", Offset = "0x139DF44", VA = "0x139DF44")]
			public _CreateVariable_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20005D0")]
		private class _CreateVariable_MoveTargetType : CreateVariable<MoveTargetType>
		{
			[Token(Token = "0x600287B")]
			[Address(RVA = "0x139D864", Offset = "0x139D864", VA = "0x139D864")]
			public _CreateVariable_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20005D1")]
		private class _CreateVariable_UnityEngine_LayerMask : CreateVariable<LayerMask>
		{
			[Token(Token = "0x600287C")]
			[Address(RVA = "0x139DBD4", Offset = "0x139DBD4", VA = "0x139DBD4")]
			public _CreateVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20005D2")]
		private class _GetElementInList_System_Boolean : GetElementInList<bool>
		{
			[Token(Token = "0x600287D")]
			[Address(RVA = "0x139E0D4", Offset = "0x139E0D4", VA = "0x139E0D4")]
			public _GetElementInList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20005D3")]
		private class _GetElementInList_System_Single : GetElementInList<float>
		{
			[Token(Token = "0x600287E")]
			[Address(RVA = "0x139E174", Offset = "0x139E174", VA = "0x139E174")]
			public _GetElementInList_System_Single()
			{
			}
		}

		[Token(Token = "0x20005D4")]
		private class _GetElementInList_System_Int32 : GetElementInList<int>
		{
			[Token(Token = "0x600287F")]
			[Address(RVA = "0x139E124", Offset = "0x139E124", VA = "0x139E124")]
			public _GetElementInList_System_Int32()
			{
			}
		}

		[Token(Token = "0x20005D5")]
		private class _GetElementInList_UnityEngine_Vector2 : GetElementInList<Vector2>
		{
			[Token(Token = "0x6002880")]
			[Address(RVA = "0x139E624", Offset = "0x139E624", VA = "0x139E624")]
			public _GetElementInList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20005D6")]
		private class _GetElementInList_UnityEngine_Vector3 : GetElementInList<Vector3>
		{
			[Token(Token = "0x6002881")]
			[Address(RVA = "0x139E674", Offset = "0x139E674", VA = "0x139E674")]
			public _GetElementInList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20005D7")]
		private class _GetElementInList_UnityEngine_Vector4 : GetElementInList<Vector4>
		{
			[Token(Token = "0x6002882")]
			[Address(RVA = "0x139E6C4", Offset = "0x139E6C4", VA = "0x139E6C4")]
			public _GetElementInList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20005D8")]
		private class _GetElementInList_UnityEngine_Quaternion : GetElementInList<Quaternion>
		{
			[Token(Token = "0x6002883")]
			[Address(RVA = "0x139E444", Offset = "0x139E444", VA = "0x139E444")]
			public _GetElementInList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20005D9")]
		private class _GetElementInList_UnityEngine_Keyframe : GetElementInList<Keyframe>
		{
			[Token(Token = "0x6002884")]
			[Address(RVA = "0x139E3A4", Offset = "0x139E3A4", VA = "0x139E3A4")]
			public _GetElementInList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20005DA")]
		private class _GetElementInList_UnityEngine_Bounds : GetElementInList<Bounds>
		{
			[Token(Token = "0x6002885")]
			[Address(RVA = "0x139E1C4", Offset = "0x139E1C4", VA = "0x139E1C4")]
			public _GetElementInList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20005DB")]
		private class _GetElementInList_UnityEngine_Color : GetElementInList<Color>
		{
			[Token(Token = "0x6002886")]
			[Address(RVA = "0x139E2B4", Offset = "0x139E2B4", VA = "0x139E2B4")]
			public _GetElementInList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20005DC")]
		private class _GetElementInList_UnityEngine_Rect : GetElementInList<Rect>
		{
			[Token(Token = "0x6002887")]
			[Address(RVA = "0x139E584", Offset = "0x139E584", VA = "0x139E584")]
			public _GetElementInList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20005DD")]
		private class _GetElementInList_UnityEngine_ContactPoint : GetElementInList<ContactPoint>
		{
			[Token(Token = "0x6002888")]
			[Address(RVA = "0x139E304", Offset = "0x139E304", VA = "0x139E304")]
			public _GetElementInList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20005DE")]
		private class _GetElementInList_UnityEngine_ContactPoint2D : GetElementInList<ContactPoint2D>
		{
			[Token(Token = "0x6002889")]
			[Address(RVA = "0x139E354", Offset = "0x139E354", VA = "0x139E354")]
			public _GetElementInList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20005DF")]
		private class _GetElementInList_UnityEngine_Collision : GetElementInList<Collision>
		{
			[Token(Token = "0x600288A")]
			[Address(RVA = "0x139E214", Offset = "0x139E214", VA = "0x139E214")]
			public _GetElementInList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20005E0")]
		private class _GetElementInList_UnityEngine_Collision2D : GetElementInList<Collision2D>
		{
			[Token(Token = "0x600288B")]
			[Address(RVA = "0x139E264", Offset = "0x139E264", VA = "0x139E264")]
			public _GetElementInList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20005E1")]
		private class _GetElementInList_UnityEngine_RaycastHit : GetElementInList<RaycastHit>
		{
			[Token(Token = "0x600288C")]
			[Address(RVA = "0x139E4E4", Offset = "0x139E4E4", VA = "0x139E4E4")]
			public _GetElementInList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20005E2")]
		private class _GetElementInList_UnityEngine_RaycastHit2D : GetElementInList<RaycastHit2D>
		{
			[Token(Token = "0x600288D")]
			[Address(RVA = "0x139E534", Offset = "0x139E534", VA = "0x139E534")]
			public _GetElementInList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20005E3")]
		private class _GetElementInList_UnityEngine_Ray : GetElementInList<Ray>
		{
			[Token(Token = "0x600288E")]
			[Address(RVA = "0x139E494", Offset = "0x139E494", VA = "0x139E494")]
			public _GetElementInList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20005E4")]
		private class _GetElementInList_UnityEngine_Space : GetElementInList<Space>
		{
			[Token(Token = "0x600288F")]
			[Address(RVA = "0x139E5D4", Offset = "0x139E5D4", VA = "0x139E5D4")]
			public _GetElementInList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20005E5")]
		private class _GetElementInList_BossMainDone : GetElementInList<BossMainDone>
		{
			[Token(Token = "0x6002890")]
			[Address(RVA = "0x139DFE4", Offset = "0x139DFE4", VA = "0x139DFE4")]
			public _GetElementInList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20005E6")]
		private class _GetElementInList_BossMainToDo : GetElementInList<BossMainToDo>
		{
			[Token(Token = "0x6002891")]
			[Address(RVA = "0x139E034", Offset = "0x139E034", VA = "0x139E034")]
			public _GetElementInList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20005E7")]
		private class _GetElementInList_e_group_type : GetElementInList<e_group_type>
		{
			[Token(Token = "0x6002892")]
			[Address(RVA = "0x139E7B4", Offset = "0x139E7B4", VA = "0x139E7B4")]
			public _GetElementInList_e_group_type()
			{
			}
		}

		[Token(Token = "0x20005E8")]
		private class _GetElementInList_eMonsterAttackDirType : GetElementInList<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002893")]
			[Address(RVA = "0x139E714", Offset = "0x139E714", VA = "0x139E714")]
			public _GetElementInList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20005E9")]
		private class _GetElementInList_eMonsterAttackType : GetElementInList<eMonsterAttackType>
		{
			[Token(Token = "0x6002894")]
			[Address(RVA = "0x139E764", Offset = "0x139E764", VA = "0x139E764")]
			public _GetElementInList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20005EA")]
		private class _GetElementInList_MoveTargetType : GetElementInList<MoveTargetType>
		{
			[Token(Token = "0x6002895")]
			[Address(RVA = "0x139E084", Offset = "0x139E084", VA = "0x139E084")]
			public _GetElementInList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20005EB")]
		private class _GetElementInList_UnityEngine_LayerMask : GetElementInList<LayerMask>
		{
			[Token(Token = "0x6002896")]
			[Address(RVA = "0x139E3F4", Offset = "0x139E3F4", VA = "0x139E3F4")]
			public _GetElementInList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20005EC")]
		private class _GetElementsInList_System_Boolean : GetElementsInList<bool>
		{
			[Token(Token = "0x6002897")]
			[Address(RVA = "0x139E8F4", Offset = "0x139E8F4", VA = "0x139E8F4")]
			public _GetElementsInList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20005ED")]
		private class _GetElementsInList_System_Single : GetElementsInList<float>
		{
			[Token(Token = "0x6002898")]
			[Address(RVA = "0x139E994", Offset = "0x139E994", VA = "0x139E994")]
			public _GetElementsInList_System_Single()
			{
			}
		}

		[Token(Token = "0x20005EE")]
		private class _GetElementsInList_System_Int32 : GetElementsInList<int>
		{
			[Token(Token = "0x6002899")]
			[Address(RVA = "0x139E944", Offset = "0x139E944", VA = "0x139E944")]
			public _GetElementsInList_System_Int32()
			{
			}
		}

		[Token(Token = "0x20005EF")]
		private class _GetElementsInList_UnityEngine_Vector2 : GetElementsInList<Vector2>
		{
			[Token(Token = "0x600289A")]
			[Address(RVA = "0x139EE44", Offset = "0x139EE44", VA = "0x139EE44")]
			public _GetElementsInList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20005F0")]
		private class _GetElementsInList_UnityEngine_Vector3 : GetElementsInList<Vector3>
		{
			[Token(Token = "0x600289B")]
			[Address(RVA = "0x139EE94", Offset = "0x139EE94", VA = "0x139EE94")]
			public _GetElementsInList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20005F1")]
		private class _GetElementsInList_UnityEngine_Vector4 : GetElementsInList<Vector4>
		{
			[Token(Token = "0x600289C")]
			[Address(RVA = "0x139EEE4", Offset = "0x139EEE4", VA = "0x139EEE4")]
			public _GetElementsInList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20005F2")]
		private class _GetElementsInList_UnityEngine_Quaternion : GetElementsInList<Quaternion>
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0x139EC64", Offset = "0x139EC64", VA = "0x139EC64")]
			public _GetElementsInList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20005F3")]
		private class _GetElementsInList_UnityEngine_Keyframe : GetElementsInList<Keyframe>
		{
			[Token(Token = "0x600289E")]
			[Address(RVA = "0x139EBC4", Offset = "0x139EBC4", VA = "0x139EBC4")]
			public _GetElementsInList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20005F4")]
		private class _GetElementsInList_UnityEngine_Bounds : GetElementsInList<Bounds>
		{
			[Token(Token = "0x600289F")]
			[Address(RVA = "0x139E9E4", Offset = "0x139E9E4", VA = "0x139E9E4")]
			public _GetElementsInList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20005F5")]
		private class _GetElementsInList_UnityEngine_Color : GetElementsInList<Color>
		{
			[Token(Token = "0x60028A0")]
			[Address(RVA = "0x139EAD4", Offset = "0x139EAD4", VA = "0x139EAD4")]
			public _GetElementsInList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20005F6")]
		private class _GetElementsInList_UnityEngine_Rect : GetElementsInList<Rect>
		{
			[Token(Token = "0x60028A1")]
			[Address(RVA = "0x139EDA4", Offset = "0x139EDA4", VA = "0x139EDA4")]
			public _GetElementsInList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20005F7")]
		private class _GetElementsInList_UnityEngine_ContactPoint : GetElementsInList<ContactPoint>
		{
			[Token(Token = "0x60028A2")]
			[Address(RVA = "0x139EB24", Offset = "0x139EB24", VA = "0x139EB24")]
			public _GetElementsInList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20005F8")]
		private class _GetElementsInList_UnityEngine_ContactPoint2D : GetElementsInList<ContactPoint2D>
		{
			[Token(Token = "0x60028A3")]
			[Address(RVA = "0x139EB74", Offset = "0x139EB74", VA = "0x139EB74")]
			public _GetElementsInList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20005F9")]
		private class _GetElementsInList_UnityEngine_Collision : GetElementsInList<Collision>
		{
			[Token(Token = "0x60028A4")]
			[Address(RVA = "0x139EA34", Offset = "0x139EA34", VA = "0x139EA34")]
			public _GetElementsInList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20005FA")]
		private class _GetElementsInList_UnityEngine_Collision2D : GetElementsInList<Collision2D>
		{
			[Token(Token = "0x60028A5")]
			[Address(RVA = "0x139EA84", Offset = "0x139EA84", VA = "0x139EA84")]
			public _GetElementsInList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20005FB")]
		private class _GetElementsInList_UnityEngine_RaycastHit : GetElementsInList<RaycastHit>
		{
			[Token(Token = "0x60028A6")]
			[Address(RVA = "0x139ED04", Offset = "0x139ED04", VA = "0x139ED04")]
			public _GetElementsInList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20005FC")]
		private class _GetElementsInList_UnityEngine_RaycastHit2D : GetElementsInList<RaycastHit2D>
		{
			[Token(Token = "0x60028A7")]
			[Address(RVA = "0x139ED54", Offset = "0x139ED54", VA = "0x139ED54")]
			public _GetElementsInList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20005FD")]
		private class _GetElementsInList_UnityEngine_Ray : GetElementsInList<Ray>
		{
			[Token(Token = "0x60028A8")]
			[Address(RVA = "0x139ECB4", Offset = "0x139ECB4", VA = "0x139ECB4")]
			public _GetElementsInList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20005FE")]
		private class _GetElementsInList_UnityEngine_Space : GetElementsInList<Space>
		{
			[Token(Token = "0x60028A9")]
			[Address(RVA = "0x139EDF4", Offset = "0x139EDF4", VA = "0x139EDF4")]
			public _GetElementsInList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20005FF")]
		private class _GetElementsInList_BossMainDone : GetElementsInList<BossMainDone>
		{
			[Token(Token = "0x60028AA")]
			[Address(RVA = "0x139E804", Offset = "0x139E804", VA = "0x139E804")]
			public _GetElementsInList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000600")]
		private class _GetElementsInList_BossMainToDo : GetElementsInList<BossMainToDo>
		{
			[Token(Token = "0x60028AB")]
			[Address(RVA = "0x139E854", Offset = "0x139E854", VA = "0x139E854")]
			public _GetElementsInList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000601")]
		private class _GetElementsInList_e_group_type : GetElementsInList<e_group_type>
		{
			[Token(Token = "0x60028AC")]
			[Address(RVA = "0x139EFD4", Offset = "0x139EFD4", VA = "0x139EFD4")]
			public _GetElementsInList_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000602")]
		private class _GetElementsInList_eMonsterAttackDirType : GetElementsInList<eMonsterAttackDirType>
		{
			[Token(Token = "0x60028AD")]
			[Address(RVA = "0x139EF34", Offset = "0x139EF34", VA = "0x139EF34")]
			public _GetElementsInList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000603")]
		private class _GetElementsInList_eMonsterAttackType : GetElementsInList<eMonsterAttackType>
		{
			[Token(Token = "0x60028AE")]
			[Address(RVA = "0x139EF84", Offset = "0x139EF84", VA = "0x139EF84")]
			public _GetElementsInList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000604")]
		private class _GetElementsInList_MoveTargetType : GetElementsInList<MoveTargetType>
		{
			[Token(Token = "0x60028AF")]
			[Address(RVA = "0x139E8A4", Offset = "0x139E8A4", VA = "0x139E8A4")]
			public _GetElementsInList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000605")]
		private class _GetElementsInList_UnityEngine_LayerMask : GetElementsInList<LayerMask>
		{
			[Token(Token = "0x60028B0")]
			[Address(RVA = "0x139EC14", Offset = "0x139EC14", VA = "0x139EC14")]
			public _GetElementsInList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000606")]
		private class NodeCanvas_Framework_BBParameter_System_Boolean : BBParameter<bool>
		{
			[Token(Token = "0x60028B1")]
			[Address(RVA = "0x14A77D8", Offset = "0x14A77D8", VA = "0x14A77D8")]
			public NodeCanvas_Framework_BBParameter_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000607")]
		private class NodeCanvas_Framework_BBParameter_System_Single : BBParameter<float>
		{
			[Token(Token = "0x60028B2")]
			[Address(RVA = "0x14A7878", Offset = "0x14A7878", VA = "0x14A7878")]
			public NodeCanvas_Framework_BBParameter_System_Single()
			{
			}
		}

		[Token(Token = "0x2000608")]
		private class NodeCanvas_Framework_BBParameter_System_Int32 : BBParameter<int>
		{
			[Token(Token = "0x60028B3")]
			[Address(RVA = "0x14A7828", Offset = "0x14A7828", VA = "0x14A7828")]
			public NodeCanvas_Framework_BBParameter_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000609")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector2 : BBParameter<Vector2>
		{
			[Token(Token = "0x60028B4")]
			[Address(RVA = "0x14A7D28", Offset = "0x14A7D28", VA = "0x14A7D28")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200060A")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector3 : BBParameter<Vector3>
		{
			[Token(Token = "0x60028B5")]
			[Address(RVA = "0x14A7D78", Offset = "0x14A7D78", VA = "0x14A7D78")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200060B")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector4 : BBParameter<Vector4>
		{
			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x14A7DC8", Offset = "0x14A7DC8", VA = "0x14A7DC8")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200060C")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Quaternion : BBParameter<Quaternion>
		{
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x14A7B48", Offset = "0x14A7B48", VA = "0x14A7B48")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200060D")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Keyframe : BBParameter<Keyframe>
		{
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0x14A7AA8", Offset = "0x14A7AA8", VA = "0x14A7AA8")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200060E")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Bounds : BBParameter<Bounds>
		{
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0x14A78C8", Offset = "0x14A78C8", VA = "0x14A78C8")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200060F")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Color : BBParameter<Color>
		{
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0x14A79B8", Offset = "0x14A79B8", VA = "0x14A79B8")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000610")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Rect : BBParameter<Rect>
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x14A7C88", Offset = "0x14A7C88", VA = "0x14A7C88")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000611")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint : BBParameter<ContactPoint>
		{
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x14A7A08", Offset = "0x14A7A08", VA = "0x14A7A08")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000612")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint2D : BBParameter<ContactPoint2D>
		{
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x14A7A58", Offset = "0x14A7A58", VA = "0x14A7A58")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000613")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Collision : BBParameter<Collision>
		{
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0x14A7918", Offset = "0x14A7918", VA = "0x14A7918")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000614")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Collision2D : BBParameter<Collision2D>
		{
			[Token(Token = "0x60028BF")]
			[Address(RVA = "0x14A7968", Offset = "0x14A7968", VA = "0x14A7968")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000615")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit : BBParameter<RaycastHit>
		{
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0x14A7BE8", Offset = "0x14A7BE8", VA = "0x14A7BE8")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000616")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit2D : BBParameter<RaycastHit2D>
		{
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x14A7C38", Offset = "0x14A7C38", VA = "0x14A7C38")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000617")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Ray : BBParameter<Ray>
		{
			[Token(Token = "0x60028C2")]
			[Address(RVA = "0x14A7B98", Offset = "0x14A7B98", VA = "0x14A7B98")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000618")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Space : BBParameter<Space>
		{
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x14A7CD8", Offset = "0x14A7CD8", VA = "0x14A7CD8")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000619")]
		private class NodeCanvas_Framework_BBParameter_BossMainDone : BBParameter<BossMainDone>
		{
			[Token(Token = "0x60028C4")]
			[Address(RVA = "0x14A76E8", Offset = "0x14A76E8", VA = "0x14A76E8")]
			public NodeCanvas_Framework_BBParameter_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200061A")]
		private class NodeCanvas_Framework_BBParameter_BossMainToDo : BBParameter<BossMainToDo>
		{
			[Token(Token = "0x60028C5")]
			[Address(RVA = "0x14A7738", Offset = "0x14A7738", VA = "0x14A7738")]
			public NodeCanvas_Framework_BBParameter_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200061B")]
		private class NodeCanvas_Framework_BBParameter_e_group_type : BBParameter<e_group_type>
		{
			[Token(Token = "0x60028C6")]
			[Address(RVA = "0x14A7EB8", Offset = "0x14A7EB8", VA = "0x14A7EB8")]
			public NodeCanvas_Framework_BBParameter_e_group_type()
			{
			}
		}

		[Token(Token = "0x200061C")]
		private class NodeCanvas_Framework_BBParameter_eMonsterAttackDirType : BBParameter<eMonsterAttackDirType>
		{
			[Token(Token = "0x60028C7")]
			[Address(RVA = "0x14A7E18", Offset = "0x14A7E18", VA = "0x14A7E18")]
			public NodeCanvas_Framework_BBParameter_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200061D")]
		private class NodeCanvas_Framework_BBParameter_eMonsterAttackType : BBParameter<eMonsterAttackType>
		{
			[Token(Token = "0x60028C8")]
			[Address(RVA = "0x14A7E68", Offset = "0x14A7E68", VA = "0x14A7E68")]
			public NodeCanvas_Framework_BBParameter_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200061E")]
		private class NodeCanvas_Framework_BBParameter_MoveTargetType : BBParameter<MoveTargetType>
		{
			[Token(Token = "0x60028C9")]
			[Address(RVA = "0x14A7788", Offset = "0x14A7788", VA = "0x14A7788")]
			public NodeCanvas_Framework_BBParameter_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200061F")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_LayerMask : BBParameter<LayerMask>
		{
			[Token(Token = "0x60028CA")]
			[Address(RVA = "0x14A7AF8", Offset = "0x14A7AF8", VA = "0x14A7AF8")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000620")]
		private class NodeCanvas_Framework_Variable_System_Boolean : Variable<bool>
		{
			[Token(Token = "0x60028CB")]
			[Address(RVA = "0x14A7FF8", Offset = "0x14A7FF8", VA = "0x14A7FF8")]
			public NodeCanvas_Framework_Variable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000621")]
		private class NodeCanvas_Framework_Variable_System_Single : Variable<float>
		{
			[Token(Token = "0x60028CC")]
			[Address(RVA = "0x14A8098", Offset = "0x14A8098", VA = "0x14A8098")]
			public NodeCanvas_Framework_Variable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000622")]
		private class NodeCanvas_Framework_Variable_System_Int32 : Variable<int>
		{
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0x14A8048", Offset = "0x14A8048", VA = "0x14A8048")]
			public NodeCanvas_Framework_Variable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000623")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector2 : Variable<Vector2>
		{
			[Token(Token = "0x60028CE")]
			[Address(RVA = "0x14A8548", Offset = "0x14A8548", VA = "0x14A8548")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000624")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector3 : Variable<Vector3>
		{
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x14A8598", Offset = "0x14A8598", VA = "0x14A8598")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000625")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector4 : Variable<Vector4>
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x14A85E8", Offset = "0x14A85E8", VA = "0x14A85E8")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000626")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Quaternion : Variable<Quaternion>
		{
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x14A8368", Offset = "0x14A8368", VA = "0x14A8368")]
			public NodeCanvas_Framework_Variable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000627")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Keyframe : Variable<Keyframe>
		{
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x14A82C8", Offset = "0x14A82C8", VA = "0x14A82C8")]
			public NodeCanvas_Framework_Variable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000628")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Bounds : Variable<Bounds>
		{
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0x14A80E8", Offset = "0x14A80E8", VA = "0x14A80E8")]
			public NodeCanvas_Framework_Variable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000629")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Color : Variable<Color>
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x14A81D8", Offset = "0x14A81D8", VA = "0x14A81D8")]
			public NodeCanvas_Framework_Variable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200062A")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Rect : Variable<Rect>
		{
			[Token(Token = "0x60028D5")]
			[Address(RVA = "0x14A84A8", Offset = "0x14A84A8", VA = "0x14A84A8")]
			public NodeCanvas_Framework_Variable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200062B")]
		private class NodeCanvas_Framework_Variable_UnityEngine_ContactPoint : Variable<ContactPoint>
		{
			[Token(Token = "0x60028D6")]
			[Address(RVA = "0x14A8228", Offset = "0x14A8228", VA = "0x14A8228")]
			public NodeCanvas_Framework_Variable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200062C")]
		private class NodeCanvas_Framework_Variable_UnityEngine_ContactPoint2D : Variable<ContactPoint2D>
		{
			[Token(Token = "0x60028D7")]
			[Address(RVA = "0x14A8278", Offset = "0x14A8278", VA = "0x14A8278")]
			public NodeCanvas_Framework_Variable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200062D")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Collision : Variable<Collision>
		{
			[Token(Token = "0x60028D8")]
			[Address(RVA = "0x14A8138", Offset = "0x14A8138", VA = "0x14A8138")]
			public NodeCanvas_Framework_Variable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200062E")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Collision2D : Variable<Collision2D>
		{
			[Token(Token = "0x60028D9")]
			[Address(RVA = "0x14A8188", Offset = "0x14A8188", VA = "0x14A8188")]
			public NodeCanvas_Framework_Variable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200062F")]
		private class NodeCanvas_Framework_Variable_UnityEngine_RaycastHit : Variable<RaycastHit>
		{
			[Token(Token = "0x60028DA")]
			[Address(RVA = "0x14A8408", Offset = "0x14A8408", VA = "0x14A8408")]
			public NodeCanvas_Framework_Variable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000630")]
		private class NodeCanvas_Framework_Variable_UnityEngine_RaycastHit2D : Variable<RaycastHit2D>
		{
			[Token(Token = "0x60028DB")]
			[Address(RVA = "0x14A8458", Offset = "0x14A8458", VA = "0x14A8458")]
			public NodeCanvas_Framework_Variable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000631")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Ray : Variable<Ray>
		{
			[Token(Token = "0x60028DC")]
			[Address(RVA = "0x14A83B8", Offset = "0x14A83B8", VA = "0x14A83B8")]
			public NodeCanvas_Framework_Variable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000632")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Space : Variable<Space>
		{
			[Token(Token = "0x60028DD")]
			[Address(RVA = "0x14A84F8", Offset = "0x14A84F8", VA = "0x14A84F8")]
			public NodeCanvas_Framework_Variable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000633")]
		private class NodeCanvas_Framework_Variable_BossMainDone : Variable<BossMainDone>
		{
			[Token(Token = "0x60028DE")]
			[Address(RVA = "0x14A7F08", Offset = "0x14A7F08", VA = "0x14A7F08")]
			public NodeCanvas_Framework_Variable_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000634")]
		private class NodeCanvas_Framework_Variable_BossMainToDo : Variable<BossMainToDo>
		{
			[Token(Token = "0x60028DF")]
			[Address(RVA = "0x14A7F58", Offset = "0x14A7F58", VA = "0x14A7F58")]
			public NodeCanvas_Framework_Variable_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000635")]
		private class NodeCanvas_Framework_Variable_e_group_type : Variable<e_group_type>
		{
			[Token(Token = "0x60028E0")]
			[Address(RVA = "0x14A86D8", Offset = "0x14A86D8", VA = "0x14A86D8")]
			public NodeCanvas_Framework_Variable_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000636")]
		private class NodeCanvas_Framework_Variable_eMonsterAttackDirType : Variable<eMonsterAttackDirType>
		{
			[Token(Token = "0x60028E1")]
			[Address(RVA = "0x14A8638", Offset = "0x14A8638", VA = "0x14A8638")]
			public NodeCanvas_Framework_Variable_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000637")]
		private class NodeCanvas_Framework_Variable_eMonsterAttackType : Variable<eMonsterAttackType>
		{
			[Token(Token = "0x60028E2")]
			[Address(RVA = "0x14A8688", Offset = "0x14A8688", VA = "0x14A8688")]
			public NodeCanvas_Framework_Variable_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000638")]
		private class NodeCanvas_Framework_Variable_MoveTargetType : Variable<MoveTargetType>
		{
			[Token(Token = "0x60028E3")]
			[Address(RVA = "0x14A7FA8", Offset = "0x14A7FA8", VA = "0x14A7FA8")]
			public NodeCanvas_Framework_Variable_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000639")]
		private class NodeCanvas_Framework_Variable_UnityEngine_LayerMask : Variable<LayerMask>
		{
			[Token(Token = "0x60028E4")]
			[Address(RVA = "0x14A8318", Offset = "0x14A8318", VA = "0x14A8318")]
			public NodeCanvas_Framework_Variable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200063A")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Boolean : AddElementToDictionary<bool>
		{
			[Token(Token = "0x60028E5")]
			[Address(RVA = "0x14A8818", Offset = "0x14A8818", VA = "0x14A8818")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200063B")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Single : AddElementToDictionary<float>
		{
			[Token(Token = "0x60028E6")]
			[Address(RVA = "0x14A88B8", Offset = "0x14A88B8", VA = "0x14A88B8")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Single()
			{
			}
		}

		[Token(Token = "0x200063C")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Int32 : AddElementToDictionary<int>
		{
			[Token(Token = "0x60028E7")]
			[Address(RVA = "0x14A8868", Offset = "0x14A8868", VA = "0x14A8868")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Int32()
			{
			}
		}

		[Token(Token = "0x200063D")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector2 : AddElementToDictionary<Vector2>
		{
			[Token(Token = "0x60028E8")]
			[Address(RVA = "0x1391B04", Offset = "0x1391B04", VA = "0x1391B04")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200063E")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector3 : AddElementToDictionary<Vector3>
		{
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0x1391B54", Offset = "0x1391B54", VA = "0x1391B54")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200063F")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector4 : AddElementToDictionary<Vector4>
		{
			[Token(Token = "0x60028EA")]
			[Address(RVA = "0x1391BA4", Offset = "0x1391BA4", VA = "0x1391BA4")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000640")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Quaternion : AddElementToDictionary<Quaternion>
		{
			[Token(Token = "0x60028EB")]
			[Address(RVA = "0x14A8B88", Offset = "0x14A8B88", VA = "0x14A8B88")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000641")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Keyframe : AddElementToDictionary<Keyframe>
		{
			[Token(Token = "0x60028EC")]
			[Address(RVA = "0x14A8AE8", Offset = "0x14A8AE8", VA = "0x14A8AE8")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000642")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Bounds : AddElementToDictionary<Bounds>
		{
			[Token(Token = "0x60028ED")]
			[Address(RVA = "0x14A8908", Offset = "0x14A8908", VA = "0x14A8908")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000643")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Color : AddElementToDictionary<Color>
		{
			[Token(Token = "0x60028EE")]
			[Address(RVA = "0x14A89F8", Offset = "0x14A89F8", VA = "0x14A89F8")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000644")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Rect : AddElementToDictionary<Rect>
		{
			[Token(Token = "0x60028EF")]
			[Address(RVA = "0x1391A64", Offset = "0x1391A64", VA = "0x1391A64")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000645")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint : AddElementToDictionary<ContactPoint>
		{
			[Token(Token = "0x60028F0")]
			[Address(RVA = "0x14A8A48", Offset = "0x14A8A48", VA = "0x14A8A48")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000646")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint2D : AddElementToDictionary<ContactPoint2D>
		{
			[Token(Token = "0x60028F1")]
			[Address(RVA = "0x14A8A98", Offset = "0x14A8A98", VA = "0x14A8A98")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000647")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Collision : AddElementToDictionary<Collision>
		{
			[Token(Token = "0x60028F2")]
			[Address(RVA = "0x14A8958", Offset = "0x14A8958", VA = "0x14A8958")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000648")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Collision2D : AddElementToDictionary<Collision2D>
		{
			[Token(Token = "0x60028F3")]
			[Address(RVA = "0x14A89A8", Offset = "0x14A89A8", VA = "0x14A89A8")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000649")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit : AddElementToDictionary<RaycastHit>
		{
			[Token(Token = "0x60028F4")]
			[Address(RVA = "0x14A8C28", Offset = "0x14A8C28", VA = "0x14A8C28")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200064A")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit2D : AddElementToDictionary<RaycastHit2D>
		{
			[Token(Token = "0x60028F5")]
			[Address(RVA = "0x14A8C78", Offset = "0x14A8C78", VA = "0x14A8C78")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200064B")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Ray : AddElementToDictionary<Ray>
		{
			[Token(Token = "0x60028F6")]
			[Address(RVA = "0x14A8BD8", Offset = "0x14A8BD8", VA = "0x14A8BD8")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200064C")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Space : AddElementToDictionary<Space>
		{
			[Token(Token = "0x60028F7")]
			[Address(RVA = "0x1391AB4", Offset = "0x1391AB4", VA = "0x1391AB4")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200064D")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_BossMainDone : AddElementToDictionary<BossMainDone>
		{
			[Token(Token = "0x60028F8")]
			[Address(RVA = "0x14A8728", Offset = "0x14A8728", VA = "0x14A8728")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200064E")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_BossMainToDo : AddElementToDictionary<BossMainToDo>
		{
			[Token(Token = "0x60028F9")]
			[Address(RVA = "0x14A8778", Offset = "0x14A8778", VA = "0x14A8778")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200064F")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_e_group_type : AddElementToDictionary<e_group_type>
		{
			[Token(Token = "0x60028FA")]
			[Address(RVA = "0x1391C94", Offset = "0x1391C94", VA = "0x1391C94")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000650")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_eMonsterAttackDirType : AddElementToDictionary<eMonsterAttackDirType>
		{
			[Token(Token = "0x60028FB")]
			[Address(RVA = "0x1391BF4", Offset = "0x1391BF4", VA = "0x1391BF4")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000651")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_eMonsterAttackType : AddElementToDictionary<eMonsterAttackType>
		{
			[Token(Token = "0x60028FC")]
			[Address(RVA = "0x1391C44", Offset = "0x1391C44", VA = "0x1391C44")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000652")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_MoveTargetType : AddElementToDictionary<MoveTargetType>
		{
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x14A87C8", Offset = "0x14A87C8", VA = "0x14A87C8")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000653")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_LayerMask : AddElementToDictionary<LayerMask>
		{
			[Token(Token = "0x60028FE")]
			[Address(RVA = "0x14A8B38", Offset = "0x14A8B38", VA = "0x14A8B38")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000654")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_System_Boolean : AddElementToList<bool>
		{
			[Token(Token = "0x60028FF")]
			[Address(RVA = "0x1391DD4", Offset = "0x1391DD4", VA = "0x1391DD4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000655")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_System_Single : AddElementToList<float>
		{
			[Token(Token = "0x6002900")]
			[Address(RVA = "0x1391E74", Offset = "0x1391E74", VA = "0x1391E74")]
			public NodeCanvas_Tasks_Actions_AddElementToList_System_Single()
			{
			}
		}

		[Token(Token = "0x2000656")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_System_Int32 : AddElementToList<int>
		{
			[Token(Token = "0x6002901")]
			[Address(RVA = "0x1391E24", Offset = "0x1391E24", VA = "0x1391E24")]
			public NodeCanvas_Tasks_Actions_AddElementToList_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000657")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector2 : AddElementToList<Vector2>
		{
			[Token(Token = "0x6002902")]
			[Address(RVA = "0x1392324", Offset = "0x1392324", VA = "0x1392324")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000658")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector3 : AddElementToList<Vector3>
		{
			[Token(Token = "0x6002903")]
			[Address(RVA = "0x1392374", Offset = "0x1392374", VA = "0x1392374")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000659")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector4 : AddElementToList<Vector4>
		{
			[Token(Token = "0x6002904")]
			[Address(RVA = "0x13923C4", Offset = "0x13923C4", VA = "0x13923C4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200065A")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Quaternion : AddElementToList<Quaternion>
		{
			[Token(Token = "0x6002905")]
			[Address(RVA = "0x1392144", Offset = "0x1392144", VA = "0x1392144")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200065B")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Keyframe : AddElementToList<Keyframe>
		{
			[Token(Token = "0x6002906")]
			[Address(RVA = "0x13920A4", Offset = "0x13920A4", VA = "0x13920A4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200065C")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Bounds : AddElementToList<Bounds>
		{
			[Token(Token = "0x6002907")]
			[Address(RVA = "0x1391EC4", Offset = "0x1391EC4", VA = "0x1391EC4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200065D")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Color : AddElementToList<Color>
		{
			[Token(Token = "0x6002908")]
			[Address(RVA = "0x1391FB4", Offset = "0x1391FB4", VA = "0x1391FB4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200065E")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Rect : AddElementToList<Rect>
		{
			[Token(Token = "0x6002909")]
			[Address(RVA = "0x1392284", Offset = "0x1392284", VA = "0x1392284")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200065F")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint : AddElementToList<ContactPoint>
		{
			[Token(Token = "0x600290A")]
			[Address(RVA = "0x1392004", Offset = "0x1392004", VA = "0x1392004")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000660")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint2D : AddElementToList<ContactPoint2D>
		{
			[Token(Token = "0x600290B")]
			[Address(RVA = "0x1392054", Offset = "0x1392054", VA = "0x1392054")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000661")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Collision : AddElementToList<Collision>
		{
			[Token(Token = "0x600290C")]
			[Address(RVA = "0x1391F14", Offset = "0x1391F14", VA = "0x1391F14")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000662")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Collision2D : AddElementToList<Collision2D>
		{
			[Token(Token = "0x600290D")]
			[Address(RVA = "0x1391F64", Offset = "0x1391F64", VA = "0x1391F64")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000663")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit : AddElementToList<RaycastHit>
		{
			[Token(Token = "0x600290E")]
			[Address(RVA = "0x13921E4", Offset = "0x13921E4", VA = "0x13921E4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000664")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit2D : AddElementToList<RaycastHit2D>
		{
			[Token(Token = "0x600290F")]
			[Address(RVA = "0x1392234", Offset = "0x1392234", VA = "0x1392234")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000665")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Ray : AddElementToList<Ray>
		{
			[Token(Token = "0x6002910")]
			[Address(RVA = "0x1392194", Offset = "0x1392194", VA = "0x1392194")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000666")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Space : AddElementToList<Space>
		{
			[Token(Token = "0x6002911")]
			[Address(RVA = "0x13922D4", Offset = "0x13922D4", VA = "0x13922D4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000667")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_BossMainDone : AddElementToList<BossMainDone>
		{
			[Token(Token = "0x6002912")]
			[Address(RVA = "0x1391CE4", Offset = "0x1391CE4", VA = "0x1391CE4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000668")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_BossMainToDo : AddElementToList<BossMainToDo>
		{
			[Token(Token = "0x6002913")]
			[Address(RVA = "0x1391D34", Offset = "0x1391D34", VA = "0x1391D34")]
			public NodeCanvas_Tasks_Actions_AddElementToList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000669")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_e_group_type : AddElementToList<e_group_type>
		{
			[Token(Token = "0x6002914")]
			[Address(RVA = "0x13924B4", Offset = "0x13924B4", VA = "0x13924B4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_e_group_type()
			{
			}
		}

		[Token(Token = "0x200066A")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_eMonsterAttackDirType : AddElementToList<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002915")]
			[Address(RVA = "0x1392414", Offset = "0x1392414", VA = "0x1392414")]
			public NodeCanvas_Tasks_Actions_AddElementToList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200066B")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_eMonsterAttackType : AddElementToList<eMonsterAttackType>
		{
			[Token(Token = "0x6002916")]
			[Address(RVA = "0x1392464", Offset = "0x1392464", VA = "0x1392464")]
			public NodeCanvas_Tasks_Actions_AddElementToList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200066C")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_MoveTargetType : AddElementToList<MoveTargetType>
		{
			[Token(Token = "0x6002917")]
			[Address(RVA = "0x1391D84", Offset = "0x1391D84", VA = "0x1391D84")]
			public NodeCanvas_Tasks_Actions_AddElementToList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200066D")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_LayerMask : AddElementToList<LayerMask>
		{
			[Token(Token = "0x6002918")]
			[Address(RVA = "0x13920F4", Offset = "0x13920F4", VA = "0x13920F4")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200066E")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Boolean : GetDictionaryElement<bool>
		{
			[Token(Token = "0x6002919")]
			[Address(RVA = "0x13925F4", Offset = "0x13925F4", VA = "0x13925F4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200066F")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Single : GetDictionaryElement<float>
		{
			[Token(Token = "0x600291A")]
			[Address(RVA = "0x1392694", Offset = "0x1392694", VA = "0x1392694")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Single()
			{
			}
		}

		[Token(Token = "0x2000670")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Int32 : GetDictionaryElement<int>
		{
			[Token(Token = "0x600291B")]
			[Address(RVA = "0x1392644", Offset = "0x1392644", VA = "0x1392644")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000671")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector2 : GetDictionaryElement<Vector2>
		{
			[Token(Token = "0x600291C")]
			[Address(RVA = "0x1392B44", Offset = "0x1392B44", VA = "0x1392B44")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000672")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector3 : GetDictionaryElement<Vector3>
		{
			[Token(Token = "0x600291D")]
			[Address(RVA = "0x1392B94", Offset = "0x1392B94", VA = "0x1392B94")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000673")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector4 : GetDictionaryElement<Vector4>
		{
			[Token(Token = "0x600291E")]
			[Address(RVA = "0x1392BE4", Offset = "0x1392BE4", VA = "0x1392BE4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000674")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Quaternion : GetDictionaryElement<Quaternion>
		{
			[Token(Token = "0x600291F")]
			[Address(RVA = "0x1392964", Offset = "0x1392964", VA = "0x1392964")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000675")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Keyframe : GetDictionaryElement<Keyframe>
		{
			[Token(Token = "0x6002920")]
			[Address(RVA = "0x13928C4", Offset = "0x13928C4", VA = "0x13928C4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000676")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Bounds : GetDictionaryElement<Bounds>
		{
			[Token(Token = "0x6002921")]
			[Address(RVA = "0x13926E4", Offset = "0x13926E4", VA = "0x13926E4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000677")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Color : GetDictionaryElement<Color>
		{
			[Token(Token = "0x6002922")]
			[Address(RVA = "0x13927D4", Offset = "0x13927D4", VA = "0x13927D4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000678")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Rect : GetDictionaryElement<Rect>
		{
			[Token(Token = "0x6002923")]
			[Address(RVA = "0x1392AA4", Offset = "0x1392AA4", VA = "0x1392AA4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000679")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint : GetDictionaryElement<ContactPoint>
		{
			[Token(Token = "0x6002924")]
			[Address(RVA = "0x1392824", Offset = "0x1392824", VA = "0x1392824")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200067A")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint2D : GetDictionaryElement<ContactPoint2D>
		{
			[Token(Token = "0x6002925")]
			[Address(RVA = "0x1392874", Offset = "0x1392874", VA = "0x1392874")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200067B")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Collision : GetDictionaryElement<Collision>
		{
			[Token(Token = "0x6002926")]
			[Address(RVA = "0x1392734", Offset = "0x1392734", VA = "0x1392734")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200067C")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Collision2D : GetDictionaryElement<Collision2D>
		{
			[Token(Token = "0x6002927")]
			[Address(RVA = "0x1392784", Offset = "0x1392784", VA = "0x1392784")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200067D")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit : GetDictionaryElement<RaycastHit>
		{
			[Token(Token = "0x6002928")]
			[Address(RVA = "0x1392A04", Offset = "0x1392A04", VA = "0x1392A04")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200067E")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit2D : GetDictionaryElement<RaycastHit2D>
		{
			[Token(Token = "0x6002929")]
			[Address(RVA = "0x1392A54", Offset = "0x1392A54", VA = "0x1392A54")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200067F")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Ray : GetDictionaryElement<Ray>
		{
			[Token(Token = "0x600292A")]
			[Address(RVA = "0x13929B4", Offset = "0x13929B4", VA = "0x13929B4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000680")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Space : GetDictionaryElement<Space>
		{
			[Token(Token = "0x600292B")]
			[Address(RVA = "0x1392AF4", Offset = "0x1392AF4", VA = "0x1392AF4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000681")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_BossMainDone : GetDictionaryElement<BossMainDone>
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0x1392504", Offset = "0x1392504", VA = "0x1392504")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000682")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_BossMainToDo : GetDictionaryElement<BossMainToDo>
		{
			[Token(Token = "0x600292D")]
			[Address(RVA = "0x1392554", Offset = "0x1392554", VA = "0x1392554")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000683")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_e_group_type : GetDictionaryElement<e_group_type>
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x1392CD4", Offset = "0x1392CD4", VA = "0x1392CD4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000684")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_eMonsterAttackDirType : GetDictionaryElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x1392C34", Offset = "0x1392C34", VA = "0x1392C34")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000685")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_eMonsterAttackType : GetDictionaryElement<eMonsterAttackType>
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0x1392C84", Offset = "0x1392C84", VA = "0x1392C84")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000686")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_MoveTargetType : GetDictionaryElement<MoveTargetType>
		{
			[Token(Token = "0x6002931")]
			[Address(RVA = "0x13925A4", Offset = "0x13925A4", VA = "0x13925A4")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000687")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_LayerMask : GetDictionaryElement<LayerMask>
		{
			[Token(Token = "0x6002932")]
			[Address(RVA = "0x1392914", Offset = "0x1392914", VA = "0x1392914")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000688")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Boolean : GetIndexOfElement<bool>
		{
			[Token(Token = "0x6002933")]
			[Address(RVA = "0x1392E14", Offset = "0x1392E14", VA = "0x1392E14")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000689")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Single : GetIndexOfElement<float>
		{
			[Token(Token = "0x6002934")]
			[Address(RVA = "0x1392EB4", Offset = "0x1392EB4", VA = "0x1392EB4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Single()
			{
			}
		}

		[Token(Token = "0x200068A")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Int32 : GetIndexOfElement<int>
		{
			[Token(Token = "0x6002935")]
			[Address(RVA = "0x1392E64", Offset = "0x1392E64", VA = "0x1392E64")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x200068B")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector2 : GetIndexOfElement<Vector2>
		{
			[Token(Token = "0x6002936")]
			[Address(RVA = "0x1393364", Offset = "0x1393364", VA = "0x1393364")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200068C")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector3 : GetIndexOfElement<Vector3>
		{
			[Token(Token = "0x6002937")]
			[Address(RVA = "0x13933B4", Offset = "0x13933B4", VA = "0x13933B4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200068D")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector4 : GetIndexOfElement<Vector4>
		{
			[Token(Token = "0x6002938")]
			[Address(RVA = "0x1393404", Offset = "0x1393404", VA = "0x1393404")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200068E")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Quaternion : GetIndexOfElement<Quaternion>
		{
			[Token(Token = "0x6002939")]
			[Address(RVA = "0x1393184", Offset = "0x1393184", VA = "0x1393184")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200068F")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Keyframe : GetIndexOfElement<Keyframe>
		{
			[Token(Token = "0x600293A")]
			[Address(RVA = "0x13930E4", Offset = "0x13930E4", VA = "0x13930E4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000690")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Bounds : GetIndexOfElement<Bounds>
		{
			[Token(Token = "0x600293B")]
			[Address(RVA = "0x1392F04", Offset = "0x1392F04", VA = "0x1392F04")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000691")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Color : GetIndexOfElement<Color>
		{
			[Token(Token = "0x600293C")]
			[Address(RVA = "0x1392FF4", Offset = "0x1392FF4", VA = "0x1392FF4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000692")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Rect : GetIndexOfElement<Rect>
		{
			[Token(Token = "0x600293D")]
			[Address(RVA = "0x13932C4", Offset = "0x13932C4", VA = "0x13932C4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000693")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint : GetIndexOfElement<ContactPoint>
		{
			[Token(Token = "0x600293E")]
			[Address(RVA = "0x1393044", Offset = "0x1393044", VA = "0x1393044")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000694")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint2D : GetIndexOfElement<ContactPoint2D>
		{
			[Token(Token = "0x600293F")]
			[Address(RVA = "0x1393094", Offset = "0x1393094", VA = "0x1393094")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000695")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Collision : GetIndexOfElement<Collision>
		{
			[Token(Token = "0x6002940")]
			[Address(RVA = "0x1392F54", Offset = "0x1392F54", VA = "0x1392F54")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000696")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Collision2D : GetIndexOfElement<Collision2D>
		{
			[Token(Token = "0x6002941")]
			[Address(RVA = "0x1392FA4", Offset = "0x1392FA4", VA = "0x1392FA4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000697")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit : GetIndexOfElement<RaycastHit>
		{
			[Token(Token = "0x6002942")]
			[Address(RVA = "0x1393224", Offset = "0x1393224", VA = "0x1393224")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000698")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit2D : GetIndexOfElement<RaycastHit2D>
		{
			[Token(Token = "0x6002943")]
			[Address(RVA = "0x1393274", Offset = "0x1393274", VA = "0x1393274")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000699")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Ray : GetIndexOfElement<Ray>
		{
			[Token(Token = "0x6002944")]
			[Address(RVA = "0x13931D4", Offset = "0x13931D4", VA = "0x13931D4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200069A")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Space : GetIndexOfElement<Space>
		{
			[Token(Token = "0x6002945")]
			[Address(RVA = "0x1393314", Offset = "0x1393314", VA = "0x1393314")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200069B")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_BossMainDone : GetIndexOfElement<BossMainDone>
		{
			[Token(Token = "0x6002946")]
			[Address(RVA = "0x1392D24", Offset = "0x1392D24", VA = "0x1392D24")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200069C")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_BossMainToDo : GetIndexOfElement<BossMainToDo>
		{
			[Token(Token = "0x6002947")]
			[Address(RVA = "0x1392D74", Offset = "0x1392D74", VA = "0x1392D74")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200069D")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_e_group_type : GetIndexOfElement<e_group_type>
		{
			[Token(Token = "0x6002948")]
			[Address(RVA = "0x13934F4", Offset = "0x13934F4", VA = "0x13934F4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x200069E")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_eMonsterAttackDirType : GetIndexOfElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002949")]
			[Address(RVA = "0x1393454", Offset = "0x1393454", VA = "0x1393454")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200069F")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_eMonsterAttackType : GetIndexOfElement<eMonsterAttackType>
		{
			[Token(Token = "0x600294A")]
			[Address(RVA = "0x13934A4", Offset = "0x13934A4", VA = "0x13934A4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20006A0")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_MoveTargetType : GetIndexOfElement<MoveTargetType>
		{
			[Token(Token = "0x600294B")]
			[Address(RVA = "0x1392DC4", Offset = "0x1392DC4", VA = "0x1392DC4")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20006A1")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_LayerMask : GetIndexOfElement<LayerMask>
		{
			[Token(Token = "0x600294C")]
			[Address(RVA = "0x1393134", Offset = "0x1393134", VA = "0x1393134")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20006A2")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_System_Boolean : InsertElementToList<bool>
		{
			[Token(Token = "0x600294D")]
			[Address(RVA = "0x1393634", Offset = "0x1393634", VA = "0x1393634")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20006A3")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_System_Single : InsertElementToList<float>
		{
			[Token(Token = "0x600294E")]
			[Address(RVA = "0x13936D4", Offset = "0x13936D4", VA = "0x13936D4")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_System_Single()
			{
			}
		}

		[Token(Token = "0x20006A4")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_System_Int32 : InsertElementToList<int>
		{
			[Token(Token = "0x600294F")]
			[Address(RVA = "0x1393684", Offset = "0x1393684", VA = "0x1393684")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_System_Int32()
			{
			}
		}

		[Token(Token = "0x20006A5")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector2 : InsertElementToList<Vector2>
		{
			[Token(Token = "0x6002950")]
			[Address(RVA = "0x1393B84", Offset = "0x1393B84", VA = "0x1393B84")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20006A6")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector3 : InsertElementToList<Vector3>
		{
			[Token(Token = "0x6002951")]
			[Address(RVA = "0x1393BD4", Offset = "0x1393BD4", VA = "0x1393BD4")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20006A7")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector4 : InsertElementToList<Vector4>
		{
			[Token(Token = "0x6002952")]
			[Address(RVA = "0x1393C24", Offset = "0x1393C24", VA = "0x1393C24")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20006A8")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Quaternion : InsertElementToList<Quaternion>
		{
			[Token(Token = "0x6002953")]
			[Address(RVA = "0x13939A4", Offset = "0x13939A4", VA = "0x13939A4")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20006A9")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Keyframe : InsertElementToList<Keyframe>
		{
			[Token(Token = "0x6002954")]
			[Address(RVA = "0x1393904", Offset = "0x1393904", VA = "0x1393904")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20006AA")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Bounds : InsertElementToList<Bounds>
		{
			[Token(Token = "0x6002955")]
			[Address(RVA = "0x1393724", Offset = "0x1393724", VA = "0x1393724")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20006AB")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Color : InsertElementToList<Color>
		{
			[Token(Token = "0x6002956")]
			[Address(RVA = "0x1393814", Offset = "0x1393814", VA = "0x1393814")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20006AC")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Rect : InsertElementToList<Rect>
		{
			[Token(Token = "0x6002957")]
			[Address(RVA = "0x1393AE4", Offset = "0x1393AE4", VA = "0x1393AE4")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20006AD")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint : InsertElementToList<ContactPoint>
		{
			[Token(Token = "0x6002958")]
			[Address(RVA = "0x1393864", Offset = "0x1393864", VA = "0x1393864")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20006AE")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint2D : InsertElementToList<ContactPoint2D>
		{
			[Token(Token = "0x6002959")]
			[Address(RVA = "0x13938B4", Offset = "0x13938B4", VA = "0x13938B4")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20006AF")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Collision : InsertElementToList<Collision>
		{
			[Token(Token = "0x600295A")]
			[Address(RVA = "0x1393774", Offset = "0x1393774", VA = "0x1393774")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20006B0")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Collision2D : InsertElementToList<Collision2D>
		{
			[Token(Token = "0x600295B")]
			[Address(RVA = "0x13937C4", Offset = "0x13937C4", VA = "0x13937C4")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20006B1")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit : InsertElementToList<RaycastHit>
		{
			[Token(Token = "0x600295C")]
			[Address(RVA = "0x1393A44", Offset = "0x1393A44", VA = "0x1393A44")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit2D : InsertElementToList<RaycastHit2D>
		{
			[Token(Token = "0x600295D")]
			[Address(RVA = "0x1393A94", Offset = "0x1393A94", VA = "0x1393A94")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20006B3")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Ray : InsertElementToList<Ray>
		{
			[Token(Token = "0x600295E")]
			[Address(RVA = "0x13939F4", Offset = "0x13939F4", VA = "0x13939F4")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20006B4")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Space : InsertElementToList<Space>
		{
			[Token(Token = "0x600295F")]
			[Address(RVA = "0x1393B34", Offset = "0x1393B34", VA = "0x1393B34")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20006B5")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_BossMainDone : InsertElementToList<BossMainDone>
		{
			[Token(Token = "0x6002960")]
			[Address(RVA = "0x1393544", Offset = "0x1393544", VA = "0x1393544")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20006B6")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_BossMainToDo : InsertElementToList<BossMainToDo>
		{
			[Token(Token = "0x6002961")]
			[Address(RVA = "0x1393594", Offset = "0x1393594", VA = "0x1393594")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20006B7")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_e_group_type : InsertElementToList<e_group_type>
		{
			[Token(Token = "0x6002962")]
			[Address(RVA = "0x1393D14", Offset = "0x1393D14", VA = "0x1393D14")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_e_group_type()
			{
			}
		}

		[Token(Token = "0x20006B8")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_eMonsterAttackDirType : InsertElementToList<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002963")]
			[Address(RVA = "0x1393C74", Offset = "0x1393C74", VA = "0x1393C74")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20006B9")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_eMonsterAttackType : InsertElementToList<eMonsterAttackType>
		{
			[Token(Token = "0x6002964")]
			[Address(RVA = "0x1393CC4", Offset = "0x1393CC4", VA = "0x1393CC4")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20006BA")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_MoveTargetType : InsertElementToList<MoveTargetType>
		{
			[Token(Token = "0x6002965")]
			[Address(RVA = "0x13935E4", Offset = "0x13935E4", VA = "0x13935E4")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20006BB")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_LayerMask : InsertElementToList<LayerMask>
		{
			[Token(Token = "0x6002966")]
			[Address(RVA = "0x1393954", Offset = "0x1393954", VA = "0x1393954")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20006BC")]
		private class NodeCanvas_Tasks_Actions_PickListElement_System_Boolean : PickListElement<bool>
		{
			[Token(Token = "0x6002967")]
			[Address(RVA = "0x1393E54", Offset = "0x1393E54", VA = "0x1393E54")]
			public NodeCanvas_Tasks_Actions_PickListElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20006BD")]
		private class NodeCanvas_Tasks_Actions_PickListElement_System_Single : PickListElement<float>
		{
			[Token(Token = "0x6002968")]
			[Address(RVA = "0x1393EF4", Offset = "0x1393EF4", VA = "0x1393EF4")]
			public NodeCanvas_Tasks_Actions_PickListElement_System_Single()
			{
			}
		}

		[Token(Token = "0x20006BE")]
		private class NodeCanvas_Tasks_Actions_PickListElement_System_Int32 : PickListElement<int>
		{
			[Token(Token = "0x6002969")]
			[Address(RVA = "0x1393EA4", Offset = "0x1393EA4", VA = "0x1393EA4")]
			public NodeCanvas_Tasks_Actions_PickListElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x20006BF")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector2 : PickListElement<Vector2>
		{
			[Token(Token = "0x600296A")]
			[Address(RVA = "0x13943A4", Offset = "0x13943A4", VA = "0x13943A4")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20006C0")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector3 : PickListElement<Vector3>
		{
			[Token(Token = "0x600296B")]
			[Address(RVA = "0x13943F4", Offset = "0x13943F4", VA = "0x13943F4")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20006C1")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector4 : PickListElement<Vector4>
		{
			[Token(Token = "0x600296C")]
			[Address(RVA = "0x1394444", Offset = "0x1394444", VA = "0x1394444")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20006C2")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Quaternion : PickListElement<Quaternion>
		{
			[Token(Token = "0x600296D")]
			[Address(RVA = "0x13941C4", Offset = "0x13941C4", VA = "0x13941C4")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20006C3")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Keyframe : PickListElement<Keyframe>
		{
			[Token(Token = "0x600296E")]
			[Address(RVA = "0x1394124", Offset = "0x1394124", VA = "0x1394124")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20006C4")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Bounds : PickListElement<Bounds>
		{
			[Token(Token = "0x600296F")]
			[Address(RVA = "0x1393F44", Offset = "0x1393F44", VA = "0x1393F44")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20006C5")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Color : PickListElement<Color>
		{
			[Token(Token = "0x6002970")]
			[Address(RVA = "0x1394034", Offset = "0x1394034", VA = "0x1394034")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20006C6")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Rect : PickListElement<Rect>
		{
			[Token(Token = "0x6002971")]
			[Address(RVA = "0x1394304", Offset = "0x1394304", VA = "0x1394304")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20006C7")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint : PickListElement<ContactPoint>
		{
			[Token(Token = "0x6002972")]
			[Address(RVA = "0x1394084", Offset = "0x1394084", VA = "0x1394084")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20006C8")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint2D : PickListElement<ContactPoint2D>
		{
			[Token(Token = "0x6002973")]
			[Address(RVA = "0x13940D4", Offset = "0x13940D4", VA = "0x13940D4")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20006C9")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Collision : PickListElement<Collision>
		{
			[Token(Token = "0x6002974")]
			[Address(RVA = "0x1393F94", Offset = "0x1393F94", VA = "0x1393F94")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20006CA")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Collision2D : PickListElement<Collision2D>
		{
			[Token(Token = "0x6002975")]
			[Address(RVA = "0x1393FE4", Offset = "0x1393FE4", VA = "0x1393FE4")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20006CB")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit : PickListElement<RaycastHit>
		{
			[Token(Token = "0x6002976")]
			[Address(RVA = "0x1394264", Offset = "0x1394264", VA = "0x1394264")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20006CC")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit2D : PickListElement<RaycastHit2D>
		{
			[Token(Token = "0x6002977")]
			[Address(RVA = "0x13942B4", Offset = "0x13942B4", VA = "0x13942B4")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20006CD")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Ray : PickListElement<Ray>
		{
			[Token(Token = "0x6002978")]
			[Address(RVA = "0x1394214", Offset = "0x1394214", VA = "0x1394214")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20006CE")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Space : PickListElement<Space>
		{
			[Token(Token = "0x6002979")]
			[Address(RVA = "0x1394354", Offset = "0x1394354", VA = "0x1394354")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20006CF")]
		private class NodeCanvas_Tasks_Actions_PickListElement_BossMainDone : PickListElement<BossMainDone>
		{
			[Token(Token = "0x600297A")]
			[Address(RVA = "0x1393D64", Offset = "0x1393D64", VA = "0x1393D64")]
			public NodeCanvas_Tasks_Actions_PickListElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20006D0")]
		private class NodeCanvas_Tasks_Actions_PickListElement_BossMainToDo : PickListElement<BossMainToDo>
		{
			[Token(Token = "0x600297B")]
			[Address(RVA = "0x1393DB4", Offset = "0x1393DB4", VA = "0x1393DB4")]
			public NodeCanvas_Tasks_Actions_PickListElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20006D1")]
		private class NodeCanvas_Tasks_Actions_PickListElement_e_group_type : PickListElement<e_group_type>
		{
			[Token(Token = "0x600297C")]
			[Address(RVA = "0x1394534", Offset = "0x1394534", VA = "0x1394534")]
			public NodeCanvas_Tasks_Actions_PickListElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x20006D2")]
		private class NodeCanvas_Tasks_Actions_PickListElement_eMonsterAttackDirType : PickListElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x600297D")]
			[Address(RVA = "0x1394494", Offset = "0x1394494", VA = "0x1394494")]
			public NodeCanvas_Tasks_Actions_PickListElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20006D3")]
		private class NodeCanvas_Tasks_Actions_PickListElement_eMonsterAttackType : PickListElement<eMonsterAttackType>
		{
			[Token(Token = "0x600297E")]
			[Address(RVA = "0x13944E4", Offset = "0x13944E4", VA = "0x13944E4")]
			public NodeCanvas_Tasks_Actions_PickListElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20006D4")]
		private class NodeCanvas_Tasks_Actions_PickListElement_MoveTargetType : PickListElement<MoveTargetType>
		{
			[Token(Token = "0x600297F")]
			[Address(RVA = "0x1393E04", Offset = "0x1393E04", VA = "0x1393E04")]
			public NodeCanvas_Tasks_Actions_PickListElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20006D5")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_LayerMask : PickListElement<LayerMask>
		{
			[Token(Token = "0x6002980")]
			[Address(RVA = "0x1394174", Offset = "0x1394174", VA = "0x1394174")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20006D6")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_System_Boolean : PickRandomListElement<bool>
		{
			[Token(Token = "0x6002981")]
			[Address(RVA = "0x1394674", Offset = "0x1394674", VA = "0x1394674")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20006D7")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_System_Single : PickRandomListElement<float>
		{
			[Token(Token = "0x6002982")]
			[Address(RVA = "0x1394714", Offset = "0x1394714", VA = "0x1394714")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_System_Single()
			{
			}
		}

		[Token(Token = "0x20006D8")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_System_Int32 : PickRandomListElement<int>
		{
			[Token(Token = "0x6002983")]
			[Address(RVA = "0x13946C4", Offset = "0x13946C4", VA = "0x13946C4")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x20006D9")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector2 : PickRandomListElement<Vector2>
		{
			[Token(Token = "0x6002984")]
			[Address(RVA = "0x1394BC4", Offset = "0x1394BC4", VA = "0x1394BC4")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20006DA")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector3 : PickRandomListElement<Vector3>
		{
			[Token(Token = "0x6002985")]
			[Address(RVA = "0x1394C14", Offset = "0x1394C14", VA = "0x1394C14")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20006DB")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector4 : PickRandomListElement<Vector4>
		{
			[Token(Token = "0x6002986")]
			[Address(RVA = "0x1394C64", Offset = "0x1394C64", VA = "0x1394C64")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20006DC")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Quaternion : PickRandomListElement<Quaternion>
		{
			[Token(Token = "0x6002987")]
			[Address(RVA = "0x13949E4", Offset = "0x13949E4", VA = "0x13949E4")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20006DD")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Keyframe : PickRandomListElement<Keyframe>
		{
			[Token(Token = "0x6002988")]
			[Address(RVA = "0x1394944", Offset = "0x1394944", VA = "0x1394944")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20006DE")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Bounds : PickRandomListElement<Bounds>
		{
			[Token(Token = "0x6002989")]
			[Address(RVA = "0x1394764", Offset = "0x1394764", VA = "0x1394764")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20006DF")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Color : PickRandomListElement<Color>
		{
			[Token(Token = "0x600298A")]
			[Address(RVA = "0x1394854", Offset = "0x1394854", VA = "0x1394854")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20006E0")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Rect : PickRandomListElement<Rect>
		{
			[Token(Token = "0x600298B")]
			[Address(RVA = "0x1394B24", Offset = "0x1394B24", VA = "0x1394B24")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20006E1")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint : PickRandomListElement<ContactPoint>
		{
			[Token(Token = "0x600298C")]
			[Address(RVA = "0x13948A4", Offset = "0x13948A4", VA = "0x13948A4")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20006E2")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint2D : PickRandomListElement<ContactPoint2D>
		{
			[Token(Token = "0x600298D")]
			[Address(RVA = "0x13948F4", Offset = "0x13948F4", VA = "0x13948F4")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20006E3")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Collision : PickRandomListElement<Collision>
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0x13947B4", Offset = "0x13947B4", VA = "0x13947B4")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20006E4")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Collision2D : PickRandomListElement<Collision2D>
		{
			[Token(Token = "0x600298F")]
			[Address(RVA = "0x1394804", Offset = "0x1394804", VA = "0x1394804")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20006E5")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit : PickRandomListElement<RaycastHit>
		{
			[Token(Token = "0x6002990")]
			[Address(RVA = "0x1394A84", Offset = "0x1394A84", VA = "0x1394A84")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20006E6")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit2D : PickRandomListElement<RaycastHit2D>
		{
			[Token(Token = "0x6002991")]
			[Address(RVA = "0x1394AD4", Offset = "0x1394AD4", VA = "0x1394AD4")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20006E7")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Ray : PickRandomListElement<Ray>
		{
			[Token(Token = "0x6002992")]
			[Address(RVA = "0x1394A34", Offset = "0x1394A34", VA = "0x1394A34")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20006E8")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Space : PickRandomListElement<Space>
		{
			[Token(Token = "0x6002993")]
			[Address(RVA = "0x1394B74", Offset = "0x1394B74", VA = "0x1394B74")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20006E9")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_BossMainDone : PickRandomListElement<BossMainDone>
		{
			[Token(Token = "0x6002994")]
			[Address(RVA = "0x1394584", Offset = "0x1394584", VA = "0x1394584")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20006EA")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_BossMainToDo : PickRandomListElement<BossMainToDo>
		{
			[Token(Token = "0x6002995")]
			[Address(RVA = "0x13945D4", Offset = "0x13945D4", VA = "0x13945D4")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20006EB")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_e_group_type : PickRandomListElement<e_group_type>
		{
			[Token(Token = "0x6002996")]
			[Address(RVA = "0x1394D54", Offset = "0x1394D54", VA = "0x1394D54")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x20006EC")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_eMonsterAttackDirType : PickRandomListElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002997")]
			[Address(RVA = "0x1394CB4", Offset = "0x1394CB4", VA = "0x1394CB4")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20006ED")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_eMonsterAttackType : PickRandomListElement<eMonsterAttackType>
		{
			[Token(Token = "0x6002998")]
			[Address(RVA = "0x1394D04", Offset = "0x1394D04", VA = "0x1394D04")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20006EE")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_MoveTargetType : PickRandomListElement<MoveTargetType>
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0x1394624", Offset = "0x1394624", VA = "0x1394624")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20006EF")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_LayerMask : PickRandomListElement<LayerMask>
		{
			[Token(Token = "0x600299A")]
			[Address(RVA = "0x1394994", Offset = "0x1394994", VA = "0x1394994")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20006F0")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Boolean : RemoveElementFromList<bool>
		{
			[Token(Token = "0x600299B")]
			[Address(RVA = "0x1394E94", Offset = "0x1394E94", VA = "0x1394E94")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20006F1")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Single : RemoveElementFromList<float>
		{
			[Token(Token = "0x600299C")]
			[Address(RVA = "0x1394F34", Offset = "0x1394F34", VA = "0x1394F34")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Single()
			{
			}
		}

		[Token(Token = "0x20006F2")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Int32 : RemoveElementFromList<int>
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0x1394EE4", Offset = "0x1394EE4", VA = "0x1394EE4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Int32()
			{
			}
		}

		[Token(Token = "0x20006F3")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector2 : RemoveElementFromList<Vector2>
		{
			[Token(Token = "0x600299E")]
			[Address(RVA = "0x13953E4", Offset = "0x13953E4", VA = "0x13953E4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20006F4")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector3 : RemoveElementFromList<Vector3>
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0x1395434", Offset = "0x1395434", VA = "0x1395434")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20006F5")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector4 : RemoveElementFromList<Vector4>
		{
			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x1395484", Offset = "0x1395484", VA = "0x1395484")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20006F6")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Quaternion : RemoveElementFromList<Quaternion>
		{
			[Token(Token = "0x60029A1")]
			[Address(RVA = "0x1395204", Offset = "0x1395204", VA = "0x1395204")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20006F7")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Keyframe : RemoveElementFromList<Keyframe>
		{
			[Token(Token = "0x60029A2")]
			[Address(RVA = "0x1395164", Offset = "0x1395164", VA = "0x1395164")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20006F8")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Bounds : RemoveElementFromList<Bounds>
		{
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0x1394F84", Offset = "0x1394F84", VA = "0x1394F84")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20006F9")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Color : RemoveElementFromList<Color>
		{
			[Token(Token = "0x60029A4")]
			[Address(RVA = "0x1395074", Offset = "0x1395074", VA = "0x1395074")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20006FA")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Rect : RemoveElementFromList<Rect>
		{
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x1395344", Offset = "0x1395344", VA = "0x1395344")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20006FB")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint : RemoveElementFromList<ContactPoint>
		{
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0x13950C4", Offset = "0x13950C4", VA = "0x13950C4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20006FC")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint2D : RemoveElementFromList<ContactPoint2D>
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x1395114", Offset = "0x1395114", VA = "0x1395114")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20006FD")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Collision : RemoveElementFromList<Collision>
		{
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0x1394FD4", Offset = "0x1394FD4", VA = "0x1394FD4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20006FE")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Collision2D : RemoveElementFromList<Collision2D>
		{
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x1395024", Offset = "0x1395024", VA = "0x1395024")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20006FF")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit : RemoveElementFromList<RaycastHit>
		{
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0x13952A4", Offset = "0x13952A4", VA = "0x13952A4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000700")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit2D : RemoveElementFromList<RaycastHit2D>
		{
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0x13952F4", Offset = "0x13952F4", VA = "0x13952F4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000701")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Ray : RemoveElementFromList<Ray>
		{
			[Token(Token = "0x60029AC")]
			[Address(RVA = "0x1395254", Offset = "0x1395254", VA = "0x1395254")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000702")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Space : RemoveElementFromList<Space>
		{
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0x1395394", Offset = "0x1395394", VA = "0x1395394")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000703")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_BossMainDone : RemoveElementFromList<BossMainDone>
		{
			[Token(Token = "0x60029AE")]
			[Address(RVA = "0x1394DA4", Offset = "0x1394DA4", VA = "0x1394DA4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000704")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_BossMainToDo : RemoveElementFromList<BossMainToDo>
		{
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x1394DF4", Offset = "0x1394DF4", VA = "0x1394DF4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000705")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_e_group_type : RemoveElementFromList<e_group_type>
		{
			[Token(Token = "0x60029B0")]
			[Address(RVA = "0x1395574", Offset = "0x1395574", VA = "0x1395574")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000706")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_eMonsterAttackDirType : RemoveElementFromList<eMonsterAttackDirType>
		{
			[Token(Token = "0x60029B1")]
			[Address(RVA = "0x13954D4", Offset = "0x13954D4", VA = "0x13954D4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000707")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_eMonsterAttackType : RemoveElementFromList<eMonsterAttackType>
		{
			[Token(Token = "0x60029B2")]
			[Address(RVA = "0x1395524", Offset = "0x1395524", VA = "0x1395524")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000708")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_MoveTargetType : RemoveElementFromList<MoveTargetType>
		{
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x1394E44", Offset = "0x1394E44", VA = "0x1394E44")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000709")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_LayerMask : RemoveElementFromList<LayerMask>
		{
			[Token(Token = "0x60029B4")]
			[Address(RVA = "0x13951B4", Offset = "0x13951B4", VA = "0x13951B4")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200070A")]
		private class NodeCanvas_Tasks_Actions_SendEvent_System_Boolean : SendEvent<bool>
		{
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0x1395ED4", Offset = "0x1395ED4", VA = "0x1395ED4")]
			public NodeCanvas_Tasks_Actions_SendEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200070B")]
		private class NodeCanvas_Tasks_Actions_SendEvent_System_Single : SendEvent<float>
		{
			[Token(Token = "0x60029B6")]
			[Address(RVA = "0x1395F74", Offset = "0x1395F74", VA = "0x1395F74")]
			public NodeCanvas_Tasks_Actions_SendEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x200070C")]
		private class NodeCanvas_Tasks_Actions_SendEvent_System_Int32 : SendEvent<int>
		{
			[Token(Token = "0x60029B7")]
			[Address(RVA = "0x1395F24", Offset = "0x1395F24", VA = "0x1395F24")]
			public NodeCanvas_Tasks_Actions_SendEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x200070D")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector2 : SendEvent<Vector2>
		{
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0x1396424", Offset = "0x1396424", VA = "0x1396424")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200070E")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector3 : SendEvent<Vector3>
		{
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x1396474", Offset = "0x1396474", VA = "0x1396474")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200070F")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector4 : SendEvent<Vector4>
		{
			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x13964C4", Offset = "0x13964C4", VA = "0x13964C4")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000710")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Quaternion : SendEvent<Quaternion>
		{
			[Token(Token = "0x60029BB")]
			[Address(RVA = "0x1396244", Offset = "0x1396244", VA = "0x1396244")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000711")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Keyframe : SendEvent<Keyframe>
		{
			[Token(Token = "0x60029BC")]
			[Address(RVA = "0x13961A4", Offset = "0x13961A4", VA = "0x13961A4")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000712")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Bounds : SendEvent<Bounds>
		{
			[Token(Token = "0x60029BD")]
			[Address(RVA = "0x1395FC4", Offset = "0x1395FC4", VA = "0x1395FC4")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000713")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Color : SendEvent<Color>
		{
			[Token(Token = "0x60029BE")]
			[Address(RVA = "0x13960B4", Offset = "0x13960B4", VA = "0x13960B4")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000714")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Rect : SendEvent<Rect>
		{
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0x1396384", Offset = "0x1396384", VA = "0x1396384")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000715")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint : SendEvent<ContactPoint>
		{
			[Token(Token = "0x60029C0")]
			[Address(RVA = "0x1396104", Offset = "0x1396104", VA = "0x1396104")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000716")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint2D : SendEvent<ContactPoint2D>
		{
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x1396154", Offset = "0x1396154", VA = "0x1396154")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000717")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Collision : SendEvent<Collision>
		{
			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x1396014", Offset = "0x1396014", VA = "0x1396014")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000718")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Collision2D : SendEvent<Collision2D>
		{
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x1396064", Offset = "0x1396064", VA = "0x1396064")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000719")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit : SendEvent<RaycastHit>
		{
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x13962E4", Offset = "0x13962E4", VA = "0x13962E4")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200071A")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit2D : SendEvent<RaycastHit2D>
		{
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x1396334", Offset = "0x1396334", VA = "0x1396334")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200071B")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Ray : SendEvent<Ray>
		{
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x1396294", Offset = "0x1396294", VA = "0x1396294")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200071C")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Space : SendEvent<Space>
		{
			[Token(Token = "0x60029C7")]
			[Address(RVA = "0x13963D4", Offset = "0x13963D4", VA = "0x13963D4")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200071D")]
		private class NodeCanvas_Tasks_Actions_SendEvent_BossMainDone : SendEvent<BossMainDone>
		{
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x1395DE4", Offset = "0x1395DE4", VA = "0x1395DE4")]
			public NodeCanvas_Tasks_Actions_SendEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200071E")]
		private class NodeCanvas_Tasks_Actions_SendEvent_BossMainToDo : SendEvent<BossMainToDo>
		{
			[Token(Token = "0x60029C9")]
			[Address(RVA = "0x1395E34", Offset = "0x1395E34", VA = "0x1395E34")]
			public NodeCanvas_Tasks_Actions_SendEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200071F")]
		private class NodeCanvas_Tasks_Actions_SendEvent_e_group_type : SendEvent<e_group_type>
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x13965B4", Offset = "0x13965B4", VA = "0x13965B4")]
			public NodeCanvas_Tasks_Actions_SendEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000720")]
		private class NodeCanvas_Tasks_Actions_SendEvent_eMonsterAttackDirType : SendEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x1396514", Offset = "0x1396514", VA = "0x1396514")]
			public NodeCanvas_Tasks_Actions_SendEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000721")]
		private class NodeCanvas_Tasks_Actions_SendEvent_eMonsterAttackType : SendEvent<eMonsterAttackType>
		{
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x1396564", Offset = "0x1396564", VA = "0x1396564")]
			public NodeCanvas_Tasks_Actions_SendEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000722")]
		private class NodeCanvas_Tasks_Actions_SendEvent_MoveTargetType : SendEvent<MoveTargetType>
		{
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x1395E84", Offset = "0x1395E84", VA = "0x1395E84")]
			public NodeCanvas_Tasks_Actions_SendEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000723")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_LayerMask : SendEvent<LayerMask>
		{
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x13961F4", Offset = "0x13961F4", VA = "0x13961F4")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000724")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_System_Boolean : SendEventToObjects<bool>
		{
			[Token(Token = "0x60029CF")]
			[Address(RVA = "0x13956B4", Offset = "0x13956B4", VA = "0x13956B4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000725")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_System_Single : SendEventToObjects<float>
		{
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x1395754", Offset = "0x1395754", VA = "0x1395754")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_System_Single()
			{
			}
		}

		[Token(Token = "0x2000726")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_System_Int32 : SendEventToObjects<int>
		{
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x1395704", Offset = "0x1395704", VA = "0x1395704")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000727")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector2 : SendEventToObjects<Vector2>
		{
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0x1395C04", Offset = "0x1395C04", VA = "0x1395C04")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000728")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector3 : SendEventToObjects<Vector3>
		{
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x1395C54", Offset = "0x1395C54", VA = "0x1395C54")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000729")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector4 : SendEventToObjects<Vector4>
		{
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x1395CA4", Offset = "0x1395CA4", VA = "0x1395CA4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200072A")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Quaternion : SendEventToObjects<Quaternion>
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0x1395A24", Offset = "0x1395A24", VA = "0x1395A24")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200072B")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Keyframe : SendEventToObjects<Keyframe>
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x1395984", Offset = "0x1395984", VA = "0x1395984")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200072C")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Bounds : SendEventToObjects<Bounds>
		{
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x13957A4", Offset = "0x13957A4", VA = "0x13957A4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200072D")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Color : SendEventToObjects<Color>
		{
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0x1395894", Offset = "0x1395894", VA = "0x1395894")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200072E")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Rect : SendEventToObjects<Rect>
		{
			[Token(Token = "0x60029D9")]
			[Address(RVA = "0x1395B64", Offset = "0x1395B64", VA = "0x1395B64")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200072F")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint : SendEventToObjects<ContactPoint>
		{
			[Token(Token = "0x60029DA")]
			[Address(RVA = "0x13958E4", Offset = "0x13958E4", VA = "0x13958E4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000730")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint2D : SendEventToObjects<ContactPoint2D>
		{
			[Token(Token = "0x60029DB")]
			[Address(RVA = "0x1395934", Offset = "0x1395934", VA = "0x1395934")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000731")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Collision : SendEventToObjects<Collision>
		{
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0x13957F4", Offset = "0x13957F4", VA = "0x13957F4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000732")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Collision2D : SendEventToObjects<Collision2D>
		{
			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x1395844", Offset = "0x1395844", VA = "0x1395844")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000733")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit : SendEventToObjects<RaycastHit>
		{
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0x1395AC4", Offset = "0x1395AC4", VA = "0x1395AC4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000734")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit2D : SendEventToObjects<RaycastHit2D>
		{
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0x1395B14", Offset = "0x1395B14", VA = "0x1395B14")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000735")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Ray : SendEventToObjects<Ray>
		{
			[Token(Token = "0x60029E0")]
			[Address(RVA = "0x1395A74", Offset = "0x1395A74", VA = "0x1395A74")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000736")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Space : SendEventToObjects<Space>
		{
			[Token(Token = "0x60029E1")]
			[Address(RVA = "0x1395BB4", Offset = "0x1395BB4", VA = "0x1395BB4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000737")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_BossMainDone : SendEventToObjects<BossMainDone>
		{
			[Token(Token = "0x60029E2")]
			[Address(RVA = "0x13955C4", Offset = "0x13955C4", VA = "0x13955C4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000738")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_BossMainToDo : SendEventToObjects<BossMainToDo>
		{
			[Token(Token = "0x60029E3")]
			[Address(RVA = "0x1395614", Offset = "0x1395614", VA = "0x1395614")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000739")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_e_group_type : SendEventToObjects<e_group_type>
		{
			[Token(Token = "0x60029E4")]
			[Address(RVA = "0x1395D94", Offset = "0x1395D94", VA = "0x1395D94")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_e_group_type()
			{
			}
		}

		[Token(Token = "0x200073A")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_eMonsterAttackDirType : SendEventToObjects<eMonsterAttackDirType>
		{
			[Token(Token = "0x60029E5")]
			[Address(RVA = "0x1395CF4", Offset = "0x1395CF4", VA = "0x1395CF4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200073B")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_eMonsterAttackType : SendEventToObjects<eMonsterAttackType>
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x1395D44", Offset = "0x1395D44", VA = "0x1395D44")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200073C")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_MoveTargetType : SendEventToObjects<MoveTargetType>
		{
			[Token(Token = "0x60029E7")]
			[Address(RVA = "0x1395664", Offset = "0x1395664", VA = "0x1395664")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200073D")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_LayerMask : SendEventToObjects<LayerMask>
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x13959D4", Offset = "0x13959D4", VA = "0x13959D4")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200073E")]
		private class NodeCanvas_Tasks_Actions_SendMessage_System_Boolean : SendMessage<bool>
		{
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x13966F4", Offset = "0x13966F4", VA = "0x13966F4")]
			public NodeCanvas_Tasks_Actions_SendMessage_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200073F")]
		private class NodeCanvas_Tasks_Actions_SendMessage_System_Single : SendMessage<float>
		{
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0x1396794", Offset = "0x1396794", VA = "0x1396794")]
			public NodeCanvas_Tasks_Actions_SendMessage_System_Single()
			{
			}
		}

		[Token(Token = "0x2000740")]
		private class NodeCanvas_Tasks_Actions_SendMessage_System_Int32 : SendMessage<int>
		{
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x1396744", Offset = "0x1396744", VA = "0x1396744")]
			public NodeCanvas_Tasks_Actions_SendMessage_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000741")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector2 : SendMessage<Vector2>
		{
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x1396C44", Offset = "0x1396C44", VA = "0x1396C44")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000742")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector3 : SendMessage<Vector3>
		{
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x1396C94", Offset = "0x1396C94", VA = "0x1396C94")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000743")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector4 : SendMessage<Vector4>
		{
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x1396CE4", Offset = "0x1396CE4", VA = "0x1396CE4")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000744")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Quaternion : SendMessage<Quaternion>
		{
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0x1396A64", Offset = "0x1396A64", VA = "0x1396A64")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000745")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Keyframe : SendMessage<Keyframe>
		{
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0x13969C4", Offset = "0x13969C4", VA = "0x13969C4")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000746")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Bounds : SendMessage<Bounds>
		{
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0x13967E4", Offset = "0x13967E4", VA = "0x13967E4")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000747")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Color : SendMessage<Color>
		{
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0x13968D4", Offset = "0x13968D4", VA = "0x13968D4")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000748")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Rect : SendMessage<Rect>
		{
			[Token(Token = "0x60029F3")]
			[Address(RVA = "0x1396BA4", Offset = "0x1396BA4", VA = "0x1396BA4")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000749")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint : SendMessage<ContactPoint>
		{
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0x1396924", Offset = "0x1396924", VA = "0x1396924")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200074A")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint2D : SendMessage<ContactPoint2D>
		{
			[Token(Token = "0x60029F5")]
			[Address(RVA = "0x1396974", Offset = "0x1396974", VA = "0x1396974")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200074B")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Collision : SendMessage<Collision>
		{
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0x1396834", Offset = "0x1396834", VA = "0x1396834")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200074C")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Collision2D : SendMessage<Collision2D>
		{
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0x1396884", Offset = "0x1396884", VA = "0x1396884")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200074D")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit : SendMessage<RaycastHit>
		{
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0x1396B04", Offset = "0x1396B04", VA = "0x1396B04")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200074E")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit2D : SendMessage<RaycastHit2D>
		{
			[Token(Token = "0x60029F9")]
			[Address(RVA = "0x1396B54", Offset = "0x1396B54", VA = "0x1396B54")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200074F")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Ray : SendMessage<Ray>
		{
			[Token(Token = "0x60029FA")]
			[Address(RVA = "0x1396AB4", Offset = "0x1396AB4", VA = "0x1396AB4")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000750")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Space : SendMessage<Space>
		{
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0x1396BF4", Offset = "0x1396BF4", VA = "0x1396BF4")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000751")]
		private class NodeCanvas_Tasks_Actions_SendMessage_BossMainDone : SendMessage<BossMainDone>
		{
			[Token(Token = "0x60029FC")]
			[Address(RVA = "0x1396604", Offset = "0x1396604", VA = "0x1396604")]
			public NodeCanvas_Tasks_Actions_SendMessage_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000752")]
		private class NodeCanvas_Tasks_Actions_SendMessage_BossMainToDo : SendMessage<BossMainToDo>
		{
			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x1396654", Offset = "0x1396654", VA = "0x1396654")]
			public NodeCanvas_Tasks_Actions_SendMessage_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000753")]
		private class NodeCanvas_Tasks_Actions_SendMessage_e_group_type : SendMessage<e_group_type>
		{
			[Token(Token = "0x60029FE")]
			[Address(RVA = "0x1396DD4", Offset = "0x1396DD4", VA = "0x1396DD4")]
			public NodeCanvas_Tasks_Actions_SendMessage_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000754")]
		private class NodeCanvas_Tasks_Actions_SendMessage_eMonsterAttackDirType : SendMessage<eMonsterAttackDirType>
		{
			[Token(Token = "0x60029FF")]
			[Address(RVA = "0x1396D34", Offset = "0x1396D34", VA = "0x1396D34")]
			public NodeCanvas_Tasks_Actions_SendMessage_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000755")]
		private class NodeCanvas_Tasks_Actions_SendMessage_eMonsterAttackType : SendMessage<eMonsterAttackType>
		{
			[Token(Token = "0x6002A00")]
			[Address(RVA = "0x1396D84", Offset = "0x1396D84", VA = "0x1396D84")]
			public NodeCanvas_Tasks_Actions_SendMessage_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000756")]
		private class NodeCanvas_Tasks_Actions_SendMessage_MoveTargetType : SendMessage<MoveTargetType>
		{
			[Token(Token = "0x6002A01")]
			[Address(RVA = "0x13966A4", Offset = "0x13966A4", VA = "0x13966A4")]
			public NodeCanvas_Tasks_Actions_SendMessage_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000757")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_LayerMask : SendMessage<LayerMask>
		{
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0x1396A14", Offset = "0x1396A14", VA = "0x1396A14")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000758")]
		private class NodeCanvas_Tasks_Actions_SetListElement_System_Boolean : SetListElement<bool>
		{
			[Token(Token = "0x6002A03")]
			[Address(RVA = "0x1396F14", Offset = "0x1396F14", VA = "0x1396F14")]
			public NodeCanvas_Tasks_Actions_SetListElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000759")]
		private class NodeCanvas_Tasks_Actions_SetListElement_System_Single : SetListElement<float>
		{
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0x1396FB4", Offset = "0x1396FB4", VA = "0x1396FB4")]
			public NodeCanvas_Tasks_Actions_SetListElement_System_Single()
			{
			}
		}

		[Token(Token = "0x200075A")]
		private class NodeCanvas_Tasks_Actions_SetListElement_System_Int32 : SetListElement<int>
		{
			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x1396F64", Offset = "0x1396F64", VA = "0x1396F64")]
			public NodeCanvas_Tasks_Actions_SetListElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x200075B")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector2 : SetListElement<Vector2>
		{
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x1397464", Offset = "0x1397464", VA = "0x1397464")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200075C")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector3 : SetListElement<Vector3>
		{
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x13974B4", Offset = "0x13974B4", VA = "0x13974B4")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200075D")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector4 : SetListElement<Vector4>
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x1397504", Offset = "0x1397504", VA = "0x1397504")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200075E")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Quaternion : SetListElement<Quaternion>
		{
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x1397284", Offset = "0x1397284", VA = "0x1397284")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200075F")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Keyframe : SetListElement<Keyframe>
		{
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x13971E4", Offset = "0x13971E4", VA = "0x13971E4")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000760")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Bounds : SetListElement<Bounds>
		{
			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0x1397004", Offset = "0x1397004", VA = "0x1397004")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000761")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Color : SetListElement<Color>
		{
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0x13970F4", Offset = "0x13970F4", VA = "0x13970F4")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000762")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Rect : SetListElement<Rect>
		{
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x13973C4", Offset = "0x13973C4", VA = "0x13973C4")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000763")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint : SetListElement<ContactPoint>
		{
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0x1397144", Offset = "0x1397144", VA = "0x1397144")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000764")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint2D : SetListElement<ContactPoint2D>
		{
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x1397194", Offset = "0x1397194", VA = "0x1397194")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000765")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Collision : SetListElement<Collision>
		{
			[Token(Token = "0x6002A10")]
			[Address(RVA = "0x1397054", Offset = "0x1397054", VA = "0x1397054")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000766")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Collision2D : SetListElement<Collision2D>
		{
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0x13970A4", Offset = "0x13970A4", VA = "0x13970A4")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000767")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit : SetListElement<RaycastHit>
		{
			[Token(Token = "0x6002A12")]
			[Address(RVA = "0x1397324", Offset = "0x1397324", VA = "0x1397324")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000768")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit2D : SetListElement<RaycastHit2D>
		{
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0x1397374", Offset = "0x1397374", VA = "0x1397374")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000769")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Ray : SetListElement<Ray>
		{
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x13972D4", Offset = "0x13972D4", VA = "0x13972D4")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200076A")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Space : SetListElement<Space>
		{
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0x1397414", Offset = "0x1397414", VA = "0x1397414")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200076B")]
		private class NodeCanvas_Tasks_Actions_SetListElement_BossMainDone : SetListElement<BossMainDone>
		{
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x1396E24", Offset = "0x1396E24", VA = "0x1396E24")]
			public NodeCanvas_Tasks_Actions_SetListElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200076C")]
		private class NodeCanvas_Tasks_Actions_SetListElement_BossMainToDo : SetListElement<BossMainToDo>
		{
			[Token(Token = "0x6002A17")]
			[Address(RVA = "0x1396E74", Offset = "0x1396E74", VA = "0x1396E74")]
			public NodeCanvas_Tasks_Actions_SetListElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200076D")]
		private class NodeCanvas_Tasks_Actions_SetListElement_e_group_type : SetListElement<e_group_type>
		{
			[Token(Token = "0x6002A18")]
			[Address(RVA = "0x13975F4", Offset = "0x13975F4", VA = "0x13975F4")]
			public NodeCanvas_Tasks_Actions_SetListElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x200076E")]
		private class NodeCanvas_Tasks_Actions_SetListElement_eMonsterAttackDirType : SetListElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002A19")]
			[Address(RVA = "0x1397554", Offset = "0x1397554", VA = "0x1397554")]
			public NodeCanvas_Tasks_Actions_SetListElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200076F")]
		private class NodeCanvas_Tasks_Actions_SetListElement_eMonsterAttackType : SetListElement<eMonsterAttackType>
		{
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0x13975A4", Offset = "0x13975A4", VA = "0x13975A4")]
			public NodeCanvas_Tasks_Actions_SetListElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000770")]
		private class NodeCanvas_Tasks_Actions_SetListElement_MoveTargetType : SetListElement<MoveTargetType>
		{
			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0x1396EC4", Offset = "0x1396EC4", VA = "0x1396EC4")]
			public NodeCanvas_Tasks_Actions_SetListElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000771")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_LayerMask : SetListElement<LayerMask>
		{
			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0x1397234", Offset = "0x1397234", VA = "0x1397234")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000772")]
		private class NodeCanvas_Tasks_Actions_SetVariable_System_Boolean : SetVariable<bool>
		{
			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0x1397734", Offset = "0x1397734", VA = "0x1397734")]
			public NodeCanvas_Tasks_Actions_SetVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000773")]
		private class NodeCanvas_Tasks_Actions_SetVariable_System_Single : SetVariable<float>
		{
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0x13977D4", Offset = "0x13977D4", VA = "0x13977D4")]
			public NodeCanvas_Tasks_Actions_SetVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000774")]
		private class NodeCanvas_Tasks_Actions_SetVariable_System_Int32 : SetVariable<int>
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x1397784", Offset = "0x1397784", VA = "0x1397784")]
			public NodeCanvas_Tasks_Actions_SetVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000775")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector2 : SetVariable<Vector2>
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x1397C84", Offset = "0x1397C84", VA = "0x1397C84")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000776")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector3 : SetVariable<Vector3>
		{
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x1397CD4", Offset = "0x1397CD4", VA = "0x1397CD4")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000777")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector4 : SetVariable<Vector4>
		{
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x1397D24", Offset = "0x1397D24", VA = "0x1397D24")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000778")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Quaternion : SetVariable<Quaternion>
		{
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0x1397AA4", Offset = "0x1397AA4", VA = "0x1397AA4")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000779")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Keyframe : SetVariable<Keyframe>
		{
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0x1397A04", Offset = "0x1397A04", VA = "0x1397A04")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200077A")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Bounds : SetVariable<Bounds>
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x1397824", Offset = "0x1397824", VA = "0x1397824")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200077B")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Color : SetVariable<Color>
		{
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x1397914", Offset = "0x1397914", VA = "0x1397914")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200077C")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Rect : SetVariable<Rect>
		{
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0x1397BE4", Offset = "0x1397BE4", VA = "0x1397BE4")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200077D")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint : SetVariable<ContactPoint>
		{
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x1397964", Offset = "0x1397964", VA = "0x1397964")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200077E")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint2D : SetVariable<ContactPoint2D>
		{
			[Token(Token = "0x6002A29")]
			[Address(RVA = "0x13979B4", Offset = "0x13979B4", VA = "0x13979B4")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200077F")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Collision : SetVariable<Collision>
		{
			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0x1397874", Offset = "0x1397874", VA = "0x1397874")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000780")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Collision2D : SetVariable<Collision2D>
		{
			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0x13978C4", Offset = "0x13978C4", VA = "0x13978C4")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000781")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit : SetVariable<RaycastHit>
		{
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0x1397B44", Offset = "0x1397B44", VA = "0x1397B44")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000782")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit2D : SetVariable<RaycastHit2D>
		{
			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0x1397B94", Offset = "0x1397B94", VA = "0x1397B94")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000783")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Ray : SetVariable<Ray>
		{
			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x1397AF4", Offset = "0x1397AF4", VA = "0x1397AF4")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000784")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Space : SetVariable<Space>
		{
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0x1397C34", Offset = "0x1397C34", VA = "0x1397C34")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000785")]
		private class NodeCanvas_Tasks_Actions_SetVariable_BossMainDone : SetVariable<BossMainDone>
		{
			[Token(Token = "0x6002A30")]
			[Address(RVA = "0x1397644", Offset = "0x1397644", VA = "0x1397644")]
			public NodeCanvas_Tasks_Actions_SetVariable_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000786")]
		private class NodeCanvas_Tasks_Actions_SetVariable_BossMainToDo : SetVariable<BossMainToDo>
		{
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0x1397694", Offset = "0x1397694", VA = "0x1397694")]
			public NodeCanvas_Tasks_Actions_SetVariable_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000787")]
		private class NodeCanvas_Tasks_Actions_SetVariable_e_group_type : SetVariable<e_group_type>
		{
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0x1397E14", Offset = "0x1397E14", VA = "0x1397E14")]
			public NodeCanvas_Tasks_Actions_SetVariable_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000788")]
		private class NodeCanvas_Tasks_Actions_SetVariable_eMonsterAttackDirType : SetVariable<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0x1397D74", Offset = "0x1397D74", VA = "0x1397D74")]
			public NodeCanvas_Tasks_Actions_SetVariable_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000789")]
		private class NodeCanvas_Tasks_Actions_SetVariable_eMonsterAttackType : SetVariable<eMonsterAttackType>
		{
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0x1397DC4", Offset = "0x1397DC4", VA = "0x1397DC4")]
			public NodeCanvas_Tasks_Actions_SetVariable_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200078A")]
		private class NodeCanvas_Tasks_Actions_SetVariable_MoveTargetType : SetVariable<MoveTargetType>
		{
			[Token(Token = "0x6002A35")]
			[Address(RVA = "0x13976E4", Offset = "0x13976E4", VA = "0x13976E4")]
			public NodeCanvas_Tasks_Actions_SetVariable_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200078B")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_LayerMask : SetVariable<LayerMask>
		{
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0x1397A54", Offset = "0x1397A54", VA = "0x1397A54")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200078C")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Boolean : CheckCSharpEvent<bool>
		{
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0x1398774", Offset = "0x1398774", VA = "0x1398774")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200078D")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Single : CheckCSharpEvent<float>
		{
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0x1398814", Offset = "0x1398814", VA = "0x1398814")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x200078E")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Int32 : CheckCSharpEvent<int>
		{
			[Token(Token = "0x6002A39")]
			[Address(RVA = "0x13987C4", Offset = "0x13987C4", VA = "0x13987C4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x200078F")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector2 : CheckCSharpEvent<Vector2>
		{
			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0x1398CC4", Offset = "0x1398CC4", VA = "0x1398CC4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000790")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector3 : CheckCSharpEvent<Vector3>
		{
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0x1398D14", Offset = "0x1398D14", VA = "0x1398D14")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000791")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector4 : CheckCSharpEvent<Vector4>
		{
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0x1398D64", Offset = "0x1398D64", VA = "0x1398D64")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000792")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Quaternion : CheckCSharpEvent<Quaternion>
		{
			[Token(Token = "0x6002A3D")]
			[Address(RVA = "0x1398AE4", Offset = "0x1398AE4", VA = "0x1398AE4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000793")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Keyframe : CheckCSharpEvent<Keyframe>
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0x1398A44", Offset = "0x1398A44", VA = "0x1398A44")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000794")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Bounds : CheckCSharpEvent<Bounds>
		{
			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0x1398864", Offset = "0x1398864", VA = "0x1398864")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000795")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Color : CheckCSharpEvent<Color>
		{
			[Token(Token = "0x6002A40")]
			[Address(RVA = "0x1398954", Offset = "0x1398954", VA = "0x1398954")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000796")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Rect : CheckCSharpEvent<Rect>
		{
			[Token(Token = "0x6002A41")]
			[Address(RVA = "0x1398C24", Offset = "0x1398C24", VA = "0x1398C24")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000797")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint : CheckCSharpEvent<ContactPoint>
		{
			[Token(Token = "0x6002A42")]
			[Address(RVA = "0x13989A4", Offset = "0x13989A4", VA = "0x13989A4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000798")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint2D : CheckCSharpEvent<ContactPoint2D>
		{
			[Token(Token = "0x6002A43")]
			[Address(RVA = "0x13989F4", Offset = "0x13989F4", VA = "0x13989F4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000799")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Collision : CheckCSharpEvent<Collision>
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0x13988B4", Offset = "0x13988B4", VA = "0x13988B4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200079A")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Collision2D : CheckCSharpEvent<Collision2D>
		{
			[Token(Token = "0x6002A45")]
			[Address(RVA = "0x1398904", Offset = "0x1398904", VA = "0x1398904")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200079B")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit : CheckCSharpEvent<RaycastHit>
		{
			[Token(Token = "0x6002A46")]
			[Address(RVA = "0x1398B84", Offset = "0x1398B84", VA = "0x1398B84")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200079C")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit2D : CheckCSharpEvent<RaycastHit2D>
		{
			[Token(Token = "0x6002A47")]
			[Address(RVA = "0x1398BD4", Offset = "0x1398BD4", VA = "0x1398BD4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200079D")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Ray : CheckCSharpEvent<Ray>
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x1398B34", Offset = "0x1398B34", VA = "0x1398B34")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200079E")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Space : CheckCSharpEvent<Space>
		{
			[Token(Token = "0x6002A49")]
			[Address(RVA = "0x1398C74", Offset = "0x1398C74", VA = "0x1398C74")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200079F")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_BossMainDone : CheckCSharpEvent<BossMainDone>
		{
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0x1398684", Offset = "0x1398684", VA = "0x1398684")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20007A0")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_BossMainToDo : CheckCSharpEvent<BossMainToDo>
		{
			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0x13986D4", Offset = "0x13986D4", VA = "0x13986D4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20007A1")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_e_group_type : CheckCSharpEvent<e_group_type>
		{
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0x1398E54", Offset = "0x1398E54", VA = "0x1398E54")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x20007A2")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_eMonsterAttackDirType : CheckCSharpEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0x1398DB4", Offset = "0x1398DB4", VA = "0x1398DB4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20007A3")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_eMonsterAttackType : CheckCSharpEvent<eMonsterAttackType>
		{
			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0x1398E04", Offset = "0x1398E04", VA = "0x1398E04")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20007A4")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_MoveTargetType : CheckCSharpEvent<MoveTargetType>
		{
			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0x1398724", Offset = "0x1398724", VA = "0x1398724")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20007A5")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_LayerMask : CheckCSharpEvent<LayerMask>
		{
			[Token(Token = "0x6002A50")]
			[Address(RVA = "0x1398A94", Offset = "0x1398A94", VA = "0x1398A94")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20007A6")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Boolean : CheckCSharpEventValue<bool>
		{
			[Token(Token = "0x6002A51")]
			[Address(RVA = "0x1397F54", Offset = "0x1397F54", VA = "0x1397F54")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20007A7")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Single : CheckCSharpEventValue<float>
		{
			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x1397FF4", Offset = "0x1397FF4", VA = "0x1397FF4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Single()
			{
			}
		}

		[Token(Token = "0x20007A8")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Int32 : CheckCSharpEventValue<int>
		{
			[Token(Token = "0x6002A53")]
			[Address(RVA = "0x1397FA4", Offset = "0x1397FA4", VA = "0x1397FA4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x20007A9")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector2 : CheckCSharpEventValue<Vector2>
		{
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x13984A4", Offset = "0x13984A4", VA = "0x13984A4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20007AA")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector3 : CheckCSharpEventValue<Vector3>
		{
			[Token(Token = "0x6002A55")]
			[Address(RVA = "0x13984F4", Offset = "0x13984F4", VA = "0x13984F4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20007AB")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector4 : CheckCSharpEventValue<Vector4>
		{
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x1398544", Offset = "0x1398544", VA = "0x1398544")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20007AC")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Quaternion : CheckCSharpEventValue<Quaternion>
		{
			[Token(Token = "0x6002A57")]
			[Address(RVA = "0x13982C4", Offset = "0x13982C4", VA = "0x13982C4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20007AD")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Keyframe : CheckCSharpEventValue<Keyframe>
		{
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x1398224", Offset = "0x1398224", VA = "0x1398224")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20007AE")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Bounds : CheckCSharpEventValue<Bounds>
		{
			[Token(Token = "0x6002A59")]
			[Address(RVA = "0x1398044", Offset = "0x1398044", VA = "0x1398044")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20007AF")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Color : CheckCSharpEventValue<Color>
		{
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x1398134", Offset = "0x1398134", VA = "0x1398134")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20007B0")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Rect : CheckCSharpEventValue<Rect>
		{
			[Token(Token = "0x6002A5B")]
			[Address(RVA = "0x1398404", Offset = "0x1398404", VA = "0x1398404")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20007B1")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint : CheckCSharpEventValue<ContactPoint>
		{
			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0x1398184", Offset = "0x1398184", VA = "0x1398184")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20007B2")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint2D : CheckCSharpEventValue<ContactPoint2D>
		{
			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0x13981D4", Offset = "0x13981D4", VA = "0x13981D4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20007B3")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Collision : CheckCSharpEventValue<Collision>
		{
			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x1398094", Offset = "0x1398094", VA = "0x1398094")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20007B4")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Collision2D : CheckCSharpEventValue<Collision2D>
		{
			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0x13980E4", Offset = "0x13980E4", VA = "0x13980E4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20007B5")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit : CheckCSharpEventValue<RaycastHit>
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x1398364", Offset = "0x1398364", VA = "0x1398364")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20007B6")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit2D : CheckCSharpEventValue<RaycastHit2D>
		{
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0x13983B4", Offset = "0x13983B4", VA = "0x13983B4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20007B7")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Ray : CheckCSharpEventValue<Ray>
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x1398314", Offset = "0x1398314", VA = "0x1398314")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20007B8")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Space : CheckCSharpEventValue<Space>
		{
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0x1398454", Offset = "0x1398454", VA = "0x1398454")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20007B9")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_BossMainDone : CheckCSharpEventValue<BossMainDone>
		{
			[Token(Token = "0x6002A64")]
			[Address(RVA = "0x1397E64", Offset = "0x1397E64", VA = "0x1397E64")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20007BA")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_BossMainToDo : CheckCSharpEventValue<BossMainToDo>
		{
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x1397EB4", Offset = "0x1397EB4", VA = "0x1397EB4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20007BB")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_e_group_type : CheckCSharpEventValue<e_group_type>
		{
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x1398634", Offset = "0x1398634", VA = "0x1398634")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_e_group_type()
			{
			}
		}

		[Token(Token = "0x20007BC")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_eMonsterAttackDirType : CheckCSharpEventValue<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002A67")]
			[Address(RVA = "0x1398594", Offset = "0x1398594", VA = "0x1398594")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20007BD")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_eMonsterAttackType : CheckCSharpEventValue<eMonsterAttackType>
		{
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x13985E4", Offset = "0x13985E4", VA = "0x13985E4")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20007BE")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_MoveTargetType : CheckCSharpEventValue<MoveTargetType>
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0x1397F04", Offset = "0x1397F04", VA = "0x1397F04")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20007BF")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_LayerMask : CheckCSharpEventValue<LayerMask>
		{
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x1398274", Offset = "0x1398274", VA = "0x1398274")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20007C0")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_System_Boolean : CheckEvent<bool>
		{
			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x13997B4", Offset = "0x13997B4", VA = "0x13997B4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20007C1")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_System_Single : CheckEvent<float>
		{
			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x1399854", Offset = "0x1399854", VA = "0x1399854")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x20007C2")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_System_Int32 : CheckEvent<int>
		{
			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0x1399804", Offset = "0x1399804", VA = "0x1399804")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x20007C3")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector2 : CheckEvent<Vector2>
		{
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x1399D04", Offset = "0x1399D04", VA = "0x1399D04")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20007C4")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector3 : CheckEvent<Vector3>
		{
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0x1399D54", Offset = "0x1399D54", VA = "0x1399D54")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20007C5")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector4 : CheckEvent<Vector4>
		{
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x1399DA4", Offset = "0x1399DA4", VA = "0x1399DA4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20007C6")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Quaternion : CheckEvent<Quaternion>
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x1399B24", Offset = "0x1399B24", VA = "0x1399B24")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20007C7")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Keyframe : CheckEvent<Keyframe>
		{
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x1399A84", Offset = "0x1399A84", VA = "0x1399A84")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20007C8")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Bounds : CheckEvent<Bounds>
		{
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x13998A4", Offset = "0x13998A4", VA = "0x13998A4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20007C9")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Color : CheckEvent<Color>
		{
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x1399994", Offset = "0x1399994", VA = "0x1399994")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20007CA")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Rect : CheckEvent<Rect>
		{
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x1399C64", Offset = "0x1399C64", VA = "0x1399C64")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20007CB")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint : CheckEvent<ContactPoint>
		{
			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x13999E4", Offset = "0x13999E4", VA = "0x13999E4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20007CC")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint2D : CheckEvent<ContactPoint2D>
		{
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0x1399A34", Offset = "0x1399A34", VA = "0x1399A34")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20007CD")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Collision : CheckEvent<Collision>
		{
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x13998F4", Offset = "0x13998F4", VA = "0x13998F4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20007CE")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Collision2D : CheckEvent<Collision2D>
		{
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x1399944", Offset = "0x1399944", VA = "0x1399944")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20007CF")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit : CheckEvent<RaycastHit>
		{
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0x1399BC4", Offset = "0x1399BC4", VA = "0x1399BC4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20007D0")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit2D : CheckEvent<RaycastHit2D>
		{
			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0x1399C14", Offset = "0x1399C14", VA = "0x1399C14")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20007D1")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Ray : CheckEvent<Ray>
		{
			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0x1399B74", Offset = "0x1399B74", VA = "0x1399B74")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20007D2")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Space : CheckEvent<Space>
		{
			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0x1399CB4", Offset = "0x1399CB4", VA = "0x1399CB4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20007D3")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_BossMainDone : CheckEvent<BossMainDone>
		{
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0x13996C4", Offset = "0x13996C4", VA = "0x13996C4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20007D4")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_BossMainToDo : CheckEvent<BossMainToDo>
		{
			[Token(Token = "0x6002A7F")]
			[Address(RVA = "0x1399714", Offset = "0x1399714", VA = "0x1399714")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20007D5")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_e_group_type : CheckEvent<e_group_type>
		{
			[Token(Token = "0x6002A80")]
			[Address(RVA = "0x1399E94", Offset = "0x1399E94", VA = "0x1399E94")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x20007D6")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_eMonsterAttackDirType : CheckEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0x1399DF4", Offset = "0x1399DF4", VA = "0x1399DF4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20007D7")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_eMonsterAttackType : CheckEvent<eMonsterAttackType>
		{
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0x1399E44", Offset = "0x1399E44", VA = "0x1399E44")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20007D8")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_MoveTargetType : CheckEvent<MoveTargetType>
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x1399764", Offset = "0x1399764", VA = "0x1399764")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20007D9")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_LayerMask : CheckEvent<LayerMask>
		{
			[Token(Token = "0x6002A84")]
			[Address(RVA = "0x1399AD4", Offset = "0x1399AD4", VA = "0x1399AD4")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20007DA")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_System_Boolean : CheckEventValue<bool>
		{
			[Token(Token = "0x6002A85")]
			[Address(RVA = "0x1398F94", Offset = "0x1398F94", VA = "0x1398F94")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20007DB")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_System_Single : CheckEventValue<float>
		{
			[Token(Token = "0x6002A86")]
			[Address(RVA = "0x1399034", Offset = "0x1399034", VA = "0x1399034")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_System_Single()
			{
			}
		}

		[Token(Token = "0x20007DC")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_System_Int32 : CheckEventValue<int>
		{
			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x1398FE4", Offset = "0x1398FE4", VA = "0x1398FE4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x20007DD")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector2 : CheckEventValue<Vector2>
		{
			[Token(Token = "0x6002A88")]
			[Address(RVA = "0x13994E4", Offset = "0x13994E4", VA = "0x13994E4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20007DE")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector3 : CheckEventValue<Vector3>
		{
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x1399534", Offset = "0x1399534", VA = "0x1399534")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20007DF")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector4 : CheckEventValue<Vector4>
		{
			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0x1399584", Offset = "0x1399584", VA = "0x1399584")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20007E0")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Quaternion : CheckEventValue<Quaternion>
		{
			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0x1399304", Offset = "0x1399304", VA = "0x1399304")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20007E1")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Keyframe : CheckEventValue<Keyframe>
		{
			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0x1399264", Offset = "0x1399264", VA = "0x1399264")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20007E2")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Bounds : CheckEventValue<Bounds>
		{
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0x1399084", Offset = "0x1399084", VA = "0x1399084")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20007E3")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Color : CheckEventValue<Color>
		{
			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0x1399174", Offset = "0x1399174", VA = "0x1399174")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20007E4")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Rect : CheckEventValue<Rect>
		{
			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0x1399444", Offset = "0x1399444", VA = "0x1399444")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20007E5")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint : CheckEventValue<ContactPoint>
		{
			[Token(Token = "0x6002A90")]
			[Address(RVA = "0x13991C4", Offset = "0x13991C4", VA = "0x13991C4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20007E6")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint2D : CheckEventValue<ContactPoint2D>
		{
			[Token(Token = "0x6002A91")]
			[Address(RVA = "0x1399214", Offset = "0x1399214", VA = "0x1399214")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20007E7")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Collision : CheckEventValue<Collision>
		{
			[Token(Token = "0x6002A92")]
			[Address(RVA = "0x13990D4", Offset = "0x13990D4", VA = "0x13990D4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20007E8")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Collision2D : CheckEventValue<Collision2D>
		{
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x1399124", Offset = "0x1399124", VA = "0x1399124")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20007E9")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit : CheckEventValue<RaycastHit>
		{
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x13993A4", Offset = "0x13993A4", VA = "0x13993A4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20007EA")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit2D : CheckEventValue<RaycastHit2D>
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x13993F4", Offset = "0x13993F4", VA = "0x13993F4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20007EB")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Ray : CheckEventValue<Ray>
		{
			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x1399354", Offset = "0x1399354", VA = "0x1399354")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20007EC")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Space : CheckEventValue<Space>
		{
			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x1399494", Offset = "0x1399494", VA = "0x1399494")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20007ED")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_BossMainDone : CheckEventValue<BossMainDone>
		{
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0x1398EA4", Offset = "0x1398EA4", VA = "0x1398EA4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20007EE")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_BossMainToDo : CheckEventValue<BossMainToDo>
		{
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0x1398EF4", Offset = "0x1398EF4", VA = "0x1398EF4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20007EF")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_e_group_type : CheckEventValue<e_group_type>
		{
			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x1399674", Offset = "0x1399674", VA = "0x1399674")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_e_group_type()
			{
			}
		}

		[Token(Token = "0x20007F0")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_eMonsterAttackDirType : CheckEventValue<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x13995D4", Offset = "0x13995D4", VA = "0x13995D4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20007F1")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_eMonsterAttackType : CheckEventValue<eMonsterAttackType>
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x1399624", Offset = "0x1399624", VA = "0x1399624")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20007F2")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_MoveTargetType : CheckEventValue<MoveTargetType>
		{
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0x1398F44", Offset = "0x1398F44", VA = "0x1398F44")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20007F3")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_LayerMask : CheckEventValue<LayerMask>
		{
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0x13992B4", Offset = "0x13992B4", VA = "0x13992B4")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20007F4")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Boolean : CheckStaticCSharpEvent<bool>
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0x1399FD4", Offset = "0x1399FD4", VA = "0x1399FD4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20007F5")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Single : CheckStaticCSharpEvent<float>
		{
			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x139A074", Offset = "0x139A074", VA = "0x139A074")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x20007F6")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Int32 : CheckStaticCSharpEvent<int>
		{
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0x139A024", Offset = "0x139A024", VA = "0x139A024")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x20007F7")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector2 : CheckStaticCSharpEvent<Vector2>
		{
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0x139A524", Offset = "0x139A524", VA = "0x139A524")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20007F8")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector3 : CheckStaticCSharpEvent<Vector3>
		{
			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0x139A574", Offset = "0x139A574", VA = "0x139A574")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20007F9")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector4 : CheckStaticCSharpEvent<Vector4>
		{
			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0x139A5C4", Offset = "0x139A5C4", VA = "0x139A5C4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20007FA")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Quaternion : CheckStaticCSharpEvent<Quaternion>
		{
			[Token(Token = "0x6002AA5")]
			[Address(RVA = "0x139A344", Offset = "0x139A344", VA = "0x139A344")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20007FB")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Keyframe : CheckStaticCSharpEvent<Keyframe>
		{
			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0x139A2A4", Offset = "0x139A2A4", VA = "0x139A2A4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20007FC")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Bounds : CheckStaticCSharpEvent<Bounds>
		{
			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0x139A0C4", Offset = "0x139A0C4", VA = "0x139A0C4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20007FD")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Color : CheckStaticCSharpEvent<Color>
		{
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0x139A1B4", Offset = "0x139A1B4", VA = "0x139A1B4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20007FE")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Rect : CheckStaticCSharpEvent<Rect>
		{
			[Token(Token = "0x6002AA9")]
			[Address(RVA = "0x139A484", Offset = "0x139A484", VA = "0x139A484")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20007FF")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_ContactPoint : CheckStaticCSharpEvent<ContactPoint>
		{
			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0x139A204", Offset = "0x139A204", VA = "0x139A204")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000800")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_ContactPoint2D : CheckStaticCSharpEvent<ContactPoint2D>
		{
			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x139A254", Offset = "0x139A254", VA = "0x139A254")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000801")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Collision : CheckStaticCSharpEvent<Collision>
		{
			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x139A114", Offset = "0x139A114", VA = "0x139A114")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000802")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Collision2D : CheckStaticCSharpEvent<Collision2D>
		{
			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x139A164", Offset = "0x139A164", VA = "0x139A164")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000803")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_RaycastHit : CheckStaticCSharpEvent<RaycastHit>
		{
			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0x139A3E4", Offset = "0x139A3E4", VA = "0x139A3E4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000804")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_RaycastHit2D : CheckStaticCSharpEvent<RaycastHit2D>
		{
			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0x139A434", Offset = "0x139A434", VA = "0x139A434")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000805")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Ray : CheckStaticCSharpEvent<Ray>
		{
			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0x139A394", Offset = "0x139A394", VA = "0x139A394")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000806")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Space : CheckStaticCSharpEvent<Space>
		{
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0x139A4D4", Offset = "0x139A4D4", VA = "0x139A4D4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000807")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_BossMainDone : CheckStaticCSharpEvent<BossMainDone>
		{
			[Token(Token = "0x6002AB2")]
			[Address(RVA = "0x1399EE4", Offset = "0x1399EE4", VA = "0x1399EE4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000808")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_BossMainToDo : CheckStaticCSharpEvent<BossMainToDo>
		{
			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x1399F34", Offset = "0x1399F34", VA = "0x1399F34")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000809")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_e_group_type : CheckStaticCSharpEvent<e_group_type>
		{
			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0x139A6B4", Offset = "0x139A6B4", VA = "0x139A6B4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x200080A")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_eMonsterAttackDirType : CheckStaticCSharpEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x139A614", Offset = "0x139A614", VA = "0x139A614")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200080B")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_eMonsterAttackType : CheckStaticCSharpEvent<eMonsterAttackType>
		{
			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0x139A664", Offset = "0x139A664", VA = "0x139A664")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200080C")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_MoveTargetType : CheckStaticCSharpEvent<MoveTargetType>
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x1399F84", Offset = "0x1399F84", VA = "0x1399F84")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200080D")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_LayerMask : CheckStaticCSharpEvent<LayerMask>
		{
			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x139A2F4", Offset = "0x139A2F4", VA = "0x139A2F4")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200080E")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Boolean : CheckUnityEvent<bool>
		{
			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0x139B014", Offset = "0x139B014", VA = "0x139B014")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200080F")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Single : CheckUnityEvent<float>
		{
			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0x139B0B4", Offset = "0x139B0B4", VA = "0x139B0B4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x2000810")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Int32 : CheckUnityEvent<int>
		{
			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0x139B064", Offset = "0x139B064", VA = "0x139B064")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000811")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector2 : CheckUnityEvent<Vector2>
		{
			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0x139B564", Offset = "0x139B564", VA = "0x139B564")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000812")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector3 : CheckUnityEvent<Vector3>
		{
			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x139B5B4", Offset = "0x139B5B4", VA = "0x139B5B4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000813")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector4 : CheckUnityEvent<Vector4>
		{
			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x139B604", Offset = "0x139B604", VA = "0x139B604")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000814")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Quaternion : CheckUnityEvent<Quaternion>
		{
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0x139B384", Offset = "0x139B384", VA = "0x139B384")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000815")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Keyframe : CheckUnityEvent<Keyframe>
		{
			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0x139B2E4", Offset = "0x139B2E4", VA = "0x139B2E4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000816")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Bounds : CheckUnityEvent<Bounds>
		{
			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0x139B104", Offset = "0x139B104", VA = "0x139B104")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000817")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Color : CheckUnityEvent<Color>
		{
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x139B1F4", Offset = "0x139B1F4", VA = "0x139B1F4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000818")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Rect : CheckUnityEvent<Rect>
		{
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x139B4C4", Offset = "0x139B4C4", VA = "0x139B4C4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000819")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint : CheckUnityEvent<ContactPoint>
		{
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x139B244", Offset = "0x139B244", VA = "0x139B244")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200081A")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint2D : CheckUnityEvent<ContactPoint2D>
		{
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x139B294", Offset = "0x139B294", VA = "0x139B294")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200081B")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Collision : CheckUnityEvent<Collision>
		{
			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x139B154", Offset = "0x139B154", VA = "0x139B154")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200081C")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Collision2D : CheckUnityEvent<Collision2D>
		{
			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x139B1A4", Offset = "0x139B1A4", VA = "0x139B1A4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200081D")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit : CheckUnityEvent<RaycastHit>
		{
			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x139B424", Offset = "0x139B424", VA = "0x139B424")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200081E")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit2D : CheckUnityEvent<RaycastHit2D>
		{
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x139B474", Offset = "0x139B474", VA = "0x139B474")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200081F")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Ray : CheckUnityEvent<Ray>
		{
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x139B3D4", Offset = "0x139B3D4", VA = "0x139B3D4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000820")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Space : CheckUnityEvent<Space>
		{
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x139B514", Offset = "0x139B514", VA = "0x139B514")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000821")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_BossMainDone : CheckUnityEvent<BossMainDone>
		{
			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0x139AF24", Offset = "0x139AF24", VA = "0x139AF24")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000822")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_BossMainToDo : CheckUnityEvent<BossMainToDo>
		{
			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0x139AF74", Offset = "0x139AF74", VA = "0x139AF74")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000823")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_e_group_type : CheckUnityEvent<e_group_type>
		{
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0x139B6F4", Offset = "0x139B6F4", VA = "0x139B6F4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000824")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_eMonsterAttackDirType : CheckUnityEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0x139B654", Offset = "0x139B654", VA = "0x139B654")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000825")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_eMonsterAttackType : CheckUnityEvent<eMonsterAttackType>
		{
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0x139B6A4", Offset = "0x139B6A4", VA = "0x139B6A4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000826")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_MoveTargetType : CheckUnityEvent<MoveTargetType>
		{
			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0x139AFC4", Offset = "0x139AFC4", VA = "0x139AFC4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000827")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_LayerMask : CheckUnityEvent<LayerMask>
		{
			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0x139B334", Offset = "0x139B334", VA = "0x139B334")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000828")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Boolean : CheckUnityEventValue<bool>
		{
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0x139A7F4", Offset = "0x139A7F4", VA = "0x139A7F4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000829")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Single : CheckUnityEventValue<float>
		{
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0x139A894", Offset = "0x139A894", VA = "0x139A894")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Single()
			{
			}
		}

		[Token(Token = "0x200082A")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Int32 : CheckUnityEventValue<int>
		{
			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0x139A844", Offset = "0x139A844", VA = "0x139A844")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x200082B")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector2 : CheckUnityEventValue<Vector2>
		{
			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0x139AD44", Offset = "0x139AD44", VA = "0x139AD44")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200082C")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector3 : CheckUnityEventValue<Vector3>
		{
			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0x139AD94", Offset = "0x139AD94", VA = "0x139AD94")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200082D")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector4 : CheckUnityEventValue<Vector4>
		{
			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0x139ADE4", Offset = "0x139ADE4", VA = "0x139ADE4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200082E")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Quaternion : CheckUnityEventValue<Quaternion>
		{
			[Token(Token = "0x6002AD9")]
			[Address(RVA = "0x139AB64", Offset = "0x139AB64", VA = "0x139AB64")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200082F")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Keyframe : CheckUnityEventValue<Keyframe>
		{
			[Token(Token = "0x6002ADA")]
			[Address(RVA = "0x139AAC4", Offset = "0x139AAC4", VA = "0x139AAC4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000830")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Bounds : CheckUnityEventValue<Bounds>
		{
			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0x139A8E4", Offset = "0x139A8E4", VA = "0x139A8E4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000831")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Color : CheckUnityEventValue<Color>
		{
			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0x139A9D4", Offset = "0x139A9D4", VA = "0x139A9D4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000832")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Rect : CheckUnityEventValue<Rect>
		{
			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0x139ACA4", Offset = "0x139ACA4", VA = "0x139ACA4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000833")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint : CheckUnityEventValue<ContactPoint>
		{
			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0x139AA24", Offset = "0x139AA24", VA = "0x139AA24")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000834")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint2D : CheckUnityEventValue<ContactPoint2D>
		{
			[Token(Token = "0x6002ADF")]
			[Address(RVA = "0x139AA74", Offset = "0x139AA74", VA = "0x139AA74")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000835")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Collision : CheckUnityEventValue<Collision>
		{
			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0x139A934", Offset = "0x139A934", VA = "0x139A934")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000836")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Collision2D : CheckUnityEventValue<Collision2D>
		{
			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0x139A984", Offset = "0x139A984", VA = "0x139A984")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000837")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit : CheckUnityEventValue<RaycastHit>
		{
			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0x139AC04", Offset = "0x139AC04", VA = "0x139AC04")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000838")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit2D : CheckUnityEventValue<RaycastHit2D>
		{
			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0x139AC54", Offset = "0x139AC54", VA = "0x139AC54")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000839")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Ray : CheckUnityEventValue<Ray>
		{
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0x139ABB4", Offset = "0x139ABB4", VA = "0x139ABB4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200083A")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Space : CheckUnityEventValue<Space>
		{
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x139ACF4", Offset = "0x139ACF4", VA = "0x139ACF4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200083B")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_BossMainDone : CheckUnityEventValue<BossMainDone>
		{
			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0x139A704", Offset = "0x139A704", VA = "0x139A704")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200083C")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_BossMainToDo : CheckUnityEventValue<BossMainToDo>
		{
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x139A754", Offset = "0x139A754", VA = "0x139A754")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200083D")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_e_group_type : CheckUnityEventValue<e_group_type>
		{
			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0x139AED4", Offset = "0x139AED4", VA = "0x139AED4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_e_group_type()
			{
			}
		}

		[Token(Token = "0x200083E")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_eMonsterAttackDirType : CheckUnityEventValue<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x139AE34", Offset = "0x139AE34", VA = "0x139AE34")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200083F")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_eMonsterAttackType : CheckUnityEventValue<eMonsterAttackType>
		{
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x139AE84", Offset = "0x139AE84", VA = "0x139AE84")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000840")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_MoveTargetType : CheckUnityEventValue<MoveTargetType>
		{
			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0x139A7A4", Offset = "0x139A7A4", VA = "0x139A7A4")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000841")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_LayerMask : CheckUnityEventValue<LayerMask>
		{
			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0x139AB14", Offset = "0x139AB14", VA = "0x139AB14")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000842")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_System_Boolean : CheckVariable<bool>
		{
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x139B834", Offset = "0x139B834", VA = "0x139B834")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000843")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_System_Single : CheckVariable<float>
		{
			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x139B8D4", Offset = "0x139B8D4", VA = "0x139B8D4")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000844")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_System_Int32 : CheckVariable<int>
		{
			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x139B884", Offset = "0x139B884", VA = "0x139B884")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000845")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector2 : CheckVariable<Vector2>
		{
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x139BD84", Offset = "0x139BD84", VA = "0x139BD84")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000846")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector3 : CheckVariable<Vector3>
		{
			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0x139BDD4", Offset = "0x139BDD4", VA = "0x139BDD4")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000847")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector4 : CheckVariable<Vector4>
		{
			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0x139BE24", Offset = "0x139BE24", VA = "0x139BE24")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000848")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Quaternion : CheckVariable<Quaternion>
		{
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x139BBA4", Offset = "0x139BBA4", VA = "0x139BBA4")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000849")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Keyframe : CheckVariable<Keyframe>
		{
			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0x139BB04", Offset = "0x139BB04", VA = "0x139BB04")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200084A")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Bounds : CheckVariable<Bounds>
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x139B924", Offset = "0x139B924", VA = "0x139B924")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200084B")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Color : CheckVariable<Color>
		{
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x139BA14", Offset = "0x139BA14", VA = "0x139BA14")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200084C")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Rect : CheckVariable<Rect>
		{
			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0x139BCE4", Offset = "0x139BCE4", VA = "0x139BCE4")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200084D")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint : CheckVariable<ContactPoint>
		{
			[Token(Token = "0x6002AF8")]
			[Address(RVA = "0x139BA64", Offset = "0x139BA64", VA = "0x139BA64")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200084E")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint2D : CheckVariable<ContactPoint2D>
		{
			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0x139BAB4", Offset = "0x139BAB4", VA = "0x139BAB4")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200084F")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Collision : CheckVariable<Collision>
		{
			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0x139B974", Offset = "0x139B974", VA = "0x139B974")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000850")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Collision2D : CheckVariable<Collision2D>
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0x139B9C4", Offset = "0x139B9C4", VA = "0x139B9C4")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000851")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit : CheckVariable<RaycastHit>
		{
			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0x139BC44", Offset = "0x139BC44", VA = "0x139BC44")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000852")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit2D : CheckVariable<RaycastHit2D>
		{
			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0x139BC94", Offset = "0x139BC94", VA = "0x139BC94")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000853")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Ray : CheckVariable<Ray>
		{
			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0x139BBF4", Offset = "0x139BBF4", VA = "0x139BBF4")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000854")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Space : CheckVariable<Space>
		{
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x139BD34", Offset = "0x139BD34", VA = "0x139BD34")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000855")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_BossMainDone : CheckVariable<BossMainDone>
		{
			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x139B744", Offset = "0x139B744", VA = "0x139B744")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000856")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_BossMainToDo : CheckVariable<BossMainToDo>
		{
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x139B794", Offset = "0x139B794", VA = "0x139B794")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000857")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_e_group_type : CheckVariable<e_group_type>
		{
			[Token(Token = "0x6002B02")]
			[Address(RVA = "0x139BF14", Offset = "0x139BF14", VA = "0x139BF14")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000858")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_eMonsterAttackDirType : CheckVariable<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002B03")]
			[Address(RVA = "0x139BE74", Offset = "0x139BE74", VA = "0x139BE74")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000859")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_eMonsterAttackType : CheckVariable<eMonsterAttackType>
		{
			[Token(Token = "0x6002B04")]
			[Address(RVA = "0x139BEC4", Offset = "0x139BEC4", VA = "0x139BEC4")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200085A")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_MoveTargetType : CheckVariable<MoveTargetType>
		{
			[Token(Token = "0x6002B05")]
			[Address(RVA = "0x139B7E4", Offset = "0x139B7E4", VA = "0x139B7E4")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200085B")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_LayerMask : CheckVariable<LayerMask>
		{
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x139BB54", Offset = "0x139BB54", VA = "0x139BB54")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200085C")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_System_Boolean : ListContainsElement<bool>
		{
			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x139C054", Offset = "0x139C054", VA = "0x139C054")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200085D")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_System_Single : ListContainsElement<float>
		{
			[Token(Token = "0x6002B08")]
			[Address(RVA = "0x139C0F4", Offset = "0x139C0F4", VA = "0x139C0F4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_System_Single()
			{
			}
		}

		[Token(Token = "0x200085E")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_System_Int32 : ListContainsElement<int>
		{
			[Token(Token = "0x6002B09")]
			[Address(RVA = "0x139C0A4", Offset = "0x139C0A4", VA = "0x139C0A4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x200085F")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector2 : ListContainsElement<Vector2>
		{
			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0x139C5A4", Offset = "0x139C5A4", VA = "0x139C5A4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000860")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector3 : ListContainsElement<Vector3>
		{
			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x139C5F4", Offset = "0x139C5F4", VA = "0x139C5F4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000861")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector4 : ListContainsElement<Vector4>
		{
			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0x139C644", Offset = "0x139C644", VA = "0x139C644")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000862")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Quaternion : ListContainsElement<Quaternion>
		{
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0x139C3C4", Offset = "0x139C3C4", VA = "0x139C3C4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000863")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Keyframe : ListContainsElement<Keyframe>
		{
			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0x139C324", Offset = "0x139C324", VA = "0x139C324")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000864")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Bounds : ListContainsElement<Bounds>
		{
			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0x139C144", Offset = "0x139C144", VA = "0x139C144")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000865")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Color : ListContainsElement<Color>
		{
			[Token(Token = "0x6002B10")]
			[Address(RVA = "0x139C234", Offset = "0x139C234", VA = "0x139C234")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000866")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Rect : ListContainsElement<Rect>
		{
			[Token(Token = "0x6002B11")]
			[Address(RVA = "0x139C504", Offset = "0x139C504", VA = "0x139C504")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000867")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint : ListContainsElement<ContactPoint>
		{
			[Token(Token = "0x6002B12")]
			[Address(RVA = "0x139C284", Offset = "0x139C284", VA = "0x139C284")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000868")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint2D : ListContainsElement<ContactPoint2D>
		{
			[Token(Token = "0x6002B13")]
			[Address(RVA = "0x139C2D4", Offset = "0x139C2D4", VA = "0x139C2D4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000869")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Collision : ListContainsElement<Collision>
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0x139C194", Offset = "0x139C194", VA = "0x139C194")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200086A")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Collision2D : ListContainsElement<Collision2D>
		{
			[Token(Token = "0x6002B15")]
			[Address(RVA = "0x139C1E4", Offset = "0x139C1E4", VA = "0x139C1E4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200086B")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit : ListContainsElement<RaycastHit>
		{
			[Token(Token = "0x6002B16")]
			[Address(RVA = "0x139C464", Offset = "0x139C464", VA = "0x139C464")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200086C")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit2D : ListContainsElement<RaycastHit2D>
		{
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0x139C4B4", Offset = "0x139C4B4", VA = "0x139C4B4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200086D")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Ray : ListContainsElement<Ray>
		{
			[Token(Token = "0x6002B18")]
			[Address(RVA = "0x139C414", Offset = "0x139C414", VA = "0x139C414")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200086E")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Space : ListContainsElement<Space>
		{
			[Token(Token = "0x6002B19")]
			[Address(RVA = "0x139C554", Offset = "0x139C554", VA = "0x139C554")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200086F")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_BossMainDone : ListContainsElement<BossMainDone>
		{
			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0x139BF64", Offset = "0x139BF64", VA = "0x139BF64")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000870")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_BossMainToDo : ListContainsElement<BossMainToDo>
		{
			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0x139BFB4", Offset = "0x139BFB4", VA = "0x139BFB4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000871")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_e_group_type : ListContainsElement<e_group_type>
		{
			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0x139C734", Offset = "0x139C734", VA = "0x139C734")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000872")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_eMonsterAttackDirType : ListContainsElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0x139C694", Offset = "0x139C694", VA = "0x139C694")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000873")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_eMonsterAttackType : ListContainsElement<eMonsterAttackType>
		{
			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0x139C6E4", Offset = "0x139C6E4", VA = "0x139C6E4")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000874")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_MoveTargetType : ListContainsElement<MoveTargetType>
		{
			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0x139C004", Offset = "0x139C004", VA = "0x139C004")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000875")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_LayerMask : ListContainsElement<LayerMask>
		{
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0x139C374", Offset = "0x139C374", VA = "0x139C374")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000876")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_System_Boolean : TryGetValue<bool>
		{
			[Token(Token = "0x6002B21")]
			[Address(RVA = "0x139C874", Offset = "0x139C874", VA = "0x139C874")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000877")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_System_Single : TryGetValue<float>
		{
			[Token(Token = "0x6002B22")]
			[Address(RVA = "0x139C914", Offset = "0x139C914", VA = "0x139C914")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_System_Single()
			{
			}
		}

		[Token(Token = "0x2000878")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_System_Int32 : TryGetValue<int>
		{
			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x139C8C4", Offset = "0x139C8C4", VA = "0x139C8C4")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000879")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector2 : TryGetValue<Vector2>
		{
			[Token(Token = "0x6002B24")]
			[Address(RVA = "0x139CDC4", Offset = "0x139CDC4", VA = "0x139CDC4")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200087A")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector3 : TryGetValue<Vector3>
		{
			[Token(Token = "0x6002B25")]
			[Address(RVA = "0x139CE14", Offset = "0x139CE14", VA = "0x139CE14")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200087B")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector4 : TryGetValue<Vector4>
		{
			[Token(Token = "0x6002B26")]
			[Address(RVA = "0x139CE64", Offset = "0x139CE64", VA = "0x139CE64")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200087C")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Quaternion : TryGetValue<Quaternion>
		{
			[Token(Token = "0x6002B27")]
			[Address(RVA = "0x139CBE4", Offset = "0x139CBE4", VA = "0x139CBE4")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200087D")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Keyframe : TryGetValue<Keyframe>
		{
			[Token(Token = "0x6002B28")]
			[Address(RVA = "0x139CB44", Offset = "0x139CB44", VA = "0x139CB44")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200087E")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Bounds : TryGetValue<Bounds>
		{
			[Token(Token = "0x6002B29")]
			[Address(RVA = "0x139C964", Offset = "0x139C964", VA = "0x139C964")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200087F")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Color : TryGetValue<Color>
		{
			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0x139CA54", Offset = "0x139CA54", VA = "0x139CA54")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000880")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Rect : TryGetValue<Rect>
		{
			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0x139CD24", Offset = "0x139CD24", VA = "0x139CD24")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000881")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint : TryGetValue<ContactPoint>
		{
			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0x139CAA4", Offset = "0x139CAA4", VA = "0x139CAA4")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000882")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint2D : TryGetValue<ContactPoint2D>
		{
			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0x139CAF4", Offset = "0x139CAF4", VA = "0x139CAF4")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000883")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Collision : TryGetValue<Collision>
		{
			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0x139C9B4", Offset = "0x139C9B4", VA = "0x139C9B4")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000884")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Collision2D : TryGetValue<Collision2D>
		{
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0x139CA04", Offset = "0x139CA04", VA = "0x139CA04")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000885")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit : TryGetValue<RaycastHit>
		{
			[Token(Token = "0x6002B30")]
			[Address(RVA = "0x139CC84", Offset = "0x139CC84", VA = "0x139CC84")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000886")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit2D : TryGetValue<RaycastHit2D>
		{
			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x139CCD4", Offset = "0x139CCD4", VA = "0x139CCD4")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000887")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Ray : TryGetValue<Ray>
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0x139CC34", Offset = "0x139CC34", VA = "0x139CC34")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000888")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Space : TryGetValue<Space>
		{
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x139CD74", Offset = "0x139CD74", VA = "0x139CD74")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000889")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_BossMainDone : TryGetValue<BossMainDone>
		{
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0x139C784", Offset = "0x139C784", VA = "0x139C784")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200088A")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_BossMainToDo : TryGetValue<BossMainToDo>
		{
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x139C7D4", Offset = "0x139C7D4", VA = "0x139C7D4")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200088B")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_e_group_type : TryGetValue<e_group_type>
		{
			[Token(Token = "0x6002B36")]
			[Address(RVA = "0x139CF54", Offset = "0x139CF54", VA = "0x139CF54")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_e_group_type()
			{
			}
		}

		[Token(Token = "0x200088C")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_eMonsterAttackDirType : TryGetValue<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002B37")]
			[Address(RVA = "0x139CEB4", Offset = "0x139CEB4", VA = "0x139CEB4")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200088D")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_eMonsterAttackType : TryGetValue<eMonsterAttackType>
		{
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x139CF04", Offset = "0x139CF04", VA = "0x139CF04")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200088E")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_MoveTargetType : TryGetValue<MoveTargetType>
		{
			[Token(Token = "0x6002B39")]
			[Address(RVA = "0x139C824", Offset = "0x139C824", VA = "0x139C824")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200088F")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_LayerMask : TryGetValue<LayerMask>
		{
			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0x139CB94", Offset = "0x139CB94", VA = "0x139CB94")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object o;

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x14A760C", Offset = "0x14A760C", VA = "0x14A760C")]
		private void NodeCanvas_Framework_Blackboard_GetVariable_1()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x14A7640", Offset = "0x14A7640", VA = "0x14A7640")]
		private void NodeCanvas_Framework_Blackboard_GetValue_2()
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x14A7674", Offset = "0x14A7674", VA = "0x14A7674")]
		private void NodeCanvas_Framework_IBlackboard_GetVariable_1()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x14A76A8", Offset = "0x14A76A8", VA = "0x14A76A8")]
		private void NodeCanvas_Framework_IBlackboard_GetValue_2()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x14A76DC", Offset = "0x14A76DC", VA = "0x14A76DC")]
		private void CustomSpoof()
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x14A76E0", Offset = "0x14A76E0", VA = "0x14A76E0")]
		public AOTDummy()
		{
		}
	}
}
