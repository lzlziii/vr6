using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Linq.Expressions;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using DG.Tweening;
using DG.Tweening.Core;
using Dissonance;
using Dissonance.Audio;
using Dissonance.Audio.Capture;
using Dissonance.Audio.Codecs;
using Dissonance.Audio.Codecs.Opus;
using Dissonance.Audio.Playback;
using Dissonance.Config;
using Dissonance.Datastructures;
using Dissonance.Networking;
using Dissonance.Networking.Client;
using Dissonance.Networking.Server;
using Dissonance.Threading;
using Dissonance.VAD;
using HandyCollections.Heap;
using Il2CppDummyDll;
using NAudio.Dsp;
using NAudio.Wave;
using NodeCanvas;
using NodeCanvas.BehaviourTrees;
using NodeCanvas.DialogueTrees;
using NodeCanvas.Framework;
using NodeCanvas.Framework.Internal;
using NodeCanvas.StateMachines;
using ParadoxNotion;
using ParadoxNotion.Design;
using ParadoxNotion.Serialization;
using ParadoxNotion.Serialization.FullSerializer;
using ParadoxNotion.Serialization.FullSerializer.Internal;
using ParadoxNotion.Serialization.FullSerializer.Internal.DirectConverters;
using RootMotion.FinalIK;
using SWS;
using Unity.Collections;
using Unity.Jobs;
using Unity.Networking.Transport;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using VRNetLib;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public enum EAttackDir
{
	[Token(Token = "0x4000002")]
	none,
	[Token(Token = "0x4000003")]
	left,
	[Token(Token = "0x4000004")]
	right,
	[Token(Token = "0x4000005")]
	up,
	[Token(Token = "0x4000006")]
	down
}
[Token(Token = "0x2000003")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB0E8C", Offset = "0xFB0E8C")]
public class SF_PPE_DamageReact : MonoBehaviour
{
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB93B4", Offset = "0xFB93B4")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onFadeComplete;

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x1B72410", Offset = "0x1B72410", VA = "0x1B72410")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x1B72B30", Offset = "0x1B72B30", VA = "0x1B72B30")]
		internal void <ScreenFadeOutIn>b__0()
		{
		}
	}

	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB93C4", Offset = "0xFB93C4")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool hasParent;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject shakeParent;

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x1B726CC", Offset = "0x1B726CC", VA = "0x1B726CC")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x1B72B44", Offset = "0x1B72B44", VA = "0x1B72B44")]
		internal void <ShakeCamera>b__0()
		{
		}
	}

	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB93D4", Offset = "0xFB93D4")]
	private sealed class <BurnOff>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeTime;

		[Token(Token = "0x170004BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x1B72D50", Offset = "0x1B72D50", VA = "0x1B72D50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x1B72DB8", Offset = "0x1B72DB8", VA = "0x1B72DB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x1B726D4", Offset = "0x1B726D4", VA = "0x1B726D4")]
		[DebuggerHidden]
		public <BurnOff>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x1B72C20", Offset = "0x1B72C20", VA = "0x1B72C20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x1B72C24", Offset = "0x1B72C24", VA = "0x1B72C24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x1B72D58", Offset = "0x1B72D58", VA = "0x1B72D58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000431")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB93E4", Offset = "0xFB93E4")]
	private sealed class <PoisonOff>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeTime;

		[Token(Token = "0x170004BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x1B73020", Offset = "0x1B73020", VA = "0x1B73020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x1B73088", Offset = "0x1B73088", VA = "0x1B73088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x1B72790", Offset = "0x1B72790", VA = "0x1B72790")]
		[DebuggerHidden]
		public <PoisonOff>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x1B72EF0", Offset = "0x1B72EF0", VA = "0x1B72EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x1B72EF4", Offset = "0x1B72EF4", VA = "0x1B72EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x1B73028", Offset = "0x1B73028", VA = "0x1B73028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB93F4", Offset = "0xFB93F4")]
	private sealed class <SprayOff>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x170004C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x1B731C4", Offset = "0x1B731C4", VA = "0x1B731C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x1B7322C", Offset = "0x1B7322C", VA = "0x1B7322C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x1B72848", Offset = "0x1B72848", VA = "0x1B72848")]
		[DebuggerHidden]
		public <SprayOff>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x1B73090", Offset = "0x1B73090", VA = "0x1B73090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x1B73094", Offset = "0x1B73094", VA = "0x1B73094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x1B731CC", Offset = "0x1B731CC", VA = "0x1B731CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9404", Offset = "0xFB9404")]
	private sealed class <BurnToDeath>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x170004C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x1B72E80", Offset = "0x1B72E80", VA = "0x1B72E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x1B72EE8", Offset = "0x1B72EE8", VA = "0x1B72EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x1B72874", Offset = "0x1B72874", VA = "0x1B72874")]
		[DebuggerHidden]
		public <BurnToDeath>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x1B72DC0", Offset = "0x1B72DC0", VA = "0x1B72DC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x1B72DC4", Offset = "0x1B72DC4", VA = "0x1B72DC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1B72E88", Offset = "0x1B72E88", VA = "0x1B72E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material m_material;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture2D leftTex;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture2D rightTex;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture2D upTex;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Texture2D downTex;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color m_bloodColor;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color m_poisonColor;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float fadeOutTime;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color curOverlayColor;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bReadyForAttack;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool m_bReadyForBurn;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool m_bReadyForPoison;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	private bool m_bReadyForSpray;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_bInitialized;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool m_bReadyForShake;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string m_blendTexName;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string m_flowTexName;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string m_noiseTexName;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string m_burnTexName;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string m_directonName;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string m_weightName;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string m_liquidBlendName;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string m_liquidColorName;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string m_burnBlend;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string m_verticalSweep;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string m_overlayName;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private IEnumerator co_burnOff;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private IEnumerator co_poisonOff;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private IEnumerator co_sprayOff;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private IEnumerator co_burnToDie;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Tweener tweenDirFadeIn;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Tweener tweenBurn;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Tweener tweenDeath;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Tweener tweenSprayIn;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Tweener tweenSprayOut;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Tweener tweenScreenFade;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1B71454", Offset = "0x1B71454", VA = "0x1B71454")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1B71478", Offset = "0x1B71478", VA = "0x1B71478")]
	public void InitParam()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1B719B0", Offset = "0x1B719B0", VA = "0x1B719B0")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1B71A9C", Offset = "0x1B71A9C", VA = "0x1B71A9C")]
	public void OnTestAction(int dirNum)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1B71B44", Offset = "0x1B71B44", VA = "0x1B71B44")]
	public void OnTestSetColor()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1B71AF0", Offset = "0x1B71AF0", VA = "0x1B71AF0")]
	public void EncounterAttack(EAttackDir direction)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1B71D7C", Offset = "0x1B71D7C", VA = "0x1B71D7C")]
	public void Burn()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1B71F50", Offset = "0x1B71F50", VA = "0x1B71F50")]
	public void Poisoning()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1B72038", Offset = "0x1B72038", VA = "0x1B72038")]
	public void SprayBlood()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1B72160", Offset = "0x1B72160", VA = "0x1B72160")]
	public void ToDie()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1B72244", Offset = "0x1B72244", VA = "0x1B72244")]
	public void BurnToDie()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1B722FC", Offset = "0x1B722FC", VA = "0x1B722FC")]
	public void ScreenFadeOutIn(bool bOut, float duration, Action onFadeComplete)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1B72418", Offset = "0x1B72418", VA = "0x1B72418")]
	public void ScreenFadeStop()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1B72430", Offset = "0x1B72430", VA = "0x1B72430")]
	public void ShakeCamera(float strength, float shakeDuration)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1B717D8", Offset = "0x1B717D8", VA = "0x1B717D8")]
	public void ToDefault()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1B71BD4", Offset = "0x1B71BD4", VA = "0x1B71BD4")]
	private void FadeIn(Texture2D texture, float dirNum)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1B71EC0", Offset = "0x1B71EC0", VA = "0x1B71EC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC5BC0", Offset = "0xFC5BC0")]
	private IEnumerator BurnOff(float waitTime, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1B72700", Offset = "0x1B72700", VA = "0x1B72700")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC5C24", Offset = "0xFC5C24")]
	private IEnumerator PoisonOff(float waitTime, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1B727BC", Offset = "0x1B727BC", VA = "0x1B727BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC5C88", Offset = "0xFC5C88")]
	private IEnumerator SprayOff(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1B72280", Offset = "0x1B72280", VA = "0x1B72280")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC5CEC", Offset = "0xFC5CEC")]
	private IEnumerator BurnToDeath()
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1B728A0", Offset = "0x1B728A0", VA = "0x1B728A0")]
	private float DebugFloatValue(string name)
	{
		return default(float);
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1B728BC", Offset = "0x1B728BC", VA = "0x1B728BC")]
	public SF_PPE_DamageReact()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1B72A28", Offset = "0x1B72A28", VA = "0x1B72A28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5D50", Offset = "0xFC5D50")]
	private void <Burn>b__42_0()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1B72A34", Offset = "0x1B72A34", VA = "0x1B72A34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5D60", Offset = "0xFC5D60")]
	private void <Poisoning>b__43_0()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1B72A78", Offset = "0x1B72A78", VA = "0x1B72A78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5D70", Offset = "0xFC5D70")]
	private void <SprayBlood>b__44_0()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1B72ABC", Offset = "0x1B72ABC", VA = "0x1B72ABC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5D80", Offset = "0xFC5D80")]
	private void <FadeIn>b__51_0()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1B72AD8", Offset = "0x1B72AD8", VA = "0x1B72AD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5D90", Offset = "0xFC5D90")]
	private void <BurnOff>b__52_0()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1B72AE4", Offset = "0x1B72AE4", VA = "0x1B72AE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5DA0", Offset = "0xFC5DA0")]
	private void <PoisonOff>b__53_0()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1B72AF0", Offset = "0x1B72AF0", VA = "0x1B72AF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5DB0", Offset = "0xFC5DB0")]
	private void <SprayOff>b__54_0()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
public class SF_PPE_EditorDebug : MonoBehaviour
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material m_mat;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1B73234", Offset = "0x1B73234", VA = "0x1B73234")]
	private void OnRenderImage(RenderTexture src, RenderTexture dst)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1B732B8", Offset = "0x1B732B8", VA = "0x1B732B8")]
	public SF_PPE_EditorDebug()
	{
	}
}
[Token(Token = "0x2000005")]
public class QuadDecal : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFB9C8C", Offset = "0xFB9C8C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFB9C8C", Offset = "0xFB9C8C")]
	private int row;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFB9CF0", Offset = "0xFB9CF0")]
	private int column;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int itemRow;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int itemColumn;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFB9D30", Offset = "0xFB9D30")]
	private float size;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFB9D7C", Offset = "0xFB9D7C")]
	private float offsetY;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool useRandom;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<Transform> onDisappear;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2[] uv_0;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 uv_scale;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool IsNotHide;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1954FA8", Offset = "0x1954FA8", VA = "0x1954FA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x195519C", Offset = "0x195519C", VA = "0x195519C")]
	private void SetUV()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1955278", Offset = "0x1955278", VA = "0x1955278")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1955414", Offset = "0x1955414", VA = "0x1955414")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x19554A0", Offset = "0x19554A0", VA = "0x19554A0")]
	public void SetNotHide()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x19554AC", Offset = "0x19554AC", VA = "0x19554AC")]
	public QuadDecal()
	{
	}
}
[Token(Token = "0x2000006")]
public class QuadDecalPool : MonoBehaviour
{
	[Token(Token = "0x4000039")]
	private const string metalTag = "Metal";

	[Token(Token = "0x400003A")]
	private const string cementTag = "Cement";

	[Token(Token = "0x400003B")]
	private const string woodTag = "Wood";

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int decalAmount;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject decalMetal;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject decalConcrete;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject decalWood;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] decalMetals;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] decalConcretes;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] decalWoods;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int indexMetal;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int indexConcrete;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int indexWood;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<GameObject, QuadDecal> decalDic;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject curDecalGO;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1955514", Offset = "0x1955514", VA = "0x1955514")]
	public void Init()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x19557F0", Offset = "0x19557F0", VA = "0x19557F0")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1955848", Offset = "0x1955848", VA = "0x1955848")]
	public void SpawnDecal(GameObject hitGO, Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x195597C", Offset = "0x195597C", VA = "0x195597C")]
	private void PlaceDecal(ref int index, GameObject[] decals, GameObject hitGO, Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1955558", Offset = "0x1955558", VA = "0x1955558")]
	private void GenerateDecals(GameObject source, out GameObject[] targets)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1955D80", Offset = "0x1955D80", VA = "0x1955D80")]
	public void Recycle(GameObject go)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1955E04", Offset = "0x1955E04", VA = "0x1955E04")]
	private void ResetDecalToChild(Transform childTran)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1955E58", Offset = "0x1955E58", VA = "0x1955E58")]
	public QuadDecalPool()
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB0F38", Offset = "0xFB0F38")]
public class BulletEffectManager : MonoBehaviour
{
	[Token(Token = "0x4000048")]
	private const string metalTag = "Metal";

	[Token(Token = "0x4000049")]
	private const string concreteTag = "Concrete";

	[Token(Token = "0x400004A")]
	private const string cementTag = "Cement";

	[Token(Token = "0x400004B")]
	private const string glassTag = "Glass";

	[Token(Token = "0x400004C")]
	private const string woodTag = "Wood";

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ptLaunch;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject decalRoot;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ParticleCollisionEvent> ptEvents;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public QuadDecalPool quadDecal;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleDecalPool decalMetal;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleDecalPool decalConcrete;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ParticleDecalPool decalGlass;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleDecalPool decalWood;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1833E34", Offset = "0x1833E34", VA = "0x1833E34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1834108", Offset = "0x1834108", VA = "0x1834108")]
	public void LaunchBullet()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1834128", Offset = "0x1834128", VA = "0x1834128")]
	public void LaunchBullet(Vector3 pos, [Optional] Vector3 rot)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1834230", Offset = "0x1834230", VA = "0x1834230")]
	public void SpawnDecal(string tag, Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x18344D8", Offset = "0x18344D8", VA = "0x18344D8")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x183438C", Offset = "0x183438C", VA = "0x183438C")]
	private void PlaceDecal(ParticleDecalPool decal, Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1834014", Offset = "0x1834014", VA = "0x1834014")]
	private ParticleDecalPool GenerateDecalInstance(ParticleDecalPool decal)
	{
		return null;
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1834648", Offset = "0x1834648", VA = "0x1834648")]
	public BulletEffectManager()
	{
	}
}
[Token(Token = "0x2000008")]
public class BulletEffectTest : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BulletEffectManager bullet;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x18346C4", Offset = "0x18346C4", VA = "0x18346C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1834898", Offset = "0x1834898", VA = "0x1834898")]
	public BulletEffectTest()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB0F9C", Offset = "0xFB0F9C")]
public class ParticleDecalPool : MonoBehaviour
{
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9414", Offset = "0xFB9414")]
	private sealed class <DelayRecycle>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleDecalPool <>4__this;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170004C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x1953A00", Offset = "0x1953A00", VA = "0x1953A00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x1953A68", Offset = "0x1953A68", VA = "0x1953A68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x19537C8", Offset = "0x19537C8", VA = "0x19537C8")]
		[DebuggerHidden]
		public <DelayRecycle>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x195388C", Offset = "0x195388C", VA = "0x195388C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x1953890", Offset = "0x1953890", VA = "0x1953890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x1953A08", Offset = "0x1953A08", VA = "0x1953A08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFB9E60", Offset = "0xFB9E60")]
	[SerializeField]
	private int maxDecals;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float decalSizeMin;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float decalSizeMax;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFB9ECC", Offset = "0xFB9ECC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFB9ECC", Offset = "0xFB9ECC")]
	private float offsetY;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFB9F30", Offset = "0xFB9F30")]
	[SerializeField]
	private float delayRecycle;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem ptDecal;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int ptDecalDataIndex;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.Particle[] tempPTs;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator co_complete;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForSeconds wait;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForSeconds wait2;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1953378", Offset = "0x1953378", VA = "0x1953378")]
	private void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x19533FC", Offset = "0x19533FC", VA = "0x19533FC")]
	public void ParticleHit(Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x195374C", Offset = "0x195374C", VA = "0x195374C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC5DC0", Offset = "0xFC5DC0")]
	private IEnumerator DelayRecycle()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1953720", Offset = "0x1953720", VA = "0x1953720")]
	private void SetDecalParticle()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x19537F4", Offset = "0x19537F4", VA = "0x19537F4")]
	public ParticleDecalPool()
	{
	}
}
[Token(Token = "0x200000A")]
public class ShowFPSTools : Singleton<ShowFPSTools>
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject view;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x16E8B40", Offset = "0x16E8B40", VA = "0x16E8B40")]
	public void Show()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x16E8C2C", Offset = "0x16E8C2C", VA = "0x16E8C2C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x16E8CF8", Offset = "0x16E8CF8", VA = "0x16E8CF8")]
	public ShowFPSTools()
	{
	}
}
[Token(Token = "0x200000B")]
public class ShowFPSView : MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fps;

	[Token(Token = "0x4000065")]
	private const string FPS_S_0 = "FPS:{0}";

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, string> fpsStrDic;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject ui_root_obj;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float deltaTime;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x16E8D68", Offset = "0x16E8D68", VA = "0x16E8D68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x16E9124", Offset = "0x16E9124", VA = "0x16E9124")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x16E91A0", Offset = "0x16E91A0", VA = "0x16E91A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x16E9378", Offset = "0x16E9378", VA = "0x16E9378")]
	public ShowFPSView()
	{
	}
}
[Token(Token = "0x200000C")]
public class MatchTransform : MonoBehaviour
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform parentTransform;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startParentPosition;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion startParentRotationQ;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startParentScale;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startChildPosition;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion startChildRotationQ;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 startChildScale;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Matrix4x4 parentMatrix;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private bool matchScale;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[SerializeField]
	private bool useAbsoluteTransform;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1856600", Offset = "0x1856600", VA = "0x1856600")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x18568D0", Offset = "0x18568D0", VA = "0x18568D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x18568D4", Offset = "0x18568D4", VA = "0x18568D4")]
	private void MatchTargetTran()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x18566D4", Offset = "0x18566D4", VA = "0x18566D4")]
	private void InitTransform()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1856BD8", Offset = "0x1856BD8", VA = "0x1856BD8")]
	private Vector3 DivideVectors(Vector3 num, Vector3 den)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1856C18", Offset = "0x1856C18", VA = "0x1856C18")]
	public MatchTransform()
	{
	}
}
[Token(Token = "0x200000D")]
public class MonoSingleton<T> : MonoBehaviour where T : UnityEngine.Component, new()
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T mInstance;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject mInstanceGameObject;

	[Token(Token = "0x17000001")]
	public static T Instance
	{
		[Token(Token = "0x600004A")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004B")]
	public static T CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	public static void DestoryInstance()
	{
	}

	[Token(Token = "0x600004D")]
	public MonoSingleton()
	{
	}
}
[Token(Token = "0x200000E")]
public class lz4
{
	[Token(Token = "0x2000435")]
	public class API
	{
		[Token(Token = "0x4001266")]
		private const string LUADLL = "lz4";

		[PreserveSig]
		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x2D0A600", Offset = "0x2D0A600", VA = "0x2D0A600")]
		public static extern int Unity_LZ4_compress(IntPtr src, int srcSize, IntPtr dst, int dstCapacity, int compressionLevel);

		[PreserveSig]
		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x2D0A570", Offset = "0x2D0A570", VA = "0x2D0A570")]
		public static extern int Unity_LZ4_compressSize(int srcSize, int compressionLevel);

		[PreserveSig]
		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x2D0A7DC", Offset = "0x2D0A7DC", VA = "0x2D0A7DC")]
		public static extern int Unity_LZ4_uncompressSize(IntPtr srcBuffer, int srcSize);

		[PreserveSig]
		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x2D0A86C", Offset = "0x2D0A86C", VA = "0x2D0A86C")]
		public static extern int Unity_LZ4_decompress(IntPtr src, int srcSize, IntPtr dst, int dstCapacity);

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x2D0A91C", Offset = "0x2D0A91C", VA = "0x2D0A91C")]
		public API()
		{
		}
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x2D0A408", Offset = "0x2D0A408", VA = "0x2D0A408")]
	public static BytesPackage Compress(BytesPackage input, int compressionLevel = 3)
	{
		return null;
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x2D0A6B0", Offset = "0x2D0A6B0", VA = "0x2D0A6B0")]
	public static BytesPackage Decompress(BytesPackage input)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x2D0A914", Offset = "0x2D0A914", VA = "0x2D0A914")]
	public lz4()
	{
	}
}
[Token(Token = "0x200000F")]
public class Singleton<T> where T : new()
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x17000002")]
	public static T Instance
	{
		[Token(Token = "0x6000054")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x6000052")]
	static Singleton()
	{
	}

	[Token(Token = "0x6000053")]
	protected Singleton()
	{
	}
}
[Serializable]
[Token(Token = "0x2000010")]
public class ControllerJsonData
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int CtrlType;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string DeviceCode;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1834FE0", Offset = "0x1834FE0", VA = "0x1834FE0")]
	public ControllerJsonData()
	{
	}
}
[Token(Token = "0x2000011")]
public class ControllerSelector_DataStorage
{
	[Token(Token = "0x4000078")]
	private const string mFolderName = "C:/GoodVRGame/CSDeviceConfig/";

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string mFilePath;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<ControllerJsonData> Dic_Value;

	[Token(Token = "0x17000003")]
	private static string FilePaht
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x1834FE8", Offset = "0x1834FE8", VA = "0x1834FE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	private static string FolderName
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x1835140", Offset = "0x1835140", VA = "0x1835140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x18351B0", Offset = "0x18351B0", VA = "0x18351B0")]
	public List<ControllerJsonData> GetJsonData()
	{
		return null;
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x18351B8", Offset = "0x18351B8", VA = "0x18351B8")]
	public void SetJsonData(List<ControllerJsonData> list)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1835400", Offset = "0x1835400", VA = "0x1835400")]
	public void ReadToData()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1835460", Offset = "0x1835460", VA = "0x1835460")]
	private void Read()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1835288", Offset = "0x1835288", VA = "0x1835288")]
	private void Save()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x18356D4", Offset = "0x18356D4", VA = "0x18356D4")]
	public ControllerSelector_DataStorage()
	{
	}
}
[Token(Token = "0x2000012")]
public enum e_ControllerSelectorType
{
	[Token(Token = "0x400007C")]
	None,
	[Token(Token = "0x400007D")]
	LeftHand,
	[Token(Token = "0x400007E")]
	RightHand,
	[Token(Token = "0x400007F")]
	Waist
}
[Token(Token = "0x2000013")]
public class SteamVR_ControllerSelector : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	public enum e_DeviceType
	{
		[Token(Token = "0x4001268")]
		Unknown,
		[Token(Token = "0x4001269")]
		HMD,
		[Token(Token = "0x400126A")]
		BaseStation,
		[Token(Token = "0x400126B")]
		Controller_mr,
		[Token(Token = "0x400126C")]
		Controller_vive,
		[Token(Token = "0x400126D")]
		Tracker
	}

	[Token(Token = "0x2000437")]
	public class DeviceTypeData
	{
		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_DeviceType DType;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string TypeName;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> MatchingList;

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x16EA1AC", Offset = "0x16EA1AC", VA = "0x16EA1AC")]
		public DeviceTypeData(e_DeviceType type, string typeName, List<string> matchList)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x16EAA08", Offset = "0x16EAA08", VA = "0x16EAA08")]
		public bool IsMatch(string source, int index)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000438")]
	public class ControllerData
	{
		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_ControllerSelectorType CtrlType;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceCode;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<ControllerData> ConnectAction;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC255C", Offset = "0xFC255C")]
		private int <CurIndex>k__BackingField;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC256C", Offset = "0xFC256C")]
		private bool <IsConnected>k__BackingField;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC257C", Offset = "0xFC257C")]
		private e_DeviceType <CurDeviceType>k__BackingField;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC258C", Offset = "0xFC258C")]
		private bool <IsLeft>k__BackingField;

		[Token(Token = "0x170004C7")]
		public int CurIndex
		{
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x16EAD04", Offset = "0x16EAD04", VA = "0x16EAD04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC18C", Offset = "0xFCC18C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x16EAD0C", Offset = "0x16EAD0C", VA = "0x16EAD0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC19C", Offset = "0xFCC19C")]
			set
			{
			}
		}

		[Token(Token = "0x170004C8")]
		public bool IsConnected
		{
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x16EAD14", Offset = "0x16EAD14", VA = "0x16EAD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC1AC", Offset = "0xFCC1AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x16EAD1C", Offset = "0x16EAD1C", VA = "0x16EAD1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC1BC", Offset = "0xFCC1BC")]
			set
			{
			}
		}

		[Token(Token = "0x170004C9")]
		public e_DeviceType CurDeviceType
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x16EAD28", Offset = "0x16EAD28", VA = "0x16EAD28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC1CC", Offset = "0xFCC1CC")]
			get
			{
				return default(e_DeviceType);
			}
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x16EAD30", Offset = "0x16EAD30", VA = "0x16EAD30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC1DC", Offset = "0xFCC1DC")]
			set
			{
			}
		}

		[Token(Token = "0x170004CA")]
		public bool IsLeft
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x16EAD38", Offset = "0x16EAD38", VA = "0x16EAD38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC1EC", Offset = "0xFCC1EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0x16EAD40", Offset = "0x16EAD40", VA = "0x16EAD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC1FC", Offset = "0xFCC1FC")]
			set
			{
			}
		}

		[Token(Token = "0x170004CB")]
		public string SetDeviceCode
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x16EAD4C", Offset = "0x16EAD4C", VA = "0x16EAD4C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x16EAD54", Offset = "0x16EAD54", VA = "0x16EAD54")]
		public ControllerData()
		{
		}
	}

	[Token(Token = "0x2000439")]
	public class DeviceCodeInfo
	{
		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Index;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsConnected;

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x16EA458", Offset = "0x16EA458", VA = "0x16EA458")]
		public void Set(int index, bool isConnect)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x16EA450", Offset = "0x16EA450", VA = "0x16EA450")]
		public DeviceCodeInfo()
		{
		}
	}

	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9424", Offset = "0xFB9424")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ControllerJsonData> config;

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x16EA624", Offset = "0x16EA624", VA = "0x16EA624")]
		public <>c__DisplayClass23_0()
		{
		}
	}

	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9434", Offset = "0xFB9434")]
	private sealed class <>c__DisplayClass23_1
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass23_0 CS$<>8__locals1;

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x16EA62C", Offset = "0x16EA62C", VA = "0x16EA62C")]
		public <>c__DisplayClass23_1()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x16EAC68", Offset = "0x16EAC68", VA = "0x16EAC68")]
		internal bool <InitJsonConfigData>b__0(ControllerData a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000080")]
	public const int NoDeviceIndex = -1;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<e_DeviceType, DeviceTypeData> deviceTypeName;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, DeviceCodeInfo> mDeviceCodeDic;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool AdaptionHandleController;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool IsUseLocalFileConfig;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ControllerData> Controllers;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float mRefreshIntervalTime;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mRunTime;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ControllerSelector_DataStorage storageTool;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action controllerRefresh;

	[Token(Token = "0x17000005")]
	public Dictionary<string, DeviceCodeInfo> DeviceCodeDic
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0x16EA704", Offset = "0x16EA704", VA = "0x16EA704")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x16E9DCC", Offset = "0x16E9DCC", VA = "0x16E9DCC")]
	public SteamVR_ControllerSelector()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x16EA250", Offset = "0x16EA250", VA = "0x16EA250")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x16EA254", Offset = "0x16EA254", VA = "0x16EA254")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x16EA258", Offset = "0x16EA258", VA = "0x16EA258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x16EA280", Offset = "0x16EA280", VA = "0x16EA280")]
	private void Update()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x16EA2C8", Offset = "0x16EA2C8", VA = "0x16EA2C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x16EA2CC", Offset = "0x16EA2CC", VA = "0x16EA2CC")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x16EA2F4", Offset = "0x16EA2F4", VA = "0x16EA2F4")]
	private void SetDevice(int index, bool connected)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x16EA26C", Offset = "0x16EA26C", VA = "0x16EA26C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x16EA468", Offset = "0x16EA468", VA = "0x16EA468")]
	private void InitJsonConfigData()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x16EA44C", Offset = "0x16EA44C", VA = "0x16EA44C")]
	public void RefreshControllers()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x16EA634", Offset = "0x16EA634", VA = "0x16EA634")]
	public void RefreshControllerBase()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x16EA6A4", Offset = "0x16EA6A4", VA = "0x16EA6A4")]
	private void UpdateControllersWithCode()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x16EA70C", Offset = "0x16EA70C", VA = "0x16EA70C")]
	public ControllerData GetCotrollerData(e_ControllerSelectorType type)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x16EA7B4", Offset = "0x16EA7B4", VA = "0x16EA7B4")]
	public ControllerData GetCotrollerData(int index)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x16EA85C", Offset = "0x16EA85C", VA = "0x16EA85C")]
	public bool IsLeftHand(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x16EA864", Offset = "0x16EA864", VA = "0x16EA864")]
	public bool IsRightHand(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x16EA86C", Offset = "0x16EA86C", VA = "0x16EA86C")]
	public string GetDevicePropertyModelName(int index)
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x16EA8B4", Offset = "0x16EA8B4", VA = "0x16EA8B4")]
	public e_DeviceType GetDeviceType(int index)
	{
		return default(e_DeviceType);
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x16EAAD4", Offset = "0x16EAAD4", VA = "0x16EAAD4")]
	public string GetDeviceTypeName(int index)
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x16EAB3C", Offset = "0x16EAB3C", VA = "0x16EAB3C")]
	public void SaveCtrlDataTojson()
	{
	}
}
[Token(Token = "0x2000014")]
public class QuickStart : MonoBehaviour
{
	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1955EDC", Offset = "0x1955EDC", VA = "0x1955EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1955F50", Offset = "0x1955F50", VA = "0x1955F50")]
	public QuickStart()
	{
	}
}
[Token(Token = "0x2000015")]
public class TweenFragment : MonoBehaviour
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TargetPos;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpTime;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initPos;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x16F541C", Offset = "0x16F541C", VA = "0x16F541C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x16F545C", Offset = "0x16F545C", VA = "0x16F545C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x16F5578", Offset = "0x16F5578", VA = "0x16F5578")]
	public TweenFragment()
	{
	}
}
[Token(Token = "0x2000016")]
public class Go : MonoBehaviour
{
	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9444", Offset = "0xFB9444")]
	private sealed class <timeScaleIndependentUpdate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Go <>4__this;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x170004CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0x1CFFD44", Offset = "0x1CFFD44", VA = "0x1CFFD44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0x1CFFDAC", Offset = "0x1CFFDAC", VA = "0x1CFFDAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x1CFE870", Offset = "0x1CFE870", VA = "0x1CFE870")]
		[DebuggerHidden]
		public <timeScaleIndependentUpdate>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x1CFFC14", Offset = "0x1CFFC14", VA = "0x1CFFC14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x1CFFC18", Offset = "0x1CFFC18", VA = "0x1CFFC18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x1CFFD4C", Offset = "0x1CFFD4C", VA = "0x1CFFD4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GoEaseType defaultEaseType;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static GoLoopType defaultLoopType;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GoUpdateType defaultUpdateType;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static GoDuplicatePropertyRuleType duplicatePropertyRule;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GoLogLevel logLevel;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool validateTargetObjectsEachTick;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private static bool _applicationIsQuitting;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<AbstractGoTween> _tweens;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _timeScaleIndependentUpdateIsRunning;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Go _instance;

	[Token(Token = "0x17000006")]
	public static Go instance
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x1CFDFFC", Offset = "0x1CFDFFC", VA = "0x1CFDFFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1CFE268", Offset = "0x1CFE268", VA = "0x1CFE268")]
	private void handleUpdateOfType(GoUpdateType updateType, float deltaTime)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1CFE580", Offset = "0x1CFE580", VA = "0x1CFE580")]
	private void Update()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1CFE610", Offset = "0x1CFE610", VA = "0x1CFE610")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1CFE6A0", Offset = "0x1CFE6A0", VA = "0x1CFE6A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1CFE730", Offset = "0x1CFE730", VA = "0x1CFE730")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1CFE7F4", Offset = "0x1CFE7F4", VA = "0x1CFE7F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC5E24", Offset = "0xFC5E24")]
	private IEnumerator timeScaleIndependentUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1CFE89C", Offset = "0x1CFE89C", VA = "0x1CFE89C")]
	private static bool handleDuplicatePropertiesInTween(GoTween tween)
	{
		return default(bool);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1CFEE6C", Offset = "0x1CFEE6C", VA = "0x1CFEE6C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC5E88", Offset = "0xFC5E88")]
	private static void log(object format, params object[] paramList)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1CFEF34", Offset = "0x1CFEF34", VA = "0x1CFEF34")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC5EC0", Offset = "0xFC5EC0")]
	public static void warn(object format, params object[] paramList)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1CFF064", Offset = "0x1CFF064", VA = "0x1CFF064")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC5EF8", Offset = "0xFC5EF8")]
	public static void error(object format, params object[] paramList)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1CFF1BC", Offset = "0x1CFF1BC", VA = "0x1CFF1BC")]
	public static GoTween to(object target, float duration, GoTweenConfig config)
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1CFF7AC", Offset = "0x1CFF7AC", VA = "0x1CFF7AC")]
	public static GoTween from(object target, float duration, GoTweenConfig config)
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1CFF4D8", Offset = "0x1CFF4D8", VA = "0x1CFF4D8")]
	public static void addTween(AbstractGoTween tween)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1CFE40C", Offset = "0x1CFE40C", VA = "0x1CFE40C")]
	public static bool removeTween(AbstractGoTween tween)
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1CFF874", Offset = "0x1CFF874", VA = "0x1CFF874")]
	public static List<AbstractGoTween> tweensWithId(int id)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1CFEC10", Offset = "0x1CFEC10", VA = "0x1CFEC10")]
	public static List<GoTween> tweensWithTarget(object target, bool traverseCollections = false)
	{
		return null;
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1CFFA0C", Offset = "0x1CFFA0C", VA = "0x1CFFA0C")]
	public static void killAllTweensWithTarget(object target)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1CFFB34", Offset = "0x1CFFB34", VA = "0x1CFFB34")]
	public Go()
	{
	}
}
[Token(Token = "0x2000017")]
public class GoDummyPath : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pathName;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color pathColor;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> nodes;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useStandardHandles;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool forceStraightLinePath;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int pathResolution;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1CFFDB4", Offset = "0x1CFFDB4", VA = "0x1CFFDB4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1D00078", Offset = "0x1D00078", VA = "0x1D00078")]
	public GoDummyPath()
	{
	}
}
[Token(Token = "0x2000018")]
public class GoTween : AbstractGoTween
{
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9FAC", Offset = "0xFB9FAC")]
	private object <target>k__BackingField;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9FBC", Offset = "0xFB9FBC")]
	private float <delay>k__BackingField;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _elapsedDelay;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _delayComplete;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9FCC", Offset = "0xFB9FCC")]
	private bool <isFrom>k__BackingField;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<AbstractTweenProperty> _tweenPropertyList;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string targetTypeString;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GoEaseType _easeType;

	[Token(Token = "0x17000007")]
	public object target
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0x1D052F8", Offset = "0x1D052F8", VA = "0x1D052F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5F30", Offset = "0xFC5F30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000091")]
		[Address(RVA = "0x1D05300", Offset = "0x1D05300", VA = "0x1D05300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5F40", Offset = "0xFC5F40")]
		private set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public float delay
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0x1D05308", Offset = "0x1D05308", VA = "0x1D05308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5F50", Offset = "0xFC5F50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x1D05310", Offset = "0x1D05310", VA = "0x1D05310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5F60", Offset = "0xFC5F60")]
		private set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public bool isFrom
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x1D05318", Offset = "0x1D05318", VA = "0x1D05318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5F70", Offset = "0xFC5F70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x1D05320", Offset = "0x1D05320", VA = "0x1D05320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5F80", Offset = "0xFC5F80")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public GoEaseType easeType
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x1D0532C", Offset = "0x1D0532C", VA = "0x1D0532C")]
		get
		{
			return default(GoEaseType);
		}
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x1D05334", Offset = "0x1D05334", VA = "0x1D05334")]
		set
		{
		}
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1CFF27C", Offset = "0x1CFF27C", VA = "0x1CFF27C")]
	public GoTween(object target, float duration, GoTweenConfig config, [Optional] Action<AbstractGoTween> onComplete)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1D0555C", Offset = "0x1D0555C", VA = "0x1D0555C", Slot = "10")]
	public override bool update(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1D057B4", Offset = "0x1D057B4", VA = "0x1D057B4", Slot = "11")]
	public override bool isValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1D05440", Offset = "0x1D05440", VA = "0x1D05440")]
	public void addTweenProperty(AbstractTweenProperty tweenProp)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1D057C4", Offset = "0x1D057C4", VA = "0x1D057C4", Slot = "12")]
	public override bool removeTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1D0585C", Offset = "0x1D0585C", VA = "0x1D0585C", Slot = "13")]
	public override bool containsTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1D058C4", Offset = "0x1D058C4", VA = "0x1D058C4")]
	public void clearTweenProperties()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1D0591C", Offset = "0x1D0591C", VA = "0x1D0591C", Slot = "14")]
	public override List<AbstractTweenProperty> allTweenProperties()
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1D05924", Offset = "0x1D05924", VA = "0x1D05924", Slot = "4")]
	protected override void onInit()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1D059CC", Offset = "0x1D059CC", VA = "0x1D059CC", Slot = "15")]
	public override void destroy()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1D05A40", Offset = "0x1D05A40", VA = "0x1D05A40", Slot = "22")]
	public override void goTo(float time, bool skipDelay = true)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1D05BF0", Offset = "0x1D05BF0", VA = "0x1D05BF0", Slot = "21")]
	public override void complete()
	{
	}
}
[Token(Token = "0x2000019")]
public class GoTweenChain : AbstractGoTweenCollection
{
	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1D05C0C", Offset = "0x1D05C0C", VA = "0x1D05C0C")]
	public GoTweenChain()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1D05CFC", Offset = "0x1D05CFC", VA = "0x1D05CFC")]
	public GoTweenChain(GoTweenCollectionConfig config)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1D05D04", Offset = "0x1D05D04", VA = "0x1D05D04")]
	private void append(TweenFlowItem item)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1D05EA0", Offset = "0x1D05EA0", VA = "0x1D05EA0")]
	private void prepend(TweenFlowItem item)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1D060F0", Offset = "0x1D060F0", VA = "0x1D060F0")]
	public GoTweenChain append(AbstractGoTween tween)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1D0617C", Offset = "0x1D0617C", VA = "0x1D0617C")]
	public GoTweenChain appendDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1D06200", Offset = "0x1D06200", VA = "0x1D06200")]
	public GoTweenChain prepend(AbstractGoTween tween)
	{
		return null;
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1D06280", Offset = "0x1D06280", VA = "0x1D06280")]
	public GoTweenChain prependDelay(float delay)
	{
		return null;
	}
}
[Token(Token = "0x200001A")]
public class GoTweenCollectionConfig
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int iterations;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GoLoopType loopType;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GoUpdateType propertyUpdateType;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<AbstractGoTween> onInitHandler;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<AbstractGoTween> onBeginHandler;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<AbstractGoTween> onIterationStartHandler;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<AbstractGoTween> onUpdateHandler;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<AbstractGoTween> onIterationEndHandler;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<AbstractGoTween> onCompleteHandler;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1D06300", Offset = "0x1D06300", VA = "0x1D06300")]
	public GoTweenCollectionConfig setIterations(int iterations)
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1D06308", Offset = "0x1D06308", VA = "0x1D06308")]
	public GoTweenCollectionConfig setIterations(int iterations, GoLoopType loopType)
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1D06310", Offset = "0x1D06310", VA = "0x1D06310")]
	public GoTweenCollectionConfig setUpdateType(GoUpdateType setUpdateType)
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1D06318", Offset = "0x1D06318", VA = "0x1D06318")]
	public GoTweenCollectionConfig onInit(Action<AbstractGoTween> onInit)
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1D06340", Offset = "0x1D06340", VA = "0x1D06340")]
	public GoTweenCollectionConfig onBegin(Action<AbstractGoTween> onBegin)
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1D06368", Offset = "0x1D06368", VA = "0x1D06368")]
	public GoTweenCollectionConfig onIterationStart(Action<AbstractGoTween> onIterationStart)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1D06390", Offset = "0x1D06390", VA = "0x1D06390")]
	public GoTweenCollectionConfig onUpdate(Action<AbstractGoTween> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1D063B8", Offset = "0x1D063B8", VA = "0x1D063B8")]
	public GoTweenCollectionConfig onIterationEnd(Action<AbstractGoTween> onIterationEnd)
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1D063E0", Offset = "0x1D063E0", VA = "0x1D063E0")]
	public GoTweenCollectionConfig onComplete(Action<AbstractGoTween> onComplete)
	{
		return null;
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1D06408", Offset = "0x1D06408", VA = "0x1D06408")]
	public GoTweenCollectionConfig setId(int id)
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1D05C70", Offset = "0x1D05C70", VA = "0x1D05C70")]
	public GoTweenCollectionConfig()
	{
	}
}
[Token(Token = "0x200001B")]
public class GoTweenConfig
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<AbstractTweenProperty> _tweenProperties;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int iterations;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int timeScale;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GoLoopType loopType;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GoEaseType easeType;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isPaused;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GoUpdateType propertyUpdateType;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isFrom;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<AbstractGoTween> onInitHandler;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<AbstractGoTween> onBeginHandler;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<AbstractGoTween> onIterationStartHandler;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<AbstractGoTween> onUpdateHandler;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<AbstractGoTween> onIterationEndHandler;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<AbstractGoTween> onCompleteHandler;

	[Token(Token = "0x1700000B")]
	public List<AbstractTweenProperty> tweenProperties
	{
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x1D06410", Offset = "0x1D06410", VA = "0x1D06410")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1D01A08", Offset = "0x1D01A08", VA = "0x1D01A08")]
	public GoTweenConfig position(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1D01B94", Offset = "0x1D01B94", VA = "0x1D01B94")]
	public GoTweenConfig localPosition(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x1D06418", Offset = "0x1D06418", VA = "0x1D06418")]
	public GoTweenConfig positionPath(GoSpline path, bool isRelative = false, GoLookAtType lookAtType = GoLookAtType.None, [Optional] Transform lookTarget)
	{
		return null;
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x1D064CC", Offset = "0x1D064CC", VA = "0x1D064CC")]
	public GoTweenConfig scale(float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1D01D88", Offset = "0x1D01D88", VA = "0x1D01D88")]
	public GoTweenConfig scale(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1D06524", Offset = "0x1D06524", VA = "0x1D06524")]
	public GoTweenConfig scalePath(GoSpline path, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1D016F0", Offset = "0x1D016F0", VA = "0x1D016F0")]
	public GoTweenConfig eulerAngles(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1D0187C", Offset = "0x1D0187C", VA = "0x1D0187C")]
	public GoTweenConfig localEulerAngles(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1D013D8", Offset = "0x1D013D8", VA = "0x1D013D8")]
	public GoTweenConfig rotation(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1D01564", Offset = "0x1D01564", VA = "0x1D01564")]
	public GoTweenConfig localRotation(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1D065BC", Offset = "0x1D065BC", VA = "0x1D065BC")]
	public GoTweenConfig rotation(Quaternion endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1D06680", Offset = "0x1D06680", VA = "0x1D06680")]
	public GoTweenConfig localRotation(Quaternion endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1D0268C", Offset = "0x1D0268C", VA = "0x1D0268C")]
	public GoTweenConfig materialColor(Color endValue, string colorName = "_Color", bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1D01F28", Offset = "0x1D01F28", VA = "0x1D01F28")]
	public GoTweenConfig shake(Vector3 shakeMagnitude, GoShakeType shakeType = GoShakeType.Position, int frameMod = 1, bool useLocalProperties = false)
	{
		return null;
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1D06744", Offset = "0x1D06744", VA = "0x1D06744")]
	public GoTweenConfig vector2Prop(string propertyName, Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1D067F4", Offset = "0x1D067F4", VA = "0x1D067F4")]
	public GoTweenConfig vector3Prop(string propertyName, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1D068B4", Offset = "0x1D068B4", VA = "0x1D068B4")]
	public GoTweenConfig vector4Prop(string propertyName, Vector4 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1D0697C", Offset = "0x1D0697C", VA = "0x1D0697C")]
	public GoTweenConfig vector3PathProp(string propertyName, GoSpline path, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1D06A24", Offset = "0x1D06A24", VA = "0x1D06A24")]
	public GoTweenConfig vector3XProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1D06ACC", Offset = "0x1D06ACC", VA = "0x1D06ACC")]
	public GoTweenConfig vector3YProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1D06B74", Offset = "0x1D06B74", VA = "0x1D06B74")]
	public GoTweenConfig vector3ZProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1D06C1C", Offset = "0x1D06C1C", VA = "0x1D06C1C")]
	public GoTweenConfig colorProp(string propertyName, Color endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1D06CE4", Offset = "0x1D06CE4", VA = "0x1D06CE4")]
	public GoTweenConfig intProp(string propertyName, int endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1D06D8C", Offset = "0x1D06D8C", VA = "0x1D06D8C")]
	public GoTweenConfig floatProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1D06E40", Offset = "0x1D06E40", VA = "0x1D06E40")]
	public GoTweenConfig addTweenProperty(AbstractTweenProperty tweenProp)
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1D06EB0", Offset = "0x1D06EB0", VA = "0x1D06EB0")]
	public GoTweenConfig clearProperties()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1D06F10", Offset = "0x1D06F10", VA = "0x1D06F10")]
	public GoTweenConfig clearEvents()
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1D06F8C", Offset = "0x1D06F8C", VA = "0x1D06F8C")]
	public GoTweenConfig setDelay(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1D06F94", Offset = "0x1D06F94", VA = "0x1D06F94")]
	public GoTweenConfig setIterations(int iterations)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x1D06F9C", Offset = "0x1D06F9C", VA = "0x1D06F9C")]
	public GoTweenConfig setIterations(int iterations, GoLoopType loopType)
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x1D06FA8", Offset = "0x1D06FA8", VA = "0x1D06FA8")]
	public GoTweenConfig setTimeScale(int timeScale)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1D06FB0", Offset = "0x1D06FB0", VA = "0x1D06FB0")]
	public GoTweenConfig setEaseType(GoEaseType easeType)
	{
		return null;
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x1D06FB8", Offset = "0x1D06FB8", VA = "0x1D06FB8")]
	public GoTweenConfig startPaused()
	{
		return null;
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x1D06FC4", Offset = "0x1D06FC4", VA = "0x1D06FC4")]
	public GoTweenConfig setUpdateType(GoUpdateType setUpdateType)
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1CFF868", Offset = "0x1CFF868", VA = "0x1CFF868")]
	public GoTweenConfig setIsFrom()
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1CFF274", Offset = "0x1CFF274", VA = "0x1CFF274")]
	public GoTweenConfig setIsTo()
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x1D06FCC", Offset = "0x1D06FCC", VA = "0x1D06FCC")]
	public GoTweenConfig onInit(Action<AbstractGoTween> onInit)
	{
		return null;
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x1D06FF4", Offset = "0x1D06FF4", VA = "0x1D06FF4")]
	public GoTweenConfig onBegin(Action<AbstractGoTween> onBegin)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x1D0701C", Offset = "0x1D0701C", VA = "0x1D0701C")]
	public GoTweenConfig onIterationStart(Action<AbstractGoTween> onIterationStart)
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x1D07044", Offset = "0x1D07044", VA = "0x1D07044")]
	public GoTweenConfig onUpdate(Action<AbstractGoTween> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x1D0706C", Offset = "0x1D0706C", VA = "0x1D0706C")]
	public GoTweenConfig onIterationEnd(Action<AbstractGoTween> onIterationEnd)
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x1D07094", Offset = "0x1D07094", VA = "0x1D07094")]
	public GoTweenConfig onComplete(Action<AbstractGoTween> onComplete)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1D070BC", Offset = "0x1D070BC", VA = "0x1D070BC")]
	public GoTweenConfig setId(int id)
	{
		return null;
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1D01300", Offset = "0x1D01300", VA = "0x1D01300")]
	public GoTweenConfig()
	{
	}
}
[Token(Token = "0x200001C")]
public class GoTweenFlow : AbstractGoTweenCollection
{
	[Serializable]
	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9454", Offset = "0xFB9454")]
	private sealed class <>c
	{
		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<TweenFlowItem> <>9__2_0;

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x1855DA8", Offset = "0x1855DA8", VA = "0x1855DA8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x1855DB0", Offset = "0x1855DB0", VA = "0x1855DB0")]
		internal int <insert>b__2_0(TweenFlowItem x, TweenFlowItem y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x185599C", Offset = "0x185599C", VA = "0x185599C")]
	public GoTweenFlow()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1855A04", Offset = "0x1855A04", VA = "0x1855A04")]
	public GoTweenFlow(GoTweenCollectionConfig config)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1855A0C", Offset = "0x1855A0C", VA = "0x1855A0C")]
	private void insert(TweenFlowItem item)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1855CB4", Offset = "0x1855CB4", VA = "0x1855CB4")]
	public GoTweenFlow insert(float startTime, AbstractGoTween tween)
	{
		return null;
	}
}
[Token(Token = "0x200001D")]
public abstract class AbstractGoTween
{
	[Token(Token = "0x200043E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9464", Offset = "0xFB9464")]
	private sealed class <waitForCompletion>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AbstractGoTween <>4__this;

		[Token(Token = "0x170004CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D26")]
			[Address(RVA = "0x181F614", Offset = "0x181F614", VA = "0x181F614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0x181F67C", Offset = "0x181F67C", VA = "0x181F67C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x181F570", Offset = "0x181F570", VA = "0x181F570")]
		[DebuggerHidden]
		public <waitForCompletion>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x181F5A4", Offset = "0x181F5A4", VA = "0x181F5A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x181F5A8", Offset = "0x181F5A8", VA = "0x181F5A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x181F61C", Offset = "0x181F61C", VA = "0x181F61C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9FDC", Offset = "0xFB9FDC")]
	private GoTweenState <state>k__BackingField;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9FEC", Offset = "0xFB9FEC")]
	private float <duration>k__BackingField;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9FFC", Offset = "0xFB9FFC")]
	private float <totalDuration>k__BackingField;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA00C", Offset = "0xFBA00C")]
	private float <timeScale>k__BackingField;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA01C", Offset = "0xFBA01C")]
	private GoUpdateType <updateType>k__BackingField;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA02C", Offset = "0xFBA02C")]
	private GoLoopType <loopType>k__BackingField;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA03C", Offset = "0xFBA03C")]
	private int <iterations>k__BackingField;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA04C", Offset = "0xFBA04C")]
	private bool <autoRemoveOnComplete>k__BackingField;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA05C", Offset = "0xFBA05C")]
	private bool <isReversed>k__BackingField;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA06C", Offset = "0xFBA06C")]
	private bool <allowEvents>k__BackingField;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	protected bool _didInit;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected bool _didBegin;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	protected bool _fireIterationStart;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	protected bool _fireIterationEnd;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float _elapsedTime;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float _totalElapsedTime;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool _isLoopingBackOnPingPong;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool _didIterateLastFrame;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	protected bool _didIterateThisFrame;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int _deltaIterations;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected int _completedIterations;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Action<AbstractGoTween> _onInit;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Action<AbstractGoTween> _onBegin;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Action<AbstractGoTween> _onIterationStart;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Action<AbstractGoTween> _onUpdate;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Action<AbstractGoTween> _onIterationEnd;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Action<AbstractGoTween> _onComplete;

	[Token(Token = "0x1700000C")]
	public GoTweenState state
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x181EB80", Offset = "0x181EB80", VA = "0x181EB80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5F90", Offset = "0xFC5F90")]
		get
		{
			return default(GoTweenState);
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x181EB88", Offset = "0x181EB88", VA = "0x181EB88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5FA0", Offset = "0xFC5FA0")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public float duration
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x181EB90", Offset = "0x181EB90", VA = "0x181EB90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5FB0", Offset = "0xFC5FB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x181EB98", Offset = "0x181EB98", VA = "0x181EB98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5FC0", Offset = "0xFC5FC0")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public float totalDuration
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x181EBA0", Offset = "0x181EBA0", VA = "0x181EBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5FD0", Offset = "0xFC5FD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x181EBA8", Offset = "0x181EBA8", VA = "0x181EBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5FE0", Offset = "0xFC5FE0")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public float timeScale
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x181EBB0", Offset = "0x181EBB0", VA = "0x181EBB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5FF0", Offset = "0xFC5FF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x181EBB8", Offset = "0x181EBB8", VA = "0x181EBB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6000", Offset = "0xFC6000")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public GoUpdateType updateType
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x181EBC0", Offset = "0x181EBC0", VA = "0x181EBC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6010", Offset = "0xFC6010")]
		get
		{
			return default(GoUpdateType);
		}
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x181EBC8", Offset = "0x181EBC8", VA = "0x181EBC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6020", Offset = "0xFC6020")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public GoLoopType loopType
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x181EBD0", Offset = "0x181EBD0", VA = "0x181EBD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6030", Offset = "0xFC6030")]
		get
		{
			return default(GoLoopType);
		}
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x181EBD8", Offset = "0x181EBD8", VA = "0x181EBD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6040", Offset = "0xFC6040")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public int iterations
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x181EBE0", Offset = "0x181EBE0", VA = "0x181EBE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6050", Offset = "0xFC6050")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x181EBE8", Offset = "0x181EBE8", VA = "0x181EBE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6060", Offset = "0xFC6060")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public bool autoRemoveOnComplete
	{
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x181EBF0", Offset = "0x181EBF0", VA = "0x181EBF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6070", Offset = "0xFC6070")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x181EBF8", Offset = "0x181EBF8", VA = "0x181EBF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6080", Offset = "0xFC6080")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool isReversed
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x181EC04", Offset = "0x181EC04", VA = "0x181EC04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6090", Offset = "0xFC6090")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x181EC0C", Offset = "0x181EC0C", VA = "0x181EC0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC60A0", Offset = "0xFC60A0")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public bool allowEvents
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x181EC18", Offset = "0x181EC18", VA = "0x181EC18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC60B0", Offset = "0xFC60B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x181EC20", Offset = "0x181EC20", VA = "0x181EC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC60C0", Offset = "0xFC60C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public float totalElapsedTime
	{
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x181EC2C", Offset = "0x181EC2C", VA = "0x181EC2C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000017")]
	public bool isLoopingBackOnPingPong
	{
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x181EC34", Offset = "0x181EC34", VA = "0x181EC34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public int completedIterations
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x181EC3C", Offset = "0x181EC3C", VA = "0x181EC3C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x181EC44", Offset = "0x181EC44", VA = "0x181EC44")]
	public void setOnInitHandler(Action<AbstractGoTween> onInit)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x181EC4C", Offset = "0x181EC4C", VA = "0x181EC4C")]
	public void setOnBeginHandler(Action<AbstractGoTween> onBegin)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x181EC54", Offset = "0x181EC54", VA = "0x181EC54")]
	public void setonIterationStartHandler(Action<AbstractGoTween> onIterationStart)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x181EC5C", Offset = "0x181EC5C", VA = "0x181EC5C")]
	public void setOnUpdateHandler(Action<AbstractGoTween> onUpdate)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x181EC64", Offset = "0x181EC64", VA = "0x181EC64")]
	public void setonIterationEndHandler(Action<AbstractGoTween> onIterationEnd)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x181EC6C", Offset = "0x181EC6C", VA = "0x181EC6C")]
	public void setOnCompleteHandler(Action<AbstractGoTween> onComplete)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x181EC74", Offset = "0x181EC74", VA = "0x181EC74", Slot = "4")]
	protected virtual void onInit()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x181ECE0", Offset = "0x181ECE0", VA = "0x181ECE0", Slot = "5")]
	protected virtual void onBegin()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x181ED70", Offset = "0x181ED70", VA = "0x181ED70", Slot = "6")]
	protected virtual void onIterationStart()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x181EDDC", Offset = "0x181EDDC", VA = "0x181EDDC", Slot = "7")]
	protected virtual void onUpdate()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x181EE48", Offset = "0x181EE48", VA = "0x181EE48", Slot = "8")]
	protected virtual void onIterationEnd()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x181EEB4", Offset = "0x181EEB4", VA = "0x181EEB4", Slot = "9")]
	protected virtual void onComplete()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x181EF20", Offset = "0x181EF20", VA = "0x181EF20", Slot = "10")]
	public virtual bool update(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600010C")]
	public abstract bool isValid();

	[Token(Token = "0x600010D")]
	public abstract bool removeTweenProperty(AbstractTweenProperty property);

	[Token(Token = "0x600010E")]
	public abstract bool containsTweenProperty(AbstractTweenProperty property);

	[Token(Token = "0x600010F")]
	public abstract List<AbstractTweenProperty> allTweenProperties();

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x181F228", Offset = "0x181F228", VA = "0x181F228", Slot = "15")]
	public virtual void destroy()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x181F234", Offset = "0x181F234", VA = "0x181F234", Slot = "16")]
	public virtual void pause()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x181F240", Offset = "0x181F240", VA = "0x181F240", Slot = "17")]
	public virtual void play()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x181F248", Offset = "0x181F248", VA = "0x181F248")]
	public void playForward()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x181F290", Offset = "0x181F290", VA = "0x181F290")]
	public void playBackwards()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x181F2D8", Offset = "0x181F2D8", VA = "0x181F2D8", Slot = "18")]
	protected virtual void reset(bool skipDelay = true)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x181F328", Offset = "0x181F328", VA = "0x181F328", Slot = "19")]
	public virtual void rewind(bool skipDelay = true)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x181F368", Offset = "0x181F368", VA = "0x181F368")]
	public void restart(bool skipDelay = true)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x181F3A8", Offset = "0x181F3A8", VA = "0x181F3A8", Slot = "20")]
	public virtual void reverse()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x181F484", Offset = "0x181F484", VA = "0x181F484", Slot = "21")]
	public virtual void complete()
	{
	}

	[Token(Token = "0x600011A")]
	public abstract void goTo(float time, bool skipDelay = true);

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x181F4B4", Offset = "0x181F4B4", VA = "0x181F4B4")]
	public void goToAndPlay(float time, bool skipDelay = true)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x181F4F4", Offset = "0x181F4F4", VA = "0x181F4F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC60D0", Offset = "0xFC60D0")]
	public IEnumerator waitForCompletion()
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x181F59C", Offset = "0x181F59C", VA = "0x181F59C")]
	protected AbstractGoTween()
	{
	}
}
[Token(Token = "0x200001E")]
public class AbstractGoTweenCollection : AbstractGoTween
{
	[Token(Token = "0x200043F")]
	protected class TweenFlowItem
	{
		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startTime;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float duration;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AbstractGoTween tween;

		[Token(Token = "0x170004D0")]
		public float endTime
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0x1820428", Offset = "0x1820428", VA = "0x1820428")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x1820AB0", Offset = "0x1820AB0", VA = "0x1820AB0")]
		public TweenFlowItem(float startTime, AbstractGoTween tween)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x1820B14", Offset = "0x1820B14", VA = "0x1820B14")]
		public TweenFlowItem(float startTime, float duration)
		{
		}
	}

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected List<TweenFlowItem> _tweenFlows;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x181F684", Offset = "0x181F684", VA = "0x181F684")]
	public AbstractGoTweenCollection(GoTweenCollectionConfig config)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x181F7D8", Offset = "0x181F7D8", VA = "0x181F7D8")]
	public List<GoTween> tweensWithTarget(object target)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x181FA08", Offset = "0x181FA08", VA = "0x181FA08", Slot = "12")]
	public override bool removeTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x181FB2C", Offset = "0x181FB2C", VA = "0x181FB2C", Slot = "13")]
	public override bool containsTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x181FC54", Offset = "0x181FC54", VA = "0x181FC54", Slot = "14")]
	public override List<AbstractTweenProperty> allTweenProperties()
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x181FDB0", Offset = "0x181FDB0", VA = "0x181FDB0", Slot = "11")]
	public override bool isValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x181FDB8", Offset = "0x181FDB8", VA = "0x181FDB8", Slot = "17")]
	public override void play()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x181FEC4", Offset = "0x181FEC4", VA = "0x181FEC4", Slot = "16")]
	public override void pause()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x181FFD4", Offset = "0x181FFD4", VA = "0x181FFD4", Slot = "10")]
	public override bool update(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1820434", Offset = "0x1820434", VA = "0x1820434", Slot = "20")]
	public override void reverse()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x182063C", Offset = "0x182063C", VA = "0x182063C", Slot = "22")]
	public override void goTo(float time, bool skipDelay = true)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x182093C", Offset = "0x182093C", VA = "0x182093C")]
	private void changeTimeForFlowItem(TweenFlowItem flowItem, float time)
	{
	}
}
[Token(Token = "0x200001F")]
public static class GoEaseBack
{
	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1D00190", Offset = "0x1D00190", VA = "0x1D00190")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1D001C0", Offset = "0x1D001C0", VA = "0x1D001C0")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1D00200", Offset = "0x1D00200", VA = "0x1D00200")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000020")]
public static class GoEaseBounce
{
	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1D00280", Offset = "0x1D00280", VA = "0x1D00280")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1D0034C", Offset = "0x1D0034C", VA = "0x1D0034C")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1D00380", Offset = "0x1D00380", VA = "0x1D00380")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000021")]
public static class GoEaseCircular
{
	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1D00400", Offset = "0x1D00400", VA = "0x1D00400")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x1D004B0", Offset = "0x1D004B0", VA = "0x1D004B0")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1D00560", Offset = "0x1D00560", VA = "0x1D00560")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000022")]
public static class GoEaseCubic
{
	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1D0065C", Offset = "0x1D0065C", VA = "0x1D0065C")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1D00674", Offset = "0x1D00674", VA = "0x1D00674")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1D0069C", Offset = "0x1D0069C", VA = "0x1D0069C")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000023")]
public class GoEaseElastic
{
	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1D006F0", Offset = "0x1D006F0", VA = "0x1D006F0")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1D00810", Offset = "0x1D00810", VA = "0x1D00810")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1D00930", Offset = "0x1D00930", VA = "0x1D00930")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1D00AE4", Offset = "0x1D00AE4", VA = "0x1D00AE4")]
	public static float Punch(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1D00BAC", Offset = "0x1D00BAC", VA = "0x1D00BAC")]
	public GoEaseElastic()
	{
	}
}
[Token(Token = "0x2000024")]
public static class GoEaseExponential
{
	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1D00BB4", Offset = "0x1D00BB4", VA = "0x1D00BB4")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1D00C6C", Offset = "0x1D00C6C", VA = "0x1D00C6C")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1D00D20", Offset = "0x1D00D20", VA = "0x1D00D20")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000025")]
public static class GoEaseLinear
{
	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1D00E50", Offset = "0x1D00E50", VA = "0x1D00E50")]
	public static float EaseNone(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000026")]
public static class GoEaseQuadratic
{
	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1D00E60", Offset = "0x1D00E60", VA = "0x1D00E60")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1D00E74", Offset = "0x1D00E74", VA = "0x1D00E74")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1D00E90", Offset = "0x1D00E90", VA = "0x1D00E90")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000027")]
public static class GoEaseQuartic
{
	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1D00EE4", Offset = "0x1D00EE4", VA = "0x1D00EE4")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1D00F00", Offset = "0x1D00F00", VA = "0x1D00F00")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1D00F28", Offset = "0x1D00F28", VA = "0x1D00F28")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000028")]
public static class GoEaseQuintic
{
	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1D00F84", Offset = "0x1D00F84", VA = "0x1D00F84")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1D00FA4", Offset = "0x1D00FA4", VA = "0x1D00FA4")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1D00FD4", Offset = "0x1D00FD4", VA = "0x1D00FD4")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000029")]
public static class GoEaseSinusoidal
{
	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1D01038", Offset = "0x1D01038", VA = "0x1D01038")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1D010DC", Offset = "0x1D010DC", VA = "0x1D010DC")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1D0117C", Offset = "0x1D0117C", VA = "0x1D0117C")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x200002A")]
public enum GoDuplicatePropertyRuleType
{
	[Token(Token = "0x40000DE")]
	None,
	[Token(Token = "0x40000DF")]
	RemoveRunningProperty,
	[Token(Token = "0x40000E0")]
	DontAddCurrentProperty
}
[Token(Token = "0x200002B")]
public enum GoEaseType
{
	[Token(Token = "0x40000E2")]
	Linear,
	[Token(Token = "0x40000E3")]
	SineIn,
	[Token(Token = "0x40000E4")]
	SineOut,
	[Token(Token = "0x40000E5")]
	SineInOut,
	[Token(Token = "0x40000E6")]
	QuadIn,
	[Token(Token = "0x40000E7")]
	QuadOut,
	[Token(Token = "0x40000E8")]
	QuadInOut,
	[Token(Token = "0x40000E9")]
	CubicIn,
	[Token(Token = "0x40000EA")]
	CubicOut,
	[Token(Token = "0x40000EB")]
	CubicInOut,
	[Token(Token = "0x40000EC")]
	QuartIn,
	[Token(Token = "0x40000ED")]
	QuartOut,
	[Token(Token = "0x40000EE")]
	QuartInOut,
	[Token(Token = "0x40000EF")]
	QuintIn,
	[Token(Token = "0x40000F0")]
	QuintOut,
	[Token(Token = "0x40000F1")]
	QuintInOut,
	[Token(Token = "0x40000F2")]
	ExpoIn,
	[Token(Token = "0x40000F3")]
	ExpoOut,
	[Token(Token = "0x40000F4")]
	ExpoInOut,
	[Token(Token = "0x40000F5")]
	CircIn,
	[Token(Token = "0x40000F6")]
	CircOut,
	[Token(Token = "0x40000F7")]
	CircInOut,
	[Token(Token = "0x40000F8")]
	ElasticIn,
	[Token(Token = "0x40000F9")]
	ElasticOut,
	[Token(Token = "0x40000FA")]
	ElasticInOut,
	[Token(Token = "0x40000FB")]
	Punch,
	[Token(Token = "0x40000FC")]
	BackIn,
	[Token(Token = "0x40000FD")]
	BackOut,
	[Token(Token = "0x40000FE")]
	BackInOut,
	[Token(Token = "0x40000FF")]
	BounceIn,
	[Token(Token = "0x4000100")]
	BounceOut,
	[Token(Token = "0x4000101")]
	BounceInOut
}
[Token(Token = "0x200002C")]
public enum GoLogLevel
{
	[Token(Token = "0x4000103")]
	None,
	[Token(Token = "0x4000104")]
	Info,
	[Token(Token = "0x4000105")]
	Warn,
	[Token(Token = "0x4000106")]
	Error
}
[Token(Token = "0x200002D")]
public enum GoLookAtType
{
	[Token(Token = "0x4000108")]
	None,
	[Token(Token = "0x4000109")]
	NextPathNode,
	[Token(Token = "0x400010A")]
	TargetTransform
}
[Token(Token = "0x200002E")]
public enum GoLoopType
{
	[Token(Token = "0x400010C")]
	RestartFromBeginning,
	[Token(Token = "0x400010D")]
	PingPong
}
[Token(Token = "0x200002F")]
[Flags]
public enum GoShakeType
{
	[Token(Token = "0x400010F")]
	Position = 1,
	[Token(Token = "0x4000110")]
	Scale = 2,
	[Token(Token = "0x4000111")]
	Eulers = 4
}
[Token(Token = "0x2000030")]
public enum GoSplineType
{
	[Token(Token = "0x4000113")]
	StraightLine,
	[Token(Token = "0x4000114")]
	QuadraticBezier,
	[Token(Token = "0x4000115")]
	CubicBezier,
	[Token(Token = "0x4000116")]
	CatmullRom
}
[Token(Token = "0x2000031")]
public enum GoTweenState
{
	[Token(Token = "0x4000118")]
	Running,
	[Token(Token = "0x4000119")]
	Paused,
	[Token(Token = "0x400011A")]
	Complete,
	[Token(Token = "0x400011B")]
	Destroyed
}
[Token(Token = "0x2000032")]
public enum GoUpdateType
{
	[Token(Token = "0x400011D")]
	Update,
	[Token(Token = "0x400011E")]
	LateUpdate,
	[Token(Token = "0x400011F")]
	FixedUpdate,
	[Token(Token = "0x4000120")]
	TimeScaleIndependentUpdate
}
[Token(Token = "0x2000033")]
public static class GoKitTweenExtensions
{
	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1D01230", Offset = "0x1D01230", VA = "0x1D01230")]
	public static GoTween rotationTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1D01494", Offset = "0x1D01494", VA = "0x1D01494")]
	public static GoTween localRotationTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1D01620", Offset = "0x1D01620", VA = "0x1D01620")]
	public static GoTween eulerAnglesTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1D017AC", Offset = "0x1D017AC", VA = "0x1D017AC")]
	public static GoTween localEulerAnglesTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1D01938", Offset = "0x1D01938", VA = "0x1D01938")]
	public static GoTween positionTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1D01AC4", Offset = "0x1D01AC4", VA = "0x1D01AC4")]
	public static GoTween localPositionTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1D01C50", Offset = "0x1D01C50", VA = "0x1D01C50")]
	public static GoTween scaleTo(this Transform self, float duration, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1D01CB8", Offset = "0x1D01CB8", VA = "0x1D01CB8")]
	public static GoTween scaleTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1D01E40", Offset = "0x1D01E40", VA = "0x1D01E40")]
	public static GoTween shake(this Transform self, float duration, Vector3 shakeMagnitude, GoShakeType shakeType = GoShakeType.Position, int frameMod = 1, bool useLocalProperties = false)
	{
		return null;
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1D01FF8", Offset = "0x1D01FF8", VA = "0x1D01FF8")]
	public static GoTween rotationFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1D020C8", Offset = "0x1D020C8", VA = "0x1D020C8")]
	public static GoTween localRotationFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1D02198", Offset = "0x1D02198", VA = "0x1D02198")]
	public static GoTween eulerAnglesFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1D02268", Offset = "0x1D02268", VA = "0x1D02268")]
	public static GoTween localEulerAnglesFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1D02338", Offset = "0x1D02338", VA = "0x1D02338")]
	public static GoTween positionFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1D02408", Offset = "0x1D02408", VA = "0x1D02408")]
	public static GoTween localPositionFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1D024D8", Offset = "0x1D024D8", VA = "0x1D024D8")]
	public static GoTween scaleFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1D025A8", Offset = "0x1D025A8", VA = "0x1D025A8")]
	public static GoTween colorTo(this Material self, float duration, Color endValue, string colorName = "_Color")
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1D02754", Offset = "0x1D02754", VA = "0x1D02754")]
	public static GoTween colorFrom(this Material self, float duration, Color endValue, string colorName = "_Color")
	{
		return null;
	}
}
[Token(Token = "0x2000034")]
public static class GoTweenUtils
{
	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1855DD8", Offset = "0x1855DD8", VA = "0x1855DD8")]
	public static Func<float, float, float, float, float> easeFunctionForType(GoEaseType easeType)
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	public static T setterForProperty<T>(object targetObject, string propertyName)
	{
		return (T)null;
	}

	[Token(Token = "0x600015F")]
	public static T getterForProperty<T>(object targetObject, string propertyName)
	{
		return (T)null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x18561D4", Offset = "0x18561D4", VA = "0x18561D4")]
	public static Color unclampedColorLerp(Color c1, Color diff, float value)
	{
		return default(Color);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1856228", Offset = "0x1856228", VA = "0x1856228")]
	public static Vector2 unclampedVector2Lerp(Vector2 v1, Vector2 diff, float value)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1856264", Offset = "0x1856264", VA = "0x1856264")]
	public static Vector3 unclampedVector3Lerp(Vector3 v1, Vector3 diff, float value)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x18562B0", Offset = "0x18562B0", VA = "0x18562B0")]
	public static Vector4 unclampedVector4Lerp(Vector4 v1, Vector4 diff, float value)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000035")]
public abstract class AbstractColorTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Material _target;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Color _originalEndValue;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Color _startValue;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Color _endValue;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Color _diffValue;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x181E3AC", Offset = "0x181E3AC", VA = "0x181E3AC")]
	public AbstractColorTweenProperty(Color endValue, bool isRelative)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x181E434", Offset = "0x181E434", VA = "0x181E434", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x181E544", Offset = "0x181E544", VA = "0x181E544", Slot = "4")]
	public override void init(GoTween owner)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x181E70C", Offset = "0x181E70C", VA = "0x181E70C", Slot = "7")]
	public override void prepareForUse()
	{
	}
}
[Token(Token = "0x2000036")]
public abstract class AbstractQuaternionTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform _target;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Quaternion _originalEndValue;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Quaternion _startValue;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Quaternion _endValue;

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1820B4C", Offset = "0x1820B4C", VA = "0x1820B4C")]
	public AbstractQuaternionTweenProperty()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1820B74", Offset = "0x1820B74", VA = "0x1820B74")]
	public AbstractQuaternionTweenProperty(Quaternion endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1820BCC", Offset = "0x1820BCC", VA = "0x1820BCC", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1820C4C", Offset = "0x1820C4C", VA = "0x1820C4C", Slot = "7")]
	public override void prepareForUse()
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class AbstractTweenProperty
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected bool _isInitialized;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	protected bool _isRelative;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected GoTween _ownerTween;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Func<float, float, float, float, float> _easeFunction;

	[Token(Token = "0x17000019")]
	public bool isInitialized
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x1820D28", Offset = "0x1820D28", VA = "0x1820D28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x181E404", Offset = "0x181E404", VA = "0x181E404")]
	public AbstractTweenProperty(bool isRelative = false)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1820D30", Offset = "0x1820D30", VA = "0x1820D30", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1820D38", Offset = "0x1820D38", VA = "0x1820D38", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x181E6A8", Offset = "0x181E6A8", VA = "0x181E6A8", Slot = "4")]
	public virtual void init(GoTween owner)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1820FE4", Offset = "0x1820FE4", VA = "0x1820FE4")]
	public AbstractTweenProperty clone()
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1820FB0", Offset = "0x1820FB0", VA = "0x1820FB0")]
	public void setEaseType(GoEaseType easeType)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1821098", Offset = "0x1821098", VA = "0x1821098", Slot = "5")]
	public virtual bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000174")]
	public abstract void tick(float totalElapsedTime);

	[Token(Token = "0x6000175")]
	public abstract void prepareForUse();
}
[Token(Token = "0x2000038")]
public abstract class AbstractVector3TweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform _target;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 _originalEndValue;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Vector3 _startValue;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector3 _endValue;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Vector3 _diffValue;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x18210A0", Offset = "0x18210A0", VA = "0x18210A0")]
	public AbstractVector3TweenProperty()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x18210C8", Offset = "0x18210C8", VA = "0x18210C8")]
	public AbstractVector3TweenProperty(Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x182111C", Offset = "0x182111C", VA = "0x182111C", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x182119C", Offset = "0x182119C", VA = "0x182119C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1821278", Offset = "0x1821278", VA = "0x1821278")]
	public void resetWithNewEndValue(Vector3 endValue)
	{
	}
}
[Token(Token = "0x2000039")]
public class ColorTweenProperty : AbstractColorTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA07C", Offset = "0xFBA07C")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action<Color> _setter;

	[Token(Token = "0x1700001A")]
	public string propertyName
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x1834D58", Offset = "0x1834D58", VA = "0x1834D58", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6254", Offset = "0xFC6254")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x1834D60", Offset = "0x1834D60", VA = "0x1834D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6264", Offset = "0xFC6264")]
		private set
		{
		}
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x1834D68", Offset = "0x1834D68", VA = "0x1834D68")]
	public ColorTweenProperty(string propertyName, Color endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x1834DD8", Offset = "0x1834DD8", VA = "0x1834DD8", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1834E58", Offset = "0x1834E58", VA = "0x1834E58", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1834F24", Offset = "0x1834F24", VA = "0x1834F24", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200003A")]
public class FloatTweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA08C", Offset = "0xFBA08C")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<float> _setter;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float _originalEndValue;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float _startValue;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float _endValue;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float _diffValue;

	[Token(Token = "0x1700001B")]
	public string propertyName
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x1CFDDA8", Offset = "0x1CFDDA8", VA = "0x1CFDDA8", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6274", Offset = "0xFC6274")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x1CFDDB0", Offset = "0x1CFDDB0", VA = "0x1CFDDB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6284", Offset = "0xFC6284")]
		private set
		{
		}
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1CFDDB8", Offset = "0x1CFDDB8", VA = "0x1CFDDB8")]
	public FloatTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1CFDE04", Offset = "0x1CFDE04", VA = "0x1CFDE04", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1CFDE84", Offset = "0x1CFDE84", VA = "0x1CFDE84", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1CFDF68", Offset = "0x1CFDF68", VA = "0x1CFDF68", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200003B")]
public interface IGenericProperty
{
	[Token(Token = "0x1700001C")]
	string propertyName
	{
		[Token(Token = "0x6000187")]
		get;
	}
}
[Token(Token = "0x200003C")]
public class IntTweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA09C", Offset = "0xFBA09C")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<int> _setter;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int _originalEndValue;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int _startValue;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int _endValue;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int _diffValue;

	[Token(Token = "0x1700001D")]
	public string propertyName
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x1856304", Offset = "0x1856304", VA = "0x1856304", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6294", Offset = "0xFC6294")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x185630C", Offset = "0x185630C", VA = "0x185630C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC62A4", Offset = "0xFC62A4")]
		private set
		{
		}
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1856314", Offset = "0x1856314", VA = "0x1856314")]
	public IntTweenProperty(string propertyName, int endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1856360", Offset = "0x1856360", VA = "0x1856360", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x18563E0", Offset = "0x18563E0", VA = "0x18563E0", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x18564C0", Offset = "0x18564C0", VA = "0x18564C0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200003D")]
public class Vector2TweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA0AC", Offset = "0xFBA0AC")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Vector2> _setter;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector2 _originalEndValue;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 _startValue;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2 _endValue;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector2 _diffValue;

	[Token(Token = "0x1700001E")]
	public string propertyName
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x16FDC3C", Offset = "0x16FDC3C", VA = "0x16FDC3C", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC62B4", Offset = "0xFC62B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x16FDC44", Offset = "0x16FDC44", VA = "0x16FDC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC62C4", Offset = "0xFC62C4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x16FDC4C", Offset = "0x16FDC4C", VA = "0x16FDC4C")]
	public Vector2TweenProperty(string propertyName, Vector2 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x16FDC9C", Offset = "0x16FDC9C", VA = "0x16FDC9C", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x16FDD1C", Offset = "0x16FDD1C", VA = "0x16FDD1C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x16FDE48", Offset = "0x16FDE48", VA = "0x16FDE48", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200003E")]
public class Vector3PathTweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA0BC", Offset = "0xFBA0BC")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Vector3> _setter;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GoSpline _path;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _startValue;

	[Token(Token = "0x1700001F")]
	public string propertyName
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x16FDEF8", Offset = "0x16FDEF8", VA = "0x16FDEF8", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC62D4", Offset = "0xFC62D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x16FDF00", Offset = "0x16FDF00", VA = "0x16FDF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC62E4", Offset = "0xFC62E4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x16FDF08", Offset = "0x16FDF08", VA = "0x16FDF08")]
	public Vector3PathTweenProperty(string propertyName, GoSpline path, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x16FDF5C", Offset = "0x16FDF5C", VA = "0x16FDF5C", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x16FDFDC", Offset = "0x16FDFDC", VA = "0x16FDFDC", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x16FE0B4", Offset = "0x16FE0B4", VA = "0x16FE0B4", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200003F")]
public class Vector3TweenProperty : AbstractVector3TweenProperty, IGenericProperty
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA0CC", Offset = "0xFBA0CC")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action<Vector3> _setter;

	[Token(Token = "0x17000020")]
	public string propertyName
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x16FE1DC", Offset = "0x16FE1DC", VA = "0x16FE1DC", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC62F4", Offset = "0xFC62F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x16FE1E4", Offset = "0x16FE1E4", VA = "0x16FE1E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6304", Offset = "0xFC6304")]
		private set
		{
		}
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x16FE1EC", Offset = "0x16FE1EC", VA = "0x16FE1EC")]
	public Vector3TweenProperty(string propertyName, Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x16FE224", Offset = "0x16FE224", VA = "0x16FE224", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x16FE2A4", Offset = "0x16FE2A4", VA = "0x16FE2A4", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x16FE374", Offset = "0x16FE374", VA = "0x16FE374", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000040")]
public class Vector3XTweenProperty : AbstractVector3TweenProperty, IGenericProperty
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA0DC", Offset = "0xFBA0DC")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Action<Vector3> _setter;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Func<Vector3> _getter;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected new float _originalEndValue;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected new float _startValue;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected new float _endValue;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected new float _diffValue;

	[Token(Token = "0x17000021")]
	public string propertyName
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x16FE42C", Offset = "0x16FE42C", VA = "0x16FE42C", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6314", Offset = "0xFC6314")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x16FE434", Offset = "0x16FE434", VA = "0x16FE434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6324", Offset = "0xFC6324")]
		private set
		{
		}
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x16FE43C", Offset = "0x16FE43C", VA = "0x16FE43C")]
	public Vector3XTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x16FE498", Offset = "0x16FE498", VA = "0x16FE498", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x16FE518", Offset = "0x16FE518", VA = "0x16FE518", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x16FE618", Offset = "0x16FE618", VA = "0x16FE618", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000041")]
public class Vector3YTweenProperty : Vector3XTweenProperty
{
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x16FE6DC", Offset = "0x16FE6DC", VA = "0x16FE6DC")]
	public Vector3YTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x16FE738", Offset = "0x16FE738", VA = "0x16FE738", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x16FE838", Offset = "0x16FE838", VA = "0x16FE838", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000042")]
public class Vector3ZTweenProperty : Vector3XTweenProperty
{
	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x16FE900", Offset = "0x16FE900", VA = "0x16FE900")]
	public Vector3ZTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x16FE95C", Offset = "0x16FE95C", VA = "0x16FE95C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x16FEA5C", Offset = "0x16FEA5C", VA = "0x16FEA5C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000043")]
public class Vector4TweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA0EC", Offset = "0xFBA0EC")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Vector4> _setter;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector4 _originalEndValue;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector4 _startValue;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector4 _endValue;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector4 _diffValue;

	[Token(Token = "0x17000022")]
	public string propertyName
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x16FEB24", Offset = "0x16FEB24", VA = "0x16FEB24", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6334", Offset = "0xFC6334")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x16FEB2C", Offset = "0x16FEB2C", VA = "0x16FEB2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6344", Offset = "0xFC6344")]
		private set
		{
		}
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x16FEB34", Offset = "0x16FEB34", VA = "0x16FEB34")]
	public Vector4TweenProperty(string propertyName, Vector4 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x16FEB98", Offset = "0x16FEB98", VA = "0x16FEB98", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x16FEC18", Offset = "0x16FEC18", VA = "0x16FEC18", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x16FED7C", Offset = "0x16FED7C", VA = "0x16FED7C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000044")]
public struct GoSmoothedQuaternion
{
	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GoSmoothingType smoothingType;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float duration;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Quaternion _currentValue;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion _target;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion _start;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _startTime;

	[Token(Token = "0x17000023")]
	public Quaternion smoothValue
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x113418C", Offset = "0x113418C", VA = "0x113418C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x1134194", Offset = "0x1134194", VA = "0x1134194")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float x
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x113419C", Offset = "0x113419C", VA = "0x113419C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x11341A4", Offset = "0x11341A4", VA = "0x11341A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public float y
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x11341AC", Offset = "0x11341AC", VA = "0x11341AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x11341B4", Offset = "0x11341B4", VA = "0x11341B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public float z
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x11341BC", Offset = "0x11341BC", VA = "0x11341BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x11341C4", Offset = "0x11341C4", VA = "0x11341C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public float w
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x11341CC", Offset = "0x11341CC", VA = "0x11341CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x11341D4", Offset = "0x11341D4", VA = "0x11341D4")]
		set
		{
		}
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1134184", Offset = "0x1134184", VA = "0x1134184")]
	public GoSmoothedQuaternion(Quaternion quat)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1D02BA4", Offset = "0x1D02BA4", VA = "0x1D02BA4")]
	public static implicit operator GoSmoothedQuaternion(Quaternion q)
	{
		return default(GoSmoothedQuaternion);
	}
}
[Token(Token = "0x2000045")]
public struct GoSmoothedVector3
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GoSmoothingType smoothingType;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float duration;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Vector3 _currentValue;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 _target;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _start;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _startTime;

	[Token(Token = "0x17000028")]
	public Vector3 smoothValue
	{
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x1134224", Offset = "0x1134224", VA = "0x1134224")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x113422C", Offset = "0x113422C", VA = "0x113422C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public float x
	{
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x1134234", Offset = "0x1134234", VA = "0x1134234")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x113423C", Offset = "0x113423C", VA = "0x113423C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float y
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x1134244", Offset = "0x1134244", VA = "0x1134244")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x113424C", Offset = "0x113424C", VA = "0x113424C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public float z
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x1134254", Offset = "0x1134254", VA = "0x1134254")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x113425C", Offset = "0x113425C", VA = "0x113425C")]
		set
		{
		}
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x11341DC", Offset = "0x11341DC", VA = "0x11341DC")]
	public GoSmoothedVector3(Vector3 vector)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1D02EA4", Offset = "0x1D02EA4", VA = "0x1D02EA4")]
	public static implicit operator GoSmoothedVector3(Vector3 v)
	{
		return default(GoSmoothedVector3);
	}
}
[Token(Token = "0x2000046")]
public enum GoSmoothingType
{
	[Token(Token = "0x4000167")]
	Lerp,
	[Token(Token = "0x4000168")]
	Slerp
}
[Token(Token = "0x2000047")]
public class EulerAnglesTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalEulers;

	[Token(Token = "0x1700002C")]
	public bool useLocalEulers
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x18B36E8", Offset = "0x18B36E8", VA = "0x18B36E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x18B36F0", Offset = "0x18B36F0", VA = "0x18B36F0")]
	public EulerAnglesTweenProperty(Vector3 endValue, bool isRelative = false, bool useLocalEulers = false)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x18B3724", Offset = "0x18B3724", VA = "0x18B3724", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x18B372C", Offset = "0x18B372C", VA = "0x18B372C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x18B3854", Offset = "0x18B3854", VA = "0x18B3854", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x18B3980", Offset = "0x18B3980", VA = "0x18B3980", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000048")]
public class MaterialColorTweenProperty : AbstractColorTweenProperty
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _materialColorName;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1856C20", Offset = "0x1856C20", VA = "0x1856C20")]
	public MaterialColorTweenProperty(Color endValue, string colorName = "_Color", bool isRelative = false)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1856C58", Offset = "0x1856C58", VA = "0x1856C58", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1856C60", Offset = "0x1856C60", VA = "0x1856C60", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1856D24", Offset = "0x1856D24", VA = "0x1856D24", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1856DB0", Offset = "0x1856DB0", VA = "0x1856DB0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000049")]
public class PositionPathTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool _useLocalPosition;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Transform _target;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector3 _startValue;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GoSpline _path;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GoLookAtType _lookAtType;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _lookTarget;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GoSmoothedQuaternion _smoothedRotation;

	[Token(Token = "0x1700002D")]
	public bool useLocalPosition
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x1953E0C", Offset = "0x1953E0C", VA = "0x1953E0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1953E14", Offset = "0x1953E14", VA = "0x1953E14")]
	public PositionPathTweenProperty(GoSpline path, bool isRelative = false, bool useLocalPosition = false, GoLookAtType lookAtType = GoLookAtType.None, [Optional] Transform lookTarget)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1953E84", Offset = "0x1953E84", VA = "0x1953E84", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1953E8C", Offset = "0x1953E8C", VA = "0x1953E8C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1953FB4", Offset = "0x1953FB4", VA = "0x1953FB4", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x195416C", Offset = "0x195416C", VA = "0x195416C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200004A")]
public class PositionTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool _useLocalPosition;

	[Token(Token = "0x1700002E")]
	public bool useLocalPosition
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1954444", Offset = "0x1954444", VA = "0x1954444")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x195444C", Offset = "0x195444C", VA = "0x195444C")]
	public PositionTweenProperty(Vector3 endValue, bool isRelative = false, bool useLocalPosition = false)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1954480", Offset = "0x1954480", VA = "0x1954480", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1954488", Offset = "0x1954488", VA = "0x1954488", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x19545B0", Offset = "0x19545B0", VA = "0x19545B0", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x19547E8", Offset = "0x19547E8", VA = "0x19547E8", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200004B")]
public class RotationQuaternionTweenProperty : AbstractQuaternionTweenProperty
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalRotation;

	[Token(Token = "0x1700002F")]
	public bool useLocalRotation
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x1B6F434", Offset = "0x1B6F434", VA = "0x1B6F434")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1B6F43C", Offset = "0x1B6F43C", VA = "0x1B6F43C")]
	public RotationQuaternionTweenProperty(Quaternion endValue, bool isRelative = false, bool useLocalRotation = false)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1B6F470", Offset = "0x1B6F470", VA = "0x1B6F470", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1B6F478", Offset = "0x1B6F478", VA = "0x1B6F478", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1B6F540", Offset = "0x1B6F540", VA = "0x1B6F540", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1B6F66C", Offset = "0x1B6F66C", VA = "0x1B6F66C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200004C")]
public class RotationTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalRotation;

	[Token(Token = "0x17000030")]
	public bool useLocalRotation
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x1B6F7AC", Offset = "0x1B6F7AC", VA = "0x1B6F7AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1B6F7B4", Offset = "0x1B6F7B4", VA = "0x1B6F7B4")]
	public RotationTweenProperty(Vector3 endValue, bool isRelative = false, bool useLocalRotation = false)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1B6F7E8", Offset = "0x1B6F7E8", VA = "0x1B6F7E8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1B6F7F0", Offset = "0x1B6F7F0", VA = "0x1B6F7F0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1B6F918", Offset = "0x1B6F918", VA = "0x1B6F918", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x1B6FB90", Offset = "0x1B6FB90", VA = "0x1B6FB90", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200004D")]
public class ScalePathTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform _target;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 _startValue;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GoSpline _path;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1B7A0DC", Offset = "0x1B7A0DC", VA = "0x1B7A0DC")]
	public ScalePathTweenProperty(GoSpline path, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1B7A114", Offset = "0x1B7A114", VA = "0x1B7A114", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1B7A11C", Offset = "0x1B7A11C", VA = "0x1B7A11C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1B7A1F0", Offset = "0x1B7A1F0", VA = "0x1B7A1F0", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1B7A308", Offset = "0x1B7A308", VA = "0x1B7A308", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200004E")]
public class ScaleTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x1B7A428", Offset = "0x1B7A428", VA = "0x1B7A428")]
	public ScaleTweenProperty(Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1B7A434", Offset = "0x1B7A434", VA = "0x1B7A434", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1B7A43C", Offset = "0x1B7A43C", VA = "0x1B7A43C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x1B7A510", Offset = "0x1B7A510", VA = "0x1B7A510", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1B7A614", Offset = "0x1B7A614", VA = "0x1B7A614", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200004F")]
public class ShakeTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _target;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _shakeMagnitude;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _originalEndValue;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _startPosition;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _startScale;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _startEulers;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private GoShakeType _shakeType;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _frameCount;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _frameMod;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _useLocalProperties;

	[Token(Token = "0x17000031")]
	public bool useLocalProperties
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x16E8560", Offset = "0x16E8560", VA = "0x16E8560")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x16E8568", Offset = "0x16E8568", VA = "0x16E8568")]
	public ShakeTweenProperty(Vector3 shakeMagnitude, GoShakeType shakeType, int frameMod = 1, bool useLocalProperties = false)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x16E85D8", Offset = "0x16E85D8", VA = "0x16E85D8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x16E85E0", Offset = "0x16E85E0", VA = "0x16E85E0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x16E869C", Offset = "0x16E869C", VA = "0x16E869C", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x16E871C", Offset = "0x16E871C", VA = "0x16E871C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x16E8834", Offset = "0x16E8834", VA = "0x16E8834")]
	private Vector3 randomDiminishingTarget(float falloffValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x16E88D0", Offset = "0x16E88D0", VA = "0x16E88D0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000050")]
public abstract class AbstractGoSplineSolver
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected List<Vector3> _nodes;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float _pathLength;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int totalSubdivisionsPerNodeForLookupTable;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Dictionary<float, float> _segmentTimeForDistance;

	[Token(Token = "0x17000032")]
	public List<Vector3> nodes
	{
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x181E770", Offset = "0x181E770", VA = "0x181E770")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x181E778", Offset = "0x181E778", VA = "0x181E778")]
	public float getTotalLength()
	{
		return default(float);
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x181E7D4", Offset = "0x181E7D4", VA = "0x181E7D4", Slot = "4")]
	public virtual void buildPath()
	{
	}

	[Token(Token = "0x6000200")]
	public abstract void closePath();

	[Token(Token = "0x6000201")]
	public abstract Vector3 getPoint(float t);

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x181E984", Offset = "0x181E984", VA = "0x181E984", Slot = "7")]
	public virtual Vector3 getPointOnPath(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x181EB14", Offset = "0x181EB14", VA = "0x181EB14")]
	public void reverseNodes()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x181EB6C", Offset = "0x181EB6C", VA = "0x181EB6C", Slot = "8")]
	public virtual void drawGizmos()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x181EB70", Offset = "0x181EB70", VA = "0x181EB70")]
	protected AbstractGoSplineSolver()
	{
	}
}
[Token(Token = "0x2000051")]
public class GoSpline
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA0FC", Offset = "0xFBA0FC")]
	private int <currentSegment>k__BackingField;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA10C", Offset = "0xFBA10C")]
	private bool <isClosed>k__BackingField;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA11C", Offset = "0xFBA11C")]
	private GoSplineType <splineType>k__BackingField;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isReversed;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AbstractGoSplineSolver _solver;

	[Token(Token = "0x17000033")]
	public int currentSegment
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x1D02EF8", Offset = "0x1D02EF8", VA = "0x1D02EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6354", Offset = "0xFC6354")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x1D02F00", Offset = "0x1D02F00", VA = "0x1D02F00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6364", Offset = "0xFC6364")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public bool isClosed
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1D02F08", Offset = "0x1D02F08", VA = "0x1D02F08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6374", Offset = "0xFC6374")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x1D02F10", Offset = "0x1D02F10", VA = "0x1D02F10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6384", Offset = "0xFC6384")]
		private set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public GoSplineType splineType
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x1D02F1C", Offset = "0x1D02F1C", VA = "0x1D02F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6394", Offset = "0xFC6394")]
		get
		{
			return default(GoSplineType);
		}
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x1D02F24", Offset = "0x1D02F24", VA = "0x1D02F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC63A4", Offset = "0xFC63A4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public List<Vector3> nodes
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x1D02F2C", Offset = "0x1D02F2C", VA = "0x1D02F2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1CFFE5C", Offset = "0x1CFFE5C", VA = "0x1CFFE5C")]
	public GoSpline(List<Vector3> nodes, bool useStraightLines = false)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1D03018", Offset = "0x1D03018", VA = "0x1D03018")]
	public GoSpline(Vector3[] nodes, bool useStraightLines = false)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1D0309C", Offset = "0x1D0309C", VA = "0x1D0309C")]
	public GoSpline(string pathAssetName, bool useStraightLines = false)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1D030D0", Offset = "0x1D030D0", VA = "0x1D030D0")]
	private static List<Vector3> nodeListFromAsset(string pathAssetName)
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1D0329C", Offset = "0x1D0329C", VA = "0x1D0329C")]
	public static List<Vector3> bytesToVector3List(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1D033E8", Offset = "0x1D033E8", VA = "0x1D033E8")]
	public Vector3 getLastNode()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1D03460", Offset = "0x1D03460", VA = "0x1D03460")]
	public void buildPath()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1D03480", Offset = "0x1D03480", VA = "0x1D03480")]
	public float GetPathTotalLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1D0349C", Offset = "0x1D0349C", VA = "0x1D0349C")]
	private Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1D034BC", Offset = "0x1D034BC", VA = "0x1D034BC")]
	public Vector3 getPointOnPath(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1D03588", Offset = "0x1D03588", VA = "0x1D03588")]
	public void closePath()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1D035C0", Offset = "0x1D035C0", VA = "0x1D035C0")]
	public void reverseNodes()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x1D03600", Offset = "0x1D03600", VA = "0x1D03600")]
	public void unreverseNodes()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1CFFF58", Offset = "0x1CFFF58", VA = "0x1CFFF58")]
	public void drawGizmos(float resolution)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1D0363C", Offset = "0x1D0363C", VA = "0x1D0363C")]
	public static void drawGizmos(Vector3[] path, float resolution = 50f)
	{
	}
}
[Token(Token = "0x2000052")]
public class GoSplineCatmullRomSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1D02FE4", Offset = "0x1D02FE4", VA = "0x1D02FE4")]
	public GoSplineCatmullRomSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1D036B8", Offset = "0x1D036B8", VA = "0x1D036B8", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1D03BF0", Offset = "0x1D03BF0", VA = "0x1D03BF0", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1D04090", Offset = "0x1D04090", VA = "0x1D04090", Slot = "8")]
	public override void drawGizmos()
	{
	}
}
[Token(Token = "0x2000053")]
public class GoSplineCubicBezierSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x6000220")]
	[Address(RVA = "0x1D02FB0", Offset = "0x1D02FB0", VA = "0x1D02FB0")]
	public GoSplineCubicBezierSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1D04260", Offset = "0x1D04260", VA = "0x1D04260", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1D04264", Offset = "0x1D04264", VA = "0x1D04264", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1D0445C", Offset = "0x1D0445C", VA = "0x1D0445C", Slot = "8")]
	public override void drawGizmos()
	{
	}
}
[Token(Token = "0x2000054")]
public class GoSplineQuadraticBezierSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1D02F7C", Offset = "0x1D02F7C", VA = "0x1D02F7C")]
	public GoSplineQuadraticBezierSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1D045D0", Offset = "0x1D045D0", VA = "0x1D045D0")]
	protected float quadBezierLength(Vector3 startPoint, Vector3 controlPoint, Vector3 endPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x1D0494C", Offset = "0x1D0494C", VA = "0x1D0494C", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1D04950", Offset = "0x1D04950", VA = "0x1D04950", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1D04AD4", Offset = "0x1D04AD4", VA = "0x1D04AD4", Slot = "8")]
	public override void drawGizmos()
	{
	}
}
[Token(Token = "0x2000055")]
public class GoSplineStraightLineSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, float> _segmentStartLocations;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, float> _segmentDistances;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _currentSegment;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1D02F48", Offset = "0x1D02F48", VA = "0x1D02F48")]
	public GoSplineStraightLineSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1D04C48", Offset = "0x1D04C48", VA = "0x1D04C48", Slot = "4")]
	public override void buildPath()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1D04EC4", Offset = "0x1D04EC4", VA = "0x1D04EC4", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1D05014", Offset = "0x1D05014", VA = "0x1D05014", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1D05020", Offset = "0x1D05020", VA = "0x1D05020", Slot = "7")]
	public override Vector3 getPointOnPath(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000056")]
public class ClickToStartDialogue : MonoBehaviour
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DialogueTreeController dialogueController;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1834C78", Offset = "0x1834C78", VA = "0x1834C78")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1834D28", Offset = "0x1834D28", VA = "0x1834D28")]
	private void OnDialogueEnd(bool success)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1834D50", Offset = "0x1834D50", VA = "0x1834D50")]
	public ClickToStartDialogue()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1020", Offset = "0xFB1020")]
public class ClickToMove : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1834B54", Offset = "0x1834B54", VA = "0x1834B54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1834BB4", Offset = "0x1834BB4", VA = "0x1834BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1834C70", Offset = "0x1834C70", VA = "0x1834C70")]
	public ClickToMove()
	{
	}
}
[Token(Token = "0x2000058")]
public class DataBindExample : MonoBehaviour
{
	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _myFloat;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x17000037")]
	public float myFloat
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1837E68", Offset = "0x1837E68", VA = "0x1837E68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1837E70", Offset = "0x1837E70", VA = "0x1837E70")]
		set
		{
		}
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1837F20", Offset = "0x1837F20", VA = "0x1837F20")]
	public Status WaitAction(float waitTime)
	{
		return default(Status);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1837F70", Offset = "0x1837F70", VA = "0x1837F70")]
	public DataBindExample()
	{
	}
}
[Token(Token = "0x2000059")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB1084", Offset = "0xFB1084")]
public class StepRotateion : ActionTask<Transform>
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Quaternion> targetRot;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float rotTime;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion curRot;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion tarRot;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x16EB170", Offset = "0x16EB170", VA = "0x16EB170", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x16EB34C", Offset = "0x16EB34C", VA = "0x16EB34C", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x16EB48C", Offset = "0x16EB48C", VA = "0x16EB48C")]
	public StepRotateion()
	{
	}
}
[Token(Token = "0x200005A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB10BC", Offset = "0xFB10BC")]
public class StepRotateionAngle : ActionTask<Transform>
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> rotateAngle;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float rotTime;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion curRot;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion tarRot;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x16EB4DC", Offset = "0x16EB4DC", VA = "0x16EB4DC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x16EB698", Offset = "0x16EB698", VA = "0x16EB698", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x16EB7D8", Offset = "0x16EB7D8", VA = "0x16EB7D8")]
	public StepRotateionAngle()
	{
	}
}
[Token(Token = "0x200005B")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB10F4", Offset = "0xFB10F4")]
public class StepLookAt : ActionTask<Transform>
{
	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> targetTransf;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<bool> isHorizontal;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float rotTime;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion curRot;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion tarRot;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x16EAD5C", Offset = "0x16EAD5C", VA = "0x16EAD5C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x16EAFE0", Offset = "0x16EAFE0", VA = "0x16EAFE0", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x16EB120", Offset = "0x16EB120", VA = "0x16EB120")]
	public StepLookAt()
	{
	}
}
[Token(Token = "0x200005C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB112C", Offset = "0xFB112C")]
public class FierceStepLookAt : ActionTask<Transform>
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> targetTransf;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<bool> isHorizontal;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float rotTime;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion curRot;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion tarRot;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1CFDA38", Offset = "0x1CFDA38", VA = "0x1CFDA38", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1CFDC18", Offset = "0x1CFDC18", VA = "0x1CFDC18", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1CFDD58", Offset = "0x1CFDD58", VA = "0x1CFDD58")]
	public FierceStepLookAt()
	{
	}
}
[Token(Token = "0x200005D")]
public class CameraInputDemo : MonoBehaviour
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string infoText;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private splineMove myMove;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x18348A0", Offset = "0x18348A0", VA = "0x18348A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1834934", Offset = "0x1834934", VA = "0x1834934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1834998", Offset = "0x1834998", VA = "0x1834998")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1834AEC", Offset = "0x1834AEC", VA = "0x1834AEC")]
	public void ShowInformation(string text)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1834AF4", Offset = "0x1834AF4", VA = "0x1834AF4")]
	public CameraInputDemo()
	{
	}
}
[Token(Token = "0x200005E")]
public class EventReceiver : MonoBehaviour
{
	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9474", Offset = "0xFB9474")]
	private sealed class <SetDestinationRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventReceiver <>4__this;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object target;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NavMeshAgent <agent>5__2;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private navMove <myMove>5__3;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <remain>5__4;

		[Token(Token = "0x170004D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x18B411C", Offset = "0x18B411C", VA = "0x18B411C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x18B4184", Offset = "0x18B4184", VA = "0x18B4184", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x18B3BEC", Offset = "0x18B3BEC", VA = "0x18B3BEC")]
		[DebuggerHidden]
		public <SetDestinationRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x18B3E7C", Offset = "0x18B3E7C", VA = "0x18B3E7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x18B3E80", Offset = "0x18B3E80", VA = "0x18B3E80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x18B4124", Offset = "0x18B4124", VA = "0x18B4124", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9484", Offset = "0xFB9484")]
	private sealed class <ActivateForTimeRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object target;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <tar>5__2;

		[Token(Token = "0x170004D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x18B3E0C", Offset = "0x18B3E0C", VA = "0x18B3E0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x18B3E74", Offset = "0x18B3E74", VA = "0x18B3E74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x18B3CC0", Offset = "0x18B3CC0", VA = "0x18B3CC0")]
		[DebuggerHidden]
		public <ActivateForTimeRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x18B3CF4", Offset = "0x18B3CF4", VA = "0x18B3CF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x18B3CF8", Offset = "0x18B3CF8", VA = "0x18B3CF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x18B3E14", Offset = "0x18B3E14", VA = "0x18B3E14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x18B3A4C", Offset = "0x18B3A4C", VA = "0x18B3A4C")]
	public void MyMethod()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x18B3A50", Offset = "0x18B3A50", VA = "0x18B3A50")]
	public void PrintText(string text)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x18B3AB8", Offset = "0x18B3AB8", VA = "0x18B3AB8")]
	public void RotateSprite(float newRot)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x18B3B28", Offset = "0x18B3B28", VA = "0x18B3B28")]
	public void SetDestination(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x18B3B54", Offset = "0x18B3B54", VA = "0x18B3B54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC63B4", Offset = "0xFC63B4")]
	private IEnumerator SetDestinationRoutine(UnityEngine.Object target)
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x18B3C18", Offset = "0x18B3C18", VA = "0x18B3C18")]
	public void ActivateForTime(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x18B3C44", Offset = "0x18B3C44", VA = "0x18B3C44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC6418", Offset = "0xFC6418")]
	private IEnumerator ActivateForTimeRoutine(UnityEngine.Object target)
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x18B3CEC", Offset = "0x18B3CEC", VA = "0x18B3CEC")]
	public EventReceiver()
	{
	}
}
[Token(Token = "0x200005F")]
public class PathInputDemo : MonoBehaviour
{
	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedMultiplier;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float progress;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private splineMove move;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1953A70", Offset = "0x1953A70", VA = "0x1953A70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1953B28", Offset = "0x1953B28", VA = "0x1953B28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1953D30", Offset = "0x1953D30", VA = "0x1953D30")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1953DFC", Offset = "0x1953DFC", VA = "0x1953DFC")]
	public PathInputDemo()
	{
	}
}
[Token(Token = "0x2000060")]
public class RapidInputDemo : MonoBehaviour
{
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9494", Offset = "0xFB9494")]
	private sealed class <SlowDown>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RapidInputDemo <>4__this;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <rate>5__3;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <speed>5__4;

		[Token(Token = "0x170004D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0x19566C8", Offset = "0x19566C8", VA = "0x19566C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x1956730", Offset = "0x1956730", VA = "0x1956730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x19563FC", Offset = "0x19563FC", VA = "0x19563FC")]
		[DebuggerHidden]
		public <SlowDown>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x1956444", Offset = "0x1956444", VA = "0x1956444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x1956448", Offset = "0x1956448", VA = "0x1956448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x19566D0", Offset = "0x19566D0", VA = "0x19566D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh speedDisplay;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh timeDisplay;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float topSpeed;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float addSpeed;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delay;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float slowTime;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minPitch;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxPitch;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private splineMove move;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentSpeed;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeCounter;

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1955F58", Offset = "0x1955F58", VA = "0x1955F58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x19560B0", Offset = "0x19560B0", VA = "0x19560B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1956380", Offset = "0x1956380", VA = "0x1956380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC647C", Offset = "0xFC647C")]
	private IEnumerator SlowDown()
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1956428", Offset = "0x1956428", VA = "0x1956428")]
	public RapidInputDemo()
	{
	}
}
[Token(Token = "0x2000061")]
public class RotationHelper : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rotation;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1B6F36C", Offset = "0x1B6F36C", VA = "0x1B6F36C")]
	private void Start()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1B6F42C", Offset = "0x1B6F42C", VA = "0x1B6F42C")]
	public RotationHelper()
	{
	}
}
[Token(Token = "0x2000062")]
public class RuntimeDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000443")]
	public class ExampleClass1
	{
		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject walkerPrefab;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject pathPrefab;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool done;

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x1B7141C", Offset = "0x1B7141C", VA = "0x1B7141C")]
		public ExampleClass1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000444")]
	public class ExampleClass2
	{
		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pathName1;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string pathName2;

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x1B71424", Offset = "0x1B71424", VA = "0x1B71424")]
		public ExampleClass2()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000445")]
	public class ExampleClass3
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x1B7142C", Offset = "0x1B7142C", VA = "0x1B7142C")]
		public ExampleClass3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000446")]
	public class ExampleClass4
	{
		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x1B71434", Offset = "0x1B71434", VA = "0x1B71434")]
		public ExampleClass4()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000447")]
	public class ExampleClass5
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x1B7143C", Offset = "0x1B7143C", VA = "0x1B7143C")]
		public ExampleClass5()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000448")]
	public class ExampleClass6
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool done;

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x1B71444", Offset = "0x1B71444", VA = "0x1B71444")]
		public ExampleClass6()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000449")]
	public class ExampleClass7
	{
		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool done;

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x1B7144C", Offset = "0x1B7144C", VA = "0x1B7144C")]
		public ExampleClass7()
		{
		}
	}

	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB94A4", Offset = "0xFB94A4")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventReceiver receiver;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RuntimeDemo <>4__this;

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x1B713D8", Offset = "0x1B713D8", VA = "0x1B713D8")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x1B713E8", Offset = "0x1B713E8", VA = "0x1B713E8")]
		internal void <DrawExample6>b__0()
		{
		}
	}

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExampleClass1 example1;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExampleClass2 example2;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExampleClass3 example3;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExampleClass4 example4;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExampleClass5 example5;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ExampleClass6 example6;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ExampleClass6 example7;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1B6FCD8", Offset = "0x1B6FCD8", VA = "0x1B6FCD8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1B6FD24", Offset = "0x1B6FD24", VA = "0x1B6FD24")]
	private void DrawExample1()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1B70110", Offset = "0x1B70110", VA = "0x1B70110")]
	private void DrawExample2()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1B702F0", Offset = "0x1B702F0", VA = "0x1B702F0")]
	private void DrawExample3()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1B70544", Offset = "0x1B70544", VA = "0x1B70544")]
	private void DrawExample4()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1B70728", Offset = "0x1B70728", VA = "0x1B70728")]
	private void DrawExample5()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1B70874", Offset = "0x1B70874", VA = "0x1B70874")]
	private void DrawExample6()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1B70A90", Offset = "0x1B70A90", VA = "0x1B70A90")]
	private void DrawExample7()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1B713E0", Offset = "0x1B713E0", VA = "0x1B713E0")]
	public RuntimeDemo()
	{
	}
}
[Token(Token = "0x2000063")]
public class ShowcaseGUI : MonoBehaviour
{
	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ShowcaseGUI instance;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int levels;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x16E93FC", Offset = "0x16E93FC", VA = "0x16E93FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x16E9818", Offset = "0x16E9818", VA = "0x16E9818")]
	private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x16E956C", Offset = "0x16E956C", VA = "0x16E956C")]
	private void ActivateSurroundings()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x16E981C", Offset = "0x16E981C", VA = "0x16E981C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x16E9DBC", Offset = "0x16E9DBC", VA = "0x16E9DBC")]
	public ShowcaseGUI()
	{
	}
}
[Token(Token = "0x2000064")]
public class XMLNode : Hashtable
{
	[Token(Token = "0x6000269")]
	[Address(RVA = "0x16FEE38", Offset = "0x16FEE38", VA = "0x16FEE38")]
	public XMLNodeList GetNodeList(string path)
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x16FF134", Offset = "0x16FF134", VA = "0x16FF134")]
	public XMLNode GetNode(string path)
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x16FF1CC", Offset = "0x16FF1CC", VA = "0x16FF1CC")]
	public string GetValue(string path)
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x16FEED0", Offset = "0x16FEED0", VA = "0x16FEED0")]
	private object GetObject(string path)
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x16FF240", Offset = "0x16FF240", VA = "0x16FF240")]
	public XMLNode()
	{
	}
}
[Token(Token = "0x2000065")]
public class XMLNodeList : ArrayList
{
	[Token(Token = "0x600026E")]
	[Address(RVA = "0x16FF248", Offset = "0x16FF248", VA = "0x16FF248")]
	public XMLNode Pop()
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x16FF314", Offset = "0x16FF314", VA = "0x16FF314")]
	public int Push(XMLNode item)
	{
		return default(int);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x16FF350", Offset = "0x16FF350", VA = "0x16FF350")]
	public XMLNodeList()
	{
	}
}
[Token(Token = "0x2000066")]
public class XMLParser
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private char LT;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private char GT;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private char SPACE;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	private char QUOTE;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private char QUOTE2;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private char SLASH;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private char QMARK;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private char EQUALS;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private char EXCLAMATION;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private char DASH;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private char SQR;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private char[] replaceChars;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x16FF3B8", Offset = "0x16FF3B8", VA = "0x16FF3B8")]
	private string ProcessAttributName(string attname)
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x16FF4E0", Offset = "0x16FF4E0", VA = "0x16FF4E0")]
	public XMLNode Parse(string content)
	{
		return null;
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x16FFF9C", Offset = "0x16FFF9C", VA = "0x16FFF9C")]
	public XMLParser()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1164", Offset = "0xFB1164")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1164", Offset = "0xFB1164")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public abstract class MeshChainRenderer : MonoBehaviour
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly GradientColorKey k_DefaultStartColor;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly GradientColorKey k_DefaultEndColor;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly GradientAlphaKey k_DefaultStartAlpha;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly GradientAlphaKey k_DefaultEndAlpha;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA13C", Offset = "0xFBA13C")]
	protected Material[] m_Materials;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA188", Offset = "0xFBA188")]
	protected float m_Width;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA1D4", Offset = "0xFBA1D4")]
	protected AnimationCurve m_WidthCurve;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA220", Offset = "0xFBA220")]
	protected Gradient m_Color;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	protected MeshRenderer m_MeshRenderer;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected XRMeshChain m_XRMeshData;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool m_MeshNeedsRefreshing;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float m_StepSize;

	[Token(Token = "0x17000038")]
	public virtual Material material
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x1856E64", Offset = "0x1856E64", VA = "0x1856E64", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x1856E80", Offset = "0x1856E80", VA = "0x1856E80", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public virtual Material[] materials
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x1856E9C", Offset = "0x1856E9C", VA = "0x1856E9C", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x1856EB8", Offset = "0x1856EB8", VA = "0x1856EB8", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public virtual Material sharedMaterial
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x1856ED4", Offset = "0x1856ED4", VA = "0x1856ED4", Slot = "8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x1856EF0", Offset = "0x1856EF0", VA = "0x1856EF0", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public virtual Material[] SharedMaterials
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1856F0C", Offset = "0x1856F0C", VA = "0x1856F0C", Slot = "10")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x1856F28", Offset = "0x1856F28", VA = "0x1856F28", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float widthStart
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0x1856F44", Offset = "0x1856F44", VA = "0x1856F44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x1856F80", Offset = "0x1856F80", VA = "0x1856F80")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float widthEnd
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x185700C", Offset = "0x185700C", VA = "0x185700C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x1857048", Offset = "0x1857048", VA = "0x1857048")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float widthMultiplier
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x18570E8", Offset = "0x18570E8", VA = "0x18570E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x18570F0", Offset = "0x18570F0", VA = "0x18570F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public AnimationCurve widthCurve
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x1857104", Offset = "0x1857104", VA = "0x1857104")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000283")]
		[Address(RVA = "0x185710C", Offset = "0x185710C", VA = "0x185710C")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public Gradient colorGradient
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x1857220", Offset = "0x1857220", VA = "0x1857220")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0x1857228", Offset = "0x1857228", VA = "0x1857228")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public Color colorStart
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x1857428", Offset = "0x1857428", VA = "0x1857428")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0x1857448", Offset = "0x1857448", VA = "0x1857448")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public Color colorEnd
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x185752C", Offset = "0x185752C", VA = "0x185752C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x185754C", Offset = "0x185754C", VA = "0x185754C")]
		set
		{
		}
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1857654", Offset = "0x1857654", VA = "0x1857654")]
	public void SetTotalWidth(float newWidth)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x185776C", Offset = "0x185776C", VA = "0x185776C")]
	public void SetTotalColor(Color newColor)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1857994", Offset = "0x1857994", VA = "0x1857994")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x18579DC", Offset = "0x18579DC", VA = "0x18579DC")]
	private void SetupMeshBackend()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1857D9C", Offset = "0x1857D9C", VA = "0x1857D9C", Slot = "12")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1857DCC", Offset = "0x1857DCC", VA = "0x1857DCC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1857DFC", Offset = "0x1857DFC", VA = "0x1857DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1857E0C", Offset = "0x1857E0C", VA = "0x1857E0C", Slot = "13")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1857E48", Offset = "0x1857E48", VA = "0x1857E48")]
	public static implicit operator Renderer(MeshChainRenderer lr)
	{
		return null;
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1857D0C", Offset = "0x1857D0C", VA = "0x1857D0C")]
	private void EditorCheckForUpdate()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1857E60", Offset = "0x1857E60", VA = "0x1857E60", Slot = "14")]
	protected virtual void UpdateColors()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1857E64", Offset = "0x1857E64", VA = "0x1857E64", Slot = "15")]
	protected virtual void UpdateWidth()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1857E68", Offset = "0x1857E68", VA = "0x1857E68", Slot = "16")]
	protected virtual void Initialize()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1857E6C", Offset = "0x1857E6C", VA = "0x1857E6C", Slot = "17")]
	protected virtual bool NeedsReinitialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1857E74", Offset = "0x1857E74", VA = "0x1857E74", Slot = "18")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1857E94", Offset = "0x1857E94", VA = "0x1857E94", Slot = "19")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1857EB4", Offset = "0x1857EB4", VA = "0x1857EB4")]
	protected MeshChainRenderer()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1210", Offset = "0xFB1210")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1210", Offset = "0xFB1210")]
[ExecuteInEditMode]
public class XRLineRenderer : MeshChainRenderer
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA2A4", Offset = "0xFBA2A4")]
	private Vector3[] m_Positions;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFBA2F0", Offset = "0xFBA2F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA2F0", Offset = "0xFBA2F0")]
	private bool m_UseWorldSpace;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA360", Offset = "0xFBA360")]
	private bool m_Loop;

	[Token(Token = "0x17000043")]
	public bool useWorldSpace
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x170005C", Offset = "0x170005C", VA = "0x170005C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000044")]
	public override Material material
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x1700064", Offset = "0x1700064", VA = "0x1700064", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x1700080", Offset = "0x1700080", VA = "0x1700080", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public override Material[] materials
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0x17001CC", Offset = "0x17001CC", VA = "0x17001CC", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x17001E8", Offset = "0x17001E8", VA = "0x17001E8", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public override Material sharedMaterial
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x170021C", Offset = "0x170021C", VA = "0x170021C", Slot = "8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x1700238", Offset = "0x1700238", VA = "0x1700238", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public override Material[] SharedMaterials
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x170026C", Offset = "0x170026C", VA = "0x170026C", Slot = "10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x1700288", Offset = "0x1700288", VA = "0x1700288", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x17000B4", Offset = "0x17000B4", VA = "0x17000B4")]
	private void CopyWorldSpaceDataFromMaterial()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x17002BC", Offset = "0x17002BC", VA = "0x17002BC")]
	public Vector3 GetPosition(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1700304", Offset = "0x1700304", VA = "0x1700304")]
	public void SetPosition(int index, Vector3 position)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1700810", Offset = "0x1700810", VA = "0x1700810")]
	public int GetPositionSize()
	{
		return default(int);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1700828", Offset = "0x1700828", VA = "0x1700828")]
	public int GetPositions(Vector3[] positions)
	{
		return default(int);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1700868", Offset = "0x1700868", VA = "0x1700868")]
	public void SetPositions(Vector3[] newPositions, bool knownSizeChange = false)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1700A5C", Offset = "0x1700A5C", VA = "0x1700A5C")]
	public void SetVertexCount(int count)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1700BBC", Offset = "0x1700BBC", VA = "0x1700BBC")]
	public int GetVertexCount()
	{
		return default(int);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1700BD8", Offset = "0x1700BD8", VA = "0x1700BD8", Slot = "14")]
	protected override void UpdateColors()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1700F58", Offset = "0x1700F58", VA = "0x1700F58", Slot = "15")]
	protected override void UpdateWidth()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x17013D8", Offset = "0x17013D8", VA = "0x17013D8", Slot = "16")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1701E70", Offset = "0x1701E70", VA = "0x1701E70", Slot = "17")]
	protected override bool NeedsReinitialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1701F28", Offset = "0x1701F28", VA = "0x1701F28")]
	public XRLineRenderer()
	{
	}
}
[Token(Token = "0x2000069")]
public class XRMeshChain
{
	[Token(Token = "0x200044B")]
	[Flags]
	public enum MeshRefreshFlag
	{
		[Token(Token = "0x40012AA")]
		None = 0,
		[Token(Token = "0x40012AB")]
		Positions = 1,
		[Token(Token = "0x40012AC")]
		Colors = 2,
		[Token(Token = "0x40012AD")]
		Sizes = 4,
		[Token(Token = "0x40012AE")]
		All = 7
	}

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3[] m_Verts;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color32[] m_Colors;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector4> m_ShapeData;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> m_NeighborPoints;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRefreshFlag m_DataThatNeedsUpdate;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh m_Mesh;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_OwnerTransform;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_WorldSpaceData;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA3AC", Offset = "0xFBA3AC")]
	private int <reservedElements>k__BackingField;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA3BC", Offset = "0xFBA3BC")]
	private bool <centerAtRoot>k__BackingField;

	[Token(Token = "0x17000048")]
	public bool worldSpaceData
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x1701F90", Offset = "0x1701F90", VA = "0x1701F90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x1701F98", Offset = "0x1701F98", VA = "0x1701F98")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public int reservedElements
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x1701FA4", Offset = "0x1701FA4", VA = "0x1701FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC64E0", Offset = "0xFC64E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x1701FAC", Offset = "0x1701FAC", VA = "0x1701FAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC64F0", Offset = "0xFC64F0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public bool centerAtRoot
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x1701FB4", Offset = "0x1701FB4", VA = "0x1701FB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6500", Offset = "0xFC6500")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x1701FBC", Offset = "0x1701FBC", VA = "0x1701FBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6510", Offset = "0xFC6510")]
		set
		{
		}
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x170186C", Offset = "0x170186C", VA = "0x170186C")]
	public XRMeshChain()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x170189C", Offset = "0x170189C", VA = "0x170189C")]
	public void GenerateMesh(GameObject owner, bool dynamic, int totalElements)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1701FC8", Offset = "0x1701FC8", VA = "0x1701FC8")]
	public void RefreshMesh()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1700800", Offset = "0x1700800", VA = "0x1700800")]
	public void SetMeshDataDirty(MeshRefreshFlag dataThatNeedsUpdate)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1700664", Offset = "0x1700664", VA = "0x1700664")]
	public void SetElementPosition(int elementIndex, ref Vector3 position)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x17004BC", Offset = "0x17004BC", VA = "0x17004BC")]
	public void SetElementPipe(int elementIndex, ref Vector3 startPoint, ref Vector3 endPoint)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x17010F4", Offset = "0x17010F4", VA = "0x17010F4")]
	public void SetElementSize(int elementIndex, float sizeModification)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1701264", Offset = "0x1701264", VA = "0x1701264")]
	public void SetElementSize(int elementIndex, float startSize, float endSize)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1700D70", Offset = "0x1700D70", VA = "0x1700D70")]
	public void SetElementColor(int elementIndex, ref Color color)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1702160", Offset = "0x1702160", VA = "0x1702160")]
	public void SetElementColor32(int elementIndex, ref Color32 color)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1700E60", Offset = "0x1700E60", VA = "0x1700E60")]
	public void SetElementColor(int elementIndex, ref Color startColor, ref Color endColor)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1702214", Offset = "0x1702214", VA = "0x1702214")]
	public void SetElementColor32(int elementIndex, ref Color32 startColor, ref Color32 endColor)
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB12AC", Offset = "0xFB12AC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB12AC", Offset = "0xFB12AC")]
[ExecuteInEditMode]
public class XRTrailRenderer : MeshChainRenderer
{
	[Token(Token = "0x40001EA")]
	private const float k_AbsoluteMinVertexDistance = 0.01f;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA3CC", Offset = "0xFBA3CC")]
	private int m_MaxTrailPoints;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA418", Offset = "0xFBA418")]
	private bool m_StealLastPointWhenEmpty;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA464", Offset = "0xFBA464")]
	private float m_Time;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA4B0", Offset = "0xFBA4B0")]
	private float m_MinVertexDistance;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA4FC", Offset = "0xFBA4FC")]
	private bool m_Autodestruct;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBA548", Offset = "0xFBA548")]
	private bool m_SmoothInterpolation;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] m_Points;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] m_PointTimes;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int m_PointIndexStart;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_PointIndexEnd;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_LastRecordedPoint;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_LastPointTime;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_EditorDeltaHelper;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA594", Offset = "0xFBA594")]
	private int <positionCount>k__BackingField;

	[Token(Token = "0x1700004B")]
	public float time
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x17022D8", Offset = "0x17022D8", VA = "0x17022D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x17022E0", Offset = "0x17022E0", VA = "0x17022E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public float minVertexDistance
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x1702360", Offset = "0x1702360", VA = "0x1702360")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x1702368", Offset = "0x1702368", VA = "0x1702368")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public int positionCount
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x17023EC", Offset = "0x17023EC", VA = "0x17023EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6520", Offset = "0xFC6520")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x17023F4", Offset = "0x17023F4", VA = "0x17023F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6530", Offset = "0xFC6530")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public bool autodestruct
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x17023FC", Offset = "0x17023FC", VA = "0x17023FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x1702404", Offset = "0x1702404", VA = "0x1702404")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public bool smoothInterpolation
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x1702410", Offset = "0x1702410", VA = "0x1702410")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x1702418", Offset = "0x1702418", VA = "0x1702418")]
		set
		{
		}
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1702424", Offset = "0x1702424", VA = "0x1702424", Slot = "13")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1702CE4", Offset = "0x1702CE4", VA = "0x1702CE4")]
	public void EditorCheckForUpdate()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x1702CF4", Offset = "0x1702CF4", VA = "0x1702CF4")]
	public void Clear()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1702E6C", Offset = "0x1702E6C", VA = "0x1702E6C", Slot = "16")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1703070", Offset = "0x1703070", VA = "0x1703070", Slot = "17")]
	protected override bool NeedsReinitialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1703134", Offset = "0x1703134", VA = "0x1703134", Slot = "18")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1703160", Offset = "0x1703160", VA = "0x1703160")]
	public XRTrailRenderer()
	{
	}
}
[Token(Token = "0x200006B")]
public class AndroidHapticPlayer : IHapticPlayer, IDisposable
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject hapticPlayer;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<string> _activeKeys;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<PositionType> _activePosition;

	[Token(Token = "0x14000001")]
	public event Action<PlayerResponse> StatusReceived
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x1823B4C", Offset = "0x1823B4C", VA = "0x1823B4C", Slot = "16")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6540", Offset = "0xFC6540")]
		add
		{
		}
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x1823BF0", Offset = "0x1823BF0", VA = "0x1823BF0", Slot = "17")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6550", Offset = "0xFC6550")]
		remove
		{
		}
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x182128C", Offset = "0x182128C", VA = "0x182128C", Slot = "18")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1821290", Offset = "0x1821290", VA = "0x1821290", Slot = "4")]
	public void Enable()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1821440", Offset = "0x1821440", VA = "0x1821440")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x182154C", Offset = "0x182154C", VA = "0x182154C")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1821658", Offset = "0x1821658", VA = "0x1821658")]
	public void Pair(string address)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1821748", Offset = "0x1821748", VA = "0x1821748")]
	public void Unpair(string address)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1821838", Offset = "0x1821838", VA = "0x1821838")]
	public void UnpairAll()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1821944", Offset = "0x1821944", VA = "0x1821944")]
	public void TogglePosition(string address)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1821A34", Offset = "0x1821A34", VA = "0x1821A34")]
	public void Ping(string address)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1821B24", Offset = "0x1821B24", VA = "0x1821B24")]
	public List<BhapticsDevice> GetDeviceList()
	{
		return null;
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x18220E0", Offset = "0x18220E0", VA = "0x18220E0")]
	public bool IsScanning()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x18221F8", Offset = "0x18221F8", VA = "0x18221F8")]
	public void PingAll()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1822304", Offset = "0x1822304", VA = "0x1822304", Slot = "5")]
	public void Disable()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1822308", Offset = "0x1822308", VA = "0x1822308", Slot = "19")]
	public bool IsActive(PositionType type)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x18223E4", Offset = "0x18223E4", VA = "0x18223E4", Slot = "6")]
	public bool IsPlaying(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x18224C0", Offset = "0x18224C0", VA = "0x18224C0", Slot = "20")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1822518", Offset = "0x1822518", VA = "0x1822518")]
	public void Register(string key, string path)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1822578", Offset = "0x1822578", VA = "0x1822578", Slot = "21")]
	public void Register(string key, Project project)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1822728", Offset = "0x1822728", VA = "0x1822728", Slot = "7")]
	public void RegisterTactFileStr(string key, string tactFileStr)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1822760", Offset = "0x1822760", VA = "0x1822760", Slot = "8")]
	public void RegisterTactFileStrReflected(string key, string tactFileStr)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1822B7C", Offset = "0x1822B7C", VA = "0x1822B7C", Slot = "9")]
	public void Submit(string key, PositionType position, byte[] motorBytes, int durationMillis)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1822CB0", Offset = "0x1822CB0", VA = "0x1822CB0", Slot = "22")]
	public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1822E38", Offset = "0x1822E38", VA = "0x1822E38", Slot = "23")]
	public void Submit(string key, PositionType position, DotPoint point, int durationMillis)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1822EF0", Offset = "0x1822EF0", VA = "0x1822EF0", Slot = "10")]
	public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1822FD0", Offset = "0x1822FD0", VA = "0x1822FD0", Slot = "24")]
	public void Submit(string key, PositionType position, PathPoint point, int durationMillis)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1822D88", Offset = "0x1822D88", VA = "0x1822D88")]
	private void Submit(string key, Frame req)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1823088", Offset = "0x1823088", VA = "0x1823088")]
	private void SubmitRequest(SubmitRequest submitRequest)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x18232A8", Offset = "0x18232A8", VA = "0x18232A8", Slot = "25")]
	public void SubmitRegistered(string key, ScaleOption option)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x18233B0", Offset = "0x18233B0", VA = "0x18233B0", Slot = "11")]
	public void SubmitRegistered(string key, string altKey, ScaleOption option)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x18234D8", Offset = "0x18234D8", VA = "0x18234D8", Slot = "26")]
	public void SubmitRegisteredVestRotation(string key, RotationOption option)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x18235E0", Offset = "0x18235E0", VA = "0x18235E0", Slot = "27")]
	public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption option)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1823708", Offset = "0x1823708", VA = "0x1823708", Slot = "12")]
	public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption rOption, ScaleOption sOption)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1823858", Offset = "0x1823858", VA = "0x1823858", Slot = "13")]
	public void SubmitRegistered(string key)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x18238F4", Offset = "0x18238F4", VA = "0x18238F4", Slot = "28")]
	public void SubmitRegistered(string key, float ratio)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1823A18", Offset = "0x1823A18", VA = "0x1823A18", Slot = "14")]
	public void TurnOff(string key)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1823AB4", Offset = "0x1823AB4", VA = "0x1823AB4", Slot = "15")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1823C94", Offset = "0x1823C94", VA = "0x1823C94")]
	public void Receive(PlayerResponse response)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1823F64", Offset = "0x1823F64", VA = "0x1823F64")]
	public AndroidHapticPlayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200006C")]
public class BhapticsDevice
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string DeviceName;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Address;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Battery;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsPaired;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ConnectionStatus;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Position;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Rssi;

	[Token(Token = "0x4000204")]
	public const string TACTAL_POS = "Head";

	[Token(Token = "0x4000205")]
	public const string TACTOT_POS = "Vest";

	[Token(Token = "0x4000206")]
	public const string TACTOSY_LPOS = "ForearmL";

	[Token(Token = "0x4000207")]
	public const string TACTOSY_RPOS = "ForearmR";

	[Token(Token = "0x4000208")]
	public const string TACTOSY_LFPOS = "FootL";

	[Token(Token = "0x4000209")]
	public const string TACTOSY_RFPOS = "FootR";

	[Token(Token = "0x400020A")]
	public const string TACTOSY_LHPOS = "HandL";

	[Token(Token = "0x400020B")]
	public const string TACTOSY_RHPOS = "HandR";

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1827370", Offset = "0x1827370", VA = "0x1827370")]
	public bool IsLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x18220D8", Offset = "0x18220D8", VA = "0x18220D8")]
	public BhapticsDevice()
	{
	}
}
[Token(Token = "0x200006D")]
public class AndroidPermissionsManager
{
	[Token(Token = "0x400020C")]
	private const string STORAGE_PERMISSION = "android.permission.WRITE_EXTERNAL_STORAGE";

	[Token(Token = "0x400020D")]
	private const string BLUETOOTH_PERMISSION = "android.permission.ACCESS_FINE_LOCATION";

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject activity;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AndroidJavaObject permissionService;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1824014", Offset = "0x1824014", VA = "0x1824014")]
	private static AndroidJavaObject GetActivity()
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x18240DC", Offset = "0x18240DC", VA = "0x18240DC")]
	private static AndroidJavaObject GetPermissionsService()
	{
		return null;
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1824208", Offset = "0x1824208", VA = "0x1824208")]
	private static bool IsPermissionGranted(string permissionName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1824324", Offset = "0x1824324", VA = "0x1824324")]
	private static void RequestPermission(string permissionName)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x18243D0", Offset = "0x18243D0", VA = "0x18243D0")]
	private static void RequestPermission(string[] permissionNames)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x18244E4", Offset = "0x18244E4", VA = "0x18244E4")]
	public static bool CheckFilePermissions()
	{
		return default(bool);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x182454C", Offset = "0x182454C", VA = "0x182454C")]
	public static bool CheckBluetoothPermissions()
	{
		return default(bool);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x18245B4", Offset = "0x18245B4", VA = "0x18245B4")]
	public static void RequestPermission()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x18246B0", Offset = "0x18246B0", VA = "0x18246B0")]
	public AndroidPermissionsManager()
	{
	}
}
[Token(Token = "0x200006E")]
public class SettingObjectPool : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScrollRect pariedDeviceScrollrect;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ScrollRect scannedDeviceScrollrect;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PairedDeviceUI pairedDeviceUIGameObject;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ScannedDeviceUI scannedDeviceUIGameObject;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int objectCount;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<PairedDeviceUI> pairedUIList;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ScannedDeviceUI> scannedUIList;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1B7A6C8", Offset = "0x1B7A6C8", VA = "0x1B7A6C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1B7A8EC", Offset = "0x1B7A8EC", VA = "0x1B7A8EC")]
	public PairedDeviceUI GetPairedDeviceUI()
	{
		return null;
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1B7A9C4", Offset = "0x1B7A9C4", VA = "0x1B7A9C4")]
	public ScannedDeviceUI GetScannedDeviceUI()
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1B7AA9C", Offset = "0x1B7AA9C", VA = "0x1B7AA9C")]
	public void AllDeviceUIDisable()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1B7ABA4", Offset = "0x1B7ABA4", VA = "0x1B7ABA4")]
	public SettingObjectPool()
	{
	}
}
[Token(Token = "0x200006F")]
public class SettingUI_AnimationScript : MonoBehaviour
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject SettingUI;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool settingPanelEnable;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1B7ABAC", Offset = "0x1B7ABAC", VA = "0x1B7ABAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1B7AC24", Offset = "0x1B7AC24", VA = "0x1B7AC24")]
	public void Hide()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1B7AC44", Offset = "0x1B7AC44", VA = "0x1B7AC44")]
	public void Show()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1B7AC64", Offset = "0x1B7AC64", VA = "0x1B7AC64")]
	public void ToggleSettingButton()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1B7AD40", Offset = "0x1B7AD40", VA = "0x1B7AD40")]
	public SettingUI_AnimationScript()
	{
	}
}
[Token(Token = "0x2000070")]
public enum LogSeverity
{
	[Token(Token = "0x400021B")]
	Log,
	[Token(Token = "0x400021C")]
	LogDebug,
	[Token(Token = "0x400021D")]
	LogInfo,
	[Token(Token = "0x400021E")]
	LogWarning,
	[Token(Token = "0x400021F")]
	LogAssert,
	[Token(Token = "0x4000220")]
	LogError,
	[Token(Token = "0x4000221")]
	LogException
}
[Token(Token = "0x2000071")]
public sealed class BuglyAgent
{
	[Token(Token = "0x200044C")]
	public delegate void LogCallbackDelegate(string condition, string stackTrace, LogType type);

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string GAME_AGENT_CLASS;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int TYPE_U3D_CRASH;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int GAME_TYPE_UNITY;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool hasSetGameType;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static AndroidJavaClass _gameAgentClass;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string _configChannel;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string _configVersion;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string _configUser;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static long _configDelayTime;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool _configCrashReporterPackage;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool _isInitialized;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static LogSeverity _autoReportLogLevel;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static int _crashReporterType;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static string _crashReporterPackage;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static bool _debugMode;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private static bool _autoQuitApplicationAfterReport;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static readonly int EXCEPTION_TYPE_UNCAUGHT;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly int EXCEPTION_TYPE_CAUGHT;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static readonly string _pluginVersion;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static Func<Dictionary<string, string>> _LogCallbackExtrasHandler;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static bool _uncaughtAutoReportOnce;

	[Token(Token = "0x17000050")]
	public static AndroidJavaClass GameAgent
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x1831998", Offset = "0x1831998", VA = "0x1831998")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public static string PluginVersion
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x183228C", Offset = "0x183228C", VA = "0x183228C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public static bool IsInitialized
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0x18322F4", Offset = "0x18322F4", VA = "0x18322F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000053")]
	public static bool AutoQuitApplicationAfterReport
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0x183235C", Offset = "0x183235C", VA = "0x183235C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000002")]
	private static event LogCallbackDelegate _LogCallbackEventHandler
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0x182EF40", Offset = "0x182EF40", VA = "0x182EF40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6560", Offset = "0xFC6560")]
		add
		{
		}
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x18304E4", Offset = "0x18304E4", VA = "0x18304E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6570", Offset = "0xFC6570")]
		remove
		{
		}
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x182E2AC", Offset = "0x182E2AC", VA = "0x182E2AC")]
	public static void ConfigCrashReporter(int type, int logLevel)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x182E3CC", Offset = "0x182E3CC", VA = "0x182E3CC")]
	public static void InitWithAppId(string appId)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x182ECB0", Offset = "0x182ECB0", VA = "0x182ECB0")]
	public static void EnableExceptionHandler()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x182EE50", Offset = "0x182EE50", VA = "0x182EE50")]
	public static void RegisterLogCallback(LogCallbackDelegate handler)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x182F030", Offset = "0x182F030", VA = "0x182F030")]
	public static void SetLogCallbackExtrasHandler(Func<Dictionary<string, string>> handler)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x182F12C", Offset = "0x182F12C", VA = "0x182F12C")]
	public static void ReportException(Exception e, string message)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x182F81C", Offset = "0x182F81C", VA = "0x182F81C")]
	public static void ReportException(string name, string message, string stackTrace)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x18303C0", Offset = "0x18303C0", VA = "0x18303C0")]
	public static void UnregisterLogCallback(LogCallbackDelegate handler)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x18305D4", Offset = "0x18305D4", VA = "0x18305D4")]
	public static void SetUserId(string userId)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x18308D0", Offset = "0x18308D0", VA = "0x18308D0")]
	public static void SetScene(int sceneId)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1830BF8", Offset = "0x1830BF8", VA = "0x1830BF8")]
	public static void AddSceneData(string key, string value)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1830F84", Offset = "0x1830F84", VA = "0x1830F84")]
	public static void ConfigDebugMode(bool enable)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1831264", Offset = "0x1831264", VA = "0x1831264")]
	public static void ConfigAutoQuitApplication(bool autoQuit)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x18312D4", Offset = "0x18312D4", VA = "0x18312D4")]
	public static void ConfigAutoReportLogLevel(LogSeverity level)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1831340", Offset = "0x1831340", VA = "0x1831340")]
	public static void ConfigDefault(string channel, string version, string user, long delay)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x182E608", Offset = "0x182E608", VA = "0x182E608")]
	public static void DebugLog(string tag, string format, params object[] args)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x18315D4", Offset = "0x18315D4", VA = "0x18315D4")]
	public static void PrintLog(LogSeverity level, string format, params object[] args)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1831510", Offset = "0x1831510", VA = "0x1831510")]
	private static void ConfigDefaultBeforeInit(string channel, string version, string user, long delay)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1831B90", Offset = "0x1831B90", VA = "0x1831B90")]
	private static void ConfigCrashReporterPackage()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x182E6F8", Offset = "0x182E6F8", VA = "0x182E6F8")]
	private static void InitBuglyAgent(string appId)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x18310A8", Offset = "0x18310A8", VA = "0x18310A8")]
	private static void EnableDebugMode(bool enable)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1830734", Offset = "0x1830734", VA = "0x1830734")]
	private static void SetUserInfo(string userInfo)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1831D4C", Offset = "0x1831D4C", VA = "0x1831D4C")]
	private static void ReportException(int type, string name, string reason, string stackTrace, bool quitProgram)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1830A48", Offset = "0x1830A48", VA = "0x1830A48")]
	private static void SetCurrentScene(int sceneId)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1832084", Offset = "0x1832084", VA = "0x1832084")]
	private static void SetUnityVersion()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1830D94", Offset = "0x1830D94", VA = "0x1830D94")]
	private static void AddKeyAndValueInScene(string key, string value)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1832288", Offset = "0x1832288", VA = "0x1832288")]
	private static void AddExtraDataWithException(string key, string value)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1831684", Offset = "0x1831684", VA = "0x1831684")]
	private static void LogRecord(LogSeverity level, string message)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x182E310", Offset = "0x182E310", VA = "0x182E310")]
	private static void _SetCrashReporterType(int type)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x182E3C8", Offset = "0x182E3C8", VA = "0x182E3C8")]
	private static void _SetCrashReporterLogLevel(int logLevel)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x182EA90", Offset = "0x182EA90", VA = "0x182EA90")]
	private static void _RegisterExceptionHandler()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x18323C4", Offset = "0x18323C4", VA = "0x18323C4")]
	private static void _UnregisterExceptionHandler()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x18325B8", Offset = "0x18325B8", VA = "0x18325B8")]
	private static void _OnLogCallbackHandler(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1832B98", Offset = "0x1832B98", VA = "0x1832B98")]
	private static void _OnUncaughtExceptionHandler(object sender, UnhandledExceptionEventArgs args)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x182F2CC", Offset = "0x182F2CC", VA = "0x182F2CC")]
	private static void _HandleException(Exception e, string message, bool uncaught)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1832E24", Offset = "0x1832E24", VA = "0x1832E24")]
	private static void _reportException(bool uncaught, string name, string reason, string stackTrace)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x182FA08", Offset = "0x182FA08", VA = "0x182FA08")]
	private static void _HandleException(LogSeverity logLevel, string name, string message, string stackTrace, bool uncaught)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1833578", Offset = "0x1833578", VA = "0x1833578")]
	public BuglyAgent()
	{
	}
}
[Token(Token = "0x2000072")]
public abstract class BuglyCallback
{
	[Token(Token = "0x600033F")]
	public abstract void OnApplicationLogCallbackHandler(string condition, string stackTrace, LogType type);

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1833768", Offset = "0x1833768", VA = "0x1833768")]
	protected BuglyCallback()
	{
	}
}
[Token(Token = "0x2000073")]
public class BuglyInit : MonoBehaviour
{
	[Token(Token = "0x4000238")]
	private const string BuglyAppID = "YOUR APP ID GOES HERE";

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1833770", Offset = "0x1833770", VA = "0x1833770")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1833924", Offset = "0x1833924", VA = "0x1833924")]
	private static Dictionary<string, string> MyLogCallbackExtrasHandler()
	{
		return null;
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1833E2C", Offset = "0x1833E2C", VA = "0x1833E2C")]
	public BuglyInit()
	{
	}
}
namespace NAudio.Dsp
{
	[Token(Token = "0x2000074")]
	internal class WdlResampler
	{
		[Token(Token = "0x200044D")]
		private class WDL_Resampler_IIRFilter
		{
			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private double m_fpos;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private double m_a1;

			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private double m_a2;

			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private double m_b0;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private double m_b1;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private double m_b2;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private double[,] m_hist;

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x1858E84", Offset = "0x1858E84", VA = "0x1858E84")]
			public WDL_Resampler_IIRFilter()
			{
			}

			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x1858270", Offset = "0x1858270", VA = "0x1858270")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x1858EB4", Offset = "0x1858EB4", VA = "0x1858EB4")]
			public void setParms(double fpos, double Q)
			{
			}

			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x1858FC4", Offset = "0x1858FC4", VA = "0x1858FC4")]
			public void Apply(float[] inBuffer, int inIndex, float[] outBuffer, int outIndex, int ns, int span, int w)
			{
			}

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x1859894", Offset = "0x1859894", VA = "0x1859894")]
			private double denormal_filter(float x)
			{
				return default(double);
			}

			[Token(Token = "0x6001D50")]
			[Address(RVA = "0x1859890", Offset = "0x1859890", VA = "0x1859890")]
			private double denormal_filter(double x)
			{
				return default(double);
			}
		}

		[Token(Token = "0x4000239")]
		private const int WDL_RESAMPLE_MAX_FILTERS = 4;

		[Token(Token = "0x400023A")]
		private const int WDL_RESAMPLE_MAX_NCH = 64;

		[Token(Token = "0x400023B")]
		private const double PI = Math.PI;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_sratein;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double m_srateout;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double m_fracpos;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double m_ratio;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double m_filter_ratio;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_filterq;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_filterpos;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_rsinbuf;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] m_filter_coeffs;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WDL_Resampler_IIRFilter m_iirfilter;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_filter_coeffs_size;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_last_requested;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_filtlatency;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_samples_in_rsinbuf;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_lp_oversize;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_sincsize;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_filtercnt;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_sincoversize;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_interp;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_feedmode;

		[Token(Token = "0x17000054")]
		public double InputSampleRate
		{
			[Token(Token = "0x600034A")]
			[Address(RVA = "0x1858320", Offset = "0x1858320", VA = "0x1858320")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000055")]
		public double OutputSampleRate
		{
			[Token(Token = "0x600034B")]
			[Address(RVA = "0x1858328", Offset = "0x1858328", VA = "0x1858328")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1858080", Offset = "0x1858080", VA = "0x1858080")]
		public WdlResampler()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x185811C", Offset = "0x185811C", VA = "0x185811C")]
		public void SetMode(bool interp, int filtercnt, bool sinc, int sinc_size = 64, int sinc_interpsize = 32)
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x185825C", Offset = "0x185825C", VA = "0x185825C")]
		public void SetFilterParms(float filterpos = 0.693f, float filterq = 0.707f)
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x1858264", Offset = "0x1858264", VA = "0x1858264")]
		public void SetFeedMode(bool wantInputDriven)
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x18580FC", Offset = "0x18580FC", VA = "0x18580FC")]
		public void Reset(double fracpos = 0.0)
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x18582EC", Offset = "0x18582EC", VA = "0x18582EC")]
		public void SetRates(double rate_in, double rate_out)
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x1858330", Offset = "0x1858330", VA = "0x1858330")]
		public double GetCurrentLatency()
		{
			return default(double);
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x1858354", Offset = "0x1858354", VA = "0x1858354")]
		public int ResamplePrepare(int out_samples, int nch, out float[] inbuffer, out int inbufferOffset)
		{
			return default(int);
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x1858520", Offset = "0x1858520", VA = "0x1858520")]
		public int ResampleOut(float[] outBuffer, int outBufferIndex, int nsamples_in, int nsamples_out, int nch)
		{
			return default(int);
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x1859188", Offset = "0x1859188", VA = "0x1859188")]
		private void BuildLowPass(double filtpos)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x185975C", Offset = "0x185975C", VA = "0x185975C")]
		private void SincSample(float[] outBuffer, int outBufferIndex, float[] inBuffer, int inBufferIndex, double fracpos, int nch, float[] filter, int filterIndex, int filtsz)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x1859464", Offset = "0x1859464", VA = "0x1859464")]
		private void SincSample1(float[] outBuffer, int outBufferIndex, float[] inBuffer, int inBufferIndex, double fracpos, float[] filter, int filterIndex, int filtsz)
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x185955C", Offset = "0x185955C", VA = "0x185955C")]
		private void SincSample2(float[] outptr, int outBufferIndex, float[] inBuffer, int inBufferIndex, double fracpos, float[] filter, int filterIndex, int filtsz)
		{
		}
	}
}
namespace NAudio.Wave
{
	[Token(Token = "0x2000075")]
	internal interface ISampleProvider
	{
		[Token(Token = "0x17000056")]
		[NotNull]
		WaveFormat WaveFormat
		{
			[Token(Token = "0x6000353")]
			get;
		}

		[Token(Token = "0x6000354")]
		int Read([NotNull] float[] buffer, int offset, int count);
	}
	[Token(Token = "0x2000076")]
	internal class WaveFileWriter : Stream
	{
		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream _outStream;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BinaryWriter _writer;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long _dataSizePos;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private long _factSampleCountPos;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _dataChunkSize;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA624", Offset = "0xFBA624")]
		private string <Filename>k__BackingField;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA634", Offset = "0xFBA634")]
		private WaveFormat <WaveFormat>k__BackingField;

		[Token(Token = "0x17000057")]
		public string Filename
		{
			[Token(Token = "0x600035A")]
			[Address(RVA = "0x1859DA0", Offset = "0x1859DA0", VA = "0x1859DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6580", Offset = "0xFC6580")]
			get
			{
				return null;
			}
			[Token(Token = "0x600035B")]
			[Address(RVA = "0x1859DA8", Offset = "0x1859DA8", VA = "0x1859DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6590", Offset = "0xFC6590")]
			private set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public override long Length
		{
			[Token(Token = "0x600035C")]
			[Address(RVA = "0x1859DB0", Offset = "0x1859DB0", VA = "0x1859DB0", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000059")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x600035D")]
			[Address(RVA = "0x1859DB8", Offset = "0x1859DB8", VA = "0x1859DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC65A0", Offset = "0xFC65A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600035E")]
			[Address(RVA = "0x1859DC0", Offset = "0x1859DC0", VA = "0x1859DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC65B0", Offset = "0xFC65B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public override bool CanRead
		{
			[Token(Token = "0x600035F")]
			[Address(RVA = "0x1859DC8", Offset = "0x1859DC8", VA = "0x1859DC8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005B")]
		public override bool CanWrite
		{
			[Token(Token = "0x6000360")]
			[Address(RVA = "0x1859DD0", Offset = "0x1859DD0", VA = "0x1859DD0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005C")]
		public override bool CanSeek
		{
			[Token(Token = "0x6000361")]
			[Address(RVA = "0x1859DD8", Offset = "0x1859DD8", VA = "0x1859DD8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005D")]
		public override long Position
		{
			[Token(Token = "0x6000365")]
			[Address(RVA = "0x1859F24", Offset = "0x1859F24", VA = "0x1859F24", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000366")]
			[Address(RVA = "0x1859F2C", Offset = "0x1859F2C", VA = "0x1859F2C", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x185989C", Offset = "0x185989C", VA = "0x185989C")]
		public WaveFileWriter(Stream outStream, WaveFormat format)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1859D00", Offset = "0x1859D00", VA = "0x1859D00")]
		public WaveFileWriter(string filename, WaveFormat format)
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1859C44", Offset = "0x1859C44", VA = "0x1859C44")]
		private void WriteDataChunkHeader()
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1859B6C", Offset = "0x1859B6C", VA = "0x1859B6C")]
		private void CreateFactChunk()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1859D98", Offset = "0x1859D98", VA = "0x1859D98")]
		private bool HasFactChunk()
		{
			return default(bool);
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x1859DE0", Offset = "0x1859DE0", VA = "0x1859DE0", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x1859E4C", Offset = "0x1859E4C", VA = "0x1859E4C", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x1859EB8", Offset = "0x1859EB8", VA = "0x1859EB8", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x1859F98", Offset = "0x1859F98", VA = "0x1859F98", Slot = "29")]
		public override void Write(byte[] data, int offset, int count)
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x1859FE0", Offset = "0x1859FE0", VA = "0x1859FE0")]
		public void WriteSample(float sample)
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x185A024", Offset = "0x185A024", VA = "0x185A024")]
		public void WriteSamples(float[] samples, int offset, int count)
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x185A0BC", Offset = "0x185A0BC", VA = "0x185A0BC", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x185A0DC", Offset = "0x185A0DC", VA = "0x185A0DC", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x185A174", Offset = "0x185A174", VA = "0x185A174", Slot = "31")]
		protected virtual void UpdateHeader(BinaryWriter writer)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x185A2B8", Offset = "0x185A2B8", VA = "0x185A2B8")]
		private void UpdateDataChunk(BinaryWriter writer)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x185A1C8", Offset = "0x185A1C8", VA = "0x185A1C8")]
		private void UpdateRiffChunk(BinaryWriter writer)
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x185A230", Offset = "0x185A230", VA = "0x185A230")]
		private void UpdateFactChunk(BinaryWriter writer)
		{
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x185A30C", Offset = "0x185A30C", VA = "0x185A30C", Slot = "1")]
		~WaveFileWriter()
		{
		}
	}
	[Token(Token = "0x2000077")]
	public sealed class WaveFormat
	{
		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int _channels;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int _sampleRate;

		[Token(Token = "0x1700005E")]
		public int Channels
		{
			[Token(Token = "0x6000371")]
			[Address(RVA = "0x185A384", Offset = "0x185A384", VA = "0x185A384")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700005F")]
		public int SampleRate
		{
			[Token(Token = "0x6000372")]
			[Address(RVA = "0x185A38C", Offset = "0x185A38C", VA = "0x185A38C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x185A394", Offset = "0x185A394", VA = "0x185A394")]
		public WaveFormat(int sampleRate, int channels)
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x185A444", Offset = "0x185A444", VA = "0x185A444")]
		public bool Equals(WaveFormat other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x185A480", Offset = "0x185A480", VA = "0x185A480", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x185A4A4", Offset = "0x185A4A4", VA = "0x185A4A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace HandyCollections.Heap
{
	[Token(Token = "0x2000078")]
	internal interface IMinHeap<T>
	{
		[Token(Token = "0x17000060")]
		int Count
		{
			[Token(Token = "0x6000377")]
			get;
		}

		[Token(Token = "0x17000061")]
		T Minimum
		{
			[Token(Token = "0x6000378")]
			get;
		}

		[Token(Token = "0x6000379")]
		void Add(T item);

		[Token(Token = "0x600037A")]
		void Add(IEnumerable<T> items);

		[Token(Token = "0x600037B")]
		T RemoveMin();

		[Token(Token = "0x600037C")]
		T RemoveAt(int index);

		[Token(Token = "0x600037D")]
		int IndexOf(T item);

		[Token(Token = "0x600037E")]
		int IndexOf(Predicate<T> predicate);

		[Token(Token = "0x600037F")]
		void Clear();
	}
	[Token(Token = "0x2000079")]
	internal class MinHeap<T> : IMinHeap<T>
	{
		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<T> _heap;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IComparer<T> _comparer;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _allowResize;

		[Token(Token = "0x17000062")]
		public int Count
		{
			[Token(Token = "0x6000380")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000063")]
		public T Minimum
		{
			[Token(Token = "0x6000381")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000064")]
		public bool AllowHeapResize
		{
			[Token(Token = "0x6000382")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000383")]
			set
			{
			}
		}

		[Token(Token = "0x6000384")]
		public MinHeap()
		{
		}

		[Token(Token = "0x6000385")]
		public MinHeap(int capacity)
		{
		}

		[Token(Token = "0x6000386")]
		public MinHeap(int capacity, IComparer<T> comparer)
		{
		}

		[Token(Token = "0x6000387")]
		public MinHeap(IComparer<T> comparer)
		{
		}

		[Token(Token = "0x6000388")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000389")]
		public void Add(IEnumerable<T> items)
		{
		}

		[Token(Token = "0x600038A")]
		public void Heapify()
		{
		}

		[Token(Token = "0x600038B")]
		public void Heapify(int mutated)
		{
		}

		[Token(Token = "0x600038C")]
		public T RemoveMin()
		{
			return (T)null;
		}

		[Token(Token = "0x600038D")]
		public T RemoveAt(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x600038E")]
		public void Clear()
		{
		}

		[Token(Token = "0x600038F")]
		private void BubbleUp(int index)
		{
		}

		[Token(Token = "0x6000390")]
		private int TrickleDown(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000391")]
		private void DebugCheckHeapProperty()
		{
		}

		[Token(Token = "0x6000392")]
		private bool IsLessThan(T a, T b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000393")]
		private static int ParentIndex(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6000394")]
		private void Swap(int a, int b)
		{
		}

		[Token(Token = "0x6000395")]
		private static int LeftChild(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6000396")]
		private static int RightChild(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6000397")]
		private int SmallestChildSmallerThan(int i, T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000398")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000399")]
		public int IndexOf(Predicate<T> predicate)
		{
			return default(int);
		}
	}
}
namespace Dissonance
{
	[Token(Token = "0x200007A")]
	public enum AudioQuality
	{
		[Token(Token = "0x400025D")]
		Low,
		[Token(Token = "0x400025E")]
		Medium,
		[Token(Token = "0x400025F")]
		High
	}
	[Token(Token = "0x200007B")]
	public abstract class BaseCommsTrigger : MonoBehaviour, IAccessTokenCollection
	{
		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly Log Log;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _wasColliderTriggered;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<GameObject> _entitiesInCollider;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TokenSet _tokens;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool? _cachedTokenActivation;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DissonanceComms _comms;

		[Token(Token = "0x17000065")]
		public abstract bool UseColliderTrigger
		{
			[Token(Token = "0x600039A")]
			get;
			[Token(Token = "0x600039B")]
			set;
		}

		[Token(Token = "0x17000066")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFCF1E4", Offset = "0xFCF1E4")]
		public bool UseTrigger
		{
			[Token(Token = "0x600039C")]
			[Address(RVA = "0x1C66D34", Offset = "0x1C66D34", VA = "0x1C66D34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600039D")]
			[Address(RVA = "0x1C66D40", Offset = "0x1C66D40", VA = "0x1C66D40")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public abstract bool CanTrigger
		{
			[Token(Token = "0x600039E")]
			get;
		}

		[Token(Token = "0x17000068")]
		public bool IsColliderTriggered
		{
			[Token(Token = "0x600039F")]
			[Address(RVA = "0x1C66D50", Offset = "0x1C66D50", VA = "0x1C66D50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000069")]
		public IEnumerable<string> Tokens
		{
			[Token(Token = "0x60003A0")]
			[Address(RVA = "0x1C66DC4", Offset = "0x1C66DC4", VA = "0x1C66DC4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		protected DissonanceComms Comms
		{
			[Token(Token = "0x60003A1")]
			[Address(RVA = "0x1C66DCC", Offset = "0x1C66DCC", VA = "0x1C66DCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003A2")]
			[Address(RVA = "0x1C66DD4", Offset = "0x1C66DD4", VA = "0x1C66DD4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		protected bool TokenActivationState
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0x1C6755C", Offset = "0x1C6755C", VA = "0x1C6755C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1C66FC4", Offset = "0x1C66FC4", VA = "0x1C66FC4")]
		protected BaseCommsTrigger()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1C670D8", Offset = "0x1C670D8", VA = "0x1C670D8", Slot = "11")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC65C0", Offset = "0xFC65C0")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1C671B4", Offset = "0x1C671B4", VA = "0x1C671B4", Slot = "12")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC65D0", Offset = "0xFC65D0")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x1C671B8", Offset = "0x1C671B8", VA = "0x1C671B8", Slot = "13")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC65E0", Offset = "0xFC65E0")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1C67310", Offset = "0x1C67310", VA = "0x1C67310", Slot = "14")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC65F0", Offset = "0xFC65F0")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x1C67548", Offset = "0x1C67548", VA = "0x1C67548", Slot = "15")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC6600", Offset = "0xFC6600")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1C6754C", Offset = "0x1C6754C", VA = "0x1C6754C", Slot = "16")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC6610", Offset = "0xFC6610")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1C67554", Offset = "0x1C67554", VA = "0x1C67554", Slot = "17")]
		protected virtual void TokensModified(string token)
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1C67620", Offset = "0x1C67620", VA = "0x1C67620", Slot = "5")]
		public bool ContainsToken(string token)
		{
			return default(bool);
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1C6763C", Offset = "0x1C6763C", VA = "0x1C6763C", Slot = "6")]
		public bool AddToken(string token)
		{
			return default(bool);
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1C67658", Offset = "0x1C67658", VA = "0x1C67658", Slot = "7")]
		public bool RemoveToken(string token)
		{
			return default(bool);
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x1C67674", Offset = "0x1C67674", VA = "0x1C67674", Slot = "18")]
		protected virtual void ColliderTriggerChanged()
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x1C67678", Offset = "0x1C67678", VA = "0x1C67678")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC6620", Offset = "0xFC6620")]
		private void OnTriggerEnter([NotNull] Collider other)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x1C677C0", Offset = "0x1C677C0", VA = "0x1C677C0")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC6630", Offset = "0xFC6630")]
		private void OnTriggerExit([NotNull] Collider other)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1C678D8", Offset = "0x1C678D8", VA = "0x1C678D8", Slot = "19")]
		protected virtual bool ColliderTriggerFilter([NotNull] Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x1C6724C", Offset = "0x1C6724C", VA = "0x1C6724C")]
		[CanBeNull]
		private DissonanceComms FindLocalVoiceComm()
		{
			return null;
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x1C67480", Offset = "0x1C67480", VA = "0x1C67480")]
		protected bool CheckVoiceComm()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200007C")]
	public enum ChannelPriority
	{
		[Token(Token = "0x4000267")]
		None = -2,
		[Token(Token = "0x4000268")]
		Low,
		[Token(Token = "0x4000269")]
		Default,
		[Token(Token = "0x400026A")]
		Medium,
		[Token(Token = "0x400026B")]
		High
	}
	[Token(Token = "0x200007D")]
	public sealed class ChannelProperties
	{
		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IChannelPriorityProvider _defaultPriority;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA654", Offset = "0xFBA654")]
		private ushort <Id>k__BackingField;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA664", Offset = "0xFBA664")]
		private bool <Positional>k__BackingField;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA674", Offset = "0xFBA674")]
		private ChannelPriority <Priority>k__BackingField;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _amplitudeMultiplier;

		[Token(Token = "0x1700006C")]
		public ushort Id
		{
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0x1C67A74", Offset = "0x1C67A74", VA = "0x1C67A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6650", Offset = "0xFC6650")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x60003B6")]
			[Address(RVA = "0x1C67A7C", Offset = "0x1C67A7C", VA = "0x1C67A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6660", Offset = "0xFC6660")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public bool Positional
		{
			[Token(Token = "0x60003B7")]
			[Address(RVA = "0x1C67A84", Offset = "0x1C67A84", VA = "0x1C67A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6670", Offset = "0xFC6670")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003B8")]
			[Address(RVA = "0x1C67A8C", Offset = "0x1C67A8C", VA = "0x1C67A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6680", Offset = "0xFC6680")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public ChannelPriority Priority
		{
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0x1C67A98", Offset = "0x1C67A98", VA = "0x1C67A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6690", Offset = "0xFC6690")]
			get
			{
				return default(ChannelPriority);
			}
			[Token(Token = "0x60003BA")]
			[Address(RVA = "0x1C67AA0", Offset = "0x1C67AA0", VA = "0x1C67AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC66A0", Offset = "0xFC66A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		internal ChannelPriority TransmitPriority
		{
			[Token(Token = "0x60003BB")]
			[Address(RVA = "0x1C67AA8", Offset = "0x1C67AA8", VA = "0x1C67AA8")]
			get
			{
				return default(ChannelPriority);
			}
		}

		[Token(Token = "0x17000070")]
		internal float AmplitudeMultiplier
		{
			[Token(Token = "0x60003BC")]
			[Address(RVA = "0x1C67B70", Offset = "0x1C67B70", VA = "0x1C67B70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003BD")]
			[Address(RVA = "0x1C67B78", Offset = "0x1C67B78", VA = "0x1C67B78")]
			set
			{
			}
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x1C67C08", Offset = "0x1C67C08", VA = "0x1C67C08")]
		internal ChannelProperties(IChannelPriorityProvider defaultPriority)
		{
		}
	}
	[Token(Token = "0x200007E")]
	public abstract class Channels<T, TId> where T : IChannel<TId>, IEquatable<T> where TId : IEquatable<TId>
	{
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB94C4", Offset = "0xFB94C4")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IChannelPriorityProvider priorityProvider;

			[Token(Token = "0x6001D51")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001D52")]
			internal ChannelProperties <.ctor>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Log Log;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<ushort, T> _openChannelsBySubId;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Pool<ChannelProperties> _propertiesPool;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ushort _nextId;

		[Token(Token = "0x17000071")]
		public int Count
		{
			[Token(Token = "0x60003C3")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000003")]
		public event Action<TId, ChannelProperties> OpenedChannel
		{
			[Token(Token = "0x60003BF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC66B0", Offset = "0xFC66B0")]
			add
			{
			}
			[Token(Token = "0x60003C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC66C0", Offset = "0xFC66C0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000004")]
		public event Action<TId, ChannelProperties> ClosedChannel
		{
			[Token(Token = "0x60003C1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC66D0", Offset = "0xFC66D0")]
			add
			{
			}
			[Token(Token = "0x60003C2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC66E0", Offset = "0xFC66E0")]
			remove
			{
			}
		}

		[Token(Token = "0x60003C4")]
		internal Channels([NotNull] IChannelPriorityProvider priorityProvider)
		{
		}

		[Token(Token = "0x60003C5")]
		[NotNull]
		protected abstract T CreateChannel(ushort subscriptionId, TId channelId, ChannelProperties properties);

		[Token(Token = "0x60003C6")]
		public bool Contains([NotNull] T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60003C7")]
		[NotNull]
		public T Open([NotNull] TId id, bool positional = false, ChannelPriority priority = ChannelPriority.Default, float amplitudeMultiplier = 1f)
		{
			return (T)null;
		}

		[Token(Token = "0x60003C8")]
		public bool Close([NotNull] T channel)
		{
			return default(bool);
		}

		[Token(Token = "0x60003C9")]
		internal void Refresh()
		{
		}

		[Token(Token = "0x60003CA")]
		public Dictionary<ushort, T>.Enumerator GetEnumerator()
		{
			return default(Dictionary<ushort, T>.Enumerator);
		}
	}
	[Token(Token = "0x200007F")]
	public interface IChannel<T> : IDisposable
	{
		[Token(Token = "0x17000072")]
		T TargetId
		{
			[Token(Token = "0x60003CB")]
			get;
		}

		[Token(Token = "0x17000073")]
		ushort SubscriptionId
		{
			[Token(Token = "0x60003CC")]
			get;
		}

		[Token(Token = "0x17000074")]
		[NotNull]
		ChannelProperties Properties
		{
			[Token(Token = "0x60003CD")]
			get;
		}
	}
	[Token(Token = "0x2000080")]
	public struct PlayerChannel : IChannel<string>, IDisposable, IEquatable<PlayerChannel>
	{
		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ushort _subscriptionId;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly string _playerId;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ChannelProperties _properties;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly PlayerChannels _channels;

		[Token(Token = "0x17000075")]
		public ushort SubscriptionId
		{
			[Token(Token = "0x60003CF")]
			[Address(RVA = "0x110AB58", Offset = "0x110AB58", VA = "0x110AB58", Slot = "5")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000076")]
		[NotNull]
		public string TargetId
		{
			[Token(Token = "0x60003D0")]
			[Address(RVA = "0x110AB60", Offset = "0x110AB60", VA = "0x110AB60", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private ChannelProperties Dissonance.IChannel<System.String>.Properties
		{
			[Token(Token = "0x60003D1")]
			[Address(RVA = "0x110AB68", Offset = "0x110AB68", VA = "0x110AB68", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		[NotNull]
		internal ChannelProperties Properties
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0x110AB70", Offset = "0x110AB70", VA = "0x110AB70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		public bool IsOpen
		{
			[Token(Token = "0x60003D3")]
			[Address(RVA = "0x110AB78", Offset = "0x110AB78", VA = "0x110AB78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		public bool Positional
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0x110AB80", Offset = "0x110AB80", VA = "0x110AB80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003D5")]
			[Address(RVA = "0x110AB88", Offset = "0x110AB88", VA = "0x110AB88")]
			set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public ChannelPriority Priority
		{
			[Token(Token = "0x60003D6")]
			[Address(RVA = "0x110AB94", Offset = "0x110AB94", VA = "0x110AB94")]
			get
			{
				return default(ChannelPriority);
			}
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x110AB9C", Offset = "0x110AB9C", VA = "0x110AB9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public float Volume
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x110ABD4", Offset = "0x110ABD4", VA = "0x110ABD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003D9")]
			[Address(RVA = "0x110ABDC", Offset = "0x110ABDC", VA = "0x110ABDC")]
			set
			{
			}
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x110AB50", Offset = "0x110AB50", VA = "0x110AB50")]
		internal PlayerChannel(ushort subscriptionId, string playerId, PlayerChannels channels, ChannelProperties properties)
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x110ABE4", Offset = "0x110ABE4", VA = "0x110ABE4", Slot = "7")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x110ABEC", Offset = "0x110ABEC", VA = "0x110ABEC")]
		private void CheckValidProperties()
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x110ABF4", Offset = "0x110ABF4", VA = "0x110ABF4", Slot = "8")]
		public bool Equals(PlayerChannel other)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x110AC1C", Offset = "0x110AC1C", VA = "0x110AC1C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x110AC24", Offset = "0x110AC24", VA = "0x110AC24", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000081")]
	public sealed class PlayerChannels : Channels<PlayerChannel, string>
	{
		[Serializable]
		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB94D4", Offset = "0xFB94D4")]
		private sealed class <>c
		{
			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string, ChannelProperties> <>9__0_0;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<string, ChannelProperties> <>9__0_1;

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0x17BA018", Offset = "0x17BA018", VA = "0x17BA018")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x17BA020", Offset = "0x17BA020", VA = "0x17BA020")]
			internal void <.ctor>b__0_0(string id, ChannelProperties _)
			{
			}

			[Token(Token = "0x6001D56")]
			[Address(RVA = "0x17BA024", Offset = "0x17BA024", VA = "0x17BA024")]
			internal void <.ctor>b__0_1(string id, ChannelProperties _)
			{
			}
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x17AC75C", Offset = "0x17AC75C", VA = "0x17AC75C")]
		internal PlayerChannels(IChannelPriorityProvider priorityProvider)
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x17B9F98", Offset = "0x17B9F98", VA = "0x17B9F98", Slot = "4")]
		protected override PlayerChannel CreateChannel(ushort subscriptionId, string channelId, ChannelProperties properties)
		{
			return default(PlayerChannel);
		}
	}
	[Token(Token = "0x2000082")]
	public struct RemoteChannel
	{
		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string _target;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly ChannelType _type;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly PlaybackOptions _options;

		[Token(Token = "0x1700007D")]
		public ChannelType Type
		{
			[Token(Token = "0x60003E1")]
			[Address(RVA = "0x1110448", Offset = "0x1110448", VA = "0x1110448")]
			get
			{
				return default(ChannelType);
			}
		}

		[Token(Token = "0x1700007E")]
		public PlaybackOptions Options
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0x1110450", Offset = "0x1110450", VA = "0x1110450")]
			get
			{
				return default(PlaybackOptions);
			}
		}

		[Token(Token = "0x1700007F")]
		public string TargetName
		{
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0x1110460", Offset = "0x1110460", VA = "0x1110460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1110468", Offset = "0x1110468", VA = "0x1110468")]
		internal RemoteChannel([NotNull] string targetName, ChannelType type, PlaybackOptions options)
		{
		}
	}
	[Token(Token = "0x2000083")]
	public struct RoomChannel : IChannel<string>, IDisposable, IEquatable<RoomChannel>
	{
		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ushort _subscriptionId;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly string _roomId;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ChannelProperties _properties;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly RoomChannels _channels;

		[Token(Token = "0x17000080")]
		public ushort SubscriptionId
		{
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0x11104B8", Offset = "0x11104B8", VA = "0x11104B8", Slot = "5")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000081")]
		[NotNull]
		public string TargetId
		{
			[Token(Token = "0x60003E7")]
			[Address(RVA = "0x11104C0", Offset = "0x11104C0", VA = "0x11104C0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private ChannelProperties Dissonance.IChannel<System.String>.Properties
		{
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0x11104C8", Offset = "0x11104C8", VA = "0x11104C8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		[NotNull]
		internal ChannelProperties Properties
		{
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x11104D0", Offset = "0x11104D0", VA = "0x11104D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public bool IsOpen
		{
			[Token(Token = "0x60003EA")]
			[Address(RVA = "0x11104D8", Offset = "0x11104D8", VA = "0x11104D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		public bool Positional
		{
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x11104E0", Offset = "0x11104E0", VA = "0x11104E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0x11104E8", Offset = "0x11104E8", VA = "0x11104E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public ChannelPriority Priority
		{
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0x11104F4", Offset = "0x11104F4", VA = "0x11104F4")]
			get
			{
				return default(ChannelPriority);
			}
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0x11104FC", Offset = "0x11104FC", VA = "0x11104FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public float Volume
		{
			[Token(Token = "0x60003EF")]
			[Address(RVA = "0x1110534", Offset = "0x1110534", VA = "0x1110534")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003F0")]
			[Address(RVA = "0x111053C", Offset = "0x111053C", VA = "0x111053C")]
			set
			{
			}
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x11104B0", Offset = "0x11104B0", VA = "0x11104B0")]
		internal RoomChannel(ushort subscriptionId, string roomId, RoomChannels channels, ChannelProperties properties)
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1110544", Offset = "0x1110544", VA = "0x1110544", Slot = "7")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x111054C", Offset = "0x111054C", VA = "0x111054C")]
		private void CheckValidProperties()
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1110554", Offset = "0x1110554", VA = "0x1110554", Slot = "8")]
		public bool Equals(RoomChannel other)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x111057C", Offset = "0x111057C", VA = "0x111057C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1110584", Offset = "0x1110584", VA = "0x1110584", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000084")]
	public sealed class RoomChannels : Channels<RoomChannel, string>
	{
		[Serializable]
		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB94E4", Offset = "0xFB94E4")]
		private sealed class <>c
		{
			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string, ChannelProperties> <>9__0_0;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<string, ChannelProperties> <>9__0_1;

			[Token(Token = "0x6001D58")]
			[Address(RVA = "0x18AF180", Offset = "0x18AF180", VA = "0x18AF180")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x18AF188", Offset = "0x18AF188", VA = "0x18AF188")]
			internal void <.ctor>b__0_0(string id, ChannelProperties _)
			{
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x18AF18C", Offset = "0x18AF18C", VA = "0x18AF18C")]
			internal void <.ctor>b__0_1(string id, ChannelProperties _)
			{
			}
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x18AEF40", Offset = "0x18AEF40", VA = "0x18AEF40")]
		internal RoomChannels([NotNull] IChannelPriorityProvider priorityProvider)
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x18AF100", Offset = "0x18AF100", VA = "0x18AF100", Slot = "4")]
		protected override RoomChannel CreateChannel(ushort subscriptionId, string channelId, ChannelProperties properties)
		{
			return default(RoomChannel);
		}
	}
	[Token(Token = "0x2000085")]
	public enum ChannelType
	{
		[Token(Token = "0x4000284")]
		Room,
		[Token(Token = "0x4000285")]
		Player
	}
	[Token(Token = "0x2000086")]
	public struct CodecSettings
	{
		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Codec _codec;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private readonly uint _frameSize;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly int _sampleRate;

		[Token(Token = "0x17000088")]
		public Codec Codec
		{
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0x1131CA0", Offset = "0x1131CA0", VA = "0x1131CA0")]
			get
			{
				return default(Codec);
			}
		}

		[Token(Token = "0x17000089")]
		public uint FrameSize
		{
			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x1131CA8", Offset = "0x1131CA8", VA = "0x1131CA8")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700008A")]
		public int SampleRate
		{
			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x1131CB0", Offset = "0x1131CB0", VA = "0x1131CB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x1131C94", Offset = "0x1131C94", VA = "0x1131C94")]
		public CodecSettings(Codec codec, uint frameSize, int sampleRate)
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x1131CB8", Offset = "0x1131CB8", VA = "0x1131CB8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000087")]
	internal class CodecSettingsLoader
	{
		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _started;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _settingsReady;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object _settingsWriteLock;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CodecSettings _config;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private AudioQuality _encoderQuality;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FrameSize _encoderFrameSize;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Codec _codec;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool _encodeFec;

		[Token(Token = "0x1700008B")]
		public CodecSettings Config
		{
			[Token(Token = "0x60003FE")]
			[Address(RVA = "0x1C67D40", Offset = "0x1C67D40", VA = "0x1C67D40")]
			get
			{
				return default(CodecSettings);
			}
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x1C67EEC", Offset = "0x1C67EEC", VA = "0x1C67EEC")]
		public void Start(Codec codec = Codec.Opus)
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1C67D68", Offset = "0x1C67D68", VA = "0x1C67D68")]
		private void GenerateSettings()
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x1C67FAC", Offset = "0x1C67FAC", VA = "0x1C67FAC")]
		private static CodecSettings GetEncoderSettings(Codec codec, AudioQuality quality, FrameSize frameSize)
		{
			return default(CodecSettings);
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x1C55DF4", Offset = "0x1C55DF4", VA = "0x1C55DF4")]
		[NotNull]
		public IVoiceEncoder CreateEncoder()
		{
			return null;
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1C680E8", Offset = "0x1C680E8", VA = "0x1C680E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x1C68128", Offset = "0x1C68128", VA = "0x1C68128")]
		public CodecSettingsLoader()
		{
		}
	}
	[Token(Token = "0x2000088")]
	public enum CommActivationMode
	{
		[Token(Token = "0x4000293")]
		None,
		[Token(Token = "0x4000294")]
		VoiceActivation,
		[Token(Token = "0x4000295")]
		PushToTalk
	}
	[Token(Token = "0x2000089")]
	public enum CommTriggerTarget
	{
		[Token(Token = "0x4000297")]
		Room,
		[Token(Token = "0x4000298")]
		Player,
		[Token(Token = "0x4000299")]
		Self
	}
	[Token(Token = "0x200008A")]
	public class DissonanceException : Exception
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x17AF6EC", Offset = "0x17AF6EC", VA = "0x17AF6EC")]
		public DissonanceException(string message)
		{
		}
	}
	[Token(Token = "0x200008B")]
	public enum FrameSize
	{
		[Token(Token = "0x400029B")]
		Tiny = -1,
		[Token(Token = "0x400029C")]
		Small,
		[Token(Token = "0x400029D")]
		Medium,
		[Token(Token = "0x400029E")]
		Large
	}
	[Token(Token = "0x200008C")]
	internal struct FrameSkipDetector
	{
		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float _maxFrameTime;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private readonly float _minimumBreakerDuration;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly float _maxBreakerDuration;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly float _breakerResetPerSecond;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _breakerCloseTimer;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _currentBreakerDuration;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _breakerClosed;

		[Token(Token = "0x1700008C")]
		internal bool IsBreakerClosed
		{
			[Token(Token = "0x6000407")]
			[Address(RVA = "0x1109F10", Offset = "0x1109F10", VA = "0x1109F10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x1109F18", Offset = "0x1109F18", VA = "0x1109F18")]
		public FrameSkipDetector(TimeSpan maxFrameTime, TimeSpan minimumBreakerDuration, TimeSpan maxBreakerDuration, TimeSpan breakerResetPerSecond)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1109F20", Offset = "0x1109F20", VA = "0x1109F20")]
		public bool IsFrameSkip(float deltaTime)
		{
			return default(bool);
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x1109F6C", Offset = "0x1109F6C", VA = "0x1109F6C")]
		private void UpdateBreaker(bool skip, float dt)
		{
		}
	}
	[Token(Token = "0x200008D")]
	public enum NetworkPlayerType
	{
		[Token(Token = "0x40002A7")]
		Unknown,
		[Token(Token = "0x40002A8")]
		Local,
		[Token(Token = "0x40002A9")]
		Remote
	}
	[Token(Token = "0x200008E")]
	public interface IDissonancePlayer
	{
		[Token(Token = "0x1700008D")]
		string PlayerId
		{
			[Token(Token = "0x600040B")]
			get;
		}

		[Token(Token = "0x1700008E")]
		Vector3 Position
		{
			[Token(Token = "0x600040C")]
			get;
		}

		[Token(Token = "0x1700008F")]
		Quaternion Rotation
		{
			[Token(Token = "0x600040D")]
			get;
		}

		[Token(Token = "0x17000090")]
		NetworkPlayerType Type
		{
			[Token(Token = "0x600040E")]
			get;
		}

		[Token(Token = "0x17000091")]
		bool IsTracking
		{
			[Token(Token = "0x600040F")]
			get;
		}
	}
	[Token(Token = "0x200008F")]
	internal interface ILossEstimator
	{
		[Token(Token = "0x17000092")]
		float PacketLoss
		{
			[Token(Token = "0x6000410")]
			get;
		}
	}
	[Token(Token = "0x2000090")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1348", Offset = "0xFB1348")]
	internal sealed class CanBeNullAttribute : Attribute
	{
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x1C67A64", Offset = "0x1C67A64", VA = "0x1C67A64")]
		public CanBeNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB135C", Offset = "0xFB135C")]
	internal sealed class NotNullAttribute : Attribute
	{
		[Token(Token = "0x6000412")]
		[Address(RVA = "0x17B9370", Offset = "0x17B9370", VA = "0x17B9370")]
		public NotNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000092")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1370", Offset = "0xFB1370")]
	internal sealed class ItemNotNullAttribute : Attribute
	{
		[Token(Token = "0x6000413")]
		[Address(RVA = "0x17AFBDC", Offset = "0x17AFBDC", VA = "0x17AFBDC")]
		public ItemNotNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1384", Offset = "0xFB1384")]
	internal sealed class ItemCanBeNullAttribute : Attribute
	{
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x17AFBD4", Offset = "0x17AFBD4", VA = "0x17AFBD4")]
		public ItemCanBeNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1398", Offset = "0xFB1398")]
	internal sealed class StringFormatMethodAttribute : Attribute
	{
		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA6A4", Offset = "0xFBA6A4")]
		private string <FormatParameterName>k__BackingField;

		[Token(Token = "0x17000093")]
		[NotNull]
		public string FormatParameterName
		{
			[Token(Token = "0x6000416")]
			[Address(RVA = "0x18B0528", Offset = "0x18B0528", VA = "0x18B0528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6720", Offset = "0xFC6720")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000417")]
			[Address(RVA = "0x18B0530", Offset = "0x18B0530", VA = "0x18B0530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6730", Offset = "0xFC6730")]
			private set
			{
			}
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x18B04F4", Offset = "0x18B04F4", VA = "0x18B04F4")]
		public StringFormatMethodAttribute([NotNull] string formatParameterName)
		{
		}
	}
	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB13AC", Offset = "0xFB13AC")]
	internal sealed class ValueProviderAttribute : Attribute
	{
		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA6B4", Offset = "0xFBA6B4")]
		private string <Name>k__BackingField;

		[Token(Token = "0x17000094")]
		[NotNull]
		public string Name
		{
			[Token(Token = "0x6000419")]
			[Address(RVA = "0x18B1640", Offset = "0x18B1640", VA = "0x18B1640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6740", Offset = "0xFC6740")]
			get
			{
				return null;
			}
			[Token(Token = "0x600041A")]
			[Address(RVA = "0x18B1648", Offset = "0x18B1648", VA = "0x18B1648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6750", Offset = "0xFC6750")]
			private set
			{
			}
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x18B160C", Offset = "0x18B160C", VA = "0x18B160C")]
		public ValueProviderAttribute([NotNull] string name)
		{
		}
	}
	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB13E4", Offset = "0xFB13E4")]
	internal sealed class InvokerParameterNameAttribute : Attribute
	{
		[Token(Token = "0x600041B")]
		[Address(RVA = "0x17AFBCC", Offset = "0x17AFBCC", VA = "0x17AFBCC")]
		public InvokerParameterNameAttribute()
		{
		}
	}
	[Token(Token = "0x2000097")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB13F8", Offset = "0xFB13F8")]
	internal sealed class NotifyPropertyChangedInvocatorAttribute : Attribute
	{
		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA6C4", Offset = "0xFBA6C4")]
		private string <ParameterName>k__BackingField;

		[Token(Token = "0x17000095")]
		[CanBeNull]
		public string ParameterName
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0x17B93B4", Offset = "0x17B93B4", VA = "0x17B93B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6760", Offset = "0xFC6760")]
			get
			{
				return null;
			}
			[Token(Token = "0x600041F")]
			[Address(RVA = "0x17B93BC", Offset = "0x17B93BC", VA = "0x17B93BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6770", Offset = "0xFC6770")]
			private set
			{
			}
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x17B9378", Offset = "0x17B9378", VA = "0x17B9378")]
		public NotifyPropertyChangedInvocatorAttribute()
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x17B9380", Offset = "0x17B9380", VA = "0x17B9380")]
		public NotifyPropertyChangedInvocatorAttribute([NotNull] string parameterName)
		{
		}
	}
	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB140C", Offset = "0xFB140C")]
	internal sealed class ContractAnnotationAttribute : Attribute
	{
		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA6D4", Offset = "0xFBA6D4")]
		private string <Contract>k__BackingField;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA6E4", Offset = "0xFBA6E4")]
		private bool <ForceFullStates>k__BackingField;

		[Token(Token = "0x17000096")]
		[NotNull]
		public string Contract
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0x17A7798", Offset = "0x17A7798", VA = "0x17A7798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6780", Offset = "0xFC6780")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000423")]
			[Address(RVA = "0x17A77A0", Offset = "0x17A77A0", VA = "0x17A77A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6790", Offset = "0xFC6790")]
			private set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public bool ForceFullStates
		{
			[Token(Token = "0x6000424")]
			[Address(RVA = "0x17A77A8", Offset = "0x17A77A8", VA = "0x17A77A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC67A0", Offset = "0xFC67A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000425")]
			[Address(RVA = "0x17A77B0", Offset = "0x17A77B0", VA = "0x17A77B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC67B0", Offset = "0xFC67B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x17A7710", Offset = "0x17A7710", VA = "0x17A7710")]
		public ContractAnnotationAttribute([NotNull] string contract)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x17A774C", Offset = "0x17A774C", VA = "0x17A774C")]
		public ContractAnnotationAttribute([NotNull] string contract, bool forceFullStates)
		{
		}
	}
	[Token(Token = "0x2000099")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1444", Offset = "0xFB1444")]
	internal sealed class LocalizationRequiredAttribute : Attribute
	{
		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA6F4", Offset = "0xFBA6F4")]
		private bool <Required>k__BackingField;

		[Token(Token = "0x17000098")]
		public bool Required
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0x17B0A0C", Offset = "0x17B0A0C", VA = "0x17B0A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC67C0", Offset = "0xFC67C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000429")]
			[Address(RVA = "0x17B0A14", Offset = "0x17B0A14", VA = "0x17B0A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC67D0", Offset = "0xFC67D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x17B09B0", Offset = "0x17B09B0", VA = "0x17B09B0")]
		public LocalizationRequiredAttribute()
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x17B09DC", Offset = "0x17B09DC", VA = "0x17B09DC")]
		public LocalizationRequiredAttribute(bool required)
		{
		}
	}
	[Token(Token = "0x200009A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1458", Offset = "0xFB1458")]
	internal sealed class CannotApplyEqualityOperatorAttribute : Attribute
	{
		[Token(Token = "0x600042A")]
		[Address(RVA = "0x1C67A6C", Offset = "0x1C67A6C", VA = "0x1C67A6C")]
		public CannotApplyEqualityOperatorAttribute()
		{
		}
	}
	[Token(Token = "0x200009B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB146C", Offset = "0xFB146C")]
	[AttributeAttribute(Name = "BaseTypeRequiredAttribute", RVA = "0xFB146C", Offset = "0xFB146C")]
	internal sealed class BaseTypeRequiredAttribute : Attribute
	{
		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA704", Offset = "0xFBA704")]
		private Type <BaseType>k__BackingField;

		[Token(Token = "0x17000099")]
		[NotNull]
		public Type BaseType
		{
			[Token(Token = "0x600042C")]
			[Address(RVA = "0x1C67A54", Offset = "0x1C67A54", VA = "0x1C67A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC67E0", Offset = "0xFC67E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600042D")]
			[Address(RVA = "0x1C67A5C", Offset = "0x1C67A5C", VA = "0x1C67A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC67F0", Offset = "0xFC67F0")]
			private set
			{
			}
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x1C67A20", Offset = "0x1C67A20", VA = "0x1C67A20")]
		public BaseTypeRequiredAttribute([NotNull] Type baseType)
		{
		}
	}
	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB14F0", Offset = "0xFB14F0")]
	internal sealed class UsedImplicitlyAttribute : Attribute
	{
		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA714", Offset = "0xFBA714")]
		private ImplicitUseKindFlags <UseKindFlags>k__BackingField;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA724", Offset = "0xFBA724")]
		private ImplicitUseTargetFlags <TargetFlags>k__BackingField;

		[Token(Token = "0x1700009A")]
		public ImplicitUseKindFlags UseKindFlags
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x18B15EC", Offset = "0x18B15EC", VA = "0x18B15EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6800", Offset = "0xFC6800")]
			get
			{
				return default(ImplicitUseKindFlags);
			}
			[Token(Token = "0x6000433")]
			[Address(RVA = "0x18B15F4", Offset = "0x18B15F4", VA = "0x18B15F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6810", Offset = "0xFC6810")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public ImplicitUseTargetFlags TargetFlags
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x18B15FC", Offset = "0x18B15FC", VA = "0x18B15FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6820", Offset = "0xFC6820")]
			get
			{
				return default(ImplicitUseTargetFlags);
			}
			[Token(Token = "0x6000435")]
			[Address(RVA = "0x18B1604", Offset = "0x18B1604", VA = "0x18B1604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6830", Offset = "0xFC6830")]
			private set
			{
			}
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x18B1524", Offset = "0x18B1524", VA = "0x18B1524")]
		public UsedImplicitlyAttribute()
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x18B158C", Offset = "0x18B158C", VA = "0x18B158C")]
		public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x18B15BC", Offset = "0x18B15BC", VA = "0x18B15BC")]
		public UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags)
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x18B1554", Offset = "0x18B1554", VA = "0x18B1554")]
		public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags)
		{
		}
	}
	[Token(Token = "0x200009D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1504", Offset = "0xFB1504")]
	internal sealed class MeansImplicitUseAttribute : Attribute
	{
		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA734", Offset = "0xFBA734")]
		private ImplicitUseKindFlags <UseKindFlags>k__BackingField;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA744", Offset = "0xFBA744")]
		private ImplicitUseTargetFlags <TargetFlags>k__BackingField;

		[Token(Token = "0x1700009C")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFCF2BC", Offset = "0xFCF2BC")]
		public ImplicitUseKindFlags UseKindFlags
		{
			[Token(Token = "0x600043A")]
			[Address(RVA = "0x17B15F4", Offset = "0x17B15F4", VA = "0x17B15F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6840", Offset = "0xFC6840")]
			get
			{
				return default(ImplicitUseKindFlags);
			}
			[Token(Token = "0x600043B")]
			[Address(RVA = "0x17B15FC", Offset = "0x17B15FC", VA = "0x17B15FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6850", Offset = "0xFC6850")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFCF2CC", Offset = "0xFCF2CC")]
		public ImplicitUseTargetFlags TargetFlags
		{
			[Token(Token = "0x600043C")]
			[Address(RVA = "0x17B1604", Offset = "0x17B1604", VA = "0x17B1604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6860", Offset = "0xFC6860")]
			get
			{
				return default(ImplicitUseTargetFlags);
			}
			[Token(Token = "0x600043D")]
			[Address(RVA = "0x17B160C", Offset = "0x17B160C", VA = "0x17B160C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6870", Offset = "0xFC6870")]
			private set
			{
			}
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x17B152C", Offset = "0x17B152C", VA = "0x17B152C")]
		public MeansImplicitUseAttribute()
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x17B1594", Offset = "0x17B1594", VA = "0x17B1594")]
		public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags)
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x17B15C4", Offset = "0x17B15C4", VA = "0x17B15C4")]
		public MeansImplicitUseAttribute(ImplicitUseTargetFlags targetFlags)
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x17B155C", Offset = "0x17B155C", VA = "0x17B155C")]
		public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags)
		{
		}
	}
	[Token(Token = "0x200009E")]
	[Flags]
	internal enum ImplicitUseKindFlags
	{
		[Token(Token = "0x40002B6")]
		Default = 7,
		[Token(Token = "0x40002B7")]
		Access = 1,
		[Token(Token = "0x40002B8")]
		Assign = 2,
		[Token(Token = "0x40002B9")]
		InstantiatedWithFixedConstructorSignature = 4,
		[Token(Token = "0x40002BA")]
		InstantiatedNoFixedConstructorSignature = 8
	}
	[Token(Token = "0x200009F")]
	[Flags]
	internal enum ImplicitUseTargetFlags
	{
		[Token(Token = "0x40002BC")]
		Default = 1,
		[Token(Token = "0x40002BD")]
		Itself = 1,
		[Token(Token = "0x40002BE")]
		Members = 2,
		[Token(Token = "0x40002BF")]
		WithMembers = 3
	}
	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "MeansImplicitUseAttribute", RVA = "0xFB1538", Offset = "0xFB1538")]
	internal sealed class PublicAPIAttribute : Attribute
	{
		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA754", Offset = "0xFBA754")]
		private string <Comment>k__BackingField;

		[Token(Token = "0x1700009E")]
		[CanBeNull]
		public string Comment
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0x18ACF64", Offset = "0x18ACF64", VA = "0x18ACF64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6880", Offset = "0xFC6880")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000441")]
			[Address(RVA = "0x18ACF6C", Offset = "0x18ACF6C", VA = "0x18ACF6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6890", Offset = "0xFC6890")]
			private set
			{
			}
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x18ACF28", Offset = "0x18ACF28", VA = "0x18ACF28")]
		public PublicAPIAttribute()
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x18ACF30", Offset = "0x18ACF30", VA = "0x18ACF30")]
		public PublicAPIAttribute([NotNull] string comment)
		{
		}
	}
	[Token(Token = "0x20000A1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB154C", Offset = "0xFB154C")]
	internal sealed class InstantHandleAttribute : Attribute
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x17AFBC4", Offset = "0x17AFBC4", VA = "0x17AFBC4")]
		public InstantHandleAttribute()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1560", Offset = "0xFB1560")]
	internal sealed class PureAttribute : Attribute
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x18ACF74", Offset = "0x18ACF74", VA = "0x18ACF74")]
		public PureAttribute()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1574", Offset = "0xFB1574")]
	internal sealed class MustUseReturnValueAttribute : Attribute
	{
		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA764", Offset = "0xFBA764")]
		private string <Justification>k__BackingField;

		[Token(Token = "0x1700009F")]
		[CanBeNull]
		public string Justification
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0x17B1650", Offset = "0x17B1650", VA = "0x17B1650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC68A0", Offset = "0xFC68A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000447")]
			[Address(RVA = "0x17B1658", Offset = "0x17B1658", VA = "0x17B1658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC68B0", Offset = "0xFC68B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x17B1614", Offset = "0x17B1614", VA = "0x17B1614")]
		public MustUseReturnValueAttribute()
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x17B161C", Offset = "0x17B161C", VA = "0x17B161C")]
		public MustUseReturnValueAttribute([NotNull] string justification)
		{
		}
	}
	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1588", Offset = "0xFB1588")]
	internal sealed class ProvidesContextAttribute : Attribute
	{
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x18ACF20", Offset = "0x18ACF20", VA = "0x18ACF20")]
		public ProvidesContextAttribute()
		{
		}
	}
	[Token(Token = "0x20000A5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB159C", Offset = "0xFB159C")]
	internal sealed class PathReferenceAttribute : Attribute
	{
		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA774", Offset = "0xFBA774")]
		private string <BasePath>k__BackingField;

		[Token(Token = "0x170000A0")]
		[CanBeNull]
		public string BasePath
		{
			[Token(Token = "0x600044B")]
			[Address(RVA = "0x17B98EC", Offset = "0x17B98EC", VA = "0x17B98EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC68C0", Offset = "0xFC68C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600044C")]
			[Address(RVA = "0x17B98F4", Offset = "0x17B98F4", VA = "0x17B98F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC68D0", Offset = "0xFC68D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x17B98B0", Offset = "0x17B98B0", VA = "0x17B98B0")]
		public PathReferenceAttribute()
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x17B98B8", Offset = "0x17B98B8", VA = "0x17B98B8")]
		public PathReferenceAttribute([NotNull][AttributeAttribute(Name = "PathReferenceAttribute", RVA = "0xFCD58C", Offset = "0xFCD58C")] string basePath)
		{
		}
	}
	[Token(Token = "0x20000A6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB15B0", Offset = "0xFB15B0")]
	internal sealed class SourceTemplateAttribute : Attribute
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x18B04EC", Offset = "0x18B04EC", VA = "0x18B04EC")]
		public SourceTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB15C4", Offset = "0xFB15C4")]
	internal sealed class MacroAttribute : Attribute
	{
		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA784", Offset = "0xFBA784")]
		private string <Expression>k__BackingField;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA794", Offset = "0xFBA794")]
		private int <Editable>k__BackingField;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA7A4", Offset = "0xFBA7A4")]
		private string <Target>k__BackingField;

		[Token(Token = "0x170000A1")]
		[CanBeNull]
		public string Expression
		{
			[Token(Token = "0x600044E")]
			[Address(RVA = "0x17B14F4", Offset = "0x17B14F4", VA = "0x17B14F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC68E0", Offset = "0xFC68E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600044F")]
			[Address(RVA = "0x17B14FC", Offset = "0x17B14FC", VA = "0x17B14FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC68F0", Offset = "0xFC68F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public int Editable
		{
			[Token(Token = "0x6000450")]
			[Address(RVA = "0x17B1504", Offset = "0x17B1504", VA = "0x17B1504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6900", Offset = "0xFC6900")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000451")]
			[Address(RVA = "0x17B150C", Offset = "0x17B150C", VA = "0x17B150C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6910", Offset = "0xFC6910")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		[CanBeNull]
		public string Target
		{
			[Token(Token = "0x6000452")]
			[Address(RVA = "0x17B1514", Offset = "0x17B1514", VA = "0x17B1514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6920", Offset = "0xFC6920")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000453")]
			[Address(RVA = "0x17B151C", Offset = "0x17B151C", VA = "0x17B151C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6930", Offset = "0xFC6930")]
			set
			{
			}
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x17B1524", Offset = "0x17B1524", VA = "0x17B1524")]
		public MacroAttribute()
		{
		}
	}
	[Token(Token = "0x20000A8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB15FC", Offset = "0xFB15FC")]
	internal sealed class AspMvcAreaMasterLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA7B4", Offset = "0xFBA7B4")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170000A4")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x6000456")]
			[Address(RVA = "0x18380D4", Offset = "0x18380D4", VA = "0x18380D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6940", Offset = "0xFC6940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000457")]
			[Address(RVA = "0x18380DC", Offset = "0x18380DC", VA = "0x18380DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6950", Offset = "0xFC6950")]
			private set
			{
			}
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x18380A0", Offset = "0x18380A0", VA = "0x18380A0")]
		public AspMvcAreaMasterLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20000A9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1634", Offset = "0xFB1634")]
	internal sealed class AspMvcAreaPartialViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA7C4", Offset = "0xFBA7C4")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170000A5")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x6000459")]
			[Address(RVA = "0x1838118", Offset = "0x1838118", VA = "0x1838118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6960", Offset = "0xFC6960")]
			get
			{
				return null;
			}
			[Token(Token = "0x600045A")]
			[Address(RVA = "0x1838120", Offset = "0x1838120", VA = "0x1838120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6970", Offset = "0xFC6970")]
			private set
			{
			}
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x18380E4", Offset = "0x18380E4", VA = "0x18380E4")]
		public AspMvcAreaPartialViewLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20000AA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB166C", Offset = "0xFB166C")]
	internal sealed class AspMvcAreaViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA7D4", Offset = "0xFBA7D4")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170000A6")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x600045C")]
			[Address(RVA = "0x183815C", Offset = "0x183815C", VA = "0x183815C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6980", Offset = "0xFC6980")]
			get
			{
				return null;
			}
			[Token(Token = "0x600045D")]
			[Address(RVA = "0x1838164", Offset = "0x1838164", VA = "0x1838164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6990", Offset = "0xFC6990")]
			private set
			{
			}
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x1838128", Offset = "0x1838128", VA = "0x1838128")]
		public AspMvcAreaViewLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20000AB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB16A4", Offset = "0xFB16A4")]
	internal sealed class AspMvcMasterLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA7E4", Offset = "0xFBA7E4")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170000A7")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x600045F")]
			[Address(RVA = "0x1838204", Offset = "0x1838204", VA = "0x1838204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC69A0", Offset = "0xFC69A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000460")]
			[Address(RVA = "0x183820C", Offset = "0x183820C", VA = "0x183820C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC69B0", Offset = "0xFC69B0")]
			private set
			{
			}
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x18381D0", Offset = "0x18381D0", VA = "0x18381D0")]
		public AspMvcMasterLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB16DC", Offset = "0xFB16DC")]
	internal sealed class AspMvcPartialViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA7F4", Offset = "0xFBA7F4")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170000A8")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x6000462")]
			[Address(RVA = "0x1C4EB1C", Offset = "0x1C4EB1C", VA = "0x1C4EB1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC69C0", Offset = "0xFC69C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000463")]
			[Address(RVA = "0x1C4EB24", Offset = "0x1C4EB24", VA = "0x1C4EB24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC69D0", Offset = "0xFC69D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x1C4EAE8", Offset = "0x1C4EAE8", VA = "0x1C4EAE8")]
		public AspMvcPartialViewLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20000AD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1714", Offset = "0xFB1714")]
	internal sealed class AspMvcViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA804", Offset = "0xFBA804")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170000A9")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x6000465")]
			[Address(RVA = "0x1C4EB88", Offset = "0x1C4EB88", VA = "0x1C4EB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC69E0", Offset = "0xFC69E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000466")]
			[Address(RVA = "0x1C4EB90", Offset = "0x1C4EB90", VA = "0x1C4EB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC69F0", Offset = "0xFC69F0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x1C4EB54", Offset = "0x1C4EB54", VA = "0x1C4EB54")]
		public AspMvcViewLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20000AE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB174C", Offset = "0xFB174C")]
	internal sealed class AspMvcActionAttribute : Attribute
	{
		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA814", Offset = "0xFBA814")]
		private string <AnonymousProperty>k__BackingField;

		[Token(Token = "0x170000AA")]
		[CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x6000469")]
			[Address(RVA = "0x183803C", Offset = "0x183803C", VA = "0x183803C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A00", Offset = "0xFC6A00")]
			get
			{
				return null;
			}
			[Token(Token = "0x600046A")]
			[Address(RVA = "0x1838044", Offset = "0x1838044", VA = "0x1838044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A10", Offset = "0xFC6A10")]
			private set
			{
			}
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x1838000", Offset = "0x1838000", VA = "0x1838000")]
		public AspMvcActionAttribute()
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x1838008", Offset = "0x1838008", VA = "0x1838008")]
		public AspMvcActionAttribute([NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1760", Offset = "0xFB1760")]
	internal sealed class AspMvcAreaAttribute : Attribute
	{
		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA824", Offset = "0xFBA824")]
		private string <AnonymousProperty>k__BackingField;

		[Token(Token = "0x170000AB")]
		[CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x600046D")]
			[Address(RVA = "0x1838090", Offset = "0x1838090", VA = "0x1838090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A20", Offset = "0xFC6A20")]
			get
			{
				return null;
			}
			[Token(Token = "0x600046E")]
			[Address(RVA = "0x1838098", Offset = "0x1838098", VA = "0x1838098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A30", Offset = "0xFC6A30")]
			private set
			{
			}
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x1838054", Offset = "0x1838054", VA = "0x1838054")]
		public AspMvcAreaAttribute()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x183805C", Offset = "0x183805C", VA = "0x183805C")]
		public AspMvcAreaAttribute([NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1774", Offset = "0xFB1774")]
	internal sealed class AspMvcControllerAttribute : Attribute
	{
		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA834", Offset = "0xFBA834")]
		private string <AnonymousProperty>k__BackingField;

		[Token(Token = "0x170000AC")]
		[CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x6000471")]
			[Address(RVA = "0x18381A8", Offset = "0x18381A8", VA = "0x18381A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A40", Offset = "0xFC6A40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000472")]
			[Address(RVA = "0x18381B0", Offset = "0x18381B0", VA = "0x18381B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A50", Offset = "0xFC6A50")]
			private set
			{
			}
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x183816C", Offset = "0x183816C", VA = "0x183816C")]
		public AspMvcControllerAttribute()
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x1838174", Offset = "0x1838174", VA = "0x1838174")]
		public AspMvcControllerAttribute([NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1788", Offset = "0xFB1788")]
	internal sealed class AspMvcMasterAttribute : Attribute
	{
		[Token(Token = "0x6000473")]
		[Address(RVA = "0x18381C8", Offset = "0x18381C8", VA = "0x18381C8")]
		public AspMvcMasterAttribute()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB179C", Offset = "0xFB179C")]
	internal sealed class AspMvcModelTypeAttribute : Attribute
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0x1838214", Offset = "0x1838214", VA = "0x1838214")]
		public AspMvcModelTypeAttribute()
		{
		}
	}
	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB17B0", Offset = "0xFB17B0")]
	internal sealed class AspMvcPartialViewAttribute : Attribute
	{
		[Token(Token = "0x6000475")]
		[Address(RVA = "0x1C4EAE0", Offset = "0x1C4EAE0", VA = "0x1C4EAE0")]
		public AspMvcPartialViewAttribute()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB17C4", Offset = "0xFB17C4")]
	internal sealed class AspMvcSuppressViewErrorAttribute : Attribute
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0x1C4EB2C", Offset = "0x1C4EB2C", VA = "0x1C4EB2C")]
		public AspMvcSuppressViewErrorAttribute()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB17D8", Offset = "0xFB17D8")]
	internal sealed class AspMvcDisplayTemplateAttribute : Attribute
	{
		[Token(Token = "0x6000477")]
		[Address(RVA = "0x18381B8", Offset = "0x18381B8", VA = "0x18381B8")]
		public AspMvcDisplayTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20000B6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB17EC", Offset = "0xFB17EC")]
	internal sealed class AspMvcEditorTemplateAttribute : Attribute
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x18381C0", Offset = "0x18381C0", VA = "0x18381C0")]
		public AspMvcEditorTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1800", Offset = "0xFB1800")]
	internal sealed class AspMvcTemplateAttribute : Attribute
	{
		[Token(Token = "0x6000479")]
		[Address(RVA = "0x1C4EB34", Offset = "0x1C4EB34", VA = "0x1C4EB34")]
		public AspMvcTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20000B8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1814", Offset = "0xFB1814")]
	internal sealed class AspMvcViewAttribute : Attribute
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x1C4EB3C", Offset = "0x1C4EB3C", VA = "0x1C4EB3C")]
		public AspMvcViewAttribute()
		{
		}
	}
	[Token(Token = "0x20000B9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1828", Offset = "0xFB1828")]
	internal sealed class AspMvcViewComponentAttribute : Attribute
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x1C4EB44", Offset = "0x1C4EB44", VA = "0x1C4EB44")]
		public AspMvcViewComponentAttribute()
		{
		}
	}
	[Token(Token = "0x20000BA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB183C", Offset = "0xFB183C")]
	internal sealed class AspMvcViewComponentViewAttribute : Attribute
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0x1C4EB4C", Offset = "0x1C4EB4C", VA = "0x1C4EB4C")]
		public AspMvcViewComponentViewAttribute()
		{
		}
	}
	[Token(Token = "0x20000BB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1850", Offset = "0xFB1850")]
	internal sealed class AspMvcActionSelectorAttribute : Attribute
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x183804C", Offset = "0x183804C", VA = "0x183804C")]
		public AspMvcActionSelectorAttribute()
		{
		}
	}
	[Token(Token = "0x20000BC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1864", Offset = "0xFB1864")]
	internal sealed class HtmlElementAttributesAttribute : Attribute
	{
		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA844", Offset = "0xFBA844")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170000AD")]
		[CanBeNull]
		public string Name
		{
			[Token(Token = "0x6000480")]
			[Address(RVA = "0x17AFBB4", Offset = "0x17AFBB4", VA = "0x17AFBB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A60", Offset = "0xFC6A60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000481")]
			[Address(RVA = "0x17AFBBC", Offset = "0x17AFBBC", VA = "0x17AFBBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A70", Offset = "0xFC6A70")]
			private set
			{
			}
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x17AFB78", Offset = "0x17AFB78", VA = "0x17AFB78")]
		public HtmlElementAttributesAttribute()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x17AFB80", Offset = "0x17AFB80", VA = "0x17AFB80")]
		public HtmlElementAttributesAttribute([NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20000BD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1878", Offset = "0xFB1878")]
	internal sealed class HtmlAttributeValueAttribute : Attribute
	{
		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA854", Offset = "0xFBA854")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170000AE")]
		[NotNull]
		public string Name
		{
			[Token(Token = "0x6000483")]
			[Address(RVA = "0x17AFB68", Offset = "0x17AFB68", VA = "0x17AFB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A80", Offset = "0xFC6A80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000484")]
			[Address(RVA = "0x17AFB70", Offset = "0x17AFB70", VA = "0x17AFB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6A90", Offset = "0xFC6A90")]
			private set
			{
			}
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x17AFB34", Offset = "0x17AFB34", VA = "0x17AFB34")]
		public HtmlAttributeValueAttribute([NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20000BE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB188C", Offset = "0xFB188C")]
	internal sealed class RazorSectionAttribute : Attribute
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0x18AD084", Offset = "0x18AD084", VA = "0x18AD084")]
		public RazorSectionAttribute()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB18A0", Offset = "0xFB18A0")]
	internal sealed class CollectionAccessAttribute : Attribute
	{
		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA864", Offset = "0xFBA864")]
		private CollectionAccessType <CollectionAccessType>k__BackingField;

		[Token(Token = "0x170000AF")]
		public CollectionAccessType CollectionAccessType
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0x1C682AC", Offset = "0x1C682AC", VA = "0x1C682AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6AA0", Offset = "0xFC6AA0")]
			get
			{
				return default(CollectionAccessType);
			}
			[Token(Token = "0x6000488")]
			[Address(RVA = "0x1C682B4", Offset = "0x1C682B4", VA = "0x1C682B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6AB0", Offset = "0xFC6AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x1C68280", Offset = "0x1C68280", VA = "0x1C68280")]
		public CollectionAccessAttribute(CollectionAccessType collectionAccessType)
		{
		}
	}
	[Token(Token = "0x20000C0")]
	[Flags]
	internal enum CollectionAccessType
	{
		[Token(Token = "0x40002D3")]
		None = 0,
		[Token(Token = "0x40002D4")]
		Read = 1,
		[Token(Token = "0x40002D5")]
		ModifyExistingContent = 2,
		[Token(Token = "0x40002D6")]
		UpdatedContent = 6
	}
	[Token(Token = "0x20000C1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB18C4", Offset = "0xFB18C4")]
	internal sealed class AssertionMethodAttribute : Attribute
	{
		[Token(Token = "0x6000489")]
		[Address(RVA = "0x1C4EC5C", Offset = "0x1C4EC5C", VA = "0x1C4EC5C")]
		public AssertionMethodAttribute()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB18D8", Offset = "0xFB18D8")]
	internal sealed class AssertionConditionAttribute : Attribute
	{
		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA874", Offset = "0xFBA874")]
		private AssertionConditionType <ConditionType>k__BackingField;

		[Token(Token = "0x170000B0")]
		public AssertionConditionType ConditionType
		{
			[Token(Token = "0x600048B")]
			[Address(RVA = "0x1C4EC4C", Offset = "0x1C4EC4C", VA = "0x1C4EC4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6AC0", Offset = "0xFC6AC0")]
			get
			{
				return default(AssertionConditionType);
			}
			[Token(Token = "0x600048C")]
			[Address(RVA = "0x1C4EC54", Offset = "0x1C4EC54", VA = "0x1C4EC54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6AD0", Offset = "0xFC6AD0")]
			private set
			{
			}
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x1C4EC20", Offset = "0x1C4EC20", VA = "0x1C4EC20")]
		public AssertionConditionAttribute(AssertionConditionType conditionType)
		{
		}
	}
	[Token(Token = "0x20000C3")]
	internal enum AssertionConditionType
	{
		[Token(Token = "0x40002D9")]
		IS_TRUE,
		[Token(Token = "0x40002DA")]
		IS_FALSE,
		[Token(Token = "0x40002DB")]
		IS_NULL,
		[Token(Token = "0x40002DC")]
		IS_NOT_NULL
	}
	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFB18EC", Offset = "0xFB18EC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB18EC", Offset = "0xFB18EC")]
	internal sealed class TerminatesProgramAttribute : Attribute
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0x18B0538", Offset = "0x18B0538", VA = "0x18B0538")]
		public TerminatesProgramAttribute()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB193C", Offset = "0xFB193C")]
	internal sealed class LinqTunnelAttribute : Attribute
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x17AFBE4", Offset = "0x17AFBE4", VA = "0x17AFBE4")]
		public LinqTunnelAttribute()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1950", Offset = "0xFB1950")]
	internal sealed class NoEnumerationAttribute : Attribute
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0x17B9360", Offset = "0x17B9360", VA = "0x17B9360")]
		public NoEnumerationAttribute()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1964", Offset = "0xFB1964")]
	internal sealed class RegexPatternAttribute : Attribute
	{
		[Token(Token = "0x6000490")]
		[Address(RVA = "0x18AD0A4", Offset = "0x18AD0A4", VA = "0x18AD0A4")]
		public RegexPatternAttribute()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1978", Offset = "0xFB1978")]
	internal sealed class NoReorderAttribute : Attribute
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0x17B9368", Offset = "0x17B9368", VA = "0x17B9368")]
		public NoReorderAttribute()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB198C", Offset = "0xFB198C")]
	internal sealed class XamlItemsControlAttribute : Attribute
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0x18B36E0", Offset = "0x18B36E0", VA = "0x18B36E0")]
		public XamlItemsControlAttribute()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB19A0", Offset = "0xFB19A0")]
	internal sealed class XamlItemBindingOfItemsControlAttribute : Attribute
	{
		[Token(Token = "0x6000493")]
		[Address(RVA = "0x18B36D8", Offset = "0x18B36D8", VA = "0x18B36D8")]
		public XamlItemBindingOfItemsControlAttribute()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB19B4", Offset = "0xFB19B4")]
	internal sealed class AspChildControlTypeAttribute : Attribute
	{
		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA884", Offset = "0xFBA884")]
		private string <TagName>k__BackingField;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA894", Offset = "0xFBA894")]
		private Type <ControlType>k__BackingField;

		[Token(Token = "0x170000B1")]
		[NotNull]
		public string TagName
		{
			[Token(Token = "0x6000495")]
			[Address(RVA = "0x1837FC8", Offset = "0x1837FC8", VA = "0x1837FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6AE0", Offset = "0xFC6AE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000496")]
			[Address(RVA = "0x1837FD0", Offset = "0x1837FD0", VA = "0x1837FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6AF0", Offset = "0xFC6AF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		[NotNull]
		public Type ControlType
		{
			[Token(Token = "0x6000497")]
			[Address(RVA = "0x1837FD8", Offset = "0x1837FD8", VA = "0x1837FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B00", Offset = "0xFC6B00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000498")]
			[Address(RVA = "0x1837FE0", Offset = "0x1837FE0", VA = "0x1837FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B10", Offset = "0xFC6B10")]
			private set
			{
			}
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x1837F78", Offset = "0x1837F78", VA = "0x1837F78")]
		public AspChildControlTypeAttribute([NotNull] string tagName, [NotNull] Type controlType)
		{
		}
	}
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB19EC", Offset = "0xFB19EC")]
	internal sealed class AspDataFieldAttribute : Attribute
	{
		[Token(Token = "0x6000499")]
		[Address(RVA = "0x1837FE8", Offset = "0x1837FE8", VA = "0x1837FE8")]
		public AspDataFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1A00", Offset = "0xFB1A00")]
	internal sealed class AspDataFieldsAttribute : Attribute
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0x1837FF0", Offset = "0x1837FF0", VA = "0x1837FF0")]
		public AspDataFieldsAttribute()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1A14", Offset = "0xFB1A14")]
	internal sealed class AspMethodPropertyAttribute : Attribute
	{
		[Token(Token = "0x600049B")]
		[Address(RVA = "0x1837FF8", Offset = "0x1837FF8", VA = "0x1837FF8")]
		public AspMethodPropertyAttribute()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1A28", Offset = "0xFB1A28")]
	internal sealed class AspRequiredAttributeAttribute : Attribute
	{
		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA8A4", Offset = "0xFBA8A4")]
		private string <Attribute>k__BackingField;

		[Token(Token = "0x170000B3")]
		[NotNull]
		public string Attribute
		{
			[Token(Token = "0x600049D")]
			[Address(RVA = "0x1C4EBCC", Offset = "0x1C4EBCC", VA = "0x1C4EBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B20", Offset = "0xFC6B20")]
			get
			{
				return null;
			}
			[Token(Token = "0x600049E")]
			[Address(RVA = "0x1C4EBD4", Offset = "0x1C4EBD4", VA = "0x1C4EBD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B30", Offset = "0xFC6B30")]
			private set
			{
			}
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x1C4EB98", Offset = "0x1C4EB98", VA = "0x1C4EB98")]
		public AspRequiredAttributeAttribute([NotNull] string attribute)
		{
		}
	}
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1A60", Offset = "0xFB1A60")]
	internal sealed class AspTypePropertyAttribute : Attribute
	{
		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA8B4", Offset = "0xFBA8B4")]
		private bool <CreateConstructorReferences>k__BackingField;

		[Token(Token = "0x170000B4")]
		public bool CreateConstructorReferences
		{
			[Token(Token = "0x600049F")]
			[Address(RVA = "0x1C4EBDC", Offset = "0x1C4EBDC", VA = "0x1C4EBDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B40", Offset = "0xFC6B40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004A0")]
			[Address(RVA = "0x1C4EBE4", Offset = "0x1C4EBE4", VA = "0x1C4EBE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B50", Offset = "0xFC6B50")]
			private set
			{
			}
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x1C4EBF0", Offset = "0x1C4EBF0", VA = "0x1C4EBF0")]
		public AspTypePropertyAttribute(bool createConstructorReferences)
		{
		}
	}
	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1A74", Offset = "0xFB1A74")]
	internal sealed class RazorImportNamespaceAttribute : Attribute
	{
		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA8C4", Offset = "0xFBA8C4")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170000B5")]
		[NotNull]
		public string Name
		{
			[Token(Token = "0x60004A3")]
			[Address(RVA = "0x18ACFFC", Offset = "0x18ACFFC", VA = "0x18ACFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B60", Offset = "0xFC6B60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004A4")]
			[Address(RVA = "0x18AD004", Offset = "0x18AD004", VA = "0x18AD004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B70", Offset = "0xFC6B70")]
			private set
			{
			}
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x18ACFC8", Offset = "0x18ACFC8", VA = "0x18ACFC8")]
		public RazorImportNamespaceAttribute([NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1AAC", Offset = "0xFB1AAC")]
	internal sealed class RazorInjectionAttribute : Attribute
	{
		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA8D4", Offset = "0xFBA8D4")]
		private string <Type>k__BackingField;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA8E4", Offset = "0xFBA8E4")]
		private string <FieldName>k__BackingField;

		[Token(Token = "0x170000B6")]
		[NotNull]
		public string Type
		{
			[Token(Token = "0x60004A6")]
			[Address(RVA = "0x18AD05C", Offset = "0x18AD05C", VA = "0x18AD05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B80", Offset = "0xFC6B80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004A7")]
			[Address(RVA = "0x18AD064", Offset = "0x18AD064", VA = "0x18AD064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6B90", Offset = "0xFC6B90")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		[NotNull]
		public string FieldName
		{
			[Token(Token = "0x60004A8")]
			[Address(RVA = "0x18AD06C", Offset = "0x18AD06C", VA = "0x18AD06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6BA0", Offset = "0xFC6BA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004A9")]
			[Address(RVA = "0x18AD074", Offset = "0x18AD074", VA = "0x18AD074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6BB0", Offset = "0xFC6BB0")]
			private set
			{
			}
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x18AD00C", Offset = "0x18AD00C", VA = "0x18AD00C")]
		public RazorInjectionAttribute([NotNull] string type, [NotNull] string fieldName)
		{
		}
	}
	[Token(Token = "0x20000D3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1AE4", Offset = "0xFB1AE4")]
	internal sealed class RazorDirectiveAttribute : Attribute
	{
		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA8F4", Offset = "0xFBA8F4")]
		private string <Directive>k__BackingField;

		[Token(Token = "0x170000B8")]
		[NotNull]
		public string Directive
		{
			[Token(Token = "0x60004AB")]
			[Address(RVA = "0x18ACFB0", Offset = "0x18ACFB0", VA = "0x18ACFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6BC0", Offset = "0xFC6BC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004AC")]
			[Address(RVA = "0x18ACFB8", Offset = "0x18ACFB8", VA = "0x18ACFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC6BD0", Offset = "0xFC6BD0")]
			private set
			{
			}
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x18ACF7C", Offset = "0x18ACF7C", VA = "0x18ACF7C")]
		public RazorDirectiveAttribute([NotNull] string directive)
		{
		}
	}
	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1B1C", Offset = "0xFB1B1C")]
	internal sealed class RazorHelperCommonAttribute : Attribute
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x18ACFC0", Offset = "0x18ACFC0", VA = "0x18ACFC0")]
		public RazorHelperCommonAttribute()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1B30", Offset = "0xFB1B30")]
	internal sealed class RazorLayoutAttribute : Attribute
	{
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x18AD07C", Offset = "0x18AD07C", VA = "0x18AD07C")]
		public RazorLayoutAttribute()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1B44", Offset = "0xFB1B44")]
	internal sealed class RazorWriteLiteralMethodAttribute : Attribute
	{
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x18AD08C", Offset = "0x18AD08C", VA = "0x18AD08C")]
		public RazorWriteLiteralMethodAttribute()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1B58", Offset = "0xFB1B58")]
	internal sealed class RazorWriteMethodAttribute : Attribute
	{
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x18AD094", Offset = "0x18AD094", VA = "0x18AD094")]
		public RazorWriteMethodAttribute()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB1B6C", Offset = "0xFB1B6C")]
	internal sealed class RazorWriteMethodParameterAttribute : Attribute
	{
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x18AD09C", Offset = "0x18AD09C", VA = "0x18AD09C")]
		public RazorWriteMethodParameterAttribute()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public static class Logs
	{
		[Token(Token = "0x2000451")]
		private struct LogMessage
		{
			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly LogLevel _level;

			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly string _message;

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x110A008", Offset = "0x110A008", VA = "0x110A008")]
			public LogMessage(string message, LogLevel level)
			{
			}

			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0x110A038", Offset = "0x110A038", VA = "0x110A038")]
			public void Log()
			{
			}
		}

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TransferBuffer<LogMessage> LogsFromOtherThreads;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Thread _main;

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x17A75EC", Offset = "0x17A75EC", VA = "0x17A75EC")]
		[NotNull]
		public static Log Create(LogCategory category, string name)
		{
			return null;
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x17B1160", Offset = "0x17B1160", VA = "0x17B1160")]
		[NotNull]
		public static Log Create(int category, string name)
		{
			return null;
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x17B11D0", Offset = "0x17B11D0", VA = "0x17B11D0")]
		public static void SetLogLevel(LogCategory category, LogLevel level)
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x17B1244", Offset = "0x17B1244", VA = "0x17B1244")]
		public static void SetLogLevel(int category, LogLevel level)
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x17B12C4", Offset = "0x17B12C4", VA = "0x17B12C4")]
		public static LogLevel GetLogLevel(LogCategory category)
		{
			return default(LogLevel);
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x17B0D20", Offset = "0x17B0D20", VA = "0x17B0D20")]
		public static LogLevel GetLogLevel(int category)
		{
			return default(LogLevel);
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x17ADB78", Offset = "0x17ADB78", VA = "0x17ADB78")]
		internal static void WriteMultithreadedLogs()
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x17B0F10", Offset = "0x17B0F10", VA = "0x17B0F10")]
		internal static void SendLogMessage(string message, LogLevel level)
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class Log
	{
		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _traceFormat;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _debugFormat;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string _basicFormat;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int _category;

		[Token(Token = "0x170000B9")]
		public bool IsTrace
		{
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0x17B0C78", Offset = "0x17B0C78", VA = "0x17B0C78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BA")]
		public bool IsDebug
		{
			[Token(Token = "0x60004BD")]
			[Address(RVA = "0x17B0D00", Offset = "0x17B0D00", VA = "0x17B0D00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BB")]
		public bool IsInfo
		{
			[Token(Token = "0x60004BE")]
			[Address(RVA = "0x17B0D08", Offset = "0x17B0D08", VA = "0x17B0D08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BC")]
		public bool IsWarn
		{
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0x17B0D10", Offset = "0x17B0D10", VA = "0x17B0D10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BD")]
		public bool IsError
		{
			[Token(Token = "0x60004C0")]
			[Address(RVA = "0x17B0D18", Offset = "0x17B0D18", VA = "0x17B0D18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x17B0A20", Offset = "0x17B0A20", VA = "0x17B0A20")]
		internal Log(int category, string name)
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x17B0C80", Offset = "0x17B0C80", VA = "0x17B0C80")]
		[DebuggerHidden]
		private bool ShouldLog(LogLevel level)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x17B0D90", Offset = "0x17B0D90", VA = "0x17B0D90")]
		[DebuggerHidden]
		private void WriteLog(LogLevel level, string message)
		{
		}

		[Token(Token = "0x60004C3")]
		[DebuggerHidden]
		private void WriteLogFormat<TA>(LogLevel level, string format, [CanBeNull] TA p0)
		{
		}

		[Token(Token = "0x60004C4")]
		[DebuggerHidden]
		private void WriteLogFormat<TA, TB>(LogLevel level, string format, [CanBeNull] TA p0, [CanBeNull] TB p1)
		{
		}

		[Token(Token = "0x60004C5")]
		[DebuggerHidden]
		private void WriteLogFormat<TA, TB, TC>(LogLevel level, string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2)
		{
		}

		[Token(Token = "0x60004C6")]
		[DebuggerHidden]
		private void WriteLogFormat<TA, TB, TC, TD>(LogLevel level, string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3)
		{
		}

		[Token(Token = "0x60004C7")]
		[DebuggerHidden]
		private void WriteLogFormat<TA, TB, TC, TD, TE>(LogLevel level, string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4)
		{
		}

		[Token(Token = "0x60004C8")]
		[DebuggerHidden]
		private void WriteLogFormat<TA, TB, TC, TD, TE, TF>(LogLevel level, string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4, [CanBeNull] TF p5)
		{
		}

		[Token(Token = "0x60004C9")]
		[DebuggerHidden]
		private void WriteLogFormat<TA, TB, TC, TD, TE, TF, TG>(LogLevel level, string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4, [CanBeNull] TF p5, [CanBeNull] TG p6)
		{
		}

		[Token(Token = "0x60004CA")]
		[DebuggerHidden]
		private void WriteLogFormat<TA, TB, TC, TD, TE, TF, TG, TH>(LogLevel level, string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4, [CanBeNull] TF p5, [CanBeNull] TG p6, [CanBeNull] TH p7)
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x17B1028", Offset = "0x17B1028", VA = "0x17B1028")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6CA0", Offset = "0xFC6CA0")]
		public void Trace(string message)
		{
		}

		[Token(Token = "0x60004CC")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6CEC", Offset = "0xFC6CEC")]
		public void Trace<TA>(string format, [CanBeNull] TA p0)
		{
		}

		[Token(Token = "0x60004CD")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6D38", Offset = "0xFC6D38")]
		public void Trace<TA, TB>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1)
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x17B1034", Offset = "0x17B1034", VA = "0x17B1034")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6D84", Offset = "0xFC6D84")]
		public void Debug(string message)
		{
		}

		[Token(Token = "0x60004CF")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6DD0", Offset = "0xFC6DD0")]
		public void Debug<TA>(string format, [CanBeNull] TA p0)
		{
		}

		[Token(Token = "0x60004D0")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6E1C", Offset = "0xFC6E1C")]
		public void Debug<TA, TB>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1)
		{
		}

		[Token(Token = "0x60004D1")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6E68", Offset = "0xFC6E68")]
		public void Debug<TA, TB, TC>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2)
		{
		}

		[Token(Token = "0x60004D2")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6EB4", Offset = "0xFC6EB4")]
		public void Debug<TA, TB, TC, TD>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3)
		{
		}

		[Token(Token = "0x60004D3")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6F00", Offset = "0xFC6F00")]
		public void Debug<TA, TB, TC, TD, TE>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4)
		{
		}

		[Token(Token = "0x60004D4")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6F4C", Offset = "0xFC6F4C")]
		public void Debug<TA, TB, TC, TD, TE, TF>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4, [CanBeNull] TF p5)
		{
		}

		[Token(Token = "0x60004D5")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6F98", Offset = "0xFC6F98")]
		public void Debug<TA, TB, TC, TD, TE, TF, TG>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4, [CanBeNull] TF p5, [CanBeNull] TG p6)
		{
		}

		[Token(Token = "0x60004D6")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFC6FE4", Offset = "0xFC6FE4")]
		public void Debug<TA, TB, TC, TD, TE, TF, TG, TH>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4, [CanBeNull] TF p5, [CanBeNull] TG p6, [CanBeNull] TH p7)
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x17ADE68", Offset = "0x17ADE68", VA = "0x17ADE68")]
		[DebuggerHidden]
		public void Info(string message)
		{
		}

		[Token(Token = "0x60004D8")]
		[DebuggerHidden]
		public void Info<TA>(string format, [CanBeNull] TA p0)
		{
		}

		[Token(Token = "0x60004D9")]
		[DebuggerHidden]
		public void Info<TA, TB>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1)
		{
		}

		[Token(Token = "0x60004DA")]
		[DebuggerHidden]
		public void Info<TA, TB, TC>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2)
		{
		}

		[Token(Token = "0x60004DB")]
		[DebuggerHidden]
		public void Info<TA, TB, TC, TD>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3)
		{
		}

		[Token(Token = "0x60004DC")]
		[DebuggerHidden]
		public void Info<TA, TB, TC, TD, TE>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4)
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x17AE360", Offset = "0x17AE360", VA = "0x17AE360")]
		[DebuggerHidden]
		public void Warn(string message)
		{
		}

		[Token(Token = "0x60004DE")]
		[DebuggerHidden]
		public void Warn<TA>(string format, [CanBeNull] TA p0)
		{
		}

		[Token(Token = "0x60004DF")]
		[DebuggerHidden]
		public void Warn<TA, TB>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1)
		{
		}

		[Token(Token = "0x60004E0")]
		[DebuggerHidden]
		public void Warn<TA, TB, TC>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2)
		{
		}

		[Token(Token = "0x60004E1")]
		[DebuggerHidden]
		public void Warn<TA, TB, TC, TD>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3)
		{
		}

		[Token(Token = "0x60004E2")]
		[DebuggerHidden]
		public void Warn<TA, TB, TC, TD, TE>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2, [CanBeNull] TD p3, [CanBeNull] TE p4)
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x17ADE5C", Offset = "0x17ADE5C", VA = "0x17ADE5C")]
		[DebuggerHidden]
		public void Error(string message)
		{
		}

		[Token(Token = "0x60004E4")]
		[DebuggerHidden]
		public void Error<TA>(string format, [CanBeNull] TA p0)
		{
		}

		[Token(Token = "0x60004E5")]
		[DebuggerHidden]
		public void Error<TA, TB>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1)
		{
		}

		[Token(Token = "0x60004E6")]
		[DebuggerHidden]
		public void Error<TA, TB, TC>(string format, [CanBeNull] TA p0, [CanBeNull] TB p1, [CanBeNull] TC p2)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x17ACA7C", Offset = "0x17ACA7C", VA = "0x17ACA7C")]
		[DebuggerHidden]
		[NotNull]
		public DissonanceException CreateUserErrorException(string problem, string likelyCause, string documentationLink, string guid)
		{
			return null;
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x17ADC7C", Offset = "0x17ADC7C", VA = "0x17ADC7C")]
		[DebuggerHidden]
		[NotNull]
		public string UserErrorMessage(string problem, string likelyCause, string documentationLink, string guid)
		{
			return null;
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x17AE2FC", Offset = "0x17AE2FC", VA = "0x17AE2FC")]
		[DebuggerHidden]
		[NotNull]
		public string PossibleBugMessage(string problem, string guid)
		{
			return null;
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x17B1040", Offset = "0x17B1040", VA = "0x17B1040")]
		[DebuggerHidden]
		[NotNull]
		public DissonanceException CreatePossibleBugException(string problem, string guid)
		{
			return null;
		}

		[Token(Token = "0x60004EB")]
		[DebuggerHidden]
		[NotNull]
		public Exception CreatePossibleBugException<T>([NotNull] Func<string, T> factory, string problem, string guid) where T : Exception
		{
			return null;
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x17B10C0", Offset = "0x17B10C0", VA = "0x17B10C0")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC7248", Offset = "0xFC7248")]
		public bool AssertAndLogWarn(bool assertion, string msg)
		{
			return default(bool);
		}

		[Token(Token = "0x60004ED")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC7280", Offset = "0xFC7280")]
		public bool AssertAndLogWarn<TA>(bool assertion, string format, TA arg0)
		{
			return default(bool);
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x17AE50C", Offset = "0x17AE50C", VA = "0x17AE50C")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC72B8", Offset = "0xFC72B8")]
		public bool AssertAndLogError(bool assertion, string guid, string msg)
		{
			return default(bool);
		}

		[Token(Token = "0x60004EF")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC72F0", Offset = "0xFC72F0")]
		public bool AssertAndLogError<TA>(bool assertion, string guid, string format, TA arg0)
		{
			return default(bool);
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x17B10F0", Offset = "0x17B10F0", VA = "0x17B10F0")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC7328", Offset = "0xFC7328")]
		public void AssertAndThrowPossibleBug(bool assertion, string guid, string msg)
		{
		}

		[Token(Token = "0x60004F1")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC7360", Offset = "0xFC7360")]
		public void AssertAndThrowPossibleBug<TA>(bool assertion, string guid, string format, TA arg0)
		{
		}

		[Token(Token = "0x60004F2")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC7398", Offset = "0xFC7398")]
		public void AssertAndThrowPossibleBug<TA, TB>(bool assertion, string guid, string format, TA arg0, TB arg1)
		{
		}

		[Token(Token = "0x60004F3")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC73D0", Offset = "0xFC73D0")]
		public void AssertAndThrowPossibleBug<TA, TB, TC>(bool assertion, string guid, string format, TA arg0, TB arg1, TC arg2)
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public enum LogCategory
	{
		[Token(Token = "0x40002EC")]
		Core,
		[Token(Token = "0x40002ED")]
		Recording,
		[Token(Token = "0x40002EE")]
		Network,
		[Token(Token = "0x40002EF")]
		Playback
	}
	[Token(Token = "0x20000DC")]
	public enum LogLevel
	{
		[Token(Token = "0x40002F1")]
		Trace,
		[Token(Token = "0x40002F2")]
		Debug,
		[Token(Token = "0x40002F3")]
		Info,
		[Token(Token = "0x40002F4")]
		Warn,
		[Token(Token = "0x40002F5")]
		Error
	}
	[Token(Token = "0x20000DD")]
	internal class PacketLossMonitor
	{
		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReadOnlyCollection<VoicePlayerState> _players;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DateTime _lastUpdatedPacketLoss;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _lastUpdatedPlayerCount;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<float> _tmpLossValues;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA904", Offset = "0xFBA904")]
		private float <PacketLoss>k__BackingField;

		[Token(Token = "0x170000BE")]
		public float PacketLoss
		{
			[Token(Token = "0x60004F4")]
			[Address(RVA = "0x17B93C4", Offset = "0x17B93C4", VA = "0x17B93C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7408", Offset = "0xFC7408")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60004F5")]
			[Address(RVA = "0x17B93CC", Offset = "0x17B93CC", VA = "0x17B93CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7418", Offset = "0xFC7418")]
			private set
			{
			}
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x17B93D4", Offset = "0x17B93D4", VA = "0x17B93D4")]
		public PacketLossMonitor(ReadOnlyCollection<VoicePlayerState> players)
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x17B94A4", Offset = "0x17B94A4", VA = "0x17B94A4")]
		public void Update([Optional] DateTime? utcNow)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x17B9588", Offset = "0x17B9588", VA = "0x17B9588")]
		private bool CheckTime(DateTime now)
		{
			return default(bool);
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x17B9648", Offset = "0x17B9648", VA = "0x17B9648")]
		private bool CheckCount()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x17B96B0", Offset = "0x17B96B0", VA = "0x17B96B0")]
		private float? CalculatePacketLoss()
		{
			return null;
		}
	}
	[Token(Token = "0x20000DE")]
	internal class PlaybackPool
	{
		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Pool<VoicePlayback> _pool;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NotNull]
		private readonly IPriorityManager _priority;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NotNull]
		private readonly IVolumeProvider _volume;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _prefab;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _parent;

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x17AC614", Offset = "0x17AC614", VA = "0x17AC614")]
		public PlaybackPool([NotNull] IPriorityManager priority, [NotNull] IVolumeProvider volume)
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x17ADE74", Offset = "0x17ADE74", VA = "0x17ADE74")]
		public void Start([NotNull] GameObject playbackPrefab, [NotNull] Transform transform)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x17B98FC", Offset = "0x17B98FC", VA = "0x17B98FC")]
		[NotNull]
		private VoicePlayback CreatePlayback()
		{
			return null;
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x17AEDC4", Offset = "0x17AEDC4", VA = "0x17AEDC4")]
		[NotNull]
		public VoicePlayback Get([NotNull] string playerId)
		{
			return null;
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x17AEB18", Offset = "0x17AEB18", VA = "0x17AEB18")]
		public void Put([NotNull] VoicePlayback playback)
		{
		}
	}
	[Token(Token = "0x20000DF")]
	internal class PlayerCollection
	{
		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, VoicePlayerState> _playersLookup;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<VoicePlayerState> _players;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReadOnlyCollection<VoicePlayerState> _playersReadOnly;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBA934", Offset = "0xFBA934")]
		private LocalVoicePlayerState <Local>k__BackingField;

		[Token(Token = "0x170000BF")]
		[NotNull]
		public ReadOnlyCollection<VoicePlayerState> Readonly
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x17BA028", Offset = "0x17BA028", VA = "0x17BA028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public LocalVoicePlayerState Local
		{
			[Token(Token = "0x6000501")]
			[Address(RVA = "0x17BA030", Offset = "0x17BA030", VA = "0x17BA030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7448", Offset = "0xFC7448")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000502")]
			[Address(RVA = "0x17BA038", Offset = "0x17BA038", VA = "0x17BA038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7458", Offset = "0xFC7458")]
			private set
			{
			}
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x17AC520", Offset = "0x17AC520", VA = "0x17AC520")]
		public PlayerCollection()
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x17ADF98", Offset = "0x17ADF98", VA = "0x17ADF98")]
		public void Start([NotNull] string name, [NotNull] IAmplitudeProvider micAmplitude, [NotNull] Rooms rooms, [NotNull] RoomChannels roomChannels, [NotNull] PlayerChannels playerChannels, [NotNull] ILossEstimator loss, [NotNull] ICommsNetwork net)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x17AEEC4", Offset = "0x17AEEC4", VA = "0x17AEEC4")]
		public void Add([NotNull] VoicePlayerState state)
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x17AE9D4", Offset = "0x17AE9D4", VA = "0x17AE9D4")]
		[CanBeNull]
		public VoicePlayerState Remove([NotNull] string playerId)
		{
			return null;
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x17AE36C", Offset = "0x17AE36C", VA = "0x17AE36C")]
		public bool TryGet([NotNull] string playerId, [NotNull] out VoicePlayerState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x17AF0CC", Offset = "0x17AF0CC", VA = "0x17AF0CC")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	internal class PlayerTrackerManager
	{
		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, IDissonancePlayer> _unlinkedPlayerTrackers;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly PlayerCollection _players;

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x18AC778", Offset = "0x18AC778", VA = "0x18AC778")]
		public PlayerTrackerManager([NotNull] PlayerCollection players)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x18AC850", Offset = "0x18AC850", VA = "0x18AC850")]
		public void AddPlayer([NotNull] VoicePlayerState state)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x18AC948", Offset = "0x18AC948", VA = "0x18AC948")]
		public void RemovePlayer([NotNull] VoicePlayerState state)
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x18ACAA0", Offset = "0x18ACAA0", VA = "0x18ACAA0")]
		public void AddTracker([NotNull] IDissonancePlayer player)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x18ACC74", Offset = "0x18ACC74", VA = "0x18ACC74")]
		public void RemoveTracker([NotNull] IDissonancePlayer player)
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public static class RoomIdConversion
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x18AF190", Offset = "0x18AF190", VA = "0x18AF190")]
		public static ushort ToRoomId([NotNull] this string name)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x18AF234", Offset = "0x18AF234", VA = "0x18AF234")]
		private static ushort Hash16([NotNull] string str)
		{
			return default(ushort);
		}
	}
	[Token(Token = "0x20000E2")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFB1B90", Offset = "0xFB1B90")]
	public sealed class Rooms
	{
		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly RoomMembershipComparer Comparer;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<RoomMembership> _rooms;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<string> _roomNames;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReadOnlyCollection<string> _roomNamesReadonly;

		[Token(Token = "0x170000C1")]
		internal ReadOnlyCollection<string> Memberships
		{
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x18AF2EC", Offset = "0x18AF2EC", VA = "0x18AF2EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public int Count
		{
			[Token(Token = "0x6000518")]
			[Address(RVA = "0x18AF678", Offset = "0x18AF678", VA = "0x18AF678")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C3")]
		internal RoomMembership Item
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0x18AF6C8", Offset = "0x18AF6C8", VA = "0x18AF6C8")]
			get
			{
				return default(RoomMembership);
			}
		}

		[Token(Token = "0x14000005")]
		public event Action<string> JoinedRoom
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0x18AF2F4", Offset = "0x18AF2F4", VA = "0x18AF2F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7488", Offset = "0xFC7488")]
			add
			{
			}
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x18AF398", Offset = "0x18AF398", VA = "0x18AF398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7498", Offset = "0xFC7498")]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event Action<string> LeftRoom
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0x18AF43C", Offset = "0x18AF43C", VA = "0x18AF43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC74A8", Offset = "0xFC74A8")]
			add
			{
			}
			[Token(Token = "0x6000516")]
			[Address(RVA = "0x18AF4E0", Offset = "0x18AF4E0", VA = "0x18AF4E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC74B8", Offset = "0xFC74B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x18AF584", Offset = "0x18AF584", VA = "0x18AF584")]
		internal Rooms()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x18AF740", Offset = "0x18AF740", VA = "0x18AF740")]
		public bool Contains([NotNull] string roomName)
		{
			return default(bool);
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x18AF914", Offset = "0x18AF914", VA = "0x18AF914")]
		public RoomMembership Join([NotNull] string roomName)
		{
			return default(RoomMembership);
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x18AFBB0", Offset = "0x18AFBB0", VA = "0x18AFBB0")]
		public bool Leave(RoomMembership membership)
		{
			return default(bool);
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x18AFAF4", Offset = "0x18AFAF4", VA = "0x18AFAF4")]
		private void OnJoinedRoom(RoomMembership membership)
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x18AFD04", Offset = "0x18AFD04", VA = "0x18AFD04")]
		private void OnLeftRoom(RoomMembership membership)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x18AFDB8", Offset = "0x18AFDB8", VA = "0x18AFDB8")]
		[CanBeNull]
		internal string Name(ushort roomId)
		{
			return null;
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x18AF808", Offset = "0x18AF808", VA = "0x18AF808")]
		private int? FindById(ushort id)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E3")]
	public struct RoomMembership
	{
		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string _name;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly ushort _roomId;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int Count;

		[Token(Token = "0x170000C4")]
		[NotNull]
		public string RoomName
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0x11106C8", Offset = "0x11106C8", VA = "0x11106C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public ushort RoomId
		{
			[Token(Token = "0x6000524")]
			[Address(RVA = "0x11106D0", Offset = "0x11106D0", VA = "0x11106D0")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x1110680", Offset = "0x1110680", VA = "0x1110680")]
		internal RoomMembership([NotNull] string name, int count)
		{
		}
	}
	[Token(Token = "0x20000E4")]
	internal class RoomMembershipComparer : IComparer<RoomMembership>
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x18AF2B8", Offset = "0x18AF2B8", VA = "0x18AF2B8", Slot = "4")]
		public int Compare(RoomMembership x, RoomMembership y)
		{
			return default(int);
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x18AF2E4", Offset = "0x18AF2E4", VA = "0x18AF2E4")]
		public RoomMembershipComparer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E5")]
	public class SemanticVersion : IComparable<SemanticVersion>, IEquatable<SemanticVersion>
	{
		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _major;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int _minor;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _patch;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _tag;

		[Token(Token = "0x170000C6")]
		public int Major
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0x18AFF88", Offset = "0x18AFF88", VA = "0x18AFF88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C7")]
		public int Minor
		{
			[Token(Token = "0x6000528")]
			[Address(RVA = "0x18AFF90", Offset = "0x18AFF90", VA = "0x18AFF90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C8")]
		public int Patch
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0x18AFF98", Offset = "0x18AFF98", VA = "0x18AFF98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C9")]
		public string Tag
		{
			[Token(Token = "0x600052A")]
			[Address(RVA = "0x18AFFA0", Offset = "0x18AFFA0", VA = "0x18AFFA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x18AFFA8", Offset = "0x18AFFA8", VA = "0x18AFFA8")]
		public SemanticVersion()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x18AFFB0", Offset = "0x18AFFB0", VA = "0x18AFFB0")]
		public SemanticVersion(int major, int minor, int patch, [Optional][CanBeNull] string tag)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x18B0008", Offset = "0x18B0008", VA = "0x18B0008", Slot = "4")]
		public int CompareTo([CanBeNull] SemanticVersion other)
		{
			return default(int);
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x18B0114", Offset = "0x18B0114", VA = "0x18B0114", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x18B0350", Offset = "0x18B0350", VA = "0x18B0350", Slot = "5")]
		public bool Equals(SemanticVersion other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x18B0388", Offset = "0x18B0388", VA = "0x18B0388", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x18B04A0", Offset = "0x18B04A0", VA = "0x18B04A0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000E6")]
	public sealed class TextChat
	{
		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Func<ICommsNetwork> _getNetwork;

		[Token(Token = "0x14000007")]
		public event Action<TextMessage> MessageReceived
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0x18B08BC", Offset = "0x18B08BC", VA = "0x18B08BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC74D8", Offset = "0xFC74D8")]
			add
			{
			}
			[Token(Token = "0x6000536")]
			[Address(RVA = "0x18B0960", Offset = "0x18B0960", VA = "0x18B0960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC74E8", Offset = "0xFC74E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x18B0540", Offset = "0x18B0540", VA = "0x18B0540")]
		internal TextChat([NotNull] Func<ICommsNetwork> getNetwork)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x18B05E4", Offset = "0x18B05E4", VA = "0x18B05E4")]
		public void Send([NotNull] string roomName, [NotNull] string message)
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x18B0750", Offset = "0x18B0750", VA = "0x18B0750")]
		public void Whisper([NotNull] string playerName, [NotNull] string message)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x18B0A04", Offset = "0x18B0A04", VA = "0x18B0A04")]
		internal void OnMessageReceived(TextMessage obj)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E7")]
	public class TokenSet : IEnumerable<string>, IEnumerable
	{
		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IComparer<string> SortOrder;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<string> _tokens;

		[Token(Token = "0x170000CA")]
		public int Count
		{
			[Token(Token = "0x6000538")]
			[Address(RVA = "0x18B0BD0", Offset = "0x18B0BD0", VA = "0x18B0BD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000008")]
		public event Action<string> TokenRemoved
		{
			[Token(Token = "0x6000539")]
			[Address(RVA = "0x18B0C20", Offset = "0x18B0C20", VA = "0x18B0C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC74F8", Offset = "0xFC74F8")]
			add
			{
			}
			[Token(Token = "0x600053A")]
			[Address(RVA = "0x18B0CC4", Offset = "0x18B0CC4", VA = "0x18B0CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7508", Offset = "0xFC7508")]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event Action<string> TokenAdded
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0x18B0D68", Offset = "0x18B0D68", VA = "0x18B0D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7518", Offset = "0xFC7518")]
			add
			{
			}
			[Token(Token = "0x600053C")]
			[Address(RVA = "0x18B0E0C", Offset = "0x18B0E0C", VA = "0x18B0E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7528", Offset = "0xFC7528")]
			remove
			{
			}
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x18B0EB0", Offset = "0x18B0EB0", VA = "0x18B0EB0")]
		private int Find([NotNull] string item)
		{
			return default(int);
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x18B0F48", Offset = "0x18B0F48", VA = "0x18B0F48")]
		public bool ContainsToken([CanBeNull] string token)
		{
			return default(bool);
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x18B0F70", Offset = "0x18B0F70", VA = "0x18B0F70")]
		public bool AddToken([NotNull] string token)
		{
			return default(bool);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x18B1068", Offset = "0x18B1068", VA = "0x18B1068")]
		public bool RemoveToken([NotNull] string token)
		{
			return default(bool);
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x18B1158", Offset = "0x18B1158", VA = "0x18B1158")]
		public bool IntersectsWith([NotNull] TokenSet other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x18B135C", Offset = "0x18B135C", VA = "0x18B135C", Slot = "4")]
		public IEnumerator<string> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x18B13E8", Offset = "0x18B13E8", VA = "0x18B13E8", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x18B13EC", Offset = "0x18B13EC", VA = "0x18B13EC")]
		public TokenSet()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public interface IAccessTokenCollection
	{
		[Token(Token = "0x170000CB")]
		IEnumerable<string> Tokens
		{
			[Token(Token = "0x6000546")]
			get;
		}

		[Token(Token = "0x6000547")]
		bool ContainsToken([CanBeNull] string token);

		[Token(Token = "0x6000548")]
		bool AddToken([NotNull] string token);

		[Token(Token = "0x6000549")]
		bool RemoveToken([NotNull] string token);
	}
	[Token(Token = "0x20000E9")]
	public struct Unit
	{
		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Unit None;
	}
	[Token(Token = "0x20000EA")]
	public abstract class VoicePlayerState
	{
		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _name;

		[Token(Token = "0x170000CC")]
		[NotNull]
		public string Name
		{
			[Token(Token = "0x6000556")]
			[Address(RVA = "0x18B2FCC", Offset = "0x18B2FCC", VA = "0x18B2FCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public abstract bool IsConnected
		{
			[Token(Token = "0x6000557")]
			get;
		}

		[Token(Token = "0x170000CE")]
		public abstract bool IsSpeaking
		{
			[Token(Token = "0x6000558")]
			get;
		}

		[Token(Token = "0x170000CF")]
		public abstract float Amplitude
		{
			[Token(Token = "0x6000559")]
			get;
		}

		[Token(Token = "0x170000D0")]
		public abstract ChannelPriority? SpeakerPriority
		{
			[Token(Token = "0x600055A")]
			get;
		}

		[Token(Token = "0x170000D1")]
		public abstract float Volume
		{
			[Token(Token = "0x600055B")]
			get;
			[Token(Token = "0x600055C")]
			set;
		}

		[Token(Token = "0x170000D2")]
		public abstract bool IsLocallyMuted
		{
			[Token(Token = "0x600055D")]
			get;
			[Token(Token = "0x600055E")]
			set;
		}

		[Token(Token = "0x170000D3")]
		[NotNull]
		public abstract ReadOnlyCollection<string> Rooms
		{
			[Token(Token = "0x600055F")]
			get;
		}

		[Token(Token = "0x170000D4")]
		[CanBeNull]
		public IVoicePlayback Playback
		{
			[Token(Token = "0x6000560")]
			[Address(RVA = "0x18AE0B8", Offset = "0x18AE0B8", VA = "0x18AE0B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		[CanBeNull]
		internal abstract IVoicePlaybackInternal PlaybackInternal
		{
			[Token(Token = "0x6000561")]
			get;
		}

		[Token(Token = "0x170000D6")]
		[CanBeNull]
		public abstract IDissonancePlayer Tracker
		{
			[Token(Token = "0x6000562")]
			get;
			[Token(Token = "0x6000563")]
			internal set;
		}

		[Token(Token = "0x170000D7")]
		[CanBeNull]
		public abstract float? PacketLoss
		{
			[Token(Token = "0x6000564")]
			get;
		}

		[Token(Token = "0x1400000A")]
		public event Action<VoicePlayerState> OnStartedSpeaking
		{
			[Token(Token = "0x600054B")]
			[Address(RVA = "0x18B2964", Offset = "0x18B2964", VA = "0x18B2964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7538", Offset = "0xFC7538")]
			add
			{
			}
			[Token(Token = "0x600054C")]
			[Address(RVA = "0x18B2A08", Offset = "0x18B2A08", VA = "0x18B2A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7548", Offset = "0xFC7548")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event Action<VoicePlayerState> OnStoppedSpeaking
		{
			[Token(Token = "0x600054D")]
			[Address(RVA = "0x18B2AAC", Offset = "0x18B2AAC", VA = "0x18B2AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7558", Offset = "0xFC7558")]
			add
			{
			}
			[Token(Token = "0x600054E")]
			[Address(RVA = "0x18B2B50", Offset = "0x18B2B50", VA = "0x18B2B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7568", Offset = "0xFC7568")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event Action<VoicePlayerState, string> OnEnteredRoom
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0x18B2BF4", Offset = "0x18B2BF4", VA = "0x18B2BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7578", Offset = "0xFC7578")]
			add
			{
			}
			[Token(Token = "0x6000550")]
			[Address(RVA = "0x18B2C98", Offset = "0x18B2C98", VA = "0x18B2C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7588", Offset = "0xFC7588")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event Action<VoicePlayerState, string> OnExitedRoom
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0x18B2D3C", Offset = "0x18B2D3C", VA = "0x18B2D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7598", Offset = "0xFC7598")]
			add
			{
			}
			[Token(Token = "0x6000552")]
			[Address(RVA = "0x18B2DE0", Offset = "0x18B2DE0", VA = "0x18B2DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC75A8", Offset = "0xFC75A8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event Action<VoicePlayerState> OnLeftSession
		{
			[Token(Token = "0x6000553")]
			[Address(RVA = "0x18B2E84", Offset = "0x18B2E84", VA = "0x18B2E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC75B8", Offset = "0xFC75B8")]
			add
			{
			}
			[Token(Token = "0x6000554")]
			[Address(RVA = "0x18B2F28", Offset = "0x18B2F28", VA = "0x18B2F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC75C8", Offset = "0xFC75C8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x18AD308", Offset = "0x18AD308", VA = "0x18AD308")]
		internal VoicePlayerState(string name)
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x18B2FD4", Offset = "0x18B2FD4", VA = "0x18B2FD4")]
		internal void InvokeOnStoppedSpeaking()
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x18B30DC", Offset = "0x18B30DC", VA = "0x18B30DC")]
		internal void InvokeOnStartedSpeaking()
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x18B31E4", Offset = "0x18B31E4", VA = "0x18B31E4")]
		internal void InvokeOnLeftSession()
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x18AE62C", Offset = "0x18AE62C", VA = "0x18AE62C", Slot = "17")]
		internal virtual void InvokeOnEnteredRoom(RoomEvent evtData)
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x18AE74C", Offset = "0x18AE74C", VA = "0x18AE74C", Slot = "18")]
		internal virtual void InvokeOnExitedRoom(RoomEvent evtData)
		{
		}

		[Token(Token = "0x600056A")]
		public abstract void GetSpeakingChannels([NotNull] List<RemoteChannel> output);

		[Token(Token = "0x600056B")]
		internal abstract void Update();
	}
	[Token(Token = "0x20000EB")]
	internal class LocalVoicePlayerState : VoicePlayerState
	{
		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[NotNull]
		private readonly IAmplitudeProvider _micAmplitude;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[NotNull]
		private readonly Rooms _rooms;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[NotNull]
		private readonly RoomChannels _roomChannels;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[NotNull]
		private readonly PlayerChannels _playerChannels;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[NotNull]
		private readonly ILossEstimator _loss;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[NotNull]
		private readonly ICommsNetwork _network;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAA94", Offset = "0xFBAA94")]
		private IDissonancePlayer <Tracker>k__BackingField;

		[Token(Token = "0x170000D8")]
		public override bool IsConnected
		{
			[Token(Token = "0x6000572")]
			[Address(RVA = "0x17B0114", Offset = "0x17B0114", VA = "0x17B0114", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D9")]
		internal override IVoicePlaybackInternal PlaybackInternal
		{
			[Token(Token = "0x6000573")]
			[Address(RVA = "0x17B01D0", Offset = "0x17B01D0", VA = "0x17B01D0", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public override bool IsLocallyMuted
		{
			[Token(Token = "0x6000574")]
			[Address(RVA = "0x17B01D8", Offset = "0x17B01D8", VA = "0x17B01D8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000575")]
			[Address(RVA = "0x17B01E0", Offset = "0x17B01E0", VA = "0x17B01E0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public override ReadOnlyCollection<string> Rooms
		{
			[Token(Token = "0x6000576")]
			[Address(RVA = "0x17B02A8", Offset = "0x17B02A8", VA = "0x17B02A8", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public override IDissonancePlayer Tracker
		{
			[Token(Token = "0x6000577")]
			[Address(RVA = "0x17B02C4", Offset = "0x17B02C4", VA = "0x17B02C4", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC75D8", Offset = "0xFC75D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000578")]
			[Address(RVA = "0x17B02CC", Offset = "0x17B02CC", VA = "0x17B02CC", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC75E8", Offset = "0xFC75E8")]
			internal set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public override float Amplitude
		{
			[Token(Token = "0x6000579")]
			[Address(RVA = "0x17B02D4", Offset = "0x17B02D4", VA = "0x17B02D4", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000DE")]
		public override ChannelPriority? SpeakerPriority
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0x17B0384", Offset = "0x17B0384", VA = "0x17B0384", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public override float Volume
		{
			[Token(Token = "0x600057B")]
			[Address(RVA = "0x17B038C", Offset = "0x17B038C", VA = "0x17B038C", Slot = "8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600057C")]
			[Address(RVA = "0x17B0394", Offset = "0x17B0394", VA = "0x17B0394", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public override bool IsSpeaking
		{
			[Token(Token = "0x600057D")]
			[Address(RVA = "0x17B0448", Offset = "0x17B0448", VA = "0x17B0448", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E1")]
		public override float? PacketLoss
		{
			[Token(Token = "0x600057E")]
			[Address(RVA = "0x17B04D4", Offset = "0x17B04D4", VA = "0x17B04D4", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x17AFBEC", Offset = "0x17AFBEC", VA = "0x17AFBEC")]
		public LocalVoicePlayerState(string name, [NotNull] IAmplitudeProvider micAmplitude, [NotNull] Rooms rooms, [NotNull] RoomChannels roomChannels, [NotNull] PlayerChannels playerChannels, [NotNull] ILossEstimator loss, ICommsNetwork network)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x17AFE6C", Offset = "0x17AFE6C", VA = "0x17AFE6C")]
		private void OnChannelOpened(string channel, ChannelProperties properties)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x17AFF08", Offset = "0x17AFF08", VA = "0x17AFF08")]
		private void OnChannelClosed(string channel, ChannelProperties properties)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x17AFFA0", Offset = "0x17AFFA0", VA = "0x17AFFA0")]
		private void OnLocallyEnteredRoom([NotNull] string room)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x17B0088", Offset = "0x17B0088", VA = "0x17B0088")]
		private void OnLocallyExitedRoom([NotNull] string room)
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x17B05AC", Offset = "0x17B05AC", VA = "0x17B05AC", Slot = "19")]
		public override void GetSpeakingChannels(List<RemoteChannel> channels)
		{
		}

		[Token(Token = "0x6000580")]
		private static RemoteChannel CreateRemoteChannel<T>([NotNull] T item, ChannelType type) where T : IChannel<string>
		{
			return default(RemoteChannel);
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x17B08D4", Offset = "0x17B08D4", VA = "0x17B08D4", Slot = "20")]
		internal override void Update()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	internal class RemoteVoicePlayerState : VoicePlayerState
	{
		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly IVoicePlaybackInternal _playback;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDissonancePlayer _player;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ReadOnlyCollection<string> EmptyRoomsList;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReadOnlyCollection<string> _rooms;

		[Token(Token = "0x170000E2")]
		public override bool IsConnected
		{
			[Token(Token = "0x6000584")]
			[Address(RVA = "0x18AD33C", Offset = "0x18AD33C", VA = "0x18AD33C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E3")]
		public override bool IsSpeaking
		{
			[Token(Token = "0x6000585")]
			[Address(RVA = "0x18AD484", Offset = "0x18AD484", VA = "0x18AD484", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E4")]
		public override float Amplitude
		{
			[Token(Token = "0x6000586")]
			[Address(RVA = "0x18AD55C", Offset = "0x18AD55C", VA = "0x18AD55C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E5")]
		public override float Volume
		{
			[Token(Token = "0x6000587")]
			[Address(RVA = "0x18AD634", Offset = "0x18AD634", VA = "0x18AD634", Slot = "8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000588")]
			[Address(RVA = "0x18AD708", Offset = "0x18AD708", VA = "0x18AD708", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public override ChannelPriority? SpeakerPriority
		{
			[Token(Token = "0x6000589")]
			[Address(RVA = "0x18AD848", Offset = "0x18AD848", VA = "0x18AD848", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		internal override IVoicePlaybackInternal PlaybackInternal
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0x18ADA18", Offset = "0x18ADA18", VA = "0x18ADA18", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		public override bool IsLocallyMuted
		{
			[Token(Token = "0x600058B")]
			[Address(RVA = "0x18ADA50", Offset = "0x18ADA50", VA = "0x18ADA50", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600058C")]
			[Address(RVA = "0x18ADB24", Offset = "0x18ADB24", VA = "0x18ADB24", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public override ReadOnlyCollection<string> Rooms
		{
			[Token(Token = "0x600058D")]
			[Address(RVA = "0x18ADC6C", Offset = "0x18ADC6C", VA = "0x18ADC6C", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public override IDissonancePlayer Tracker
		{
			[Token(Token = "0x600058E")]
			[Address(RVA = "0x18ADCE0", Offset = "0x18ADCE0", VA = "0x18ADCE0", Slot = "14")]
			get
			{
				return null;
			}
			[Token(Token = "0x600058F")]
			[Address(RVA = "0x18ADCE8", Offset = "0x18ADCE8", VA = "0x18ADCE8", Slot = "15")]
			internal set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public override float? PacketLoss
		{
			[Token(Token = "0x6000590")]
			[Address(RVA = "0x18ADFE8", Offset = "0x18ADFE8", VA = "0x18ADFE8", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		internal float? Jitter
		{
			[Token(Token = "0x6000591")]
			[Address(RVA = "0x18AE0C8", Offset = "0x18AE0C8", VA = "0x18AE0C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x18AD188", Offset = "0x18AD188", VA = "0x18AD188")]
		internal RemoteVoicePlayerState([NotNull] IVoicePlaybackInternal playback)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x18AE1BC", Offset = "0x18AE1BC", VA = "0x18AE1BC", Slot = "20")]
		internal override void Update()
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x18AE4A8", Offset = "0x18AE4A8", VA = "0x18AE4A8", Slot = "19")]
		public override void GetSpeakingChannels(List<RemoteChannel> channels)
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x18AE5E4", Offset = "0x18AE5E4", VA = "0x18AE5E4", Slot = "17")]
		internal override void InvokeOnEnteredRoom(RoomEvent evtData)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x18AE704", Offset = "0x18AE704", VA = "0x18AE704", Slot = "18")]
		internal override void InvokeOnExitedRoom(RoomEvent evtData)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000ED")]
	public class VolumeFaderSettings
	{
		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _volume;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private long _fadeInTicks;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private long _fadeOutTicks;

		[Token(Token = "0x170000ED")]
		public float Volume
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0x18B36C8", Offset = "0x18B36C8", VA = "0x18B36C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000598")]
			[Address(RVA = "0x18B36D0", Offset = "0x18B36D0", VA = "0x18B36D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public TimeSpan FadeIn
		{
			[Token(Token = "0x6000599")]
			[Address(RVA = "0x18B2750", Offset = "0x18B2750", VA = "0x18B2750")]
			get
			{
				return default(TimeSpan);
			}
			[Token(Token = "0x600059A")]
			[Address(RVA = "0x18B2954", Offset = "0x18B2954", VA = "0x18B2954")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public TimeSpan FadeOut
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0x18B23DC", Offset = "0x18B23DC", VA = "0x18B23DC")]
			get
			{
				return default(TimeSpan);
			}
			[Token(Token = "0x600059C")]
			[Address(RVA = "0x18B295C", Offset = "0x18B295C", VA = "0x18B295C")]
			set
			{
			}
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x18B294C", Offset = "0x18B294C", VA = "0x18B294C")]
		public VolumeFaderSettings()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB1BC8", Offset = "0xFB1BC8")]
	public sealed class DissonanceComms : MonoBehaviour, IPriorityManager, IAccessTokenCollection, IChannelPriorityProvider, IVolumeProvider
	{
		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _started;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Rooms _rooms;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly PlayerChannels _playerChannels;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RoomChannels _roomChannels;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly TextChat _text;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly OpenChannelVolumeDuck _autoChannelDuck;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly PlayerTrackerManager _playerTrackers;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly PlaybackPool _playbackPool;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly PlayerCollection _players;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly CodecSettingsLoader _codecSettingsLoader;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly PriorityManager _playbackPriorityManager;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly CapturePipelineManager _capture;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ICommsNetwork _net;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _localPlayerName;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFBAAD4", Offset = "0xFBAAD4")]
		private bool _isMuted;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFBAB0C", Offset = "0xFBAB0C")]
		private bool _isDeafened;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFBAB44", Offset = "0xFBAB44")]
		private float _oneMinusBaseRemoteVoiceVolume;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFBAB7C", Offset = "0xFBAB7C")]
		private VoicePlayback _playbackPrefab;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFBABB4", Offset = "0xFBABB4")]
		private GameObject _playbackPrefab2;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFBABEC", Offset = "0xFBABEC")]
		private string _micName;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFBAC24", Offset = "0xFBAC24")]
		private ChannelPriority _playerPriority;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFBAC5C", Offset = "0xFBAC5C")]
		private TokenSet _tokens;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly SemanticVersion Version;

		[Token(Token = "0x170000F0")]
		internal bool IsStarted
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0x17AB934", Offset = "0x17AB934", VA = "0x17AB934")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F1")]
		internal float PacketLoss
		{
			[Token(Token = "0x60005AE")]
			[Address(RVA = "0x17AC938", Offset = "0x17AC938", VA = "0x17AC938")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F2")]
		public string LocalPlayerName
		{
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0x17AC954", Offset = "0x17AC954", VA = "0x17AC954")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0x17AC95C", Offset = "0x17AC95C", VA = "0x17AC95C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public bool IsNetworkInitialized
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0x17ACB1C", Offset = "0x17ACB1C", VA = "0x17ACB1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F4")]
		[NotNull]
		public Rooms Rooms
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0x17ACBDC", Offset = "0x17ACBDC", VA = "0x17ACBDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		[NotNull]
		public PlayerChannels PlayerChannels
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0x17ACBE4", Offset = "0x17ACBE4", VA = "0x17ACBE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		[NotNull]
		public RoomChannels RoomChannels
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x17ACBEC", Offset = "0x17ACBEC", VA = "0x17ACBEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		[NotNull]
		public TextChat Text
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0x17ACBF4", Offset = "0x17ACBF4", VA = "0x17ACBF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		[NotNull]
		public ReadOnlyCollection<VoicePlayerState> Players
		{
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0x17AC91C", Offset = "0x17AC91C", VA = "0x17AC91C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public ChannelPriority TopPrioritySpeaker
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0x17ACBFC", Offset = "0x17ACBFC", VA = "0x17ACBFC")]
			get
			{
				return default(ChannelPriority);
			}
		}

		[Token(Token = "0x170000FA")]
		[NotNull]
		public IEnumerable<string> Tokens
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0x17ACC18", Offset = "0x17ACC18", VA = "0x17ACC18", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public ChannelPriority PlayerPriority
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x17ACC20", Offset = "0x17ACC20", VA = "0x17ACC20")]
			get
			{
				return default(ChannelPriority);
			}
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x17ACC28", Offset = "0x17ACC28", VA = "0x17ACC28")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		[CanBeNull]
		public string MicrophoneName
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x17ACC30", Offset = "0x17ACC30", VA = "0x17ACC30")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x17ACC38", Offset = "0x17ACC38", VA = "0x17ACC38")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		[CanBeNull]
		public IMicrophoneCapture MicrophoneCapture
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x17ACCA8", Offset = "0x17ACCA8", VA = "0x17ACCA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		public GameObject PlaybackPrefab
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x17ACCC4", Offset = "0x17ACCC4", VA = "0x17ACCC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x17ACCCC", Offset = "0x17ACCCC", VA = "0x17ACCCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public bool IsMuted
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x17ACE54", Offset = "0x17ACE54", VA = "0x17ACE54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x17ACE5C", Offset = "0x17ACE5C", VA = "0x17ACE5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public bool IsDeafened
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x17ACE7C", Offset = "0x17ACE7C", VA = "0x17ACE7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005C3")]
			[Address(RVA = "0x17ACE84", Offset = "0x17ACE84", VA = "0x17ACE84")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public float RemoteVoiceVolume
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x17ACEA4", Offset = "0x17ACEA4", VA = "0x17ACEA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x17ACF1C", Offset = "0x17ACF1C", VA = "0x17ACF1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		private ChannelPriority Dissonance.Audio.Playback.IPriorityManager.TopPriority
		{
			[Token(Token = "0x60005E2")]
			[Address(RVA = "0x17AF550", Offset = "0x17AF550", VA = "0x17AF550", Slot = "4")]
			get
			{
				return default(ChannelPriority);
			}
		}

		[Token(Token = "0x17000103")]
		private ChannelPriority Dissonance.Audio.Capture.IChannelPriorityProvider.DefaultChannelPriority
		{
			[Token(Token = "0x60005E3")]
			[Address(RVA = "0x17AF56C", Offset = "0x17AF56C", VA = "0x17AF56C", Slot = "9")]
			get
			{
				return default(ChannelPriority);
			}
			[Token(Token = "0x60005E4")]
			[Address(RVA = "0x17AF574", Offset = "0x17AF574", VA = "0x17AF574", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		private float Dissonance.Audio.Playback.IVolumeProvider.TargetVolume
		{
			[Token(Token = "0x60005E5")]
			[Address(RVA = "0x17AF57C", Offset = "0x17AF57C", VA = "0x17AF57C", Slot = "11")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400000F")]
		public event Action<VoicePlayerState> OnPlayerJoinedSession
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x17AB93C", Offset = "0x17AB93C", VA = "0x17AB93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC75F8", Offset = "0xFC75F8")]
			add
			{
			}
			[Token(Token = "0x60005A0")]
			[Address(RVA = "0x17AB9E0", Offset = "0x17AB9E0", VA = "0x17AB9E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7608", Offset = "0xFC7608")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<VoicePlayerState> OnPlayerLeftSession
		{
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0x17ABA84", Offset = "0x17ABA84", VA = "0x17ABA84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7618", Offset = "0xFC7618")]
			add
			{
			}
			[Token(Token = "0x60005A2")]
			[Address(RVA = "0x17ABB28", Offset = "0x17ABB28", VA = "0x17ABB28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7628", Offset = "0xFC7628")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<VoicePlayerState> OnPlayerStartedSpeaking
		{
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0x17ABBCC", Offset = "0x17ABBCC", VA = "0x17ABBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7638", Offset = "0xFC7638")]
			add
			{
			}
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0x17ABC70", Offset = "0x17ABC70", VA = "0x17ABC70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7648", Offset = "0xFC7648")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<VoicePlayerState> OnPlayerStoppedSpeaking
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0x17ABD14", Offset = "0x17ABD14", VA = "0x17ABD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7658", Offset = "0xFC7658")]
			add
			{
			}
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0x17ABDB8", Offset = "0x17ABDB8", VA = "0x17ABDB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7668", Offset = "0xFC7668")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<VoicePlayerState, string> OnPlayerEnteredRoom
		{
			[Token(Token = "0x60005A7")]
			[Address(RVA = "0x17ABE5C", Offset = "0x17ABE5C", VA = "0x17ABE5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7678", Offset = "0xFC7678")]
			add
			{
			}
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x17ABF00", Offset = "0x17ABF00", VA = "0x17ABF00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7688", Offset = "0xFC7688")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<VoicePlayerState, string> OnPlayerExitedRoom
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x17ABFA4", Offset = "0x17ABFA4", VA = "0x17ABFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7698", Offset = "0xFC7698")]
			add
			{
			}
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x17AC048", Offset = "0x17AC048", VA = "0x17AC048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC76A8", Offset = "0xFC76A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<string> LocalPlayerNameChanged
		{
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0x17AC0EC", Offset = "0x17AC0EC", VA = "0x17AC0EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC76B8", Offset = "0xFC76B8")]
			add
			{
			}
			[Token(Token = "0x60005AC")]
			[Address(RVA = "0x17AC190", Offset = "0x17AC190", VA = "0x17AC190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC76C8", Offset = "0xFC76C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<string> TokenAdded
		{
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x17AF230", Offset = "0x17AF230", VA = "0x17AF230")]
			add
			{
			}
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x17AF24C", Offset = "0x17AF24C", VA = "0x17AF24C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<string> TokenRemoved
		{
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0x17AF268", Offset = "0x17AF268", VA = "0x17AF268")]
			add
			{
			}
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0x17AF284", Offset = "0x17AF284", VA = "0x17AF284")]
			remove
			{
			}
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x17AC234", Offset = "0x17AC234", VA = "0x17AC234")]
		public DissonanceComms()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x17ACFF0", Offset = "0x17ACFF0", VA = "0x17ACFF0")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC76D8", Offset = "0xFC76D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x17AE160", Offset = "0x17AE160", VA = "0x17AE160")]
		private IMicrophoneCapture GetOrAddMicrophone()
		{
			return null;
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x17AE1E4", Offset = "0x17AE1E4", VA = "0x17AE1E4")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC76E8", Offset = "0xFC76E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x17AE1E8", Offset = "0x17AE1E8", VA = "0x17AE1E8")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC76F8", Offset = "0xFC76F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x17AE1EC", Offset = "0x17AE1EC", VA = "0x17AE1EC")]
		public void ResetMicrophoneCapture()
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x17AE200", Offset = "0x17AE200", VA = "0x17AE200")]
		private void Net_PlayerStoppedSpeaking([NotNull] string player)
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x17AE41C", Offset = "0x17AE41C", VA = "0x17AE41C")]
		private void Net_PlayerStartedSpeaking([NotNull] string player)
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x17AE550", Offset = "0x17AE550", VA = "0x17AE550")]
		private void Net_PlayerRoomEvent(RoomEvent evt)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x17AE6A8", Offset = "0x17AE6A8", VA = "0x17AE6A8")]
		private void Net_VoicePacketReceived(VoicePacket packet)
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x17AE870", Offset = "0x17AE870", VA = "0x17AE870")]
		private void Net_PlayerLeft([NotNull] string playerId)
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x17AEC44", Offset = "0x17AEC44", VA = "0x17AEC44")]
		private void Net_PlayerJoined([NotNull] string playerId, CodecSettings codecSettings)
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x17AA30C", Offset = "0x17AA30C", VA = "0x17AA30C")]
		[CanBeNull]
		public VoicePlayerState FindPlayer([NotNull] string playerId)
		{
			return null;
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x17AF008", Offset = "0x17AF008", VA = "0x17AF008")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC7718", Offset = "0xFC7718")]
		private void Update()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x17AF16C", Offset = "0x17AF16C", VA = "0x17AF16C")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xFC7728", Offset = "0xFC7728")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x17AF188", Offset = "0x17AF188", VA = "0x17AF188")]
		public void SubcribeToVoiceActivation([NotNull] IVoiceActivationListener listener)
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x17AF1A4", Offset = "0x17AF1A4", VA = "0x17AF1A4")]
		public void UnsubscribeFromVoiceActivation([NotNull] IVoiceActivationListener listener)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x17AF1C0", Offset = "0x17AF1C0", VA = "0x17AF1C0")]
		public void SubcribeToRecordedAudio([NotNull] IMicrophoneSubscriber listener)
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x17AF1DC", Offset = "0x17AF1DC", VA = "0x17AF1DC")]
		public void UnsubscribeFromRecordedAudio([NotNull] IMicrophoneSubscriber listener)
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x17AF1F8", Offset = "0x17AF1F8", VA = "0x17AF1F8")]
		public void TrackPlayerPosition([NotNull] IDissonancePlayer player)
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x17AF214", Offset = "0x17AF214", VA = "0x17AF214")]
		public void StopTracking([NotNull] IDissonancePlayer player)
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x17AF2A0", Offset = "0x17AF2A0", VA = "0x17AF2A0", Slot = "7")]
		public bool AddToken(string token)
		{
			return default(bool);
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x17AF34C", Offset = "0x17AF34C", VA = "0x17AF34C", Slot = "8")]
		public bool RemoveToken(string token)
		{
			return default(bool);
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x17AF3F8", Offset = "0x17AF3F8", VA = "0x17AF3F8", Slot = "6")]
		public bool ContainsToken(string token)
		{
			return default(bool);
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x17AF4A4", Offset = "0x17AF4A4", VA = "0x17AF4A4")]
		public bool HasAnyToken([NotNull] TokenSet tokens)
		{
			return default(bool);
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x17ADB5C", Offset = "0x17ADB5C", VA = "0x17ADB5C")]
		public static void TestDependencies()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x17AF6E4", Offset = "0x17AF6E4", VA = "0x17AF6E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7738", Offset = "0xFC7738")]
		private ICommsNetwork <.ctor>b__46_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20000EF")]
	internal static class DissonanceRootPath
	{
		[Token(Token = "0x4000353")]
		internal const string BasePath = "Assets/Plugins/Dissonance";

		[Token(Token = "0x4000354")]
		internal const string BaseResourcePath = "Assets/Plugins/Dissonance/Resources";
	}
	[Token(Token = "0x20000F0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB1C00", Offset = "0xFB1C00")]
	public class VoiceBroadcastTrigger : BaseCommsTrigger, IVoiceActivationListener
	{
		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayerChannel? _playerChannel;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RoomChannel? _roomChannel;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _isVadSpeaking;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private CommActivationMode? _previousMode;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IDissonancePlayer _self;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Fader _activationFader;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private VolumeFaderSettings _activationFaderSettings;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Fader _triggerFader;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private VolumeFaderSettings _triggerFaderSettings;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private bool _broadcastPosition;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private CommTriggerTarget _channelType;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private string _inputName;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private CommActivationMode _mode;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool _muted;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private string _playerId;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private bool _useTrigger;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private string _roomName;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private ChannelPriority _priority;

		[Token(Token = "0x17000105")]
		[NotNull]
		public VolumeFaderSettings ActivationFader
		{
			[Token(Token = "0x60005E9")]
			[Address(RVA = "0x18B1650", Offset = "0x18B1650", VA = "0x18B1650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		[NotNull]
		public VolumeFaderSettings ColliderTriggerFader
		{
			[Token(Token = "0x60005EA")]
			[Address(RVA = "0x18B1658", Offset = "0x18B1658", VA = "0x18B1658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		public float CurrentFaderVolume
		{
			[Token(Token = "0x60005EB")]
			[Address(RVA = "0x18B1660", Offset = "0x18B1660", VA = "0x18B1660")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000108")]
		public bool BroadcastPosition
		{
			[Token(Token = "0x60005EC")]
			[Address(RVA = "0x18B16A8", Offset = "0x18B16A8", VA = "0x18B16A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0x18B16B0", Offset = "0x18B16B0", VA = "0x18B16B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public CommTriggerTarget ChannelType
		{
			[Token(Token = "0x60005EE")]
			[Address(RVA = "0x18B1798", Offset = "0x18B1798", VA = "0x18B1798")]
			get
			{
				return default(CommTriggerTarget);
			}
			[Token(Token = "0x60005EF")]
			[Address(RVA = "0x18B17A0", Offset = "0x18B17A0", VA = "0x18B17A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public string InputName
		{
			[Token(Token = "0x60005F0")]
			[Address(RVA = "0x18B1890", Offset = "0x18B1890", VA = "0x18B1890")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005F1")]
			[Address(RVA = "0x18B1898", Offset = "0x18B1898", VA = "0x18B1898")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public CommActivationMode Mode
		{
			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x18B18A0", Offset = "0x18B18A0", VA = "0x18B18A0")]
			get
			{
				return default(CommActivationMode);
			}
			[Token(Token = "0x60005F3")]
			[Address(RVA = "0x18B18A8", Offset = "0x18B18A8", VA = "0x18B18A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public bool IsMuted
		{
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0x18B18B0", Offset = "0x18B18B0", VA = "0x18B18B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0x18B18B8", Offset = "0x18B18B8", VA = "0x18B18B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public string PlayerId
		{
			[Token(Token = "0x60005F6")]
			[Address(RVA = "0x18B1948", Offset = "0x18B1948", VA = "0x18B1948")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005F7")]
			[Address(RVA = "0x18B1950", Offset = "0x18B1950", VA = "0x18B1950")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public override bool UseColliderTrigger
		{
			[Token(Token = "0x60005F8")]
			[Address(RVA = "0x18B19AC", Offset = "0x18B19AC", VA = "0x18B19AC", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005F9")]
			[Address(RVA = "0x18B19B4", Offset = "0x18B19B4", VA = "0x18B19B4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public string RoomName
		{
			[Token(Token = "0x60005FA")]
			[Address(RVA = "0x18B19C0", Offset = "0x18B19C0", VA = "0x18B19C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0x18B19C8", Offset = "0x18B19C8", VA = "0x18B19C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public ChannelPriority Priority
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x18B1A20", Offset = "0x18B1A20", VA = "0x18B1A20")]
			get
			{
				return default(ChannelPriority);
			}
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0x18B1A28", Offset = "0x18B1A28", VA = "0x18B1A28")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public bool IsTransmitting
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0x18B1B10", Offset = "0x18B1B10", VA = "0x18B1B10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000112")]
		public override bool CanTrigger
		{
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0x18B1B6C", Offset = "0x18B1B6C", VA = "0x18B1B6C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x18B1CB4", Offset = "0x18B1CB4", VA = "0x18B1CB4", Slot = "12")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x18B1D44", Offset = "0x18B1D44", VA = "0x18B1D44", Slot = "15")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x18B1D6C", Offset = "0x18B1D6C", VA = "0x18B1D6C", Slot = "16")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x18B1E0C", Offset = "0x18B1E0C", VA = "0x18B1E0C", Slot = "14")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x18B2758", Offset = "0x18B2758", VA = "0x18B2758", Slot = "18")]
		protected override void ColliderTriggerChanged()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x18B2088", Offset = "0x18B2088", VA = "0x18B2088")]
		private void SwitchMode()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x18B22E4", Offset = "0x18B22E4", VA = "0x18B22E4")]
		private bool ShouldActivate(bool intent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x18B2234", Offset = "0x18B2234", VA = "0x18B2234")]
		private bool IsUserActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x18B2168", Offset = "0x18B2168", VA = "0x18B2168")]
		private void SetChannelVolume(float value)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x18B23E4", Offset = "0x18B23E4", VA = "0x18B23E4")]
		private void OpenChannel()
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x18B17B8", Offset = "0x18B17B8", VA = "0x18B17B8")]
		private void CloseChannel()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x18B2800", Offset = "0x18B2800", VA = "0x18B2800", Slot = "20")]
		private void Dissonance.VAD.IVoiceActivationListener.VoiceActivationStart()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x18B280C", Offset = "0x18B280C", VA = "0x18B280C", Slot = "21")]
		private void Dissonance.VAD.IVoiceActivationListener.VoiceActivationStop()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x18B2814", Offset = "0x18B2814", VA = "0x18B2814")]
		public VoiceBroadcastTrigger()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB1C38", Offset = "0xFB1C38")]
	public class VoiceReceiptTrigger : BaseCommsTrigger
	{
		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RoomMembership? _membership;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _roomName;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _scriptDeactivated;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool _useTrigger;

		[Token(Token = "0x17000113")]
		public string RoomName
		{
			[Token(Token = "0x600060E")]
			[Address(RVA = "0x18B3324", Offset = "0x18B3324", VA = "0x18B3324")]
			get
			{
				return null;
			}
			[Token(Token = "0x600060F")]
			[Address(RVA = "0x18B332C", Offset = "0x18B332C", VA = "0x18B332C")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public override bool UseColliderTrigger
		{
			[Token(Token = "0x6000610")]
			[Address(RVA = "0x18B3420", Offset = "0x18B3420", VA = "0x18B3420", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000611")]
			[Address(RVA = "0x18B3428", Offset = "0x18B3428", VA = "0x18B3428", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public override bool CanTrigger
		{
			[Token(Token = "0x6000612")]
			[Address(RVA = "0x18B3434", Offset = "0x18B3434", VA = "0x18B3434", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x18B34DC", Offset = "0x18B34DC", VA = "0x18B34DC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFC7748", Offset = "0xFC7748")]
		public void StartListening()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x18B34E4", Offset = "0x18B34E4", VA = "0x18B34E4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFC7780", Offset = "0xFC7780")]
		public void StopListening()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x18B34F0", Offset = "0x18B34F0", VA = "0x18B34F0", Slot = "14")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x18B3580", Offset = "0x18B3580", VA = "0x18B3580")]
		private void JoinRoom()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x18B338C", Offset = "0x18B338C", VA = "0x18B338C")]
		private void LeaveRoom()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x18B3638", Offset = "0x18B3638", VA = "0x18B3638", Slot = "15")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x18B36C0", Offset = "0x18B36C0", VA = "0x18B36C0")]
		public VoiceReceiptTrigger()
		{
		}
	}
}
namespace Dissonance.Demo
{
	[Token(Token = "0x20000F2")]
	public class ChatInputController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB94F4", Offset = "0xFB94F4")]
		private sealed class <>c
		{
			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<InputField, bool> <>9__7_0;

			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x17A901C", Offset = "0x17A901C", VA = "0x17A901C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x17A9024", Offset = "0x17A9024", VA = "0x17A9024")]
			internal bool <Start>b__7_0(InputField a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isInputtingText;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _targetChannel;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DissonanceComms Comms;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Team1Channel;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Team2Channel;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputField _input;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ChatLogController _log;

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x17A85C0", Offset = "0x17A85C0", VA = "0x17A85C0")]
		public void Start()
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x17A87E0", Offset = "0x17A87E0", VA = "0x17A87E0")]
		private void OnInputEndEdit([CanBeNull] string message)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x17A8DA0", Offset = "0x17A8DA0", VA = "0x17A8DA0")]
		public void Update()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x17A8E58", Offset = "0x17A8E58", VA = "0x17A8E58")]
		private void ShowTextInput(string channel)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x17A8F3C", Offset = "0x17A8F3C", VA = "0x17A8F3C")]
		public ChatInputController()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class ChatLogController : MonoBehaviour
	{
		[Token(Token = "0x2000453")]
		private class ChatLogEntry
		{
			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Text _txt;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly RectTransform _transform;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float _transitionProgress;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC259C", Offset = "0xFC259C")]
			private bool <IsTransitioningOut>k__BackingField;

			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC25AC", Offset = "0xFC25AC")]
			private bool <IsTransitionComplete>k__BackingField;

			[Token(Token = "0x170004D7")]
			[NotNull]
			public RectTransform Transform
			{
				[Token(Token = "0x6001D60")]
				[Address(RVA = "0x17A9A48", Offset = "0x17A9A48", VA = "0x17A9A48")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D8")]
			[NotNull]
			public GameObject Object
			{
				[Token(Token = "0x6001D61")]
				[Address(RVA = "0x17A9844", Offset = "0x17A9844", VA = "0x17A9844")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D9")]
			public bool IsTransitioningOut
			{
				[Token(Token = "0x6001D62")]
				[Address(RVA = "0x17A9A50", Offset = "0x17A9A50", VA = "0x17A9A50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC39C", Offset = "0xFCC39C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001D63")]
				[Address(RVA = "0x17A9A58", Offset = "0x17A9A58", VA = "0x17A9A58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC3AC", Offset = "0xFCC3AC")]
				private set
				{
				}
			}

			[Token(Token = "0x170004DA")]
			public bool IsTransitionComplete
			{
				[Token(Token = "0x6001D64")]
				[Address(RVA = "0x17A9A64", Offset = "0x17A9A64", VA = "0x17A9A64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC3BC", Offset = "0xFCC3BC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001D65")]
				[Address(RVA = "0x17A9A6C", Offset = "0x17A9A6C", VA = "0x17A9A6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC3CC", Offset = "0xFCC3CC")]
				private set
				{
				}
			}

			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x17A93D8", Offset = "0x17A93D8", VA = "0x17A93D8")]
			public ChatLogEntry([NotNull] Text txt)
			{
			}

			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x17A9430", Offset = "0x17A9430", VA = "0x17A9430")]
			public void FadeOut()
			{
			}

			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x17A9860", Offset = "0x17A9860", VA = "0x17A9860")]
			public void Update()
			{
			}
		}

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DissonanceComms Comms;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _textPrototype;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.CanvasGroup _canvas;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _heightLimit;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Queue<ChatLogEntry> _entries;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBADD4", Offset = "0xFBADD4")]
		private bool <ForceShow>k__BackingField;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DateTime _fadeOutStartTime;

		[Token(Token = "0x17000116")]
		public bool ForceShow
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0x17A9088", Offset = "0x17A9088", VA = "0x17A9088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC77B8", Offset = "0xFC77B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000620")]
			[Address(RVA = "0x17A9090", Offset = "0x17A9090", VA = "0x17A9090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC77C8", Offset = "0xFC77C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x17A909C", Offset = "0x17A909C", VA = "0x17A909C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x17A9268", Offset = "0x17A9268", VA = "0x17A9268")]
		private void OnMessageReceived(TextMessage message)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x17A8988", Offset = "0x17A8988", VA = "0x17A8988")]
		public void AddMessage(string message, Color color)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x17A94C0", Offset = "0x17A94C0", VA = "0x17A94C0")]
		public void Update()
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x17A943C", Offset = "0x17A943C", VA = "0x17A943C")]
		public void ShowFor(TimeSpan time)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x17A99CC", Offset = "0x17A99CC", VA = "0x17A99CC")]
		public ChatLogController()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class Logo : MonoBehaviour
	{
		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Texture2D _logo;

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x17A9A78", Offset = "0x17A9A78", VA = "0x17A9A78")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x17A9AE0", Offset = "0x17A9AE0", VA = "0x17A9AE0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x17A9BF0", Offset = "0x17A9BF0", VA = "0x17A9BF0")]
		public Logo()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class SpeakerIndicator : MonoBehaviour
	{
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9504", Offset = "0xFB9504")]
		private sealed class <FindPlayerState>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpeakerIndicator <>4__this;

			[Token(Token = "0x170004DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D6C")]
				[Address(RVA = "0x17AA3C0", Offset = "0x17AA3C0", VA = "0x17AA3C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D6E")]
				[Address(RVA = "0x17AA428", Offset = "0x17AA428", VA = "0x17AA428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x17A9F24", Offset = "0x17A9F24", VA = "0x17A9F24")]
			[DebuggerHidden]
			public <FindPlayerState>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x17AA100", Offset = "0x17AA100", VA = "0x17AA100", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x17AA104", Offset = "0x17AA104", VA = "0x17AA104", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x17AA3C8", Offset = "0x17AA3C8", VA = "0x17AA3C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _indicator;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light _light;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _transform;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _intensity;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDissonancePlayer _player;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VoicePlayerState _state;

		[Token(Token = "0x17000117")]
		private bool IsSpeaking
		{
			[Token(Token = "0x600062A")]
			[Address(RVA = "0x17A9BF8", Offset = "0x17A9BF8", VA = "0x17A9BF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x17A9CD8", Offset = "0x17A9CD8", VA = "0x17A9CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x17A9EA8", Offset = "0x17A9EA8", VA = "0x17A9EA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC77D8", Offset = "0xFC77D8")]
		private IEnumerator FindPlayerState()
		{
			return null;
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x17A9F50", Offset = "0x17A9F50", VA = "0x17A9F50")]
		private void Update()
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x17AA09C", Offset = "0x17AA09C", VA = "0x17AA09C")]
		private static void UpdateChildTransform([NotNull] Transform transform, float intensity)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x17AA084", Offset = "0x17AA084", VA = "0x17AA084")]
		private static void UpdateLight([NotNull] Light light, float intensity)
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x17AA0F8", Offset = "0x17AA0F8", VA = "0x17AA0F8")]
		public SpeakerIndicator()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class ToggleInvertMute : MonoBehaviour
	{
		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VoiceBroadcastTrigger Trigger;

		[Token(Token = "0x17000118")]
		public bool IsUnmuted
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0x17AA430", Offset = "0x17AA430", VA = "0x17AA430")]
			set
			{
			}
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x17AA4D8", Offset = "0x17AA4D8", VA = "0x17AA4D8")]
		public ToggleInvertMute()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class TriggerVisualizer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9514", Offset = "0xFB9514")]
		private sealed class <>c
		{
			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BaseCommsTrigger, bool> <>9__7_0;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<BaseCommsTrigger, bool> <>9__7_1;

			[Token(Token = "0x6001D70")]
			[Address(RVA = "0x17AB8F0", Offset = "0x17AB8F0", VA = "0x17AB8F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x17AB8F8", Offset = "0x17AB8F8", VA = "0x17AB8F8")]
			internal bool <Update>b__7_0(BaseCommsTrigger t)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0x17AB918", Offset = "0x17AB918", VA = "0x17AB918")]
			internal bool <Update>b__7_1(BaseCommsTrigger t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _visualisations;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BaseCommsTrigger[] _triggers;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _fillMaterial;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _outlineMaterial;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _alpha;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color Color;

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x17AA4E0", Offset = "0x17AA4E0", VA = "0x17AA4E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x17AB580", Offset = "0x17AB580", VA = "0x17AB580")]
		private void Update()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x17AA7BC", Offset = "0x17AA7BC", VA = "0x17AA7BC")]
		private void CreateCircle(SphereCollider sphere)
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x17AAE30", Offset = "0x17AAE30", VA = "0x17AAE30")]
		private void CreateBox([NotNull] BoxCollider box)
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x17AB880", Offset = "0x17AB880", VA = "0x17AB880")]
		public TriggerVisualizer()
		{
		}
	}
}
namespace Dissonance.VAD
{
	[Token(Token = "0x20000F8")]
	public interface IVoiceActivationListener
	{
		[Token(Token = "0x6000638")]
		void VoiceActivationStart();

		[Token(Token = "0x6000639")]
		void VoiceActivationStop();
	}
}
namespace Dissonance.Threading
{
	[Token(Token = "0x20000F9")]
	internal interface IThread
	{
		[Token(Token = "0x17000119")]
		bool IsStarted
		{
			[Token(Token = "0x600063A")]
			get;
		}

		[Token(Token = "0x600063B")]
		void Start();

		[Token(Token = "0x600063C")]
		void Join();
	}
	[Token(Token = "0x20000FA")]
	internal class DThread : IThread
	{
		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Thread _thread;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBADE4", Offset = "0xFBADE4")]
		private bool <IsStarted>k__BackingField;

		[Token(Token = "0x1700011A")]
		public bool IsStarted
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0x18B0A84", Offset = "0x18B0A84", VA = "0x18B0A84", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC783C", Offset = "0xFC783C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600063E")]
			[Address(RVA = "0x18B0A8C", Offset = "0x18B0A8C", VA = "0x18B0A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC784C", Offset = "0xFC784C")]
			private set
			{
			}
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x18B0A98", Offset = "0x18B0A98", VA = "0x18B0A98")]
		public DThread([NotNull] Action action)
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x18B0B48", Offset = "0x18B0B48", VA = "0x18B0B48", Slot = "5")]
		public void Start()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x18B0B80", Offset = "0x18B0B80", VA = "0x18B0B80", Slot = "6")]
		public void Join()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	internal class LockedValue<T>
	{
		[Token(Token = "0x2000456")]
		public class Unlocker : IDisposable
		{
			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly LockedValue<T> _parent;

			[Token(Token = "0x170004DD")]
			[CanBeNull]
			public T Value
			{
				[Token(Token = "0x6001D73")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6001D74")]
				set
				{
				}
			}

			[Token(Token = "0x6001D75")]
			public Unlocker(LockedValue<T> parent)
			{
			}

			[Token(Token = "0x6001D76")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _value;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object _lockObject;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Unlocker _unlocker;

		[Token(Token = "0x6000642")]
		public LockedValue(T value)
		{
		}

		[Token(Token = "0x6000643")]
		public Unlocker Lock()
		{
			return null;
		}

		[Token(Token = "0x6000644")]
		private void Unlock()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	internal class ReadonlyLockedValue<T>
	{
		[Token(Token = "0x2000457")]
		public class Unlocker : IDisposable
		{
			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ReadonlyLockedValue<T> _parent;

			[Token(Token = "0x170004DE")]
			public T Value
			{
				[Token(Token = "0x6001D77")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x6001D78")]
			public Unlocker(ReadonlyLockedValue<T> parent)
			{
			}

			[Token(Token = "0x6001D79")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _value;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object _lockObject;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Unlocker _unlocker;

		[Token(Token = "0x6000645")]
		public ReadonlyLockedValue(T value)
		{
		}

		[Token(Token = "0x6000646")]
		public Unlocker Lock()
		{
			return null;
		}

		[Token(Token = "0x6000647")]
		private void Unlock()
		{
		}
	}
}
namespace Dissonance.Networking
{
	[Token(Token = "0x20000FD")]
	public abstract class BaseClient<TServer, TClient, TPeer> : IClient<TPeer> where TServer : BaseServer<TServer, TClient, TPeer> where TClient : BaseClient<TServer, TClient, TPeer> where TPeer : struct
	{
		[Serializable]
		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9524", Offset = "0xFB9524")]
		private sealed class <>c
		{
			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<byte[]> <>9__62_0;

			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<List<RemoteChannel>> <>9__62_1;

			[Token(Token = "0x6001D7B")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D7C")]
			internal byte[] <.ctor>b__62_0()
			{
				return null;
			}

			[Token(Token = "0x6001D7D")]
			internal List<RemoteChannel> <.ctor>b__62_1()
			{
				return null;
			}
		}

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Log Log;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _disconnected;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _error;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly EventQueue _events;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly SlaveClientCollection<TPeer> _peers;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ConnectionNegotiator<TPeer> _serverNegotiator;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly SendQueue<TPeer> _sendQueue;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly PacketDelaySimulator _lossSimulator;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly VoiceReceiver<TPeer> _voiceReceiver;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly VoiceSender<TPeer> _voiceSender;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TextReceiver<TPeer> _textReceiver;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TextSender<TPeer> _textSender;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TrafficCounter _recvRemoveClient;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TrafficCounter _recvVoiceData;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TrafficCounter _recvTextData;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TrafficCounter _recvHandshakeResponse;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TrafficCounter _recvHandshakeP2P;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TrafficCounter _recvClientState;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TrafficCounter _recvDeltaState;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TrafficCounter _sentServer;

		[Token(Token = "0x1700011B")]
		public bool IsConnected
		{
			[Token(Token = "0x6000648")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011C")]
		[NotNull]
		internal TrafficCounter RecvRemoveClient
		{
			[Token(Token = "0x6000659")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		[NotNull]
		internal TrafficCounter RecvVoiceData
		{
			[Token(Token = "0x600065A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		[NotNull]
		internal TrafficCounter RecvTextData
		{
			[Token(Token = "0x600065B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		[NotNull]
		internal TrafficCounter RecvHandshakeResponse
		{
			[Token(Token = "0x600065C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		[NotNull]
		internal TrafficCounter RecvHandshakeP2P
		{
			[Token(Token = "0x600065D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		[NotNull]
		internal TrafficCounter RecvClientState
		{
			[Token(Token = "0x600065E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		[NotNull]
		internal TrafficCounter RecvDeltaState
		{
			[Token(Token = "0x600065F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		[NotNull]
		internal TrafficCounter SentServerTraffic
		{
			[Token(Token = "0x6000660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<string, CodecSettings> PlayerJoined
		{
			[Token(Token = "0x6000649")]
			add
			{
			}
			[Token(Token = "0x600064A")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action<string> PlayerLeft
		{
			[Token(Token = "0x600064B")]
			add
			{
			}
			[Token(Token = "0x600064C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action<RoomEvent> PlayerEnteredRoom
		{
			[Token(Token = "0x600064D")]
			add
			{
			}
			[Token(Token = "0x600064E")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action<RoomEvent> PlayerExitedRoom
		{
			[Token(Token = "0x600064F")]
			add
			{
			}
			[Token(Token = "0x6000650")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<VoicePacket> VoicePacketReceived
		{
			[Token(Token = "0x6000651")]
			add
			{
			}
			[Token(Token = "0x6000652")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action<TextMessage> TextMessageReceived
		{
			[Token(Token = "0x6000653")]
			add
			{
			}
			[Token(Token = "0x6000654")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<string> PlayerStartedSpeaking
		{
			[Token(Token = "0x6000655")]
			add
			{
			}
			[Token(Token = "0x6000656")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<string> PlayerStoppedSpeaking
		{
			[Token(Token = "0x6000657")]
			add
			{
			}
			[Token(Token = "0x6000658")]
			remove
			{
			}
		}

		[Token(Token = "0x6000661")]
		protected BaseClient([NotNull] ICommsNetworkState network)
		{
		}

		[Token(Token = "0x6000662")]
		public abstract void Connect();

		[Token(Token = "0x6000663")]
		protected void Connected()
		{
		}

		[Token(Token = "0x6000664")]
		public virtual void Disconnect()
		{
		}

		[Token(Token = "0x6000665")]
		protected void FatalError(string reason)
		{
		}

		[Token(Token = "0x6000666")]
		public virtual ClientStatus Update()
		{
			return default(ClientStatus);
		}

		[Token(Token = "0x6000667")]
		private bool RunUpdate(DateTime utcNow)
		{
			return default(bool);
		}

		[Token(Token = "0x6000668")]
		public void SendVoiceData(ArraySegment<byte> encodedAudio)
		{
		}

		[Token(Token = "0x6000669")]
		public void SendTextData(string data, ChannelType type, string recipient)
		{
		}

		[Token(Token = "0x600066A")]
		public ushort? NetworkReceivedPacket(ArraySegment<byte> data)
		{
			return null;
		}

		[Token(Token = "0x600066B")]
		private ushort? ProcessReceivedPacket(ArraySegment<byte> data)
		{
			return null;
		}

		[Token(Token = "0x600066C")]
		private bool CheckSessionId(ref PacketReader reader, MessageTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x600066D")]
		protected abstract void ReadMessages();

		[Token(Token = "0x600066E")]
		protected abstract void SendReliable(ArraySegment<byte> packet);

		[Token(Token = "0x600066F")]
		protected abstract void SendUnreliable(ArraySegment<byte> packet);

		[Token(Token = "0x6000670")]
		protected virtual void SendReliableP2P([NotNull] List<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000671")]
		protected virtual void SendUnreliableP2P([NotNull] List<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000672")]
		protected virtual void OnServerAssignedSessionId(uint session, ushort id)
		{
		}

		[Token(Token = "0x6000673")]
		protected virtual void OnAddedClient([NotNull] ClientInfo<TPeer?> client)
		{
		}

		[Token(Token = "0x6000674")]
		protected virtual void OnMetClient([NotNull] ClientInfo<TPeer?> client)
		{
		}

		[Token(Token = "0x6000675")]
		protected void ReceiveHandshakeP2P(ushort id, TPeer connection)
		{
		}

		[Token(Token = "0x6000676")]
		[NotNull]
		protected static byte[] WriteHandshakeP2P(uint sessionId, ushort clientId)
		{
			return null;
		}

		[Token(Token = "0x6000677")]
		private void Dissonance.Networking.Client.IClient<TPeer>.SendReliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000678")]
		private void Dissonance.Networking.Client.IClient<TPeer>.SendUnreliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000679")]
		private void Dissonance.Networking.Client.IClient<TPeer>.SendReliableP2P([NotNull] List<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x600067A")]
		private void Dissonance.Networking.Client.IClient<TPeer>.SendUnreliableP2P([NotNull] List<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet)
		{
		}
	}
	[Token(Token = "0x20000FE")]
	internal class BaseClientCollection<TPeer> : IClientCollection<TPeer>
	{
		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Log Log;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly ClientIdCollection PlayerIds;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly RoomClientsCollection<TPeer> ClientsInRooms;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<ushort, ClientInfo<TPeer>> _clientsByPlayerId;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<string, ClientInfo<TPeer>> _clientsByName;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<string> _tmpRoomList;

		[Token(Token = "0x600067B")]
		protected BaseClientCollection()
		{
		}

		[Token(Token = "0x600067C")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x600067D")]
		protected virtual void OnAddedClient([NotNull] ClientInfo<TPeer> client)
		{
		}

		[Token(Token = "0x600067E")]
		protected virtual void OnRemovedClient([NotNull] ClientInfo<TPeer> client)
		{
		}

		[Token(Token = "0x600067F")]
		[NotNull]
		protected ClientInfo<TPeer> GetOrCreateClientInfo(ushort id, [NotNull] string name, CodecSettings codecSettings, [CanBeNull] TPeer connection)
		{
			return null;
		}

		[Token(Token = "0x6000680")]
		protected void RemoveClient([NotNull] ClientInfo<TPeer> client)
		{
		}

		[Token(Token = "0x6000681")]
		public bool TryGetClientInfoById(ushort player, out ClientInfo<TPeer> info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000682")]
		public bool TryGetClientInfoByName([CanBeNull] string name, out ClientInfo<TPeer> info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000683")]
		public bool TryGetClientsInRoom(string room, out List<ClientInfo<TPeer>> clients)
		{
			return default(bool);
		}

		[Token(Token = "0x6000684")]
		public bool TryGetClientsInRoom(ushort roomId, out List<ClientInfo<TPeer>> clients)
		{
			return default(bool);
		}

		[Token(Token = "0x6000685")]
		protected void GetClients(List<ClientInfo<TPeer>> output)
		{
		}

		[Token(Token = "0x6000686")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC787C", Offset = "0xFC787C")]
		protected bool TryFindClientByConnection(TPeer connection, [CanBeNull] out ClientInfo<TPeer> info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000687")]
		protected void ClearRooms()
		{
		}

		[Token(Token = "0x6000688")]
		protected virtual void OnClientEnteredRoom([NotNull] ClientInfo<TPeer> client, string room)
		{
		}

		[Token(Token = "0x6000689")]
		protected virtual void OnClientExitedRoom([NotNull] ClientInfo<TPeer> client, string room)
		{
		}

		[Token(Token = "0x600068A")]
		protected void JoinRoom([NotNull] string room, [NotNull] ClientInfo<TPeer> client)
		{
		}

		[Token(Token = "0x600068B")]
		private void LeaveRoom([NotNull] string room, [NotNull] ClientInfo<TPeer> client)
		{
		}

		[Token(Token = "0x600068C")]
		public virtual void ProcessClientState([CanBeNull] TPeer source, ref PacketReader reader)
		{
		}

		[Token(Token = "0x600068D")]
		public virtual void ProcessDeltaChannelState(ref PacketReader reader)
		{
		}
	}
	[Token(Token = "0x20000FF")]
	internal interface IClientCollection<TPeer>
	{
		[Token(Token = "0x600068E")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC78B4", Offset = "0xFC78B4")]
		bool TryGetClientInfoById(ushort clientId, out ClientInfo<TPeer> info);

		[Token(Token = "0x600068F")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC78EC", Offset = "0xFC78EC")]
		bool TryGetClientInfoByName([NotNull] string clientName, out ClientInfo<TPeer> info);

		[Token(Token = "0x6000690")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC7924", Offset = "0xFC7924")]
		bool TryGetClientsInRoom([NotNull] string room, out List<ClientInfo<TPeer>> clients);

		[Token(Token = "0x6000691")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC795C", Offset = "0xFC795C")]
		bool TryGetClientsInRoom(ushort roomId, out List<ClientInfo<TPeer>> clients);
	}
	[Token(Token = "0x2000100")]
	public abstract class BaseCommsNetwork<TServer, TClient, TPeer, TClientParam, TServerParam> : MonoBehaviour, ICommsNetwork, ICommsNetworkState where TServer : BaseServer<TServer, TClient, TPeer> where TClient : BaseClient<TServer, TClient, TPeer> where TPeer : struct, IEquatable<TPeer>
	{
		[Token(Token = "0x2000459")]
		private interface IState
		{
			[Token(Token = "0x170004DF")]
			ConnectionStatus Status
			{
				[Token(Token = "0x6001D7E")]
				get;
			}

			[Token(Token = "0x6001D7F")]
			void Enter();

			[Token(Token = "0x6001D80")]
			void Update();

			[Token(Token = "0x6001D81")]
			void Exit();
		}

		[Token(Token = "0x200045A")]
		private class Idle : IState
		{
			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BaseCommsNetwork<TServer, TClient, TPeer, TClientParam, TServerParam> _net;

			[Token(Token = "0x170004E0")]
			public ConnectionStatus Status
			{
				[Token(Token = "0x6001D83")]
				get
				{
					return default(ConnectionStatus);
				}
			}

			[Token(Token = "0x6001D82")]
			public Idle(BaseCommsNetwork<TServer, TClient, TPeer, TClientParam, TServerParam> net)
			{
			}

			[Token(Token = "0x6001D84")]
			public void Enter()
			{
			}

			[Token(Token = "0x6001D85")]
			public void Update()
			{
			}

			[Token(Token = "0x6001D86")]
			public void Exit()
			{
			}
		}

		[Token(Token = "0x200045B")]
		private class Session : IState
		{
			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[CanBeNull]
			private readonly TClientParam _clientParameter;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[CanBeNull]
			private readonly TServerParam _serverParameter;

			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly NetworkMode _mode;

			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BaseCommsNetwork<TServer, TClient, TPeer, TClientParam, TServerParam> _net;

			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float _reconnectionAttemptInterval;

			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private DateTime _lastReconnectionAttempt;

			[Token(Token = "0x170004E1")]
			public ConnectionStatus Status
			{
				[Token(Token = "0x6001D88")]
				get
				{
					return default(ConnectionStatus);
				}
			}

			[Token(Token = "0x6001D87")]
			public Session([NotNull] BaseCommsNetwork<TServer, TClient, TPeer, TClientParam, TServerParam> net, NetworkMode mode, [CanBeNull] TServerParam serverParameter, [CanBeNull] TClientParam clientParameter)
			{
			}

			[Token(Token = "0x6001D89")]
			public void Enter()
			{
			}

			[Token(Token = "0x6001D8A")]
			public void Update()
			{
			}

			[Token(Token = "0x6001D8B")]
			public void Exit()
			{
			}

			[Token(Token = "0x6001D8C")]
			private void StartServer()
			{
			}

			[Token(Token = "0x6001D8D")]
			private void StartClient()
			{
			}

			[Token(Token = "0x6001D8E")]
			private bool ShouldAttemptReconnect()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Queue<IState> _nextStates;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IState _state;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NetworkMode _mode;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBADF4", Offset = "0xFBADF4")]
		private TServer <Server>k__BackingField;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAE04", Offset = "0xFBAE04")]
		private TClient <Client>k__BackingField;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Log Log;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAE14", Offset = "0xFBAE14")]
		private string <PlayerName>k__BackingField;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAE24", Offset = "0xFBAE24")]
		private Rooms <Rooms>k__BackingField;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAE34", Offset = "0xFBAE34")]
		private PlayerChannels <PlayerChannels>k__BackingField;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAE44", Offset = "0xFBAE44")]
		private RoomChannels <RoomChannels>k__BackingField;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAE54", Offset = "0xFBAE54")]
		private CodecSettings <CodecSettings>k__BackingField;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAEF4", Offset = "0xFBAEF4")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x17000124")]
		protected TServer Server
		{
			[Token(Token = "0x6000692")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7994", Offset = "0xFC7994")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000693")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC79A4", Offset = "0xFC79A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000125")]
		protected TClient Client
		{
			[Token(Token = "0x6000694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC79B4", Offset = "0xFC79B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000695")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC79C4", Offset = "0xFC79C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public string PlayerName
		{
			[Token(Token = "0x6000696")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC79D4", Offset = "0xFC79D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000697")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC79E4", Offset = "0xFC79E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public Rooms Rooms
		{
			[Token(Token = "0x6000698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC79F4", Offset = "0xFC79F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000699")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A04", Offset = "0xFC7A04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public PlayerChannels PlayerChannels
		{
			[Token(Token = "0x600069A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A14", Offset = "0xFC7A14")]
			get
			{
				return null;
			}
			[Token(Token = "0x600069B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A24", Offset = "0xFC7A24")]
			private set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public RoomChannels RoomChannels
		{
			[Token(Token = "0x600069C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A34", Offset = "0xFC7A34")]
			get
			{
				return null;
			}
			[Token(Token = "0x600069D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A44", Offset = "0xFC7A44")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public CodecSettings CodecSettings
		{
			[Token(Token = "0x600069E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A54", Offset = "0xFC7A54")]
			get
			{
				return default(CodecSettings);
			}
			[Token(Token = "0x600069F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A64", Offset = "0xFC7A64")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public bool IsInitialized
		{
			[Token(Token = "0x60006B2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B94", Offset = "0xFC7B94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006B3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7BA4", Offset = "0xFC7BA4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public ConnectionStatus Status
		{
			[Token(Token = "0x60006B4")]
			get
			{
				return default(ConnectionStatus);
			}
		}

		[Token(Token = "0x1700012D")]
		public NetworkMode Mode
		{
			[Token(Token = "0x60006B5")]
			get
			{
				return default(NetworkMode);
			}
			[Token(Token = "0x60006B6")]
			private set
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<NetworkMode> ModeChanged
		{
			[Token(Token = "0x60006A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A74", Offset = "0xFC7A74")]
			add
			{
			}
			[Token(Token = "0x60006A1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A84", Offset = "0xFC7A84")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action<string, CodecSettings> PlayerJoined
		{
			[Token(Token = "0x60006A2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7A94", Offset = "0xFC7A94")]
			add
			{
			}
			[Token(Token = "0x60006A3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7AA4", Offset = "0xFC7AA4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action<string> PlayerLeft
		{
			[Token(Token = "0x60006A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7AB4", Offset = "0xFC7AB4")]
			add
			{
			}
			[Token(Token = "0x60006A5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7AC4", Offset = "0xFC7AC4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<VoicePacket> VoicePacketReceived
		{
			[Token(Token = "0x60006A6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7AD4", Offset = "0xFC7AD4")]
			add
			{
			}
			[Token(Token = "0x60006A7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7AE4", Offset = "0xFC7AE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<TextMessage> TextPacketReceived
		{
			[Token(Token = "0x60006A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7AF4", Offset = "0xFC7AF4")]
			add
			{
			}
			[Token(Token = "0x60006A9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B04", Offset = "0xFC7B04")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<string> PlayerStartedSpeaking
		{
			[Token(Token = "0x60006AA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B14", Offset = "0xFC7B14")]
			add
			{
			}
			[Token(Token = "0x60006AB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B24", Offset = "0xFC7B24")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action<string> PlayerStoppedSpeaking
		{
			[Token(Token = "0x60006AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B34", Offset = "0xFC7B34")]
			add
			{
			}
			[Token(Token = "0x60006AD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B44", Offset = "0xFC7B44")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action<RoomEvent> PlayerEnteredRoom
		{
			[Token(Token = "0x60006AE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B54", Offset = "0xFC7B54")]
			add
			{
			}
			[Token(Token = "0x60006AF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B64", Offset = "0xFC7B64")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action<RoomEvent> PlayerExitedRoom
		{
			[Token(Token = "0x60006B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B74", Offset = "0xFC7B74")]
			add
			{
			}
			[Token(Token = "0x60006B1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7B84", Offset = "0xFC7B84")]
			remove
			{
			}
		}

		[Token(Token = "0x60006B7")]
		protected BaseCommsNetwork()
		{
		}

		[Token(Token = "0x60006B8")]
		[NotNull]
		protected abstract TServer CreateServer([CanBeNull] TServerParam connectionParameters);

		[Token(Token = "0x60006B9")]
		[NotNull]
		protected abstract TClient CreateClient([CanBeNull] TClientParam connectionParameters);

		[Token(Token = "0x60006BA")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x60006BB")]
		private void Dissonance.Networking.ICommsNetwork.Initialize([NotNull] string playerName, [NotNull] Rooms rooms, [NotNull] PlayerChannels playerChannels, [NotNull] RoomChannels roomChannels, CodecSettings codecSettings)
		{
		}

		[Token(Token = "0x60006BC")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60006BD")]
		private void LoadState()
		{
		}

		[Token(Token = "0x60006BE")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60006BF")]
		public void Stop()
		{
		}

		[Token(Token = "0x60006C0")]
		protected void RunAsHost(TServerParam serverParameters, TClientParam clientParameters)
		{
		}

		[Token(Token = "0x60006C1")]
		protected void RunAsClient(TClientParam clientParameters)
		{
		}

		[Token(Token = "0x60006C2")]
		protected void RunAsDedicatedServer(TServerParam serverParameters)
		{
		}

		[Token(Token = "0x60006C3")]
		private void ChangeState(IState newState)
		{
		}

		[Token(Token = "0x60006C4")]
		private void StartServer([CanBeNull] TServerParam connectParams)
		{
		}

		[Token(Token = "0x60006C5")]
		private void StopServer()
		{
		}

		[Token(Token = "0x60006C6")]
		private void StartClient([CanBeNull] TClientParam connectParams)
		{
		}

		[Token(Token = "0x60006C7")]
		private void StopClient()
		{
		}

		[Token(Token = "0x60006C8")]
		public void SendVoice(ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x60006C9")]
		public void SendText(string data, ChannelType recipientType, string recipientId)
		{
		}

		[Token(Token = "0x60006CA")]
		private void OnPlayerJoined(string obj, CodecSettings codecSettings)
		{
		}

		[Token(Token = "0x60006CB")]
		private void OnPlayerLeft(string obj)
		{
		}

		[Token(Token = "0x60006CC")]
		private void OnPlayerEnteredRoom(RoomEvent evt)
		{
		}

		[Token(Token = "0x60006CD")]
		private void OnPlayerExitedRoom(RoomEvent evt)
		{
		}

		[Token(Token = "0x60006CE")]
		private void OnVoicePacketReceived(VoicePacket obj)
		{
		}

		[Token(Token = "0x60006CF")]
		private void OnTextPacketReceived(TextMessage obj)
		{
		}

		[Token(Token = "0x60006D0")]
		private void OnPlayerStartedSpeaking(string obj)
		{
		}

		[Token(Token = "0x60006D1")]
		private void OnPlayerStoppedSpeaking(string obj)
		{
		}

		[Token(Token = "0x60006D2")]
		private void OnModeChanged(NetworkMode obj)
		{
		}

		[Token(Token = "0x60006D3")]
		public void OnInspectorGui()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public abstract class BaseServer<TServer, TClient, TPeer> : IServer<TPeer> where TServer : BaseServer<TServer, TClient, TPeer> where TClient : BaseClient<TServer, TClient, TPeer> where TPeer : struct
	{
		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Log Log;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _disconnected;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _error;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF04", Offset = "0xFBAF04")]
		private TrafficCounter <RecvHandshakeRequest>k__BackingField;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF14", Offset = "0xFBAF14")]
		private TrafficCounter <RecvClientState>k__BackingField;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF24", Offset = "0xFBAF24")]
		private TrafficCounter <RecvPacketRelay>k__BackingField;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF34", Offset = "0xFBAF34")]
		private TrafficCounter <RecvDeltaChannelState>k__BackingField;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF44", Offset = "0xFBAF44")]
		private TrafficCounter <SentTraffic>k__BackingField;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ServerRelay<TPeer> _relay;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly BroadcastingClientCollection<TPeer> _clients;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly uint _sessionId;

		[Token(Token = "0x1700012E")]
		internal TrafficCounter RecvHandshakeRequest
		{
			[Token(Token = "0x60006D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7BD4", Offset = "0xFC7BD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7BE4", Offset = "0xFC7BE4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		internal TrafficCounter RecvClientState
		{
			[Token(Token = "0x60006D6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7BF4", Offset = "0xFC7BF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7C04", Offset = "0xFC7C04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000130")]
		internal TrafficCounter RecvPacketRelay
		{
			[Token(Token = "0x60006D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7C14", Offset = "0xFC7C14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7C24", Offset = "0xFC7C24")]
			private set
			{
			}
		}

		[Token(Token = "0x17000131")]
		internal TrafficCounter RecvDeltaChannelState
		{
			[Token(Token = "0x60006DA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7C34", Offset = "0xFC7C34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006DB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7C44", Offset = "0xFC7C44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000132")]
		internal TrafficCounter SentTraffic
		{
			[Token(Token = "0x60006DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7C54", Offset = "0xFC7C54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006DD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7C64", Offset = "0xFC7C64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public uint SessionId
		{
			[Token(Token = "0x60006DE")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x60006DF")]
		protected BaseServer()
		{
		}

		[Token(Token = "0x60006E0")]
		public virtual void Connect()
		{
		}

		[Token(Token = "0x60006E1")]
		public virtual void Disconnect()
		{
		}

		[Token(Token = "0x60006E2")]
		protected void FatalError([NotNull] string reason)
		{
		}

		[Token(Token = "0x60006E3")]
		protected void ClientDisconnected(TPeer connection)
		{
		}

		[Token(Token = "0x60006E4")]
		public virtual ServerState Update()
		{
			return default(ServerState);
		}

		[Token(Token = "0x60006E5")]
		private bool RunUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E6")]
		protected abstract void SendReliable(TPeer connection, ArraySegment<byte> packet);

		[Token(Token = "0x60006E7")]
		protected abstract void SendUnreliable(TPeer connection, ArraySegment<byte> packet);

		[Token(Token = "0x60006E8")]
		public virtual void SendUnreliable([NotNull] List<TPeer> connections, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60006E9")]
		public virtual void SendReliable([NotNull] List<TPeer> connections, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60006EA")]
		private void Dissonance.Networking.Server.IServer<TPeer>.SendReliable(TPeer connection, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60006EB")]
		private void Dissonance.Networking.Server.IServer<TPeer>.SendUnreliable(List<TPeer> connections, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60006EC")]
		private void Dissonance.Networking.Server.IServer<TPeer>.SendReliable(List<TPeer> connections, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60006ED")]
		protected abstract void ReadMessages();

		[Token(Token = "0x60006EE")]
		public void NetworkReceivedPacket(TPeer source, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x60006EF")]
		private bool CheckSessionId(ref PacketReader reader, TPeer source)
		{
			return default(bool);
		}

		[Token(Token = "0x60006F0")]
		protected virtual void AddClient(ClientInfo<TPeer> client)
		{
		}

		[Token(Token = "0x60006F1")]
		private void Dissonance.Networking.Server.IServer<TPeer>.AddClient(ClientInfo<TPeer> client)
		{
		}
	}
	[Token(Token = "0x2000102")]
	internal struct ChannelBitField
	{
		[Token(Token = "0x40003C9")]
		private const ushort TypeMask = 1;

		[Token(Token = "0x40003CA")]
		private const ushort PositionalMask = 2;

		[Token(Token = "0x40003CB")]
		private const ushort ClosureMask = 4;

		[Token(Token = "0x40003CC")]
		private const ushort PriorityOffset = 3;

		[Token(Token = "0x40003CD")]
		private const ushort PriorityMask = 24;

		[Token(Token = "0x40003CE")]
		private const ushort SessionIdOffset = 5;

		[Token(Token = "0x40003CF")]
		private const ushort SessionIdMask = 97;

		[Token(Token = "0x40003D0")]
		private const ushort AmplitudeOffset = 8;

		[Token(Token = "0x40003D1")]
		private const ushort AmplitudeMask = 65280;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ushort _bitfield;

		[Token(Token = "0x17000134")]
		public ushort Bitfield
		{
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0x110A040", Offset = "0x110A040", VA = "0x110A040")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000135")]
		public ChannelType Type
		{
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0x110A048", Offset = "0x110A048", VA = "0x110A048")]
			get
			{
				return default(ChannelType);
			}
		}

		[Token(Token = "0x17000136")]
		public bool IsClosing
		{
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0x110A058", Offset = "0x110A058", VA = "0x110A058")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000137")]
		public bool IsPositional
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0x110A064", Offset = "0x110A064", VA = "0x110A064")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000138")]
		public ChannelPriority Priority
		{
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x110A070", Offset = "0x110A070", VA = "0x110A070")]
			get
			{
				return default(ChannelPriority);
			}
		}

		[Token(Token = "0x17000139")]
		public float AmplitudeMultiplier
		{
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0x110A08C", Offset = "0x110A08C", VA = "0x110A08C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013A")]
		public int SessionId
		{
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0x110A0A8", Offset = "0x110A0A8", VA = "0x110A0A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x110A0B4", Offset = "0x110A0B4", VA = "0x110A0B4")]
		public ChannelBitField(ushort bitfield)
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x110A0BC", Offset = "0x110A0BC", VA = "0x110A0BC")]
		public ChannelBitField(ChannelType type, int sessionId, ChannelPriority priority, float amplitudeMult, bool positional, bool closing)
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x17B188C", Offset = "0x17B188C", VA = "0x17B188C")]
		private static ushort PackPriority(ChannelPriority priority)
		{
			return default(ushort);
		}
	}
	[Token(Token = "0x2000103")]
	internal sealed class ClientIdCollection : IReadonlyClientIdCollection
	{
		[Serializable]
		[Token(Token = "0x200045C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9534", Offset = "0xFB9534")]
		private sealed class <>c
		{
			[Token(Token = "0x40012D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, int, KeyValuePair<ushort, string>> <>9__6_0;

			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<ushort, string>, bool> <>9__6_1;

			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x17B6564", Offset = "0x17B6564", VA = "0x17B6564")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x17B656C", Offset = "0x17B656C", VA = "0x17B656C")]
			internal KeyValuePair<ushort, string> <.ctor>b__6_0(string a, int i)
			{
				return default(KeyValuePair<ushort, string>);
			}

			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x17B65E4", Offset = "0x17B65E4", VA = "0x17B65E4")]
			internal bool <.ctor>b__6_1(KeyValuePair<ushort, string> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<string> _items;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<ushort> _freeIds;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IEnumerable<KeyValuePair<ushort, string>> _alive;

		[Token(Token = "0x1700013B")]
		[NotNull]
		public IEnumerable<KeyValuePair<ushort, string>> Items
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x17B597C", Offset = "0x17B597C", VA = "0x17B597C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x17B5984", Offset = "0x17B5984", VA = "0x17B5984")]
		public ClientIdCollection()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x17B5BBC", Offset = "0x17B5BBC", VA = "0x17B5BBC")]
		private ushort GetFreeId()
		{
			return default(ushort);
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x17B5C70", Offset = "0x17B5C70", VA = "0x17B5C70")]
		private void AddFreeId(ushort id)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x17B5D50", Offset = "0x17B5D50", VA = "0x17B5D50", Slot = "5")]
		public string GetName(ushort id)
		{
			return null;
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x17B5DDC", Offset = "0x17B5DDC", VA = "0x17B5DDC", Slot = "4")]
		public ushort? GetId(string name)
		{
			return null;
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x17B5EB4", Offset = "0x17B5EB4", VA = "0x17B5EB4")]
		public ushort Register([NotNull] string name)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x17B6014", Offset = "0x17B6014", VA = "0x17B6014")]
		public bool Unregister([NotNull] string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x17B6164", Offset = "0x17B6164", VA = "0x17B6164")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x17B61D4", Offset = "0x17B61D4", VA = "0x17B61D4")]
		public void Load([NotNull] List<ClientInfo> clients)
		{
		}
	}
	[Token(Token = "0x2000104")]
	internal interface IReadonlyClientIdCollection
	{
		[Token(Token = "0x6000707")]
		ushort? GetId([NotNull] string name);

		[Token(Token = "0x6000708")]
		[CanBeNull]
		string GetName(ushort id);
	}
	[Token(Token = "0x2000105")]
	internal struct ClientInfo
	{
		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF54", Offset = "0xFBAF54")]
		private string <PlayerName>k__BackingField;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF64", Offset = "0xFBAF64")]
		private ushort <PlayerId>k__BackingField;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF74", Offset = "0xFBAF74")]
		private CodecSettings <CodecSettings>k__BackingField;

		[Token(Token = "0x1700013C")]
		public string PlayerName
		{
			[Token(Token = "0x6000709")]
			[Address(RVA = "0x110A4E8", Offset = "0x110A4E8", VA = "0x110A4E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7C84", Offset = "0xFC7C84")]
			get
			{
				return null;
			}
			[Token(Token = "0x600070A")]
			[Address(RVA = "0x110A4F0", Offset = "0x110A4F0", VA = "0x110A4F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7C94", Offset = "0xFC7C94")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public ushort PlayerId
		{
			[Token(Token = "0x600070B")]
			[Address(RVA = "0x110A4F8", Offset = "0x110A4F8", VA = "0x110A4F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7CA4", Offset = "0xFC7CA4")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x110A500", Offset = "0x110A500", VA = "0x110A500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7CB4", Offset = "0xFC7CB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public CodecSettings CodecSettings
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x110A508", Offset = "0x110A508", VA = "0x110A508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7CC4", Offset = "0xFC7CC4")]
			get
			{
				return default(CodecSettings);
			}
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x110A518", Offset = "0x110A518", VA = "0x110A518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7CD4", Offset = "0xFC7CD4")]
			private set
			{
			}
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x110A524", Offset = "0x110A524", VA = "0x110A524")]
		public ClientInfo(string playerName, ushort playerId, CodecSettings codecSettings)
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class ClientInfo<TPeer> : IEquatable<ClientInfo<TPeer>>
	{
		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string _playerName;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ushort _playerId;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly CodecSettings _codecSettings;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<string> _rooms;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ReadOnlyCollection<string> _roomsReadonly;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF84", Offset = "0xFBAF84")]
		private TPeer <Connection>k__BackingField;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAF94", Offset = "0xFBAF94")]
		private bool <IsConnected>k__BackingField;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAFA4", Offset = "0xFBAFA4")]
		private PeerVoiceReceiver <VoiceReceiver>k__BackingField;

		[Token(Token = "0x1700013F")]
		[NotNull]
		public string PlayerName
		{
			[Token(Token = "0x6000710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		public ushort PlayerId
		{
			[Token(Token = "0x6000711")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000141")]
		public CodecSettings CodecSettings
		{
			[Token(Token = "0x6000712")]
			get
			{
				return default(CodecSettings);
			}
		}

		[Token(Token = "0x17000142")]
		[NotNull]
		internal ReadOnlyCollection<string> Rooms
		{
			[Token(Token = "0x6000713")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		[CanBeNull]
		public TPeer Connection
		{
			[Token(Token = "0x6000714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7CE4", Offset = "0xFC7CE4")]
			get
			{
				return (TPeer)null;
			}
			[Token(Token = "0x6000715")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7CF4", Offset = "0xFC7CF4")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public bool IsConnected
		{
			[Token(Token = "0x6000716")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7D04", Offset = "0xFC7D04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000717")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7D14", Offset = "0xFC7D14")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000145")]
		internal PeerVoiceReceiver VoiceReceiver
		{
			[Token(Token = "0x6000718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7D24", Offset = "0xFC7D24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000719")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7D34", Offset = "0xFC7D34")]
			set
			{
			}
		}

		[Token(Token = "0x600071A")]
		public ClientInfo(string playerName, ushort playerId, CodecSettings codecSettings, [CanBeNull] TPeer connection)
		{
		}

		[Token(Token = "0x600071B")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600071C")]
		public bool Equals(ClientInfo<TPeer> other)
		{
			return default(bool);
		}

		[Token(Token = "0x600071D")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600071E")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600071F")]
		public bool AddRoom([NotNull] string roomName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000720")]
		public bool RemoveRoom([NotNull] string roomName)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000107")]
	public struct VoicePacket
	{
		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly string SenderPlayerId;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ArraySegment<byte> EncodedAudioFrame;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SequenceNumber;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[CanBeNull]
		public readonly List<RemoteChannel> Channels;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly PlaybackOptions _options;

		[Token(Token = "0x17000146")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFCF62C", Offset = "0xFCF62C")]
		public bool Positional
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0x110AAD8", Offset = "0x110AAD8", VA = "0x110AAD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000147")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFCF664", Offset = "0xFCF664")]
		public ChannelPriority Priority
		{
			[Token(Token = "0x6000723")]
			[Address(RVA = "0x110AAE8", Offset = "0x110AAE8", VA = "0x110AAE8")]
			get
			{
				return default(ChannelPriority);
			}
		}

		[Token(Token = "0x17000148")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFCF69C", Offset = "0xFCF69C")]
		public float AmplitudeMultiplier
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0x110AAF0", Offset = "0x110AAF0", VA = "0x110AAF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000149")]
		public PlaybackOptions PlaybackOptions
		{
			[Token(Token = "0x6000725")]
			[Address(RVA = "0x110AAF8", Offset = "0x110AAF8", VA = "0x110AAF8")]
			get
			{
				return default(PlaybackOptions);
			}
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x110AB08", Offset = "0x110AB08", VA = "0x110AB08")]
		public VoicePacket(string senderPlayerId, ChannelPriority priority, float ampMul, bool positional, ArraySegment<byte> encodedAudioFrame, uint sequence, [Optional][CanBeNull] List<RemoteChannel> channels)
		{
		}
	}
	[Token(Token = "0x2000108")]
	public struct TextMessage
	{
		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly string Sender;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ChannelType RecipientType;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Recipient;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x110A9CC", Offset = "0x110A9CC", VA = "0x110A9CC")]
		public TextMessage(string sender, ChannelType recipientType, string recipient, string message)
		{
		}
	}
	[Token(Token = "0x2000109")]
	public struct RoomEvent
	{
		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string PlayerName;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Room;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Joined;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ReadOnlyCollection<string> Rooms;

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x110A8C8", Offset = "0x110A8C8", VA = "0x110A8C8")]
		internal RoomEvent([NotNull] string name, [NotNull] string room, bool joined, [NotNull] ReadOnlyCollection<string> rooms)
		{
		}
	}
	[Token(Token = "0x200010A")]
	public enum NetworkMode
	{
		[Token(Token = "0x40003F1")]
		None,
		[Token(Token = "0x40003F2")]
		Host,
		[Token(Token = "0x40003F3")]
		Client,
		[Token(Token = "0x40003F4")]
		DedicatedServer
	}
	[Token(Token = "0x200010B")]
	public enum ConnectionStatus
	{
		[Token(Token = "0x40003F6")]
		Disconnected,
		[Token(Token = "0x40003F7")]
		Degraded,
		[Token(Token = "0x40003F8")]
		Connected
	}
	[Token(Token = "0x200010C")]
	public static class NetworkModeExtensions
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x17B66B0", Offset = "0x17B66B0", VA = "0x17B66B0")]
		public static bool IsServerEnabled(this NetworkMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x17B6768", Offset = "0x17B6768", VA = "0x17B6768")]
		public static bool IsClientEnabled(this NetworkMode mode)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200010D")]
	public interface ICommsNetwork
	{
		[Token(Token = "0x1700014A")]
		ConnectionStatus Status
		{
			[Token(Token = "0x600072B")]
			get;
		}

		[Token(Token = "0x1700014B")]
		NetworkMode Mode
		{
			[Token(Token = "0x600072F")]
			get;
		}

		[Token(Token = "0x14000029")]
		event Action<NetworkMode> ModeChanged;

		[Token(Token = "0x1400002A")]
		event Action<string, CodecSettings> PlayerJoined;

		[Token(Token = "0x1400002B")]
		event Action<string> PlayerLeft;

		[Token(Token = "0x1400002C")]
		event Action<VoicePacket> VoicePacketReceived;

		[Token(Token = "0x1400002D")]
		event Action<TextMessage> TextPacketReceived;

		[Token(Token = "0x1400002E")]
		event Action<string> PlayerStartedSpeaking;

		[Token(Token = "0x1400002F")]
		event Action<string> PlayerStoppedSpeaking;

		[Token(Token = "0x14000030")]
		event Action<RoomEvent> PlayerEnteredRoom;

		[Token(Token = "0x14000031")]
		event Action<RoomEvent> PlayerExitedRoom;

		[Token(Token = "0x600072C")]
		void Initialize(string playerName, Rooms rooms, PlayerChannels playerChannels, RoomChannels roomChannels, CodecSettings codecSettings);

		[Token(Token = "0x6000740")]
		void SendVoice(ArraySegment<byte> data);

		[Token(Token = "0x6000741")]
		void SendText(string data, ChannelType recipientType, string recipientId);
	}
	[Token(Token = "0x200010E")]
	public interface ICommsNetworkState
	{
		[Token(Token = "0x1700014C")]
		string PlayerName
		{
			[Token(Token = "0x6000742")]
			get;
		}

		[Token(Token = "0x1700014D")]
		Rooms Rooms
		{
			[Token(Token = "0x6000743")]
			get;
		}

		[Token(Token = "0x1700014E")]
		PlayerChannels PlayerChannels
		{
			[Token(Token = "0x6000744")]
			get;
		}

		[Token(Token = "0x1700014F")]
		RoomChannels RoomChannels
		{
			[Token(Token = "0x6000745")]
			get;
		}

		[Token(Token = "0x17000150")]
		CodecSettings CodecSettings
		{
			[Token(Token = "0x6000746")]
			get;
		}
	}
	[Token(Token = "0x200010F")]
	internal enum MessageTypes : byte
	{
		[Token(Token = "0x40003FA")]
		ClientState = 1,
		[Token(Token = "0x40003FB")]
		VoiceData,
		[Token(Token = "0x40003FC")]
		TextData,
		[Token(Token = "0x40003FD")]
		HandshakeRequest,
		[Token(Token = "0x40003FE")]
		HandshakeResponse,
		[Token(Token = "0x40003FF")]
		ErrorWrongSession,
		[Token(Token = "0x4000400")]
		ServerRelayReliable,
		[Token(Token = "0x4000401")]
		ServerRelayUnreliable,
		[Token(Token = "0x4000402")]
		DeltaChannelState,
		[Token(Token = "0x4000403")]
		RemoveClient,
		[Token(Token = "0x4000404")]
		HandshakeP2P
	}
	[Token(Token = "0x2000110")]
	internal struct PacketReader
	{
		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ArraySegment<byte> _array;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _count;

		[Token(Token = "0x17000151")]
		public ArraySegment<byte> Read
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0x110A5AC", Offset = "0x110A5AC", VA = "0x110A5AC")]
			get
			{
				return default(ArraySegment<byte>);
			}
		}

		[Token(Token = "0x17000152")]
		public ArraySegment<byte> Unread
		{
			[Token(Token = "0x6000748")]
			[Address(RVA = "0x110A5B4", Offset = "0x110A5B4", VA = "0x110A5B4")]
			get
			{
				return default(ArraySegment<byte>);
			}
		}

		[Token(Token = "0x17000153")]
		public ArraySegment<byte> All
		{
			[Token(Token = "0x6000749")]
			[Address(RVA = "0x110A5BC", Offset = "0x110A5BC", VA = "0x110A5BC")]
			get
			{
				return default(ArraySegment<byte>);
			}
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x110A5C8", Offset = "0x110A5C8", VA = "0x110A5C8")]
		public PacketReader(ArraySegment<byte> array)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x110A5D0", Offset = "0x110A5D0", VA = "0x110A5D0")]
		public PacketReader([NotNull] byte[] array)
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x110A5D8", Offset = "0x110A5D8", VA = "0x110A5D8")]
		private void Check(int count, string type)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x110A5E0", Offset = "0x110A5E0", VA = "0x110A5E0")]
		private byte FastReadByte()
		{
			return default(byte);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x110A5E8", Offset = "0x110A5E8", VA = "0x110A5E8")]
		public byte ReadByte()
		{
			return default(byte);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x110A5F0", Offset = "0x110A5F0", VA = "0x110A5F0")]
		public ushort ReadUInt16()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x110A5F8", Offset = "0x110A5F8", VA = "0x110A5F8")]
		public uint ReadUInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x110A600", Offset = "0x110A600", VA = "0x110A600")]
		public ArraySegment<byte> ReadByteSegment()
		{
			return default(ArraySegment<byte>);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x110A608", Offset = "0x110A608", VA = "0x110A608")]
		[CanBeNull]
		public string ReadString()
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x110A610", Offset = "0x110A610", VA = "0x110A610")]
		public CodecSettings ReadCodecSettings()
		{
			return default(CodecSettings);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x110A62C", Offset = "0x110A62C", VA = "0x110A62C")]
		public ClientInfo ReadClientInfo()
		{
			return default(ClientInfo);
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x110A634", Offset = "0x110A634", VA = "0x110A634")]
		public bool ReadPacketHeader(out MessageTypes messageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x110A63C", Offset = "0x110A63C", VA = "0x110A63C")]
		public void ReadHandshakeRequest([CanBeNull] out string name, out CodecSettings codecSettings)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x110A644", Offset = "0x110A644", VA = "0x110A644")]
		public void ReadHandshakeResponseHeader(out uint session, out ushort clientId)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x110A688", Offset = "0x110A688", VA = "0x110A688")]
		public void ReadHandshakeResponseBody([NotNull] List<ClientInfo> clients, [NotNull] Dictionary<string, List<ushort>> outputRoomsToPeerId)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x110A690", Offset = "0x110A690", VA = "0x110A690")]
		public void ReadhandshakeP2P(out ushort peerId)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x110A6B8", Offset = "0x110A6B8", VA = "0x110A6B8")]
		public ClientInfo ReadClientStateHeader()
		{
			return default(ClientInfo);
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x110A6C0", Offset = "0x110A6C0", VA = "0x110A6C0")]
		public void ReadClientStateRooms([NotNull][ItemNotNull] List<string> rooms)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x110A6C8", Offset = "0x110A6C8", VA = "0x110A6C8")]
		public void ReadRemoveClient(out ushort clientId)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x110A6F0", Offset = "0x110A6F0", VA = "0x110A6F0")]
		public void ReadVoicePacketHeader1(out ushort senderId)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x110A718", Offset = "0x110A718", VA = "0x110A718")]
		public void ReadVoicePacketHeader2(out VoicePacketOptions options, out ushort sequenceNumber, out ushort numChannels)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x110A720", Offset = "0x110A720", VA = "0x110A720")]
		public void ReadVoicePacketChannel(out ChannelBitField bitfield, out ushort recipient)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x110A764", Offset = "0x110A764", VA = "0x110A764")]
		public TextPacket ReadTextPacket()
		{
			return default(TextPacket);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x110A76C", Offset = "0x110A76C", VA = "0x110A76C")]
		public uint ReadErrorWrongSession()
		{
			return default(uint);
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x110A774", Offset = "0x110A774", VA = "0x110A774")]
		public void ReadRelay(List<ushort> destinations, out ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x110A77C", Offset = "0x110A77C", VA = "0x110A77C")]
		public void ReadDeltaChannelState(out bool joined, out ushort peer, [NotNull] out string name)
		{
		}
	}
	[Token(Token = "0x2000111")]
	internal struct PacketWriter
	{
		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000409")]
		internal const ushort Magic = 35783;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ArraySegment<byte> _array;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _count;

		[Token(Token = "0x17000154")]
		public ArraySegment<byte> Written
		{
			[Token(Token = "0x6000765")]
			[Address(RVA = "0x110A7C0", Offset = "0x110A7C0", VA = "0x110A7C0")]
			get
			{
				return default(ArraySegment<byte>);
			}
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x110A7C8", Offset = "0x110A7C8", VA = "0x110A7C8")]
		public PacketWriter([NotNull] byte[] array)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x110A7D0", Offset = "0x110A7D0", VA = "0x110A7D0")]
		public PacketWriter(ArraySegment<byte> array)
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x110A7D8", Offset = "0x110A7D8", VA = "0x110A7D8")]
		private void Check(int count, string type)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x110A7E0", Offset = "0x110A7E0", VA = "0x110A7E0")]
		public PacketWriter FastWriteByte(byte b)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x110A7E8", Offset = "0x110A7E8", VA = "0x110A7E8")]
		public PacketWriter Write(byte b)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x110A7F0", Offset = "0x110A7F0", VA = "0x110A7F0")]
		public PacketWriter Write(ushort u)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x110A7F8", Offset = "0x110A7F8", VA = "0x110A7F8")]
		public PacketWriter Write(uint u)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x110A800", Offset = "0x110A800", VA = "0x110A800")]
		public PacketWriter Write([CanBeNull] string s)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x110A808", Offset = "0x110A808", VA = "0x110A808")]
		public PacketWriter Write(ArraySegment<byte> data)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x110A810", Offset = "0x110A810", VA = "0x110A810")]
		public PacketWriter Write(CodecSettings codecSettings)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x110A81C", Offset = "0x110A81C", VA = "0x110A81C")]
		public PacketWriter Write(string playerName, ushort playerId, CodecSettings codecSettings)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x110A828", Offset = "0x110A828", VA = "0x110A828")]
		internal PacketWriter WriteMagic()
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x110A834", Offset = "0x110A834", VA = "0x110A834")]
		public PacketWriter WriteHandshakeRequest([NotNull] string name, CodecSettings codecSettings)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000773")]
		public PacketWriter WriteHandshakeResponse<TPeer>(uint session, ushort clientId, [NotNull] List<ClientInfo<TPeer>> clients, [NotNull] Dictionary<string, List<ClientInfo<TPeer>>> peersByRoom)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x110A840", Offset = "0x110A840", VA = "0x110A840")]
		public PacketWriter WriteHandshakeP2P(uint session, ushort peerId)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x110A848", Offset = "0x110A848", VA = "0x110A848")]
		public PacketWriter WriteClientState(uint session, [NotNull] string name, ushort clientId, CodecSettings codecSettings, [NotNull] Rooms rooms)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x110A854", Offset = "0x110A854", VA = "0x110A854")]
		public PacketWriter WriteClientState(uint session, [NotNull] string name, ushort clientId, CodecSettings codecSettings, [NotNull] ReadOnlyCollection<string> rooms)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x110A860", Offset = "0x110A860", VA = "0x110A860")]
		public PacketWriter WriteRemoveClient(uint session, ushort clientId)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x110A868", Offset = "0x110A868", VA = "0x110A868")]
		internal PacketWriter WriteVoiceData(uint session, ushort senderId, ushort sequenceNumber, byte channelSession, [NotNull] IList<OpenChannel> channels, ArraySegment<byte> encodedAudio)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x110A870", Offset = "0x110A870", VA = "0x110A870")]
		internal PacketWriter WriteTextPacket(uint session, ushort senderId, ChannelType recipient, ushort target, string data)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x110A878", Offset = "0x110A878", VA = "0x110A878")]
		public PacketWriter WriteErrorWrongSession(uint session)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x600077B")]
		public PacketWriter WriteRelay<TPeer>(uint session, [NotNull] List<ClientInfo<TPeer>> destinations, ArraySegment<byte> segment, bool reliable)
		{
			return default(PacketWriter);
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x110A880", Offset = "0x110A880", VA = "0x110A880")]
		public PacketWriter WriteDeltaChannelState(uint session, bool joined, ushort peer, [NotNull] string name)
		{
			return default(PacketWriter);
		}
	}
	[Token(Token = "0x2000112")]
	internal class RoomClientsCollection<T>
	{
		[Token(Token = "0x200045D")]
		private class ClientIdComparer : IComparer<ClientInfo<T>>
		{
			[Token(Token = "0x6001D93")]
			public int Compare(ClientInfo<T> x, ClientInfo<T> y)
			{
				return default(int);
			}

			[Token(Token = "0x6001D94")]
			public ClientIdComparer()
			{
			}
		}

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IComparer<ClientInfo<T>> ClientComparer;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<string, List<ClientInfo<T>>> _clientByRoomName;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<ushort, List<ClientInfo<T>>> _clientByRoomId;

		[Token(Token = "0x17000155")]
		public Dictionary<string, List<ClientInfo<T>>> ByName
		{
			[Token(Token = "0x600077E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600077F")]
		public void Add([NotNull] string room, [NotNull] ClientInfo<T> client)
		{
		}

		[Token(Token = "0x6000780")]
		public bool Remove([NotNull] string room, [NotNull] ClientInfo<T> client)
		{
			return default(bool);
		}

		[Token(Token = "0x6000781")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000782")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC7E94", Offset = "0xFC7E94")]
		public bool TryGetClientsInRoom([NotNull] string room, out List<ClientInfo<T>> clients)
		{
			return default(bool);
		}

		[Token(Token = "0x6000783")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xFC7ECC", Offset = "0xFC7ECC")]
		public bool TryGetClientsInRoom(ushort roomId, out List<ClientInfo<T>> clients)
		{
			return default(bool);
		}

		[Token(Token = "0x6000784")]
		public int ClientCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000785")]
		public RoomClientsCollection()
		{
		}
	}
	[Token(Token = "0x2000113")]
	internal struct TextPacket
	{
		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ushort Sender;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly ChannelType RecipientType;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ushort Recipient;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[CanBeNull]
		public readonly string Text;

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x110AA84", Offset = "0x110AA84", VA = "0x110AA84")]
		public TextPacket(ushort sender, ChannelType recipientType, ushort recipient, [CanBeNull] string text)
		{
		}
	}
	[Token(Token = "0x2000114")]
	internal class TrafficCounter
	{
		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAFD4", Offset = "0xFBAFD4")]
		private uint <Packets>k__BackingField;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAFE4", Offset = "0xFBAFE4")]
		private uint <Bytes>k__BackingField;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBAFF4", Offset = "0xFBAFF4")]
		private uint <BytesPerSecond>k__BackingField;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint _runningTotal;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Queue<KeyValuePair<DateTime, uint>> _updated;

		[Token(Token = "0x17000156")]
		public uint Packets
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0x17B8CA0", Offset = "0x17B8CA0", VA = "0x17B8CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7F04", Offset = "0xFC7F04")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000789")]
			[Address(RVA = "0x17B8CA8", Offset = "0x17B8CA8", VA = "0x17B8CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7F14", Offset = "0xFC7F14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public uint Bytes
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0x17B8CB0", Offset = "0x17B8CB0", VA = "0x17B8CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7F24", Offset = "0xFC7F24")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x17B8CB8", Offset = "0x17B8CB8", VA = "0x17B8CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7F34", Offset = "0xFC7F34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public uint BytesPerSecond
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0x17B8CC0", Offset = "0x17B8CC0", VA = "0x17B8CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7F44", Offset = "0xFC7F44")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x17B8CC8", Offset = "0x17B8CC8", VA = "0x17B8CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7F54", Offset = "0xFC7F54")]
			private set
			{
			}
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x17B8CD0", Offset = "0x17B8CD0", VA = "0x17B8CD0")]
		public void Update(int bytes, [Optional] DateTime? now)
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x17B8ED8", Offset = "0x17B8ED8", VA = "0x17B8ED8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x17B8FC4", Offset = "0x17B8FC4", VA = "0x17B8FC4")]
		public static void Combine(out uint packets, out uint bytes, out uint totalBytesPerSecond, [NotNull][ItemNotNull] params TrafficCounter[] counters)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x17B8EE8", Offset = "0x17B8EE8", VA = "0x17B8EE8")]
		[NotNull]
		public static string Format(ulong packets, ulong bytes, ulong bytesPerSecond)
		{
			return null;
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x17B905C", Offset = "0x17B905C", VA = "0x17B905C")]
		[NotNull]
		private static string FormatByteString(decimal bytes)
		{
			return null;
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x17B92B0", Offset = "0x17B92B0", VA = "0x17B92B0")]
		public TrafficCounter()
		{
		}
	}
}
namespace Dissonance.Networking.Server
{
	[Token(Token = "0x2000115")]
	internal interface IServer<TPeer>
	{
		[Token(Token = "0x17000159")]
		uint SessionId
		{
			[Token(Token = "0x6000794")]
			get;
		}

		[Token(Token = "0x6000795")]
		void SendUnreliable([NotNull] List<TPeer> connections, ArraySegment<byte> packet);

		[Token(Token = "0x6000796")]
		void SendReliable(TPeer connection, ArraySegment<byte> packet);

		[Token(Token = "0x6000797")]
		void SendReliable([NotNull] List<TPeer> connections, ArraySegment<byte> packet);

		[Token(Token = "0x6000798")]
		void AddClient([NotNull] ClientInfo<TPeer> client);
	}
	[Token(Token = "0x2000116")]
	internal class BroadcastingClientCollection<TPeer> : BaseClientCollection<TPeer>
	{
		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IServer<TPeer> _server;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly byte[] _tmpSendBuffer;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<TPeer> _tmpConnectionBuffer;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<ClientInfo<TPeer>> _tmpClientBuffer;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<ClientInfo<TPeer>> _tmpClientBufferHandshake;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<string, List<ClientInfo<TPeer>>> _tmpClientByRoomsBufferHandshake;

		[Token(Token = "0x6000799")]
		public BroadcastingClientCollection(IServer<TPeer> server)
		{
		}

		[Token(Token = "0x600079A")]
		protected override void OnRemovedClient(ClientInfo<TPeer> client)
		{
		}

		[Token(Token = "0x600079B")]
		protected override void OnAddedClient(ClientInfo<TPeer> client)
		{
		}

		[Token(Token = "0x600079C")]
		public void ProcessHandshakeRequest(TPeer source, ref PacketReader reader)
		{
		}

		[Token(Token = "0x600079D")]
		private void SendFakeClientState(TPeer destination, [NotNull] ClientInfo<TPeer> clientInfo)
		{
		}

		[Token(Token = "0x600079E")]
		public override void ProcessClientState(TPeer source, ref PacketReader reader)
		{
		}

		[Token(Token = "0x600079F")]
		public override void ProcessDeltaChannelState(ref PacketReader reader)
		{
		}

		[Token(Token = "0x60007A0")]
		private void Broadcast(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60007A1")]
		public void RemoveClient(TPeer connection)
		{
		}
	}
	[Token(Token = "0x2000117")]
	internal class ServerRelay<TPeer>
	{
		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IServer<TPeer> _server;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly BaseClientCollection<TPeer> _peers;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<TPeer> _tmpPeerBuffer;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<ushort> _tmpIdBuffer;

		[Token(Token = "0x60007A2")]
		public ServerRelay(IServer<TPeer> server, BaseClientCollection<TPeer> peers)
		{
		}

		[Token(Token = "0x60007A3")]
		public void ProcessPacketRelay(ref PacketReader reader, bool reliable)
		{
		}
	}
	[Token(Token = "0x2000118")]
	public enum ServerState
	{
		[Token(Token = "0x4000424")]
		Ok,
		[Token(Token = "0x4000425")]
		Error
	}
}
namespace Dissonance.Networking.Client
{
	[Token(Token = "0x2000119")]
	public enum ClientStatus
	{
		[Token(Token = "0x4000427")]
		Ok,
		[Token(Token = "0x4000428")]
		Error
	}
	[Token(Token = "0x200011A")]
	internal enum ConnectionState
	{
		[Token(Token = "0x400042A")]
		None,
		[Token(Token = "0x400042B")]
		Negotiating,
		[Token(Token = "0x400042C")]
		Connected,
		[Token(Token = "0x400042D")]
		Disconnected
	}
	[Token(Token = "0x200011B")]
	internal class ConnectionNegotiator<TPeer> : ISession where TPeer : struct
	{
		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan HandshakeRequestInterval;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISendQueue<TPeer> _sender;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string _playerName;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly CodecSettings _codecSettings;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DateTime _lastHandshakeRequest;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _running;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _connectionStateValue;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB004", Offset = "0xFBB004")]
		private uint <SessionId>k__BackingField;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB014", Offset = "0xFBB014")]
		private ushort? <LocalId>k__BackingField;

		[Token(Token = "0x1700015A")]
		public ConnectionState State
		{
			[Token(Token = "0x60007A5")]
			get
			{
				return default(ConnectionState);
			}
		}

		[Token(Token = "0x1700015B")]
		public uint SessionId
		{
			[Token(Token = "0x60007A6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7F84", Offset = "0xFC7F84")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60007A7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7F94", Offset = "0xFC7F94")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public ushort? LocalId
		{
			[Token(Token = "0x60007A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7FA4", Offset = "0xFC7FA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007A9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7FB4", Offset = "0xFC7FB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public string LocalName
		{
			[Token(Token = "0x60007AA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007AB")]
		public ConnectionNegotiator([NotNull] ISendQueue<TPeer> sender, string playerName, [NotNull] CodecSettings codecSettings)
		{
		}

		[Token(Token = "0x60007AC")]
		public void ReceiveHandshakeResponseHeader(ref PacketReader reader)
		{
		}

		[Token(Token = "0x60007AD")]
		public void Start()
		{
		}

		[Token(Token = "0x60007AE")]
		public void Stop()
		{
		}

		[Token(Token = "0x60007AF")]
		public void Update(DateTime utcNow)
		{
		}

		[Token(Token = "0x60007B0")]
		private void SendHandshake(DateTime utcNow)
		{
		}
	}
	[Token(Token = "0x200011C")]
	internal interface ISession
	{
		[Token(Token = "0x1700015E")]
		uint SessionId
		{
			[Token(Token = "0x60007B2")]
			get;
		}

		[Token(Token = "0x1700015F")]
		ushort? LocalId
		{
			[Token(Token = "0x60007B3")]
			get;
		}

		[Token(Token = "0x17000160")]
		[NotNull]
		string LocalName
		{
			[Token(Token = "0x60007B4")]
			get;
		}
	}
	[Token(Token = "0x200011D")]
	internal class EventQueue
	{
		[Token(Token = "0x200045E")]
		private enum EventType
		{
			[Token(Token = "0x40012DC")]
			PlayerJoined,
			[Token(Token = "0x40012DD")]
			PlayerLeft,
			[Token(Token = "0x40012DE")]
			PlayerEnteredRoom,
			[Token(Token = "0x40012DF")]
			PlayerExitedRoom,
			[Token(Token = "0x40012E0")]
			PlayerStartedSpeaking,
			[Token(Token = "0x40012E1")]
			PlayerStoppedSpeaking,
			[Token(Token = "0x40012E2")]
			VoiceData,
			[Token(Token = "0x40012E3")]
			TextMessage
		}

		[Token(Token = "0x200045F")]
		private struct NetworkEvent
		{
			[Token(Token = "0x40012E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly EventType Type;

			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string _playerName;

			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CodecSettings _codecSettings;

			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string _room;

			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ReadOnlyCollection<string> _allRooms;

			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly VoicePacket _voicePacket;

			[Token(Token = "0x40012EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private readonly TextMessage _textMessage;

			[Token(Token = "0x170004E2")]
			public string PlayerName
			{
				[Token(Token = "0x6001D95")]
				[Address(RVA = "0x110A108", Offset = "0x110A108", VA = "0x110A108")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001D96")]
				[Address(RVA = "0x110A110", Offset = "0x110A110", VA = "0x110A110")]
				set
				{
				}
			}

			[Token(Token = "0x170004E3")]
			public CodecSettings CodecSettings
			{
				[Token(Token = "0x6001D97")]
				[Address(RVA = "0x110A118", Offset = "0x110A118", VA = "0x110A118")]
				get
				{
					return default(CodecSettings);
				}
				[Token(Token = "0x6001D98")]
				[Address(RVA = "0x110A128", Offset = "0x110A128", VA = "0x110A128")]
				set
				{
				}
			}

			[Token(Token = "0x170004E4")]
			public string Room
			{
				[Token(Token = "0x6001D99")]
				[Address(RVA = "0x110A134", Offset = "0x110A134", VA = "0x110A134")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001D9A")]
				[Address(RVA = "0x110A13C", Offset = "0x110A13C", VA = "0x110A13C")]
				set
				{
				}
			}

			[Token(Token = "0x170004E5")]
			[NotNull]
			public ReadOnlyCollection<string> AllRooms
			{
				[Token(Token = "0x6001D9B")]
				[Address(RVA = "0x110A144", Offset = "0x110A144", VA = "0x110A144")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001D9C")]
				[Address(RVA = "0x110A14C", Offset = "0x110A14C", VA = "0x110A14C")]
				set
				{
				}
			}

			[Token(Token = "0x170004E6")]
			public VoicePacket VoicePacket
			{
				[Token(Token = "0x6001D9D")]
				[Address(RVA = "0x110A154", Offset = "0x110A154", VA = "0x110A154")]
				get
				{
					return default(VoicePacket);
				}
			}

			[Token(Token = "0x170004E7")]
			public TextMessage TextMessage
			{
				[Token(Token = "0x6001D9E")]
				[Address(RVA = "0x110A170", Offset = "0x110A170", VA = "0x110A170")]
				get
				{
					return default(TextMessage);
				}
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x110A180", Offset = "0x110A180", VA = "0x110A180")]
			public NetworkEvent(EventType type)
			{
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x110A188", Offset = "0x110A188", VA = "0x110A188")]
			public NetworkEvent(VoicePacket voice)
			{
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x110A1F0", Offset = "0x110A1F0", VA = "0x110A1F0")]
			public NetworkEvent(TextMessage text)
			{
			}

			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0x110A23C", Offset = "0x110A23C", VA = "0x110A23C")]
			private void Check(EventType type)
			{
			}

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x110A240", Offset = "0x110A240", VA = "0x110A240")]
			private void Check(EventType typeA, EventType typeB)
			{
			}
		}

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReadonlyLockedValue<List<NetworkEvent>> _queuedEvents;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IRecycler<byte[]> _byteArrayPool;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NotNull]
		private readonly IRecycler<List<RemoteChannel>> _channelsListPool;

		[Token(Token = "0x4000445")]
		private const int MinWarnPacketCountThreshold = 12;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly TimeSpan MinWarnDispatchTimeThreshold;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _voicePacketWarnThreshold;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _pendingVoicePackets;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DateTime _previousFlush;

		[Token(Token = "0x14000032")]
		public event Action<string, CodecSettings> PlayerJoined
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0x17B18BC", Offset = "0x17B18BC", VA = "0x17B18BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7FC4", Offset = "0xFC7FC4")]
			add
			{
			}
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0x17B1960", Offset = "0x17B1960", VA = "0x17B1960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7FD4", Offset = "0xFC7FD4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event Action<string> PlayerLeft
		{
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0x17B1A04", Offset = "0x17B1A04", VA = "0x17B1A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7FE4", Offset = "0xFC7FE4")]
			add
			{
			}
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0x17B1AA8", Offset = "0x17B1AA8", VA = "0x17B1AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC7FF4", Offset = "0xFC7FF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<RoomEvent> PlayerEnteredRoom
		{
			[Token(Token = "0x60007B9")]
			[Address(RVA = "0x17B1B4C", Offset = "0x17B1B4C", VA = "0x17B1B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8004", Offset = "0xFC8004")]
			add
			{
			}
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0x17B1BF0", Offset = "0x17B1BF0", VA = "0x17B1BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8014", Offset = "0xFC8014")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event Action<RoomEvent> PlayerExitedRoom
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0x17B1C94", Offset = "0x17B1C94", VA = "0x17B1C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8024", Offset = "0xFC8024")]
			add
			{
			}
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x17B1D38", Offset = "0x17B1D38", VA = "0x17B1D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8034", Offset = "0xFC8034")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action<VoicePacket> VoicePacketReceived
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x17B1DDC", Offset = "0x17B1DDC", VA = "0x17B1DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8044", Offset = "0xFC8044")]
			add
			{
			}
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x17B1E80", Offset = "0x17B1E80", VA = "0x17B1E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8054", Offset = "0xFC8054")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event Action<TextMessage> TextMessageReceived
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0x17B1F24", Offset = "0x17B1F24", VA = "0x17B1F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8064", Offset = "0xFC8064")]
			add
			{
			}
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0x17B1FC8", Offset = "0x17B1FC8", VA = "0x17B1FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8074", Offset = "0xFC8074")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action<string> PlayerStartedSpeaking
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x17B206C", Offset = "0x17B206C", VA = "0x17B206C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8084", Offset = "0xFC8084")]
			add
			{
			}
			[Token(Token = "0x60007C2")]
			[Address(RVA = "0x17B2110", Offset = "0x17B2110", VA = "0x17B2110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8094", Offset = "0xFC8094")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action<string> PlayerStoppedSpeaking
		{
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x17B21B4", Offset = "0x17B21B4", VA = "0x17B21B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC80A4", Offset = "0xFC80A4")]
			add
			{
			}
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x17B2258", Offset = "0x17B2258", VA = "0x17B2258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC80B4", Offset = "0xFC80B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		internal event Action<string> OnEnqueuePlayerLeft
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0x17B22FC", Offset = "0x17B22FC", VA = "0x17B22FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC80C4", Offset = "0xFC80C4")]
			add
			{
			}
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0x17B23A0", Offset = "0x17B23A0", VA = "0x17B23A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC80D4", Offset = "0xFC80D4")]
			remove
			{
			}
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x17B2444", Offset = "0x17B2444", VA = "0x17B2444")]
		public EventQueue([NotNull] IRecycler<byte[]> byteArrayPool, [NotNull] IRecycler<List<RemoteChannel>> channelsListPool)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x17B25BC", Offset = "0x17B25BC", VA = "0x17B25BC")]
		public bool DispatchEvents([Optional] DateTime? utcNow)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x17B2D74", Offset = "0x17B2D74", VA = "0x17B2D74")]
		private void PreDispatchLog(DateTime utcNow)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x17B2F9C", Offset = "0x17B2F9C", VA = "0x17B2F9C")]
		private static RoomEvent CreateRoomEvent(NetworkEvent @event, bool joined)
		{
			return default(RoomEvent);
		}

		[Token(Token = "0x60007CB")]
		private static bool InvokeEvent<T>(T arg, [CanBeNull] Action<T> handler)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CC")]
		private static bool InvokeEvent<T1, T2>(T1 arg1, T2 arg2, [CanBeNull] Action<T1, T2> handler)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x17B3034", Offset = "0x17B3034", VA = "0x17B3034")]
		public void EnqueuePlayerJoined(string playerName, CodecSettings codecSettings)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x17B3298", Offset = "0x17B3298", VA = "0x17B3298")]
		public void EnqueuePlayerLeft(string playerName)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x17B3490", Offset = "0x17B3490", VA = "0x17B3490")]
		public void EnqueuePlayerEnteredRoom([NotNull] string playerName, [NotNull] string room, [NotNull][ItemNotNull] ReadOnlyCollection<string> allRooms)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x17B36B8", Offset = "0x17B36B8", VA = "0x17B36B8")]
		public void EnqueuePlayerExitedRoom([NotNull] string playerName, [NotNull] string room, [NotNull][ItemNotNull] ReadOnlyCollection<string> allRooms)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x17B38D0", Offset = "0x17B38D0", VA = "0x17B38D0")]
		public void EnqueueStartedSpeaking(string playerName)
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x17B3AAC", Offset = "0x17B3AAC", VA = "0x17B3AAC")]
		public void EnqueueStoppedSpeaking(string playerName)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x17B3C88", Offset = "0x17B3C88", VA = "0x17B3C88")]
		public void EnqueueVoiceData(VoicePacket data)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x17B3EA4", Offset = "0x17B3EA4", VA = "0x17B3EA4")]
		public void EnqueueTextData(TextMessage data)
		{
		}
	}
	[Token(Token = "0x200011E")]
	internal interface IClient<TPeer> where TPeer : struct
	{
		[Token(Token = "0x60007D6")]
		void SendReliable(ArraySegment<byte> arraySegment);

		[Token(Token = "0x60007D7")]
		void SendUnreliable(ArraySegment<byte> arraySegment);

		[Token(Token = "0x60007D8")]
		void SendReliableP2P(List<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet);

		[Token(Token = "0x60007D9")]
		void SendUnreliableP2P(List<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet);
	}
	[Token(Token = "0x200011F")]
	internal struct OpenChannel
	{
		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ChannelProperties _config;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly ChannelType _type;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly ushort _recipient;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _name;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly bool _isClosing;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private readonly ushort _sessionId;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly bool _sent;

		[Token(Token = "0x17000161")]
		[NotNull]
		public ChannelProperties Config
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x110A280", Offset = "0x110A280", VA = "0x110A280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public ushort Bitfield
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x110A288", Offset = "0x110A288", VA = "0x110A288")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000163")]
		public ushort Recipient
		{
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x110A290", Offset = "0x110A290", VA = "0x110A290")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000164")]
		public ChannelType Type
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x110A298", Offset = "0x110A298", VA = "0x110A298")]
			get
			{
				return default(ChannelType);
			}
		}

		[Token(Token = "0x17000165")]
		public bool IsClosing
		{
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x110A2A0", Offset = "0x110A2A0", VA = "0x110A2A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000166")]
		public bool IsPositional
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x110A2A8", Offset = "0x110A2A8", VA = "0x110A2A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000167")]
		public ChannelPriority Priority
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x110A2C4", Offset = "0x110A2C4", VA = "0x110A2C4")]
			get
			{
				return default(ChannelPriority);
			}
		}

		[Token(Token = "0x17000168")]
		public float AmplitudeMultiplier
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x110A2E0", Offset = "0x110A2E0", VA = "0x110A2E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000169")]
		public ushort SessionId
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x110A2FC", Offset = "0x110A2FC", VA = "0x110A2FC")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x1700016A")]
		[NotNull]
		public string Name
		{
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x110A304", Offset = "0x110A304", VA = "0x110A304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x110A30C", Offset = "0x110A30C", VA = "0x110A30C")]
		public OpenChannel(ChannelType type, ushort sessionId, ChannelProperties config, bool closing, ushort recipient, string name, bool sent = false)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x110A380", Offset = "0x110A380", VA = "0x110A380")]
		[Pure]
		public OpenChannel AsClosing()
		{
			return default(OpenChannel);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x110A388", Offset = "0x110A388", VA = "0x110A388")]
		[Pure]
		public OpenChannel AsOpen()
		{
			return default(OpenChannel);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x110A390", Offset = "0x110A390", VA = "0x110A390")]
		[Pure]
		public OpenChannel AsSent()
		{
			return default(OpenChannel);
		}
	}
	[Token(Token = "0x2000120")]
	internal class PacketDelaySimulator
	{
		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly System.Random _rnd;

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x17B469C", Offset = "0x17B469C", VA = "0x17B469C")]
		private static bool IsOrderedReliable(MessageTypes header)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x17B46AC", Offset = "0x17B46AC", VA = "0x17B46AC")]
		public bool ShouldLose(ArraySegment<byte> packet)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x17B46B4", Offset = "0x17B46B4", VA = "0x17B46B4")]
		public PacketDelaySimulator()
		{
		}
	}
	[Token(Token = "0x2000121")]
	internal class PeerVoiceReceiver
	{
		[Token(Token = "0x2000460")]
		private struct ChannelsMetadata
		{
			[Token(Token = "0x40012EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly bool IsPositional;

			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly float AmplitudeMultiplier;

			[Token(Token = "0x40012ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly ChannelPriority Priority;

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x110A3DC", Offset = "0x110A3DC", VA = "0x110A3DC")]
			public ChannelsMetadata(bool isPositional, float amplitudeMultiplier, ChannelPriority priority)
			{
			}

			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x110A3F0", Offset = "0x110A3F0", VA = "0x110A3F0")]
			public ChannelsMetadata CombineWith(ChannelsMetadata other)
			{
				return default(ChannelsMetadata);
			}
		}

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _name;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly EventQueue _events;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Rooms _localListeningRooms;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ConcurrentPool<byte[]> _byteArrPool;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ConcurrentPool<List<RemoteChannel>> _channelListPool;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ushort _localId;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly string _localName;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DateTime _lastReceiptTime;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ushort _remoteSequenceNumber;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private uint _localSequenceNumber;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB0C4", Offset = "0xFBB0C4")]
		private bool <Open>k__BackingField;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentChannelSession;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Dictionary<int, int> _expectedPerChannelSessions;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly List<int> _tmpCompositeIdBuffer;

		[Token(Token = "0x1700016B")]
		public string Name
		{
			[Token(Token = "0x60007EC")]
			[Address(RVA = "0x17B4728", Offset = "0x17B4728", VA = "0x17B4728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public bool Open
		{
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0x17B4730", Offset = "0x17B4730", VA = "0x17B4730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8114", Offset = "0xFC8114")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007EE")]
			[Address(RVA = "0x17B4738", Offset = "0x17B4738", VA = "0x17B4738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8124", Offset = "0xFC8124")]
			private set
			{
			}
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x17B4744", Offset = "0x17B4744", VA = "0x17B4744")]
		public PeerVoiceReceiver(string remoteName, ushort localId, string localName, EventQueue events, Rooms listeningRooms, ConcurrentPool<byte[]> byteArrPool, ConcurrentPool<List<RemoteChannel>> channelListPool)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x17B4894", Offset = "0x17B4894", VA = "0x17B4894")]
		public void CheckTimeout(DateTime utcNow, TimeSpan timeout)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x17B4970", Offset = "0x17B4970", VA = "0x17B4970")]
		public void StopSpeaking()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x17B4A14", Offset = "0x17B4A14", VA = "0x17B4A14")]
		private void StartSpeaking(ushort startSequenceNumber, int channelSession, DateTime utcNow)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x17B4AF0", Offset = "0x17B4AF0", VA = "0x17B4AF0")]
		public void ReceivePacket(ref PacketReader reader, DateTime utcNow)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x17B4D90", Offset = "0x17B4D90", VA = "0x17B4D90")]
		private void ReadChannels(ref PacketReader reader, ushort numChannels, out bool allClosing, out bool forceReset, out ChannelsMetadata channelsMetadata, [NotNull] ICollection<RemoteChannel> channelsOut)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x17B5580", Offset = "0x17B5580", VA = "0x17B5580")]
		private bool HasChannelSessionChanged(int compositeId, int expectedValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x17B5354", Offset = "0x17B5354", VA = "0x17B5354")]
		private RemoteChannel? IsChannelToLocalPlayer(ChannelBitField channel, ushort recipient)
		{
			return null;
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x17B5640", Offset = "0x17B5640", VA = "0x17B5640")]
		private void RemoveChannelsExcept([NotNull] List<int> keys)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x17B50CC", Offset = "0x17B50CC", VA = "0x17B50CC")]
		private bool UpdateSpeakerState(bool allClosing, bool forceReset, int channelSession, ushort sequenceNumber, DateTime utcNow)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x17B5830", Offset = "0x17B5830", VA = "0x17B5830")]
		private bool UpdateSequenceNumber(ushort sequenceNumber, DateTime utcNow)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x17B4D60", Offset = "0x17B4D60", VA = "0x17B4D60")]
		private static bool IsPacketFromPreviousSession(int currentChannelSession, int packetChannelSession)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000122")]
	internal class SendQueue<TPeer> : ISendQueue<TPeer> where TPeer : struct
	{
		[Serializable]
		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9544", Offset = "0xFB9544")]
		private sealed class <>c
		{
			[Token(Token = "0x40012EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<List<ClientInfo<TPeer?>>> <>9__10_0;

			[Token(Token = "0x6001DA7")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DA8")]
			internal List<ClientInfo<TPeer?>> <.ctor>b__10_0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IClient<TPeer> _client;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<ArraySegment<byte>> _serverReliableQueue;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<ArraySegment<byte>> _serverUnreliableQueue;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<KeyValuePair<List<ClientInfo<TPeer?>>, ArraySegment<byte>>> _reliableP2PQueue;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<KeyValuePair<List<ClientInfo<TPeer?>>, ArraySegment<byte>>> _unreliableP2PQueue;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ConcurrentPool<byte[]> _sendBufferPool;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Pool<List<ClientInfo<TPeer?>>> _listPool;

		[Token(Token = "0x1700016D")]
		public ConcurrentPool<byte[]> SendBufferPool
		{
			[Token(Token = "0x60007FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FD")]
		public SendQueue([NotNull] IClient<TPeer> client, [NotNull] ConcurrentPool<byte[]> bytePool)
		{
		}

		[Token(Token = "0x60007FE")]
		public void Update()
		{
		}

		[Token(Token = "0x60007FF")]
		private void Recycle([NotNull] byte[] array)
		{
		}

		[Token(Token = "0x6000800")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000801")]
		public void EnqueueReliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000802")]
		public void EnqeueUnreliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000803")]
		public void EnqueueReliableP2P(ushort localId, IList<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000804")]
		public void EnqueueUnreliableP2P(ushort localId, IList<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000805")]
		private void EnqueueP2P(ushort localId, [NotNull] ICollection<ClientInfo<TPeer?>> destinations, [NotNull] ICollection<KeyValuePair<List<ClientInfo<TPeer?>>, ArraySegment<byte>>> queue, ArraySegment<byte> packet)
		{
		}
	}
	[Token(Token = "0x2000123")]
	internal interface ISendQueue<TPeer> where TPeer : struct
	{
		[Token(Token = "0x1700016E")]
		[NotNull]
		ConcurrentPool<byte[]> SendBufferPool
		{
			[Token(Token = "0x6000807")]
			get;
		}

		[Token(Token = "0x6000808")]
		void EnqueueReliable(ArraySegment<byte> packet);

		[Token(Token = "0x6000809")]
		void EnqeueUnreliable(ArraySegment<byte> packet);

		[Token(Token = "0x600080A")]
		void EnqueueReliableP2P(ushort localId, [NotNull] IList<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet);

		[Token(Token = "0x600080B")]
		void EnqueueUnreliableP2P(ushort localId, [NotNull] IList<ClientInfo<TPeer?>> destinations, ArraySegment<byte> packet);
	}
	[Token(Token = "0x2000124")]
	internal class SlaveClientCollection<TPeer> : BaseClientCollection<TPeer?> where TPeer : struct
	{
		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISendQueue<TPeer> _sender;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISession _session;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly EventQueue _events;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Rooms _localRooms;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string _playerName;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly CodecSettings _codecSettings;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<KeyValuePair<ushort, TPeer>> _pendingIntroductions;

		[Token(Token = "0x1400003B")]
		public event Action<ClientInfo<TPeer?>> OnClientJoined
		{
			[Token(Token = "0x600080C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8134", Offset = "0xFC8134")]
			add
			{
			}
			[Token(Token = "0x600080D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8144", Offset = "0xFC8144")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action<ClientInfo<TPeer?>> OnClientIntroducedP2P
		{
			[Token(Token = "0x600080E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8154", Offset = "0xFC8154")]
			add
			{
			}
			[Token(Token = "0x600080F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8164", Offset = "0xFC8164")]
			remove
			{
			}
		}

		[Token(Token = "0x6000810")]
		public SlaveClientCollection([NotNull] ISendQueue<TPeer> sender, [NotNull] ISession session, [NotNull] EventQueue events, [NotNull] Rooms localRooms, [NotNull] string playerName, CodecSettings codecSettings)
		{
		}

		[Token(Token = "0x6000811")]
		protected override void OnAddedClient(ClientInfo<TPeer?> client)
		{
		}

		[Token(Token = "0x6000812")]
		protected override void OnRemovedClient(ClientInfo<TPeer?> client)
		{
		}

		[Token(Token = "0x6000813")]
		protected override void OnClientEnteredRoom(ClientInfo<TPeer?> client, string room)
		{
		}

		[Token(Token = "0x6000814")]
		protected override void OnClientExitedRoom(ClientInfo<TPeer?> client, string room)
		{
		}

		[Token(Token = "0x6000815")]
		public void ProcessRemoveClient(ref PacketReader reader)
		{
		}

		[Token(Token = "0x6000816")]
		public void ReceiveHandshakeResponseBody(ref PacketReader reader)
		{
		}

		[Token(Token = "0x6000817")]
		private void SendClientState()
		{
		}

		[Token(Token = "0x6000818")]
		private void SendLeaveRoom(string room)
		{
		}

		[Token(Token = "0x6000819")]
		private void SendJoinRoom(string room)
		{
		}

		[Token(Token = "0x600081A")]
		public override void Stop()
		{
		}

		[Token(Token = "0x600081B")]
		public void IntroduceP2P(ushort id, TPeer connection)
		{
		}

		[Token(Token = "0x600081C")]
		private bool TryIntroduceP2P(ushort id, TPeer connection)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000125")]
	internal class TextReceiver<TPeer> where TPeer : struct
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly EventQueue _events;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Rooms _rooms;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IClientCollection<TPeer?> _peers;

		[Token(Token = "0x600081D")]
		public TextReceiver([NotNull] EventQueue events, [NotNull] Rooms rooms, [NotNull] IClientCollection<TPeer?> peers)
		{
		}

		[Token(Token = "0x600081E")]
		public void ProcessTextMessage(ref PacketReader reader)
		{
		}

		[Token(Token = "0x600081F")]
		[CanBeNull]
		private string GetTxtMessageRecipient(ChannelType txtRecipientType, ushort txtRecipient)
		{
			return null;
		}
	}
	[Token(Token = "0x2000126")]
	internal class TextSender<TPeer> where TPeer : struct
	{
		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISession _session;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISendQueue<TPeer> _sender;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IClientCollection<TPeer?> _peers;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<ClientInfo<TPeer?>> _tmpDests;

		[Token(Token = "0x6000821")]
		public TextSender(ISendQueue<TPeer> sender, ISession session, IClientCollection<TPeer?> peers)
		{
		}

		[Token(Token = "0x6000822")]
		public void Send(string data, ChannelType type, string recipient)
		{
		}
	}
	[Token(Token = "0x2000127")]
	internal struct VoicePacketOptions
	{
		[Token(Token = "0x400047C")]
		public const int ChannelSessionRange = 4;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly byte _bitfield;

		[Token(Token = "0x1700016F")]
		public byte ChannelSession
		{
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x110A410", Offset = "0x110A410", VA = "0x110A410")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000170")]
		public byte Bitfield
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0x110A41C", Offset = "0x110A41C", VA = "0x110A41C")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x110A424", Offset = "0x110A424", VA = "0x110A424")]
		private VoicePacketOptions(byte bitfield)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x17B596C", Offset = "0x17B596C", VA = "0x17B596C")]
		public static VoicePacketOptions Unpack(byte bitfield)
		{
			return default(VoicePacketOptions);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x17B5974", Offset = "0x17B5974", VA = "0x17B5974")]
		public static VoicePacketOptions Pack(byte channelSession)
		{
			return default(VoicePacketOptions);
		}
	}
	[Token(Token = "0x2000128")]
	internal class VoiceReceiver<TPeer> where TPeer : struct
	{
		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan Timeout;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISession _session;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IClientCollection<TPeer?> _clients;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly EventQueue _events;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Rooms _rooms;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ConcurrentPool<byte[]> _byteArrayPool;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ConcurrentPool<List<RemoteChannel>> _channelListPool;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<PeerVoiceReceiver> _receivers;

		[Token(Token = "0x6000829")]
		public VoiceReceiver(ISession session, IClientCollection<TPeer?> clients, EventQueue events, Rooms rooms, ConcurrentPool<byte[]> byteArrayPool, ConcurrentPool<List<RemoteChannel>> channelListPool)
		{
		}

		[Token(Token = "0x600082A")]
		private void OnPlayerLeft([NotNull] string name)
		{
		}

		[Token(Token = "0x600082B")]
		public void Stop()
		{
		}

		[Token(Token = "0x600082C")]
		public void Update(DateTime utcNow)
		{
		}

		[Token(Token = "0x600082D")]
		private void CheckTimeouts(DateTime utcNow)
		{
		}

		[Token(Token = "0x600082E")]
		public void ReceiveVoiceData(ref PacketReader reader, [Optional] DateTime? utcNow)
		{
		}
	}
	[Token(Token = "0x2000129")]
	internal class VoiceSender<TPeer> where TPeer : struct
	{
		[Token(Token = "0x2000462")]
		private struct ChannelDelta
		{
			[Token(Token = "0x40012F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly bool Open;

			[Token(Token = "0x40012F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ChannelType Type;

			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ChannelProperties Properties;

			[Token(Token = "0x40012F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ushort RecipientId;

			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly string RecipientName;

			[Token(Token = "0x6001DA9")]
			public ChannelDelta(bool open, ChannelType type, ChannelProperties properties, ushort recipientId, string recipientName)
			{
			}
		}

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISendQueue<TPeer> _sender;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISession _session;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IClientCollection<TPeer?> _peers;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly EventQueue _events;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly PlayerChannels _playerChannels;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly RoomChannels _roomChannels;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte _channelSessionId;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ReadonlyLockedValue<List<OpenChannel>> _openChannels;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ReadonlyLockedValue<List<ChannelDelta>> _deltas;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<KeyValuePair<string, ChannelProperties>> _pendingPlayerChannels;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ushort _sequenceNumber;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly HashSet<ClientInfo<TPeer?>> _tmpDestsSet;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<ClientInfo<TPeer?>> _tmpDestsList;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hadId;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _noIdSendCount;

		[Token(Token = "0x6000830")]
		public VoiceSender([NotNull] ISendQueue<TPeer> sender, [NotNull] ISession session, [NotNull] IClientCollection<TPeer?> peers, [NotNull] EventQueue events, [NotNull] PlayerChannels playerChannels, [NotNull] RoomChannels roomChannels)
		{
		}

		[Token(Token = "0x6000831")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000832")]
		private void OnPlayerJoined([NotNull] string name, CodecSettings codecSettings)
		{
		}

		[Token(Token = "0x6000833")]
		private void OnPlayerLeft([NotNull] string name)
		{
		}

		[Token(Token = "0x6000834")]
		private void OpenPlayerChannel([NotNull] string player, [NotNull] ChannelProperties config)
		{
		}

		[Token(Token = "0x6000835")]
		private void ClosePlayerChannel([NotNull] string player, [NotNull] ChannelProperties config)
		{
		}

		[Token(Token = "0x6000836")]
		private void OpenRoomChannel([NotNull] string room, [NotNull] ChannelProperties config)
		{
		}

		[Token(Token = "0x6000837")]
		private void CloseRoomChannel([NotNull] string room, [NotNull] ChannelProperties config)
		{
		}

		[Token(Token = "0x6000838")]
		private void OpenChannel(ChannelType type, [NotNull] ChannelProperties config, ushort recipient, [NotNull] string name)
		{
		}

		[Token(Token = "0x6000839")]
		private void CloseChannel(ChannelType type, [NotNull] ChannelProperties properties, ushort id)
		{
		}

		[Token(Token = "0x600083A")]
		private void ClearClosedChannels()
		{
		}

		[Token(Token = "0x600083B")]
		public void Send(ArraySegment<byte> encodedAudio)
		{
		}

		[Token(Token = "0x600083C")]
		[NotNull]
		private List<ClientInfo<TPeer?>> GetVoiceDestinations([NotNull] IList<OpenChannel> openChannels)
		{
			return null;
		}

		[Token(Token = "0x600083D")]
		private void ApplyChannelDeltas([NotNull] ReadonlyLockedValue<List<OpenChannel>>.Unlocker openChannels)
		{
		}

		[Token(Token = "0x600083E")]
		private static bool AreAllChannelsClosing([NotNull] ReadonlyLockedValue<List<OpenChannel>>.Unlocker openChannels)
		{
			return default(bool);
		}

		[Token(Token = "0x600083F")]
		private void ApplyChannelDelta(ChannelDelta d, ReadonlyLockedValue<List<OpenChannel>>.Unlocker openChannels)
		{
		}
	}
}
namespace Dissonance.Extensions
{
	[Token(Token = "0x200012A")]
	public static class ArraySegmentExtensions
	{
		[Token(Token = "0x2000463")]
		internal struct DisposableHandle : IDisposable
		{
			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IntPtr _ptr;

			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private GCHandle _handle;

			[Token(Token = "0x170004E8")]
			public IntPtr Ptr
			{
				[Token(Token = "0x6001DAA")]
				[Address(RVA = "0x1109E6C", Offset = "0x1109E6C", VA = "0x1109E6C")]
				get
				{
					return default(IntPtr);
				}
			}

			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x1109E74", Offset = "0x1109E74", VA = "0x1109E74")]
			internal DisposableHandle(IntPtr ptr, GCHandle handle)
			{
			}

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x1109E80", Offset = "0x1109E80", VA = "0x1109E80", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x6000841")]
		public static ArraySegment<T> CopyTo<T>(this ArraySegment<T> source, [NotNull] T[] destination, int destinationOffset = 0) where T : struct
		{
			return default(ArraySegment<T>);
		}

		[Token(Token = "0x6000842")]
		internal static int CopyFrom<T>(this ArraySegment<T> destination, [NotNull] T[] source)
		{
			return default(int);
		}

		[Token(Token = "0x6000843")]
		[NotNull]
		internal static T[] ToArray<T>(this ArraySegment<T> segment) where T : struct
		{
			return null;
		}

		[Token(Token = "0x6000844")]
		internal static void Clear<T>(this ArraySegment<T> segment)
		{
		}

		[Token(Token = "0x6000845")]
		internal static DisposableHandle Pin<T>(this ArraySegment<T> segment) where T : struct
		{
			return default(DisposableHandle);
		}
	}
	[Token(Token = "0x200012B")]
	public static class IEnumerableExtensions
	{
		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9554", Offset = "0xFB9554")]
		private sealed class <ConcatUnsafe>d__1<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<T> enumerable;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<T> <>3__enumerable;

			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T tail;

			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__tail;

			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<T> <>7__wrap1;

			[Token(Token = "0x170004E9")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001DB1")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170004EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB3")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAD")]
			[DebuggerHidden]
			public <ConcatUnsafe>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAE")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAF")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DB2")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001DB4")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001DB5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6000846")]
		[NotNull]
		public static IEnumerable<T> Concat<T>([NotNull] this IEnumerable<T> enumerable, T tail)
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8244", Offset = "0xFC8244")]
		[NotNull]
		private static IEnumerable<T> ConcatUnsafe<T>([NotNull] this IEnumerable<T> enumerable, T tail)
		{
			return null;
		}
	}
	[Token(Token = "0x200012C")]
	internal static class Int32Extensions
	{
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x17AF80C", Offset = "0x17AF80C", VA = "0x17AF80C")]
		internal static int WrappedDelta(this int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x17AF83C", Offset = "0x17AF83C", VA = "0x17AF83C")]
		internal static int WrappedDelta(this int a, int b, int max)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200012D")]
	internal static class StringExtensions
	{
		[Token(Token = "0x600084A")]
		[Address(RVA = "0x17AF890", Offset = "0x17AF890", VA = "0x17AF890")]
		public static int GetFnvHashCode([CanBeNull] this string str)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200012E")]
	internal static class UShortExtensions
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0x17AF91C", Offset = "0x17AF91C", VA = "0x17AF91C")]
		internal static int WrappedDelta(this ushort a, ushort b)
		{
			return default(int);
		}
	}
}
namespace Dissonance.Datastructures
{
	[Token(Token = "0x200012F")]
	internal abstract class BaseWindowCalculator<T> where T : struct
	{
		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly RingBuffer<T> _buffer;

		[Token(Token = "0x17000171")]
		protected int Count
		{
			[Token(Token = "0x600084C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000172")]
		protected int Capacity
		{
			[Token(Token = "0x600084D")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600084E")]
		protected BaseWindowCalculator(uint size)
		{
		}

		[Token(Token = "0x600084F")]
		public void Update(T added)
		{
		}

		[Token(Token = "0x6000850")]
		protected abstract void Updated(T? removed, T added);

		[Token(Token = "0x6000851")]
		public virtual void Clear()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class ConcurrentPool<T> : IRecycler<T> where T : class
	{
		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T> _factory;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TransferBuffer<T> _items;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ReadonlyLockedValue<int> _getter;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ReadonlyLockedValue<int> _putter;

		[Token(Token = "0x6000852")]
		public ConcurrentPool(int maxSize, Func<T> factory)
		{
		}

		[Token(Token = "0x6000853")]
		[NotNull]
		public T Get()
		{
			return null;
		}

		[Token(Token = "0x6000854")]
		public void Put([NotNull] T item)
		{
		}

		[Token(Token = "0x6000855")]
		private void Dissonance.Datastructures.IRecycler<T>.Recycle([NotNull] T item)
		{
		}
	}
	[Token(Token = "0x2000131")]
	internal class POTBuffer
	{
		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<float[]> _buffers;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB0F4", Offset = "0xFBB0F4")]
		private uint <MaxCount>k__BackingField;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB104", Offset = "0xFBB104")]
		private uint <Count>k__BackingField;

		[Token(Token = "0x17000173")]
		public uint MaxCount
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x17A77BC", Offset = "0x17A77BC", VA = "0x17A77BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8318", Offset = "0xFC8318")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x17A77C4", Offset = "0x17A77C4", VA = "0x17A77C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8328", Offset = "0xFC8328")]
			private set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public uint Pow2
		{
			[Token(Token = "0x6000858")]
			[Address(RVA = "0x17A77CC", Offset = "0x17A77CC", VA = "0x17A77CC")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000175")]
		public uint Count
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x17A781C", Offset = "0x17A781C", VA = "0x17A781C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8338", Offset = "0xFC8338")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x17A7824", Offset = "0x17A7824", VA = "0x17A7824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8348", Offset = "0xFC8348")]
			private set
			{
			}
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x17A782C", Offset = "0x17A782C", VA = "0x17A782C")]
		public POTBuffer(byte initialMaxPow)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x17A7934", Offset = "0x17A7934", VA = "0x17A7934")]
		public void Free()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x17A793C", Offset = "0x17A793C", VA = "0x17A793C")]
		public void Alloc(uint count)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x17A79E0", Offset = "0x17A79E0", VA = "0x17A79E0")]
		public bool Expand(int limit = int.MaxValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x17A7AD8", Offset = "0x17A7AD8", VA = "0x17A7AD8")]
		[NotNull]
		public float[] GetBuffer(ref uint count, bool zeroed = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000132")]
	internal class PacketLossCalculator : BaseWindowCalculator<bool>
	{
		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint _lost;

		[Token(Token = "0x17000176")]
		public float PacketLoss
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x17A7CAC", Offset = "0x17A7CAC", VA = "0x17A7CAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x17A7D8C", Offset = "0x17A7D8C", VA = "0x17A7D8C")]
		public PacketLossCalculator(uint size)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x17A7DEC", Offset = "0x17A7DEC", VA = "0x17A7DEC", Slot = "4")]
		protected override void Updated(bool? removed, bool added)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x17A7E88", Offset = "0x17A7E88", VA = "0x17A7E88", Slot = "5")]
		public override void Clear()
		{
		}
	}
	[Token(Token = "0x2000133")]
	internal class Pool<T> : IRecycler<T> where T : class
	{
		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int _maxSize;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T> _factory;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Stack<T> _items;

		[Token(Token = "0x17000177")]
		public int Count
		{
			[Token(Token = "0x6000864")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000178")]
		public int Capacity
		{
			[Token(Token = "0x6000865")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000866")]
		public Pool(int maxSize, Func<T> factory)
		{
		}

		[Token(Token = "0x6000867")]
		public T Get()
		{
			return null;
		}

		[Token(Token = "0x6000868")]
		public void Put([NotNull] T item)
		{
		}

		[Token(Token = "0x6000869")]
		private void Dissonance.Datastructures.IRecycler<T>.Recycle([NotNull] T item)
		{
		}
	}
	[Token(Token = "0x2000134")]
	public interface IRecycler<in T> where T : class
	{
		[Token(Token = "0x600086A")]
		void Recycle(T item);
	}
	[Token(Token = "0x2000135")]
	internal class RingBuffer<T> where T : struct
	{
		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T[] _items;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB114", Offset = "0xFBB114")]
		private int <Count>k__BackingField;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _end;

		[Token(Token = "0x17000179")]
		public int Count
		{
			[Token(Token = "0x600086B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8368", Offset = "0xFC8368")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600086C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8378", Offset = "0xFC8378")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public int Capacity
		{
			[Token(Token = "0x600086D")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600086E")]
		public RingBuffer(uint size)
		{
		}

		[Token(Token = "0x600086F")]
		public T? Add(T item)
		{
			return null;
		}

		[Token(Token = "0x6000870")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x2000136")]
	internal class TransferBuffer<T>
	{
		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T[] _buffer;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _readHead;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _unread;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _writeHead;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T[] _singleReadItem;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T[] _singleWriteItem;

		[Token(Token = "0x1700017B")]
		public int EstimatedUnreadCount
		{
			[Token(Token = "0x6000871")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017C")]
		public int Capacity
		{
			[Token(Token = "0x6000872")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000873")]
		public TransferBuffer(int capacity = 4096)
		{
		}

		[Token(Token = "0x6000874")]
		public bool TryWrite(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000875")]
		public bool TryWriteAll(ArraySegment<T> data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000876")]
		public int WriteSome(ArraySegment<T> data)
		{
			return default(int);
		}

		[Token(Token = "0x6000877")]
		public bool Read([CanBeNull] out T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000878")]
		public bool Read([NotNull] T[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000879")]
		public bool Read([NotNull] T[] data, int readCount)
		{
			return default(bool);
		}

		[Token(Token = "0x600087A")]
		public bool Read(ArraySegment<T> data)
		{
			return default(bool);
		}

		[Token(Token = "0x600087B")]
		public void Clear()
		{
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000137")]
	internal struct Union16
	{
		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ushort _ushort;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte _byte1;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private byte _byte2;

		[Token(Token = "0x1700017D")]
		public ushort UInt16
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x1109E1C", Offset = "0x1109E1C", VA = "0x1109E1C")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x1109E24", Offset = "0x1109E24", VA = "0x1109E24")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public byte LSB
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x1109E2C", Offset = "0x1109E2C", VA = "0x1109E2C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6000880")]
			[Address(RVA = "0x1109E34", Offset = "0x1109E34", VA = "0x1109E34")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public byte MSB
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0x1109E3C", Offset = "0x1109E3C", VA = "0x1109E3C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6000882")]
			[Address(RVA = "0x1109E44", Offset = "0x1109E44", VA = "0x1109E44")]
			set
			{
			}
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000138")]
	internal struct Union32
	{
		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private uint _uint;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte _byte1;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private byte _byte2;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private byte _byte3;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		private byte _byte4;

		[Token(Token = "0x17000180")]
		public uint UInt32
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0x1109E4C", Offset = "0x1109E4C", VA = "0x1109E4C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000884")]
			[Address(RVA = "0x1109E54", Offset = "0x1109E54", VA = "0x1109E54")]
			set
			{
			}
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1109E5C", Offset = "0x1109E5C", VA = "0x1109E5C")]
		public void SetBytesFromNetworkOrder(byte b1, byte b2, byte b3, byte b4)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1109E64", Offset = "0x1109E64", VA = "0x1109E64")]
		public void GetBytesInNetworkOrder(out byte b1, out byte b2, out byte b3, out byte b4)
		{
		}
	}
	[Token(Token = "0x2000139")]
	internal class WindowDeviationCalculator : BaseWindowCalculator<float>
	{
		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _sum;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _sumOfSquares;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB124", Offset = "0xFBB124")]
		private float <StdDev>k__BackingField;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB134", Offset = "0xFBB134")]
		private float <Mean>k__BackingField;

		[Token(Token = "0x17000181")]
		public float StdDev
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x17A8268", Offset = "0x17A8268", VA = "0x17A8268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8388", Offset = "0xFC8388")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000888")]
			[Address(RVA = "0x17A8270", Offset = "0x17A8270", VA = "0x17A8270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8398", Offset = "0xFC8398")]
			private set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public float Mean
		{
			[Token(Token = "0x6000889")]
			[Address(RVA = "0x17A8278", Offset = "0x17A8278", VA = "0x17A8278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC83A8", Offset = "0xFC83A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600088A")]
			[Address(RVA = "0x17A8280", Offset = "0x17A8280", VA = "0x17A8280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC83B8", Offset = "0xFC83B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public float Confidence
		{
			[Token(Token = "0x600088B")]
			[Address(RVA = "0x17A8288", Offset = "0x17A8288", VA = "0x17A8288")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x17A8300", Offset = "0x17A8300", VA = "0x17A8300")]
		public WindowDeviationCalculator(uint size)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x17A8360", Offset = "0x17A8360", VA = "0x17A8360", Slot = "4")]
		protected override void Updated(float? removed, float added)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x17A849C", Offset = "0x17A849C", VA = "0x17A849C")]
		private float CalculateDeviation(float mean, float meanOfSquares)
		{
			return default(float);
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x17A8568", Offset = "0x17A8568", VA = "0x17A8568", Slot = "5")]
		public override void Clear()
		{
		}
	}
}
namespace Dissonance.Config
{
	[Token(Token = "0x200013A")]
	public class ChatRoomSettings : ScriptableObject
	{
		[Token(Token = "0x40004B9")]
		private const string SettingsFileResourceName = "ChatRoomSettings";

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string SettingsFilePath;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<string> DefaultRooms;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		internal List<string> Names;

		[NonSerialized]
		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<ushort, string> _nameLookup;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ChatRoomSettings _instance;

		[Token(Token = "0x17000184")]
		[NotNull]
		public static ChatRoomSettings Instance
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x1C682BC", Offset = "0x1C682BC", VA = "0x1C682BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1C683D4", Offset = "0x1C683D4", VA = "0x1C683D4")]
		public ChatRoomSettings()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1C68488", Offset = "0x1C68488", VA = "0x1C68488")]
		[CanBeNull]
		public string FindRoomById(ushort id)
		{
			return null;
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1C68360", Offset = "0x1C68360", VA = "0x1C68360")]
		public static ChatRoomSettings Load()
		{
			return null;
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1C685F4", Offset = "0x1C685F4", VA = "0x1C685F4")]
		public static void Preload()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class DebugSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9564", Offset = "0xFB9564")]
		private sealed class <>c
		{
			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LogCategory, int> <>9__15_0;

			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x17A5914", Offset = "0x17A5914", VA = "0x17A5914")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x17A591C", Offset = "0x17A591C", VA = "0x17A591C")]
			internal int <.ctor>b__15_0(LogCategory c)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40004BF")]
		private const string SettingsFileResourceName = "DebugSettings";

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string SettingsFilePath;

		[Token(Token = "0x40004C1")]
		private const LogLevel DefaultLevel = LogLevel.Info;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<LogLevel> _levels;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool EnableRecordingDiagnostics;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool RecordMicrophoneRawAudio;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool RecordPreprocessorOutput;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool EnablePlaybackDiagnostics;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool RecordDecodedAudio;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool RecordFinalAudio;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool EnableNetworkSimulation;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PacketLoss;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DebugSettings _instance;

		[Token(Token = "0x17000185")]
		[NotNull]
		public static DebugSettings Instance
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0x17A52C0", Offset = "0x17A52C0", VA = "0x17A52C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x17A53D8", Offset = "0x17A53D8", VA = "0x17A53D8")]
		public DebugSettings()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x17A5604", Offset = "0x17A5604", VA = "0x17A5604")]
		public LogLevel GetLevel(int category)
		{
			return default(LogLevel);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x17A5688", Offset = "0x17A5688", VA = "0x17A5688")]
		public void SetLevel(int category, LogLevel level)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x17A5364", Offset = "0x17A5364", VA = "0x17A5364")]
		private static DebugSettings Load()
		{
			return null;
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x17A5738", Offset = "0x17A5738", VA = "0x17A5738")]
		public static void Preload()
		{
		}
	}
	[Token(Token = "0x200013C")]
	internal static class Preferences
	{
		[Token(Token = "0x600089D")]
		public static void Get<T>(string key, ref T output, Func<string, T, T> get, Log log)
		{
		}

		[Token(Token = "0x600089E")]
		public static void Set<T>(string key, ref T field, T value, Action<string, T> save, Log log, [Optional] IEqualityComparer<T> equality, bool setAtRuntime = true)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x17A5924", Offset = "0x17A5924", VA = "0x17A5924")]
		internal static void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x17A59A8", Offset = "0x17A59A8", VA = "0x17A59A8")]
		internal static bool GetBool(string key, bool defaultValue)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200013D")]
	public sealed class VoiceSettings : ScriptableObject, INotifyPropertyChanged
	{
		[Serializable]
		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9574", Offset = "0xFB9574")]
		private sealed class <>c
		{
			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string, AudioQuality> <>9__17_0;

			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<string, FrameSize> <>9__21_0;

			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, AudioQuality, AudioQuality> <>9__67_0;

			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<string, FrameSize, FrameSize> <>9__67_1;

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x17A76C8", Offset = "0x17A76C8", VA = "0x17A76C8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0x17A76D0", Offset = "0x17A76D0", VA = "0x17A76D0")]
			internal void <set_Quality>b__17_0(string key, AudioQuality q)
			{
			}

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x17A76E0", Offset = "0x17A76E0", VA = "0x17A76E0")]
			internal void <set_FrameSize>b__21_0(string key, FrameSize f)
			{
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x17A76F0", Offset = "0x17A76F0", VA = "0x17A76F0")]
			internal AudioQuality <Load>b__67_0(string s, AudioQuality q)
			{
				return default(AudioQuality);
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x17A7700", Offset = "0x17A7700", VA = "0x17A7700")]
			internal FrameSize <Load>b__67_1(string s, FrameSize f)
			{
				return default(FrameSize);
			}
		}

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x40004CD")]
		private const string PersistName_Quality = "Dissonance_Audio_Quality";

		[Token(Token = "0x40004CE")]
		private const string PersistName_FrameSize = "Dissonance_Audio_FrameSize";

		[Token(Token = "0x40004CF")]
		private const string PersistName_Fec = "Dissonance_Audio_DisableFEC";

		[Token(Token = "0x40004D0")]
		private const string PersistName_DenoiseAmount = "Dissonance_Audio_Denoise_Amount";

		[Token(Token = "0x40004D1")]
		private const string PersistName_PttDuckAmount = "Dissonance_Audio_Duck_Amount";

		[Token(Token = "0x40004D2")]
		private const string PersistName_AecSuppressionAmount = "Dissonance_Audio_Aec_Suppression_Amount";

		[Token(Token = "0x40004D3")]
		private const string PersistName_AecDelayAgnostic = "Dissonance_Audio_Aec_Delay_Agnostic";

		[Token(Token = "0x40004D4")]
		private const string PersistName_AecExtendedFilter = "Dissonance_Audio_Aec_Extended_Filter";

		[Token(Token = "0x40004D5")]
		private const string PersistName_AecRefinedAdaptiveFilter = "Dissonance_Audio_Aec_Refined_Adaptive_Filter";

		[Token(Token = "0x40004D6")]
		private const string PersistName_AecmRoutingMode = "Dissonance_Audio_Aecm_Routing_Mode";

		[Token(Token = "0x40004D7")]
		private const string PersistName_AecmComfortNoise = "Dissonance_Audio_Aecm_Comfort_Noise";

		[Token(Token = "0x40004D8")]
		private const string SettingsFileResourceName = "VoiceSettings";

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string SettingsFilePath;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioQuality _quality;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FrameSize _frameSize;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _forwardErrorCorrection;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _denoiseAmount;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _aecAmount;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _aecDelayAgnostic;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _aecExtendedFilter;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int _aecRefinedAdaptiveFilter;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _aecmRoutingMode;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int _aecmComfortNoise;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _voiceDuckLevel;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VoiceSettings _instance;

		[Token(Token = "0x17000186")]
		public AudioQuality Quality
		{
			[Token(Token = "0x60008A1")]
			[Address(RVA = "0x17A5A34", Offset = "0x17A5A34", VA = "0x17A5A34")]
			get
			{
				return default(AudioQuality);
			}
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0x17A5A3C", Offset = "0x17A5A3C", VA = "0x17A5A3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public FrameSize FrameSize
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0x17A5C38", Offset = "0x17A5C38", VA = "0x17A5C38")]
			get
			{
				return default(FrameSize);
			}
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0x17A5C40", Offset = "0x17A5C40", VA = "0x17A5C40")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public bool ForwardErrorCorrection
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x17A5DA8", Offset = "0x17A5DA8", VA = "0x17A5DA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x17A5E14", Offset = "0x17A5E14", VA = "0x17A5E14")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public NoiseSuppressionLevels DenoiseAmount
		{
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x17A5F40", Offset = "0x17A5F40", VA = "0x17A5F40")]
			get
			{
				return default(NoiseSuppressionLevels);
			}
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0x17A5F48", Offset = "0x17A5F48", VA = "0x17A5F48")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public AecSuppressionLevels AecSuppressionAmount
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x17A6040", Offset = "0x17A6040", VA = "0x17A6040")]
			get
			{
				return default(AecSuppressionLevels);
			}
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0x17A6048", Offset = "0x17A6048", VA = "0x17A6048")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public bool AecDelayAgnostic
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x17A6140", Offset = "0x17A6140", VA = "0x17A6140")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0x17A61AC", Offset = "0x17A61AC", VA = "0x17A61AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public bool AecExtendedFilter
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x17A62D8", Offset = "0x17A62D8", VA = "0x17A62D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x17A6344", Offset = "0x17A6344", VA = "0x17A6344")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public bool AecRefinedAdaptiveFilter
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x17A6470", Offset = "0x17A6470", VA = "0x17A6470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x17A64DC", Offset = "0x17A64DC", VA = "0x17A64DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public AecmRoutingMode AecmRoutingMode
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x17A6608", Offset = "0x17A6608", VA = "0x17A6608")]
			get
			{
				return default(AecmRoutingMode);
			}
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x17A6610", Offset = "0x17A6610", VA = "0x17A6610")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public bool AecmComfortNoise
		{
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0x17A6708", Offset = "0x17A6708", VA = "0x17A6708")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0x17A6774", Offset = "0x17A6774", VA = "0x17A6774")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public float VoiceDuckLevel
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0x17A68A0", Offset = "0x17A68A0", VA = "0x17A68A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0x17A68A8", Offset = "0x17A68A8", VA = "0x17A68A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		[NotNull]
		public static VoiceSettings Instance
		{
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0x17A6AE8", Offset = "0x17A6AE8", VA = "0x17A6AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400003D")]
		public event PropertyChangedEventHandler PropertyChanged
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0x17A69A0", Offset = "0x17A69A0", VA = "0x17A69A0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC83D8", Offset = "0xFC83D8")]
			add
			{
			}
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0x17A6A44", Offset = "0x17A6A44", VA = "0x17A6A44", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC83E8", Offset = "0xFC83E8")]
			remove
			{
			}
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x17A5BA4", Offset = "0x17A5BA4", VA = "0x17A5BA4")]
		[AttributeAttribute(Name = "NotifyPropertyChangedInvocatorAttribute", RVA = "0xFC83F8", Offset = "0xFC83F8")]
		private void OnPropertyChanged(string propertyName)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x17A70B8", Offset = "0x17A70B8", VA = "0x17A70B8")]
		public VoiceSettings()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x17A7194", Offset = "0x17A7194", VA = "0x17A7194")]
		public static void Preload()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x17A6B8C", Offset = "0x17A6B8C", VA = "0x17A6B8C")]
		[NotNull]
		private static VoiceSettings Load()
		{
			return null;
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x17A7270", Offset = "0x17A7270", VA = "0x17A7270", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace Dissonance.Audio
{
	[Token(Token = "0x200013E")]
	internal struct ArvCalculator
	{
		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB224", Offset = "0xFBB224")]
		private float <ARV>k__BackingField;

		[Token(Token = "0x17000192")]
		public float ARV
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0x1131818", Offset = "0x1131818", VA = "0x1131818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8418", Offset = "0xFC8418")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x1131820", Offset = "0x1131820", VA = "0x1131820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8428", Offset = "0xFC8428")]
			private set
			{
			}
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1131828", Offset = "0x1131828", VA = "0x1131828")]
		public void Reset()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1131830", Offset = "0x1131830", VA = "0x1131830")]
		public void Update(ArraySegment<float> samples)
		{
		}
	}
	[Token(Token = "0x200013F")]
	internal class AudioFileWriter : IDisposable
	{
		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LockedValue<WaveFileWriter> _lock;

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1C4EDC0", Offset = "0x1C4EDC0", VA = "0x1C4EDC0")]
		public AudioFileWriter(string filename, [NotNull] WaveFormat format)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1C4EF80", Offset = "0x1C4EF80", VA = "0x1C4EF80", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1C4F0C8", Offset = "0x1C4F0C8", VA = "0x1C4F0C8")]
		public void Flush()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1C4F1FC", Offset = "0x1C4F1FC", VA = "0x1C4F1FC")]
		public void WriteSamples(ArraySegment<float> samples)
		{
		}
	}
	[Token(Token = "0x2000140")]
	internal class AudioSettingsWatcher
	{
		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly AudioSettingsWatcher Singleton;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object _lock;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _started;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private AudioConfiguration _config;

		[Token(Token = "0x17000193")]
		public static AudioSettingsWatcher Instance
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x1C4F34C", Offset = "0x1C4F34C", VA = "0x1C4F34C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public AudioConfiguration Configuration
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x1C4F3B4", Offset = "0x1C4F3B4", VA = "0x1C4F3B4")]
			get
			{
				return default(AudioConfiguration);
			}
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x1C4F468", Offset = "0x1C4F468", VA = "0x1C4F468")]
		internal void Start()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1C4F570", Offset = "0x1C4F570", VA = "0x1C4F570")]
		private void OnAudioConfigChanged(bool devicewaschanged)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1C4F618", Offset = "0x1C4F618", VA = "0x1C4F618")]
		public AudioSettingsWatcher()
		{
		}
	}
	[Token(Token = "0x2000141")]
	internal struct Fader
	{
		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB234", Offset = "0xFBB234")]
		private float <Volume>k__BackingField;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float _fadeTime;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB244", Offset = "0xFBB244")]
		private float <EndVolume>k__BackingField;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB254", Offset = "0xFBB254")]
		private float <StartVolume>k__BackingField;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _elapsedTime;

		[Token(Token = "0x17000195")]
		public float Volume
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0x11318B8", Offset = "0x11318B8", VA = "0x11318B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8438", Offset = "0xFC8438")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x11318C0", Offset = "0x11318C0", VA = "0x11318C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8448", Offset = "0xFC8448")]
			private set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public float EndVolume
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x11318C8", Offset = "0x11318C8", VA = "0x11318C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8458", Offset = "0xFC8458")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x11318D0", Offset = "0x11318D0", VA = "0x11318D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8468", Offset = "0xFC8468")]
			private set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public float StartVolume
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x11318D8", Offset = "0x11318D8", VA = "0x11318D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8478", Offset = "0xFC8478")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x11318E0", Offset = "0x11318E0", VA = "0x11318E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8488", Offset = "0xFC8488")]
			private set
			{
			}
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x11318E8", Offset = "0x11318E8", VA = "0x11318E8")]
		public void Update(float dt)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x113191C", Offset = "0x113191C", VA = "0x113191C")]
		private float CalculateVolume()
		{
			return default(float);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1131924", Offset = "0x1131924", VA = "0x1131924")]
		public void FadeTo(float target, float duration)
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class OpenChannelVolumeDuck : IVolumeProvider
	{
		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly RoomChannels _rooms;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly PlayerChannels _players;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _targetVolume;

		[Token(Token = "0x17000198")]
		public float TargetVolume
		{
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x1C5D294", Offset = "0x1C5D294", VA = "0x1C5D294", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1C5D2B8", Offset = "0x1C5D2B8", VA = "0x1C5D2B8")]
		public OpenChannelVolumeDuck(RoomChannels rooms, PlayerChannels players)
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1C5D318", Offset = "0x1C5D318", VA = "0x1C5D318")]
		public void Update(bool isMuted)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1C5D320", Offset = "0x1C5D320", VA = "0x1C5D320")]
		private void UpdateTargetVolume(bool isMuted)
		{
		}
	}
}
namespace Dissonance.Audio.Playback
{
	[Token(Token = "0x2000143")]
	internal class BufferedDecoder : IFrameSource, IRemoteChannelProvider
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly EncodedAudioBuffer _buffer;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IVoiceDecoder _decoder;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly uint _frameSize;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly WaveFormat _waveFormat;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action<VoicePacket> _recycleFrame;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioFileWriter _diagnosticOutput;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly LockedValue<PlaybackOptions> _options;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _receivedFirstPacket;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _approxChannelCount;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReadonlyLockedValue<List<RemoteChannel>> _channels;

		[Token(Token = "0x17000199")]
		public int BufferCount
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x1C5D400", Offset = "0x1C5D400", VA = "0x1C5D400")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019A")]
		public uint SequenceNumber
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x1C5D41C", Offset = "0x1C5D41C", VA = "0x1C5D41C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700019B")]
		public float PacketLoss
		{
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x1C5D438", Offset = "0x1C5D438", VA = "0x1C5D438")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019C")]
		public PlaybackOptions LatestPlaybackOptions
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x1C5D47C", Offset = "0x1C5D47C", VA = "0x1C5D47C")]
			get
			{
				return default(PlaybackOptions);
			}
		}

		[Token(Token = "0x1700019D")]
		public uint FrameSize
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x1C5D900", Offset = "0x1C5D900", VA = "0x1C5D900", Slot = "4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700019E")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x1C5D908", Offset = "0x1C5D908", VA = "0x1C5D908", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1C5D5B8", Offset = "0x1C5D5B8", VA = "0x1C5D5B8")]
		public BufferedDecoder([NotNull] IVoiceDecoder decoder, uint frameSize, [NotNull] WaveFormat waveFormat, [NotNull] Action<VoicePacket> recycleFrame)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x1C5D910", Offset = "0x1C5D910", VA = "0x1C5D910", Slot = "6")]
		public void Prepare(SessionContext context)
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1C5DAA4", Offset = "0x1C5DAA4", VA = "0x1C5DAA4", Slot = "7")]
		public bool Read(ArraySegment<float> frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1C5E318", Offset = "0x1C5E318", VA = "0x1C5E318")]
		private void ExtractChannels(VoicePacket encoded)
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1C5E4B0", Offset = "0x1C5E4B0", VA = "0x1C5E4B0", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1C5E8DC", Offset = "0x1C5E8DC", VA = "0x1C5E8DC")]
		public void Push(VoicePacket frame)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1C5EAF4", Offset = "0x1C5EAF4", VA = "0x1C5EAF4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1C5EB4C", Offset = "0x1C5EB4C", VA = "0x1C5EB4C", Slot = "9")]
		public void GetRemoteChannels(List<RemoteChannel> output)
		{
		}
	}
	[Token(Token = "0x2000144")]
	internal class DecoderFactory
	{
		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Log Log;

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1C5ECD8", Offset = "0x1C5ECD8", VA = "0x1C5ECD8")]
		[NotNull]
		public static IVoiceDecoder Create(FrameFormat format)
		{
			return null;
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1C5EF20", Offset = "0x1C5EF20", VA = "0x1C5EF20")]
		public DecoderFactory()
		{
		}
	}
	[Token(Token = "0x2000145")]
	internal class DecoderPipeline : IDecoderPipeline, IVolumeProvider, IRemoteChannelProvider
	{
		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9584", Offset = "0xFB9584")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint inputFrameSize;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IVoiceDecoder decoder;

			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x1C5F6B8", Offset = "0x1C5F6B8", VA = "0x1C5F6B8")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x1C6052C", Offset = "0x1C6052C", VA = "0x1C6052C")]
			internal byte[] <.ctor>b__0()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9594", Offset = "0xFB9594")]
		private sealed class <>c
		{
			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<List<RemoteChannel>> <>9__25_1;

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x1C604C0", Offset = "0x1C604C0", VA = "0x1C604C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x1C604C8", Offset = "0x1C604C8", VA = "0x1C604C8")]
			internal List<RemoteChannel> <.ctor>b__25_1()
			{
				return null;
			}
		}

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Action<DecoderPipeline> _completionHandler;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly TransferBuffer<VoicePacket> _inputBuffer;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ConcurrentPool<byte[]> _bytePool;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ConcurrentPool<List<RemoteChannel>> _channelListPool;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly BufferedDecoder _source;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ISampleSource _output;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _prepared;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _complete;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool _sourceClosed;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly TimeSpan _frameDuration;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DateTime? _firstFrameArrival;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private uint _firstFrameSeq;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB264", Offset = "0xFBB264")]
		private IVolumeProvider <VolumeProvider>k__BackingField;

		[Token(Token = "0x1700019F")]
		public int BufferCount
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x1C5F004", Offset = "0x1C5F004", VA = "0x1C5F004", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A0")]
		public TimeSpan BufferTime
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x1C5F078", Offset = "0x1C5F078", VA = "0x1C5F078", Slot = "5")]
			get
			{
				return default(TimeSpan);
			}
		}

		[Token(Token = "0x170001A1")]
		public float PacketLoss
		{
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x1C5F0F8", Offset = "0x1C5F0F8", VA = "0x1C5F0F8", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A2")]
		public PlaybackOptions PlaybackOptions
		{
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0x1C5F110", Offset = "0x1C5F110", VA = "0x1C5F110", Slot = "8")]
			get
			{
				return default(PlaybackOptions);
			}
		}

		[Token(Token = "0x170001A3")]
		public WaveFormat OutputFormat
		{
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x1C5F134", Offset = "0x1C5F134", VA = "0x1C5F134", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public TimeSpan InputFrameTime
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x1C5F1E4", Offset = "0x1C5F1E4", VA = "0x1C5F1E4", Slot = "7")]
			get
			{
				return default(TimeSpan);
			}
		}

		[Token(Token = "0x170001A5")]
		public IVolumeProvider VolumeProvider
		{
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0x1C60220", Offset = "0x1C60220", VA = "0x1C60220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC84A8", Offset = "0xFC84A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0x1C60228", Offset = "0x1C60228", VA = "0x1C60228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC84B8", Offset = "0xFC84B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		private float Dissonance.Audio.Playback.IVolumeProvider.TargetVolume
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0x1C60230", Offset = "0x1C60230", VA = "0x1C60230", Slot = "12")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x1C5F1EC", Offset = "0x1C5F1EC", VA = "0x1C5F1EC")]
		public DecoderPipeline([NotNull] IVoiceDecoder decoder, uint inputFrameSize, [NotNull] Action<DecoderPipeline> completionHandler, bool softClip = true)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1C5FAA0", Offset = "0x1C5FAA0", VA = "0x1C5FAA0")]
		private void RecycleFrame(VoicePacket packet)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1C5FB4C", Offset = "0x1C5FB4C", VA = "0x1C5FB4C", Slot = "10")]
		public void Prepare(SessionContext context)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x1C5FC28", Offset = "0x1C5FC28", VA = "0x1C5FC28", Slot = "11")]
		public bool Read(ArraySegment<float> samples)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1C5FE38", Offset = "0x1C5FE38", VA = "0x1C5FE38")]
		public float Push(VoicePacket packet, DateTime now)
		{
			return default(float);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x1C60120", Offset = "0x1C60120", VA = "0x1C60120")]
		public void Stop()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x1C60148", Offset = "0x1C60148", VA = "0x1C60148")]
		public void Reset()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1C5FD2C", Offset = "0x1C5FD2C", VA = "0x1C5FD2C")]
		public void FlushTransferBuffer()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x1C60308", Offset = "0x1C60308", VA = "0x1C60308", Slot = "13")]
		public void GetRemoteChannels(List<RemoteChannel> output)
		{
		}
	}
	[Token(Token = "0x2000146")]
	internal struct DesyncCalculator
	{
		[Token(Token = "0x400050E")]
		private const int MaxAllowedDesyncMillis = 1000;

		[Token(Token = "0x400050F")]
		private const float MaximumPlaybackAdjustment = 0.3f;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB274", Offset = "0xFBB274")]
		private int <DesyncMilliseconds>k__BackingField;

		[Token(Token = "0x170001A7")]
		internal int DesyncMilliseconds
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x1131934", Offset = "0x1131934", VA = "0x1131934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC84C8", Offset = "0xFC84C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000900")]
			[Address(RVA = "0x113193C", Offset = "0x113193C", VA = "0x113193C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC84D8", Offset = "0xFC84D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		internal float CorrectedPlaybackSpeed
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0x1131944", Offset = "0x1131944", VA = "0x1131944")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x1131950", Offset = "0x1131950", VA = "0x1131950")]
		internal void Update(TimeSpan ideal, TimeSpan actual)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x113197C", Offset = "0x113197C", VA = "0x113197C")]
		internal void Skip(int deltaDesyncMilliseconds)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1C606EC", Offset = "0x1C606EC", VA = "0x1C606EC")]
		private static int CalculateDesync(TimeSpan idealPlaybackPosition, TimeSpan actualPlaybackPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x1C6061C", Offset = "0x1C6061C", VA = "0x1C6061C")]
		private static float CalculateCorrectionFactor(float desyncMilliseconds)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000147")]
	internal class EncodedAudioBuffer
	{
		[Token(Token = "0x2000469")]
		public class VoicePacketComparer : IComparer<VoicePacket>
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x1C60960", Offset = "0x1C60960", VA = "0x1C60960", Slot = "4")]
			public int Compare(VoicePacket x, VoicePacket y)
			{
				return default(int);
			}

			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x1C60804", Offset = "0x1C60804", VA = "0x1C60804")]
			public VoicePacketComparer()
			{
			}
		}

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly MinHeap<VoicePacket> _heap;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<VoicePacket> _droppedFrameHandler;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _complete;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _count;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB284", Offset = "0xFBB284")]
		private uint <SequenceNumber>k__BackingField;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly PacketLossCalculator _loss;

		[Token(Token = "0x170001A9")]
		public int Count
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0x1C607EC", Offset = "0x1C607EC", VA = "0x1C607EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AA")]
		public uint SequenceNumber
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x1C607F4", Offset = "0x1C607F4", VA = "0x1C607F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC84E8", Offset = "0xFC84E8")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x1C607FC", Offset = "0x1C607FC", VA = "0x1C607FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC84F8", Offset = "0xFC84F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public float PacketLoss
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0x1C5D460", Offset = "0x1C5D460", VA = "0x1C5D460")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1C5D7B4", Offset = "0x1C5D7B4", VA = "0x1C5D7B4")]
		public EncodedAudioBuffer([NotNull] Action<VoicePacket> droppedFrameHandler)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x1C5E97C", Offset = "0x1C5E97C", VA = "0x1C5E97C")]
		public void Push(VoicePacket frame)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1C5EB24", Offset = "0x1C5EB24", VA = "0x1C5EB24")]
		public void Stop()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1C5DF0C", Offset = "0x1C5DF0C", VA = "0x1C5DF0C")]
		public bool Read(out VoicePacket? frame, out bool lostPacket)
		{
			return default(bool);
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1C5E7CC", Offset = "0x1C5E7CC", VA = "0x1C5E7CC")]
		public void Reset()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1C6080C", Offset = "0x1C6080C", VA = "0x1C6080C")]
		private bool IsComplete()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000148")]
	internal struct FrameFormat : IEquatable<FrameFormat>
	{
		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly Codec Codec;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly WaveFormat WaveFormat;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint FrameSize;

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x11319C8", Offset = "0x11319C8", VA = "0x11319C8")]
		public FrameFormat(Codec codec, WaveFormat waveFormat, uint frameSize)
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1131A00", Offset = "0x1131A00", VA = "0x1131A00", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1131A08", Offset = "0x1131A08", VA = "0x1131A08", Slot = "4")]
		public bool Equals(FrameFormat other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1131A40", Offset = "0x1131A40", VA = "0x1131A40", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000149")]
	internal class FrameToSampleConverter : ISampleSource
	{
		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IFrameSource _source;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float[] _temp;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _upstreamComplete;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _firstSample;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _lastSample;

		[Token(Token = "0x170001AC")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x1C60B0C", Offset = "0x1C60B0C", VA = "0x1C60B0C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1C5F710", Offset = "0x1C5F710", VA = "0x1C5F710")]
		public FrameToSampleConverter([NotNull] IFrameSource source)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1C60BC0", Offset = "0x1C60BC0", VA = "0x1C60BC0", Slot = "5")]
		public void Prepare(SessionContext context)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1C60C8C", Offset = "0x1C60C8C", VA = "0x1C60C8C", Slot = "6")]
		public bool Read(ArraySegment<float> samples)
		{
			return default(bool);
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x1C60F48", Offset = "0x1C60F48", VA = "0x1C60F48", Slot = "7")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200014A")]
	internal interface IDecoderPipeline
	{
		[Token(Token = "0x170001AD")]
		int BufferCount
		{
			[Token(Token = "0x600091B")]
			get;
		}

		[Token(Token = "0x170001AE")]
		TimeSpan BufferTime
		{
			[Token(Token = "0x600091C")]
			get;
		}

		[Token(Token = "0x170001AF")]
		float PacketLoss
		{
			[Token(Token = "0x600091D")]
			get;
		}

		[Token(Token = "0x170001B0")]
		TimeSpan InputFrameTime
		{
			[Token(Token = "0x600091E")]
			get;
		}

		[Token(Token = "0x170001B1")]
		PlaybackOptions PlaybackOptions
		{
			[Token(Token = "0x600091F")]
			get;
		}

		[Token(Token = "0x170001B2")]
		[NotNull]
		WaveFormat OutputFormat
		{
			[Token(Token = "0x6000920")]
			get;
		}

		[Token(Token = "0x6000921")]
		void Prepare(SessionContext context);

		[Token(Token = "0x6000922")]
		bool Read(ArraySegment<float> samples);
	}
	[Token(Token = "0x200014B")]
	internal interface IFrameSource
	{
		[Token(Token = "0x170001B3")]
		uint FrameSize
		{
			[Token(Token = "0x6000923")]
			get;
		}

		[Token(Token = "0x170001B4")]
		[NotNull]
		WaveFormat WaveFormat
		{
			[Token(Token = "0x6000924")]
			get;
		}

		[Token(Token = "0x6000925")]
		void Prepare(SessionContext context);

		[Token(Token = "0x6000926")]
		bool Read(ArraySegment<float> frame);

		[Token(Token = "0x6000927")]
		void Reset();
	}
	[Token(Token = "0x200014C")]
	public interface IPriorityManager
	{
		[Token(Token = "0x170001B5")]
		ChannelPriority TopPriority
		{
			[Token(Token = "0x6000928")]
			get;
		}
	}
	[Token(Token = "0x200014D")]
	internal class PriorityManager : IPriorityManager
	{
		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PlayerCollection _players;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB294", Offset = "0xFBB294")]
		private ChannelPriority <TopPriority>k__BackingField;

		[Token(Token = "0x170001B6")]
		public ChannelPriority TopPriority
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0x1C610F8", Offset = "0x1C610F8", VA = "0x1C610F8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8508", Offset = "0xFC8508")]
			get
			{
				return default(ChannelPriority);
			}
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x1C61100", Offset = "0x1C61100", VA = "0x1C61100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8518", Offset = "0xFC8518")]
			private set
			{
			}
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1C61108", Offset = "0x1C61108", VA = "0x1C61108")]
		public PriorityManager(PlayerCollection players)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x1C61148", Offset = "0x1C61148", VA = "0x1C61148")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x200014E")]
	internal interface IRemoteChannelProvider
	{
		[Token(Token = "0x600092E")]
		void GetRemoteChannels([NotNull] List<RemoteChannel> output);
	}
	[Token(Token = "0x200014F")]
	internal interface ISampleSource
	{
		[Token(Token = "0x170001B7")]
		[NotNull]
		WaveFormat WaveFormat
		{
			[Token(Token = "0x600092F")]
			get;
		}

		[Token(Token = "0x6000930")]
		void Prepare(SessionContext context);

		[Token(Token = "0x6000931")]
		bool Read(ArraySegment<float> samples);

		[Token(Token = "0x6000932")]
		void Reset();
	}
	[Token(Token = "0x2000150")]
	internal interface IVoicePlaybackInternal : IRemoteChannelProvider, IVoicePlayback
	{
		[Token(Token = "0x170001B8")]
		bool IsMuted
		{
			[Token(Token = "0x6000933")]
			get;
			[Token(Token = "0x6000934")]
			set;
		}

		[Token(Token = "0x170001B9")]
		bool AllowPositionalPlayback
		{
			[Token(Token = "0x6000938")]
			get;
			[Token(Token = "0x6000939")]
			set;
		}

		[Token(Token = "0x170001BA")]
		bool IsApplyingAudioSpatialization
		{
			[Token(Token = "0x600093A")]
			get;
		}

		[Token(Token = "0x170001BB")]
		float PlaybackVolume
		{
			[Token(Token = "0x600093C")]
			get;
			[Token(Token = "0x600093D")]
			set;
		}

		[Token(Token = "0x6000935")]
		void Reset();

		[Token(Token = "0x6000936")]
		void StartPlayback();

		[Token(Token = "0x6000937")]
		void StopPlayback();

		[Token(Token = "0x600093B")]
		void SetTransform(Vector3 position, Quaternion rotation);

		[Token(Token = "0x600093E")]
		void ReceiveAudioPacket(VoicePacket packet);
	}
	[Token(Token = "0x2000151")]
	public interface IVoicePlayback
	{
		[Token(Token = "0x170001BC")]
		string PlayerName
		{
			[Token(Token = "0x600093F")]
			get;
		}

		[Token(Token = "0x170001BD")]
		bool IsActive
		{
			[Token(Token = "0x6000940")]
			get;
		}

		[Token(Token = "0x170001BE")]
		bool IsSpeaking
		{
			[Token(Token = "0x6000941")]
			get;
		}

		[Token(Token = "0x170001BF")]
		float Amplitude
		{
			[Token(Token = "0x6000942")]
			get;
		}

		[Token(Token = "0x170001C0")]
		float? PacketLoss
		{
			[Token(Token = "0x6000943")]
			get;
		}

		[Token(Token = "0x170001C1")]
		float Jitter
		{
			[Token(Token = "0x6000944")]
			get;
		}

		[Token(Token = "0x170001C2")]
		ChannelPriority Priority
		{
			[Token(Token = "0x6000945")]
			get;
		}
	}
	[Token(Token = "0x2000152")]
	public struct PlaybackOptions
	{
		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool _isPositional;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private readonly float _amplitudeMultiplier;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly ChannelPriority _priority;

		[Token(Token = "0x170001C3")]
		public bool IsPositional
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x1131AA0", Offset = "0x1131AA0", VA = "0x1131AA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C4")]
		public float AmplitudeMultiplier
		{
			[Token(Token = "0x6000948")]
			[Address(RVA = "0x1131AA8", Offset = "0x1131AA8", VA = "0x1131AA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C5")]
		public ChannelPriority Priority
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x1131AB0", Offset = "0x1131AB0", VA = "0x1131AB0")]
			get
			{
				return default(ChannelPriority);
			}
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x1131A8C", Offset = "0x1131A8C", VA = "0x1131A8C")]
		public PlaybackOptions(bool isPositional, float amplitudeMultiplier, ChannelPriority priority)
		{
		}
	}
	[Token(Token = "0x2000153")]
	internal class Resampler : ISampleSource
	{
		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISampleSource _source;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaveFormat _outputFormat;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WdlResampler _resampler;

		[Token(Token = "0x170001C6")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x1C61448", Offset = "0x1C61448", VA = "0x1C61448", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1C5F9F8", Offset = "0x1C5F9F8", VA = "0x1C5F9F8")]
		public Resampler(ISampleSource source)
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x1C6146C", Offset = "0x1C6146C", VA = "0x1C6146C", Slot = "5")]
		public void Prepare(SessionContext context)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x1C61538", Offset = "0x1C61538", VA = "0x1C61538", Slot = "6")]
		public bool Read(ArraySegment<float> samples)
		{
			return default(bool);
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x1C61878", Offset = "0x1C61878", VA = "0x1C61878", Slot = "7")]
		public void Reset()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1C61344", Offset = "0x1C61344", VA = "0x1C61344")]
		private void OnAudioConfigurationChanged(bool deviceWasChanged)
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class SamplePlaybackComponent : MonoBehaviour
	{
		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly TimeSpan ResetDesync;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly float[] DesyncFixBuffer;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DesyncCalculator _desync;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long _totalSamplesRead;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] _temp;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[CanBeNull]
		private AudioFileWriter _diagnosticOutput;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB2B4", Offset = "0xFBB2B4")]
		private bool <MultiplyBySource>k__BackingField;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SessionContext _lastPlayedSessionContext;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReaderWriterLockSlim _sessionLock;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB2C4", Offset = "0xFBB2C4")]
		private SpeechSession? <Session>k__BackingField;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _arv;

		[Token(Token = "0x170001C7")]
		internal bool MultiplyBySource
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x1C61A1C", Offset = "0x1C61A1C", VA = "0x1C61A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8528", Offset = "0xFC8528")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x1C61A24", Offset = "0x1C61A24", VA = "0x1C61A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8538", Offset = "0xFC8538")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public bool HasActiveSession
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x1C61A30", Offset = "0x1C61A30", VA = "0x1C61A30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C9")]
		public SpeechSession? Session
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x1C61A7C", Offset = "0x1C61A7C", VA = "0x1C61A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8548", Offset = "0xFC8548")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x1C61A8C", Offset = "0x1C61A8C", VA = "0x1C61A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8558", Offset = "0xFC8558")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public TimeSpan PlaybackPosition
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x1C61ABC", Offset = "0x1C61ABC", VA = "0x1C61ABC")]
			get
			{
				return default(TimeSpan);
			}
		}

		[Token(Token = "0x170001CB")]
		public TimeSpan IdealPlaybackPosition
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x1C61C90", Offset = "0x1C61C90", VA = "0x1C61C90")]
			get
			{
				return default(TimeSpan);
			}
		}

		[Token(Token = "0x170001CC")]
		public TimeSpan Desync
		{
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x1C61E18", Offset = "0x1C61E18", VA = "0x1C61E18")]
			get
			{
				return default(TimeSpan);
			}
		}

		[Token(Token = "0x170001CD")]
		public float CorrectedPlaybackSpeed
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x1C61E84", Offset = "0x1C61E84", VA = "0x1C61E84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CE")]
		public float ARV
		{
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x1C61E90", Offset = "0x1C61E90", VA = "0x1C61E90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x1C61EB4", Offset = "0x1C61EB4", VA = "0x1C61EB4")]
		public void Play(SpeechSession session)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x1C621DC", Offset = "0x1C621DC", VA = "0x1C621DC")]
		public void Start()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1C62248", Offset = "0x1C62248", VA = "0x1C62248")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x1C6229C", Offset = "0x1C6229C", VA = "0x1C6229C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1C622F0", Offset = "0x1C622F0", VA = "0x1C622F0")]
		public void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1C621A4", Offset = "0x1C621A4", VA = "0x1C621A4")]
		private void ApplyReset()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x1C62814", Offset = "0x1C62814", VA = "0x1C62814")]
		internal static bool Skip(SpeechSession session, int desyncMilliseconds, out int deltaSamples, out int deltaDesyncMilliseconds)
		{
			return default(bool);
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1C62A9C", Offset = "0x1C62A9C", VA = "0x1C62A9C")]
		internal static bool Filter(SpeechSession session, [NotNull] float[] output, int channels, [NotNull] float[] temp, [CanBeNull] AudioFileWriter diagnosticOutput, out float arv, out int samplesRead, bool multiply)
		{
			return default(bool);
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1C62D60", Offset = "0x1C62D60", VA = "0x1C62D60")]
		public SamplePlaybackComponent()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public struct SessionContext : IEquatable<SessionContext>
	{
		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly string PlayerName;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly uint Id;

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x1131B54", Offset = "0x1131B54", VA = "0x1131B54")]
		public SessionContext([NotNull] string playerName, uint id)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x1131B5C", Offset = "0x1131B5C", VA = "0x1131B5C", Slot = "4")]
		public bool Equals(SessionContext other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1131BA0", Offset = "0x1131BA0", VA = "0x1131BA0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1131BA8", Offset = "0x1131BA8", VA = "0x1131BA8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000156")]
	internal class SoftClipSampleSource : ISampleSource
	{
		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISampleSource _upstream;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly OpusNative.OpusSoftClip _clipper;

		[Token(Token = "0x170001CF")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x1C63098", Offset = "0x1C63098", VA = "0x1C63098", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1C5F8B4", Offset = "0x1C5F8B4", VA = "0x1C5F8B4")]
		public SoftClipSampleSource([NotNull] ISampleSource upstream)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1C63148", Offset = "0x1C63148", VA = "0x1C63148", Slot = "5")]
		public void Prepare(SessionContext context)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x1C63214", Offset = "0x1C63214", VA = "0x1C63214", Slot = "6")]
		public bool Read(ArraySegment<float> samples)
		{
			return default(bool);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1C63304", Offset = "0x1C63304", VA = "0x1C63304", Slot = "7")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public struct SpeechSession
	{
		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] PreplayDesyncFixBuffer;

		[Token(Token = "0x400053D")]
		private const float MinimumDelayFactor = 1.25f;

		[Token(Token = "0x400053E")]
		private const float MaximumDelay = 0.75f;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int FixedDelayToleranceTicks;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly float InitialBufferDelay;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float _minimumDelay;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly IRemoteChannelProvider _channels;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDecoderPipeline _pipeline;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly SessionContext _context;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly DateTime _creationTime;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IJitterEstimator _jitter;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DateTime _startTime;

		[Token(Token = "0x170001D0")]
		public int BufferCount
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x1131C1C", Offset = "0x1131C1C", VA = "0x1131C1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D1")]
		public SessionContext Context
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x1131C24", Offset = "0x1131C24", VA = "0x1131C24")]
			get
			{
				return default(SessionContext);
			}
		}

		[Token(Token = "0x170001D2")]
		public PlaybackOptions PlaybackOptions
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x1131C30", Offset = "0x1131C30", VA = "0x1131C30")]
			get
			{
				return default(PlaybackOptions);
			}
		}

		[Token(Token = "0x170001D3")]
		[NotNull]
		public WaveFormat OutputWaveFormat
		{
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x1131C4C", Offset = "0x1131C4C", VA = "0x1131C4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		internal float PacketLoss
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x1131C54", Offset = "0x1131C54", VA = "0x1131C54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D5")]
		internal IRemoteChannelProvider Channels
		{
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x1131C5C", Offset = "0x1131C5C", VA = "0x1131C5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public DateTime TargetActivationTime
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x1131C64", Offset = "0x1131C64", VA = "0x1131C64")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x170001D7")]
		public DateTime ActivationTime
		{
			[Token(Token = "0x6000975")]
			[Address(RVA = "0x1131C6C", Offset = "0x1131C6C", VA = "0x1131C6C")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x170001D8")]
		public TimeSpan Delay
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x1131C74", Offset = "0x1131C74", VA = "0x1131C74")]
			get
			{
				return default(TimeSpan);
			}
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x1131C7C", Offset = "0x1131C7C", VA = "0x1131C7C")]
		private SpeechSession(SessionContext context, IJitterEstimator jitter, IDecoderPipeline pipeline, IRemoteChannelProvider channels, DateTime now)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x1C639C0", Offset = "0x1C639C0", VA = "0x1C639C0")]
		internal static SpeechSession Create(SessionContext context, IJitterEstimator jitter, IDecoderPipeline pipeline, IRemoteChannelProvider channels, DateTime now)
		{
			return default(SpeechSession);
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x1131C84", Offset = "0x1131C84", VA = "0x1131C84")]
		public void Prepare(DateTime now, DateTime timeOfFirstDequeueAttempt)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x1131C8C", Offset = "0x1131C8C", VA = "0x1131C8C")]
		public bool Read(ArraySegment<float> samples)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000158")]
	internal interface IJitterEstimator
	{
		[Token(Token = "0x170001D9")]
		float Jitter
		{
			[Token(Token = "0x600097C")]
			get;
		}

		[Token(Token = "0x170001DA")]
		float Confidence
		{
			[Token(Token = "0x600097D")]
			get;
		}
	}
	[Token(Token = "0x2000159")]
	internal class SpeechSessionStream : IJitterEstimator
	{
		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB95A4", Offset = "0xFB95A4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FrameFormat format;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<DecoderPipeline> <>9__1;

			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x1C64E10", Offset = "0x1C64E10", VA = "0x1C64E10")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x1C65070", Offset = "0x1C65070", VA = "0x1C65070")]
			internal DecoderPipeline <GetOrCreateDecoderPipeline>b__0()
			{
				return null;
			}

			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x1C65194", Offset = "0x1C65194", VA = "0x1C65194")]
			internal void <GetOrCreateDecoderPipeline>b__1(DecoderPipeline p)
			{
			}
		}

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<SpeechSession> _awaitingActivation;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IVolumeProvider _volumeProvider;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DateTime? _queueHeadFirstDequeueAttempt;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DecoderPipeline _active;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private uint _currentId;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _playerName;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly WindowDeviationCalculator _arrivalJitterMeter;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<FrameFormat, ConcurrentPool<DecoderPipeline>> FreePipelines;

		[Token(Token = "0x170001DB")]
		public string PlayerName
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x1C64338", Offset = "0x1C64338", VA = "0x1C64338")]
			get
			{
				return null;
			}
			[Token(Token = "0x600097F")]
			[Address(RVA = "0x1C64340", Offset = "0x1C64340", VA = "0x1C64340")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		private float Dissonance.Audio.Playback.IJitterEstimator.Jitter
		{
			[Token(Token = "0x6000980")]
			[Address(RVA = "0x1C643B0", Offset = "0x1C643B0", VA = "0x1C643B0", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DD")]
		private float Dissonance.Audio.Playback.IJitterEstimator.Confidence
		{
			[Token(Token = "0x6000981")]
			[Address(RVA = "0x1C643CC", Offset = "0x1C643CC", VA = "0x1C643CC", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x1C643E8", Offset = "0x1C643E8", VA = "0x1C643E8")]
		public SpeechSessionStream(IVolumeProvider volumeProvider)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x1C644B0", Offset = "0x1C644B0", VA = "0x1C644B0")]
		public void StartSession(FrameFormat format, [Optional] DateTime? now, [Optional][CanBeNull] IJitterEstimator jitter)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x1C6493C", Offset = "0x1C6493C", VA = "0x1C6493C")]
		public SpeechSession? TryDequeueSession([Optional] DateTime? now)
		{
			return null;
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x1C64B28", Offset = "0x1C64B28", VA = "0x1C64B28")]
		public void ReceiveFrame(VoicePacket packet, [Optional] DateTime? now)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x1C64D34", Offset = "0x1C64D34", VA = "0x1C64D34")]
		public void StopSession(bool logNoSessionError = true)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x1C646E0", Offset = "0x1C646E0", VA = "0x1C646E0")]
		[NotNull]
		private static DecoderPipeline GetOrCreateDecoderPipeline(FrameFormat format, [NotNull] IVolumeProvider volume)
		{
			return null;
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x1C64E18", Offset = "0x1C64E18", VA = "0x1C64E18")]
		private static void Recycle(FrameFormat format, DecoderPipeline pipeline)
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class VoicePlayback : MonoBehaviour, IVoicePlaybackInternal, IRemoteChannelProvider, IVoicePlayback, IVolumeProvider
	{
		[Serializable]
		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB95B4", Offset = "0xFB95B4")]
		private sealed class <>c
		{
			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static AudioClip.PCMReaderCallback <>9__54_0;

			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x1C665F0", Offset = "0x1C665F0", VA = "0x1C665F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0x1C665F8", Offset = "0x1C665F8", VA = "0x1C665F8")]
			internal void <OnEnable>b__54_0(float[] buf)
			{
			}
		}

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly SpeechSessionStream _sessions;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlaybackOptions _cachedPlaybackOptions;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB2D4", Offset = "0xFBB2D4")]
		private AudioSource <AudioSource>k__BackingField;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB2E4", Offset = "0xFBB2E4")]
		private bool <Dissonance.Audio.Playback.IVoicePlaybackInternal.AllowPositionalPlayback>k__BackingField;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SamplePlaybackComponent _player;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CodecSettings _codecSettings;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FrameFormat _frameFormat;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float? _savedSpatialBlend;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB2F4", Offset = "0xFBB2F4")]
		private bool <Dissonance.Audio.Playback.IVoicePlaybackInternal.IsMuted>k__BackingField;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB304", Offset = "0xFBB304")]
		private float <Dissonance.Audio.Playback.IVoicePlaybackInternal.PlaybackVolume>k__BackingField;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB314", Offset = "0xFBB314")]
		private bool <IsApplyingAudioSpatialization>k__BackingField;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB324", Offset = "0xFBB324")]
		private IPriorityManager <PriorityManager>k__BackingField;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB334", Offset = "0xFBB334")]
		private IVolumeProvider <VolumeProvider>k__BackingField;

		[Token(Token = "0x170001DE")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x1C65244", Offset = "0x1C65244", VA = "0x1C65244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8578", Offset = "0xFC8578")]
			get
			{
				return null;
			}
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x1C6524C", Offset = "0x1C6524C", VA = "0x1C6524C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8588", Offset = "0xFC8588")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		private bool Dissonance.Audio.Playback.IVoicePlaybackInternal.AllowPositionalPlayback
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0x1C65254", Offset = "0x1C65254", VA = "0x1C65254", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8598", Offset = "0xFC8598")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x1C6525C", Offset = "0x1C6525C", VA = "0x1C6525C", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC85A8", Offset = "0xFC85A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public bool IsActive
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x1C65268", Offset = "0x1C65268", VA = "0x1C65268", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E1")]
		public string PlayerName
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x1C65270", Offset = "0x1C65270", VA = "0x1C65270", Slot = "17")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x1C6528C", Offset = "0x1C6528C", VA = "0x1C6528C")]
			internal set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public CodecSettings CodecSettings
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x1C652A4", Offset = "0x1C652A4", VA = "0x1C652A4")]
			get
			{
				return default(CodecSettings);
			}
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x1C652B4", Offset = "0x1C652B4", VA = "0x1C652B4")]
			internal set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public bool IsSpeaking
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x1C653B4", Offset = "0x1C653B4", VA = "0x1C653B4", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E4")]
		public float Amplitude
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0x1C65470", Offset = "0x1C65470", VA = "0x1C65470", Slot = "20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E5")]
		public ChannelPriority Priority
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x1C6550C", Offset = "0x1C6550C", VA = "0x1C6550C", Slot = "23")]
			get
			{
				return default(ChannelPriority);
			}
		}

		[Token(Token = "0x170001E6")]
		private bool Dissonance.Audio.Playback.IVoicePlaybackInternal.IsMuted
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x1C655A4", Offset = "0x1C655A4", VA = "0x1C655A4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC85B8", Offset = "0xFC85B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x1C655AC", Offset = "0x1C655AC", VA = "0x1C655AC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC85C8", Offset = "0xFC85C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		private float Dissonance.Audio.Playback.IVoicePlaybackInternal.PlaybackVolume
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x1C655B8", Offset = "0x1C655B8", VA = "0x1C655B8", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC85D8", Offset = "0xFC85D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x1C655C0", Offset = "0x1C655C0", VA = "0x1C655C0", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC85E8", Offset = "0xFC85E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		private bool IsApplyingAudioSpatialization
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0x1C655C8", Offset = "0x1C655C8", VA = "0x1C655C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC85F8", Offset = "0xFC85F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600099B")]
			[Address(RVA = "0x1C655D0", Offset = "0x1C655D0", VA = "0x1C655D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8608", Offset = "0xFC8608")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		private bool Dissonance.Audio.Playback.IVoicePlaybackInternal.IsApplyingAudioSpatialization
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x1C655DC", Offset = "0x1C655DC", VA = "0x1C655DC", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EA")]
		internal IPriorityManager PriorityManager
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x1C655E4", Offset = "0x1C655E4", VA = "0x1C655E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8618", Offset = "0xFC8618")]
			get
			{
				return null;
			}
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x1C655EC", Offset = "0x1C655EC", VA = "0x1C655EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8628", Offset = "0xFC8628")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		private float? Dissonance.Audio.Playback.IVoicePlayback.PacketLoss
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x1C655F4", Offset = "0x1C655F4", VA = "0x1C655F4", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		private float Dissonance.Audio.Playback.IVoicePlayback.Jitter
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x1C656D4", Offset = "0x1C656D4", VA = "0x1C656D4", Slot = "22")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001ED")]
		[CanBeNull]
		internal IVolumeProvider VolumeProvider
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x1C66158", Offset = "0x1C66158", VA = "0x1C66158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8638", Offset = "0xFC8638")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x1C66160", Offset = "0x1C66160", VA = "0x1C66160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8648", Offset = "0xFC8648")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		private float Dissonance.Audio.Playback.IVolumeProvider.TargetVolume
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x1C66168", Offset = "0x1C66168", VA = "0x1C66168", Slot = "24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1C65784", Offset = "0x1C65784", VA = "0x1C65784")]
		public VoicePlayback()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x1C65868", Offset = "0x1C65868", VA = "0x1C65868")]
		public void Awake()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x1C65958", Offset = "0x1C65958", VA = "0x1C65958", Slot = "6")]
		private void Dissonance.Audio.Playback.IVoicePlaybackInternal.Reset()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1C65A6C", Offset = "0x1C65A6C", VA = "0x1C65A6C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x1C65C20", Offset = "0x1C65C20", VA = "0x1C65C20")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x1C65C3C", Offset = "0x1C65C3C", VA = "0x1C65C3C")]
		public void Update()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1C65E28", Offset = "0x1C65E28", VA = "0x1C65E28")]
		private void UpdatePositionalPlayback()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1C65FE8", Offset = "0x1C65FE8", VA = "0x1C65FE8", Slot = "12")]
		private void Dissonance.Audio.Playback.IVoicePlaybackInternal.SetTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1C6607C", Offset = "0x1C6607C", VA = "0x1C6607C", Slot = "7")]
		private void Dissonance.Audio.Playback.IVoicePlaybackInternal.StartPlayback()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x1C660D8", Offset = "0x1C660D8", VA = "0x1C660D8", Slot = "8")]
		private void Dissonance.Audio.Playback.IVoicePlaybackInternal.StopPlayback()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1C660F4", Offset = "0x1C660F4", VA = "0x1C660F4", Slot = "15")]
		private void Dissonance.Audio.Playback.IVoicePlaybackInternal.ReceiveAudioPacket(VoicePacket packet)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1C66394", Offset = "0x1C66394", VA = "0x1C66394", Slot = "16")]
		private void Dissonance.Audio.Playback.IRemoteChannelProvider.GetRemoteChannels(List<RemoteChannel> output)
		{
		}
	}
	[Token(Token = "0x200015B")]
	internal class VolumeRampedFrameSource : IFrameSource
	{
		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IFrameSource _source;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IVolumeProvider _volumeProvider;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _targetVolume;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _currentVolume;

		[Token(Token = "0x170001EF")]
		public uint FrameSize
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x1C66654", Offset = "0x1C66654", VA = "0x1C66654", Slot = "4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001F0")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x1C66704", Offset = "0x1C66704", VA = "0x1C66704", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1C5F6C0", Offset = "0x1C5F6C0", VA = "0x1C5F6C0")]
		public VolumeRampedFrameSource(IFrameSource source, IVolumeProvider volumeProvider)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1C667B8", Offset = "0x1C667B8", VA = "0x1C667B8", Slot = "6")]
		public void Prepare(SessionContext context)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1C66884", Offset = "0x1C66884", VA = "0x1C66884", Slot = "7")]
		public bool Read(ArraySegment<float> frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1C66A10", Offset = "0x1C66A10", VA = "0x1C66A10")]
		private static void ApplyFlatAttenuation(ArraySegment<float> frame, float volume)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1C66B40", Offset = "0x1C66B40", VA = "0x1C66B40")]
		private static void ApplyRampedAttenuation(ArraySegment<float> frame, float start, float end)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1C66C78", Offset = "0x1C66C78", VA = "0x1C66C78", Slot = "8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200015C")]
	internal interface IVolumeProvider
	{
		[Token(Token = "0x170001F1")]
		float TargetVolume
		{
			[Token(Token = "0x60009B9")]
			get;
		}
	}
}
namespace Dissonance.Audio.Codecs
{
	[Token(Token = "0x200015D")]
	public enum Codec : byte
	{
		[Token(Token = "0x4000564")]
		Identity,
		[Token(Token = "0x4000565")]
		Opus
	}
	[Token(Token = "0x200015E")]
	public struct EncodedBuffer
	{
		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ArraySegment<byte>? Encoded;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool PacketLost;

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x1131874", Offset = "0x1131874", VA = "0x1131874")]
		public EncodedBuffer(ArraySegment<byte>? encoded, bool packetLost)
		{
		}
	}
	[Token(Token = "0x200015F")]
	internal interface IVoiceDecoder : IDisposable
	{
		[Token(Token = "0x170001F2")]
		[NotNull]
		WaveFormat Format
		{
			[Token(Token = "0x60009BB")]
			get;
		}

		[Token(Token = "0x60009BC")]
		void Reset();

		[Token(Token = "0x60009BD")]
		int Decode(EncodedBuffer input, ArraySegment<float> output);
	}
	[Token(Token = "0x2000160")]
	internal interface IVoiceEncoder : IDisposable
	{
		[Token(Token = "0x170001F3")]
		float PacketLoss
		{
			[Token(Token = "0x60009BE")]
			set;
		}

		[Token(Token = "0x170001F4")]
		int FrameSize
		{
			[Token(Token = "0x60009BF")]
			get;
		}

		[Token(Token = "0x170001F5")]
		int SampleRate
		{
			[Token(Token = "0x60009C0")]
			get;
		}

		[Token(Token = "0x60009C1")]
		ArraySegment<byte> Encode(ArraySegment<float> samples, ArraySegment<byte> array);

		[Token(Token = "0x60009C2")]
		void Reset();
	}
}
namespace Dissonance.Audio.Codecs.Silence
{
	[Token(Token = "0x2000161")]
	internal class SilenceDecoder : IVoiceDecoder, IDisposable
	{
		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int _frameSize;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly WaveFormat _format;

		[Token(Token = "0x170001F6")]
		public WaveFormat Format
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x1C5D0B4", Offset = "0x1C5D0B4", VA = "0x1C5D0B4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x1C5D0BC", Offset = "0x1C5D0BC", VA = "0x1C5D0BC")]
		public SilenceDecoder(FrameFormat frameFormat)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1C5D0F8", Offset = "0x1C5D0F8", VA = "0x1C5D0F8", Slot = "7")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x1C5D0FC", Offset = "0x1C5D0FC", VA = "0x1C5D0FC", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1C5D100", Offset = "0x1C5D100", VA = "0x1C5D100", Slot = "6")]
		public int Decode(EncodedBuffer input, ArraySegment<float> output)
		{
			return default(int);
		}
	}
}
namespace Dissonance.Audio.Codecs.Opus
{
	[Token(Token = "0x2000162")]
	internal static class BandwidthExtensions
	{
		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x1C599E4", Offset = "0x1C599E4", VA = "0x1C599E4")]
		public static int SampleRate(this OpusNative.Bandwidth bandwidth)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000163")]
	internal class OpusNative
	{
		[Token(Token = "0x200046C")]
		private static class OpusNativeMethods
		{
			[PreserveSig]
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0x1C5BD50", Offset = "0x1C5BD50", VA = "0x1C5BD50")]
			internal static extern IntPtr opus_get_version_string();

			[PreserveSig]
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x1C5C81C", Offset = "0x1C5C81C", VA = "0x1C5C81C")]
			internal static extern IntPtr opus_encoder_create(int samplingRate, int channels, int application, out int error);

			[PreserveSig]
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0x1C5C9E4", Offset = "0x1C5C9E4", VA = "0x1C5C9E4")]
			internal static extern void opus_encoder_destroy(IntPtr encoder);

			[PreserveSig]
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x1C5C8C4", Offset = "0x1C5C8C4", VA = "0x1C5C8C4")]
			internal static extern int opus_encode_float(IntPtr encoder, IntPtr floatPcm, int frameSize, IntPtr byteEncoded, int maxEncodedLength);

			[PreserveSig]
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x1C5BDE0", Offset = "0x1C5BDE0", VA = "0x1C5BDE0")]
			internal static extern IntPtr opus_decoder_create(int samplingRate, int channels, out int error);

			[PreserveSig]
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0x1C5BF58", Offset = "0x1C5BF58", VA = "0x1C5BF58")]
			internal static extern IntPtr opus_decoder_destroy(IntPtr decoder);

			[PreserveSig]
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0x1C5BFD8", Offset = "0x1C5BFD8", VA = "0x1C5BFD8")]
			internal static extern int opus_decode_float(IntPtr decoder, IntPtr byteData, int dataLength, IntPtr floatPcm, int frameSize, bool decodeFEC);

			[PreserveSig]
			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0x1C5CB40", Offset = "0x1C5CB40", VA = "0x1C5CB40")]
			internal static extern int opus_decoder_ctl(IntPtr st, Ctl request, out int value);

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x1C5CBD8", Offset = "0x1C5CBD8", VA = "0x1C5CBD8")]
			internal static int dissonance_opus_decoder_ctl_out(IntPtr st, Ctl request, out int value)
			{
				return default(int);
			}

			[PreserveSig]
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x1C5CBDC", Offset = "0x1C5CBDC", VA = "0x1C5CBDC")]
			internal static extern int opus_decoder_ctl(IntPtr st, Ctl request, int value);

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x1C5C098", Offset = "0x1C5C098", VA = "0x1C5C098")]
			internal static int dissonance_opus_decoder_ctl_in(IntPtr st, Ctl request, int value)
			{
				return default(int);
			}

			[PreserveSig]
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x1C5CC70", Offset = "0x1C5CC70", VA = "0x1C5CC70")]
			internal static extern int opus_encoder_ctl(IntPtr st, Ctl request, out int value);

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x1C5C978", Offset = "0x1C5C978", VA = "0x1C5C978")]
			internal static int dissonance_opus_encoder_ctl_out(IntPtr st, Ctl request, out int value)
			{
				return default(int);
			}

			[PreserveSig]
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x1C5CD08", Offset = "0x1C5CD08", VA = "0x1C5CD08")]
			internal static extern int opus_encoder_ctl(IntPtr st, Ctl request, int value);

			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x1C5C974", Offset = "0x1C5C974", VA = "0x1C5C974")]
			internal static int dissonance_opus_encoder_ctl_in(IntPtr st, Ctl request, int value)
			{
				return default(int);
			}

			[PreserveSig]
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x1C5CD9C", Offset = "0x1C5CD9C", VA = "0x1C5CD9C")]
			internal static extern void opus_pcm_soft_clip(IntPtr pcm, int frameSize, int channels, float[] softClipMem);
		}

		[Token(Token = "0x200046D")]
		private enum Ctl
		{
			[Token(Token = "0x400130F")]
			SetBitrateRequest = 4002,
			[Token(Token = "0x4001310")]
			GetBitrateRequest = 4003,
			[Token(Token = "0x4001311")]
			SetInbandFECRequest = 4012,
			[Token(Token = "0x4001312")]
			GetInbandFECRequest = 4013,
			[Token(Token = "0x4001313")]
			SetPacketLossPercRequest = 4014,
			[Token(Token = "0x4001314")]
			GetPacketLossPercRequest = 4015,
			[Token(Token = "0x4001315")]
			ResetState = 4028
		}

		[Token(Token = "0x200046E")]
		public enum Bandwidth
		{
			[Token(Token = "0x4001317")]
			Narrowband = 1101,
			[Token(Token = "0x4001318")]
			Mediumband,
			[Token(Token = "0x4001319")]
			Wideband,
			[Token(Token = "0x400131A")]
			SuperWideband,
			[Token(Token = "0x400131B")]
			Fullband
		}

		[Token(Token = "0x200046F")]
		private enum Application
		{
			[Token(Token = "0x400131D")]
			Voip = 2048,
			[Token(Token = "0x400131E")]
			Audio = 2049,
			[Token(Token = "0x400131F")]
			RestrictedLowLatency = 2051
		}

		[Token(Token = "0x2000470")]
		private enum OpusErrors
		{
			[Token(Token = "0x4001321")]
			Ok = 0,
			[Token(Token = "0x4001322")]
			BadArg = -1,
			[Token(Token = "0x4001323")]
			BufferToSmall = -2,
			[Token(Token = "0x4001324")]
			InternalError = -3,
			[Token(Token = "0x4001325")]
			InvalidPacket = -4,
			[Token(Token = "0x4001326")]
			Unimplemented = -5,
			[Token(Token = "0x4001327")]
			InvalidState = -6,
			[Token(Token = "0x4001328")]
			AllocFail = -7
		}

		[Token(Token = "0x2000471")]
		public class OpusException : Exception
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x1C5BE78", Offset = "0x1C5BE78", VA = "0x1C5BE78")]
			public OpusException(string message)
			{
			}
		}

		[Token(Token = "0x2000472")]
		public sealed class OpusEncoder : IDisposable
		{
			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Log Log;

			[Token(Token = "0x400132A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly LockedValue<IntPtr> _encoder;

			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _packetLoss;

			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private bool _disposed;

			[Token(Token = "0x170004EB")]
			public int Bitrate
			{
				[Token(Token = "0x6001DDD")]
				[Address(RVA = "0x1C5C178", Offset = "0x1C5C178", VA = "0x1C5C178")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001DDE")]
				[Address(RVA = "0x1C5AF70", Offset = "0x1C5AF70", VA = "0x1C5AF70")]
				set
				{
				}
			}

			[Token(Token = "0x170004EC")]
			public bool EnableForwardErrorCorrection
			{
				[Token(Token = "0x6001DDF")]
				[Address(RVA = "0x1C5C7AC", Offset = "0x1C5C7AC", VA = "0x1C5C7AC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001DE0")]
				[Address(RVA = "0x1C5AE2C", Offset = "0x1C5AE2C", VA = "0x1C5AE2C")]
				set
				{
				}
			}

			[Token(Token = "0x170004ED")]
			public float PacketLoss
			{
				[Token(Token = "0x6001DE1")]
				[Address(RVA = "0x1C5C7E0", Offset = "0x1C5C7E0", VA = "0x1C5C7E0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001DE2")]
				[Address(RVA = "0x1C5A8EC", Offset = "0x1C5A8EC", VA = "0x1C5A8EC")]
				set
				{
				}
			}

			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x1C5AB4C", Offset = "0x1C5AB4C", VA = "0x1C5AB4C")]
			public OpusEncoder(int srcSamplingRate, int srcChannelCount)
			{
			}

			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x1C5B334", Offset = "0x1C5B334", VA = "0x1C5B334")]
			public int EncodeFloats(ArraySegment<float> sourcePcm, ArraySegment<byte> dstEncoded)
			{
				return default(int);
			}

			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x1C5B844", Offset = "0x1C5B844", VA = "0x1C5B844")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x1C5C4A8", Offset = "0x1C5C4A8", VA = "0x1C5C4A8")]
			private int OpusCtlIn(Ctl ctl, int value)
			{
				return default(int);
			}

			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x1C5C1A4", Offset = "0x1C5C1A4", VA = "0x1C5C1A4")]
			private int OpusCtlOut(Ctl ctl, out int value)
			{
				return default(int);
			}

			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0x1C5C97C", Offset = "0x1C5C97C", VA = "0x1C5C97C", Slot = "1")]
			~OpusEncoder()
			{
			}

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x1C5BA18", Offset = "0x1C5BA18", VA = "0x1C5BA18", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x2000473")]
		public sealed class OpusDecoder : IDisposable
		{
			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Log Log;

			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly LockedValue<IntPtr> _decoder;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC25DC", Offset = "0xFC25DC")]
			private bool <EnableForwardErrorCorrection>k__BackingField;

			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			private bool _disposed;

			[Token(Token = "0x170004EE")]
			public bool EnableForwardErrorCorrection
			{
				[Token(Token = "0x6001DEB")]
				[Address(RVA = "0x1C5BDCC", Offset = "0x1C5BDCC", VA = "0x1C5BDCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC49C", Offset = "0xFCC49C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001DEC")]
				[Address(RVA = "0x1C5BDD4", Offset = "0x1C5BDD4", VA = "0x1C5BDD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC4AC", Offset = "0xFCC4AC")]
				set
				{
				}
			}

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x1C59CEC", Offset = "0x1C59CEC", VA = "0x1C59CEC")]
			public OpusDecoder(int outputSampleRate, int outputChannelCount)
			{
			}

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0x1C5BEF0", Offset = "0x1C5BEF0", VA = "0x1C5BEF0", Slot = "1")]
			~OpusDecoder()
			{
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x1C5A000", Offset = "0x1C5A000", VA = "0x1C5A000", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x1C5A328", Offset = "0x1C5A328", VA = "0x1C5A328")]
			public int DecodeFloats(EncodedBuffer srcEncodedBuffer, ArraySegment<float> dstBuffer)
			{
				return default(int);
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x1C5A1C4", Offset = "0x1C5A1C4", VA = "0x1C5A1C4")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000474")]
		public sealed class OpusSoftClip
		{
			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly bool _disabled;

			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float[] _memory;

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x1C5CE4C", Offset = "0x1C5CE4C", VA = "0x1C5CE4C")]
			public OpusSoftClip(int channels = 1)
			{
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x1C5CFA0", Offset = "0x1C5CFA0", VA = "0x1C5CFA0")]
			public void Clip(ArraySegment<float> samples)
			{
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x1C5D090", Offset = "0x1C5D090", VA = "0x1C5D090")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x1C5BCE0", Offset = "0x1C5BCE0", VA = "0x1C5BCE0")]
		[NotNull]
		public static string OpusVersion()
		{
			return null;
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x1C5BDC4", Offset = "0x1C5BDC4", VA = "0x1C5BDC4")]
		public OpusNative()
		{
		}
	}
	[Token(Token = "0x2000164")]
	internal class OpusDecoder : IVoiceDecoder, IDisposable
	{
		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly WaveFormat _format;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OpusNative.OpusDecoder _decoder;

		[Token(Token = "0x170001F7")]
		public WaveFormat Format
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x1C59BF0", Offset = "0x1C59BF0", VA = "0x1C59BF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x1C59BF8", Offset = "0x1C59BF8", VA = "0x1C59BF8")]
		public OpusDecoder([NotNull] WaveFormat format, bool fec = true)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x1C59FCC", Offset = "0x1C59FCC", VA = "0x1C59FCC", Slot = "7")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x1C5A1AC", Offset = "0x1C5A1AC", VA = "0x1C5A1AC", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x1C5A2EC", Offset = "0x1C5A2EC", VA = "0x1C5A2EC", Slot = "6")]
		public int Decode(EncodedBuffer input, ArraySegment<float> output)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000165")]
	internal class OpusEncoder : IVoiceEncoder, IDisposable
	{
		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly OpusNative.OpusEncoder _encoder;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] PermittedFrameSizesSamples;

		[Token(Token = "0x4000570")]
		public const int FixedSampleRate = 48000;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int _frameSize;

		[Token(Token = "0x170001F8")]
		public int SampleRate
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x1C5A8CC", Offset = "0x1C5A8CC", VA = "0x1C5A8CC", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F9")]
		public float PacketLoss
		{
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x1C5A8D4", Offset = "0x1C5A8D4", VA = "0x1C5A8D4", Slot = "4")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public int FrameSize
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0x1C5AA54", Offset = "0x1C5AA54", VA = "0x1C5AA54", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1C5AA5C", Offset = "0x1C5AA5C", VA = "0x1C5AA5C")]
		public OpusEncoder(AudioQuality quality, FrameSize frameSize, bool fec = true)
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x1C5AEB0", Offset = "0x1C5AEB0", VA = "0x1C5AEB0")]
		private static int GetTargetBitrate(AudioQuality quality)
		{
			return default(int);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x1C5AF7C", Offset = "0x1C5AF7C", VA = "0x1C5AF7C")]
		public static int GetFrameSize(FrameSize size)
		{
			return default(int);
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1C5B168", Offset = "0x1C5B168", VA = "0x1C5B168", Slot = "7")]
		public ArraySegment<byte> Encode(ArraySegment<float> samples, ArraySegment<byte> encodedBuffer)
		{
			return default(ArraySegment<byte>);
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x1C5B82C", Offset = "0x1C5B82C", VA = "0x1C5B82C", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x1C5BA00", Offset = "0x1C5BA00", VA = "0x1C5BA00", Slot = "9")]
		public void Dispose()
		{
		}
	}
}
namespace Dissonance.Audio.Codecs.Identity
{
	[Token(Token = "0x2000166")]
	internal class IdentityDecoder : IVoiceDecoder, IDisposable
	{
		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly WaveFormat _format;

		[Token(Token = "0x170001FB")]
		public WaveFormat Format
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x1C59674", Offset = "0x1C59674", VA = "0x1C59674", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x1C5967C", Offset = "0x1C5967C", VA = "0x1C5967C")]
		public IdentityDecoder(WaveFormat format)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x1C596B0", Offset = "0x1C596B0", VA = "0x1C596B0", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x1C596B4", Offset = "0x1C596B4", VA = "0x1C596B4", Slot = "6")]
		public int Decode(EncodedBuffer input, ArraySegment<float> output)
		{
			return default(int);
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x1C59844", Offset = "0x1C59844", VA = "0x1C59844", Slot = "7")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000167")]
	internal class IdentityEncoder : IVoiceEncoder, IDisposable
	{
		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int _sampleRate;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int _frameSize;

		[Token(Token = "0x170001FC")]
		public float PacketLoss
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x1C59848", Offset = "0x1C59848", VA = "0x1C59848", Slot = "4")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public int FrameSize
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x1C5984C", Offset = "0x1C5984C", VA = "0x1C5984C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001FE")]
		public int SampleRate
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x1C59854", Offset = "0x1C59854", VA = "0x1C59854", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x1C5985C", Offset = "0x1C5985C", VA = "0x1C5985C")]
		public IdentityEncoder(int sampleRate, int frameSize)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1C59894", Offset = "0x1C59894", VA = "0x1C59894", Slot = "7")]
		public ArraySegment<byte> Encode(ArraySegment<float> samples, ArraySegment<byte> array)
		{
			return default(ArraySegment<byte>);
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x1C599DC", Offset = "0x1C599DC", VA = "0x1C599DC", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1C599E0", Offset = "0x1C599E0", VA = "0x1C599E0", Slot = "9")]
		public void Dispose()
		{
		}
	}
}
namespace Dissonance.Audio.Capture
{
	[Token(Token = "0x2000168")]
	public enum AecSuppressionLevels
	{
		[Token(Token = "0x4000576")]
		Disabled = -1,
		[Token(Token = "0x4000577")]
		Low,
		[Token(Token = "0x4000578")]
		Moderate,
		[Token(Token = "0x4000579")]
		High
	}
	[Token(Token = "0x2000169")]
	public enum AecmRoutingMode
	{
		[Token(Token = "0x400057B")]
		Disabled = -1,
		[Token(Token = "0x400057C")]
		QuietEarpieceOrHeadset,
		[Token(Token = "0x400057D")]
		Earpiece,
		[Token(Token = "0x400057E")]
		LoudEarpiece,
		[Token(Token = "0x400057F")]
		Speakerphone,
		[Token(Token = "0x4000580")]
		LoudSpeakerphone
	}
	[Token(Token = "0x200016A")]
	internal abstract class BasePreprocessingPipeline : IPreprocessingPipeline, IDisposable, IMicrophoneSubscriber
	{
		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ArvCalculator _arv;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int _droppedSamples;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object _inputWriteLock;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly BufferedSampleProvider _resamplerInput;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Resampler _resampler;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly SampleToFrameProvider _resampledOutput;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly float[] _intermediateFrame;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioFileWriter _diagnosticOutputRecorder;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly int _outputFrameSize;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly WaveFormat _outputFormat;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _resetApplied;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _resetRequested;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _runThread;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly DThread _thread;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly AutoResetEvent _threadEvent;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly ReadonlyLockedValue<List<IMicrophoneSubscriber>> _micSubscriptions;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _micSubscriptionCount;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly ReadonlyLockedValue<List<IVoiceActivationListener>> _vadSubscriptions;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _vadSubscriptionCount;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _upstreamLatencyMs;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly int _estimatedPreprocessorLatencyMs;

		[Token(Token = "0x170001FF")]
		public float Amplitude
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x1C4F6F0", Offset = "0x1C4F6F0", VA = "0x1C4F6F0", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000200")]
		public int OutputFrameSize
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x1C4F6F8", Offset = "0x1C4F6F8", VA = "0x1C4F6F8", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000201")]
		[NotNull]
		public WaveFormat OutputFormat
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x1C4F700", Offset = "0x1C4F700", VA = "0x1C4F700", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		protected abstract bool VadIsSpeechDetected
		{
			[Token(Token = "0x60009EA")]
			get;
		}

		[Token(Token = "0x17000203")]
		public TimeSpan UpstreamLatency
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x1C4F708", Offset = "0x1C4F708", VA = "0x1C4F708")]
			get
			{
				return default(TimeSpan);
			}
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x1C4F774", Offset = "0x1C4F774", VA = "0x1C4F774", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		protected int PreprocessorLatencyMs
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x1C4F7A8", Offset = "0x1C4F7A8", VA = "0x1C4F7A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x1C4F7B4", Offset = "0x1C4F7B4", VA = "0x1C4F7B4")]
		protected BasePreprocessingPipeline([NotNull] WaveFormat inputFormat, int intermediateFrameSize, int intermediateSampleRate, int outputFrameSize, int outputSampleRate)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x1C4FF5C", Offset = "0x1C4FF5C", VA = "0x1C4FF5C", Slot = "17")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x1C502E4", Offset = "0x1C502E4", VA = "0x1C502E4", Slot = "15")]
		public void Reset()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1C50320", Offset = "0x1C50320", VA = "0x1C50320", Slot = "18")]
		protected virtual void ApplyReset()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x1C507C4", Offset = "0x1C507C4", VA = "0x1C507C4", Slot = "14")]
		private void Dissonance.Audio.Capture.IMicrophoneSubscriber.ReceiveMicrophoneData(ArraySegment<float> data, [NotNull] WaveFormat format)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x1C50BA0", Offset = "0x1C50BA0", VA = "0x1C50BA0", Slot = "7")]
		public void Start()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x1C50C08", Offset = "0x1C50C08", VA = "0x1C50C08")]
		private void ThreadEntry()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x1C51668", Offset = "0x1C51668", VA = "0x1C51668", Slot = "19")]
		protected virtual void ThreadStart()
		{
		}

		[Token(Token = "0x60009F6")]
		protected abstract void PreprocessAudioFrame([NotNull] float[] frame);

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x1C5166C", Offset = "0x1C5166C", VA = "0x1C5166C")]
		protected void SendSamplesToSubscribers([NotNull] float[] buffer)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1C5046C", Offset = "0x1C5046C", VA = "0x1C5046C")]
		private void SendResetToSubscribers()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1C51B6C", Offset = "0x1C51B6C", VA = "0x1C51B6C", Slot = "21")]
		public virtual void Subscribe([NotNull] IMicrophoneSubscriber listener)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1C51D04", Offset = "0x1C51D04", VA = "0x1C51D04", Slot = "22")]
		public virtual bool Unsubscribe([NotNull] IMicrophoneSubscriber listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x1C51318", Offset = "0x1C51318", VA = "0x1C51318")]
		private void SendStoppedTalking()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x1C51EBC", Offset = "0x1C51EBC", VA = "0x1C51EBC")]
		private static void SendStoppedTalking([NotNull] IVoiceActivationListener listener)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x1C514C0", Offset = "0x1C514C0", VA = "0x1C514C0")]
		private void SendStartedTalking()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1C5206C", Offset = "0x1C5206C", VA = "0x1C5206C")]
		private static void SendStartedTalking([NotNull] IVoiceActivationListener listener)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x1C52218", Offset = "0x1C52218", VA = "0x1C52218", Slot = "23")]
		public virtual void Subscribe([NotNull] IVoiceActivationListener listener)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x1C523F8", Offset = "0x1C523F8", VA = "0x1C523F8", Slot = "24")]
		public virtual bool Unsubscribe([NotNull] IVoiceActivationListener listener)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200016B")]
	public class BasicMicrophoneCapture : MonoBehaviour, IMicrophoneCapture
	{
		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte _maxReadBufferPower;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly POTBuffer _readBuffer;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BufferedSampleProvider _rawMicSamples;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IFrameProvider _rawMicFrames;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] _frame;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaveFormat _format;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioClip _clip;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _readHead;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _started;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _micName;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _audioDeviceChanged;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioFileWriter _microphoneDiagnosticOutput;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly List<IMicrophoneSubscriber> _subscribers;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB344", Offset = "0xFBB344")]
		private TimeSpan <Latency>k__BackingField;

		[Token(Token = "0x17000205")]
		public TimeSpan Latency
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x1C526D4", Offset = "0x1C526D4", VA = "0x1C526D4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8678", Offset = "0xFC8678")]
			get
			{
				return default(TimeSpan);
			}
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x1C526DC", Offset = "0x1C526DC", VA = "0x1C526DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8688", Offset = "0xFC8688")]
			private set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public bool IsRecording
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x1C526E4", Offset = "0x1C526E4", VA = "0x1C526E4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1C52754", Offset = "0x1C52754", VA = "0x1C52754", Slot = "11")]
		public virtual WaveFormat StartCapture(string inputMicName)
		{
			return null;
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1C52F2C", Offset = "0x1C52F2C", VA = "0x1C52F2C")]
		[CanBeNull]
		private static string ChooseMicName([CanBeNull] string micName)
		{
			return null;
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x1C53004", Offset = "0x1C53004", VA = "0x1C53004", Slot = "12")]
		public virtual void StopCapture()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1C53208", Offset = "0x1C53208", VA = "0x1C53208")]
		private void OnAudioDeviceChanged(bool deviceWasChanged)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1C53224", Offset = "0x1C53224", VA = "0x1C53224", Slot = "10")]
		public bool UpdateSubscribers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1C533D0", Offset = "0x1C533D0", VA = "0x1C533D0")]
		private void DrainMicSamples()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1C53688", Offset = "0x1C53688", VA = "0x1C53688")]
		private void ConsumeSamples(ArraySegment<float> samples)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1C5377C", Offset = "0x1C5377C", VA = "0x1C5377C")]
		private void SendFrame()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1C53B30", Offset = "0x1C53B30", VA = "0x1C53B30", Slot = "8")]
		public void Subscribe(IMicrophoneSubscriber listener)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1C53BD8", Offset = "0x1C53BD8", VA = "0x1C53BD8", Slot = "9")]
		public bool Unsubscribe(IMicrophoneSubscriber listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1C53C80", Offset = "0x1C53C80", VA = "0x1C53C80")]
		public BasicMicrophoneCapture()
		{
		}
	}
	[Token(Token = "0x200016C")]
	internal class BufferedSampleProvider : ISampleProvider
	{
		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly WaveFormat _format;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly TransferBuffer<float> _samples;

		[Token(Token = "0x17000207")]
		public int Count
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x1C51094", Offset = "0x1C51094", VA = "0x1C51094")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000208")]
		public int Capacity
		{
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x1C50B48", Offset = "0x1C50B48", VA = "0x1C50B48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000209")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x1C53E08", Offset = "0x1C53E08", VA = "0x1C53E08", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1C4FB8C", Offset = "0x1C4FB8C", VA = "0x1C4FB8C")]
		public BufferedSampleProvider(WaveFormat format, int bufferSize)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1C53E10", Offset = "0x1C53E10", VA = "0x1C53E10", Slot = "5")]
		public int Read(float[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x1C50A98", Offset = "0x1C50A98", VA = "0x1C50A98")]
		public int Write(ArraySegment<float> data)
		{
			return default(int);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x1C503F4", Offset = "0x1C503F4", VA = "0x1C503F4")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200016D")]
	internal class CapturePipelineManager : IAmplitudeProvider, ILossEstimator
	{
		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isMobilePlatform;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly CodecSettingsLoader _codecSettingsLoader;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RoomChannels _roomChannels;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly PlayerChannels _playerChannels;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly PacketLossMonitor _receivingPacketLossMonitor;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[CanBeNull]
		private ICommsNetwork _network;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IMicrophoneCapture _microphone;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IPreprocessingPipeline _preprocessor;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EncoderPipeline _encoder;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _encounteredFatalException;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _netModeRequiresPipeline;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool _cannotStartMic;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool _encoderSubscribed;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _startupDelay;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FrameSkipDetector _skipDetector;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly List<IVoiceActivationListener> _activationListeners;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly List<IMicrophoneSubscriber> _audioListeners;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string _micName;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _pendingResetRequest;

		[Token(Token = "0x1700020A")]
		[CanBeNull]
		public IMicrophoneCapture Microphone
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0x1C53EC4", Offset = "0x1C53EC4", VA = "0x1C53EC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		public string MicrophoneName
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x1C53ECC", Offset = "0x1C53ECC", VA = "0x1C53ECC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x1C53ED4", Offset = "0x1C53ED4", VA = "0x1C53ED4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public float PacketLoss
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x1C548D4", Offset = "0x1C548D4", VA = "0x1C548D4", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020D")]
		public float Amplitude
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x1C548F0", Offset = "0x1C548F0", VA = "0x1C548F0", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1C549B0", Offset = "0x1C549B0", VA = "0x1C549B0")]
		public CapturePipelineManager([NotNull] CodecSettingsLoader codecSettingsLoader, [NotNull] RoomChannels roomChannels, [NotNull] PlayerChannels playerChannels, [NotNull] ReadOnlyCollection<VoicePlayerState> players, int startupDelay = 0)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1C54C48", Offset = "0x1C54C48", VA = "0x1C54C48")]
		public void Start([NotNull] ICommsNetwork network, [NotNull] IMicrophoneCapture microphone)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1C54F3C", Offset = "0x1C54F3C", VA = "0x1C54F3C")]
		private void OnAudioDeviceChanged(bool devicewaschanged)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1C54F34", Offset = "0x1C54F34", VA = "0x1C54F34")]
		private static bool IsMobilePlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1C54FE0", Offset = "0x1C54FE0", VA = "0x1C54FE0")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1C54F04", Offset = "0x1C54F04", VA = "0x1C54F04")]
		private void Net_ModeChanged(NetworkMode mode)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1C553F4", Offset = "0x1C553F4", VA = "0x1C553F4")]
		public void Update(bool muted, float deltaTime)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1C55110", Offset = "0x1C55110", VA = "0x1C55110")]
		private void StopTransmissionPipeline()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1C54048", Offset = "0x1C54048", VA = "0x1C54048")]
		private void RestartTransmissionPipeline(string reason)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1C563F4", Offset = "0x1C563F4", VA = "0x1C563F4", Slot = "6")]
		[NotNull]
		protected virtual IPreprocessingPipeline CreatePreprocessor([NotNull] WaveFormat format)
		{
			return null;
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1C564FC", Offset = "0x1C564FC", VA = "0x1C564FC")]
		public void Subscribe([NotNull] IVoiceActivationListener listener)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1C56638", Offset = "0x1C56638", VA = "0x1C56638")]
		public void Unsubscribe([NotNull] IVoiceActivationListener listener)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1C56774", Offset = "0x1C56774", VA = "0x1C56774")]
		public void Subscribe([NotNull] IMicrophoneSubscriber listener)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1C568B0", Offset = "0x1C568B0", VA = "0x1C568B0")]
		public void Unsubscribe([NotNull] IMicrophoneSubscriber listener)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x1C54F48", Offset = "0x1C54F48", VA = "0x1C54F48")]
		public void ForceReset()
		{
		}
	}
	[Token(Token = "0x200016E")]
	internal class EmptyPreprocessingPipeline : BasePreprocessingPipeline
	{
		[Token(Token = "0x1700020E")]
		protected override bool VadIsSpeechDetected
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x1C56B4C", Offset = "0x1C56B4C", VA = "0x1C56B4C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1C56AC8", Offset = "0x1C56AC8", VA = "0x1C56AC8")]
		public EmptyPreprocessingPipeline([NotNull] WaveFormat inputFormat)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1C56B54", Offset = "0x1C56B54", VA = "0x1C56B54", Slot = "20")]
		protected override void PreprocessAudioFrame(float[] frame)
		{
		}
	}
	[Token(Token = "0x200016F")]
	internal class EncoderPipeline : IMicrophoneSubscriber, IDisposable
	{
		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly byte[] _encodedBytes;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float[] _plainSamples;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReadonlyLockedValue<IVoiceEncoder> _encoder;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ICommsNetwork _net;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly BufferedSampleProvider _input;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Resampler _resampler;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly IFrameProvider _output;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly WaveFormat _inputFormat;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _stopped;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _stopping;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _disposed;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBB364", Offset = "0xFBB364")]
		private float <TransmissionPacketLoss>k__BackingField;

		[Token(Token = "0x1700020F")]
		public bool Stopped
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x1C55904", Offset = "0x1C55904", VA = "0x1C55904")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000210")]
		public bool Stopping
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x1C55AFC", Offset = "0x1C55AFC", VA = "0x1C55AFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000211")]
		public float TransmissionPacketLoss
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x1C56B58", Offset = "0x1C56B58", VA = "0x1C56B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC86B8", Offset = "0xFC86B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x1C56B60", Offset = "0x1C56B60", VA = "0x1C56B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC86C8", Offset = "0xFC86C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1C55FA8", Offset = "0x1C55FA8", VA = "0x1C55FA8")]
		public EncoderPipeline([NotNull] WaveFormat inputFormat, [NotNull] IVoiceEncoder encoder, [NotNull] ICommsNetwork net)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1C56B68", Offset = "0x1C56B68", VA = "0x1C56B68", Slot = "4")]
		public void ReceiveMicrophoneData(ArraySegment<float> inputSamples, [NotNull] WaveFormat format)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1C56EE8", Offset = "0x1C56EE8", VA = "0x1C56EE8")]
		private int EncodeFrames([NotNull] IVoiceEncoder encoder, int maxCount)
		{
			return default(int);
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1C55928", Offset = "0x1C55928", VA = "0x1C55928", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x1C55B20", Offset = "0x1C55B20", VA = "0x1C55B20")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x1C55C34", Offset = "0x1C55C34", VA = "0x1C55C34", Slot = "6")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000170")]
	internal interface IAmplitudeProvider
	{
		[Token(Token = "0x17000212")]
		float Amplitude
		{
			[Token(Token = "0x6000A3B")]
			get;
		}
	}
	[Token(Token = "0x2000171")]
	internal interface IChannelPriorityProvider
	{
		[Token(Token = "0x17000213")]
		ChannelPriority DefaultChannelPriority
		{
			[Token(Token = "0x6000A3C")]
			get;
			[Token(Token = "0x6000A3D")]
			set;
		}
	}
	[Token(Token = "0x2000172")]
	internal interface IFrameProvider
	{
		[Token(Token = "0x17000214")]
		[NotNull]
		WaveFormat WaveFormat
		{
			[Token(Token = "0x6000A3E")]
			get;
		}

		[Token(Token = "0x17000215")]
		uint FrameSize
		{
			[Token(Token = "0x6000A3F")]
			get;
		}

		[Token(Token = "0x6000A40")]
		bool Read(ArraySegment<float> outBuffer);

		[Token(Token = "0x6000A41")]
		void Reset();
	}
	[Token(Token = "0x2000173")]
	public interface IMicrophoneCapture
	{
		[Token(Token = "0x17000216")]
		bool IsRecording
		{
			[Token(Token = "0x6000A42")]
			get;
		}

		[Token(Token = "0x17000217")]
		TimeSpan Latency
		{
			[Token(Token = "0x6000A43")]
			get;
		}

		[Token(Token = "0x6000A44")]
		[CanBeNull]
		WaveFormat StartCapture([CanBeNull] string name);

		[Token(Token = "0x6000A45")]
		void StopCapture();

		[Token(Token = "0x6000A46")]
		void Subscribe([NotNull] IMicrophoneSubscriber listener);

		[Token(Token = "0x6000A47")]
		bool Unsubscribe([NotNull] IMicrophoneSubscriber listener);

		[Token(Token = "0x6000A48")]
		bool UpdateSubscribers();
	}
	[Token(Token = "0x2000174")]
	public interface IMicrophoneSubscriber
	{
		[Token(Token = "0x6000A49")]
		void ReceiveMicrophoneData(ArraySegment<float> buffer, WaveFormat format);

		[Token(Token = "0x6000A4A")]
		void Reset();
	}
	[Token(Token = "0x2000175")]
	internal interface IPreprocessingPipeline : IDisposable, IMicrophoneSubscriber
	{
		[Token(Token = "0x17000218")]
		WaveFormat OutputFormat
		{
			[Token(Token = "0x6000A4B")]
			get;
		}

		[Token(Token = "0x17000219")]
		float Amplitude
		{
			[Token(Token = "0x6000A4C")]
			get;
		}

		[Token(Token = "0x1700021A")]
		TimeSpan UpstreamLatency
		{
			[Token(Token = "0x6000A4D")]
			set;
		}

		[Token(Token = "0x1700021B")]
		int OutputFrameSize
		{
			[Token(Token = "0x6000A4F")]
			get;
		}

		[Token(Token = "0x6000A4E")]
		void Start();

		[Token(Token = "0x6000A50")]
		void Subscribe(IMicrophoneSubscriber listener);

		[Token(Token = "0x6000A51")]
		bool Unsubscribe(IMicrophoneSubscriber listener);

		[Token(Token = "0x6000A52")]
		void Subscribe(IVoiceActivationListener listener);

		[Token(Token = "0x6000A53")]
		bool Unsubscribe(IVoiceActivationListener listener);
	}
	[Token(Token = "0x2000176")]
	public enum NoiseSuppressionLevels
	{
		[Token(Token = "0x40005CA")]
		Disabled = -1,
		[Token(Token = "0x40005CB")]
		Low,
		[Token(Token = "0x40005CC")]
		Moderate,
		[Token(Token = "0x40005CD")]
		High,
		[Token(Token = "0x40005CE")]
		VeryHigh
	}
	[Token(Token = "0x2000177")]
	internal class Resampler : ISampleProvider
	{
		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly WaveFormat _format;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[CanBeNull]
		private readonly WdlResampler _resampler;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ISampleProvider _source;

		[Token(Token = "0x1700021C")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0x1C57294", Offset = "0x1C57294", VA = "0x1C57294", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1C4FC2C", Offset = "0x1C4FC2C", VA = "0x1C4FC2C")]
		public Resampler([NotNull] ISampleProvider source, int newSampleRate)
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1C5729C", Offset = "0x1C5729C", VA = "0x1C5729C", Slot = "5")]
		public int Read(float[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1C5044C", Offset = "0x1C5044C", VA = "0x1C5044C")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000178")]
	internal class SampleToFrameProvider : IFrameProvider
	{
		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISampleProvider _source;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly uint _frameSize;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _samplesInFrame;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly float[] _frame;

		[Token(Token = "0x1700021D")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x1C57504", Offset = "0x1C57504", VA = "0x1C57504", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public uint FrameSize
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x1C575B4", Offset = "0x1C575B4", VA = "0x1C575B4", Slot = "5")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1C4FECC", Offset = "0x1C4FECC", VA = "0x1C4FECC")]
		public SampleToFrameProvider(ISampleProvider source, uint frameSize)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1C510EC", Offset = "0x1C510EC", VA = "0x1C510EC", Slot = "6")]
		public bool Read(ArraySegment<float> outBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1C50464", Offset = "0x1C50464", VA = "0x1C50464", Slot = "7")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000179")]
	internal class SineSampleProvider : ISampleProvider
	{
		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly WaveFormat _format;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float _frequency;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly double _step;

		[Token(Token = "0x40005D9")]
		private const double TwoPi = Math.PI * 2.0;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double _index;

		[Token(Token = "0x1700021F")]
		public float Frequency
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x1C575BC", Offset = "0x1C575BC", VA = "0x1C575BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000220")]
		public WaveFormat WaveFormat
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x1C575C4", Offset = "0x1C575C4", VA = "0x1C575C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1C575CC", Offset = "0x1C575CC", VA = "0x1C575CC")]
		public SineSampleProvider(WaveFormat format, float frequency)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x1C5764C", Offset = "0x1C5764C", VA = "0x1C5764C", Slot = "5")]
		public int Read(float[] buffer, int offset, int count)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200017A")]
	internal class WebRtcPreprocessingPipeline : BasePreprocessingPipeline
	{
		[Token(Token = "0x2000475")]
		internal sealed class WebRtcPreprocessor : IDisposable
		{
			[Token(Token = "0x2000578")]
			public enum SampleRates
			{
				[Token(Token = "0x40017AA")]
				SampleRate8KHz = 8000,
				[Token(Token = "0x40017AB")]
				SampleRate16KHz = 16000,
				[Token(Token = "0x40017AC")]
				SampleRate32KHz = 32000,
				[Token(Token = "0x40017AD")]
				SampleRate48KHz = 48000
			}

			[Token(Token = "0x2000579")]
			private enum ProcessorErrors
			{
				[Token(Token = "0x40017AF")]
				Ok = 0,
				[Token(Token = "0x40017B0")]
				Unspecified = -1,
				[Token(Token = "0x40017B1")]
				CreationFailed = -2,
				[Token(Token = "0x40017B2")]
				UnsupportedComponent = -3,
				[Token(Token = "0x40017B3")]
				UnsupportedFunction = -4,
				[Token(Token = "0x40017B4")]
				NullPointer = -5,
				[Token(Token = "0x40017B5")]
				BadParameter = -6,
				[Token(Token = "0x40017B6")]
				BadSampleRate = -7,
				[Token(Token = "0x40017B7")]
				BadDataLength = -8,
				[Token(Token = "0x40017B8")]
				BadNumberChannels = -9,
				[Token(Token = "0x40017B9")]
				FileError = -10,
				[Token(Token = "0x40017BA")]
				StreamParameterNotSet = -11,
				[Token(Token = "0x40017BB")]
				NotEnabled = -12
			}

			[Token(Token = "0x200057A")]
			internal enum FilterState
			{
				[Token(Token = "0x40017BD")]
				FilterNotRunning,
				[Token(Token = "0x40017BE")]
				FilterNoInstance,
				[Token(Token = "0x40017BF")]
				FilterNoSamplesSubmitted,
				[Token(Token = "0x40017C0")]
				FilterOk
			}

			[Serializable]
			[Token(Token = "0x200057B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9C0C", Offset = "0xFB9C0C")]
			private sealed class <>c
			{
				[Token(Token = "0x40017C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x40017C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<VoiceSettings, NoiseSuppressionLevels> <>9__31_0;

				[Token(Token = "0x40017C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Func<VoiceSettings, AecSuppressionLevels> <>9__31_2;

				[Token(Token = "0x40017C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public static Func<VoiceSettings, AecmRoutingMode> <>9__31_4;

				[Token(Token = "0x600217F")]
				[Address(RVA = "0x1C595E4", Offset = "0x1C595E4", VA = "0x1C595E4")]
				public <>c()
				{
				}

				[Token(Token = "0x6002180")]
				[Address(RVA = "0x1C595EC", Offset = "0x1C595EC", VA = "0x1C595EC")]
				internal NoiseSuppressionLevels <SetFilterPreprocessor>b__31_0(VoiceSettings s)
				{
					return default(NoiseSuppressionLevels);
				}

				[Token(Token = "0x6002181")]
				[Address(RVA = "0x1C59604", Offset = "0x1C59604", VA = "0x1C59604")]
				internal AecSuppressionLevels <SetFilterPreprocessor>b__31_2(VoiceSettings s)
				{
					return default(AecSuppressionLevels);
				}

				[Token(Token = "0x6002182")]
				[Address(RVA = "0x1C5961C", Offset = "0x1C5961C", VA = "0x1C5961C")]
				internal AecmRoutingMode <SetFilterPreprocessor>b__31_4(VoiceSettings s)
				{
					return default(AecmRoutingMode);
				}
			}

			[Token(Token = "0x200057C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9C1C", Offset = "0xFB9C1C")]
			private sealed class <>c__DisplayClass32_0<T>
			{
				[Token(Token = "0x40017C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string propertyName;

				[Token(Token = "0x40017C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Action<T> setValue;

				[Token(Token = "0x40017C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Func<VoiceSettings, T> getValue;

				[Token(Token = "0x40017C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public VoiceSettings settings;

				[Token(Token = "0x6002183")]
				public <>c__DisplayClass32_0()
				{
				}

				[Token(Token = "0x6002184")]
				internal void <Bind>b__0(object sender, PropertyChangedEventArgs args)
				{
				}
			}

			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly LockedValue<IntPtr> _handle;

			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly List<PropertyChangedEventHandler> _subscribed;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly bool _useMobileAec;

			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private NoiseSuppressionLevels _nsLevel;

			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AecSuppressionLevels _aecLevel;

			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private AecmRoutingMode _aecmLevel;

			[Token(Token = "0x170004EF")]
			private NoiseSuppressionLevels NoiseSuppressionLevel
			{
				[Token(Token = "0x6001DFF")]
				[Address(RVA = "0x1C585A0", Offset = "0x1C585A0", VA = "0x1C585A0")]
				get
				{
					return default(NoiseSuppressionLevels);
				}
				[Token(Token = "0x6001E00")]
				[Address(RVA = "0x1C585A8", Offset = "0x1C585A8", VA = "0x1C585A8")]
				set
				{
				}
			}

			[Token(Token = "0x170004F0")]
			private AecSuppressionLevels AecSuppressionLevel
			{
				[Token(Token = "0x6001E01")]
				[Address(RVA = "0x1C58704", Offset = "0x1C58704", VA = "0x1C58704")]
				get
				{
					return default(AecSuppressionLevels);
				}
				[Token(Token = "0x6001E02")]
				[Address(RVA = "0x1C5870C", Offset = "0x1C5870C", VA = "0x1C5870C")]
				set
				{
				}
			}

			[Token(Token = "0x170004F1")]
			private AecmRoutingMode AecmSuppressionLevel
			{
				[Token(Token = "0x6001E03")]
				[Address(RVA = "0x1C58880", Offset = "0x1C58880", VA = "0x1C58880")]
				get
				{
					return default(AecmRoutingMode);
				}
				[Token(Token = "0x6001E04")]
				[Address(RVA = "0x1C58888", Offset = "0x1C58888", VA = "0x1C58888")]
				set
				{
				}
			}

			[PreserveSig]
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x1C580C0", Offset = "0x1C580C0", VA = "0x1C580C0")]
			private static extern IntPtr Dissonance_CreatePreprocessor(NoiseSuppressionLevels nsLevel, AecSuppressionLevels aecLevel, bool aecDelayAgnostic, bool aecExtended, bool aecRefined, AecmRoutingMode aecmRoutingMode, bool aecmComfortNoise);

			[PreserveSig]
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0x1C58188", Offset = "0x1C58188", VA = "0x1C58188")]
			private static extern void Dissonance_DestroyPreprocessor(IntPtr handle);

			[PreserveSig]
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x1C58208", Offset = "0x1C58208", VA = "0x1C58208")]
			private static extern void Dissonance_ConfigureNoiseSuppression(IntPtr handle, NoiseSuppressionLevels nsLevel);

			[PreserveSig]
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x1C58298", Offset = "0x1C58298", VA = "0x1C58298")]
			private static extern void Dissonance_ConfigureAecSuppression(IntPtr handle, AecSuppressionLevels aecLevel, AecmRoutingMode aecmRouting);

			[PreserveSig]
			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0x1C58330", Offset = "0x1C58330", VA = "0x1C58330")]
			private static extern bool Dissonance_GetVadSpeechState(IntPtr handle);

			[PreserveSig]
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x1C583B8", Offset = "0x1C583B8", VA = "0x1C583B8")]
			private static extern ProcessorErrors Dissonance_PreprocessCaptureFrame(IntPtr handle, int sampleRate, float[] input, float[] output, int streamDelay);

			[PreserveSig]
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x1C58478", Offset = "0x1C58478", VA = "0x1C58478")]
			private static extern bool Dissonance_PreprocessorExchangeInstance(IntPtr previous, IntPtr replacement);

			[PreserveSig]
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x1C57F70", Offset = "0x1C57F70", VA = "0x1C57F70")]
			internal static extern int Dissonance_GetFilterState();

			[PreserveSig]
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x1C58510", Offset = "0x1C58510", VA = "0x1C58510")]
			private static extern void Dissonance_GetAecMetrics(IntPtr floatBuffer, int bufferLength);

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x1C577D8", Offset = "0x1C577D8", VA = "0x1C577D8")]
			public WebRtcPreprocessor(bool useMobileAec)
			{
			}

			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x1C57CB4", Offset = "0x1C57CB4", VA = "0x1C57CB4")]
			public bool Process(SampleRates inputSampleRate, float[] input, float[] output, int estimatedStreamDelay)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x1C579DC", Offset = "0x1C579DC", VA = "0x1C579DC")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x1C58D5C", Offset = "0x1C58D5C", VA = "0x1C58D5C")]
			private IntPtr CreatePreprocessor()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x1C58E54", Offset = "0x1C58E54", VA = "0x1C58E54")]
			private void SetFilterPreprocessor(IntPtr preprocessor)
			{
			}

			[Token(Token = "0x6001E0A")]
			private void Bind<T>(Func<VoiceSettings, T> getValue, string propertyName, Action<T> setValue)
			{
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x1C589FC", Offset = "0x1C589FC", VA = "0x1C589FC")]
			private bool ClearFilterPreprocessor(bool throwOnError = true)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x1C59388", Offset = "0x1C59388", VA = "0x1C59388")]
			private void ReleaseUnmanagedResources()
			{
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x1C57940", Offset = "0x1C57940", VA = "0x1C57940", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x1C59508", Offset = "0x1C59508", VA = "0x1C59508", Slot = "1")]
			~WebRtcPreprocessor()
			{
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x1C59570", Offset = "0x1C59570", VA = "0x1C59570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC4BC", Offset = "0xFCC4BC")]
			private void <SetFilterPreprocessor>b__31_1(NoiseSuppressionLevels v)
			{
			}

			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x1C59574", Offset = "0x1C59574", VA = "0x1C59574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC4CC", Offset = "0xFCC4CC")]
			private void <SetFilterPreprocessor>b__31_3(AecSuppressionLevels v)
			{
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x1C59578", Offset = "0x1C59578", VA = "0x1C59578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC4DC", Offset = "0xFCC4DC")]
			private void <SetFilterPreprocessor>b__31_5(AecmRoutingMode v)
			{
			}
		}

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool _isVadDetectingSpeech;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		private readonly bool _isMobilePlatform;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private WebRtcPreprocessor _preprocessor;

		[Token(Token = "0x17000221")]
		protected override bool VadIsSpeechDetected
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x1C5775C", Offset = "0x1C5775C", VA = "0x1C5775C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1C56468", Offset = "0x1C56468", VA = "0x1C56468")]
		public WebRtcPreprocessingPipeline([NotNull] WaveFormat inputFormat, bool mobilePlatform)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x1C57764", Offset = "0x1C57764", VA = "0x1C57764", Slot = "19")]
		protected override void ThreadStart()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x1C5790C", Offset = "0x1C5790C", VA = "0x1C5790C", Slot = "17")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1C579B0", Offset = "0x1C579B0", VA = "0x1C579B0", Slot = "18")]
		protected override void ApplyReset()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x1C57B90", Offset = "0x1C57B90", VA = "0x1C57B90", Slot = "20")]
		protected override void PreprocessAudioFrame(float[] frame)
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x1C57F6C", Offset = "0x1C57F6C", VA = "0x1C57F6C")]
		internal static WebRtcPreprocessor.FilterState GetAecFilterState()
		{
			return default(WebRtcPreprocessor.FilterState);
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x200017B")]
	public class Example : MonoBehaviour
	{
		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TactSource[] Sources;

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1828380", Offset = "0x1828380", VA = "0x1828380")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x1828BDC", Offset = "0x1828BDC", VA = "0x1828BDC")]
		public Example()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class ExamplePrev : MonoBehaviour
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1828BE4", Offset = "0x1828BE4", VA = "0x1828BE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1828CE0", Offset = "0x1828CE0", VA = "0x1828CE0")]
		public ExamplePrev()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class HapticApiTest : MonoBehaviour
	{
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x1829828", Offset = "0x1829828", VA = "0x1829828")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x182982C", Offset = "0x182982C", VA = "0x182982C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x1829950", Offset = "0x1829950", VA = "0x1829950")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1829954", Offset = "0x1829954", VA = "0x1829954")]
		public HapticApiTest()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class LongTest : MonoBehaviour
	{
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x182A0DC", Offset = "0x182A0DC", VA = "0x182A0DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x182A154", Offset = "0x182A154", VA = "0x182A154")]
		private void TriggerPlay()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x182A1FC", Offset = "0x182A1FC", VA = "0x182A1FC")]
		private void ReloadScene()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x182A28C", Offset = "0x182A28C", VA = "0x182A28C")]
		public LongTest()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class Shooter : MonoBehaviour
	{
		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float speedH;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float speedV;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float yaw;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float pitch;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float speed;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer laserLineRenderer;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float laserWidth;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool isEnableControl;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBB384", Offset = "0xFBB384")]
		public bool IsRaycastingShooting;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBB3BC", Offset = "0xFBB3BC")]
		public GameObject rayShootEffectPrefab;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TactSender TactSenderForRayCast;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBB3F4", Offset = "0xFBB3F4")]
		[SerializeField]
		private GameObject bulletPrefab;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform bulletPoint;

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x182A988", Offset = "0x182A988", VA = "0x182A988")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x182AAB8", Offset = "0x182AAB8", VA = "0x182AAB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x182AB38", Offset = "0x182AB38", VA = "0x182AB38")]
		private void PlayerController()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x182AFC8", Offset = "0x182AFC8", VA = "0x182AFC8")]
		private void RenderLazer(Vector3 targetPosition, Vector3 direction, float length)
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x182B170", Offset = "0x182B170", VA = "0x182B170")]
		private void Shoot()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x182B704", Offset = "0x182B704", VA = "0x182B704")]
		public Shooter()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class HapticApi
	{
		[Token(Token = "0x2000476")]
		public struct point
		{
			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x400133B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x400133C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x2000477")]
		public struct status
		{
			[Token(Token = "0x400133D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x1828CF0", Offset = "0x1828CF0", VA = "0x1828CF0")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x1828D90", Offset = "0x1828D90", VA = "0x1828D90")]
		public static extern void Initialise();

		[PreserveSig]
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x1828E00", Offset = "0x1828E00", VA = "0x1828E00")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x1828E70", Offset = "0x1828E70", VA = "0x1828E70")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x1828F24", Offset = "0x1828F24", VA = "0x1828F24")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x1828FDC", Offset = "0x1828FDC", VA = "0x1828FDC")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x1829094", Offset = "0x1829094", VA = "0x1829094")]
		public static extern void SubmitRegistered(string str);

		[PreserveSig]
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x1829124", Offset = "0x1829124", VA = "0x1829124")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x182920C", Offset = "0x182920C", VA = "0x182920C")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x18292D4", Offset = "0x18292D4", VA = "0x18292D4")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x182939C", Offset = "0x182939C", VA = "0x182939C")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x1829438", Offset = "0x1829438", VA = "0x1829438")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x18294B4", Offset = "0x18294B4", VA = "0x18294B4")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x1829550", Offset = "0x1829550", VA = "0x1829550")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x18295C0", Offset = "0x18295C0", VA = "0x18295C0")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x1829650", Offset = "0x1829650", VA = "0x1829650")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x18296BC", Offset = "0x18296BC", VA = "0x18296BC")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x182972C", Offset = "0x182972C", VA = "0x182972C")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1829798", Offset = "0x1829798", VA = "0x1829798")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x1825848", Offset = "0x1825848", VA = "0x1825848")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x1829820", Offset = "0x1829820", VA = "0x1829820")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class BhapticsManager : MonoBehaviour
	{
		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool dontDestroyOnLoad;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsManager _manager;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VisualFeedback[] visualFeedback;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBB460", Offset = "0xFBB460")]
		[SerializeField]
		public bool visualizeFeedback;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool launchPlayerIfNotRunning;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<HapticFeedback> _changedFeedback;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IHapticPlayer _hapticPlayer;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _isTryLaunchApp;

		[Token(Token = "0x17000222")]
		public static IHapticPlayer HapticPlayer
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x1824854", Offset = "0x1824854", VA = "0x1824854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x18246B8", Offset = "0x18246B8", VA = "0x18246B8")]
		public static string GetFeedbackId(string key)
		{
			return null;
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x182495C", Offset = "0x182495C", VA = "0x182495C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1824AC8", Offset = "0x1824AC8", VA = "0x1824AC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x1824F60", Offset = "0x1824F60", VA = "0x1824F60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x182515C", Offset = "0x182515C", VA = "0x182515C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x1825230", Offset = "0x1825230", VA = "0x1825230")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x1824C5C", Offset = "0x1824C5C", VA = "0x1824C5C")]
		private void InitVisualFeedback()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x1824D48", Offset = "0x1824D48", VA = "0x1824D48")]
		private void LoadFeedbackFile()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x1825918", Offset = "0x1825918", VA = "0x1825918")]
		private void OnStatusChanged(PlayerResponse playerResponse)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x1825BA0", Offset = "0x1825BA0", VA = "0x1825BA0")]
		public BhapticsManager()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class DumbPlayer : IHapticPlayer, IDisposable
	{
		[Token(Token = "0x1400003E")]
		public event Action<PlayerResponse> StatusReceived
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x1828238", Offset = "0x1828238", VA = "0x1828238", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC86E8", Offset = "0xFC86E8")]
			add
			{
			}
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x18282DC", Offset = "0x18282DC", VA = "0x18282DC", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC86F8", Offset = "0xFC86F8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x18281CC", Offset = "0x18281CC", VA = "0x18281CC", Slot = "18")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x18281D0", Offset = "0x18281D0", VA = "0x18281D0", Slot = "4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x18281D4", Offset = "0x18281D4", VA = "0x18281D4", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x18281D8", Offset = "0x18281D8", VA = "0x18281D8", Slot = "19")]
		public bool IsActive(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x18281E0", Offset = "0x18281E0", VA = "0x18281E0", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x18281E8", Offset = "0x18281E8", VA = "0x18281E8", Slot = "20")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x18281F0", Offset = "0x18281F0", VA = "0x18281F0")]
		public void Register(string key, string path)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x18281F4", Offset = "0x18281F4", VA = "0x18281F4", Slot = "7")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x18281F8", Offset = "0x18281F8", VA = "0x18281F8", Slot = "8")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x18281FC", Offset = "0x18281FC", VA = "0x18281FC", Slot = "9")]
		public void Submit(string key, PositionType position, byte[] motorBytes, int durationMillis)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1828200", Offset = "0x1828200", VA = "0x1828200", Slot = "21")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1828204", Offset = "0x1828204", VA = "0x1828204", Slot = "22")]
		public void Submit(string key, PositionType position, DotPoint point, int durationMillis)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1828208", Offset = "0x1828208", VA = "0x1828208", Slot = "10")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x182820C", Offset = "0x182820C", VA = "0x182820C", Slot = "23")]
		public void Submit(string key, PositionType position, PathPoint point, int durationMillis)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1828210", Offset = "0x1828210", VA = "0x1828210", Slot = "11")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1828214", Offset = "0x1828214", VA = "0x1828214", Slot = "24")]
		public void SubmitRegistered(string key, ScaleOption option)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1828218", Offset = "0x1828218", VA = "0x1828218", Slot = "25")]
		public void SubmitRegisteredVestRotation(string key, RotationOption option)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x182821C", Offset = "0x182821C", VA = "0x182821C", Slot = "26")]
		public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption option)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1828220", Offset = "0x1828220", VA = "0x1828220", Slot = "12")]
		public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption option, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x1828224", Offset = "0x1828224", VA = "0x1828224", Slot = "13")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x1828228", Offset = "0x1828228", VA = "0x1828228", Slot = "27")]
		public void SubmitRegistered(string key, float duration)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x182822C", Offset = "0x182822C", VA = "0x182822C", Slot = "14")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1828230", Offset = "0x1828230", VA = "0x1828230", Slot = "15")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1828234", Offset = "0x1828234", VA = "0x1828234", Slot = "28")]
		public void Register(string key, Project project)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x182493C", Offset = "0x182493C", VA = "0x182493C")]
		public DumbPlayer()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class BhapticsUtils
	{
		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string TypeVest;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string TypeTactot;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string TypeTactosy;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string TypeTactosy2;

		[Token(Token = "0x6000AB6")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1825C24", Offset = "0x1825C24", VA = "0x1825C24")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1824934", Offset = "0x1824934", VA = "0x1824934")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1824ABC", Offset = "0x1824ABC", VA = "0x1824ABC")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1825C6C", Offset = "0x1825C6C", VA = "0x1825C6C")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1824AC4", Offset = "0x1824AC4", VA = "0x1824AC4")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1825C8C", Offset = "0x1825C8C", VA = "0x1825C8C")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x1825E14", Offset = "0x1825E14", VA = "0x1825E14")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x18227DC", Offset = "0x18227DC", VA = "0x18227DC")]
		public static Project ReflectLeftRight(string projectStr)
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1825F00", Offset = "0x1825F00", VA = "0x1825F00")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class DeviceManager : MonoBehaviour
	{
		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DeviceManager Instance;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<BhapticsDevice> devices;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UI_Manager uiManager;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool IsScanning;

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1827520", Offset = "0x1827520", VA = "0x1827520")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x18275F4", Offset = "0x18275F4", VA = "0x18275F4")]
		private bool ScanTest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x182767C", Offset = "0x182767C", VA = "0x182767C")]
		public void ForceUpdateDeviceList()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x182774C", Offset = "0x182774C", VA = "0x182774C")]
		public void UpdateDevices(List<BhapticsDevice> devices)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1827728", Offset = "0x1827728", VA = "0x1827728")]
		private void RefreshDeviceListUi()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x18277F0", Offset = "0x18277F0", VA = "0x18277F0")]
		public void UpdateScanning(bool isScanning)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1826DCC", Offset = "0x1826DCC", VA = "0x1826DCC")]
		public void Pair(string address)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1827064", Offset = "0x1827064", VA = "0x1827064")]
		public void Unpair(string address)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x18277FC", Offset = "0x18277FC", VA = "0x18277FC")]
		public void UnpairAll()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1827880", Offset = "0x1827880", VA = "0x1827880")]
		public void Scan()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1827904", Offset = "0x1827904", VA = "0x1827904")]
		public void ScanStop()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x182741C", Offset = "0x182741C", VA = "0x182741C")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x182720C", Offset = "0x182720C", VA = "0x182720C")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x1827988", Offset = "0x1827988", VA = "0x1827988")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x1827A0C", Offset = "0x1827A0C", VA = "0x1827A0C")]
		public void ScanButton()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1827A1C", Offset = "0x1827A1C", VA = "0x1827A1C")]
		public List<BhapticsDevice> GetDeviceList()
		{
			return null;
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1827A24", Offset = "0x1827A24", VA = "0x1827A24")]
		public void OnChangeResponse(string message)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1827BCC", Offset = "0x1827BCC", VA = "0x1827BCC")]
		public void ScanStatusChanged(string message)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1827C18", Offset = "0x1827C18", VA = "0x1827C18")]
		public void OnDeviceUpdate(string message)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x1828150", Offset = "0x1828150", VA = "0x1828150")]
		public DeviceManager()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class HapticPlayer2 : IHapticPlayer, IDisposable
	{
		[Token(Token = "0x1400003F")]
		public event Action<PlayerResponse> StatusReceived
		{
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x1829F94", Offset = "0x1829F94", VA = "0x1829F94", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8708", Offset = "0xFC8708")]
			add
			{
			}
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x182A038", Offset = "0x182A038", VA = "0x182A038", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8718", Offset = "0xFC8718")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1824944", Offset = "0x1824944", VA = "0x1824944")]
		public HapticPlayer2()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x182995C", Offset = "0x182995C", VA = "0x182995C", Slot = "18")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1829960", Offset = "0x1829960", VA = "0x1829960", Slot = "4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1829964", Offset = "0x1829964", VA = "0x1829964", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1829968", Offset = "0x1829968", VA = "0x1829968", Slot = "19")]
		public bool IsActive(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1829970", Offset = "0x1829970", VA = "0x1829970", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x1829978", Offset = "0x1829978", VA = "0x1829978", Slot = "20")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x182997C", Offset = "0x182997C", VA = "0x182997C", Slot = "21")]
		public void Register(string key, Project project)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x18299C4", Offset = "0x18299C4", VA = "0x18299C4", Slot = "7")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x18299D0", Offset = "0x18299D0", VA = "0x18299D0", Slot = "8")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x18299DC", Offset = "0x18299DC", VA = "0x18299DC", Slot = "9")]
		public void Submit(string key, PositionType position, byte[] motorBytes, int durationMillis)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1829A04", Offset = "0x1829A04", VA = "0x1829A04", Slot = "22")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1829B00", Offset = "0x1829B00", VA = "0x1829B00", Slot = "23")]
		public void Submit(string key, PositionType position, DotPoint point, int durationMillis)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x1829BB0", Offset = "0x1829BB0", VA = "0x1829BB0", Slot = "10")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1829D68", Offset = "0x1829D68", VA = "0x1829D68", Slot = "24")]
		public void Submit(string key, PositionType position, PathPoint point, int durationMillis)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1829E18", Offset = "0x1829E18", VA = "0x1829E18", Slot = "25")]
		public void SubmitRegistered(string key, ScaleOption option)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1829E24", Offset = "0x1829E24", VA = "0x1829E24", Slot = "11")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x1829E4C", Offset = "0x1829E4C", VA = "0x1829E4C", Slot = "26")]
		public void SubmitRegisteredVestRotation(string key, RotationOption option)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x1829E70", Offset = "0x1829E70", VA = "0x1829E70", Slot = "27")]
		public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption option)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x1829EF4", Offset = "0x1829EF4", VA = "0x1829EF4", Slot = "12")]
		public void SubmitRegisteredVestRotation(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1829F20", Offset = "0x1829F20", VA = "0x1829F20", Slot = "13")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1829F28", Offset = "0x1829F28", VA = "0x1829F28", Slot = "28")]
		public void SubmitRegistered(string key, float duration)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1829F88", Offset = "0x1829F88", VA = "0x1829F88", Slot = "14")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1829F90", Offset = "0x1829F90", VA = "0x1829F90", Slot = "15")]
		public void TurnOff()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class TactFileAsset : ScriptableObject
	{
		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool Initialized;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static TactFileAsset _instance;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FeedbackFile[] FeedbackFiles;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Types;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, FeedbackFile> FilesMap;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string secretKey;

		[Token(Token = "0x17000223")]
		public static TactFileAsset Instance
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x18247E8", Offset = "0x18247E8", VA = "0x18247E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x182B730", Offset = "0x182B730", VA = "0x182B730")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x182B910", Offset = "0x182B910", VA = "0x182B910")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x182B90C", Offset = "0x182B90C", VA = "0x182B90C")]
		public static void SaveAssetFile()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x182B988", Offset = "0x182B988", VA = "0x182B988")]
		private static string[] LoadTypes(FeedbackFile[] feedbackFiles)
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x182BA80", Offset = "0x182BA80", VA = "0x182BA80")]
		private static FeedbackFile[] LoadFeedbackFile()
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x182C058", Offset = "0x182C058", VA = "0x182C058")]
		private static string GetHash(string value)
		{
			return null;
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x182C050", Offset = "0x182C050", VA = "0x182C050")]
		private static string LoadStringFromFile(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x182C1E0", Offset = "0x182C1E0", VA = "0x182C1E0")]
		public TactFileAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000187")]
	public class FeedbackFile
	{
		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Id;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Key;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Value;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Type;

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x1828CE8", Offset = "0x1828CE8", VA = "0x1828CE8")]
		public FeedbackFile()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class TactReceiver : MonoBehaviour
	{
		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x182C250", Offset = "0x182C250", VA = "0x182C250")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x182C31C", Offset = "0x182C31C", VA = "0x182C31C")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x182C4D4", Offset = "0x182C4D4", VA = "0x182C4D4")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x182C3EC", Offset = "0x182C3EC", VA = "0x182C3EC")]
		private void Handle(Vector3 contactPoint, TactSender tactSender)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x182C6E0", Offset = "0x182C6E0", VA = "0x182C6E0")]
		public TactReceiver()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class TactSender : MonoBehaviour
	{
		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TactSource DefaultSource;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TactSource[] HeadSources;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TactSource[] BodySources;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TactSource[] LeftArmSources;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TactSource[] RightArmSources;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x182B5C4", Offset = "0x182B5C4", VA = "0x182B5C4")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x182C5C8", Offset = "0x182C5C8", VA = "0x182C5C8")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x182C7F8", Offset = "0x182C7F8", VA = "0x182C7F8")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x182B5D0", Offset = "0x182B5D0", VA = "0x182B5D0")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x182C938", Offset = "0x182C938", VA = "0x182C938")]
		private TactSource GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x182CA34", Offset = "0x182CA34", VA = "0x182CA34")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x182C6F0", Offset = "0x182C6F0", VA = "0x182C6F0")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x182CA3C", Offset = "0x182CA3C", VA = "0x182CA3C")]
		public TactSender()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public enum PositionTag
	{
		[Token(Token = "0x4000614")]
		Body,
		[Token(Token = "0x4000615")]
		Head,
		[Token(Token = "0x4000616")]
		LeftArm,
		[Token(Token = "0x4000617")]
		RightArm,
		[Token(Token = "0x4000618")]
		Default
	}
	[Serializable]
	[Token(Token = "0x200018B")]
	public class TactSource : MonoBehaviour
	{
		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IHapticPlayer player;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _key;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public FeedbackType FeedbackType;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		[SerializeField]
		public Pos Position;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Point[] Points;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		public byte[] DotPoints;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBB56C", Offset = "0xFBB56C")]
		public int TimeMillis;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBB5B0", Offset = "0xFBB5B0")]
		public float Intensity;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBB5F4", Offset = "0xFBB5F4")]
		public float Duration;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		[SerializeField]
		public bool IsReflectTactosy;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool isRegistered;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool isOriginFileRegistered;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float VestRotationAngleX;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float VestRotationOffsetY;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBB690", Offset = "0xFBB690")]
		public float TactFileOffsetX;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBB6D4", Offset = "0xFBB6D4")]
		public float TactFileOffsetY;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		public FeedbackFile FeedbackFile;

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x182CA4C", Offset = "0x182CA4C", VA = "0x182CA4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x182CBC0", Offset = "0x182CBC0", VA = "0x182CBC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x182CBF4", Offset = "0x182CBF4", VA = "0x182CBF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x182CBFC", Offset = "0x182CBFC", VA = "0x182CBFC")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x182CC08", Offset = "0x182CC08", VA = "0x182CC08")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1828410", Offset = "0x1828410", VA = "0x1828410")]
		public void Play([Optional] ScaleOption option)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x182CE04", Offset = "0x182CE04", VA = "0x182CE04")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x182CCE4", Offset = "0x182CCE4", VA = "0x182CCE4")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x182CCC4", Offset = "0x182CCC4", VA = "0x182CCC4")]
		private static PositionType ToPositionType(Pos pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x182CEC0", Offset = "0x182CEC0", VA = "0x182CEC0")]
		public TactSource()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018C")]
	public class Point
	{
		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBB74C", Offset = "0xFBB74C")]
		public float X;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBB764", Offset = "0xFBB764")]
		public float Y;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBB77C", Offset = "0xFBB77C")]
		public int Intensity;

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x182A740", Offset = "0x182A740", VA = "0x182A740")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018D")]
	public enum FeedbackType
	{
		[Token(Token = "0x400062E")]
		TactFile,
		[Token(Token = "0x400062F")]
		DotMode,
		[Token(Token = "0x4000630")]
		PathMode
	}
	[Serializable]
	[Token(Token = "0x200018E")]
	public enum Pos
	{
		[Token(Token = "0x4000632")]
		Head,
		[Token(Token = "0x4000633")]
		VestFront,
		[Token(Token = "0x4000634")]
		VestBack,
		[Token(Token = "0x4000635")]
		RightArm,
		[Token(Token = "0x4000636")]
		LeftArm,
		[Token(Token = "0x4000637")]
		LeftHand,
		[Token(Token = "0x4000638")]
		RightHand,
		[Token(Token = "0x4000639")]
		LeftFoot,
		[Token(Token = "0x400063A")]
		RightFoot,
		[Token(Token = "0x400063B")]
		RightForearm,
		[Token(Token = "0x400063C")]
		LeftForearm
	}
	[Token(Token = "0x200018F")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositionType Position;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject motorPrefab;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int column;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int row;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float intervalDistance;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] motors;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float offsetX;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float offsetY;

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x182DE50", Offset = "0x182DE50", VA = "0x182DE50")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x18255F4", Offset = "0x18255F4", VA = "0x18255F4")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x182E290", Offset = "0x182E290", VA = "0x182E290")]
		public VisualFeedback()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public enum TactDeviceType
	{
		[Token(Token = "0x4000646")]
		Tactal,
		[Token(Token = "0x4000647")]
		Tactot,
		[Token(Token = "0x4000648")]
		TactosyLeft,
		[Token(Token = "0x4000649")]
		TactosyRight,
		[Token(Token = "0x400064A")]
		TactosyLeftHand,
		[Token(Token = "0x400064B")]
		TactosyRightHand,
		[Token(Token = "0x400064C")]
		TactosyLeftFoot,
		[Token(Token = "0x400064D")]
		TactosyRightFoot
	}
	[Token(Token = "0x2000191")]
	public class CompareDeviceString
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x1825FD8", Offset = "0x1825FD8", VA = "0x1825FD8")]
		public static string GetDeviceNameString(TactDeviceType deviceType)
		{
			return null;
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x1826044", Offset = "0x1826044", VA = "0x1826044")]
		public static string GetPositionString(TactDeviceType deviceType)
		{
			return null;
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x18260B0", Offset = "0x18260B0", VA = "0x18260B0")]
		public static int convertConnectionStatus(string status)
		{
			return default(int);
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x182615C", Offset = "0x182615C", VA = "0x182615C")]
		public CompareDeviceString()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class DeviceControlButton : MonoBehaviour
	{
		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB95C4", Offset = "0xFB95C4")]
		private sealed class <CheckPosition>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400133E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BhapticsDevice device;

			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isLeft;

			[Token(Token = "0x170004F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E15")]
				[Address(RVA = "0x18274A8", Offset = "0x18274A8", VA = "0x18274A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E17")]
				[Address(RVA = "0x1827510", Offset = "0x1827510", VA = "0x1827510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x1826EE8", Offset = "0x1826EE8", VA = "0x1826EE8")]
			[DebuggerHidden]
			public <CheckPosition>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x18272A0", Offset = "0x18272A0", VA = "0x18272A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x18272A4", Offset = "0x18272A4", VA = "0x18272A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E16")]
			[Address(RVA = "0x18274B0", Offset = "0x18274B0", VA = "0x18274B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TactDeviceType DeviceType;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBB808", Offset = "0xFBB808")]
		[SerializeField]
		private Sprite defaultImage;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBB884", Offset = "0xFBB884")]
		[SerializeField]
		private Image canPairImage;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject unPairButton;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Button button;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool canPair;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isLeft;

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x1826164", Offset = "0x1826164", VA = "0x1826164")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1826234", Offset = "0x1826234", VA = "0x1826234")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x18262C0", Offset = "0x18262C0", VA = "0x18262C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x18262C8", Offset = "0x18262C8", VA = "0x18262C8")]
		private void RefreshUI()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1826B60", Offset = "0x1826B60", VA = "0x1826B60")]
		private void CanPairBlink()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1826BA0", Offset = "0x1826BA0", VA = "0x1826BA0")]
		public void OnPairDevice()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1826E58", Offset = "0x1826E58", VA = "0x1826E58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8728", Offset = "0xFC8728")]
		private IEnumerator CheckPosition(BhapticsDevice device, bool isLeft)
		{
			return null;
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1826F14", Offset = "0x1826F14", VA = "0x1826F14")]
		private void OnUnpairDevice()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x18270F0", Offset = "0x18270F0", VA = "0x18270F0")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1826854", Offset = "0x1826854", VA = "0x1826854")]
		private List<BhapticsDevice> GetPariedDevice()
		{
			return null;
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1826A14", Offset = "0x1826A14", VA = "0x1826A14")]
		private bool CanPairedDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1827298", Offset = "0x1827298", VA = "0x1827298")]
		public DeviceControlButton()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBB8F0", Offset = "0xFBB8F0")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button unPairButton;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBB97C", Offset = "0xFBB97C")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BhapticsDevice device;

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x182A294", Offset = "0x182A294", VA = "0x182A294")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x182A36C", Offset = "0x182A36C", VA = "0x182A36C")]
		public void Setup(BhapticsDevice tactDevice, bool isConnect, Sprite sprite)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x182A538", Offset = "0x182A538", VA = "0x182A538")]
		private void OnPing()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x182A5C0", Offset = "0x182A5C0", VA = "0x182A5C0")]
		private void OnUnpair()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x182A66C", Offset = "0x182A66C", VA = "0x182A66C")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x182A738", Offset = "0x182A738", VA = "0x182A738")]
		public PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class ScannedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBB9D8", Offset = "0xFBB9D8")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pairButton;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BhapticsDevice device;

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x182A780", Offset = "0x182A780", VA = "0x182A780")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x182A814", Offset = "0x182A814", VA = "0x182A814")]
		public void Setup(BhapticsDevice tactDevice, Sprite sprite)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x182A8F4", Offset = "0x182A8F4", VA = "0x182A8F4")]
		private void OnPair()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x182A980", Offset = "0x182A980", VA = "0x182A980")]
		public ScannedDeviceUI()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class UI_Initialize : MonoBehaviour
	{
		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button unpairAllButton;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button scanButton;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x182CF44", Offset = "0x182CF44", VA = "0x182CF44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x182D024", Offset = "0x182D024", VA = "0x182D024")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x182D028", Offset = "0x182D028", VA = "0x182D028")]
		private void ButtonInitialize()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x182D31C", Offset = "0x182D31C", VA = "0x182D31C")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x182D32C", Offset = "0x182D32C", VA = "0x182D32C")]
		public void ToggleWidgetButton(bool state)
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x182D42C", Offset = "0x182D42C", VA = "0x182D42C")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x182D44C", Offset = "0x182D44C", VA = "0x182D44C")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x182D46C", Offset = "0x182D46C", VA = "0x182D46C")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x182D488", Offset = "0x182D488", VA = "0x182D488")]
		public UI_Initialize()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000196")]
	public class DeviceIcon
	{
		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite scanImage;

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x1827518", Offset = "0x1827518", VA = "0x1827518")]
		public DeviceIcon()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public enum WidgetType
	{
		[Token(Token = "0x4000670")]
		Dark,
		[Token(Token = "0x4000671")]
		Light
	}
	[Token(Token = "0x2000198")]
	public class UI_Manager : MonoBehaviour
	{
		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB95D4", Offset = "0xFB95D4")]
		private sealed class <ScanAnimation>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UI_Manager <>4__this;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isScanning;

			[Token(Token = "0x170004F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E1B")]
				[Address(RVA = "0x182DDE0", Offset = "0x182DDE0", VA = "0x182DDE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E1D")]
				[Address(RVA = "0x182DE48", Offset = "0x182DE48", VA = "0x182DE48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0x182DD14", Offset = "0x182DD14", VA = "0x182DD14")]
			[DebuggerHidden]
			public <ScanAnimation>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x182DD50", Offset = "0x182DD50", VA = "0x182DD50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0x182DD54", Offset = "0x182DD54", VA = "0x182DD54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0x182DDE8", Offset = "0x182DDE8", VA = "0x182DDE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool IsActivateWidget;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private WidgetType WidgetType;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject darkWidgetPrefab;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject lightWidgetPrefab;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform scanButton;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ScrollRect pairedDeviceScrollrect;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ScrollRect ScannedDeviceScrollrect;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBBAB4", Offset = "0xFBBAB4")]
		[SerializeField]
		private DeviceIcon Tactosy;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private DeviceIcon Tactot;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private DeviceIcon TactosyH;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private DeviceIcon TactosyF;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private DeviceIcon Tactal;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IEnumerator ScanAnimationCor;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SettingObjectPool settingObjectPool;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBBB40", Offset = "0xFBBB40")]
		private GameObject <widget>k__BackingField;

		[Token(Token = "0x17000224")]
		public GameObject widget
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x182D490", Offset = "0x182D490", VA = "0x182D490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC878C", Offset = "0xFC878C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x182D498", Offset = "0x182D498", VA = "0x182D498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC879C", Offset = "0xFC879C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x182D4A0", Offset = "0x182D4A0", VA = "0x182D4A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x1827774", Offset = "0x1827774", VA = "0x1827774")]
		public void Refresh(List<BhapticsDevice> devices, bool isScanning)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x182D5DC", Offset = "0x182D5DC", VA = "0x182D5DC")]
		private void PairedUiRefresh(List<BhapticsDevice> devices)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x182D860", Offset = "0x182D860", VA = "0x182D860")]
		private void ScannedUiRefresh(List<BhapticsDevice> devices)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x182D7CC", Offset = "0x182D7CC", VA = "0x182D7CC")]
		private void RefreshScanButtonUi(bool isScanning)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x182DC84", Offset = "0x182DC84", VA = "0x182DC84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC87AC", Offset = "0xFC87AC")]
		private IEnumerator ScanAnimation(bool isScanning)
		{
			return null;
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x182DA30", Offset = "0x182DA30", VA = "0x182DA30")]
		public Sprite GetPairedDeviceSprite(string deviceType, bool isConnect)
		{
			return null;
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x182DB64", Offset = "0x182DB64", VA = "0x182DB64")]
		public Sprite GetScannedDeviceSprite(string deviceType)
		{
			return null;
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x182DD40", Offset = "0x182DD40", VA = "0x182DD40")]
		public UI_Manager()
		{
		}
	}
}
namespace SWS
{
	[Token(Token = "0x2000199")]
	public class EventCollisionTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onTrigger;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool onCollision;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent myEvent;

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1B74A44", Offset = "0x1B74A44", VA = "0x1B74A44")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x1B74A6C", Offset = "0x1B74A6C", VA = "0x1B74A6C")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1B74A94", Offset = "0x1B74A94", VA = "0x1B74A94")]
		public void ApplyForce(int power)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1B74CEC", Offset = "0x1B74CEC", VA = "0x1B74CEC")]
		public EventCollisionTrigger()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class MoveAnimator : MonoBehaviour
	{
		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private splineMove sMove;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NavMeshAgent nAgent;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lastRotY;

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1B74CFC", Offset = "0x1B74CFC", VA = "0x1B74CFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1B74DE4", Offset = "0x1B74DE4", VA = "0x1B74DE4")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1B7506C", Offset = "0x1B7506C", VA = "0x1B7506C")]
		public MoveAnimator()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class PathIndicator : MonoBehaviour
	{
		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB95E4", Offset = "0xFB95E4")]
		private sealed class <EmitParticles>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathIndicator <>4__this;

			[Token(Token = "0x170004F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E21")]
				[Address(RVA = "0x1B75330", Offset = "0x1B75330", VA = "0x1B75330", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E23")]
				[Address(RVA = "0x1B75398", Offset = "0x1B75398", VA = "0x1B75398", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0x1B75168", Offset = "0x1B75168", VA = "0x1B75168")]
			[DebuggerHidden]
			public <EmitParticles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0x1B7519C", Offset = "0x1B7519C", VA = "0x1B7519C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x1B751A0", Offset = "0x1B751A0", VA = "0x1B751A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x1B75338", Offset = "0x1B75338", VA = "0x1B75338", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float modRotation;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem pSys;

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1B75074", Offset = "0x1B75074", VA = "0x1B75074")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1B750EC", Offset = "0x1B750EC", VA = "0x1B750EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8810", Offset = "0xFC8810")]
		private IEnumerator EmitParticles()
		{
			return null;
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1B75194", Offset = "0x1B75194", VA = "0x1B75194")]
		public PathIndicator()
		{
		}
	}
	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1CE0", Offset = "0xFB1CE0")]
	public class PathRenderer : MonoBehaviour
	{
		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB95F4", Offset = "0xFB95F4")]
		private sealed class <StartRenderer>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathRenderer <>4__this;

			[Token(Token = "0x170004F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E27")]
				[Address(RVA = "0x1B766B8", Offset = "0x1B766B8", VA = "0x1B766B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E29")]
				[Address(RVA = "0x1B76720", Offset = "0x1B76720", VA = "0x1B76720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x1B75E38", Offset = "0x1B75E38", VA = "0x1B75E38")]
			[DebuggerHidden]
			public <StartRenderer>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001E25")]
			[Address(RVA = "0x1B76630", Offset = "0x1B76630", VA = "0x1B76630", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x1B76634", Offset = "0x1B76634", VA = "0x1B76634", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x1B766C0", Offset = "0x1B766C0", VA = "0x1B766C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onUpdate;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spacing;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PathManager path;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer line;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] points;

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1B75CE0", Offset = "0x1B75CE0", VA = "0x1B75CE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1B75DBC", Offset = "0x1B75DBC", VA = "0x1B75DBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8874", Offset = "0xFC8874")]
		private IEnumerator StartRenderer()
		{
			return null;
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1B75E64", Offset = "0x1B75E64", VA = "0x1B75E64")]
		private void Render()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1B76038", Offset = "0x1B76038", VA = "0x1B76038")]
		private void DrawCurved()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1B7614C", Offset = "0x1B7614C", VA = "0x1B7614C")]
		private void DrawLinear()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1B7661C", Offset = "0x1B7661C", VA = "0x1B7661C")]
		public PathRenderer()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class BezierPathManager : PathManager
	{
		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3[] pathPoints;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<BezierPoint> bPoints;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showHandles;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool connectHandles;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color color3;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float pathDetail;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool customDetail;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<float> segmentDetail;

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1B732C0", Offset = "0x1B732C0", VA = "0x1B732C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1B73A6C", Offset = "0x1B73A6C", VA = "0x1B73A6C", Slot = "4")]
		public override void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1B73D64", Offset = "0x1B73D64", VA = "0x1B73D64")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1B74264", Offset = "0x1B74264", VA = "0x1B74264", Slot = "6")]
		public override Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x1B74360", Offset = "0x1B74360", VA = "0x1B74360", Slot = "9")]
		public override int GetWaypointCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x1B743B0", Offset = "0x1B743B0", VA = "0x1B743B0", Slot = "7")]
		public override Transform GetWaypoint(int index)
		{
			return null;
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x1B74430", Offset = "0x1B74430", VA = "0x1B74430", Slot = "8")]
		public override int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1B737C8", Offset = "0x1B737C8", VA = "0x1B737C8")]
		public void CalculatePath()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1B74538", Offset = "0x1B74538", VA = "0x1B74538")]
		private List<Vector3> GetPoints(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float detail)
		{
			return null;
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x1B74800", Offset = "0x1B74800", VA = "0x1B74800")]
		public BezierPathManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019E")]
	public class BezierPoint
	{
		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform wp;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] cp;

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x1B73CF8", Offset = "0x1B73CF8", VA = "0x1B73CF8")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class PathManager : MonoBehaviour
	{
		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] waypoints;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool drawCurved;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool drawDirection;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color color1;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color2;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 size;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float radius;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool skipCustomNames;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject replaceObject;

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x1B753A0", Offset = "0x1B753A0", VA = "0x1B753A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x1B75418", Offset = "0x1B75418", VA = "0x1B75418")]
		public void Create([Optional] Transform parent)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x1B75718", Offset = "0x1B75718", VA = "0x1B75718", Slot = "4")]
		public virtual void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x1B75828", Offset = "0x1B75828", VA = "0x1B75828")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1B75B34", Offset = "0x1B75B34", VA = "0x1B75B34", Slot = "5")]
		public virtual float GetHandleSize(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1B75B3C", Offset = "0x1B75B3C", VA = "0x1B75B3C", Slot = "6")]
		public virtual Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x1B75C80", Offset = "0x1B75C80", VA = "0x1B75C80", Slot = "7")]
		public virtual Transform GetWaypoint(int index)
		{
			return null;
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x1B75CBC", Offset = "0x1B75CBC", VA = "0x1B75CBC", Slot = "8")]
		public virtual int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1B75CC4", Offset = "0x1B75CC4", VA = "0x1B75CC4", Slot = "9")]
		public virtual int GetWaypointCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1B7491C", Offset = "0x1B7491C", VA = "0x1B7491C")]
		public PathManager()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class WaypointManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9604", Offset = "0xFB9604")]
		private sealed class <>c
		{
			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, PathManager>, bool> <>9__3_0;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<string, PathManager>, string> <>9__3_1;

			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x1B77104", Offset = "0x1B77104", VA = "0x1B77104")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x1B7710C", Offset = "0x1B7710C", VA = "0x1B7710C")]
			internal bool <CleanUp>b__3_0(KeyValuePair<string, PathManager> p)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0x1B77178", Offset = "0x1B77178", VA = "0x1B77178")]
			internal string <CleanUp>b__3_1(KeyValuePair<string, PathManager> p)
			{
				return null;
			}
		}

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<string, PathManager> Paths;

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1B76728", Offset = "0x1B76728", VA = "0x1B76728")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1B7335C", Offset = "0x1B7335C", VA = "0x1B7335C")]
		public static void AddPath(GameObject path)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1B76794", Offset = "0x1B76794", VA = "0x1B76794")]
		public static void CleanUp()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1B76A0C", Offset = "0x1B76A0C", VA = "0x1B76A0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x1B741D0", Offset = "0x1B741D0", VA = "0x1B741D0")]
		public static void DrawStraight(Vector3[] waypoints)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1B740D4", Offset = "0x1B740D4", VA = "0x1B740D4")]
		public static void DrawCurved(Vector3[] pathPoints)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x1B76A88", Offset = "0x1B76A88", VA = "0x1B76A88")]
		public static Vector3[] GetCurved(Vector3[] waypoints)
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1B761F0", Offset = "0x1B761F0", VA = "0x1B761F0")]
		public static Vector3 GetPoint(Vector3[] gizmoPoints, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1B76C1C", Offset = "0x1B76C1C", VA = "0x1B76C1C")]
		public static float GetPathLength(Vector3[] waypoints)
		{
			return default(float);
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1B76D48", Offset = "0x1B76D48", VA = "0x1B76D48")]
		public static List<Vector3> SmoothCurve(List<Vector3> pathToCurve, int interpolations)
		{
			return null;
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x1B7701C", Offset = "0x1B7701C", VA = "0x1B7701C")]
		public WaypointManager()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1D44", Offset = "0xFB1D44")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB1D44", Offset = "0xFB1D44")]
	public class navMove : MonoBehaviour
	{
		[Token(Token = "0x200047D")]
		public enum LoopType
		{
			[Token(Token = "0x4001350")]
			none,
			[Token(Token = "0x4001351")]
			loop,
			[Token(Token = "0x4001352")]
			pingPong,
			[Token(Token = "0x4001353")]
			random
		}

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9614", Offset = "0xFB9614")]
		private sealed class <Move>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x170004FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E31")]
				[Address(RVA = "0x1B780C8", Offset = "0x1B780C8", VA = "0x1B780C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E33")]
				[Address(RVA = "0x1B78130", Offset = "0x1B78130", VA = "0x1B78130", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x1B7750C", Offset = "0x1B7750C", VA = "0x1B7750C")]
			[DebuggerHidden]
			public <Move>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0x1B77F5C", Offset = "0x1B77F5C", VA = "0x1B77F5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0x1B77F60", Offset = "0x1B77F60", VA = "0x1B77F60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x1B780D0", Offset = "0x1B780D0", VA = "0x1B780D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9624", Offset = "0xFB9624")]
		private sealed class <NextWaypoint>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x170004FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E37")]
				[Address(RVA = "0x1B78488", Offset = "0x1B78488", VA = "0x1B78488", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E39")]
				[Address(RVA = "0x1B784F0", Offset = "0x1B784F0", VA = "0x1B784F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x1B775B4", Offset = "0x1B775B4", VA = "0x1B775B4")]
			[DebuggerHidden]
			public <NextWaypoint>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x1B78138", Offset = "0x1B78138", VA = "0x1B78138", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x1B7813C", Offset = "0x1B7813C", VA = "0x1B7813C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x1B78490", Offset = "0x1B78490", VA = "0x1B78490", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9634", Offset = "0xFB9634")]
		private sealed class <WaitForDestination>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <remain>5__2;

			[Token(Token = "0x170004FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E3D")]
				[Address(RVA = "0x1B789E4", Offset = "0x1B789E4", VA = "0x1B789E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3F")]
				[Address(RVA = "0x1B78A4C", Offset = "0x1B78A4C", VA = "0x1B78A4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x1B7765C", Offset = "0x1B7765C", VA = "0x1B7765C")]
			[DebuggerHidden]
			public <WaitForDestination>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x1B78804", Offset = "0x1B78804", VA = "0x1B78804", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0x1B78808", Offset = "0x1B78808", VA = "0x1B78808", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x1B789EC", Offset = "0x1B789EC", VA = "0x1B789EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9644", Offset = "0xFB9644")]
		private sealed class <ReachedEnd>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x17000500")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E43")]
				[Address(RVA = "0x1B78664", Offset = "0x1B78664", VA = "0x1B78664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000501")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E45")]
				[Address(RVA = "0x1B786CC", Offset = "0x1B786CC", VA = "0x1B786CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x1B777EC", Offset = "0x1B777EC", VA = "0x1B777EC")]
			[DebuggerHidden]
			public <ReachedEnd>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x1B784F8", Offset = "0x1B784F8", VA = "0x1B784F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x1B784FC", Offset = "0x1B784FC", VA = "0x1B784FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0x1B7866C", Offset = "0x1B7866C", VA = "0x1B7866C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9654", Offset = "0xFB9654")]
		private sealed class <Wait>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public navMove <>4__this;

			[Token(Token = "0x17000502")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E49")]
				[Address(RVA = "0x1B78794", Offset = "0x1B78794", VA = "0x1B78794", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000503")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E4B")]
				[Address(RVA = "0x1B787FC", Offset = "0x1B787FC", VA = "0x1B787FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E46")]
			[Address(RVA = "0x1B77C94", Offset = "0x1B77C94", VA = "0x1B77C94")]
			[DebuggerHidden]
			public <Wait>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001E47")]
			[Address(RVA = "0x1B786D4", Offset = "0x1B786D4", VA = "0x1B786D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E48")]
			[Address(RVA = "0x1B786D8", Offset = "0x1B786D8", VA = "0x1B786D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x1B7879C", Offset = "0x1B7879C", VA = "0x1B7879C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool updateRotation;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LoopType loopType;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Transform[] waypoints;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool repeat;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshAgent agent;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private System.Random rand;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int rndIndex;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool waiting;

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x1B771BC", Offset = "0x1B771BC", VA = "0x1B771BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1B7721C", Offset = "0x1B7721C", VA = "0x1B7721C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1B7722C", Offset = "0x1B7722C", VA = "0x1B7722C")]
		public void StartMove()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1B77490", Offset = "0x1B77490", VA = "0x1B77490")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC88D8", Offset = "0xFC88D8")]
		private IEnumerator Move()
		{
			return null;
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1B77538", Offset = "0x1B77538", VA = "0x1B77538")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC893C", Offset = "0xFC893C")]
		private IEnumerator NextWaypoint()
		{
			return null;
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1B775E0", Offset = "0x1B775E0", VA = "0x1B775E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC89A0", Offset = "0xFC89A0")]
		private IEnumerator WaitForDestination()
		{
			return null;
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1B77688", Offset = "0x1B77688", VA = "0x1B77688")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1B77770", Offset = "0x1B77770", VA = "0x1B77770")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8A04", Offset = "0xFC8A04")]
		private IEnumerator ReachedEnd()
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1B77818", Offset = "0x1B77818", VA = "0x1B77818")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x1B77AD0", Offset = "0x1B77AD0", VA = "0x1B77AD0")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1B77B78", Offset = "0x1B77B78", VA = "0x1B77B78")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1B77C08", Offset = "0x1B77C08", VA = "0x1B77C08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8A68", Offset = "0xFC8A68")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1B77CC0", Offset = "0x1B77CC0", VA = "0x1B77CC0")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1B77D0C", Offset = "0x1B77D0C", VA = "0x1B77D0C")]
		public void Reverse()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1B77D78", Offset = "0x1B77D78", VA = "0x1B77D78")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1B74C94", Offset = "0x1B74C94", VA = "0x1B74C94")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1B77DB0", Offset = "0x1B77DB0", VA = "0x1B77DB0")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1B77E90", Offset = "0x1B77E90", VA = "0x1B77E90")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x1B77EAC", Offset = "0x1B77EAC", VA = "0x1B77EAC")]
		public navMove()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB1DCC", Offset = "0xFB1DCC")]
	public class splineMove : MonoBehaviour
	{
		[Token(Token = "0x2000483")]
		public enum TimeValue
		{
			[Token(Token = "0x4001366")]
			time,
			[Token(Token = "0x4001367")]
			speed
		}

		[Token(Token = "0x2000484")]
		public enum LoopType
		{
			[Token(Token = "0x4001369")]
			none,
			[Token(Token = "0x400136A")]
			loop,
			[Token(Token = "0x400136B")]
			pingPong,
			[Token(Token = "0x400136C")]
			random,
			[Token(Token = "0x400136D")]
			yoyo
		}

		[Token(Token = "0x2000485")]
		public enum RotationType
		{
			[Token(Token = "0x400136F")]
			none,
			[Token(Token = "0x4001370")]
			all
		}

		[Token(Token = "0x2000486")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9664", Offset = "0xFB9664")]
		private sealed class <Wait>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x4001374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public splineMove <>4__this;

			[Token(Token = "0x17000504")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E4F")]
				[Address(RVA = "0x1B7A06C", Offset = "0x1B7A06C", VA = "0x1B7A06C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000505")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E51")]
				[Address(RVA = "0x1B7A0D4", Offset = "0x1B7A0D4", VA = "0x1B7A0D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x1B79E10", Offset = "0x1B79E10", VA = "0x1B79E10")]
			[DebuggerHidden]
			public <Wait>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x1B79FAC", Offset = "0x1B79FAC", VA = "0x1B79FAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0x1B79FB0", Offset = "0x1B79FB0", VA = "0x1B79FB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x1B7A074", Offset = "0x1B7A074", VA = "0x1B7A074", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool local;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lookAhead;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float sizeToAdd;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TimeValue timeValue;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve animEaseType;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LoopType loopType;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3[] waypoints;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PathType pathType;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public DG.Tweening.PathMode pathMode;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Ease easeType;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public AxisConstraint lockPosition;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AxisConstraint lockRotation;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public RotationType waypointRotation;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rotationTarget;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Tweener tween;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3[] wpPos;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float originSpeed;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion originRot;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private System.Random rand;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int[] rndArray;

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x1B78A54", Offset = "0x1B78A54", VA = "0x1B78A54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1B70F04", Offset = "0x1B70F04", VA = "0x1B70F04")]
		public void StartMove()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1B78A64", Offset = "0x1B78A64", VA = "0x1B78A64")]
		private void Initialize(int startAt = 0)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1B78C88", Offset = "0x1B78C88", VA = "0x1B78C88")]
		private void CreateTween()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1B79438", Offset = "0x1B79438", VA = "0x1B79438")]
		private void OnWaypointReached(int index)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x1B79478", Offset = "0x1B79478", VA = "0x1B79478")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1B795F8", Offset = "0x1B795F8", VA = "0x1B795F8")]
		private void OnWaypointRotation()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1B79CD4", Offset = "0x1B79CD4", VA = "0x1B79CD4")]
		private void ApplyWaypointRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1B79CF0", Offset = "0x1B79CF0", VA = "0x1B79CF0")]
		private void ReachedEnd()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1B7910C", Offset = "0x1B7910C", VA = "0x1B7910C")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1B793CC", Offset = "0x1B793CC", VA = "0x1B793CC")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x1B7127C", Offset = "0x1B7127C", VA = "0x1B7127C")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1B79D84", Offset = "0x1B79D84", VA = "0x1B79D84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8ACC", Offset = "0xFC8ACC")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1B7132C", Offset = "0x1B7132C", VA = "0x1B7132C")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1B79E3C", Offset = "0x1B79E3C", VA = "0x1B79E3C")]
		public void Reverse()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1B70ECC", Offset = "0x1B70ECC", VA = "0x1B70ECC")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1B710D4", Offset = "0x1B710D4", VA = "0x1B710D4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1B71118", Offset = "0x1B71118", VA = "0x1B71118")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1B713A8", Offset = "0x1B713A8", VA = "0x1B713A8")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x1B79EE8", Offset = "0x1B79EE8", VA = "0x1B79EE8")]
		public splineMove()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x20001A3")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000487")]
		public enum UpdateMode
		{
			[Token(Token = "0x4001376")]
			Update,
			[Token(Token = "0x4001377")]
			FixedUpdate,
			[Token(Token = "0x4001378")]
			LateUpdate,
			[Token(Token = "0x4001379")]
			FixedLateUpdate
		}

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBBBC0", Offset = "0xFBBBC0")]
		public bool smoothFollow;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBBBF8", Offset = "0xFBBBF8")]
		public float rotationSensitivity;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBBC30", Offset = "0xFBBC30")]
		public float distance;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBBC68", Offset = "0xFBBC68")]
		public LayerMask blockingLayers;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBBCA0", Offset = "0xFBBCA0")]
		public float blockedOffset;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBBCB8", Offset = "0xFBBCB8")]
		private float <x>k__BackingField;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBBCC8", Offset = "0xFBBCC8")]
		private float <y>k__BackingField;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBBCD8", Offset = "0xFBBCD8")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 targetDistance;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 smoothPosition;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x17000225")]
		public float x
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x195E0B8", Offset = "0x195E0B8", VA = "0x195E0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8B30", Offset = "0xFC8B30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x195E0C0", Offset = "0x195E0C0", VA = "0x195E0C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8B40", Offset = "0xFC8B40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public float y
		{
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x195E0C8", Offset = "0x195E0C8", VA = "0x195E0C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8B50", Offset = "0xFC8B50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x195E0D0", Offset = "0x195E0D0", VA = "0x195E0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8B60", Offset = "0xFC8B60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public float distanceTarget
		{
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x195E0D8", Offset = "0x195E0D8", VA = "0x195E0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8B70", Offset = "0xFC8B70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0x195E0E0", Offset = "0x195E0E0", VA = "0x195E0E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8B80", Offset = "0xFC8B80")]
			private set
			{
			}
		}

		[Token(Token = "0x17000228")]
		private float zoomAdd
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x195EB54", Offset = "0x195EB54", VA = "0x195EB54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x195E0E8", Offset = "0x195E0E8", VA = "0x195E0E8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x195E210", Offset = "0x195E210", VA = "0x195E210", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x195E26C", Offset = "0x195E26C", VA = "0x195E26C", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x195E2D4", Offset = "0x195E2D4", VA = "0x195E2D4", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x195E338", Offset = "0x195E338", VA = "0x195E338")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x195E244", Offset = "0x195E244", VA = "0x195E244")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x195E4B8", Offset = "0x195E4B8", VA = "0x195E4B8")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x195EAA4", Offset = "0x195EAA4", VA = "0x195EAA4")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x195EBC8", Offset = "0x195EBC8", VA = "0x195EBC8")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x195ECD8", Offset = "0x195ECD8", VA = "0x195ECD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x195ED10", Offset = "0x195ED10", VA = "0x195ED10")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x195EEC8", Offset = "0x195EEC8", VA = "0x195EEC8")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x195EF78", Offset = "0x195EF78", VA = "0x195EF78")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A5")]
	public enum Axis
	{
		[Token(Token = "0x40006FB")]
		X,
		[Token(Token = "0x40006FC")]
		Y,
		[Token(Token = "0x40006FD")]
		Z
	}
	[Token(Token = "0x20001A6")]
	public class AxisTools
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1956738", Offset = "0x1956738", VA = "0x1956738")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x19567F0", Offset = "0x19567F0", VA = "0x19567F0")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x195689C", Offset = "0x195689C", VA = "0x195689C")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x1956A80", Offset = "0x1956A80", VA = "0x1956A80")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x19569B8", Offset = "0x19569B8", VA = "0x19569B8")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x1956B9C", Offset = "0x1956B9C", VA = "0x1956B9C")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x1956DC8", Offset = "0x1956DC8", VA = "0x1956DC8")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x2000488")]
		public class LimbOrientation
		{
			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x19570C8", Offset = "0x19570C8", VA = "0x19570C8")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x17000229")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x1956E50", Offset = "0x1956E50", VA = "0x1956E50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x1957140", Offset = "0x1957140", VA = "0x1957140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x1956DD0", Offset = "0x1956DD0", VA = "0x1956DD0")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x2000489")]
		public enum BoneType
		{
			[Token(Token = "0x400137E")]
			Unassigned,
			[Token(Token = "0x400137F")]
			Spine,
			[Token(Token = "0x4001380")]
			Head,
			[Token(Token = "0x4001381")]
			Arm,
			[Token(Token = "0x4001382")]
			Leg,
			[Token(Token = "0x4001383")]
			Tail,
			[Token(Token = "0x4001384")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x200048A")]
		public enum BoneSide
		{
			[Token(Token = "0x4001386")]
			Center,
			[Token(Token = "0x4001387")]
			Left,
			[Token(Token = "0x4001388")]
			Right
		}

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x19573B8", Offset = "0x19573B8", VA = "0x19573B8")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x19576C0", Offset = "0x19576C0", VA = "0x19576C0")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1957918", Offset = "0x1957918", VA = "0x1957918")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x195799C", Offset = "0x195799C", VA = "0x195799C")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1957A48", Offset = "0x1957A48", VA = "0x1957A48")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1957570", Offset = "0x1957570", VA = "0x1957570")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1957878", Offset = "0x1957878", VA = "0x1957878")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x1958288", Offset = "0x1958288", VA = "0x1958288")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x19580A0", Offset = "0x19580A0", VA = "0x19580A0")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x1958194", Offset = "0x1958194", VA = "0x1958194")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x1957C68", Offset = "0x1957C68", VA = "0x1957C68")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1957D1C", Offset = "0x1957D1C", VA = "0x1957D1C")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x1957DD0", Offset = "0x1957DD0", VA = "0x1957DD0")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1957E84", Offset = "0x1957E84", VA = "0x1957E84")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x1957F38", Offset = "0x1957F38", VA = "0x1957F38")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1957FEC", Offset = "0x1957FEC", VA = "0x1957FEC")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x195849C", Offset = "0x195849C", VA = "0x195849C")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1957B7C", Offset = "0x1957B7C", VA = "0x1957B7C")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x195840C", Offset = "0x195840C", VA = "0x195840C")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x195850C", Offset = "0x195850C", VA = "0x195850C")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x19585E4", Offset = "0x19585E4", VA = "0x19585E4")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1958390", Offset = "0x1958390", VA = "0x1958390")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1958318", Offset = "0x1958318", VA = "0x1958318")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001A9")]
	public class BipedReferences
	{
		[Token(Token = "0x200048B")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x17000506")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6001E54")]
				[Address(RVA = "0x195E0B0", Offset = "0x195E0B0", VA = "0x195E0B0")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x1124BD0", Offset = "0x1124BD0", VA = "0x1124BD0")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x1700022B")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0x195A97C", Offset = "0x195A97C", VA = "0x195A97C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022C")]
		public bool isEmpty
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x195AD68", Offset = "0x195AD68", VA = "0x195AD68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x195AD78", Offset = "0x195AD78", VA = "0x195AD78", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x195B1A4", Offset = "0x195B1A4", VA = "0x195B1A4", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x195B5DC", Offset = "0x195B5DC", VA = "0x195B5DC")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x195BCE8", Offset = "0x195BCE8", VA = "0x195BCE8")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x195B858", Offset = "0x195B858", VA = "0x195B858")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x195C51C", Offset = "0x195C51C", VA = "0x195C51C")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x195C61C", Offset = "0x195C61C", VA = "0x195C61C")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x195CBD0", Offset = "0x195CBD0", VA = "0x195CBD0")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x195C9C0", Offset = "0x195C9C0", VA = "0x195C9C0")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x195C838", Offset = "0x195C838", VA = "0x195C838")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x195C6BC", Offset = "0x195C6BC", VA = "0x195C6BC")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x195CAC4", Offset = "0x195CAC4", VA = "0x195CAC4")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x195CCCC", Offset = "0x195CCCC", VA = "0x195CCCC")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x195D830", Offset = "0x195D830", VA = "0x195D830")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x195D2FC", Offset = "0x195D2FC", VA = "0x195D2FC")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x195DB78", Offset = "0x195DB78", VA = "0x195DB78")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x195D648", Offset = "0x195D648", VA = "0x195D648")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x195DB80", Offset = "0x195DB80", VA = "0x195DB80")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x195DB88", Offset = "0x195DB88", VA = "0x195DB88")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x195DD54", Offset = "0x195DD54", VA = "0x195DD54")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x195DF78", Offset = "0x195DF78", VA = "0x195DF78")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x195B7D0", Offset = "0x195B7D0", VA = "0x195B7D0")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x195EF94", Offset = "0x195EF94", VA = "0x195EF94")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x195EF9C", Offset = "0x195EF9C", VA = "0x195EF9C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x195F0DC", Offset = "0x195F0DC", VA = "0x195F0DC")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class Hierarchy
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1B6A730", Offset = "0x1B6A730", VA = "0x1B6A730")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x1B6A930", Offset = "0x1B6A930", VA = "0x1B6A930")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1B6A7C8", Offset = "0x1B6A7C8", VA = "0x1B6A7C8")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x1B6AA54", Offset = "0x1B6AA54", VA = "0x1B6AA54")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x1B6AB78", Offset = "0x1B6AB78", VA = "0x1B6AB78")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x1B6AE28", Offset = "0x1B6AE28", VA = "0x1B6AE28")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x1B6AF44", Offset = "0x1B6AF44", VA = "0x1B6AF44")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x1B6B0CC", Offset = "0x1B6B0CC", VA = "0x1B6B0CC")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1B6B460", Offset = "0x1B6B460", VA = "0x1B6B460")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1B6B24C", Offset = "0x1B6B24C", VA = "0x1B6B24C")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1B6B600", Offset = "0x1B6B600", VA = "0x1B6B600")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1B6B608", Offset = "0x1B6B608", VA = "0x1B6B608")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1B6B698", Offset = "0x1B6B698", VA = "0x1B6B698")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AE")]
	public enum InterpolationMode
	{
		[Token(Token = "0x400072B")]
		None,
		[Token(Token = "0x400072C")]
		InOutCubic,
		[Token(Token = "0x400072D")]
		InOutQuintic,
		[Token(Token = "0x400072E")]
		InOutSine,
		[Token(Token = "0x400072F")]
		InQuintic,
		[Token(Token = "0x4000730")]
		InQuartic,
		[Token(Token = "0x4000731")]
		InCubic,
		[Token(Token = "0x4000732")]
		InQuadratic,
		[Token(Token = "0x4000733")]
		InElastic,
		[Token(Token = "0x4000734")]
		InElasticSmall,
		[Token(Token = "0x4000735")]
		InElasticBig,
		[Token(Token = "0x4000736")]
		InSine,
		[Token(Token = "0x4000737")]
		InBack,
		[Token(Token = "0x4000738")]
		OutQuintic,
		[Token(Token = "0x4000739")]
		OutQuartic,
		[Token(Token = "0x400073A")]
		OutCubic,
		[Token(Token = "0x400073B")]
		OutInCubic,
		[Token(Token = "0x400073C")]
		OutInQuartic,
		[Token(Token = "0x400073D")]
		OutElastic,
		[Token(Token = "0x400073E")]
		OutElasticSmall,
		[Token(Token = "0x400073F")]
		OutElasticBig,
		[Token(Token = "0x4000740")]
		OutSine,
		[Token(Token = "0x4000741")]
		OutBack,
		[Token(Token = "0x4000742")]
		OutBackCubic,
		[Token(Token = "0x4000743")]
		OutBackQuartic,
		[Token(Token = "0x4000744")]
		BackInCubic,
		[Token(Token = "0x4000745")]
		BackInQuartic
	}
	[Token(Token = "0x20001AF")]
	public class Interp
	{
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1B6B72C", Offset = "0x1B6B72C", VA = "0x1B6B72C")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1B6C194", Offset = "0x1B6C194", VA = "0x1B6C194")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1B6C29C", Offset = "0x1B6C29C", VA = "0x1B6C29C")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1B6BA98", Offset = "0x1B6BA98", VA = "0x1B6BA98")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1B6BAA4", Offset = "0x1B6BAA4", VA = "0x1B6BAA4")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1B6BAC8", Offset = "0x1B6BAC8", VA = "0x1B6BAC8")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1B6BB04", Offset = "0x1B6BB04", VA = "0x1B6BB04")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1B6BB1C", Offset = "0x1B6BB1C", VA = "0x1B6BB1C")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1B6BB30", Offset = "0x1B6BB30", VA = "0x1B6BB30")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1B6BB44", Offset = "0x1B6BB44", VA = "0x1B6BB44")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1B6BB54", Offset = "0x1B6BB54", VA = "0x1B6BB54")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1B6BB9C", Offset = "0x1B6BB9C", VA = "0x1B6BB9C")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1B6BBD4", Offset = "0x1B6BBD4", VA = "0x1B6BBD4")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1B6BBFC", Offset = "0x1B6BBFC", VA = "0x1B6BBFC")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1B6C398", Offset = "0x1B6C398", VA = "0x1B6C398")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1B6BC30", Offset = "0x1B6BC30", VA = "0x1B6BC30")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1B6BC58", Offset = "0x1B6BC58", VA = "0x1B6BC58")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1B6BC88", Offset = "0x1B6BC88", VA = "0x1B6BC88")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1B6BCBC", Offset = "0x1B6BCBC", VA = "0x1B6BCBC")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1B6BD00", Offset = "0x1B6BD00", VA = "0x1B6BD00")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1B6BD64", Offset = "0x1B6BD64", VA = "0x1B6BD64")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1B6BDC8", Offset = "0x1B6BDC8", VA = "0x1B6BDC8")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1B6BE1C", Offset = "0x1B6BE1C", VA = "0x1B6BE1C")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x1B6BE70", Offset = "0x1B6BE70", VA = "0x1B6BE70")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1B6BF08", Offset = "0x1B6BF08", VA = "0x1B6BF08")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1B6BF9C", Offset = "0x1B6BF9C", VA = "0x1B6BF9C")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1B6C3CC", Offset = "0x1B6C3CC", VA = "0x1B6C3CC")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1B6C040", Offset = "0x1B6C040", VA = "0x1B6C040")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1B6C124", Offset = "0x1B6C124", VA = "0x1B6C124")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1B6C154", Offset = "0x1B6C154", VA = "0x1B6C154")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1B6C4B4", Offset = "0x1B6C4B4", VA = "0x1B6C4B4")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x1B6C4BC", Offset = "0x1B6C4BC", VA = "0x1B6C4BC")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1B6C54C", Offset = "0x1B6C54C", VA = "0x1B6C54C")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1B6C5E0", Offset = "0x1B6C5E0", VA = "0x1B6C5E0")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1B6C638", Offset = "0x1B6C638", VA = "0x1B6C638")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1B6C704", Offset = "0x1B6C704", VA = "0x1B6C704")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1B6C650", Offset = "0x1B6C650", VA = "0x1B6C650")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x1B6C71C", Offset = "0x1B6C71C", VA = "0x1B6C71C")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1B6C7C0", Offset = "0x1B6C7C0", VA = "0x1B6C7C0")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x1B6C7EC", Offset = "0x1B6C7EC", VA = "0x1B6C7EC")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x1B6C83C", Offset = "0x1B6C83C", VA = "0x1B6C83C")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1B6C8A8", Offset = "0x1B6C8A8", VA = "0x1B6C8A8")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x1B6C99C", Offset = "0x1B6C99C", VA = "0x1B6C99C")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1B6CA74", Offset = "0x1B6CA74", VA = "0x1B6CA74")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x1B6CAD4", Offset = "0x1B6CAD4", VA = "0x1B6CAD4")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B2")]
	public static class QuaTools
	{
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x1B6CB04", Offset = "0x1B6CB04", VA = "0x1B6CB04")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x1B6CC50", Offset = "0x1B6CC50", VA = "0x1B6CC50")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1B6CD9C", Offset = "0x1B6CD9C", VA = "0x1B6CD9C")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1B6CEB0", Offset = "0x1B6CEB0", VA = "0x1B6CEB0")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x1B6CFC4", Offset = "0x1B6CFC4", VA = "0x1B6CFC4")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1B6D150", Offset = "0x1B6D150", VA = "0x1B6D150")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1B6D220", Offset = "0x1B6D220", VA = "0x1B6D220")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1B6D374", Offset = "0x1B6D374", VA = "0x1B6D374")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1B6D5F8", Offset = "0x1B6D5F8", VA = "0x1B6D5F8")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x1B6D80C", Offset = "0x1B6D80C", VA = "0x1B6D80C")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x1B683D4", Offset = "0x1B683D4", VA = "0x1B683D4")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20001B3")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x1700022D")]
		public static T instance
		{
			[Token(Token = "0x6000C32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C33")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C34")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBBCF8", Offset = "0xFBBCF8")]
		public bool fixTransforms;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x1700022E")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x1B6DAC4", Offset = "0x1B6DAC4", VA = "0x1B6DAC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022F")]
		private bool isAnimated
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x1B6DDF8", Offset = "0x1B6DDF8", VA = "0x1B6DDF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x1B6D98C", Offset = "0x1B6D98C", VA = "0x1B6D98C")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1B6DA24", Offset = "0x1B6DA24", VA = "0x1B6DA24", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1B6DA28", Offset = "0x1B6DA28", VA = "0x1B6DA28", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1B6DA2C", Offset = "0x1B6DA2C", VA = "0x1B6DA2C", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1B6DA30", Offset = "0x1B6DA30", VA = "0x1B6DA30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1B6DAC0", Offset = "0x1B6DAC0", VA = "0x1B6DAC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1B6DA68", Offset = "0x1B6DA68", VA = "0x1B6DA68")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1B6DDAC", Offset = "0x1B6DDAC", VA = "0x1B6DDAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1B6DBB4", Offset = "0x1B6DBB4", VA = "0x1B6DBB4")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1B6DEB4", Offset = "0x1B6DEB4", VA = "0x1B6DEB4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1B6DF10", Offset = "0x1B6DF10", VA = "0x1B6DF10")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1B6DF6C", Offset = "0x1B6DF6C", VA = "0x1B6DF6C")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1B6DFB4", Offset = "0x1B6DFB4", VA = "0x1B6DFB4")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1B6DFC4", Offset = "0x1B6DFC4", VA = "0x1B6DFC4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1B6E07C", Offset = "0x1B6E07C", VA = "0x1B6E07C")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1B6E134", Offset = "0x1B6E134", VA = "0x1B6E134")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1B6E1EC", Offset = "0x1B6E1EC", VA = "0x1B6E1EC")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public static class V3Tools
	{
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1B6E1F4", Offset = "0x1B6E1F4", VA = "0x1B6E1F4")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1B6E2EC", Offset = "0x1B6E2EC", VA = "0x1B6E2EC")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1B6E3E4", Offset = "0x1B6E3E4", VA = "0x1B6E3E4")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1B6E4DC", Offset = "0x1B6E4DC", VA = "0x1B6E4DC")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1B6E5DC", Offset = "0x1B6E5DC", VA = "0x1B6E5DC")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1B6E818", Offset = "0x1B6E818", VA = "0x1B6E818")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1B6EA68", Offset = "0x1B6EA68", VA = "0x1B6EA68")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1B6EC68", Offset = "0x1B6EC68", VA = "0x1B6EC68")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20001B7")]
	public static class Warning
	{
		[Token(Token = "0x200048C")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1B6EE44", Offset = "0x1B6EE44", VA = "0x1B6EE44")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1B6F270", Offset = "0x1B6F270", VA = "0x1B6F270")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20001B8")]
	public class AimBoxing : MonoBehaviour
	{
		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pin;

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x195F110", Offset = "0x195F110", VA = "0x195F110")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x195F194", Offset = "0x195F194", VA = "0x195F194")]
		public AimBoxing()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class AimSwing : MonoBehaviour
	{
		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK ik;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBBD30", Offset = "0xFBBD30")]
		public Vector3 animatedSwingDirection;

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x195F19C", Offset = "0x195F19C", VA = "0x195F19C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x195F2A4", Offset = "0x195F2A4", VA = "0x195F2A4")]
		public AimSwing()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class SimpleAimingSystem : MonoBehaviour
	{
		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBBD68", Offset = "0xFBBD68")]
		public AimPoser aimPoser;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBBDA0", Offset = "0xFBBDA0")]
		public AimIK aim;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBBDD8", Offset = "0xFBBDD8")]
		public LookAtIK lookAt;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBBE10", Offset = "0xFBBE10")]
		public Animator animator;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBBE48", Offset = "0xFBBE48")]
		public float crossfadeTime;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBBE80", Offset = "0xFBBE80")]
		public float minAimDistance;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1AFF368", Offset = "0x1AFF368", VA = "0x1AFF368")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1AFF3AC", Offset = "0x1AFF3AC", VA = "0x1AFF3AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1AFF500", Offset = "0x1AFF500", VA = "0x1AFF500")]
		private void Pose()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1AFF718", Offset = "0x1AFF718", VA = "0x1AFF718")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1AFFA58", Offset = "0x1AFFA58", VA = "0x1AFFA58")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1AFFB30", Offset = "0x1AFFB30", VA = "0x1AFFB30")]
		public SimpleAimingSystem()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class TerrainOffset : MonoBehaviour
	{
		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 raycastOffset;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float min;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float lerpSpeed;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit hit;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 offset;

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1B008FC", Offset = "0x1B008FC", VA = "0x1B008FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1B00B60", Offset = "0x1B00B60", VA = "0x1B00B60")]
		private Vector3 GetGroundHeightOffset(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1B00DB0", Offset = "0x1B00DB0", VA = "0x1B00DB0")]
		public TerrainOffset()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class BipedIKvsAnimatorIK : MonoBehaviour
	{
		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xFBBEB8", Offset = "0xFBBEB8")]
		public Animator animator;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedIK bipedIK;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xFBBEF0", Offset = "0xFBBEF0")]
		public Transform lookAtTargetBiped;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lookAtTargetAnimator;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBBF28", Offset = "0xFBBF28")]
		public float lookAtWeight;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBBF40", Offset = "0xFBBF40")]
		public float lookAtBodyWeight;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBBF58", Offset = "0xFBBF58")]
		public float lookAtHeadWeight;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBBF70", Offset = "0xFBBF70")]
		public float lookAtEyesWeight;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBBF88", Offset = "0xFBBF88")]
		public float lookAtClampWeight;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBBFA0", Offset = "0xFBBFA0")]
		public float lookAtClampWeightHead;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBBFB8", Offset = "0xFBBFB8")]
		public float lookAtClampWeightEyes;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xFBBFD0", Offset = "0xFBBFD0")]
		public Transform footTargetBiped;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform footTargetAnimator;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC008", Offset = "0xFBC008")]
		public float footPositionWeight;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC020", Offset = "0xFBC020")]
		public float footRotationWeight;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xFBC038", Offset = "0xFBC038")]
		public Transform handTargetBiped;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform handTargetAnimator;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC070", Offset = "0xFBC070")]
		public float handPositionWeight;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC088", Offset = "0xFBC088")]
		public float handRotationWeight;

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1960E80", Offset = "0x1960E80", VA = "0x1960E80")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x196132C", Offset = "0x196132C", VA = "0x196132C")]
		public BipedIKvsAnimatorIK()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class MechSpider : MonoBehaviour
	{
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform body;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechSpiderLeg[] legs;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float legRotationWeight;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rootPositionSpeed;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootRotationSpeed;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float breatheSpeed;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float breatheMagnitude;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minHeight;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float raycastHeight;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float raycastDistance;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 defaultBodyLocalPosition;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float sine;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit rootHit;

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1AF9038", Offset = "0x1AF9038", VA = "0x1AF9038")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1AF9A6C", Offset = "0x1AF9A6C", VA = "0x1AF9A6C")]
		private Vector3 GetLegCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1AF9754", Offset = "0x1AF9754", VA = "0x1AF9754")]
		private Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1AF9C14", Offset = "0x1AF9C14", VA = "0x1AF9C14")]
		public MechSpider()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class MechSpiderController : MonoBehaviour
	{
		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x17000230")]
		public Vector3 inputVector
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x1AF9C40", Offset = "0x1AF9C40", VA = "0x1AF9C40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1AF9CE0", Offset = "0x1AF9CE0", VA = "0x1AF9CE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1AF9F78", Offset = "0x1AF9F78", VA = "0x1AF9F78")]
		public MechSpiderController()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class MechSpiderLeg : MonoBehaviour
	{
		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9674", Offset = "0xFB9674")]
		private sealed class <Step>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MechSpiderLeg <>4__this;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 stepStartPosition;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x17000507")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E5C")]
				[Address(RVA = "0x1AFAC88", Offset = "0x1AFAC88", VA = "0x1AFAC88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000508")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E5E")]
				[Address(RVA = "0x1AFACF0", Offset = "0x1AFACF0", VA = "0x1AFACF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x1AFA90C", Offset = "0x1AFA90C", VA = "0x1AFA90C")]
			[DebuggerHidden]
			public <Step>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x1AFA968", Offset = "0x1AFA968", VA = "0x1AFA968", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x1AFA96C", Offset = "0x1AFA96C", VA = "0x1AFA96C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x1AFAC90", Offset = "0x1AFAC90", VA = "0x1AFAC90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechSpiderLeg unSync;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDelay;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxOffset;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stepSpeed;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float footHeight;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocityPrediction;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastFocus;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve yOffset;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ParticleSystem sand;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IK ik;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float stepProgress;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float lastStepTime;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 defaultPosition;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private RaycastHit hit;

		[Token(Token = "0x17000231")]
		public bool isStepping
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x1AF9F8C", Offset = "0x1AF9F8C", VA = "0x1AF9F8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000232")]
		public Vector3 position
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x1AF9BE0", Offset = "0x1AF9BE0", VA = "0x1AF9BE0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x1AF9FA0", Offset = "0x1AF9FA0", VA = "0x1AF9FA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1AF9FF0", Offset = "0x1AF9FF0", VA = "0x1AF9FF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1AFA050", Offset = "0x1AFA050", VA = "0x1AFA050")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1AFA1F8", Offset = "0x1AFA1F8", VA = "0x1AFA1F8")]
		private Vector3 GetStepTarget(out bool stepFound, float focus, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1AFA5C8", Offset = "0x1AFA5C8", VA = "0x1AFA5C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1AFA6F0", Offset = "0x1AFA6F0", VA = "0x1AFA6F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1AFA638", Offset = "0x1AFA638", VA = "0x1AFA638")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8C00", Offset = "0xFC8C00")]
		private IEnumerator Step(Vector3 stepStartPosition, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1AFA938", Offset = "0x1AFA938", VA = "0x1AFA938")]
		public MechSpiderLeg()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class MechSpiderParticles : MonoBehaviour
	{
		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpiderController mechSpiderController;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1AFACF8", Offset = "0x1AFACF8", VA = "0x1AFACF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1AFADB4", Offset = "0x1AFADB4", VA = "0x1AFADB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1AFB048", Offset = "0x1AFB048", VA = "0x1AFB048")]
		public MechSpiderParticles()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class AnimationWarping : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200048E")]
		public struct Warp
		{
			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC25EC", Offset = "0xFC25EC")]
			public int animationLayer;

			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2624", Offset = "0xFC2624")]
			public string animationState;

			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC265C", Offset = "0xFC265C")]
			public AnimationCurve weightCurve;

			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2694", Offset = "0xFC2694")]
			public Transform warpFrom;

			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC26CC", Offset = "0xFC26CC")]
			public Transform warpTo;

			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2704", Offset = "0xFC2704")]
			public FullBodyBipedEffector effector;
		}

		[Serializable]
		[Token(Token = "0x200048F")]
		public enum EffectorMode
		{
			[Token(Token = "0x4001397")]
			PositionOffset,
			[Token(Token = "0x4001398")]
			Position
		}

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC0A0", Offset = "0xFBC0A0")]
		public Animator animator;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC0D8", Offset = "0xFBC0D8")]
		public EffectorMode effectorMode;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xFBC110", Offset = "0xFBC110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC110", Offset = "0xFBC110")]
		public Warp[] warps;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EffectorMode lastMode;

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x195F31C", Offset = "0x195F31C", VA = "0x195F31C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x195F348", Offset = "0x195F348", VA = "0x195F348")]
		public float GetWarpWeight(int warpIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x195F550", Offset = "0x195F550", VA = "0x195F550", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x195F904", Offset = "0x195F904", VA = "0x195F904")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x195F9A4", Offset = "0x195F9A4", VA = "0x195F9A4")]
		public AnimationWarping()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1E14", Offset = "0xFB1E14")]
	public class AnimatorController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blendSpeed;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAngle;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rootMotionWeight;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator animator;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 moveBlend;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Vector3 moveInput;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 velocity;

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x195F9AC", Offset = "0x195F9AC", VA = "0x195F9AC", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x195FA0C", Offset = "0x195FA0C", VA = "0x195FA0C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x195FC44", Offset = "0x195FC44", VA = "0x195FC44", Slot = "5")]
		public virtual void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x195FEA8", Offset = "0x195FEA8", VA = "0x195FEA8")]
		public AnimatorController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1E78", Offset = "0xFB1E78")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1E78", Offset = "0xFB1E78")]
	public class AnimatorController3rdPersonIK : AnimatorController3rdPerson
	{
		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC160", Offset = "0xFBC160")]
		public float headLookWeight;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 gunHoldOffset;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Recoil recoil;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AimIK aim;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 headLookAxis;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 leftHandPosRelToRightHand;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion leftHandRotRelToRightHand;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 aimTarget;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x195FEBC", Offset = "0x195FEBC", VA = "0x195FEBC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1960068", Offset = "0x1960068", VA = "0x1960068", Slot = "5")]
		public override void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x19600DC", Offset = "0x19600DC", VA = "0x19600DC")]
		private void Read()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1960234", Offset = "0x1960234", VA = "0x1960234")]
		private void AimIK()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x196027C", Offset = "0x196027C", VA = "0x196027C")]
		private void FBBIK()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1960874", Offset = "0x1960874", VA = "0x1960874")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1960638", Offset = "0x1960638", VA = "0x1960638")]
		private void HeadLookAt(Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1960BCC", Offset = "0x1960BCC", VA = "0x1960BCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1960CE8", Offset = "0x1960CE8", VA = "0x1960CE8")]
		public AnimatorController3rdPersonIK()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1F04", Offset = "0xFB1F04")]
	public class CharacterAnimationThirdPersonIK : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x196237C", Offset = "0x196237C", VA = "0x196237C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x19623E4", Offset = "0x19623E4", VA = "0x19623E4", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x19626A8", Offset = "0x19626A8", VA = "0x19626A8")]
		private void RotateEffector(IKEffector effector, Quaternion rotation, float mlp)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1962860", Offset = "0x1962860", VA = "0x1962860")]
		public CharacterAnimationThirdPersonIK()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1F68", Offset = "0xFB1F68")]
	public class CharacterController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CameraController cam;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimatorController3rdPerson animatorController;

		[Token(Token = "0x17000233")]
		private static Vector3 inputVector
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x19636CC", Offset = "0x19636CC", VA = "0x19636CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000234")]
		private static Vector3 inputVectorRaw
		{
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x196376C", Offset = "0x196376C", VA = "0x196376C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1963410", Offset = "0x1963410", VA = "0x1963410")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1963488", Offset = "0x1963488", VA = "0x1963488")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x196380C", Offset = "0x196380C", VA = "0x196380C")]
		public CharacterController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class EffectorOffset : OffsetModifier
	{
		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC188", Offset = "0xFBC188")]
		public float handsMaintainRelativePositionWeight;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 bodyOffset;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftShoulderOffset;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rightShoulderOffset;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 leftThighOffset;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 rightThighOffset;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 rightHandOffset;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 leftFootOffset;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 rightFootOffset;

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1965E9C", Offset = "0x1965E9C", VA = "0x1965E9C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1966480", Offset = "0x1966480", VA = "0x1966480")]
		public EffectorOffset()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class ExplosionDemo : MonoBehaviour
	{
		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleLocomotion character;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMlp;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float upForce;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightFalloffSpeed;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve weightFalloff;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve explosionForceByDistance;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scale;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float weight;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 defaultScale;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1AF4228", Offset = "0x1AF4228", VA = "0x1AF4228")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1AF42DC", Offset = "0x1AF42DC", VA = "0x1AF42DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1AF4758", Offset = "0x1AF4758", VA = "0x1AF4758")]
		private void SetEffectorWeights(float w)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1AF4804", Offset = "0x1AF4804", VA = "0x1AF4804")]
		public ExplosionDemo()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class FBBIKSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000490")]
		public class Limb
		{
			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FBIKChain.Smoothing reachSmoothing;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maintainRelativePositionWeight;

			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float mappingWeight;

			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x1AF49D8", Offset = "0x1AF49D8", VA = "0x1AF49D8")]
			public void Apply(FullBodyBipedChain chain, IKSolverFullBodyBiped solver)
			{
			}

			[Token(Token = "0x6001E60")]
			[Address(RVA = "0x1AF4B0C", Offset = "0x1AF4B0C", VA = "0x1AF4B0C")]
			public Limb()
			{
			}
		}

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfterStart;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Limb leftArm;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Limb rightArm;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Limb leftLeg;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Limb rightLeg;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rootPin;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bodyEffectChildNodes;

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1AF488C", Offset = "0x1AF488C", VA = "0x1AF488C")]
		public void UpdateSettings()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1AF4A5C", Offset = "0x1AF4A5C", VA = "0x1AF4A5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1AF4AF8", Offset = "0x1AF4AF8", VA = "0x1AF4AF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1AF4AFC", Offset = "0x1AF4AFC", VA = "0x1AF4AFC")]
		public FBBIKSettings()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class FBIKBendGoal : MonoBehaviour
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedChain chain;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weight;

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1AF4B1C", Offset = "0x1AF4B1C", VA = "0x1AF4B1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1AF4B88", Offset = "0x1AF4B88", VA = "0x1AF4B88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1AF4C6C", Offset = "0x1AF4C6C", VA = "0x1AF4C6C")]
		public FBIKBendGoal()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class FBIKBoxing : MonoBehaviour
	{
		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC1A0", Offset = "0xFBC1A0")]
		public Transform target;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC1D8", Offset = "0xFBC1D8")]
		public Transform pin;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC210", Offset = "0xFBC210")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC248", Offset = "0xFBC248")]
		public AimIK aim;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC280", Offset = "0xFBC280")]
		public float weight;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC2B8", Offset = "0xFBC2B8")]
		public FullBodyBipedEffector effector;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC2F0", Offset = "0xFBC2F0")]
		public AnimationCurve aimWeight;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1AF4C74", Offset = "0x1AF4C74", VA = "0x1AF4C74")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1AF4CD4", Offset = "0x1AF4CD4", VA = "0x1AF4CD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1AF4E70", Offset = "0x1AF4E70", VA = "0x1AF4E70")]
		public FBIKBoxing()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class FBIKHandsOnProp : MonoBehaviour
	{
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHanded;

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1AF4E78", Offset = "0x1AF4E78", VA = "0x1AF4E78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1AF4F48", Offset = "0x1AF4F48", VA = "0x1AF4F48")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1AF4FD8", Offset = "0x1AF4FD8", VA = "0x1AF4FD8")]
		private void HandsOnProp(IKEffector mainHand, IKEffector otherHand)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1AF54EC", Offset = "0x1AF54EC", VA = "0x1AF54EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1AF5608", Offset = "0x1AF5608", VA = "0x1AF5608")]
		public FBIKHandsOnProp()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class FPSAiming : MonoBehaviour
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC328", Offset = "0xFBC328")]
		public float aimWeight;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC340", Offset = "0xFBC340")]
		public float sightWeight;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC358", Offset = "0xFBC358")]
		public float maxAngle;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 aimOffset;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool animatePhysics;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform gun;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform gunTarget;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AimIK gunAim;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CameraControllerFPS cam;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Recoil recoil;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC3E4", Offset = "0xFBC3E4")]
		private float cameraRecoilWeight;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 gunTargetDefaultLocalPosition;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion gunTargetDefaultLocalRotation;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 camDefaultLocalPosition;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 camRelativeToGunTarget;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool updateFrame;

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1AF5610", Offset = "0x1AF5610", VA = "0x1AF5610")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1AF5770", Offset = "0x1AF5770", VA = "0x1AF5770")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1AF577C", Offset = "0x1AF577C", VA = "0x1AF577C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1AF5AC0", Offset = "0x1AF5AC0", VA = "0x1AF5AC0")]
		private void Aiming()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1AF5D28", Offset = "0x1AF5D28", VA = "0x1AF5D28")]
		private void LookDownTheSight()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1AF5844", Offset = "0x1AF5844", VA = "0x1AF5844")]
		private void RotateCharacter()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1AF6734", Offset = "0x1AF6734", VA = "0x1AF6734")]
		public FPSAiming()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1FCC", Offset = "0xFB1FCC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB1FCC", Offset = "0xFB1FCC")]
	public class FPSCharacter : MonoBehaviour
	{
		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC424", Offset = "0xFBC424")]
		public float walkSpeed;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float sVel;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FPSAiming FPSAiming;

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1AF6754", Offset = "0x1AF6754", VA = "0x1AF6754")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1AF67D8", Offset = "0x1AF67D8", VA = "0x1AF67D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1AF68FC", Offset = "0x1AF68FC", VA = "0x1AF68FC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1AF69AC", Offset = "0x1AF69AC", VA = "0x1AF69AC")]
		public FPSCharacter()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class HitReactionTrigger : MonoBehaviour
	{
		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HitReaction hitReaction;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float hitForce;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1AF6D40", Offset = "0x1AF6D40", VA = "0x1AF6D40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1AF6F0C", Offset = "0x1AF6F0C", VA = "0x1AF6F0C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1AF70D0", Offset = "0x1AF70D0", VA = "0x1AF70D0")]
		public HitReactionTrigger()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class HoldingHands : MonoBehaviour
	{
		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK rightHandChar;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK leftHandChar;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTarget;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossFade;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1AF7480", Offset = "0x1AF7480", VA = "0x1AF7480")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1AF762C", Offset = "0x1AF762C", VA = "0x1AF762C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1AF79E8", Offset = "0x1AF79E8", VA = "0x1AF79E8")]
		public HoldingHands()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class InteractionC2CDemo : MonoBehaviour
	{
		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem character1;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem character2;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject handShake;

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1AF79F8", Offset = "0x1AF79F8", VA = "0x1AF79F8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1AF7B2C", Offset = "0x1AF7B2C", VA = "0x1AF7B2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1AF7C7C", Offset = "0x1AF7C7C", VA = "0x1AF7C7C")]
		public InteractionC2CDemo()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class InteractionDemo : MonoBehaviour
	{
		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool interrupt;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject ball;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionObject benchMain;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractionObject benchHands;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionObject button;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractionObject cigarette;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionObject door;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isSitting;

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1AF7C84", Offset = "0x1AF7C84", VA = "0x1AF7C84")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1AF8354", Offset = "0x1AF8354", VA = "0x1AF8354")]
		public InteractionDemo()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB2058", Offset = "0xFB2058")]
	public class InteractionSystemTestGUI : MonoBehaviour
	{
		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC45C", Offset = "0xFBC45C")]
		[SerializeField]
		private InteractionObject interactionObject;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC4A8", Offset = "0xFBC4A8")]
		[SerializeField]
		private FullBodyBipedEffector[] effectors;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1AF835C", Offset = "0x1AF835C", VA = "0x1AF835C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1AF83BC", Offset = "0x1AF83BC", VA = "0x1AF83BC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1AF86C8", Offset = "0x1AF86C8", VA = "0x1AF86C8")]
		public InteractionSystemTestGUI()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class KissingRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000491")]
		public class Partner
		{
			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedIK ik;

			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform mouth;

			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform mouthTarget;

			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform touchTargetLeftHand;

			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform touchTargetRightHand;

			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float bodyWeightHorizontal;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float bodyWeightVertical;

			[Token(Token = "0x40013A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float neckRotationWeight;

			[Token(Token = "0x40013A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float headTiltAngle;

			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 headTiltAxis;

			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion neckRotation;

			[Token(Token = "0x17000509")]
			private Transform neck
			{
				[Token(Token = "0x6001E63")]
				[Address(RVA = "0x1AF8FCC", Offset = "0x1AF8FCC", VA = "0x1AF8FCC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E61")]
			[Address(RVA = "0x1AF8704", Offset = "0x1AF8704", VA = "0x1AF8704")]
			public void Initiate()
			{
			}

			[Token(Token = "0x6001E62")]
			[Address(RVA = "0x1AF8784", Offset = "0x1AF8784", VA = "0x1AF8784")]
			public void Update(float weight)
			{
			}

			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x1AF8DF0", Offset = "0x1AF8DF0", VA = "0x1AF8DF0")]
			private void InverseTransformEffector(FullBodyBipedEffector effector, Transform target, Vector3 targetPosition, float weight)
			{
			}

			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x1AF9024", Offset = "0x1AF9024", VA = "0x1AF9024")]
			public Partner()
			{
			}
		}

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Partner partner1;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Partner partner2;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int iterations;

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1AF86D0", Offset = "0x1AF86D0", VA = "0x1AF86D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1AF8724", Offset = "0x1AF8724", VA = "0x1AF8724")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1AF8DE0", Offset = "0x1AF8DE0", VA = "0x1AF8DE0")]
		public KissingRig()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class MotionAbsorb : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000492")]
		public enum Mode
		{
			[Token(Token = "0x40013A8")]
			Position,
			[Token(Token = "0x40013A9")]
			PositionOffset
		}

		[Serializable]
		[Token(Token = "0x2000493")]
		public class Absorber
		{
			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC273C", Offset = "0xFC273C")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2774", Offset = "0xFC2774")]
			public float weight;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 position;

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion rotation;

			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IKEffector e;

			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x1AFB1C4", Offset = "0x1AFB1C4", VA = "0x1AFB1C4")]
			public void SetToBone(IKSolverFullBodyBiped solver, Mode mode)
			{
			}

			[Token(Token = "0x6001E67")]
			[Address(RVA = "0x1AFB3B8", Offset = "0x1AFB3B8", VA = "0x1AFB3B8")]
			public void UpdateEffectorWeights(float w)
			{
			}

			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x1AFB3F4", Offset = "0x1AFB3F4", VA = "0x1AFB3F4")]
			public void SetPosition(float w)
			{
			}

			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x1AFB5A4", Offset = "0x1AFB5A4", VA = "0x1AFB5A4")]
			public void SetRotation(float w)
			{
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x1AFB7EC", Offset = "0x1AFB7EC", VA = "0x1AFB7EC")]
			public Absorber()
			{
			}
		}

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC4F4", Offset = "0xFBC4F4")]
		public Mode mode;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC52C", Offset = "0xFBC52C")]
		public Absorber[] absorbers;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC564", Offset = "0xFBC564")]
		public AnimationCurve falloff;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC59C", Offset = "0xFBC59C")]
		public float falloffSpeed;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode initialMode;

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1AFB050", Offset = "0x1AFB050", VA = "0x1AFB050", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x1AFB138", Offset = "0x1AFB138", VA = "0x1AFB138")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1AFB2AC", Offset = "0x1AFB2AC", VA = "0x1AFB2AC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1AFB51C", Offset = "0x1AFB51C", VA = "0x1AFB51C")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1AFB6B4", Offset = "0x1AFB6B4", VA = "0x1AFB6B4", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1AFB7DC", Offset = "0x1AFB7DC", VA = "0x1AFB7DC")]
		public MotionAbsorb()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class MotionAbsorbCharacter : MonoBehaviour
	{
		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MotionAbsorb motionAbsorb;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cube;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cubeRandomPosition;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve motionAbsorbWeight;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 cubeDefaultPosition;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorStateInfo info;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigidbody;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1AFB86C", Offset = "0x1AFB86C", VA = "0x1AFB86C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1AFB8EC", Offset = "0x1AFB8EC", VA = "0x1AFB8EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x1AFB9A0", Offset = "0x1AFB9A0", VA = "0x1AFB9A0")]
		private void SwingStart()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1AFBB00", Offset = "0x1AFBB00", VA = "0x1AFBB00")]
		public MotionAbsorbCharacter()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class OffsetEffector : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000494")]
		public class EffectorLink
		{
			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weightMultiplier;

			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Vector3 localPosition;

			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0x1AFC8A0", Offset = "0x1AFC8A0", VA = "0x1AFC8A0")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1AFC56C", Offset = "0x1AFC56C", VA = "0x1AFC56C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1AFC66C", Offset = "0x1AFC66C", VA = "0x1AFC66C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1AFC898", Offset = "0x1AFC898", VA = "0x1AFC898")]
		public OffsetEffector()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB20BC", Offset = "0xFB20BC")]
	public class PendulumExample : MonoBehaviour
	{
		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC5D4", Offset = "0xFBC5D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC5D4", Offset = "0xFBC5D4")]
		public float weight;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC628", Offset = "0xFBC628")]
		public float hangingDistanceMlp;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC660", Offset = "0xFBC660")]
		[HideInInspector]
		public Vector3 rootTargetPosition;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC6AC", Offset = "0xFBC6AC")]
		[HideInInspector]
		public Quaternion rootTargetRotation;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform leftHandTarget;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform rightHandTarget;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform leftFootTarget;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform rightFootTarget;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform pelvisTarget;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform bodyTarget;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform headTarget;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3 pelvisDownAxis;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rootRelativeToPelvis;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 pelvisToRoot;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastWeight;

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1AFC8B0", Offset = "0x1AFC8B0", VA = "0x1AFC8B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1AFCC00", Offset = "0x1AFCC00", VA = "0x1AFCC00")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1AFD350", Offset = "0x1AFD350", VA = "0x1AFD350")]
		public PendulumExample()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public abstract class PickUp2Handed : MonoBehaviour
	{
		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int GUIspace;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject obj;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pivot;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform holdPoint;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pickUpTime;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float holdWeight;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float holdWeightVel;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x17000235")]
		private bool holding
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x1AFD694", Offset = "0x1AFD694", VA = "0x1AFD694")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1AFD3D4", Offset = "0x1AFD3D4", VA = "0x1AFD3D4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CD3")]
		protected abstract void RotatePivot();

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1AFD6B4", Offset = "0x1AFD6B4", VA = "0x1AFD6B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1AFD84C", Offset = "0x1AFD84C", VA = "0x1AFD84C")]
		private void OnPause(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1AFD9C8", Offset = "0x1AFD9C8", VA = "0x1AFD9C8")]
		private void OnStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1AFDAA8", Offset = "0x1AFDAA8", VA = "0x1AFDAA8")]
		private void OnDrop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1AFDBD4", Offset = "0x1AFDBD4", VA = "0x1AFDBD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x1AFDDE4", Offset = "0x1AFDDE4", VA = "0x1AFDDE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1AFDFC8", Offset = "0x1AFDFC8", VA = "0x1AFDFC8")]
		protected PickUp2Handed()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class PickUpBox : PickUp2Handed
	{
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1AFDFDC", Offset = "0x1AFDFDC", VA = "0x1AFDFDC", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1AFE1D0", Offset = "0x1AFE1D0", VA = "0x1AFE1D0")]
		public PickUpBox()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class PickUpSphere : PickUp2Handed
	{
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x1AFE1E4", Offset = "0x1AFE1E4", VA = "0x1AFE1E4", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1AFE390", Offset = "0x1AFE390", VA = "0x1AFE390")]
		public PickUpSphere()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class RagdollUtilityDemo : MonoBehaviour
	{
		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform root;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody pelvis;

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1AFEB30", Offset = "0x1AFEB30", VA = "0x1AFEB30")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1AFEC08", Offset = "0x1AFEC08", VA = "0x1AFEC08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x1AFEDB0", Offset = "0x1AFEDB0", VA = "0x1AFEDB0")]
		public RagdollUtilityDemo()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB2120", Offset = "0xFB2120")]
	public class RecoilTest : MonoBehaviour
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recoil recoil;

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1AFEDB8", Offset = "0x1AFEDB8", VA = "0x1AFEDB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x1AFEE18", Offset = "0x1AFEE18", VA = "0x1AFEE18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1AFEE74", Offset = "0x1AFEE74", VA = "0x1AFEE74")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1AFEF4C", Offset = "0x1AFEF4C", VA = "0x1AFEF4C")]
		public RecoilTest()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class ResetInteractionObject : MonoBehaviour
	{
		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9684", Offset = "0xFB9684")]
		private sealed class <ResetObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float resetTime;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetInteractionObject <>4__this;

			[Token(Token = "0x1700050A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6F")]
				[Address(RVA = "0x1AFF2F8", Offset = "0x1AFF2F8", VA = "0x1AFF2F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E71")]
				[Address(RVA = "0x1AFF360", Offset = "0x1AFF360", VA = "0x1AFF360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x1AFF0FC", Offset = "0x1AFF0FC", VA = "0x1AFF0FC")]
			[DebuggerHidden]
			public <ResetObject>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x1AFF138", Offset = "0x1AFF138", VA = "0x1AFF138", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0x1AFF13C", Offset = "0x1AFF13C", VA = "0x1AFF13C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0x1AFF300", Offset = "0x1AFF300", VA = "0x1AFF300", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float resetDelay;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform defaultParent;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody r;

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1AFEF5C", Offset = "0x1AFEF5C", VA = "0x1AFEF5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1AFF028", Offset = "0x1AFF028", VA = "0x1AFF028")]
		private void OnPickUp(Transform t)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1AFF070", Offset = "0x1AFF070", VA = "0x1AFF070")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8C64", Offset = "0xFC8C64")]
		private IEnumerator ResetObject(float resetTime)
		{
			return null;
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1AFF128", Offset = "0x1AFF128", VA = "0x1AFF128")]
		public ResetInteractionObject()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB2184", Offset = "0xFB2184")]
	public class SoccerDemo : MonoBehaviour
	{
		[Token(Token = "0x2000496")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9694", Offset = "0xFB9694")]
		private sealed class <ResetDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoccerDemo <>4__this;

			[Token(Token = "0x1700050C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E75")]
				[Address(RVA = "0x1B0088C", Offset = "0x1B0088C", VA = "0x1B0088C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E77")]
				[Address(RVA = "0x1B008F4", Offset = "0x1B008F4", VA = "0x1B008F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E72")]
			[Address(RVA = "0x1B0071C", Offset = "0x1B0071C", VA = "0x1B0071C")]
			[DebuggerHidden]
			public <ResetDelayed>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0x1B00750", Offset = "0x1B00750", VA = "0x1B00750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x1B00754", Offset = "0x1B00754", VA = "0x1B00754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x1B00894", Offset = "0x1B00894", VA = "0x1B00894", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1B005E4", Offset = "0x1B005E4", VA = "0x1B005E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1B006A0", Offset = "0x1B006A0", VA = "0x1B006A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8CC8", Offset = "0xFC8CC8")]
		private IEnumerator ResetDelayed()
		{
			return null;
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1B00748", Offset = "0x1B00748", VA = "0x1B00748")]
		public SoccerDemo()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class TouchWalls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000497")]
		public class EffectorLink
		{
			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractionObject interactionObject;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spherecastFrom;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float spherecastRadius;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float minDistance;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LayerMask touchLayers;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float lerpSpeed;

			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float minSwitchTime;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float releaseDistance;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool sliding;

			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 raycastDirectionLocal;

			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float raycastDistance;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private bool inTouch;

			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private RaycastHit hit;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 targetPosition;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Quaternion targetRotation;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private bool initiated;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float nextSwitchTime;

			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float speedF;

			[Token(Token = "0x6001E78")]
			[Address(RVA = "0x1B00E9C", Offset = "0x1B00E9C", VA = "0x1B00E9C")]
			public void Initiate(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x1B01BAC", Offset = "0x1B01BAC", VA = "0x1B01BAC")]
			private bool FindWalls(Vector3 direction)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x1B01218", Offset = "0x1B01218", VA = "0x1B01218")]
			public void Update(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x1B01C94", Offset = "0x1B01C94", VA = "0x1B01C94")]
			private void StopTouch(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0x1B01E30", Offset = "0x1B01E30", VA = "0x1B01E30")]
			private void OnInteractionStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x1B01ECC", Offset = "0x1B01ECC", VA = "0x1B01ECC")]
			private void OnInteractionResume(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0x1B01F64", Offset = "0x1B01F64", VA = "0x1B01F64")]
			private void OnInteractionStop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x1B019F8", Offset = "0x1B019F8", VA = "0x1B019F8")]
			public void Destroy(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x1B01FFC", Offset = "0x1B01FFC", VA = "0x1B01FFC")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1B00E24", Offset = "0x1B00E24", VA = "0x1B00E24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1B011AC", Offset = "0x1B011AC", VA = "0x1B011AC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1B01930", Offset = "0x1B01930", VA = "0x1B01930")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1B01BA4", Offset = "0x1B01BA4", VA = "0x1B01BA4")]
		public TouchWalls()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class TransferMotion : MonoBehaviour
	{
		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC798", Offset = "0xFBC798")]
		public Transform to;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC7D0", Offset = "0xFBC7D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC7D0", Offset = "0xFBC7D0")]
		public float transferMotion;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1B02030", Offset = "0x1B02030", VA = "0x1B02030")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1B0206C", Offset = "0x1B0206C", VA = "0x1B0206C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1B021C4", Offset = "0x1B021C4", VA = "0x1B021C4")]
		public TransferMotion()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class TwoHandedProp : MonoBehaviour
	{
		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC824", Offset = "0xFBC824")]
		public Transform leftHandTarget;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 targetPosRelativeToRight;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion targetRotRelativeToRight;

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1B02398", Offset = "0x1B02398", VA = "0x1B02398")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1B02578", Offset = "0x1B02578", VA = "0x1B02578")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x1B02814", Offset = "0x1B02814", VA = "0x1B02814")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1B028E0", Offset = "0x1B028E0", VA = "0x1B028E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1B029FC", Offset = "0x1B029FC", VA = "0x1B029FC")]
		public TwoHandedProp()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class UserControlInteractions : UserControlThirdPerson
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CharacterThirdPerson character;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool disableInputInInteraction;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float enableInputAtProgress;

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1B02D68", Offset = "0x1B02D68", VA = "0x1B02D68", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1B031E0", Offset = "0x1B031E0", VA = "0x1B031E0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1B03438", Offset = "0x1B03438", VA = "0x1B03438")]
		public UserControlInteractions()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class GrounderDemo : MonoBehaviour
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] characters;

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1AF69BC", Offset = "0x1AF69BC", VA = "0x1AF69BC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1AF6CB8", Offset = "0x1AF6CB8", VA = "0x1AF6CB8")]
		public void Activate(int index)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x1AF6D38", Offset = "0x1AF6D38", VA = "0x1AF6D38")]
		public GrounderDemo()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class PlatformRotator : MonoBehaviour
	{
		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB96A4", Offset = "0xFB96A4")]
		private sealed class <SwitchRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformRotator <>4__this;

			[Token(Token = "0x1700050E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E84")]
				[Address(RVA = "0x1AFEAC0", Offset = "0x1AFEAC0", VA = "0x1AFEAC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E86")]
				[Address(RVA = "0x1AFEB28", Offset = "0x1AFEB28", VA = "0x1AFEB28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x1AFE770", Offset = "0x1AFE770", VA = "0x1AFE770")]
			[DebuggerHidden]
			public <SwitchRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x1AFE97C", Offset = "0x1AFE97C", VA = "0x1AFE97C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x1AFE980", Offset = "0x1AFE980", VA = "0x1AFE980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x1AFEAC8", Offset = "0x1AFEAC8", VA = "0x1AFEAC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAngle;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float switchRotationTime;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float random;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationSpeed;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 movePosition;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveSpeed;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int characterLayer;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 targetPosition;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 velocity;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody r;

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1AFE3A4", Offset = "0x1AFE3A4", VA = "0x1AFE3A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1AFE548", Offset = "0x1AFE548", VA = "0x1AFE548")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1AFE4CC", Offset = "0x1AFE4CC", VA = "0x1AFE4CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFC8D2C", Offset = "0xFC8D2C")]
		private IEnumerator SwitchRotation()
		{
			return null;
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1AFE79C", Offset = "0x1AFE79C", VA = "0x1AFE79C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1AFE880", Offset = "0x1AFE880", VA = "0x1AFE880")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1AFE960", Offset = "0x1AFE960", VA = "0x1AFE960")]
		public PlatformRotator()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class BendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbIK limbIK;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBC88C", Offset = "0xFBC88C")]
		public float weight;

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1960D48", Offset = "0x1960D48", VA = "0x1960D48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1960DB4", Offset = "0x1960DB4", VA = "0x1960DB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1960E70", Offset = "0x1960E70", VA = "0x1960E70")]
		public BendGoal()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class Turret : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000499")]
		public class Part
		{
			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RotationLimit rotationLimit;

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x1B02250", Offset = "0x1B02250", VA = "0x1B02250")]
			public void AimAt(Transform target)
			{
			}

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x1B02390", Offset = "0x1B02390", VA = "0x1B02390")]
			public Part()
			{
			}
		}

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1B021D8", Offset = "0x1B021D8", VA = "0x1B021D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1B02388", Offset = "0x1B02388", VA = "0x1B02388")]
		public Turret()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class HitReactionVRIKTrigger : MonoBehaviour
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HitReactionVRIK hitReaction;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float hitForce;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1AF70E0", Offset = "0x1AF70E0", VA = "0x1AF70E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1AF72AC", Offset = "0x1AF72AC", VA = "0x1AF72AC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1AF7470", Offset = "0x1AF7470", VA = "0x1AF7470")]
		public HitReactionVRIKTrigger()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class VRIKCalibrationController : MonoBehaviour
	{
		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC8C4", Offset = "0xFBC8C4")]
		public VRIK ik;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC8FC", Offset = "0xFBC8FC")]
		public VRIKCalibrator.Settings settings;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC934", Offset = "0xFBC934")]
		public Transform headTracker;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC96C", Offset = "0xFBC96C")]
		public Transform bodyTracker;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC9A4", Offset = "0xFBC9A4")]
		public Transform leftHandTracker;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBC9DC", Offset = "0xFBC9DC")]
		public Transform rightHandTracker;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCA14", Offset = "0xFBCA14")]
		public Transform leftFootTracker;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCA4C", Offset = "0xFBCA4C")]
		public Transform rightFootTracker;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBCA84", Offset = "0xFBCA84")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1B0345C", Offset = "0x1B0345C", VA = "0x1B0345C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1B035C4", Offset = "0x1B035C4", VA = "0x1B035C4")]
		public VRIKCalibrationController()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class VRIKPlatform : MonoBehaviour
	{
		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPosition;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion lastRotation;

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1B03638", Offset = "0x1B03638", VA = "0x1B03638")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1B03694", Offset = "0x1B03694", VA = "0x1B03694")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1B038A8", Offset = "0x1B038A8", VA = "0x1B038A8")]
		public VRIKPlatform()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class VRIKPlatformController : MonoBehaviour
	{
		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackingSpace;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform platform;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool moveToPlatform;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform lastPlatform;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1B03920", Offset = "0x1B03920", VA = "0x1B03920")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1B03E88", Offset = "0x1B03E88", VA = "0x1B03E88")]
		public VRIKPlatformController()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x17000236")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x1961370", Offset = "0x1961370", VA = "0x1961370", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x196134C", Offset = "0x196134C", VA = "0x196134C", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1961378", Offset = "0x1961378", VA = "0x1961378")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x196143C", Offset = "0x196143C", VA = "0x196143C", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1961694", Offset = "0x1961694", VA = "0x1961694", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1961904", Offset = "0x1961904", VA = "0x1961904", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x19616A4", Offset = "0x19616A4", VA = "0x19616A4")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x1961914", Offset = "0x1961914", VA = "0x1961914")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB21E8", Offset = "0xFB21E8")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CharacterThirdPerson characterController;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float pivotOffset;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve moveSpeed;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x196192C", Offset = "0x196192C", VA = "0x196192C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x1961994", Offset = "0x1961994", VA = "0x1961994", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1961AC0", Offset = "0x1961AC0", VA = "0x1961AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1961C3C", Offset = "0x1961C3C", VA = "0x1961C3C")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB224C", Offset = "0xFB224C")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBCB1C", Offset = "0xFBCB1C")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x4000895")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x4000896")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x17000237")]
		public override bool animationGrounded
		{
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x1961D00", Offset = "0x1961D00", VA = "0x1961D00", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1961C54", Offset = "0x1961C54", VA = "0x1961C54", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1961CE4", Offset = "0x1961CE4", VA = "0x1961CE4", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1961DF0", Offset = "0x1961DF0", VA = "0x1961DF0", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x19621A4", Offset = "0x19621A4", VA = "0x19621A4")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x1962358", Offset = "0x1962358", VA = "0x1962358")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB22B0", Offset = "0xFB22B0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB22B0", Offset = "0xFB22B0")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBCB60", Offset = "0xFBCB60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCB60", Offset = "0xFBCB60")]
		public Transform gravityTarget;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCBC0", Offset = "0xFBCBC0")]
		[SerializeField]
		protected float gravityMultiplier;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected float airborneThreshold;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float slopeStartAngle;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float slopeEndAngle;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float spherecastRadius;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LayerMask groundLayers;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x40008A2")]
		protected const float half = 0.5f;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x6000D27")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x1962884", Offset = "0x1962884", VA = "0x1962884")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x1962A08", Offset = "0x1962A08", VA = "0x1962A08", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x1962BD0", Offset = "0x1962BD0", VA = "0x1962BD0", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1962E48", Offset = "0x1962E48", VA = "0x1962E48")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1962F0C", Offset = "0x1962F0C", VA = "0x1962F0C")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x19630F4", Offset = "0x19630F4", VA = "0x19630F4")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x19632A4", Offset = "0x19632A4", VA = "0x19632A4")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x19632C8", Offset = "0x19632C8", VA = "0x19632C8")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x19632EC", Offset = "0x19632EC", VA = "0x19632EC")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x19633F0", Offset = "0x19633F0", VA = "0x19633F0")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x200049A")]
		public enum MoveMode
		{
			[Token(Token = "0x40013D3")]
			Directional,
			[Token(Token = "0x40013D4")]
			Strafe
		}

		[Token(Token = "0x200049B")]
		public struct AnimState
		{
			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBCC5C", Offset = "0xFBCC5C")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBCC94", Offset = "0xFBCC94")]
		public MoveMode moveMode;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBCCCC", Offset = "0xFBCCCC")]
		public bool lookInCameraDirection;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBCD04", Offset = "0xFBCD04")]
		public float airSpeed;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airControl;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float jumpPower;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBCD3C", Offset = "0xFBCD3C")]
		[SerializeField]
		private LayerMask wallRunLayers;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float wallRunMaxLength;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBCD88", Offset = "0xFBCD88")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBCDC0", Offset = "0xFBCDC0")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AnimState animState;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Vector3 moveDirection;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 gravity;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x17000238")]
		public bool onGround
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x1963814", Offset = "0x1963814", VA = "0x1963814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8D90", Offset = "0xFC8D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x196381C", Offset = "0x196381C", VA = "0x196381C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8DA0", Offset = "0xFC8DA0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1963828", Offset = "0x1963828", VA = "0x1963828", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x19639D4", Offset = "0x19639D4", VA = "0x19639D4")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1963A64", Offset = "0x1963A64", VA = "0x1963A64", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1963BA0", Offset = "0x1963BA0", VA = "0x1963BA0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x1964ADC", Offset = "0x1964ADC", VA = "0x1964ADC", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1964E74", Offset = "0x1964E74", VA = "0x1964E74", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x19641AC", Offset = "0x19641AC", VA = "0x19641AC")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x1964F54", Offset = "0x1964F54", VA = "0x1964F54")]
		private void WallRun()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1965544", Offset = "0x1965544", VA = "0x1965544")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1964BB8", Offset = "0x1964BB8", VA = "0x1964BB8")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x19655E4", Offset = "0x19655E4", VA = "0x19655E4", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1965A54", Offset = "0x1965A54", VA = "0x1965A54")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1965BE0", Offset = "0x1965BE0", VA = "0x1965BE0", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x19646BC", Offset = "0x19646BC", VA = "0x19646BC")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1965D74", Offset = "0x1965D74", VA = "0x1965D74")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB233C", Offset = "0xFB233C")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200049C")]
		public enum RotationMode
		{
			[Token(Token = "0x40013DD")]
			Smooth,
			[Token(Token = "0x40013DE")]
			Linear
		}

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCDD0", Offset = "0xFBCDD0")]
		[SerializeField]
		private CameraController cameraController;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCE1C", Offset = "0xFBCE1C")]
		[SerializeField]
		private float accelerationTime;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCE68", Offset = "0xFBCE68")]
		[SerializeField]
		private float turnTime;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCEB4", Offset = "0xFBCEB4")]
		[SerializeField]
		private bool walkByDefault;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCF00", Offset = "0xFBCF00")]
		[SerializeField]
		private RotationMode rotationMode;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCF4C", Offset = "0xFBCF4C")]
		[SerializeField]
		private float moveSpeed;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBCF98", Offset = "0xFBCF98")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x17000239")]
		public bool isGrounded
		{
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x1AFFB44", Offset = "0x1AFFB44", VA = "0x1AFFB44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8DB0", Offset = "0xFC8DB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x1AFFB4C", Offset = "0x1AFFB4C", VA = "0x1AFFB4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8DC0", Offset = "0xFC8DC0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1AFFB58", Offset = "0x1AFFB58", VA = "0x1AFFB58")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1AFFBF4", Offset = "0x1AFFBF4", VA = "0x1AFFBF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1B002F0", Offset = "0x1B002F0", VA = "0x1B002F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1AFFC48", Offset = "0x1AFFC48", VA = "0x1AFFC48")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1B00048", Offset = "0x1B00048", VA = "0x1B00048")]
		private void Move()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1B0032C", Offset = "0x1B0032C", VA = "0x1B0032C")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1B00424", Offset = "0x1B00424", VA = "0x1B00424")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x1B004C4", Offset = "0x1B004C4", VA = "0x1B004C4")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x1B02A04", Offset = "0x1B02A04", VA = "0x1B02A04", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x1B02A84", Offset = "0x1B02A84", VA = "0x1B02A84", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1B02D18", Offset = "0x1B02D18", VA = "0x1B02D18")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1B02D3C", Offset = "0x1B02D3C", VA = "0x1B02D3C")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x200049D")]
		public struct State
		{
			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1B02A44", Offset = "0x1B02A44", VA = "0x1B02A44", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1B02E7C", Offset = "0x1B02E7C", VA = "0x1B02E7C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1B02D58", Offset = "0x1B02D58", VA = "0x1B02D58")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1960D04", Offset = "0x1960D04", VA = "0x1960D04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1960D40", Offset = "0x1960D40", VA = "0x1960D40")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode[] keyCodes;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool mouse0;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool mouse1;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float slowMoTimeScale;

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1B004EC", Offset = "0x1B004EC", VA = "0x1B004EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1B00520", Offset = "0x1B00520", VA = "0x1B00520")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1B005D0", Offset = "0x1B005D0", VA = "0x1B005D0")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F5")]
	public class Navigator
	{
		[Token(Token = "0x200049E")]
		public enum State
		{
			[Token(Token = "0x40013E5")]
			Idle,
			[Token(Token = "0x40013E6")]
			Seeking,
			[Token(Token = "0x40013E7")]
			OnPath
		}

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBCFE8", Offset = "0xFBCFE8")]
		public bool activeTargetSeeking;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD020", Offset = "0xFBD020")]
		public float cornerRadius;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD058", Offset = "0xFBD058")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD090", Offset = "0xFBD090")]
		public float maxSampleDistance;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD0C8", Offset = "0xFBD0C8")]
		public float nextPathInterval;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBD100", Offset = "0xFBD100")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBD110", Offset = "0xFBD110")]
		private State <state>k__BackingField;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x1700023A")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x1AFBB14", Offset = "0x1AFBB14", VA = "0x1AFBB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8DD0", Offset = "0xFC8DD0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x1AFBB20", Offset = "0x1AFBB20", VA = "0x1AFBB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8DE0", Offset = "0xFC8DE0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public State state
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x1AFBB2C", Offset = "0x1AFBB2C", VA = "0x1AFBB2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8DF0", Offset = "0xFC8DF0")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x1AFBB34", Offset = "0x1AFBB34", VA = "0x1AFBB34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8E00", Offset = "0xFC8E00")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1AFBB3C", Offset = "0x1AFBB3C", VA = "0x1AFBB3C")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1AFBC34", Offset = "0x1AFBC34", VA = "0x1AFBC34")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1AFC18C", Offset = "0x1AFC18C", VA = "0x1AFC18C")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1AFC1FC", Offset = "0x1AFC1FC", VA = "0x1AFC1FC")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1AFC054", Offset = "0x1AFC054", VA = "0x1AFC054")]
		private void Stop()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1AFC0C8", Offset = "0x1AFC0C8", VA = "0x1AFC0C8")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1AFC344", Offset = "0x1AFC344", VA = "0x1AFC344")]
		public void Visualize()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1AFC4F4", Offset = "0x1AFC4F4", VA = "0x1AFC4F4")]
		public Navigator()
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB23A0", Offset = "0xFB23A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB23A0", Offset = "0xFB23A0")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1B05D94", Offset = "0x1B05D94", VA = "0x1B05D94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC8E10", Offset = "0xFC8E10")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x1B05DE0", Offset = "0x1B05DE0", VA = "0x1B05DE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC8E48", Offset = "0xFC8E48")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x1B05E2C", Offset = "0x1B05E2C", VA = "0x1B05E2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC8E80", Offset = "0xFC8E80")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1B05E78", Offset = "0x1B05E78", VA = "0x1B05E78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC8EB8", Offset = "0xFC8EB8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1B05EC4", Offset = "0x1B05EC4", VA = "0x1B05EC4")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1B05F60", Offset = "0x1B05F60", VA = "0x1B05F60")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1B05F80", Offset = "0x1B05F80", VA = "0x1B05F80")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1B05FB0", Offset = "0x1B05FB0", VA = "0x1B05FB0")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x1B05FE0", Offset = "0x1B05FE0", VA = "0x1B05FE0")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1B06020", Offset = "0x1B06020", VA = "0x1B06020")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1B06064", Offset = "0x1B06064", VA = "0x1B06064")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1B06088", Offset = "0x1B06088", VA = "0x1B06088")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1B060AC", Offset = "0x1B060AC", VA = "0x1B060AC")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1B060D4", Offset = "0x1B060D4", VA = "0x1B060D4")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1B06100", Offset = "0x1B06100", VA = "0x1B06100")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1B0612C", Offset = "0x1B0612C", VA = "0x1B0612C")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1B05EE4", Offset = "0x1B05EE4", VA = "0x1B05EE4")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1B06154", Offset = "0x1B06154", VA = "0x1B06154")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1B06160", Offset = "0x1B06160", VA = "0x1B06160")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1B0616C", Offset = "0x1B0616C", VA = "0x1B0616C")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x1B06494", Offset = "0x1B06494", VA = "0x1B06494", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1B0653C", Offset = "0x1B0653C", VA = "0x1B0653C", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1B06888", Offset = "0x1B06888", VA = "0x1B06888", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1B06D70", Offset = "0x1B06D70", VA = "0x1B06D70")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1B06DA4", Offset = "0x1B06DA4", VA = "0x1B06DA4")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F7")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x1700023C")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x1B0630C", Offset = "0x1B0630C", VA = "0x1B0630C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x1B06FE8", Offset = "0x1B06FE8", VA = "0x1B06FE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1B0670C", Offset = "0x1B0670C", VA = "0x1B0670C")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1B06E40", Offset = "0x1B06E40", VA = "0x1B06E40")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F8")]
	public abstract class Constraint
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x1700023E")]
		public bool isValid
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x1B07658", Offset = "0x1B07658", VA = "0x1B07658")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D83")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1B076C8", Offset = "0x1B076C8", VA = "0x1B076C8")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F9")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1B076D0", Offset = "0x1B076D0", VA = "0x1B076D0", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1B077DC", Offset = "0x1B077DC", VA = "0x1B077DC")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1B077E4", Offset = "0x1B077E4", VA = "0x1B077E4")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FA")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x1700023F")]
		private bool positionChanged
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x1B079B4", Offset = "0x1B079B4", VA = "0x1B079B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1B07818", Offset = "0x1B07818", VA = "0x1B07818", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x1B07A70", Offset = "0x1B07A70", VA = "0x1B07A70")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1B07A78", Offset = "0x1B07A78", VA = "0x1B07A78")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FB")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1B07AAC", Offset = "0x1B07AAC", VA = "0x1B07AAC", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1B07BD4", Offset = "0x1B07BD4", VA = "0x1B07BD4")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1B07BDC", Offset = "0x1B07BDC", VA = "0x1B07BDC")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FC")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x17000240")]
		private bool rotationChanged
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x1B07DB0", Offset = "0x1B07DB0", VA = "0x1B07DB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1B07C10", Offset = "0x1B07C10", VA = "0x1B07C10", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1B07E80", Offset = "0x1B07E80", VA = "0x1B07E80")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1B07E88", Offset = "0x1B07E88", VA = "0x1B07E88")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	public class Constraints
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD120", Offset = "0xFBD120")]
		public float positionWeight;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD138", Offset = "0xFBD138")]
		public float rotationWeight;

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1B07EBC", Offset = "0x1B07EBC", VA = "0x1B07EBC")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1B06830", Offset = "0x1B06830", VA = "0x1B06830")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1B06A10", Offset = "0x1B06A10", VA = "0x1B06A10")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x1B07218", Offset = "0x1B07218", VA = "0x1B07218")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FE")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x200049F")]
		public enum DOF
		{
			[Token(Token = "0x40013E9")]
			One,
			[Token(Token = "0x40013EA")]
			Three
		}

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD150", Offset = "0xFBD150")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD150", Offset = "0xFBD150")]
		public float weight;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD1A4", Offset = "0xFBD1A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD1A4", Offset = "0xFBD1A4")]
		public float rotationWeight;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD1F8", Offset = "0xFBD1F8")]
		public DOF rotationDOF;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD230", Offset = "0xFBD230")]
		public Transform bone1;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD268", Offset = "0xFBD268")]
		public Transform bone2;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD2A0", Offset = "0xFBD2A0")]
		public Transform bone3;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD2D8", Offset = "0xFBD2D8")]
		public Transform tip;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD310", Offset = "0xFBD310")]
		public Transform target;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBD348", Offset = "0xFBD348")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x17000241")]
		public bool initiated
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x217A1B0", Offset = "0x217A1B0", VA = "0x217A1B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8EF0", Offset = "0xFC8EF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x217A1B8", Offset = "0x217A1B8", VA = "0x217A1B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8F00", Offset = "0xFC8F00")]
			private set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x217A1C4", Offset = "0x217A1C4", VA = "0x217A1C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x217A1E4", Offset = "0x217A1E4", VA = "0x217A1E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x217A204", Offset = "0x217A204", VA = "0x217A204")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x217A224", Offset = "0x217A224", VA = "0x217A224")]
			set
			{
			}
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x217A244", Offset = "0x217A244", VA = "0x217A244")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x217A350", Offset = "0x217A350", VA = "0x217A350")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x217A8E0", Offset = "0x217A8E0", VA = "0x217A8E0")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x217A9BC", Offset = "0x217A9BC", VA = "0x217A9BC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x217AA84", Offset = "0x217AA84", VA = "0x217AA84")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x217AEA0", Offset = "0x217AEA0", VA = "0x217AEA0")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD358", Offset = "0xFBD358")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD358", Offset = "0xFBD358")]
		public float weight;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBD3AC", Offset = "0xFBD3AC")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000244")]
		public bool initiated
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x217AEB0", Offset = "0x217AEB0", VA = "0x217AEB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8F10", Offset = "0xFC8F10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x217AEB8", Offset = "0x217AEB8", VA = "0x217AEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8F20", Offset = "0xFC8F20")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x217AEC4", Offset = "0x217AEC4", VA = "0x217AEC4")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x217AF4C", Offset = "0x217AF4C", VA = "0x217AF4C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC8F30", Offset = "0xFC8F30")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x217B2C4", Offset = "0x217B2C4", VA = "0x217B2C4")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x217B480", Offset = "0x217B480", VA = "0x217B480")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x217B1B4", Offset = "0x217B1B4", VA = "0x217B1B4")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x217B604", Offset = "0x217B604", VA = "0x217B604", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x217B6C4", Offset = "0x217B6C4", VA = "0x217B6C4")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x217B73C", Offset = "0x217B73C", VA = "0x217B73C")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x217B7B0", Offset = "0x217B7B0", VA = "0x217B7B0")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x217B818", Offset = "0x217B818", VA = "0x217B818", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x217B81C", Offset = "0x217B81C", VA = "0x217B81C", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x217B830", Offset = "0x217B830", VA = "0x217B830")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x20004A0")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD3BC", Offset = "0xFBD3BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD3BC", Offset = "0xFBD3BC")]
		public float weight;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD410", Offset = "0xFBD410")]
		public Grounding solver;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBD448", Offset = "0xFBD448")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000245")]
		public bool initiated
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x217C908", Offset = "0x217C908", VA = "0x217C908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8F68", Offset = "0xFC8F68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x217C910", Offset = "0x217C910", VA = "0x217C910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC8F78", Offset = "0xFC8F78")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000DB1")]
		public abstract void ResetPosition();

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x217C91C", Offset = "0x217C91C", VA = "0x217C91C")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x217CBF0", Offset = "0x217CBF0", VA = "0x217CBF0")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x217CA60", Offset = "0x217CA60", VA = "0x217CA60")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x217CC24", Offset = "0x217CC24", VA = "0x217CC24")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DB8")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000DB9")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x217CE2C", Offset = "0x217CE2C", VA = "0x217CE2C")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2400", Offset = "0xFB2400")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2400", Offset = "0xFB2400")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD458", Offset = "0xFBD458")]
		public BipedIK ik;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD490", Offset = "0xFBD490")]
		public float spineBend;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD4C8", Offset = "0xFBD4C8")]
		public float spineSpeed;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x217D1A4", Offset = "0x217D1A4", VA = "0x217D1A4", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC8F88", Offset = "0xFC8F88")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x217D1F0", Offset = "0x217D1F0", VA = "0x217D1F0", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC8FC0", Offset = "0xFC8FC0")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x217D23C", Offset = "0x217D23C", VA = "0x217D23C", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x217D340", Offset = "0x217D340", VA = "0x217D340")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x217D3F0", Offset = "0x217D3F0", VA = "0x217D3F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x217D4A4", Offset = "0x217D4A4", VA = "0x217D4A4")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x217DA98", Offset = "0x217DA98", VA = "0x217DA98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x217DAEC", Offset = "0x217DAEC", VA = "0x217DAEC")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x217E2A0", Offset = "0x217E2A0", VA = "0x217E2A0")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x217E400", Offset = "0x217E400", VA = "0x217E400")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x217E590", Offset = "0x217E590", VA = "0x217E590")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x217E74C", Offset = "0x217E74C", VA = "0x217E74C")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2460", Offset = "0xFB2460")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2460", Offset = "0xFB2460")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x20004A1")]
		public class SpineEffector
		{
			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC27BC", Offset = "0xFC27BC")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC27F4", Offset = "0xFC27F4")]
			public float horizontalWeight;

			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC282C", Offset = "0xFC282C")]
			public float verticalWeight;

			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0x217F680", Offset = "0x217F680", VA = "0x217F680")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x217F690", Offset = "0x217F690", VA = "0x217F690")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD500", Offset = "0xFBD500")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD538", Offset = "0xFBD538")]
		public float spineBend;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD570", Offset = "0xFBD570")]
		public float spineSpeed;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x217E7E4", Offset = "0x217E7E4", VA = "0x217E7E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC8FF8", Offset = "0xFC8FF8")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x217E830", Offset = "0x217E830", VA = "0x217E830", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9030", Offset = "0xFC9030")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x217E87C", Offset = "0x217E87C", VA = "0x217E87C", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9068", Offset = "0xFC9068")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x217E8C8", Offset = "0x217E8C8", VA = "0x217E8C8", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x217E948", Offset = "0x217E948", VA = "0x217E948")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x217E9E0", Offset = "0x217E9E0", VA = "0x217E9E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x217ECE4", Offset = "0x217ECE4", VA = "0x217ECE4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x217ECF0", Offset = "0x217ECF0", VA = "0x217ECF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x217EA9C", Offset = "0x217EA9C", VA = "0x217EA9C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x217ECFC", Offset = "0x217ECFC", VA = "0x217ECFC")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x217F19C", Offset = "0x217F19C", VA = "0x217F19C")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x217F35C", Offset = "0x217F35C", VA = "0x217F35C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x217F4B8", Offset = "0x217F4B8", VA = "0x217F4B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x217F5E8", Offset = "0x217F5E8", VA = "0x217F5E8")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB24C0", Offset = "0xFB24C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB24C0", Offset = "0xFB24C0")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD5A8", Offset = "0xFBD5A8")]
		public Transform pelvis;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD5E0", Offset = "0xFBD5E0")]
		public Transform characterRoot;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD618", Offset = "0xFBD618")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD618", Offset = "0xFBD618")]
		public float rootRotationWeight;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD66C", Offset = "0xFBD66C")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD6A4", Offset = "0xFBD6A4")]
		public float maxRootRotationAngle;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x217F6D8", Offset = "0x217F6D8", VA = "0x217F6D8", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC90A0", Offset = "0xFC90A0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x217F724", Offset = "0x217F724", VA = "0x217F724", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC90D8", Offset = "0xFC90D8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x217F770", Offset = "0x217F770", VA = "0x217F770", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x217F788", Offset = "0x217F788", VA = "0x217F788")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x217F978", Offset = "0x217F978", VA = "0x217F978")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x217FA78", Offset = "0x217FA78", VA = "0x217FA78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x21801C0", Offset = "0x21801C0", VA = "0x21801C0")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x2180618", Offset = "0x2180618", VA = "0x2180618")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x2180888", Offset = "0x2180888", VA = "0x2180888")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x2180BA8", Offset = "0x2180BA8", VA = "0x2180BA8")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x2180D34", Offset = "0x2180D34", VA = "0x2180D34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x2180F38", Offset = "0x2180F38", VA = "0x2180F38")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2520", Offset = "0xFB2520")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2520", Offset = "0xFB2520")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x20004A2")]
		public struct Foot
		{
			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x1144804", Offset = "0x1144804", VA = "0x1144804")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD6DC", Offset = "0xFBD6DC")]
		public Grounding forelegSolver;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD714", Offset = "0xFBD714")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD714", Offset = "0xFBD714")]
		public float rootRotationWeight;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD768", Offset = "0xFBD768")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD768", Offset = "0xFBD768")]
		public float minRootRotation;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD7C0", Offset = "0xFBD7C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD7C0", Offset = "0xFBD7C0")]
		public float maxRootRotation;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD818", Offset = "0xFBD818")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD850", Offset = "0xFBD850")]
		public float maxLegOffset;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD888", Offset = "0xFBD888")]
		public float maxForeLegOffset;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD8C0", Offset = "0xFBD8C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBD8C0", Offset = "0xFBD8C0")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD914", Offset = "0xFBD914")]
		public Transform characterRoot;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD94C", Offset = "0xFBD94C")]
		public Transform pelvis;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD984", Offset = "0xFBD984")]
		public Transform lastSpineBone;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBD9BC", Offset = "0xFBD9BC")]
		public Transform head;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x2180FD0", Offset = "0x2180FD0", VA = "0x2180FD0", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9110", Offset = "0xFC9110")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x218101C", Offset = "0x218101C", VA = "0x218101C", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9148", Offset = "0xFC9148")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x2181068", Offset = "0x2181068", VA = "0x2181068", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x218109C", Offset = "0x218109C", VA = "0x218109C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x21811CC", Offset = "0x21811CC", VA = "0x21811CC")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x218138C", Offset = "0x218138C", VA = "0x218138C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x21813F4", Offset = "0x21813F4", VA = "0x21813F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x21814AC", Offset = "0x21814AC", VA = "0x21814AC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x21817E0", Offset = "0x21817E0", VA = "0x21817E0")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x2181BC4", Offset = "0x2181BC4", VA = "0x2181BC4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x2181D10", Offset = "0x2181D10", VA = "0x2181D10")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x21821B4", Offset = "0x21821B4", VA = "0x21821B4")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x21829A4", Offset = "0x21829A4", VA = "0x21829A4")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x2182C64", Offset = "0x2182C64", VA = "0x2182C64")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x2182DC4", Offset = "0x2182DC4", VA = "0x2182DC4")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x21830A0", Offset = "0x21830A0", VA = "0x21830A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x21830D8", Offset = "0x21830D8", VA = "0x21830D8")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x21832D4", Offset = "0x21832D4", VA = "0x21832D4")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2580", Offset = "0xFB2580")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDA04", Offset = "0xFBDA04")]
		public VRIK ik;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x2183408", Offset = "0x2183408", VA = "0x2183408")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9180", Offset = "0xFC9180")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x218340C", Offset = "0x218340C", VA = "0x218340C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC91B8", Offset = "0xFC91B8")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x2183410", Offset = "0x2183410", VA = "0x2183410", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC91F0", Offset = "0xFC91F0")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x2183414", Offset = "0x2183414", VA = "0x2183414", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x218342C", Offset = "0x218342C", VA = "0x218342C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x21834C4", Offset = "0x21834C4", VA = "0x21834C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x2183578", Offset = "0x2183578", VA = "0x2183578")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x21837DC", Offset = "0x21837DC", VA = "0x21837DC")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x2183A70", Offset = "0x2183A70", VA = "0x2183A70")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x2183B78", Offset = "0x2183B78", VA = "0x2183B78")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x2183D78", Offset = "0x2183D78", VA = "0x2183D78")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x2183ED4", Offset = "0x2183ED4", VA = "0x2183ED4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x2184080", Offset = "0x2184080", VA = "0x2184080")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000206")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x20004A3")]
		public enum Quality
		{
			[Token(Token = "0x40013F3")]
			Fastest,
			[Token(Token = "0x40013F4")]
			Simple,
			[Token(Token = "0x40013F5")]
			Best
		}

		[Token(Token = "0x20004A4")]
		public class Leg
		{
			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2864", Offset = "0xFC2864")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2874", Offset = "0xFC2874")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2884", Offset = "0xFC2884")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2894", Offset = "0xFC2894")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC28A4", Offset = "0xFC28A4")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC28B4", Offset = "0xFC28B4")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC28C4", Offset = "0xFC28C4")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Grounding grounding;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float lastTime;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float deltaTime;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3 lastPosition;

			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion toHitNormal;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Quaternion r;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private RaycastHit heelHit;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 up;

			[Token(Token = "0x17000510")]
			public bool isGrounded
			{
				[Token(Token = "0x6001E90")]
				[Address(RVA = "0x21858E0", Offset = "0x21858E0", VA = "0x21858E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC94C", Offset = "0xFCC94C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001E91")]
				[Address(RVA = "0x21858E8", Offset = "0x21858E8", VA = "0x21858E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC95C", Offset = "0xFCC95C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000511")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x6001E92")]
				[Address(RVA = "0x21858F4", Offset = "0x21858F4", VA = "0x21858F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC96C", Offset = "0xFCC96C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001E93")]
				[Address(RVA = "0x2185900", Offset = "0x2185900", VA = "0x2185900")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC97C", Offset = "0xFCC97C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000512")]
			public bool initiated
			{
				[Token(Token = "0x6001E94")]
				[Address(RVA = "0x218590C", Offset = "0x218590C", VA = "0x218590C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC98C", Offset = "0xFCC98C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001E95")]
				[Address(RVA = "0x2185914", Offset = "0x2185914", VA = "0x2185914")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC99C", Offset = "0xFCC99C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000513")]
			public float heightFromGround
			{
				[Token(Token = "0x6001E96")]
				[Address(RVA = "0x2185920", Offset = "0x2185920", VA = "0x2185920")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC9AC", Offset = "0xFCC9AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001E97")]
				[Address(RVA = "0x2185928", Offset = "0x2185928", VA = "0x2185928")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC9BC", Offset = "0xFCC9BC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000514")]
			public Vector3 velocity
			{
				[Token(Token = "0x6001E98")]
				[Address(RVA = "0x2185930", Offset = "0x2185930", VA = "0x2185930")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC9CC", Offset = "0xFCC9CC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001E99")]
				[Address(RVA = "0x218593C", Offset = "0x218593C", VA = "0x218593C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC9DC", Offset = "0xFCC9DC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000515")]
			public Transform transform
			{
				[Token(Token = "0x6001E9A")]
				[Address(RVA = "0x2185948", Offset = "0x2185948", VA = "0x2185948")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC9EC", Offset = "0xFCC9EC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E9B")]
				[Address(RVA = "0x2185950", Offset = "0x2185950", VA = "0x2185950")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCC9FC", Offset = "0xFCC9FC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000516")]
			public float IKOffset
			{
				[Token(Token = "0x6001E9C")]
				[Address(RVA = "0x2185958", Offset = "0x2185958", VA = "0x2185958")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA0C", Offset = "0xFCCA0C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001E9D")]
				[Address(RVA = "0x2185960", Offset = "0x2185960", VA = "0x2185960")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA1C", Offset = "0xFCCA1C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000517")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x6001EA2")]
				[Address(RVA = "0x21864B0", Offset = "0x21864B0", VA = "0x21864B0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000518")]
			private float rootYOffset
			{
				[Token(Token = "0x6001EAB")]
				[Address(RVA = "0x21867A4", Offset = "0x21867A4", VA = "0x21867A4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x2184730", Offset = "0x2184730", VA = "0x2184730")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x2185968", Offset = "0x2185968", VA = "0x2185968")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x2185400", Offset = "0x2185400", VA = "0x2185400")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x2184874", Offset = "0x2184874", VA = "0x2184874")]
			public void Process()
			{
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x2186048", Offset = "0x2186048", VA = "0x2186048")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x21859B4", Offset = "0x21859B4", VA = "0x21859B4")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x2186630", Offset = "0x2186630", VA = "0x2186630")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x2185CD8", Offset = "0x2185CD8", VA = "0x2185CD8")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x2185DE0", Offset = "0x2185DE0", VA = "0x2185DE0")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x218672C", Offset = "0x218672C", VA = "0x218672C")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0x218653C", Offset = "0x218653C", VA = "0x218653C")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x21868D8", Offset = "0x21868D8", VA = "0x21868D8")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x2184680", Offset = "0x2184680", VA = "0x2184680")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x20004A5")]
		public class Pelvis
		{
			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC28D4", Offset = "0xFC28D4")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC28E4", Offset = "0xFC28E4")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x17000519")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x6001EAD")]
				[Address(RVA = "0x21869C8", Offset = "0x21869C8", VA = "0x21869C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA2C", Offset = "0xFCCA2C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001EAE")]
				[Address(RVA = "0x21869D4", Offset = "0x21869D4", VA = "0x21869D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA3C", Offset = "0xFCCA3C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700051A")]
			public float heightOffset
			{
				[Token(Token = "0x6001EAF")]
				[Address(RVA = "0x21869E0", Offset = "0x21869E0", VA = "0x21869E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA4C", Offset = "0xFCCA4C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001EB0")]
				[Address(RVA = "0x21869E8", Offset = "0x21869E8", VA = "0x21869E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA5C", Offset = "0xFCCA5C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x218482C", Offset = "0x218482C", VA = "0x218482C")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x2185350", Offset = "0x2185350", VA = "0x2185350")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x21869F0", Offset = "0x21869F0", VA = "0x21869F0")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x21850E4", Offset = "0x21850E4", VA = "0x21850E4")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x2184728", Offset = "0x2184728", VA = "0x2184728")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDA3C", Offset = "0xFBDA3C")]
		public LayerMask layers;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDA74", Offset = "0xFBDA74")]
		public float maxStep;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDAAC", Offset = "0xFBDAAC")]
		public float heightOffset;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDAE4", Offset = "0xFBDAE4")]
		public float footSpeed;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDB1C", Offset = "0xFBDB1C")]
		public float footRadius;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDB54", Offset = "0xFBDB54")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDBA0", Offset = "0xFBDBA0")]
		public float prediction;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDBD8", Offset = "0xFBDBD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBDBD8", Offset = "0xFBDBD8")]
		public float footRotationWeight;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDC2C", Offset = "0xFBDC2C")]
		public float footRotationSpeed;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDC64", Offset = "0xFBDC64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBDC64", Offset = "0xFBDC64")]
		public float maxFootRotationAngle;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDCBC", Offset = "0xFBDCBC")]
		public bool rotateSolver;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDCF4", Offset = "0xFBDCF4")]
		public float pelvisSpeed;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDD2C", Offset = "0xFBDD2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBDD2C", Offset = "0xFBDD2C")]
		public float pelvisDamper;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDD80", Offset = "0xFBDD80")]
		public float lowerPelvisWeight;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDDB8", Offset = "0xFBDDB8")]
		public float liftPelvisWeight;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDDF0", Offset = "0xFBDDF0")]
		public float rootSphereCastRadius;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDE28", Offset = "0xFBDE28")]
		public bool overstepFallsDown;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDE60", Offset = "0xFBDE60")]
		public Quality quality;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBDE98", Offset = "0xFBDE98")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBDEA8", Offset = "0xFBDEA8")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBDEB8", Offset = "0xFBDEB8")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBDEC8", Offset = "0xFBDEC8")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBDED8", Offset = "0xFBDED8")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x17000246")]
		public Leg[] legs
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x21840E8", Offset = "0x21840E8", VA = "0x21840E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9228", Offset = "0xFC9228")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x21840F0", Offset = "0x21840F0", VA = "0x21840F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9238", Offset = "0xFC9238")]
			private set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public Pelvis pelvis
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x21840F8", Offset = "0x21840F8", VA = "0x21840F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9248", Offset = "0xFC9248")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x2184100", Offset = "0x2184100", VA = "0x2184100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9258", Offset = "0xFC9258")]
			private set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public bool isGrounded
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x2184108", Offset = "0x2184108", VA = "0x2184108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9268", Offset = "0xFC9268")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x2184110", Offset = "0x2184110", VA = "0x2184110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9278", Offset = "0xFC9278")]
			private set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public Transform root
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x218411C", Offset = "0x218411C", VA = "0x218411C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9288", Offset = "0xFC9288")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x2184124", Offset = "0x2184124", VA = "0x2184124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9298", Offset = "0xFC9298")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x218412C", Offset = "0x218412C", VA = "0x218412C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC92A8", Offset = "0xFC92A8")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x2184144", Offset = "0x2184144", VA = "0x2184144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC92B8", Offset = "0xFC92B8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public bool rootGrounded
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x2184164", Offset = "0x2184164", VA = "0x2184164")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024C")]
		public Vector3 up
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x217E374", Offset = "0x217E374", VA = "0x217E374")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700024D")]
		private bool useRootRotation
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x21854B4", Offset = "0x21854B4", VA = "0x21854B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x21841B8", Offset = "0x21841B8", VA = "0x21841B8")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x2184598", Offset = "0x2184598", VA = "0x2184598")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x217D7E0", Offset = "0x217D7E0", VA = "0x217D7E0")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x217E038", Offset = "0x217E038", VA = "0x217E038")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x217FFA8", Offset = "0x217FFA8", VA = "0x217FFA8")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x217D2BC", Offset = "0x217D2BC", VA = "0x217D2BC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x218485C", Offset = "0x218485C", VA = "0x218485C")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x2185584", Offset = "0x2185584", VA = "0x2185584")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x21856EC", Offset = "0x21856EC", VA = "0x21856EC")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x21857F0", Offset = "0x21857F0", VA = "0x21857F0")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x217CEF8", Offset = "0x217CEF8", VA = "0x217CEF8")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB25B8", Offset = "0xFB25B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB25B8", Offset = "0xFB25B8")]
	public class AimIK : IK
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x1B050A4", Offset = "0x1B050A4", VA = "0x1B050A4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC92C8", Offset = "0xFC92C8")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x1B050F0", Offset = "0x1B050F0", VA = "0x1B050F0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9300", Offset = "0xFC9300")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x1B0513C", Offset = "0x1B0513C", VA = "0x1B0513C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9338", Offset = "0xFC9338")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x1B05188", Offset = "0x1B05188", VA = "0x1B05188")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9370", Offset = "0xFC9370")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x1B051D4", Offset = "0x1B051D4", VA = "0x1B051D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC93A8", Offset = "0xFC93A8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x1B05220", Offset = "0x1B05220", VA = "0x1B05220", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x1B05228", Offset = "0x1B05228", VA = "0x1B05228")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2618", Offset = "0xFB2618")]
	public class ArmIK : IK
	{
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x1B05BA8", Offset = "0x1B05BA8", VA = "0x1B05BA8", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC93E0", Offset = "0xFC93E0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x1B05C14", Offset = "0x1B05C14", VA = "0x1B05C14", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9418", Offset = "0xFC9418")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x1B05C80", Offset = "0x1B05C80", VA = "0x1B05C80")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9450", Offset = "0xFC9450")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x1B05CCC", Offset = "0x1B05CCC", VA = "0x1B05CCC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9488", Offset = "0xFC9488")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x1B05D18", Offset = "0x1B05D18", VA = "0x1B05D18", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x1B05D20", Offset = "0x1B05D20", VA = "0x1B05D20")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2650", Offset = "0xFB2650")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2650", Offset = "0xFB2650")]
	public class CCDIK : IK
	{
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x1B074AC", Offset = "0x1B074AC", VA = "0x1B074AC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC94C0", Offset = "0xFC94C0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x1B074F8", Offset = "0x1B074F8", VA = "0x1B074F8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC94F8", Offset = "0xFC94F8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1B07544", Offset = "0x1B07544", VA = "0x1B07544")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9530", Offset = "0xFC9530")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x1B07590", Offset = "0x1B07590", VA = "0x1B07590")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9568", Offset = "0xFC9568")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x1B075DC", Offset = "0x1B075DC", VA = "0x1B075DC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x1B075E4", Offset = "0x1B075E4", VA = "0x1B075E4")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB26B0", Offset = "0xFB26B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB26B0", Offset = "0xFB26B0")]
	public class FABRIK : IK
	{
		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x1B07F2C", Offset = "0x1B07F2C", VA = "0x1B07F2C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC95A0", Offset = "0xFC95A0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x1B07F78", Offset = "0x1B07F78", VA = "0x1B07F78", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC95D8", Offset = "0xFC95D8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x1B07FC4", Offset = "0x1B07FC4", VA = "0x1B07FC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9610", Offset = "0xFC9610")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1B08010", Offset = "0x1B08010", VA = "0x1B08010")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9648", Offset = "0xFC9648")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x1B0805C", Offset = "0x1B0805C", VA = "0x1B0805C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1B08064", Offset = "0x1B08064", VA = "0x1B08064")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2710", Offset = "0xFB2710")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2710", Offset = "0xFB2710")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x1B08708", Offset = "0x1B08708", VA = "0x1B08708", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9680", Offset = "0xFC9680")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x1B08754", Offset = "0x1B08754", VA = "0x1B08754", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC96B8", Offset = "0xFC96B8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x1B087A0", Offset = "0x1B087A0", VA = "0x1B087A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC96F0", Offset = "0xFC96F0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x1B087EC", Offset = "0x1B087EC", VA = "0x1B087EC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9728", Offset = "0xFC9728")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x1B08838", Offset = "0x1B08838", VA = "0x1B08838", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1B08840", Offset = "0x1B08840", VA = "0x1B08840")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2770", Offset = "0xFB2770")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2770", Offset = "0xFB2770")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x217B8A4", Offset = "0x217B8A4", VA = "0x217B8A4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9760", Offset = "0xFC9760")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x217B8F0", Offset = "0x217B8F0", VA = "0x217B8F0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9798", Offset = "0xFC9798")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x217B93C", Offset = "0x217B93C", VA = "0x217B93C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC97D0", Offset = "0xFC97D0")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x217B988", Offset = "0x217B988", VA = "0x217B988")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9808", Offset = "0xFC9808")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x217B9D4", Offset = "0x217B9D4", VA = "0x217B9D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9840", Offset = "0xFC9840")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x217BA20", Offset = "0x217BA20", VA = "0x217BA20")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9878", Offset = "0xFC9878")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x217BA6C", Offset = "0x217BA6C", VA = "0x217BA6C")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x217BAB0", Offset = "0x217BAB0", VA = "0x217BAB0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x217BAB8", Offset = "0x217BAB8", VA = "0x217BAB8")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x217BC80", Offset = "0x217BC80", VA = "0x217BC80")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x217BFE0", Offset = "0x217BFE0", VA = "0x217BFE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC98B0", Offset = "0xFC98B0")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x217C000", Offset = "0x217C000", VA = "0x217C000")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC98E8", Offset = "0xFC98E8")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x217C0F4", Offset = "0x217C0F4", VA = "0x217C0F4")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x6000E44")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x218953C", Offset = "0x218953C", VA = "0x218953C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x21895C0", Offset = "0x21895C0", VA = "0x21895C0", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x2189630", Offset = "0x2189630", VA = "0x2189630", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E48")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000E49")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x217C194", Offset = "0x217C194", VA = "0x217C194")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDEE8", Offset = "0xFBDEE8")]
		public IK[] IKComponents;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDF20", Offset = "0xFBDF20")]
		public Animator animator;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x1700024E")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x218C6E0", Offset = "0x218C6E0", VA = "0x218C6E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x218C77C", Offset = "0x218C77C", VA = "0x218C77C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x218C7EC", Offset = "0x218C7EC", VA = "0x218C7EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x218C8A8", Offset = "0x218C8A8", VA = "0x218C8A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x218C8E4", Offset = "0x218C8E4", VA = "0x218C8E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x218C820", Offset = "0x218C820", VA = "0x218C820")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x218C970", Offset = "0x218C970", VA = "0x218C970")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB27D0", Offset = "0xFB27D0")]
	public class LegIK : IK
	{
		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x208A66C", Offset = "0x208A66C", VA = "0x208A66C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9920", Offset = "0xFC9920")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x208A6D8", Offset = "0x208A6D8", VA = "0x208A6D8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9958", Offset = "0xFC9958")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x208A744", Offset = "0x208A744", VA = "0x208A744")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9990", Offset = "0xFC9990")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x208A790", Offset = "0x208A790", VA = "0x208A790")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC99C8", Offset = "0xFC99C8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x208A7DC", Offset = "0x208A7DC", VA = "0x208A7DC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x208A7E4", Offset = "0x208A7E4", VA = "0x208A7E4")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2808", Offset = "0xFB2808")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2808", Offset = "0xFB2808")]
	public class LimbIK : IK
	{
		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x208A858", Offset = "0x208A858", VA = "0x208A858", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9A00", Offset = "0xFC9A00")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x208A8A4", Offset = "0x208A8A4", VA = "0x208A8A4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9A38", Offset = "0xFC9A38")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x208A8F0", Offset = "0x208A8F0", VA = "0x208A8F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9A70", Offset = "0xFC9A70")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x208A93C", Offset = "0x208A93C", VA = "0x208A93C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9AA8", Offset = "0xFC9AA8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x208A988", Offset = "0x208A988", VA = "0x208A988", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x208A990", Offset = "0x208A990", VA = "0x208A990")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2868", Offset = "0xFB2868")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2868", Offset = "0xFB2868")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x208B848", Offset = "0x208B848", VA = "0x208B848", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9AE0", Offset = "0xFC9AE0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x208B894", Offset = "0x208B894", VA = "0x208B894", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9B18", Offset = "0xFC9B18")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x208B8E0", Offset = "0x208B8E0", VA = "0x208B8E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9B50", Offset = "0xFC9B50")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x208B92C", Offset = "0x208B92C", VA = "0x208B92C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9B88", Offset = "0xFC9B88")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x208B978", Offset = "0x208B978", VA = "0x208B978", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x208B980", Offset = "0x208B980", VA = "0x208B980")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB28C8", Offset = "0xFB28C8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB28C8", Offset = "0xFB28C8")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x1B64B04", Offset = "0x1B64B04", VA = "0x1B64B04", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9BC0", Offset = "0xFC9BC0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x1B64B50", Offset = "0x1B64B50", VA = "0x1B64B50", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9BF8", Offset = "0xFC9BF8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x1B64B9C", Offset = "0x1B64B9C", VA = "0x1B64B9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9C30", Offset = "0xFC9C30")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x1B64BE8", Offset = "0x1B64BE8", VA = "0x1B64BE8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9C68", Offset = "0xFC9C68")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x1B64C34", Offset = "0x1B64C34", VA = "0x1B64C34", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x1B64C3C", Offset = "0x1B64C3C", VA = "0x1B64C3C")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2928", Offset = "0xFB2928")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x20004A6")]
		public class References
		{
			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC28F4", Offset = "0xFC28F4")]
			public Transform chest;

			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC292C", Offset = "0xFC292C")]
			public Transform neck;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2964", Offset = "0xFC2964")]
			public Transform leftShoulder;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC299C", Offset = "0xFC299C")]
			public Transform rightShoulder;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC29D4", Offset = "0xFC29D4")]
			public Transform leftThigh;

			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2A0C", Offset = "0xFC2A0C")]
			public Transform leftCalf;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2A44", Offset = "0xFC2A44")]
			public Transform leftFoot;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2A7C", Offset = "0xFC2A7C")]
			public Transform leftToes;

			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2AB4", Offset = "0xFC2AB4")]
			public Transform rightThigh;

			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2AEC", Offset = "0xFC2AEC")]
			public Transform rightCalf;

			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2B24", Offset = "0xFC2B24")]
			public Transform rightFoot;

			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2B5C", Offset = "0xFC2B5C")]
			public Transform rightToes;

			[Token(Token = "0x1700051B")]
			public bool isFilled
			{
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0x1B662F4", Offset = "0x1B662F4", VA = "0x1B662F4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700051C")]
			public bool isEmpty
			{
				[Token(Token = "0x6001EB8")]
				[Address(RVA = "0x1B65E78", Offset = "0x1B65E78", VA = "0x1B65E78")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x1B66990", Offset = "0x1B66990", VA = "0x1B66990")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x1B65954", Offset = "0x1B65954", VA = "0x1B65954")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x1B66988", Offset = "0x1B66988", VA = "0x1B66988")]
			public References()
			{
			}
		}

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0xFBDF58", Offset = "0xFBDF58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDF58", Offset = "0xFBDF58")]
		public References references;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBDFD4", Offset = "0xFBDFD4")]
		public IKSolverVR solver;

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x1B65808", Offset = "0x1B65808", VA = "0x1B65808", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9CA0", Offset = "0xFC9CA0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x1B65874", Offset = "0x1B65874", VA = "0x1B65874", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9CD8", Offset = "0xFC9CD8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x1B658E0", Offset = "0x1B658E0", VA = "0x1B658E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9D10", Offset = "0xFC9D10")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x1B6592C", Offset = "0x1B6592C", VA = "0x1B6592C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9D48", Offset = "0xFC9D48")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x1B65DD4", Offset = "0x1B65DD4", VA = "0x1B65DD4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9D80", Offset = "0xFC9D80")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x1B65DFC", Offset = "0x1B65DFC", VA = "0x1B65DFC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x1B65E04", Offset = "0x1B65E04", VA = "0x1B65E04", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x1B66770", Offset = "0x1B66770", VA = "0x1B66770", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x1B668E8", Offset = "0x1B668E8", VA = "0x1B668E8")]
		public VRIK()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class IKJBoneParams : MonoBehaviour
	{
		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE00C", Offset = "0xFBE00C")]
		public float weight;

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x218C978", Offset = "0x218C978", VA = "0x218C978")]
		public IKJBoneParams()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public static class RotationLimitUtilities
	{
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x1B63A58", Offset = "0x1B63A58", VA = "0x1B63A58")]
		public static Quaternion LimitHinge(Quaternion rotation, float min, float max, bool useLimits, Vector3 axis, ref Quaternion lastRotation, ref float lastAngle)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x1B63D78", Offset = "0x1B63D78", VA = "0x1B63D78")]
		public static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x1B63E5C", Offset = "0x1B63E5C", VA = "0x1B63E5C")]
		public static Quaternion LimitAngle(Quaternion rotation, Vector3 axis, Vector3 secondaryAxis, float limit, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x1B63EC4", Offset = "0x1B63EC4", VA = "0x1B63EC4")]
		public static Quaternion LimitSwing(Quaternion rotation, Vector3 axis, float limit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x1B640F8", Offset = "0x1B640F8", VA = "0x1B640F8")]
		public static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000216")]
	public class FABRIKChain
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE024", Offset = "0xFBE024")]
		public float pull;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE03C", Offset = "0xFBE03C")]
		public float pin;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x1B080D8", Offset = "0x1B080D8", VA = "0x1B080D8")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x1B081AC", Offset = "0x1B081AC", VA = "0x1B081AC")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x1B081CC", Offset = "0x1B081CC", VA = "0x1B081CC")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x1B0859C", Offset = "0x1B0859C", VA = "0x1B0859C")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x1B082A0", Offset = "0x1B082A0", VA = "0x1B082A0")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x1B08694", Offset = "0x1B08694", VA = "0x1B08694")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x1B088B4", Offset = "0x1B088B4", VA = "0x1B088B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1B08E30", Offset = "0x1B08E30", VA = "0x1B08E30")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x1B08FF0", Offset = "0x1B08FF0", VA = "0x1B08FF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x1B0910C", Offset = "0x1B0910C", VA = "0x1B0910C")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004A7")]
		public class BendBone
		{
			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2B94", Offset = "0xFC2B94")]
			public Transform transform;

			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2BCC", Offset = "0xFC2BCC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2BCC", Offset = "0xFC2BCC")]
			public float weight;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x1B0C29C", Offset = "0x1B0C29C", VA = "0x1B0C29C")]
			public BendBone()
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x1B0C31C", Offset = "0x1B0C31C", VA = "0x1B0C31C")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x1B0995C", Offset = "0x1B0995C", VA = "0x1B0995C")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x1B09D60", Offset = "0x1B09D60", VA = "0x1B09D60")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE054", Offset = "0xFBE054")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xFBE08C", Offset = "0xFBE08C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE08C", Offset = "0xFBE08C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE08C", Offset = "0xFBE08C")]
		public float positionWeight;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE104", Offset = "0xFBE104")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE104", Offset = "0xFBE104")]
		public float bodyWeight;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE158", Offset = "0xFBE158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE158", Offset = "0xFBE158")]
		public float thighWeight;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE1AC", Offset = "0xFBE1AC")]
		public bool handsPullBody;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xFBE1E4", Offset = "0xFBE1E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE1E4", Offset = "0xFBE1E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE1E4", Offset = "0xFBE1E4")]
		public float rotationWeight;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE25C", Offset = "0xFBE25C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE25C", Offset = "0xFBE25C")]
		public float bodyClampWeight;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE2B0", Offset = "0xFBE2B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE2B0", Offset = "0xFBE2B0")]
		public float headClampWeight;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE304", Offset = "0xFBE304")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE304", Offset = "0xFBE304")]
		public float bendWeight;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE358", Offset = "0xFBE358")]
		public BendBone[] bendBones;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xFBE390", Offset = "0xFBE390")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE390", Offset = "0xFBE390")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE390", Offset = "0xFBE390")]
		public float CCDWeight;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE408", Offset = "0xFBE408")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE408", Offset = "0xFBE408")]
		public float roll;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE45C", Offset = "0xFBE45C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE45C", Offset = "0xFBE45C")]
		public float damper;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE4B4", Offset = "0xFBE4B4")]
		public Transform[] CCDBones;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xFBE4EC", Offset = "0xFBE4EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE4EC", Offset = "0xFBE4EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE4EC", Offset = "0xFBE4EC")]
		public float postStretchWeight;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE564", Offset = "0xFBE564")]
		public float maxStretch;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE59C", Offset = "0xFBE59C")]
		public float stretchDamper;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE5D4", Offset = "0xFBE5D4")]
		public bool fixHead;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE60C", Offset = "0xFBE60C")]
		public Transform[] stretchBones;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xFBE644", Offset = "0xFBE644")]
		public Vector3 chestDirection;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE67C", Offset = "0xFBE67C")]
		public float chestDirectionWeight;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1B09114", Offset = "0x1B09114", VA = "0x1B09114")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x1B09498", Offset = "0x1B09498", VA = "0x1B09498")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1B09994", Offset = "0x1B09994", VA = "0x1B09994")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1B09D88", Offset = "0x1B09D88", VA = "0x1B09D88")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x1B0A700", Offset = "0x1B0A700", VA = "0x1B0A700")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x1B0AA4C", Offset = "0x1B0AA4C", VA = "0x1B0AA4C")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x1B0ADE8", Offset = "0x1B0ADE8", VA = "0x1B0ADE8")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x1B0B854", Offset = "0x1B0B854", VA = "0x1B0B854")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1B0A42C", Offset = "0x1B0A42C", VA = "0x1B0A42C")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x1B0BA64", Offset = "0x1B0BA64", VA = "0x1B0BA64")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x1B0B710", Offset = "0x1B0B710", VA = "0x1B0B710")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x1B0B574", Offset = "0x1B0B574", VA = "0x1B0B574")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x1B0BDD0", Offset = "0x1B0BDD0", VA = "0x1B0BDD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x1B0C0B4", Offset = "0x1B0C0B4", VA = "0x1B0C0B4")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000219")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x20004A8")]
		public class ChildConstraint
		{
			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2C40", Offset = "0xFC2C40")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2C50", Offset = "0xFC2C50")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x400142F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x1700051D")]
			public float nominalDistance
			{
				[Token(Token = "0x6001EBF")]
				[Address(RVA = "0x2179BC4", Offset = "0x2179BC4", VA = "0x2179BC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA6C", Offset = "0xFCCA6C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001EC0")]
				[Address(RVA = "0x2179BCC", Offset = "0x2179BCC", VA = "0x2179BCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA7C", Offset = "0xFCCA7C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700051E")]
			public bool isRigid
			{
				[Token(Token = "0x6001EC1")]
				[Address(RVA = "0x2179BD4", Offset = "0x2179BD4", VA = "0x2179BD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA8C", Offset = "0xFCCA8C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001EC2")]
				[Address(RVA = "0x2179BDC", Offset = "0x2179BDC", VA = "0x2179BDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCA9C", Offset = "0xFCCA9C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0x2179BE8", Offset = "0x2179BE8", VA = "0x2179BE8")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x2179C50", Offset = "0x2179C50", VA = "0x2179C50")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x2179CA8", Offset = "0x2179CA8", VA = "0x2179CA8")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x2179EAC", Offset = "0x2179EAC", VA = "0x2179EAC")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A9")]
		public enum Smoothing
		{
			[Token(Token = "0x4001432")]
			None,
			[Token(Token = "0x4001433")]
			Exponential,
			[Token(Token = "0x4001434")]
			Cubic
		}

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE694", Offset = "0xFBE694")]
		public float pin;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE6AC", Offset = "0xFBE6AC")]
		public float pull;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE6C4", Offset = "0xFBE6C4")]
		public float push;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE6DC", Offset = "0xFBE6DC")]
		public float pushParent;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE6F4", Offset = "0xFBE6F4")]
		public float reach;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x40009F4")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x1B0C3CC", Offset = "0x1B0C3CC", VA = "0x1B0C3CC")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x1B0C4C8", Offset = "0x1B0C4C8", VA = "0x1B0C4C8")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x1B0C618", Offset = "0x1B0C618", VA = "0x1B0C618")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x1B0C74C", Offset = "0x1B0C74C", VA = "0x1B0C74C")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x1B0C828", Offset = "0x1B0C828", VA = "0x1B0C828")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x1B0C938", Offset = "0x1B0C938", VA = "0x1B0C938")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1B0D058", Offset = "0x1B0D058", VA = "0x1B0D058")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1B0CAD8", Offset = "0x1B0CAD8", VA = "0x1B0CAD8")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x1B0D544", Offset = "0x1B0D544", VA = "0x1B0D544")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x1B0D8E8", Offset = "0x1B0D8E8", VA = "0x1B0D8E8")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1B0DCCC", Offset = "0x1B0DCCC", VA = "0x1B0DCCC")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x1B0E250", Offset = "0x1B0E250", VA = "0x1B0E250")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1B0E824", Offset = "0x1B0E824", VA = "0x1B0E824")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1B0EABC", Offset = "0x1B0EABC", VA = "0x1B0EABC")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1B0E71C", Offset = "0x1B0E71C", VA = "0x1B0E71C")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1B0E038", Offset = "0x1B0E038", VA = "0x1B0E038")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1B0E6A0", Offset = "0x1B0E6A0", VA = "0x1B0E6A0")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1B0EBA4", Offset = "0x1B0EBA4", VA = "0x1B0EBA4")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x1B0E5C0", Offset = "0x1B0E5C0", VA = "0x1B0E5C0")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1B0E9A4", Offset = "0x1B0E9A4", VA = "0x1B0E9A4")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021A")]
	public class IKConstraintBend
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE70C", Offset = "0xFBE70C")]
		public float weight;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBE724", Offset = "0xFBE724")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x1700024F")]
		public bool initiated
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x2189858", Offset = "0x2189858", VA = "0x2189858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9DB8", Offset = "0xFC9DB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x2189860", Offset = "0x2189860", VA = "0x2189860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9DC8", Offset = "0xFC9DC8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x2189690", Offset = "0x2189690", VA = "0x2189690")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x218986C", Offset = "0x218986C", VA = "0x218986C")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x21898F0", Offset = "0x21898F0", VA = "0x21898F0")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x21899A4", Offset = "0x21899A4", VA = "0x21899A4")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x21899F4", Offset = "0x21899F4", VA = "0x21899F4")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x2189EE4", Offset = "0x2189EE4", VA = "0x2189EE4")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x218A11C", Offset = "0x218A11C", VA = "0x218A11C")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x218A5B8", Offset = "0x218A5B8", VA = "0x218A5B8")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x2189CA4", Offset = "0x2189CA4", VA = "0x2189CA4")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x2189DC4", Offset = "0x2189DC4", VA = "0x2189DC4")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class IKEffector
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE734", Offset = "0xFBE734")]
		public float positionWeight;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE74C", Offset = "0xFBE74C")]
		public float rotationWeight;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBE764", Offset = "0xFBE764")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE774", Offset = "0xFBE774")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x17000250")]
		public bool isEndEffector
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x218AC24", Offset = "0x218AC24", VA = "0x218AC24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9DD8", Offset = "0xFC9DD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x218AC2C", Offset = "0x218AC2C", VA = "0x218AC2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9DE8", Offset = "0xFC9DE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x218ABBC", Offset = "0x218ABBC", VA = "0x218ABBC")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x218AC38", Offset = "0x218AC38", VA = "0x218AC38")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x218AD0C", Offset = "0x218AD0C", VA = "0x218AD0C")]
		public IKEffector()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x218AE78", Offset = "0x218AE78", VA = "0x218AE78")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x218B020", Offset = "0x218B020", VA = "0x218B020")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x218B31C", Offset = "0x218B31C", VA = "0x218B31C")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x218B5F4", Offset = "0x218B5F4", VA = "0x218B5F4")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x218B734", Offset = "0x218B734", VA = "0x218B734")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x218B7E0", Offset = "0x218B7E0", VA = "0x218B7E0")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x218BE34", Offset = "0x218BE34", VA = "0x218BE34")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x218BEA4", Offset = "0x218BEA4", VA = "0x218BEA4")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x218C0BC", Offset = "0x218C0BC", VA = "0x218C0BC")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x218C404", Offset = "0x218C404", VA = "0x218C404")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x20004AA")]
		public class BoneMap
		{
			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x4001437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x1700051F")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x6001EC8")]
				[Address(RVA = "0x218CC24", Offset = "0x218CC24", VA = "0x218CC24")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000520")]
			public bool isNodeBone
			{
				[Token(Token = "0x6001ECB")]
				[Address(RVA = "0x218CD90", Offset = "0x218CD90", VA = "0x218CD90")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000521")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x6001EDF")]
				[Address(RVA = "0x218D3A0", Offset = "0x218D3A0", VA = "0x218D3A0")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x218CBD4", Offset = "0x218CBD4", VA = "0x218CBD4")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x218CCF0", Offset = "0x218CCF0", VA = "0x218CCF0")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x218CD40", Offset = "0x218CD40", VA = "0x218CD40")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x218CDA0", Offset = "0x218CDA0", VA = "0x218CDA0")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x218CE88", Offset = "0x218CE88", VA = "0x218CE88")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x218CE90", Offset = "0x218CE90", VA = "0x218CE90")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x218D020", Offset = "0x218D020", VA = "0x218D020")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x218D12C", Offset = "0x218D12C", VA = "0x218D12C")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x218D1F0", Offset = "0x218D1F0", VA = "0x218D1F0")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x218D5C4", Offset = "0x218D5C4", VA = "0x218D5C4")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x218D5FC", Offset = "0x218D5FC", VA = "0x218D5FC")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x218D634", Offset = "0x218D634", VA = "0x218D634")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x218D65C", Offset = "0x218D65C", VA = "0x218D65C")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x218D788", Offset = "0x218D788", VA = "0x218D788")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x218DAD0", Offset = "0x218DAD0", VA = "0x218DAD0")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x218DB00", Offset = "0x218DB00", VA = "0x218DB00")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x218DC98", Offset = "0x218DC98", VA = "0x218DC98")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x218DD08", Offset = "0x218DD08", VA = "0x218DD08")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x218DF4C", Offset = "0x218DF4C", VA = "0x218DF4C")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x218E174", Offset = "0x218E174", VA = "0x218E174")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x218E28C", Offset = "0x218E28C", VA = "0x218E28C")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x218D8CC", Offset = "0x218D8CC", VA = "0x218D8CC")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x218E428", Offset = "0x218E428", VA = "0x218E428")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x218C988", Offset = "0x218C988", VA = "0x218C988", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x218C990", Offset = "0x218C990", VA = "0x218C990", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x218C994", Offset = "0x218C994", VA = "0x218C994")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x218CAC4", Offset = "0x218CAC4", VA = "0x218CAC4")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x218CBCC", Offset = "0x218CBCC", VA = "0x218CBCC")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE78C", Offset = "0xFBE78C")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x218E444", Offset = "0x218E444", VA = "0x218E444", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x218E4F0", Offset = "0x218E4F0", VA = "0x218E4F0")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x218E580", Offset = "0x218E580", VA = "0x218E580")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x218E62C", Offset = "0x218E62C", VA = "0x218E62C")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x218E644", Offset = "0x218E644", VA = "0x218E644")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x218E660", Offset = "0x218E660", VA = "0x218E660", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x218E70C", Offset = "0x218E70C", VA = "0x218E70C")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x218E724", Offset = "0x218E724", VA = "0x218E724")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021E")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x20004AB")]
		public enum BoneMapType
		{
			[Token(Token = "0x400144C")]
			Parent,
			[Token(Token = "0x400144D")]
			Bone1,
			[Token(Token = "0x400144E")]
			Bone2,
			[Token(Token = "0x400144F")]
			Bone3
		}

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE7A4", Offset = "0xFBE7A4")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE7BC", Offset = "0xFBE7BC")]
		public float weight;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoneMap boneMapParent;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMap1;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap2;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap3;

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x218E748", Offset = "0x218E748", VA = "0x218E748", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x218E7CC", Offset = "0x218E7CC", VA = "0x218E7CC")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x218E8A0", Offset = "0x218E8A0", VA = "0x218E8A0")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x218EBF4", Offset = "0x218EBF4", VA = "0x218EBF4")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x218ED24", Offset = "0x218ED24", VA = "0x218ED24")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x218EE8C", Offset = "0x218EE8C", VA = "0x218EE8C")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x218EEF0", Offset = "0x218EEF0", VA = "0x218EEF0")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x218EF98", Offset = "0x218EF98", VA = "0x218EF98")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x218F050", Offset = "0x218F050", VA = "0x218F050", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x218F318", Offset = "0x218F318", VA = "0x218F318")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x218F3D0", Offset = "0x218F3D0", VA = "0x218F3D0")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021F")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE7D4", Offset = "0xFBE7D4")]
		public int iterations;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE7EC", Offset = "0xFBE7EC")]
		public float twistWeight;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x218F53C", Offset = "0x218F53C", VA = "0x218F53C", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x218F834", Offset = "0x218F834", VA = "0x218F834")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x218F98C", Offset = "0x218F98C", VA = "0x218F98C")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x218FB2C", Offset = "0x218FB2C", VA = "0x218FB2C")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x218FBAC", Offset = "0x218FBAC", VA = "0x218FBAC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x218FC14", Offset = "0x218FC14", VA = "0x218FC14")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x218FC94", Offset = "0x218FC94", VA = "0x218FC94", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x219036C", Offset = "0x219036C", VA = "0x219036C")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x21903A4", Offset = "0x21903A4", VA = "0x21903A4")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x2190684", Offset = "0x2190684", VA = "0x2190684")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x2190A38", Offset = "0x2190A38", VA = "0x2190A38")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x2190B24", Offset = "0x2190B24", VA = "0x2190B24")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x2190BEC", Offset = "0x2190BEC", VA = "0x2190BEC")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000220")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x20004AC")]
		public class Point
		{
			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2C60", Offset = "0xFC2C60")]
			public float weight;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x2192754", Offset = "0x2192754", VA = "0x2192754")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x21927A4", Offset = "0x21927A4", VA = "0x21927A4")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x219292C", Offset = "0x219292C", VA = "0x219292C")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x2192964", Offset = "0x2192964", VA = "0x2192964")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x219299C", Offset = "0x219299C", VA = "0x219299C")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x21929EC", Offset = "0x21929EC", VA = "0x21929EC")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x21921FC", Offset = "0x21921FC", VA = "0x21921FC")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004AD")]
		public class Bone : Point
		{
			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x17000522")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x6001EE8")]
				[Address(RVA = "0x21917B8", Offset = "0x21917B8", VA = "0x21917B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001EE9")]
				[Address(RVA = "0x21918B4", Offset = "0x21918B4", VA = "0x21918B4")]
				set
				{
				}
			}

			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0x2191948", Offset = "0x2191948", VA = "0x2191948")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0x2191C08", Offset = "0x2191C08", VA = "0x2191C08")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x2191EE8", Offset = "0x2191EE8", VA = "0x2191EE8")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x2192150", Offset = "0x2192150", VA = "0x2192150")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x2192178", Offset = "0x2192178", VA = "0x2192178")]
			public Bone()
			{
			}

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x219227C", Offset = "0x219227C", VA = "0x219227C")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x219231C", Offset = "0x219231C", VA = "0x219231C")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004AE")]
		public class Node : Point
		{
			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x21926DC", Offset = "0x21926DC", VA = "0x21926DC")]
			public Node()
			{
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x21926E0", Offset = "0x21926E0", VA = "0x21926E0")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x2192710", Offset = "0x2192710", VA = "0x2192710")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x20004AF")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x20004B0")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBE814", Offset = "0xFBE814")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE814", Offset = "0xFBE814")]
		public float IKPositionWeight;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBE868", Offset = "0xFBE868")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool firstInitiation;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Transform root;

		[Token(Token = "0x17000251")]
		public bool initiated
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x2191208", Offset = "0x2191208", VA = "0x2191208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9DF8", Offset = "0xFC9DF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x2191210", Offset = "0x2191210", VA = "0x2191210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E08", Offset = "0xFC9E08")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x2190ED4", Offset = "0x2190ED4", VA = "0x2190ED4")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE6")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x217A788", Offset = "0x217A788", VA = "0x217A788")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x217AE38", Offset = "0x217AE38", VA = "0x217AE38")]
		public void Update()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x219115C", Offset = "0x219115C", VA = "0x219115C", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x2191168", Offset = "0x2191168", VA = "0x2191168")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x2191174", Offset = "0x2191174", VA = "0x2191174")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x219117C", Offset = "0x219117C", VA = "0x219117C")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x2191200", Offset = "0x2191200", VA = "0x2191200")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6000EF0")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x6000EF1")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x6000EF2")]
		public abstract void FixTransforms();

		[Token(Token = "0x6000EF3")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x6000EF4")]
		protected abstract void OnInitiate();

		[Token(Token = "0x6000EF5")]
		protected abstract void OnUpdate();

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x219121C", Offset = "0x219121C", VA = "0x219121C")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x2191234", Offset = "0x2191234", VA = "0x2191234")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x2191370", Offset = "0x2191370", VA = "0x2191370")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x219141C", Offset = "0x219141C", VA = "0x219141C")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x21917A0", Offset = "0x21917A0", VA = "0x21917A0")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE8B0", Offset = "0xFBE8B0")]
		public float poleWeight;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE8C8", Offset = "0xFBE8C8")]
		public float clampWeight;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE8E0", Offset = "0xFBE8E0")]
		public int clampSmoothing;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x17000252")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x2192B74", Offset = "0x2192B74", VA = "0x2192B74")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000253")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x2192C40", Offset = "0x2192C40", VA = "0x2192C40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000254")]
		protected override int minBones
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x21939F8", Offset = "0x21939F8", VA = "0x21939F8", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000255")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x2193F9C", Offset = "0x2193F9C", VA = "0x2193F9C", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x2192A74", Offset = "0x2192A74", VA = "0x2192A74")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x2192D0C", Offset = "0x2192D0C", VA = "0x2192D0C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x2192F8C", Offset = "0x2192F8C", VA = "0x2192F8C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x2193944", Offset = "0x2193944", VA = "0x2193944")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x219356C", Offset = "0x219356C", VA = "0x219356C")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x2193A00", Offset = "0x2193A00", VA = "0x2193A00")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x2194010", Offset = "0x2194010", VA = "0x2194010")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE8F8", Offset = "0xFBE8F8")]
		public float IKRotationWeight;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x21940A8", Offset = "0x21940A8", VA = "0x21940A8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x2194464", Offset = "0x2194464", VA = "0x2194464")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x2194518", Offset = "0x2194518", VA = "0x2194518", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x21946B0", Offset = "0x21946B0", VA = "0x21946B0", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x2194848", Offset = "0x2194848", VA = "0x2194848", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x2194894", Offset = "0x2194894", VA = "0x2194894", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x21948F4", Offset = "0x21948F4", VA = "0x21948F4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x2194C64", Offset = "0x2194C64", VA = "0x2194C64", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x2194C90", Offset = "0x2194C90", VA = "0x2194C90")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x2194958", Offset = "0x2194958", VA = "0x2194958")]
		private void Read()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x2194CFC", Offset = "0x2194CFC", VA = "0x2194CFC")]
		private void Write()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x2194E88", Offset = "0x2194E88", VA = "0x2194E88")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x247D0E0", Offset = "0x247D0E0", VA = "0x247D0E0")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x247D190", Offset = "0x247D190", VA = "0x247D190", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x247D790", Offset = "0x247D790", VA = "0x247D790", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x247DEF0", Offset = "0x247DEF0", VA = "0x247DEF0")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x247E654", Offset = "0x247E654", VA = "0x247E654")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000224")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x17000256")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x247F908", Offset = "0x247F908", VA = "0x247F908", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x247E6D4", Offset = "0x247E6D4", VA = "0x247E6D4")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x247EE18", Offset = "0x247EE18", VA = "0x247EE18")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x247EF4C", Offset = "0x247EF4C", VA = "0x247EF4C", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x247EFE4", Offset = "0x247EFE4", VA = "0x247EFE4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x247F5A4", Offset = "0x247F5A4", VA = "0x247F5A4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x247F910", Offset = "0x247F910", VA = "0x247F910")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x247E7A4", Offset = "0x247E7A4", VA = "0x247E7A4")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x247EEF8", Offset = "0x247EEF8", VA = "0x247EEF8")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x247F8AC", Offset = "0x247F8AC", VA = "0x247F8AC")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x247EC40", Offset = "0x247EC40", VA = "0x247EC40")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x2480158", Offset = "0x2480158", VA = "0x2480158")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x2480268", Offset = "0x2480268", VA = "0x2480268")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x2480394", Offset = "0x2480394", VA = "0x2480394")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x24804AC", Offset = "0x24804AC", VA = "0x24804AC")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x247F30C", Offset = "0x247F30C", VA = "0x247F30C")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x247F458", Offset = "0x247F458", VA = "0x247F458")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x2480698", Offset = "0x2480698", VA = "0x2480698")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x247FBCC", Offset = "0x247FBCC", VA = "0x247FBCC")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x247EEE8", Offset = "0x247EEE8", VA = "0x247EEE8")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x2480E08", Offset = "0x2480E08", VA = "0x2480E08")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x2480870", Offset = "0x2480870", VA = "0x2480870")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x247FA28", Offset = "0x247FA28", VA = "0x247FA28")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x247FB08", Offset = "0x247FB08", VA = "0x247FB08")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x2480ED4", Offset = "0x2480ED4", VA = "0x2480ED4")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000225")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE910", Offset = "0xFBE910")]
		public float rootPin;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x2480F60", Offset = "0x2480F60", VA = "0x2480F60", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x2481938", Offset = "0x2481938", VA = "0x2481938", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x24819D0", Offset = "0x24819D0", VA = "0x24819D0", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x2481A70", Offset = "0x2481A70", VA = "0x2481A70", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x2481B80", Offset = "0x2481B80", VA = "0x2481B80")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x2481C1C", Offset = "0x2481C1C", VA = "0x2481C1C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x2482184", Offset = "0x2482184", VA = "0x2482184", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x248239C", Offset = "0x248239C", VA = "0x248239C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x2482234", Offset = "0x2482234", VA = "0x2482234")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x2481E50", Offset = "0x2481E50", VA = "0x2481E50")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x2482434", Offset = "0x2482434", VA = "0x2482434")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000226")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE928", Offset = "0xFBE928")]
		public int iterations;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x24824A8", Offset = "0x24824A8", VA = "0x24824A8")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x248259C", Offset = "0x248259C", VA = "0x248259C")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x24825F8", Offset = "0x24825F8", VA = "0x24825F8")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x248272C", Offset = "0x248272C", VA = "0x248272C")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x2482788", Offset = "0x2482788", VA = "0x2482788")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x2482808", Offset = "0x2482808", VA = "0x2482808", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x24829A8", Offset = "0x24829A8", VA = "0x24829A8", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x2482B1C", Offset = "0x2482B1C", VA = "0x2482B1C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x2482D24", Offset = "0x2482D24", VA = "0x2482D24", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x2482DFC", Offset = "0x2482DFC", VA = "0x2482DFC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x2482EE8", Offset = "0x2482EE8", VA = "0x2482EE8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x248305C", Offset = "0x248305C", VA = "0x248305C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x2483224", Offset = "0x2483224", VA = "0x2483224", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x2483470", Offset = "0x2483470", VA = "0x2483470", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x248374C", Offset = "0x248374C", VA = "0x248374C", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x2483790", Offset = "0x2483790", VA = "0x2483790", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x2483880", Offset = "0x2483880", VA = "0x2483880")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000227")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x4000A7D")]
		Body,
		[Token(Token = "0x4000A7E")]
		LeftShoulder,
		[Token(Token = "0x4000A7F")]
		RightShoulder,
		[Token(Token = "0x4000A80")]
		LeftThigh,
		[Token(Token = "0x4000A81")]
		RightThigh,
		[Token(Token = "0x4000A82")]
		LeftHand,
		[Token(Token = "0x4000A83")]
		RightHand,
		[Token(Token = "0x4000A84")]
		LeftFoot,
		[Token(Token = "0x4000A85")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x2000228")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x4000A87")]
		LeftArm,
		[Token(Token = "0x4000A88")]
		RightArm,
		[Token(Token = "0x4000A89")]
		LeftLeg,
		[Token(Token = "0x4000A8A")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x2000229")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE940", Offset = "0xFBE940")]
		public float spineStiffness;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE958", Offset = "0xFBE958")]
		public float pullBodyVertical;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE970", Offset = "0xFBE970")]
		public float pullBodyHorizontal;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBE988", Offset = "0xFBE988")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x17000257")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x2483994", Offset = "0x2483994", VA = "0x2483994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x2483ADC", Offset = "0x2483ADC", VA = "0x2483ADC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x2483AE4", Offset = "0x2483AE4", VA = "0x2483AE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x2483AEC", Offset = "0x2483AEC", VA = "0x2483AEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x2483AF4", Offset = "0x2483AF4", VA = "0x2483AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x2483AFC", Offset = "0x2483AFC", VA = "0x2483AFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x2483B04", Offset = "0x2483B04", VA = "0x2483B04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x2483B0C", Offset = "0x2483B0C", VA = "0x2483B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x2483B14", Offset = "0x2483B14", VA = "0x2483B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x2483B1C", Offset = "0x2483B1C", VA = "0x2483B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x2483B54", Offset = "0x2483B54", VA = "0x2483B54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x2483B8C", Offset = "0x2483B8C", VA = "0x2483B8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x2483BC4", Offset = "0x2483BC4", VA = "0x2483BC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x2483BFC", Offset = "0x2483BFC", VA = "0x2483BFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x2483C30", Offset = "0x2483C30", VA = "0x2483C30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x2483C68", Offset = "0x2483C68", VA = "0x2483C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x2483CA0", Offset = "0x2483CA0", VA = "0x2483CA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x2483CD8", Offset = "0x2483CD8", VA = "0x2483CD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x2485F64", Offset = "0x2485F64", VA = "0x2485F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E18", Offset = "0xFC9E18")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x2485F70", Offset = "0x2485F70", VA = "0x2485F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E28", Offset = "0xFC9E28")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x2483D0C", Offset = "0x2483D0C", VA = "0x2483D0C")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x2483E18", Offset = "0x2483E18", VA = "0x2483E18")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x2483D60", Offset = "0x2483D60", VA = "0x2483D60")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x2483EF4", Offset = "0x2483EF4", VA = "0x2483EF4")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x248399C", Offset = "0x248399C", VA = "0x248399C")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x2483FC4", Offset = "0x2483FC4", VA = "0x2483FC4")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x248407C", Offset = "0x248407C", VA = "0x248407C")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x2484130", Offset = "0x2484130", VA = "0x2484130")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x24841E4", Offset = "0x24841E4", VA = "0x24841E4")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x24841EC", Offset = "0x24841EC", VA = "0x24841EC")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x2484220", Offset = "0x2484220", VA = "0x2484220")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x24842E8", Offset = "0x24842E8", VA = "0x24842E8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x248447C", Offset = "0x248447C", VA = "0x248447C")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x248587C", Offset = "0x248587C", VA = "0x248587C")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x2485D10", Offset = "0x2485D10", VA = "0x2485D10")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x2485D70", Offset = "0x2485D70", VA = "0x2485D70")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x2485B90", Offset = "0x2485B90", VA = "0x2485B90")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x2485C50", Offset = "0x2485C50", VA = "0x2485C50")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x2485F7C", Offset = "0x2485F7C", VA = "0x2485F7C")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x2486058", Offset = "0x2486058", VA = "0x2486058", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x24861A0", Offset = "0x24861A0", VA = "0x24861A0")]
		private void PullBody()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x2486330", Offset = "0x2486330", VA = "0x2486330")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x2486530", Offset = "0x2486530", VA = "0x2486530")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x2486730", Offset = "0x2486730", VA = "0x2486730", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x2486A64", Offset = "0x2486A64", VA = "0x2486A64", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x2486B64", Offset = "0x2486B64", VA = "0x2486B64")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022A")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x1700026A")]
		protected virtual int minBones
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x2487408", Offset = "0x2487408", VA = "0x2487408", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026B")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x2487410", Offset = "0x2487410", VA = "0x2487410", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026C")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x2487418", Offset = "0x2487418", VA = "0x2487418", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026D")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x2487428", Offset = "0x2487428", VA = "0x2487428", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700026E")]
		protected float positionOffset
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x247DE2C", Offset = "0x247DE2C", VA = "0x247DE2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x2486B70", Offset = "0x2486B70", VA = "0x2486B70")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x2486D24", Offset = "0x2486D24", VA = "0x2486D24")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x2486E88", Offset = "0x2486E88", VA = "0x2486E88", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x2486EF4", Offset = "0x2486EF4", VA = "0x2486EF4", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x2486F74", Offset = "0x2486F74", VA = "0x2486F74", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x248730C", Offset = "0x248730C", VA = "0x248730C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x2487314", Offset = "0x2487314", VA = "0x2487314", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x2487420", Offset = "0x2487420", VA = "0x2487420", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x2487424", Offset = "0x2487424", VA = "0x2487424", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x247D210", Offset = "0x247D210", VA = "0x247D210")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x247DA88", Offset = "0x247DA88", VA = "0x247DA88")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x248755C", Offset = "0x248755C", VA = "0x248755C")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x247E658", Offset = "0x247E658", VA = "0x247E658")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022B")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE998", Offset = "0xFBE998")]
		public float IKRotationWeight;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x2487810", Offset = "0x2487810", VA = "0x2487810", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x2487BCC", Offset = "0x2487BCC", VA = "0x2487BCC")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x2487C84", Offset = "0x2487C84", VA = "0x2487C84", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x2487E1C", Offset = "0x2487E1C", VA = "0x2487E1C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x2487FB4", Offset = "0x2487FB4", VA = "0x2487FB4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x2488010", Offset = "0x2488010", VA = "0x2488010", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x2488080", Offset = "0x2488080", VA = "0x2488080", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x24883EC", Offset = "0x24883EC", VA = "0x24883EC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x2488418", Offset = "0x2488418", VA = "0x2488418")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x24880E4", Offset = "0x24880E4", VA = "0x24880E4")]
		private void Read()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x2488520", Offset = "0x2488520", VA = "0x2488520")]
		private void Write()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x2488780", Offset = "0x2488780", VA = "0x2488780")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022C")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x20004B1")]
		public enum BendModifier
		{
			[Token(Token = "0x4001460")]
			Animation,
			[Token(Token = "0x4001461")]
			Target,
			[Token(Token = "0x4001462")]
			Parent,
			[Token(Token = "0x4001463")]
			Arm,
			[Token(Token = "0x4001464")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x20004B2")]
		public struct AxisDirection
		{
			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0x11578EC", Offset = "0x11578EC", VA = "0x11578EC")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE9B0", Offset = "0xFBE9B0")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE9C8", Offset = "0xFBE9C8")]
		public float bendModifierWeight;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x1700026F")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x248A090", Offset = "0x248A090", VA = "0x248A090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x2488938", Offset = "0x2488938", VA = "0x2488938")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x2488988", Offset = "0x2488988", VA = "0x2488988")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x2488A9C", Offset = "0x2488A9C", VA = "0x2488A9C", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x248910C", Offset = "0x248910C", VA = "0x248910C", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x2489CE8", Offset = "0x2489CE8", VA = "0x2489CE8", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x2489E30", Offset = "0x2489E30", VA = "0x2489E30")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x2489FF0", Offset = "0x2489FF0", VA = "0x2489FF0")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x2488E18", Offset = "0x2488E18", VA = "0x2488E18")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x2489238", Offset = "0x2489238", VA = "0x2489238")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200022D")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20004B3")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x17000523")]
			public Vector3 forward
			{
				[Token(Token = "0x6001F01")]
				[Address(RVA = "0x248C024", Offset = "0x248C024", VA = "0x248C024")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x248C7C8", Offset = "0x248C7C8", VA = "0x248C7C8")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0x248B374", Offset = "0x248B374", VA = "0x248B374")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0x248B6FC", Offset = "0x248B6FC", VA = "0x248B6FC")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0x248C428", Offset = "0x248C428", VA = "0x248C428")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE9E0", Offset = "0xFBE9E0")]
		public float bodyWeight;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBE9F8", Offset = "0xFBE9F8")]
		public float headWeight;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBEA10", Offset = "0xFBEA10")]
		public float eyesWeight;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBEA28", Offset = "0xFBEA28")]
		public float clampWeight;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBEA40", Offset = "0xFBEA40")]
		public float clampWeightHead;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBEA58", Offset = "0xFBEA58")]
		public float clampWeightEyes;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBEA70", Offset = "0xFBEA70")]
		public int clampSmoothing;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] spineForwards;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3[] headForwards;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3[] eyeForward;

		[Token(Token = "0x17000270")]
		private bool spineIsValid
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x248AA58", Offset = "0x248AA58", VA = "0x248AA58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000271")]
		private bool spineIsEmpty
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x248AC30", Offset = "0x248AC30", VA = "0x248AC30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		private bool headIsValid
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x248AB3C", Offset = "0x248AB3C", VA = "0x248AB3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000273")]
		private bool headIsEmpty
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x248AC54", Offset = "0x248AC54", VA = "0x248AC54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000274")]
		private bool eyesIsValid
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x248AB4C", Offset = "0x248AB4C", VA = "0x248AB4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000275")]
		private bool eyesIsEmpty
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x248ACD0", Offset = "0x248ACD0", VA = "0x248ACD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x248A10C", Offset = "0x248A10C", VA = "0x248A10C")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x248A190", Offset = "0x248A190", VA = "0x248A190")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x248A23C", Offset = "0x248A23C", VA = "0x248A23C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x248A304", Offset = "0x248A304", VA = "0x248A304")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x248A3F0", Offset = "0x248A3F0", VA = "0x248A3F0")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x248A4FC", Offset = "0x248A4FC", VA = "0x248A4FC")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x248A644", Offset = "0x248A644", VA = "0x248A644", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x248A774", Offset = "0x248A774", VA = "0x248A774", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x248A8B8", Offset = "0x248A8B8", VA = "0x248A8B8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x248ACF4", Offset = "0x248ACF4", VA = "0x248ACF4", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x248AF5C", Offset = "0x248AF5C", VA = "0x248AF5C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x248B0FC", Offset = "0x248B0FC", VA = "0x248B0FC")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x248B3A8", Offset = "0x248B3A8", VA = "0x248B3A8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x248B838", Offset = "0x248B838", VA = "0x248B838", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x248B93C", Offset = "0x248B93C", VA = "0x248B93C")]
		private void SolveSpine()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x248BB68", Offset = "0x248BB68", VA = "0x248BB68")]
		private void SolveHead()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x248BDC4", Offset = "0x248BDC4", VA = "0x248BDC4")]
		private void SolveEyes()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x248C0F0", Offset = "0x248C0F0", VA = "0x248C0F0")]
		private Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x248B1C4", Offset = "0x248B1C4", VA = "0x248B1C4")]
		private void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x248C590", Offset = "0x248C590", VA = "0x248C590")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022E")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20004B4")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x248DE1C", Offset = "0x248DE1C", VA = "0x248DE1C")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x248E9C4", Offset = "0x248E9C4", VA = "0x248E9C4")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x24889D0", Offset = "0x24889D0", VA = "0x24889D0")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F05")]
			[Address(RVA = "0x248EA8C", Offset = "0x248EA8C", VA = "0x248EA8C")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBEA88", Offset = "0xFBEA88")]
		public float IKRotationWeight;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x248C7D0", Offset = "0x248C7D0", VA = "0x248C7D0")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x248C9C0", Offset = "0x248C9C0", VA = "0x248C9C0")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x248CB74", Offset = "0x248CB74", VA = "0x248CB74")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x248CB80", Offset = "0x248CB80", VA = "0x248CB80")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x248CC04", Offset = "0x248CC04", VA = "0x248CC04")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x248CC10", Offset = "0x248CC10", VA = "0x248CC10")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x248CC18", Offset = "0x248CC18", VA = "0x248CC18", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x248CD40", Offset = "0x248CD40", VA = "0x248CD40", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x248CE60", Offset = "0x248CE60", VA = "0x248CE60", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x248CEAC", Offset = "0x248CEAC", VA = "0x248CEAC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x248CF0C", Offset = "0x248CF0C", VA = "0x248CF0C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x248D318", Offset = "0x248D318", VA = "0x248D318")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x248D398", Offset = "0x248D398", VA = "0x248D398")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x248D940", Offset = "0x248D940", VA = "0x248D940")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x248DB58", Offset = "0x248DB58", VA = "0x248DB58", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x248DD14", Offset = "0x248DD14", VA = "0x248DD14")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x248DC90", Offset = "0x248DC90", VA = "0x248DC90")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x248DFBC", Offset = "0x248DFBC", VA = "0x248DFBC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x248EA80", Offset = "0x248EA80", VA = "0x248EA80", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x248EA84", Offset = "0x248EA84", VA = "0x248EA84", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x248EA88", Offset = "0x248EA88", VA = "0x248EA88", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x248E6C8", Offset = "0x248E6C8", VA = "0x248E6C8")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x2489EBC", Offset = "0x2489EBC", VA = "0x2489EBC")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022F")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20004B5")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x200057D")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x40017CA")]
				YawPitch,
				[Token(Token = "0x40017CB")]
				FromTo
			}

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2C78", Offset = "0xFC2C78")]
			public Transform target;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2CB0", Offset = "0xFC2CB0")]
			public Transform bendGoal;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2CE8", Offset = "0xFC2CE8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2CE8", Offset = "0xFC2CE8")]
			public float positionWeight;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2D3C", Offset = "0xFC2D3C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2D3C", Offset = "0xFC2D3C")]
			public float rotationWeight;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2D90", Offset = "0xFC2D90")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2DC8", Offset = "0xFC2DC8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2DC8", Offset = "0xFC2DC8")]
			public float shoulderRotationWeight;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2E1C", Offset = "0xFC2E1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2E1C", Offset = "0xFC2E1C")]
			public float shoulderTwistWeight;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2E70", Offset = "0xFC2E70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2E70", Offset = "0xFC2E70")]
			public float bendGoalWeight;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2EC4", Offset = "0xFC2EC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2EC4", Offset = "0xFC2EC4")]
			public float swivelOffset;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2F20", Offset = "0xFC2F20")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2F58", Offset = "0xFC2F58")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2F90", Offset = "0xFC2F90")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2F90", Offset = "0xFC2F90")]
			public float armLengthMlp;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC2FE8", Offset = "0xFC2FE8")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC3060", Offset = "0xFC3060")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC3070", Offset = "0xFC3070")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4001484")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4001485")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x17000524")]
			public Vector3 position
			{
				[Token(Token = "0x6001F06")]
				[Address(RVA = "0x249457C", Offset = "0x249457C", VA = "0x249457C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCAAC", Offset = "0xFCCAAC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001F07")]
				[Address(RVA = "0x2494588", Offset = "0x2494588", VA = "0x2494588")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCABC", Offset = "0xFCCABC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000525")]
			public Quaternion rotation
			{
				[Token(Token = "0x6001F08")]
				[Address(RVA = "0x2494594", Offset = "0x2494594", VA = "0x2494594")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCACC", Offset = "0xFCCACC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001F09")]
				[Address(RVA = "0x24945A0", Offset = "0x24945A0", VA = "0x24945A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCADC", Offset = "0xFCCADC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000526")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x6001F0A")]
				[Address(RVA = "0x24945AC", Offset = "0x24945AC", VA = "0x24945AC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000527")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x6001F0B")]
				[Address(RVA = "0x24945E0", Offset = "0x24945E0", VA = "0x24945E0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000528")]
			private VirtualBone forearm
			{
				[Token(Token = "0x6001F0C")]
				[Address(RVA = "0x2494620", Offset = "0x2494620", VA = "0x2494620")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000529")]
			private VirtualBone hand
			{
				[Token(Token = "0x6001F0D")]
				[Address(RVA = "0x249466C", Offset = "0x249466C", VA = "0x249466C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x24946B8", Offset = "0x24946B8", VA = "0x24946B8", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x2494E88", Offset = "0x2494E88", VA = "0x2494E88", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x249507C", Offset = "0x249507C", VA = "0x249507C", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x2495128", Offset = "0x2495128", VA = "0x2495128")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x2492824", Offset = "0x2492824", VA = "0x2492824")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x2495D74", Offset = "0x2495D74", VA = "0x2495D74", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x2495DE4", Offset = "0x2495DE4", VA = "0x2495DE4", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x2495540", Offset = "0x2495540", VA = "0x2495540")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x2495618", Offset = "0x2495618", VA = "0x2495618")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x2496004", Offset = "0x2496004", VA = "0x2496004")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}

			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x2494448", Offset = "0x2494448", VA = "0x2494448")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B6")]
		public abstract class BodyPart
		{
			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC3080", Offset = "0xFC3080")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC3090", Offset = "0xFC3090")]
			private float <mag>k__BackingField;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x1700052A")]
			public float sqrMag
			{
				[Token(Token = "0x6001F1E")]
				[Address(RVA = "0x24961D0", Offset = "0x24961D0", VA = "0x24961D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCAEC", Offset = "0xFCCAEC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001F1F")]
				[Address(RVA = "0x24961D8", Offset = "0x24961D8", VA = "0x24961D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCAFC", Offset = "0xFCCAFC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700052B")]
			public float mag
			{
				[Token(Token = "0x6001F20")]
				[Address(RVA = "0x24961E0", Offset = "0x24961E0", VA = "0x24961E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB0C", Offset = "0xFCCB0C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001F21")]
				[Address(RVA = "0x24961E8", Offset = "0x24961E8", VA = "0x24961E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB1C", Offset = "0xFCCB1C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001F19")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x6001F1A")]
			public abstract void PreSolve();

			[Token(Token = "0x6001F1B")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x6001F1C")]
			public abstract void ApplyOffsets();

			[Token(Token = "0x6001F1D")]
			public abstract void ResetOffsets();

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x24886AC", Offset = "0x24886AC", VA = "0x24886AC")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x24961F0", Offset = "0x24961F0", VA = "0x24961F0")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x249635C", Offset = "0x249635C", VA = "0x249635C")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x2496408", Offset = "0x2496408", VA = "0x2496408")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x2492634", Offset = "0x2492634", VA = "0x2492634")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x2495BD0", Offset = "0x2495BD0", VA = "0x2495BD0")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x249645C", Offset = "0x249645C", VA = "0x249645C")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x24965A0", Offset = "0x24965A0", VA = "0x24965A0")]
			public void Visualize()
			{
			}

			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x249612C", Offset = "0x249612C", VA = "0x249612C")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B7")]
		public class Footstep
		{
			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC30B0", Offset = "0xFC30B0")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x1700052C")]
			public bool isStepping
			{
				[Token(Token = "0x6001F2B")]
				[Address(RVA = "0x24965C8", Offset = "0x24965C8", VA = "0x24965C8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700052D")]
			public float stepProgress
			{
				[Token(Token = "0x6001F2C")]
				[Address(RVA = "0x24965DC", Offset = "0x24965DC", VA = "0x24965DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB2C", Offset = "0xFCCB2C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001F2D")]
				[Address(RVA = "0x24965E4", Offset = "0x24965E4", VA = "0x24965E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB3C", Offset = "0xFCCB3C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x24965EC", Offset = "0x24965EC", VA = "0x24965EC")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x249677C", Offset = "0x249677C", VA = "0x249677C")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x24967C4", Offset = "0x24967C4", VA = "0x24967C4")]
			public void StepTo(Vector3 p, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x24968C4", Offset = "0x24968C4", VA = "0x24968C4")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6001F32")]
			[Address(RVA = "0x2496A9C", Offset = "0x2496A9C", VA = "0x2496A9C")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x2496C88", Offset = "0x2496C88", VA = "0x2496C88")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B8")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC30C0", Offset = "0xFC30C0")]
			public Transform target;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC30F8", Offset = "0xFC30F8")]
			public Transform bendGoal;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3130", Offset = "0xFC3130")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3130", Offset = "0xFC3130")]
			public float positionWeight;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3184", Offset = "0xFC3184")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3184", Offset = "0xFC3184")]
			public float rotationWeight;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC31D8", Offset = "0xFC31D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC31D8", Offset = "0xFC31D8")]
			public float bendGoalWeight;

			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC322C", Offset = "0xFC322C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC322C", Offset = "0xFC322C")]
			public float swivelOffset;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3288", Offset = "0xFC3288")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3288", Offset = "0xFC3288")]
			public float bendToTargetWeight;

			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC32DC", Offset = "0xFC32DC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC32DC", Offset = "0xFC32DC")]
			public float legLengthMlp;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3334", Offset = "0xFC3334")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC33CC", Offset = "0xFC33CC")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC33DC", Offset = "0xFC33DC")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC33EC", Offset = "0xFC33EC")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC33FC", Offset = "0xFC33FC")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 footPosition;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Quaternion footRotation;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 bendNormal;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x1700052E")]
			public Vector3 position
			{
				[Token(Token = "0x6001F34")]
				[Address(RVA = "0x20767BC", Offset = "0x20767BC", VA = "0x20767BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB4C", Offset = "0xFCCB4C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001F35")]
				[Address(RVA = "0x20767C8", Offset = "0x20767C8", VA = "0x20767C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB5C", Offset = "0xFCCB5C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700052F")]
			public Quaternion rotation
			{
				[Token(Token = "0x6001F36")]
				[Address(RVA = "0x20767D4", Offset = "0x20767D4", VA = "0x20767D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB6C", Offset = "0xFCCB6C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001F37")]
				[Address(RVA = "0x20767E0", Offset = "0x20767E0", VA = "0x20767E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB7C", Offset = "0xFCCB7C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000530")]
			public bool hasToes
			{
				[Token(Token = "0x6001F38")]
				[Address(RVA = "0x20767EC", Offset = "0x20767EC", VA = "0x20767EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB8C", Offset = "0xFCCB8C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001F39")]
				[Address(RVA = "0x20767F4", Offset = "0x20767F4", VA = "0x20767F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCB9C", Offset = "0xFCCB9C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000531")]
			public VirtualBone thigh
			{
				[Token(Token = "0x6001F3A")]
				[Address(RVA = "0x2076800", Offset = "0x2076800", VA = "0x2076800")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000532")]
			private VirtualBone calf
			{
				[Token(Token = "0x6001F3B")]
				[Address(RVA = "0x2076834", Offset = "0x2076834", VA = "0x2076834")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000533")]
			private VirtualBone foot
			{
				[Token(Token = "0x6001F3C")]
				[Address(RVA = "0x207686C", Offset = "0x207686C", VA = "0x207686C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000534")]
			private VirtualBone toes
			{
				[Token(Token = "0x6001F3D")]
				[Address(RVA = "0x20768A4", Offset = "0x20768A4", VA = "0x20768A4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000535")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x6001F3E")]
				[Address(RVA = "0x20768DC", Offset = "0x20768DC", VA = "0x20768DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000536")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x6001F3F")]
				[Address(RVA = "0x207691C", Offset = "0x207691C", VA = "0x207691C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCBAC", Offset = "0xFCCBAC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001F40")]
				[Address(RVA = "0x2076928", Offset = "0x2076928", VA = "0x2076928")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCBBC", Offset = "0xFCCBBC")]
				private set
				{
				}
			}

			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x2076934", Offset = "0x2076934", VA = "0x2076934", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x2076FD8", Offset = "0x2076FD8", VA = "0x2076FD8", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x20777E8", Offset = "0x20777E8", VA = "0x20777E8", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x20776E4", Offset = "0x20776E4", VA = "0x20776E4")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x20774AC", Offset = "0x20774AC", VA = "0x20774AC")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x2077DA0", Offset = "0x2077DA0", VA = "0x2077DA0")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x2078378", Offset = "0x2078378", VA = "0x2078378")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x2078E24", Offset = "0x2078E24", VA = "0x2078E24", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x2079040", Offset = "0x2079040", VA = "0x2079040", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x20790F0", Offset = "0x20790F0", VA = "0x20790F0")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B9")]
		public class Locomotion
		{
			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC340C", Offset = "0xFC340C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC340C", Offset = "0xFC340C")]
			public float weight;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3460", Offset = "0xFC3460")]
			public float footDistance;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3498", Offset = "0xFC3498")]
			public float stepThreshold;

			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC34D0", Offset = "0xFC34D0")]
			public float angleThreshold;

			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3508", Offset = "0xFC3508")]
			public float comAngleMlp;

			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3540", Offset = "0xFC3540")]
			public float maxVelocity;

			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3578", Offset = "0xFC3578")]
			public float velocityFactor;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC35B0", Offset = "0xFC35B0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC35B0", Offset = "0xFC35B0")]
			public float maxLegStretch;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3608", Offset = "0xFC3608")]
			public float rootSpeed;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3640", Offset = "0xFC3640")]
			public float stepSpeed;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3678", Offset = "0xFC3678")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC36B0", Offset = "0xFC36B0")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC36E8", Offset = "0xFC36E8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC36E8", Offset = "0xFC36E8")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3740", Offset = "0xFC3740")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3778", Offset = "0xFC3778")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC37B0", Offset = "0xFC37B0")]
			public Vector3 offset;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3828", Offset = "0xFC3828")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3860", Offset = "0xFC3860")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC3898", Offset = "0xFC3898")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Footstep[] footsteps;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3 lastComPosition;

			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 comVelocity;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private int leftFootIndex;

			[Token(Token = "0x40014D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private int rightFootIndex;

			[Token(Token = "0x17000537")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x6001F4B")]
				[Address(RVA = "0x20791F4", Offset = "0x20791F4", VA = "0x20791F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCBCC", Offset = "0xFCCBCC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001F4C")]
				[Address(RVA = "0x2079200", Offset = "0x2079200", VA = "0x2079200")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCBDC", Offset = "0xFCCBDC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000538")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x6001F52")]
				[Address(RVA = "0x207B6F0", Offset = "0x207B6F0", VA = "0x207B6F0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000539")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x6001F53")]
				[Address(RVA = "0x207B730", Offset = "0x207B730", VA = "0x207B730")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700053A")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x6001F54")]
				[Address(RVA = "0x207B774", Offset = "0x207B774", VA = "0x207B774")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x1700053B")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x6001F55")]
				[Address(RVA = "0x207B7B4", Offset = "0x207B7B4", VA = "0x207B7B4")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x207920C", Offset = "0x207920C", VA = "0x207920C")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes)
			{
			}

			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x207952C", Offset = "0x207952C", VA = "0x207952C")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x20797A8", Offset = "0x20797A8", VA = "0x20797A8")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x2079B80", Offset = "0x2079B80", VA = "0x2079B80")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x2079D30", Offset = "0x2079D30", VA = "0x2079D30")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset)
			{
			}

			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x207B2DC", Offset = "0x207B2DC", VA = "0x207B2DC")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x207B480", Offset = "0x207B480", VA = "0x207B480")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x207B524", Offset = "0x207B524", VA = "0x207B524")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x207B7F8", Offset = "0x207B7F8", VA = "0x207B7F8")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BA")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x40014D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC38A8", Offset = "0xFC38A8")]
			public Transform headTarget;

			[Token(Token = "0x40014D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC38E0", Offset = "0xFC38E0")]
			public Transform pelvisTarget;

			[Token(Token = "0x40014D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3918", Offset = "0xFC3918")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3918", Offset = "0xFC3918")]
			public float positionWeight;

			[Token(Token = "0x40014D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC396C", Offset = "0xFC396C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC396C", Offset = "0xFC396C")]
			public float rotationWeight;

			[Token(Token = "0x40014D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC39C0", Offset = "0xFC39C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC39C0", Offset = "0xFC39C0")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40014D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3A14", Offset = "0xFC3A14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3A14", Offset = "0xFC3A14")]
			public float pelvisRotationWeight;

			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3A68", Offset = "0xFC3A68")]
			public Transform chestGoal;

			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3AA0", Offset = "0xFC3AA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3AA0", Offset = "0xFC3AA0")]
			public float chestGoalWeight;

			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3AF4", Offset = "0xFC3AF4")]
			public float minHeadHeight;

			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3B2C", Offset = "0xFC3B2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3B2C", Offset = "0xFC3B2C")]
			public float bodyPosStiffness;

			[Token(Token = "0x40014DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3B80", Offset = "0xFC3B80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3B80", Offset = "0xFC3B80")]
			public float bodyRotStiffness;

			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3BD4", Offset = "0xFC3BD4")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFC3BD4", Offset = "0xFC3BD4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3BD4", Offset = "0xFC3BD4")]
			public float neckStiffness;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3C4C", Offset = "0xFC3C4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3C4C", Offset = "0xFC3C4C")]
			public float rotateChestByHands;

			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3CA0", Offset = "0xFC3CA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3CA0", Offset = "0xFC3CA0")]
			public float chestClampWeight;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3CF4", Offset = "0xFC3CF4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3CF4", Offset = "0xFC3CF4")]
			public float headClampWeight;

			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3D48", Offset = "0xFC3D48")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3D80", Offset = "0xFC3D80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3D80", Offset = "0xFC3D80")]
			public float maintainPelvisPosition;

			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3DD4", Offset = "0xFC3DD4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC3DD4", Offset = "0xFC3DD4")]
			public float maxRootAngle;

			[NonSerialized]
			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40014EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40014EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x40014EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x40014F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC3F0C", Offset = "0xFC3F0C")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x40014F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			private Quaternion headRotation;

			[Token(Token = "0x40014F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private Quaternion anchorRelativeToHead;

			[Token(Token = "0x40014F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x40014F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x40014F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x40014F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
			private int pelvisIndex;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int spineIndex;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int chestIndex;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int neckIndex;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int headIndex;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private float length;

			[Token(Token = "0x4001501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private bool hasChest;

			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
			private bool hasNeck;

			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20E")]
			private bool hasLegs;

			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private float headHeight;

			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float sizeMlp;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private Vector3 chestForward;

			[Token(Token = "0x1700053C")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x6001F5A")]
				[Address(RVA = "0x207B25C", Offset = "0x207B25C", VA = "0x207B25C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053D")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x6001F5B")]
				[Address(RVA = "0x207B900", Offset = "0x207B900", VA = "0x207B900")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053E")]
			public VirtualBone chest
			{
				[Token(Token = "0x6001F5C")]
				[Address(RVA = "0x207B940", Offset = "0x207B940", VA = "0x207B940")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053F")]
			private VirtualBone neck
			{
				[Token(Token = "0x6001F5D")]
				[Address(RVA = "0x207B994", Offset = "0x207B994", VA = "0x207B994")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000540")]
			public VirtualBone head
			{
				[Token(Token = "0x6001F5E")]
				[Address(RVA = "0x207B29C", Offset = "0x207B29C", VA = "0x207B29C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000541")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x6001F5F")]
				[Address(RVA = "0x207B9D4", Offset = "0x207B9D4", VA = "0x207B9D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCBEC", Offset = "0xFCCBEC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001F60")]
				[Address(RVA = "0x207B9E8", Offset = "0x207B9E8", VA = "0x207B9E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCBFC", Offset = "0xFCCBFC")]
				private set
				{
				}
			}

			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x207B9FC", Offset = "0x207B9FC", VA = "0x207B9FC", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x207C4F8", Offset = "0x207C4F8", VA = "0x207C4F8", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x207C708", Offset = "0x207C708", VA = "0x207C708", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x207CCC0", Offset = "0x207CCC0", VA = "0x207CCC0")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x6001F65")]
			[Address(RVA = "0x207D274", Offset = "0x207D274", VA = "0x207D274")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms)
			{
			}

			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x207DBDC", Offset = "0x207DBDC", VA = "0x207DBDC")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp)
			{
			}

			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x207E3F8", Offset = "0x207E3F8", VA = "0x207E3F8")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x207EBC8", Offset = "0x207EBC8", VA = "0x207EBC8", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x207EDA4", Offset = "0x207EDA4", VA = "0x207EDA4", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x207CEF0", Offset = "0x207CEF0", VA = "0x207CEF0")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x207E03C", Offset = "0x207E03C", VA = "0x207E03C")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x207D7D0", Offset = "0x207D7D0", VA = "0x207D7D0")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation)
			{
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x207EE9C", Offset = "0x207EE9C", VA = "0x207EE9C")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x207E1AC", Offset = "0x207E1AC", VA = "0x207E1AC")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x207DD88", Offset = "0x207DD88", VA = "0x207DD88")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x207F3AC", Offset = "0x207F3AC", VA = "0x207F3AC")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BB")]
		public enum PositionOffset
		{
			[Token(Token = "0x4001508")]
			Pelvis,
			[Token(Token = "0x4001509")]
			Chest,
			[Token(Token = "0x400150A")]
			Head,
			[Token(Token = "0x400150B")]
			LeftHand,
			[Token(Token = "0x400150C")]
			RightHand,
			[Token(Token = "0x400150D")]
			LeftFoot,
			[Token(Token = "0x400150E")]
			RightFoot,
			[Token(Token = "0x400150F")]
			LeftHeel,
			[Token(Token = "0x4001510")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x20004BC")]
		public enum RotationOffset
		{
			[Token(Token = "0x4001512")]
			Pelvis,
			[Token(Token = "0x4001513")]
			Chest,
			[Token(Token = "0x4001514")]
			Head
		}

		[Serializable]
		[Token(Token = "0x20004BD")]
		public class VirtualBone
		{
			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x6001F71")]
			[Address(RVA = "0x2076F3C", Offset = "0x2076F3C", VA = "0x2076F3C")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F72")]
			[Address(RVA = "0x2076FB8", Offset = "0x2076FB8", VA = "0x2076FB8")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x207F57C", Offset = "0x207F57C", VA = "0x207F57C")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x207F80C", Offset = "0x207F80C", VA = "0x207F80C")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x207F1C4", Offset = "0x207F1C4", VA = "0x207F1C4")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x207FAF8", Offset = "0x207FAF8", VA = "0x207FAF8")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x207FD30", Offset = "0x207FD30", VA = "0x207FD30")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x207FF64", Offset = "0x207FF64", VA = "0x207FF64")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x2078878", Offset = "0x2078878", VA = "0x2078878")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x208001C", Offset = "0x208001C", VA = "0x208001C")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x207E780", Offset = "0x207E780", VA = "0x207E780")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x2080234", Offset = "0x2080234", VA = "0x2080234")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x208033C", Offset = "0x208033C", VA = "0x208033C")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEAA0", Offset = "0xFBEAA0")]
		public bool plantFeet;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBEAD8", Offset = "0xFBEAD8")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEAE8", Offset = "0xFBEAE8")]
		public Spine spine;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEB20", Offset = "0xFBEB20")]
		public Arm leftArm;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEB58", Offset = "0xFBEB58")]
		public Arm rightArm;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEB90", Offset = "0xFBEB90")]
		public Leg leftLeg;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEBC8", Offset = "0xFBEBC8")]
		public Leg rightLeg;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEC00", Offset = "0xFBEC00")]
		public Locomotion locomotion;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Leg[] legs;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Arm[] arms;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector3 headPosition;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 lastOffset;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 debugPos1;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 debugPos2;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 debugPos3;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 debugPos4;

		[Token(Token = "0x17000276")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0x24941CC", Offset = "0x24941CC", VA = "0x24941CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E38", Offset = "0xFC9E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x24941D4", Offset = "0x24941D4", VA = "0x24941D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E48", Offset = "0xFC9E48")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x248EA94", Offset = "0x248EA94", VA = "0x248EA94")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x248EF28", Offset = "0x248EF28", VA = "0x248EF28")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x248EDB0", Offset = "0x248EDB0", VA = "0x248EDB0")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x248F914", Offset = "0x248F914", VA = "0x248F914")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x248FBF0", Offset = "0x248FBF0", VA = "0x248FBF0")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x248FC94", Offset = "0x248FC94", VA = "0x248FC94")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x248FE28", Offset = "0x248FE28", VA = "0x248FE28")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x248FFB4", Offset = "0x248FFB4", VA = "0x248FFB4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x2490818", Offset = "0x2490818", VA = "0x2490818", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x249098C", Offset = "0x249098C", VA = "0x249098C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x2490B30", Offset = "0x2490B30", VA = "0x2490B30", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x2490BA4", Offset = "0x2490BA4", VA = "0x2490BA4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x2490C18", Offset = "0x2490C18", VA = "0x2490C18", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x2490E38", Offset = "0x2490E38", VA = "0x2490E38")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x248F1C8", Offset = "0x248F1C8", VA = "0x248F1C8")]
		private Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x248F3A0", Offset = "0x248F3A0", VA = "0x248F3A0")]
		private Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x248F7F0", Offset = "0x248F7F0", VA = "0x248F7F0")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x249012C", Offset = "0x249012C", VA = "0x249012C")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x2491118", Offset = "0x2491118", VA = "0x2491118", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x2491160", Offset = "0x2491160", VA = "0x2491160", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x249234C", Offset = "0x249234C", VA = "0x249234C")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x2490294", Offset = "0x2490294", VA = "0x2490294")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x24911CC", Offset = "0x24911CC", VA = "0x24911CC")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x24925A8", Offset = "0x24925A8", VA = "0x24925A8")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x24925F0", Offset = "0x24925F0", VA = "0x24925F0")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x24921FC", Offset = "0x24921FC", VA = "0x24921FC")]
		private void Write()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x2493BCC", Offset = "0x2493BCC", VA = "0x2493BCC")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x24941DC", Offset = "0x24941DC", VA = "0x24941DC")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEC38", Offset = "0xFBEC38")]
		public Transform parent;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEC70", Offset = "0xFBEC70")]
		public Transform child;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBECA8", Offset = "0xFBECA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBECA8", Offset = "0xFBECA8")]
		public float weight;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBECFC", Offset = "0xFBECFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBECFC", Offset = "0xFBECFC")]
		public float parentChildCrossfade;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBED50", Offset = "0xFBED50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBED50", Offset = "0xFBED50")]
		public float twistAngleOffset;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 twistAxis;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 axis;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1B64CB0", Offset = "0x1B64CB0", VA = "0x1B64CB0")]
		public void Relax()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x1B65090", Offset = "0x1B65090", VA = "0x1B65090")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1B6553C", Offset = "0x1B6553C", VA = "0x1B6553C")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x1B655C4", Offset = "0x1B655C4", VA = "0x1B655C4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1B6564C", Offset = "0x1B6564C", VA = "0x1B6564C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x1B65774", Offset = "0x1B65774", VA = "0x1B65774")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000231")]
	public class InteractionEffector
	{
		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBEDAC", Offset = "0xFBEDAC")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBEDBC", Offset = "0xFBEDBC")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBEDCC", Offset = "0xFBEDCC")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float resetTimer;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool positionWeightUsed;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool rotationWeightUsed;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool pullUsed;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		private bool reachUsed;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool pushUsed;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool pushParentUsed;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pickedUp;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool defaults;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform target;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<bool> triggered;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool started;

		[Token(Token = "0x17000277")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x2080C60", Offset = "0x2080C60", VA = "0x2080C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E58", Offset = "0xFC9E58")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x2080C68", Offset = "0x2080C68", VA = "0x2080C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E68", Offset = "0xFC9E68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public bool isPaused
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x2080C70", Offset = "0x2080C70", VA = "0x2080C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E78", Offset = "0xFC9E78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x2080C78", Offset = "0x2080C78", VA = "0x2080C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E88", Offset = "0xFC9E88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x2080C84", Offset = "0x2080C84", VA = "0x2080C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9E98", Offset = "0xFC9E98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x2080C8C", Offset = "0x2080C8C", VA = "0x2080C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC9EA8", Offset = "0xFC9EA8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public bool inInteraction
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x2080C94", Offset = "0x2080C94", VA = "0x2080C94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027B")]
		public float progress
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x208364C", Offset = "0x208364C", VA = "0x208364C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x2080D04", Offset = "0x2080D04", VA = "0x2080D04")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x2080D94", Offset = "0x2080D94", VA = "0x2080D94")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x2080E64", Offset = "0x2080E64", VA = "0x2080E64")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x2080FA4", Offset = "0x2080FA4", VA = "0x2080FA4")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x20813A8", Offset = "0x20813A8", VA = "0x20813A8")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x2081768", Offset = "0x2081768", VA = "0x2081768")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x20817BC", Offset = "0x20817BC", VA = "0x20817BC")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x2082358", Offset = "0x2082358", VA = "0x2082358")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x2082E80", Offset = "0x2082E80", VA = "0x2082E80")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x20830A8", Offset = "0x20830A8", VA = "0x20830A8")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x20834DC", Offset = "0x20834DC", VA = "0x20834DC")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x2083B34", Offset = "0x2083B34", VA = "0x2083B34")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000232")]
	public class InteractionLookAt
	{
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEDDC", Offset = "0xFBEDDC")]
		public LookAtIK ik;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEE14", Offset = "0xFBEE14")]
		public float lerpSpeed;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEE4C", Offset = "0xFBEE4C")]
		public float weightSpeed;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x2083D98", Offset = "0x2083D98", VA = "0x2083D98")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x2083F1C", Offset = "0x2083F1C", VA = "0x2083F1C")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x2083FC4", Offset = "0x2083FC4", VA = "0x2083FC4")]
		public void Update()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x2084218", Offset = "0x2084218", VA = "0x2084218")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x2084310", Offset = "0x2084310", VA = "0x2084310")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x20843DC", Offset = "0x20843DC", VA = "0x20843DC")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2960", Offset = "0xFB2960")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2960", Offset = "0xFB2960")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004BE")]
		public class InteractionEvent
		{
			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3F1C", Offset = "0xFC3F1C")]
			public float time;

			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3F54", Offset = "0xFC3F54")]
			public bool pause;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3F8C", Offset = "0xFC3F8C")]
			public bool pickUp;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3FC4", Offset = "0xFC3FC4")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC3FFC", Offset = "0xFC3FFC")]
			public Message[] messages;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4034", Offset = "0xFC4034")]
			public UnityEvent unityEvent;

			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x2083688", Offset = "0x2083688", VA = "0x2083688")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x2085690", Offset = "0x2085690", VA = "0x2085690")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BF")]
		public class Message
		{
			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC406C", Offset = "0xFC406C")]
			public string function;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC40A4", Offset = "0xFC40A4")]
			public GameObject recipient;

			[Token(Token = "0x4001524")]
			private const string empty = "";

			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x20855A0", Offset = "0x20855A0", VA = "0x20855A0")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x2085698", Offset = "0x2085698", VA = "0x2085698")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C0")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC40DC", Offset = "0xFC40DC")]
			public Animator animator;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4114", Offset = "0xFC4114")]
			public Animation animation;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC414C", Offset = "0xFC414C")]
			public string animationState;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4184", Offset = "0xFC4184")]
			public float crossfadeTime;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC41BC", Offset = "0xFC41BC")]
			public int layer;

			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC41F4", Offset = "0xFC41F4")]
			public bool resetNormalizedTime;

			[Token(Token = "0x400152B")]
			private const string empty = "";

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x2085300", Offset = "0x2085300", VA = "0x2085300")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x20853F4", Offset = "0x20853F4", VA = "0x20853F4")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x20854AC", Offset = "0x20854AC", VA = "0x20854AC")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x208558C", Offset = "0x208558C", VA = "0x208558C")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C1")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x200057E")]
			public enum Type
			{
				[Token(Token = "0x40017CD")]
				PositionWeight,
				[Token(Token = "0x40017CE")]
				RotationWeight,
				[Token(Token = "0x40017CF")]
				PositionOffsetX,
				[Token(Token = "0x40017D0")]
				PositionOffsetY,
				[Token(Token = "0x40017D1")]
				PositionOffsetZ,
				[Token(Token = "0x40017D2")]
				Pull,
				[Token(Token = "0x40017D3")]
				Reach,
				[Token(Token = "0x40017D4")]
				RotateBoneWeight,
				[Token(Token = "0x40017D5")]
				Push,
				[Token(Token = "0x40017D6")]
				PushParent,
				[Token(Token = "0x40017D7")]
				PoserWeight
			}

			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC422C", Offset = "0xFC422C")]
			public Type type;

			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4264", Offset = "0xFC4264")]
			public AnimationCurve curve;

			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x2084AF0", Offset = "0x2084AF0", VA = "0x2084AF0")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x20856B0", Offset = "0x20856B0", VA = "0x20856B0")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C2")]
		public class Multiplier
		{
			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC429C", Offset = "0xFC429C")]
			public WeightCurve.Type curve;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC42D4", Offset = "0xFC42D4")]
			public float multiplier;

			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC430C", Offset = "0xFC430C")]
			public WeightCurve.Type result;

			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x2085154", Offset = "0x2085154", VA = "0x2085154")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x20856A0", Offset = "0x20856A0", VA = "0x20856A0")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEE94", Offset = "0xFBEE94")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEECC", Offset = "0xFBEECC")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEF04", Offset = "0xFBEF04")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBEF3C", Offset = "0xFBEF3C")]
		private float <length>k__BackingField;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBEF4C", Offset = "0xFBEF4C")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x1700027C")]
		public float length
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x20845B8", Offset = "0x20845B8", VA = "0x20845B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCA008", Offset = "0xFCA008")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x20845C0", Offset = "0x20845C0", VA = "0x20845C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCA018", Offset = "0xFCA018")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x20845C8", Offset = "0x20845C8", VA = "0x20845C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCA028", Offset = "0xFCA028")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x20845D0", Offset = "0x20845D0", VA = "0x20845D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCA038", Offset = "0xFCA038")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x20847F4", Offset = "0x20847F4", VA = "0x20847F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		public Transform targetsRoot
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x2083A08", Offset = "0x2083A08", VA = "0x2083A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x20843F0", Offset = "0x20843F0", VA = "0x20843F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9EB8", Offset = "0xFC9EB8")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x208443C", Offset = "0x208443C", VA = "0x208443C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9EF0", Offset = "0xFC9EF0")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x2084488", Offset = "0x2084488", VA = "0x2084488")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9F28", Offset = "0xFC9F28")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x20844D4", Offset = "0x20844D4", VA = "0x20844D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9F60", Offset = "0xFC9F60")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x2084520", Offset = "0x2084520", VA = "0x2084520")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9F98", Offset = "0xFC9F98")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x208456C", Offset = "0x208456C", VA = "0x208456C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFC9FD0", Offset = "0xFC9FD0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x20845D8", Offset = "0x20845D8", VA = "0x20845D8")]
		public void Initiate()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x2084884", Offset = "0x2084884", VA = "0x2084884")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x2081D78", Offset = "0x2081D78", VA = "0x2081D78")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x2084A08", Offset = "0x2084A08", VA = "0x2084A08")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x2081C2C", Offset = "0x2081C2C", VA = "0x2081C2C")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x2081D70", Offset = "0x2081D70", VA = "0x2081D70")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x2082A64", Offset = "0x2082A64", VA = "0x2082A64")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x20832B4", Offset = "0x20832B4", VA = "0x20832B4")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x2085190", Offset = "0x2085190", VA = "0x2085190")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x2084B0C", Offset = "0x2084B0C", VA = "0x2084B0C")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x2084A10", Offset = "0x2084A10", VA = "0x2084A10")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x20850EC", Offset = "0x20850EC", VA = "0x20850EC")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x2085194", Offset = "0x2085194", VA = "0x2085194")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x20851FC", Offset = "0x20851FC", VA = "0x20851FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA048", Offset = "0xFCA048")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x2085248", Offset = "0x2085248", VA = "0x2085248")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA080", Offset = "0xFCA080")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x2085294", Offset = "0x2085294", VA = "0x2085294")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB29C0", Offset = "0xFB29C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB29C0", Offset = "0xFB29C0")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x20004C3")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x20004C4")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEF5C", Offset = "0xFBEF5C")]
		public string targetTag;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEF94", Offset = "0xFBEF94")]
		public float fadeInTime;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBEFCC", Offset = "0xFBEFCC")]
		public float speed;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF004", Offset = "0xFBF004")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBF03C", Offset = "0xFBF03C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF03C", Offset = "0xFBF03C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFBF03C", Offset = "0xFBF03C")]
		public Collider characterCollider;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF0C0", Offset = "0xFBF0C0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xFBF0C0", Offset = "0xFBF0C0")]
		public Transform FPSCamera;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF120", Offset = "0xFBF120")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF158", Offset = "0xFBF158")]
		public float camRaycastDistance;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFBF190", Offset = "0xFBF190")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xFBF1A0", Offset = "0xFBF1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF1A0", Offset = "0xFBF1A0")]
		[SerializeField]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF200", Offset = "0xFBF200")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool initiated;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x17000280")]
		public bool inInteraction
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x2085880", Offset = "0x2085880", VA = "0x2085880")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000281")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x600104D")]
			[Address(RVA = "0x20874D8", Offset = "0x20874D8", VA = "0x20874D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x20874E0", Offset = "0x20874E0", VA = "0x20874E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x20874E8", Offset = "0x20874E8", VA = "0x20874E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCA208", Offset = "0xFCA208")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x20874F0", Offset = "0x20874F0", VA = "0x20874F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCA218", Offset = "0xFCA218")]
			private set
			{
			}
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x20856B8", Offset = "0x20856B8", VA = "0x20856B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA0B8", Offset = "0xFCA0B8")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x2085704", Offset = "0x2085704", VA = "0x2085704")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA0F0", Offset = "0xFCA0F0")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x2085750", Offset = "0x2085750", VA = "0x2085750")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA128", Offset = "0xFCA128")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x208579C", Offset = "0x208579C", VA = "0x208579C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA160", Offset = "0xFCA160")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x20857E8", Offset = "0x20857E8", VA = "0x20857E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA198", Offset = "0xFCA198")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x2085834", Offset = "0x2085834", VA = "0x2085834")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA1D0", Offset = "0xFCA1D0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x2085A10", Offset = "0x2085A10", VA = "0x2085A10")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x2085ADC", Offset = "0x2085ADC", VA = "0x2085ADC")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x2085BA8", Offset = "0x2085BA8", VA = "0x2085BA8")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x2085C54", Offset = "0x2085C54", VA = "0x2085C54")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x2085D4C", Offset = "0x2085D4C", VA = "0x2085D4C")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x2085E68", Offset = "0x2085E68", VA = "0x2085E68")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x2085EF8", Offset = "0x2085EF8", VA = "0x2085EF8")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x2085F88", Offset = "0x2085F88", VA = "0x2085F88")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x2086018", Offset = "0x2086018", VA = "0x2086018")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x208608C", Offset = "0x208608C", VA = "0x208608C")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x2086100", Offset = "0x2086100", VA = "0x2086100")]
		public void StopAll()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x2086168", Offset = "0x2086168", VA = "0x2086168")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x20861F4", Offset = "0x20861F4", VA = "0x20861F4")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x20862A8", Offset = "0x20862A8", VA = "0x20862A8")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x208638C", Offset = "0x208638C", VA = "0x208638C")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x2086630", Offset = "0x2086630", VA = "0x2086630")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x2086820", Offset = "0x2086820", VA = "0x2086820")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x2086AA4", Offset = "0x2086AA4", VA = "0x2086AA4")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x2086D98", Offset = "0x2086D98", VA = "0x2086D98")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x2086DDC", Offset = "0x2086DDC", VA = "0x2086DDC")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x2086E54", Offset = "0x2086E54", VA = "0x2086E54")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x2086F8C", Offset = "0x2086F8C", VA = "0x2086F8C")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x2087104", Offset = "0x2087104", VA = "0x2087104")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x20873AC", Offset = "0x20873AC", VA = "0x20873AC")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x2086BA4", Offset = "0x2086BA4", VA = "0x2086BA4")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x20874F8", Offset = "0x20874F8", VA = "0x20874F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x2087CAC", Offset = "0x2087CAC", VA = "0x2087CAC")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x2087CCC", Offset = "0x2087CCC", VA = "0x2087CCC")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x2087CE8", Offset = "0x2087CE8", VA = "0x2087CE8")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x2087D04", Offset = "0x2087D04", VA = "0x2087D04")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x2087D64", Offset = "0x2087D64", VA = "0x2087D64")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x2087E80", Offset = "0x2087E80", VA = "0x2087E80")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x2087F7C", Offset = "0x2087F7C", VA = "0x2087F7C")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x20882DC", Offset = "0x20882DC", VA = "0x20882DC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x20883F4", Offset = "0x20883F4", VA = "0x20883F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x2088640", Offset = "0x2088640", VA = "0x2088640")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x2087A0C", Offset = "0x2087A0C", VA = "0x2087A0C")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x2088780", Offset = "0x2088780", VA = "0x2088780")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x20888AC", Offset = "0x20888AC", VA = "0x20888AC")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x2088954", Offset = "0x2088954", VA = "0x2088954")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x2088A3C", Offset = "0x2088A3C", VA = "0x2088A3C")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x2088A54", Offset = "0x2088A54", VA = "0x2088A54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x208592C", Offset = "0x208592C", VA = "0x208592C")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x208652C", Offset = "0x208652C", VA = "0x208652C")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x2088E18", Offset = "0x2088E18", VA = "0x2088E18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA228", Offset = "0xFCA228")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x2088E64", Offset = "0x2088E64", VA = "0x2088E64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA260", Offset = "0xFCA260")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x2088EB0", Offset = "0x2088EB0", VA = "0x2088EB0")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2A20", Offset = "0xFB2A20")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2A20", Offset = "0xFB2A20")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004C5")]
		public class Multiplier
		{
			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4344", Offset = "0xFC4344")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x4001532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC437C", Offset = "0xFC437C")]
			public float multiplier;

			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x20896FC", Offset = "0x20896FC", VA = "0x20896FC")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF238", Offset = "0xFBF238")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF270", Offset = "0xFBF270")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF2A8", Offset = "0xFBF2A8")]
		public float interactionSpeedMlp;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF2E0", Offset = "0xFBF2E0")]
		public Transform pivot;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF318", Offset = "0xFBF318")]
		public Vector3 twistAxis;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF350", Offset = "0xFBF350")]
		public float twistWeight;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF388", Offset = "0xFBF388")]
		public float swingWeight;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF3C0", Offset = "0xFBF3C0")]
		public bool rotateOnce;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform lastPivot;

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x2089410", Offset = "0x2089410", VA = "0x2089410")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA298", Offset = "0xFCA298")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x208945C", Offset = "0x208945C", VA = "0x208945C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA2D0", Offset = "0xFCA2D0")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x20894A8", Offset = "0x20894A8", VA = "0x20894A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA308", Offset = "0xFCA308")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x20894F4", Offset = "0x20894F4", VA = "0x20894F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA340", Offset = "0xFCA340")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x2089540", Offset = "0x2089540", VA = "0x2089540")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA378", Offset = "0xFCA378")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x208958C", Offset = "0x208958C", VA = "0x208958C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA3B0", Offset = "0xFCA3B0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x2084A80", Offset = "0x2084A80", VA = "0x2084A80")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x2083A98", Offset = "0x2083A98", VA = "0x2083A98")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x2081E2C", Offset = "0x2081E2C", VA = "0x2081E2C")]
		public void RotateTo(Vector3 position)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x20895D8", Offset = "0x20895D8", VA = "0x20895D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA3E8", Offset = "0xFCA3E8")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x2089624", Offset = "0x2089624", VA = "0x2089624")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA420", Offset = "0xFCA420")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x2089670", Offset = "0x2089670", VA = "0x2089670")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2A80", Offset = "0xFB2A80")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2A80", Offset = "0xFB2A80")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004C6")]
		public class CharacterPosition
		{
			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC43B4", Offset = "0xFC43B4")]
			public bool use;

			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC43EC", Offset = "0xFC43EC")]
			public Vector2 offset;

			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4424", Offset = "0xFC4424")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC4424", Offset = "0xFC4424")]
			public float angleOffset;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4480", Offset = "0xFC4480")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC4480", Offset = "0xFC4480")]
			public float maxAngle;

			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC44D8", Offset = "0xFC44D8")]
			public float radius;

			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4510", Offset = "0xFC4510")]
			public bool orbit;

			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4548", Offset = "0xFC4548")]
			public bool fixYAxis;

			[Token(Token = "0x17000542")]
			public Vector3 offset3D
			{
				[Token(Token = "0x6001F93")]
				[Address(RVA = "0x2089E90", Offset = "0x2089E90", VA = "0x2089E90")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000543")]
			public Vector3 direction3D
			{
				[Token(Token = "0x6001F94")]
				[Address(RVA = "0x2089ECC", Offset = "0x2089ECC", VA = "0x2089ECC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x2089FC4", Offset = "0x2089FC4", VA = "0x2089FC4")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x208A640", Offset = "0x208A640", VA = "0x208A640")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C7")]
		public class CameraPosition
		{
			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4580", Offset = "0xFC4580")]
			public Collider lookAtTarget;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC45B8", Offset = "0xFC45B8")]
			public Vector3 direction;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC45F0", Offset = "0xFC45F0")]
			public float maxDistance;

			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4628", Offset = "0xFC4628")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC4628", Offset = "0xFC4628")]
			public float maxAngle;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4680", Offset = "0xFC4680")]
			public bool fixYAxis;

			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x208997C", Offset = "0x208997C", VA = "0x208997C")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x2089B24", Offset = "0x2089B24", VA = "0x2089B24")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x2089E04", Offset = "0x2089E04", VA = "0x2089E04")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C8")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x200057F")]
			public class Interaction
			{
				[Token(Token = "0x40017D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5798", Offset = "0xFC5798")]
				public InteractionObject interactionObject;

				[Token(Token = "0x40017D9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC57D0", Offset = "0xFC57D0")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6002185")]
				[Address(RVA = "0x208A664", Offset = "0x208A664", VA = "0x208A664")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			[SerializeField]
			public bool show;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4728", Offset = "0xFC4728")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4760", Offset = "0xFC4760")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4798", Offset = "0xFC4798")]
			public Interaction[] interactions;

			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x20897EC", Offset = "0x20897EC", VA = "0x20897EC")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x208A654", Offset = "0x208A654", VA = "0x208A654")]
			public Range()
			{
			}
		}

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF3F8", Offset = "0xFBF3F8")]
		public Range[] ranges;

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x2089704", Offset = "0x2089704", VA = "0x2089704")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA458", Offset = "0xFCA458")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x2089750", Offset = "0x2089750", VA = "0x2089750")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA490", Offset = "0xFCA490")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x208979C", Offset = "0x208979C", VA = "0x208979C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA4C8", Offset = "0xFCA4C8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x20897E8", Offset = "0x20897E8", VA = "0x20897E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x2088120", Offset = "0x2088120", VA = "0x2088120")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x2089910", Offset = "0x2089910", VA = "0x2089910")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x20004C9")]
		public class Map
		{
			[Token(Token = "0x4001544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x4001545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4001546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x4001547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x217C490", Offset = "0x217C490", VA = "0x217C490")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0x217C8B0", Offset = "0x217C8B0", VA = "0x217C8B0")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x217C864", Offset = "0x217C864", VA = "0x217C864")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x217C65C", Offset = "0x217C65C", VA = "0x217C65C")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x217C19C", Offset = "0x217C19C", VA = "0x217C19C", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA500", Offset = "0xFCA500")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x217C550", Offset = "0x217C550", VA = "0x217C550", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x217C554", Offset = "0x217C554", VA = "0x217C554", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x217C7FC", Offset = "0x217C7FC", VA = "0x217C7FC", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x217C4E8", Offset = "0x217C4E8", VA = "0x217C4E8")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x217C3F0", Offset = "0x217C3F0", VA = "0x217C3F0")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x217C900", Offset = "0x217C900", VA = "0x217C900")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x2186A50", Offset = "0x2186A50", VA = "0x2186A50", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x2186B18", Offset = "0x2186B18", VA = "0x2186B18", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x2186CFC", Offset = "0x2186CFC", VA = "0x2186CFC", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x2186DF8", Offset = "0x2186DF8", VA = "0x2186DF8", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x2186B80", Offset = "0x2186B80", VA = "0x2186B80")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x21871A8", Offset = "0x21871A8", VA = "0x21871A8")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBF430", Offset = "0xFBF430")]
		public float weight;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBF448", Offset = "0xFBF448")]
		public float localRotationWeight;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBF460", Offset = "0xFBF460")]
		public float localPositionWeight;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x6001086")]
		public abstract void AutoMapping();

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x208D314", Offset = "0x208D314", VA = "0x208D314")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x6001088")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x6001089")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x600108A")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x208D320", Offset = "0x208D320", VA = "0x208D320", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x208D374", Offset = "0x208D374", VA = "0x208D374", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x208D3B0", Offset = "0x208D3B0", VA = "0x208D3B0", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x208D3C8", Offset = "0x208D3C8", VA = "0x208D3C8")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB2AE0", Offset = "0xFB2AE0")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x20004CA")]
		public class Rigidbone
		{
			[Token(Token = "0x4001548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x4001549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x400154D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x400154E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x208D9F8", Offset = "0x208D9F8", VA = "0x208D9F8")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x208E670", Offset = "0x208E670", VA = "0x208E670")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0x208E454", Offset = "0x208E454", VA = "0x208E454")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x20004CB")]
		public class Child
		{
			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x4001555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x208DBA8", Offset = "0x208DBA8", VA = "0x208DBA8")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x208E80C", Offset = "0x208E80C", VA = "0x208E80C")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x208E7BC", Offset = "0x208E7BC", VA = "0x208E7BC")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB96B4", Offset = "0xFB96B4")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x17000544")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FA9")]
				[Address(RVA = "0x208EE6C", Offset = "0x208EE6C", VA = "0x208EE6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000545")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FAB")]
				[Address(RVA = "0x208EED4", Offset = "0x208EED4", VA = "0x208EED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x208DC20", Offset = "0x208DC20", VA = "0x208DC20")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x208EC04", Offset = "0x208EC04", VA = "0x208EC04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x208EC08", Offset = "0x208EC08", VA = "0x208EC08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x208EE74", Offset = "0x208EE74", VA = "0x208EE74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF478", Offset = "0xFBF478")]
		public IK ik;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF4B0", Offset = "0xFBF4B0")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF4E8", Offset = "0xFBF4E8")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF520", Offset = "0xFBF520")]
		public float applyVelocity;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF558", Offset = "0xFBF558")]
		public float applyAngularVelocity;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x17000283")]
		private bool isRagdoll
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x208D410", Offset = "0x208D410", VA = "0x208D410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000284")]
		private bool ikUsed
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x208E00C", Offset = "0x208E00C", VA = "0x208E00C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x208D3D8", Offset = "0x208D3D8", VA = "0x208D3D8")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x208D488", Offset = "0x208D488", VA = "0x208D488")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x208D5C4", Offset = "0x208D5C4", VA = "0x208D5C4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x208D548", Offset = "0x208D548", VA = "0x208D548")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCA538", Offset = "0xFCA538")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x208DC4C", Offset = "0x208DC4C", VA = "0x208DC4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x208DE98", Offset = "0x208DE98", VA = "0x208DE98")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x208DF50", Offset = "0x208DF50", VA = "0x208DF50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x208E190", Offset = "0x208E190", VA = "0x208E190")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x208DFD0", Offset = "0x208DFD0", VA = "0x208DFD0")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x208E14C", Offset = "0x208E14C", VA = "0x208E14C")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x208E22C", Offset = "0x208E22C", VA = "0x208E22C")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x208E1C4", Offset = "0x208E1C4", VA = "0x208E1C4")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x208D4E0", Offset = "0x208D4E0", VA = "0x208D4E0")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x208DED8", Offset = "0x208DED8", VA = "0x208DED8")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x208E9D4", Offset = "0x208E9D4", VA = "0x208E9D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x208EAFC", Offset = "0x208EAFC", VA = "0x208EAFC")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool initiated;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool applicationQuit;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x17000285")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x2090794", Offset = "0x2090794", VA = "0x2090794")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000286")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x20907D0", Offset = "0x20907D0", VA = "0x20907D0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x209041C", Offset = "0x209041C", VA = "0x209041C")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x2090460", Offset = "0x2090460", VA = "0x2090460")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x20906EC", Offset = "0x20906EC", VA = "0x20906EC")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x209075C", Offset = "0x209075C", VA = "0x209075C")]
		public void Disable()
		{
		}

		[Token(Token = "0x60010A7")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x20905FC", Offset = "0x20905FC", VA = "0x20905FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x20908A0", Offset = "0x20908A0", VA = "0x20908A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x20908A4", Offset = "0x20908A4", VA = "0x20908A4")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x20908D8", Offset = "0x20908D8", VA = "0x20908D8")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x20909BC", Offset = "0x20909BC", VA = "0x20909BC")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x2090C38", Offset = "0x2090C38", VA = "0x2090C38")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x2090CF4", Offset = "0x2090CF4", VA = "0x2090CF4")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2B44", Offset = "0xFB2B44")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2B44", Offset = "0xFB2B44")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBF5A0", Offset = "0xFBF5A0")]
		public float limit;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBF5BC", Offset = "0xFBF5BC")]
		public float twistLimit;

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x1B60B74", Offset = "0x1B60B74", VA = "0x1B60B74")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA59C", Offset = "0xFCA59C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x1B60BC0", Offset = "0x1B60BC0", VA = "0x1B60BC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA5D4", Offset = "0xFCA5D4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x1B60C0C", Offset = "0x1B60C0C", VA = "0x1B60C0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA60C", Offset = "0xFCA60C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x1B60C58", Offset = "0x1B60C58", VA = "0x1B60C58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA644", Offset = "0xFCA644")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x1B60CA4", Offset = "0x1B60CA4", VA = "0x1B60CA4", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x1B60D44", Offset = "0x1B60D44", VA = "0x1B60D44")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x1B60F8C", Offset = "0x1B60F8C", VA = "0x1B60F8C")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2BA4", Offset = "0xFB2BA4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2BA4", Offset = "0xFB2BA4")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool useLimits;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float min;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float max;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float lastAngle;

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x1B60FA0", Offset = "0x1B60FA0", VA = "0x1B60FA0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA67C", Offset = "0xFCA67C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x1B60FEC", Offset = "0x1B60FEC", VA = "0x1B60FEC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA6B4", Offset = "0xFCA6B4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x1B61038", Offset = "0x1B61038", VA = "0x1B61038")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA6EC", Offset = "0xFCA6EC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x1B61084", Offset = "0x1B61084", VA = "0x1B61084")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA724", Offset = "0xFCA724")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1B610D0", Offset = "0x1B610D0", VA = "0x1B610D0", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1B610F8", Offset = "0x1B610F8", VA = "0x1B610F8")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x1B613FC", Offset = "0x1B613FC", VA = "0x1B613FC")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2C04", Offset = "0xFB2C04")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2C04", Offset = "0xFB2C04")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x20004CD")]
		public class ReachCone
		{
			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x400155A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x400155B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x17000546")]
			public Vector3 o
			{
				[Token(Token = "0x6001FAC")]
				[Address(RVA = "0x1B63448", Offset = "0x1B63448", VA = "0x1B63448")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000547")]
			public Vector3 a
			{
				[Token(Token = "0x6001FAD")]
				[Address(RVA = "0x1B63480", Offset = "0x1B63480", VA = "0x1B63480")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000548")]
			public Vector3 b
			{
				[Token(Token = "0x6001FAE")]
				[Address(RVA = "0x1B634BC", Offset = "0x1B634BC", VA = "0x1B634BC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000549")]
			public Vector3 c
			{
				[Token(Token = "0x6001FAF")]
				[Address(RVA = "0x1B634F8", Offset = "0x1B634F8", VA = "0x1B634F8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700054A")]
			public bool isValid
			{
				[Token(Token = "0x6001FB1")]
				[Address(RVA = "0x1B62588", Offset = "0x1B62588", VA = "0x1B62588")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x1B62BD4", Offset = "0x1B62BD4", VA = "0x1B62BD4")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x1B62D48", Offset = "0x1B62D48", VA = "0x1B62D48")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004CE")]
		public class LimitPoint
		{
			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x1B62598", Offset = "0x1B62598", VA = "0x1B62598")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBF5E8", Offset = "0xFBF5E8")]
		public float twistLimit;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBF604", Offset = "0xFBF604")]
		public int smoothIterations;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x1B61488", Offset = "0x1B61488", VA = "0x1B61488")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA75C", Offset = "0xFCA75C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1B614D4", Offset = "0x1B614D4", VA = "0x1B614D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA794", Offset = "0xFCA794")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1B61520", Offset = "0x1B61520", VA = "0x1B61520")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA7CC", Offset = "0xFCA7CC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1B6156C", Offset = "0x1B6156C", VA = "0x1B6156C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA804", Offset = "0xFCA804")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1B615B8", Offset = "0x1B615B8", VA = "0x1B615B8")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1B61AE8", Offset = "0x1B61AE8", VA = "0x1B61AE8", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1B61BC8", Offset = "0x1B61BC8", VA = "0x1B61BC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1B621A8", Offset = "0x1B621A8", VA = "0x1B621A8")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1B61650", Offset = "0x1B61650", VA = "0x1B61650")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1B6261C", Offset = "0x1B6261C", VA = "0x1B6261C")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1B62F08", Offset = "0x1B62F08", VA = "0x1B62F08")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1B62F4C", Offset = "0x1B62F4C", VA = "0x1B62F4C")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1B63094", Offset = "0x1B63094", VA = "0x1B63094")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1B61E80", Offset = "0x1B61E80", VA = "0x1B61E80")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1B63224", Offset = "0x1B63224", VA = "0x1B63224")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1B633D4", Offset = "0x1B633D4", VA = "0x1B633D4")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xFB2C64", Offset = "0xFB2C64")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2C64", Offset = "0xFB2C64")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBF6C4", Offset = "0xFBF6C4")]
		public float twistLimit;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1B63534", Offset = "0x1B63534", VA = "0x1B63534")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA83C", Offset = "0xFCA83C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1B63580", Offset = "0x1B63580", VA = "0x1B63580")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA874", Offset = "0xFCA874")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1B635CC", Offset = "0x1B635CC", VA = "0x1B635CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA8AC", Offset = "0xFCA8AC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x1B63618", Offset = "0x1B63618", VA = "0x1B63618")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCA8E4", Offset = "0xFCA8E4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x1B63664", Offset = "0x1B63664", VA = "0x1B63664")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x1B63680", Offset = "0x1B63680", VA = "0x1B63680", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x1B63720", Offset = "0x1B63720", VA = "0x1B63720")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1B63A48", Offset = "0x1B63A48", VA = "0x1B63A48")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB96C4", Offset = "0xFB96C4")]
		private sealed class <TurnToTarget>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x1700054B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FB7")]
				[Address(RVA = "0x1B05034", Offset = "0x1B05034", VA = "0x1B05034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FB9")]
				[Address(RVA = "0x1B0509C", Offset = "0x1B0509C", VA = "0x1B0509C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x1B04E04", Offset = "0x1B04E04", VA = "0x1B04E04")]
			[DebuggerHidden]
			public <TurnToTarget>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x1B04F04", Offset = "0x1B04F04", VA = "0x1B04F04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x1B04F08", Offset = "0x1B04F08", VA = "0x1B04F08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x1B0503C", Offset = "0x1B0503C", VA = "0x1B0503C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF718", Offset = "0xFBF718")]
		public AimIK ik;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF750", Offset = "0xFBF750")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBF750", Offset = "0xFBF750")]
		public float weight;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBF7A4", Offset = "0xFBF7A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF7A4", Offset = "0xFBF7A4")]
		public Transform target;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF804", Offset = "0xFBF804")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF83C", Offset = "0xFBF83C")]
		public float weightSmoothTime;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBF874", Offset = "0xFBF874")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF874", Offset = "0xFBF874")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF8D4", Offset = "0xFBF8D4")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF90C", Offset = "0xFBF90C")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF944", Offset = "0xFBF944")]
		public float slerpSpeed;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF97C", Offset = "0xFBF97C")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF9B4", Offset = "0xFBF9B4")]
		public float minDistance;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBF9EC", Offset = "0xFBF9EC")]
		public Vector3 offset;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBFA24", Offset = "0xFBFA24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFA24", Offset = "0xFBFA24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBFA24", Offset = "0xFBFA24")]
		public float maxRootAngle;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFAA0", Offset = "0xFBFAA0")]
		public bool turnToTarget;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFAD8", Offset = "0xFBFAD8")]
		public float turnToTargetTime;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBFB10", Offset = "0xFBFB10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFB10", Offset = "0xFBFB10")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFB70", Offset = "0xFBFB70")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lastTarget;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float switchWeight;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float switchWeightV;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float weightV;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 dir;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool turningToTarget;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float turnToTargetMlp;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turnToTargetMlpV;

		[Token(Token = "0x17000287")]
		private Vector3 pivot
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x1B04008", Offset = "0x1B04008", VA = "0x1B04008")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1B03F08", Offset = "0x1B03F08", VA = "0x1B03F08")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1B04154", Offset = "0x1B04154", VA = "0x1B04154")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1B0487C", Offset = "0x1B0487C", VA = "0x1B0487C")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1B04A18", Offset = "0x1B04A18", VA = "0x1B04A18")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1B04D88", Offset = "0x1B04D88", VA = "0x1B04D88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCA91C", Offset = "0xFCA91C")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x1B04E30", Offset = "0x1B04E30", VA = "0x1B04E30")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D0")]
		public class Pose
		{
			[Token(Token = "0x4001562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4001563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x4001566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x4001567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x1B0529C", Offset = "0x1B0529C", VA = "0x1B0529C")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x1B055A8", Offset = "0x1B055A8", VA = "0x1B055A8")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x1B055B0", Offset = "0x1B055B0", VA = "0x1B055B0")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1AFF910", Offset = "0x1AFF910", VA = "0x1AFF910")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1AFF9EC", Offset = "0x1AFF9EC", VA = "0x1AFF9EC")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1B05534", Offset = "0x1B05534", VA = "0x1B05534")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20004D1")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000580")]
			public class EffectorLink
			{
				[Token(Token = "0x40017DA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5808", Offset = "0xFC5808")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x40017DB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5840", Offset = "0xFC5840")]
				public float weight;

				[Token(Token = "0x6002186")]
				[Address(RVA = "0x1B05BA0", Offset = "0x1B05BA0", VA = "0x1B05BA0")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC47D0", Offset = "0xFC47D0")]
			public Transform transform;

			[Token(Token = "0x4001569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4808", Offset = "0xFC4808")]
			public Transform relativeTo;

			[Token(Token = "0x400156A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4840", Offset = "0xFC4840")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4878", Offset = "0xFC4878")]
			public float verticalWeight;

			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC48B0", Offset = "0xFC48B0")]
			public float horizontalWeight;

			[Token(Token = "0x400156D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC48E8", Offset = "0xFC48E8")]
			public float speed;

			[Token(Token = "0x400156E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x400156F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x4001570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x1B0570C", Offset = "0x1B0570C", VA = "0x1B0570C")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x1B05B78", Offset = "0x1B05B78", VA = "0x1B05B78")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x1B05B88", Offset = "0x1B05B88", VA = "0x1B05B88")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFBA8", Offset = "0xFBFBA8")]
		public Body[] bodies;

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1B055CC", Offset = "0x1B055CC", VA = "0x1B055CC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1B05B70", Offset = "0x1B05B70", VA = "0x1B05B70")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFBE0", Offset = "0xFBFBE0")]
		public float tiltSpeed;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFC18", Offset = "0xFBFC18")]
		public float tiltSensitivity;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFC50", Offset = "0xFBFC50")]
		public OffsetPose poseLeft;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFC88", Offset = "0xFBFC88")]
		public OffsetPose poseRight;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1B07220", Offset = "0x1B07220", VA = "0x1B07220", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1B07268", Offset = "0x1B07268", VA = "0x1B07268", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1B07498", Offset = "0x1B07498", VA = "0x1B07498")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20004D2")]
		public abstract class HitPoint
		{
			[Token(Token = "0x4001571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4920", Offset = "0xFC4920")]
			public string name;

			[Token(Token = "0x4001572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4958", Offset = "0xFC4958")]
			public Collider collider;

			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4990", Offset = "0xFC4990")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC49DC", Offset = "0xFC49DC")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC49EC", Offset = "0xFC49EC")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC49FC", Offset = "0xFC49FC")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC4A0C", Offset = "0xFC4A0C")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x1700054D")]
			public bool inProgress
			{
				[Token(Token = "0x6001FC0")]
				[Address(RVA = "0x218726C", Offset = "0x218726C", VA = "0x218726C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700054E")]
			protected float crossFader
			{
				[Token(Token = "0x6001FC1")]
				[Address(RVA = "0x2187814", Offset = "0x2187814", VA = "0x2187814")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCCAC", Offset = "0xFCCCAC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001FC2")]
				[Address(RVA = "0x218781C", Offset = "0x218781C", VA = "0x218781C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCCBC", Offset = "0xFCCCBC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700054F")]
			protected float timer
			{
				[Token(Token = "0x6001FC3")]
				[Address(RVA = "0x2187824", Offset = "0x2187824", VA = "0x2187824")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCCCC", Offset = "0xFCCCCC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001FC4")]
				[Address(RVA = "0x218782C", Offset = "0x218782C", VA = "0x218782C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCCDC", Offset = "0xFCCCDC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000550")]
			protected Vector3 force
			{
				[Token(Token = "0x6001FC5")]
				[Address(RVA = "0x2187834", Offset = "0x2187834", VA = "0x2187834")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCCEC", Offset = "0xFCCCEC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001FC6")]
				[Address(RVA = "0x2187840", Offset = "0x2187840", VA = "0x2187840")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCCFC", Offset = "0xFCCCFC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000551")]
			protected Vector3 point
			{
				[Token(Token = "0x6001FC7")]
				[Address(RVA = "0x218784C", Offset = "0x218784C", VA = "0x218784C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD0C", Offset = "0xFCCD0C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001FC8")]
				[Address(RVA = "0x2187858", Offset = "0x2187858", VA = "0x2187858")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD1C", Offset = "0xFCCD1C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x21876E0", Offset = "0x21876E0", VA = "0x21876E0")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x2187354", Offset = "0x2187354", VA = "0x2187354")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001FCB")]
			protected abstract float GetLength();

			[Token(Token = "0x6001FCC")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6001FCD")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x2187864", Offset = "0x2187864", VA = "0x2187864")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D3")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000581")]
			public class EffectorLink
			{
				[Token(Token = "0x40017DC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5878", Offset = "0xFC5878")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x40017DD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC58B0", Offset = "0xFC58B0")]
				public float weight;

				[Token(Token = "0x40017DE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x40017DF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6002187")]
				[Address(RVA = "0x21881E0", Offset = "0x21881E0", VA = "0x21881E0")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002188")]
				[Address(RVA = "0x2187FD4", Offset = "0x2187FD4", VA = "0x2187FD4")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002189")]
				[Address(RVA = "0x218831C", Offset = "0x218831C", VA = "0x218831C")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4A1C", Offset = "0xFC4A1C")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4A54", Offset = "0xFC4A54")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4A8C", Offset = "0xFC4A8C")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x2187DF0", Offset = "0x2187DF0", VA = "0x2187DF0", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x2187F68", Offset = "0x2187F68", VA = "0x2187F68", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x2187FE8", Offset = "0x2187FE8", VA = "0x2187FE8", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x2188308", Offset = "0x2188308", VA = "0x2188308")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D4")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000582")]
			public class BoneLink
			{
				[Token(Token = "0x40017E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC58E8", Offset = "0xFC58E8")]
				public Transform bone;

				[Token(Token = "0x40017E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5920", Offset = "0xFC5920")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC5920", Offset = "0xFC5920")]
				public float weight;

				[Token(Token = "0x40017E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x40017E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x600218A")]
				[Address(RVA = "0x2187BF8", Offset = "0x2187BF8", VA = "0x2187BF8")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x600218B")]
				[Address(RVA = "0x2187980", Offset = "0x2187980", VA = "0x2187980")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600218C")]
				[Address(RVA = "0x2187D68", Offset = "0x2187D68", VA = "0x2187D68")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4AC4", Offset = "0xFC4AC4")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4AFC", Offset = "0xFC4AFC")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x2187878", Offset = "0x2187878", VA = "0x2187878", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x218791C", Offset = "0x218791C", VA = "0x218791C", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x218798C", Offset = "0x218798C", VA = "0x218798C", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x2187D54", Offset = "0x2187D54", VA = "0x2187D54")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFCC0", Offset = "0xFBFCC0")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFCF8", Offset = "0xFBFCF8")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x17000288")]
		public bool inProgress
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x21871B0", Offset = "0x21871B0", VA = "0x21871B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x2187280", Offset = "0x2187280", VA = "0x2187280", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x21874A0", Offset = "0x21874A0", VA = "0x21874A0")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x218780C", Offset = "0x218780C", VA = "0x218780C")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x20004D5")]
		public abstract class Offset
		{
			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4B34", Offset = "0xFC4B34")]
			public string name;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4B6C", Offset = "0xFC4B6C")]
			public Collider collider;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4BA4", Offset = "0xFC4BA4")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC4BF0", Offset = "0xFC4BF0")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC4C00", Offset = "0xFC4C00")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC4C10", Offset = "0xFC4C10")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC4C20", Offset = "0xFC4C20")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000552")]
			protected float crossFader
			{
				[Token(Token = "0x6001FD7")]
				[Address(RVA = "0x21888D4", Offset = "0x21888D4", VA = "0x21888D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD2C", Offset = "0xFCCD2C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001FD8")]
				[Address(RVA = "0x21888DC", Offset = "0x21888DC", VA = "0x21888DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD3C", Offset = "0xFCCD3C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000553")]
			protected float timer
			{
				[Token(Token = "0x6001FD9")]
				[Address(RVA = "0x21888E4", Offset = "0x21888E4", VA = "0x21888E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD4C", Offset = "0xFCCD4C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001FDA")]
				[Address(RVA = "0x21888EC", Offset = "0x21888EC", VA = "0x21888EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD5C", Offset = "0xFCCD5C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000554")]
			protected Vector3 force
			{
				[Token(Token = "0x6001FDB")]
				[Address(RVA = "0x21888F4", Offset = "0x21888F4", VA = "0x21888F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD6C", Offset = "0xFCCD6C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001FDC")]
				[Address(RVA = "0x2188900", Offset = "0x2188900", VA = "0x2188900")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD7C", Offset = "0xFCCD7C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000555")]
			protected Vector3 point
			{
				[Token(Token = "0x6001FDD")]
				[Address(RVA = "0x218890C", Offset = "0x218890C", VA = "0x218890C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD8C", Offset = "0xFCCD8C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001FDE")]
				[Address(RVA = "0x2188918", Offset = "0x2188918", VA = "0x2188918")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCD9C", Offset = "0xFCCD9C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0x218878C", Offset = "0x218878C", VA = "0x218878C")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0x21883F0", Offset = "0x21883F0", VA = "0x21883F0")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001FE1")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6001FE2")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6001FE3")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x2188924", Offset = "0x2188924", VA = "0x2188924")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D6")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x2000583")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x40017E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5974", Offset = "0xFC5974")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x40017E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC59AC", Offset = "0xFC59AC")]
				public float weight;

				[Token(Token = "0x40017E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x40017E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x600218D")]
				[Address(RVA = "0x2188DE0", Offset = "0x2188DE0", VA = "0x2188DE0")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x600218E")]
				[Address(RVA = "0x2188B9C", Offset = "0x2188B9C", VA = "0x2188B9C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600218F")]
				[Address(RVA = "0x2188EFC", Offset = "0x2188EFC", VA = "0x2188EFC")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4C30", Offset = "0xFC4C30")]
			public int forceDirCurveIndex;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4C68", Offset = "0xFC4C68")]
			public int upDirCurveIndex;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4CA0", Offset = "0xFC4CA0")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0x2188938", Offset = "0x2188938", VA = "0x2188938", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0x2188B30", Offset = "0x2188B30", VA = "0x2188B30", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x2188BB0", Offset = "0x2188BB0", VA = "0x2188BB0", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x2188EE0", Offset = "0x2188EE0", VA = "0x2188EE0")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D7")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x2000584")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x40017E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC59E4", Offset = "0xFC59E4")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x40017E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5A1C", Offset = "0xFC5A1C")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC5A1C", Offset = "0xFC5A1C")]
				public float weight;

				[Token(Token = "0x40017EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x40017EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x6002190")]
				[Address(RVA = "0x2189378", Offset = "0x2189378", VA = "0x2189378")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6002191")]
				[Address(RVA = "0x218904C", Offset = "0x218904C", VA = "0x218904C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002192")]
				[Address(RVA = "0x21894B4", Offset = "0x21894B4", VA = "0x21894B4")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4CD8", Offset = "0xFC4CD8")]
			public int curveIndex;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4D10", Offset = "0xFC4D10")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x2188F04", Offset = "0x2188F04", VA = "0x2188F04", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x2188FE8", Offset = "0x2188FE8", VA = "0x2188FE8", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0x2189058", Offset = "0x2189058", VA = "0x2189058", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x21894A0", Offset = "0x21894A0", VA = "0x21894A0")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFD30", Offset = "0xFBFD30")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFD68", Offset = "0xFBFD68")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x2188324", Offset = "0x2188324", VA = "0x2188324", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x2188544", Offset = "0x2188544", VA = "0x2188544")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x21888CC", Offset = "0x21888CC", VA = "0x21888CC")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20004D8")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000585")]
			public class EffectorLink
			{
				[Token(Token = "0x40017EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5A70", Offset = "0xFC5A70")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x40017ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5AA8", Offset = "0xFC5AA8")]
				public float weight;

				[Token(Token = "0x6002193")]
				[Address(RVA = "0x2080C58", Offset = "0x2080C58", VA = "0x2080C58")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4D48", Offset = "0xFC4D48")]
			public Transform transform;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4D80", Offset = "0xFC4D80")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4DB8", Offset = "0xFC4DB8")]
			public float speed;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4DF0", Offset = "0xFC4DF0")]
			public float acceleration;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4E28", Offset = "0xFC4E28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC4E28", Offset = "0xFC4E28")]
			public float matchVelocity;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4E7C", Offset = "0xFC4E7C")]
			public float gravity;

			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x2080628", Offset = "0x2080628", VA = "0x2080628")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x20807E8", Offset = "0x20807E8", VA = "0x20807E8")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x2080C3C", Offset = "0x2080C3C", VA = "0x2080C3C")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFDA0", Offset = "0xFBFDA0")]
		public Body[] bodies;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFDD8", Offset = "0xFBFDD8")]
		public OffsetLimits[] limits;

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x20805B0", Offset = "0x20805B0", VA = "0x20805B0")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x2080704", Offset = "0x2080704", VA = "0x2080704", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x2080C1C", Offset = "0x2080C1C", VA = "0x2080C1C")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBFE10", Offset = "0xFBFE10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFE10", Offset = "0xFBFE10")]
		public Transform target;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFBFE70", Offset = "0xFBFE70")]
		public float weight;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFE88", Offset = "0xFBFE88")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFEC0", Offset = "0xFBFEC0")]
		public float weightSmoothTime;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFBFEF8", Offset = "0xFBFEF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFEF8", Offset = "0xFBFEF8")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFF58", Offset = "0xFBFF58")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFF90", Offset = "0xFBFF90")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFBFFC8", Offset = "0xFBFFC8")]
		public float slerpSpeed;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC0000", Offset = "0xFC0000")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC0038", Offset = "0xFC0038")]
		public float minDistance;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFC0070", Offset = "0xFC0070")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC0070", Offset = "0xFC0070")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC0070", Offset = "0xFC0070")]
		public float maxRootAngle;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x17000289")]
		private Vector3 pivot
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x208AAEC", Offset = "0x208AAEC", VA = "0x208AAEC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x208AA04", Offset = "0x208AA04", VA = "0x208AA04")]
		private void Start()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x208AC38", Offset = "0x208AC38", VA = "0x208AC38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x208B2DC", Offset = "0x208B2DC", VA = "0x208B2DC")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x208B478", Offset = "0x208B478", VA = "0x208B478")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x208B794", Offset = "0x208B794", VA = "0x208B794")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D9")]
		public class OffsetLimits
		{
			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4EB4", Offset = "0xFC4EB4")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4EEC", Offset = "0xFC4EEC")]
			public float spring;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4F24", Offset = "0xFC4F24")]
			public bool x;

			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4F5C", Offset = "0xFC4F5C")]
			public bool y;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4F94", Offset = "0xFC4F94")]
			public bool z;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC4FCC", Offset = "0xFC4FCC")]
			public float minX;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5004", Offset = "0xFC5004")]
			public float maxX;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC503C", Offset = "0xFC503C")]
			public float minY;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5074", Offset = "0xFC5074")]
			public float maxY;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC50AC", Offset = "0xFC50AC")]
			public float minZ;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC50E4", Offset = "0xFC50E4")]
			public float maxZ;

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x208BBD4", Offset = "0x208BBD4", VA = "0x208BBD4")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0x208C120", Offset = "0x208C120", VA = "0x208C120")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x208C150", Offset = "0x208C150", VA = "0x208C150")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x208C228", Offset = "0x208C228", VA = "0x208C228")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB96D4", Offset = "0xFB96D4")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x17000556")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FF7")]
				[Address(RVA = "0x208C0B0", Offset = "0x208C0B0", VA = "0x208C0B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000557")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FF9")]
				[Address(RVA = "0x208C118", Offset = "0x208C118", VA = "0x208C118", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x208BA9C", Offset = "0x208BA9C", VA = "0x208BA9C")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x208BF50", Offset = "0x208BF50", VA = "0x208BF50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x208BF54", Offset = "0x208BF54", VA = "0x208BF54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0x208C0B8", Offset = "0x208C0B8", VA = "0x208C0B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC00EC", Offset = "0xFC00EC")]
		public float weight;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC0124", Offset = "0xFC0124")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x1700028A")]
		protected float deltaTime
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x20807BC", Offset = "0x20807BC", VA = "0x20807BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010F5")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x208B9F4", Offset = "0x208B9F4", VA = "0x208B9F4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x208BA20", Offset = "0x208BA20", VA = "0x208BA20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCA980", Offset = "0xFCA980")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x208BAC8", Offset = "0x208BAC8", VA = "0x208BAC8")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x2080B60", Offset = "0x2080B60", VA = "0x2080B60")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x208BE34", Offset = "0x208BE34", VA = "0x208BE34", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x2080C2C", Offset = "0x2080C2C", VA = "0x2080C2C")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB96E4", Offset = "0xFB96E4")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x17000558")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FFD")]
				[Address(RVA = "0x208C6C8", Offset = "0x208C6C8", VA = "0x208C6C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000559")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FFF")]
				[Address(RVA = "0x208C730", Offset = "0x208C730", VA = "0x208C730", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x208C304", Offset = "0x208C304", VA = "0x208C304")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x208C568", Offset = "0x208C568", VA = "0x208C568", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x208C56C", Offset = "0x208C56C", VA = "0x208C56C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x208C6D0", Offset = "0x208C6D0", VA = "0x208C6D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC015C", Offset = "0xFC015C")]
		public float weight;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC0194", Offset = "0xFC0194")]
		public VRIK ik;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x1700028B")]
		protected float deltaTime
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x208C230", Offset = "0x208C230", VA = "0x208C230")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010FD")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x208C25C", Offset = "0x208C25C", VA = "0x208C25C", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x208C288", Offset = "0x208C288", VA = "0x208C288")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCA9E4", Offset = "0xFCA9E4")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x208C330", Offset = "0x208C330", VA = "0x208C330")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x208C43C", Offset = "0x208C43C", VA = "0x208C43C", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x208C558", Offset = "0x208C558", VA = "0x208C558")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004DC")]
		public class EffectorLink
		{
			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x6002000")]
			[Address(RVA = "0x208C7F8", Offset = "0x208C7F8", VA = "0x208C7F8")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x6002001")]
			[Address(RVA = "0x208CC54", Offset = "0x208CC54", VA = "0x208CC54")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x208C738", Offset = "0x208C738", VA = "0x208C738")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x208CB30", Offset = "0x208CB30", VA = "0x208CB30")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x208CBE8", Offset = "0x208CBE8", VA = "0x208CBE8")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20004DD")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x2000586")]
			public class EffectorLink
			{
				[Token(Token = "0x40017EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5AE0", Offset = "0xFC5AE0")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x40017EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5B18", Offset = "0xFC5B18")]
				public float weight;

				[Token(Token = "0x6002194")]
				[Address(RVA = "0x208D30C", Offset = "0x208D30C", VA = "0x208D30C")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC511C", Offset = "0xFC511C")]
			public Transform[] raycastFrom;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5154", Offset = "0xFC5154")]
			public Transform raycastTo;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC518C", Offset = "0xFC518C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC518C", Offset = "0xFC518C")]
			public float raycastRadius;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC51E0", Offset = "0xFC51E0")]
			public EffectorLink[] effectors;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5218", Offset = "0xFC5218")]
			public float smoothTimeIn;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5250", Offset = "0xFC5250")]
			public float smoothTimeOut;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5288", Offset = "0xFC5288")]
			public LayerMask layers;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x6002002")]
			[Address(RVA = "0x208CCE0", Offset = "0x208CCE0", VA = "0x208CCE0")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002003")]
			[Address(RVA = "0x208CEEC", Offset = "0x208CEEC", VA = "0x208CEEC")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002004")]
			[Address(RVA = "0x208D084", Offset = "0x208D084", VA = "0x208D084")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002005")]
			[Address(RVA = "0x208D2F8", Offset = "0x208D2F8", VA = "0x208D2F8")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC01CC", Offset = "0xFC01CC")]
		public Avoider[] avoiders;

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x208CC5C", Offset = "0x208CC5C", VA = "0x208CC5C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x208CEDC", Offset = "0x208CEDC", VA = "0x208CEDC")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20004DE")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x2000587")]
			public class EffectorLink
			{
				[Token(Token = "0x40017F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5B50", Offset = "0xFC5B50")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x40017F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5B88", Offset = "0xFC5B88")]
				public float weight;

				[Token(Token = "0x6002195")]
				[Address(RVA = "0x2090414", Offset = "0x2090414", VA = "0x2090414")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC52C0", Offset = "0xFC52C0")]
			public Vector3 offset;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC52F8", Offset = "0xFC52F8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC52F8", Offset = "0xFC52F8")]
			public float additivity;

			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC534C", Offset = "0xFC534C")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5384", Offset = "0xFC5384")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x6002006")]
			[Address(RVA = "0x208F104", Offset = "0x208F104", VA = "0x208F104")]
			public void Start()
			{
			}

			[Token(Token = "0x6002007")]
			[Address(RVA = "0x208FCB8", Offset = "0x208FCB8", VA = "0x208FCB8")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x6002008")]
			[Address(RVA = "0x2090400", Offset = "0x2090400", VA = "0x2090400")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004DF")]
		public enum Handedness
		{
			[Token(Token = "0x40015C2")]
			Right,
			[Token(Token = "0x40015C3")]
			Left
		}

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC0204", Offset = "0xFC0204")]
		public AimIK aimIK;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC023C", Offset = "0xFC023C")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC0274", Offset = "0xFC0274")]
		public Handedness handedness;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC02AC", Offset = "0xFC02AC")]
		public bool twoHanded;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC02E4", Offset = "0xFC02E4")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC031C", Offset = "0xFC031C")]
		public float magnitudeRandom;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC0354", Offset = "0xFC0354")]
		public Vector3 rotationRandom;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC038C", Offset = "0xFC038C")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC03C4", Offset = "0xFC03C4")]
		public float blendTime;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xFC03FC", Offset = "0xFC03FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC03FC", Offset = "0xFC03FC")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x1700028C")]
		public bool isFinished
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x208EEDC", Offset = "0x208EEDC", VA = "0x208EEDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028D")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x208FF6C", Offset = "0x208FF6C", VA = "0x208FF6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x208FFAC", Offset = "0x208FFAC", VA = "0x208FFAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		private Transform primaryHand
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0x208FF2C", Offset = "0x208FF2C", VA = "0x208FF2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private Transform secondaryHand
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0x208FF4C", Offset = "0x208FF4C", VA = "0x208FF4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x208EF0C", Offset = "0x208EF0C", VA = "0x208EF0C")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x208EF38", Offset = "0x208EF38", VA = "0x208EF38")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x208F1B4", Offset = "0x208F1B4", VA = "0x208F1B4", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x208FFEC", Offset = "0x208FFEC", VA = "0x208FFEC")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x2090144", Offset = "0x2090144", VA = "0x2090144")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x2090180", Offset = "0x2090180", VA = "0x2090180", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x209034C", Offset = "0x209034C", VA = "0x209034C")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC045C", Offset = "0xFC045C")]
		public float weight;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC0494", Offset = "0xFC0494")]
		public float offset;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1B64374", Offset = "0x1B64374", VA = "0x1B64374")]
		private void Start()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x1B64468", Offset = "0x1B64468", VA = "0x1B64468")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x1B64554", Offset = "0x1B64554", VA = "0x1B64554")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1B6499C", Offset = "0x1B6499C", VA = "0x1B6499C")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1B649D4", Offset = "0x1B649D4", VA = "0x1B649D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1B64AF0", Offset = "0x1B64AF0", VA = "0x1B64AF0")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x20004E0")]
		public class Settings
		{
			[Token(Token = "0x40015C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC53BC", Offset = "0xFC53BC")]
			public float scaleMlp;

			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC53F4", Offset = "0xFC53F4")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC542C", Offset = "0xFC542C")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5464", Offset = "0xFC5464")]
			public Vector3 bodyTrackerForward;

			[Token(Token = "0x40015C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC549C", Offset = "0xFC549C")]
			public Vector3 bodyTrackerUp;

			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC54D4", Offset = "0xFC54D4")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC550C", Offset = "0xFC550C")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5544", Offset = "0xFC5544")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC557C", Offset = "0xFC557C")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xFC55B4", Offset = "0xFC55B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC55B4", Offset = "0xFC55B4")]
			public Vector3 headOffset;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5604", Offset = "0xFC5604")]
			public Vector3 handOffset;

			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC563C", Offset = "0xFC563C")]
			public float footForwardOffset;

			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC5674", Offset = "0xFC5674")]
			public float footInwardOffset;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xFC56AC", Offset = "0xFC56AC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC56AC", Offset = "0xFC56AC")]
			public float footHeadingOffset;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC5708", Offset = "0xFC5708")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC5720", Offset = "0xFC5720")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6002009")]
			[Address(RVA = "0x1B69F5C", Offset = "0x1B69F5C", VA = "0x1B69F5C")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004E1")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x2000588")]
			public class Target
			{
				[Token(Token = "0x40017F2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x40017F3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x40017F4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x6002196")]
				[Address(RVA = "0x1B68F88", Offset = "0x1B68F88", VA = "0x1B68F88")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x6002197")]
				[Address(RVA = "0x1B69AFC", Offset = "0x1B69AFC", VA = "0x1B69AFC")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x600200A")]
			[Address(RVA = "0x1B683CC", Offset = "0x1B683CC", VA = "0x1B683CC")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1B66EE4", Offset = "0x1B66EE4", VA = "0x1B66EE4")]
		public static void RecalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1B6704C", Offset = "0x1B6704C", VA = "0x1B6704C")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1B68544", Offset = "0x1B68544", VA = "0x1B68544")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1B6904C", Offset = "0x1B6904C", VA = "0x1B6904C")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x1B69B5C", Offset = "0x1B69B5C", VA = "0x1B69B5C")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC04CC", Offset = "0xFC04CC")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x17000291")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x1B6A054", Offset = "0x1B6A054", VA = "0x1B6A054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAA48", Offset = "0xFCAA48")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x1B6A060", Offset = "0x1B6A060", VA = "0x1B6A060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAA58", Offset = "0xFCAA58")]
			private set
			{
			}
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1B6A06C", Offset = "0x1B6A06C", VA = "0x1B6A06C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x1B68D2C", Offset = "0x1B68D2C", VA = "0x1B68D2C")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x1B69DB4", Offset = "0x1B69DB4", VA = "0x1B69DB4")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1B6A168", Offset = "0x1B6A168", VA = "0x1B6A168")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1B6A60C", Offset = "0x1B6A60C", VA = "0x1B6A60C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1B6A728", Offset = "0x1B6A728", VA = "0x1B6A728")]
		public VRIKRootController()
		{
		}
	}
}
namespace ParadoxNotion
{
	[Token(Token = "0x2000250")]
	public enum CompareMethod
	{
		[Token(Token = "0x4000BE6")]
		EqualTo,
		[Token(Token = "0x4000BE7")]
		GreaterThan,
		[Token(Token = "0x4000BE8")]
		LessThan,
		[Token(Token = "0x4000BE9")]
		GreaterOrEqualTo,
		[Token(Token = "0x4000BEA")]
		LessOrEqualTo
	}
	[Token(Token = "0x2000251")]
	public enum OperationMethod
	{
		[Token(Token = "0x4000BEC")]
		Set,
		[Token(Token = "0x4000BED")]
		Add,
		[Token(Token = "0x4000BEE")]
		Subtract,
		[Token(Token = "0x4000BEF")]
		Multiply,
		[Token(Token = "0x4000BF0")]
		Divide
	}
	[Token(Token = "0x2000252")]
	public enum ButtonKeys
	{
		[Token(Token = "0x4000BF2")]
		Left,
		[Token(Token = "0x4000BF3")]
		Right,
		[Token(Token = "0x4000BF4")]
		Middle
	}
	[Token(Token = "0x2000253")]
	public enum PressTypes
	{
		[Token(Token = "0x4000BF6")]
		Down,
		[Token(Token = "0x4000BF7")]
		Up,
		[Token(Token = "0x4000BF8")]
		Pressed
	}
	[Token(Token = "0x2000254")]
	public enum MouseClickEvent
	{
		[Token(Token = "0x4000BFA")]
		MouseDown,
		[Token(Token = "0x4000BFB")]
		MouseUp
	}
	[Token(Token = "0x2000255")]
	public enum TriggerTypes
	{
		[Token(Token = "0x4000BFD")]
		TriggerEnter,
		[Token(Token = "0x4000BFE")]
		TriggerExit,
		[Token(Token = "0x4000BFF")]
		TriggerStay
	}
	[Token(Token = "0x2000256")]
	public enum CollisionTypes
	{
		[Token(Token = "0x4000C01")]
		CollisionEnter,
		[Token(Token = "0x4000C02")]
		CollisionExit,
		[Token(Token = "0x4000C03")]
		CollisionStay
	}
	[Token(Token = "0x2000257")]
	public enum MouseInteractionTypes
	{
		[Token(Token = "0x4000C05")]
		MouseEnter,
		[Token(Token = "0x4000C06")]
		MouseExit,
		[Token(Token = "0x4000C07")]
		MouseOver
	}
	[Token(Token = "0x2000258")]
	public enum CompactStatus
	{
		[Token(Token = "0x4000C09")]
		Failure,
		[Token(Token = "0x4000C0A")]
		Success
	}
	[Token(Token = "0x2000259")]
	public enum PlayDirections
	{
		[Token(Token = "0x4000C0C")]
		Forward,
		[Token(Token = "0x4000C0D")]
		Backward,
		[Token(Token = "0x4000C0E")]
		Toggle
	}
	[Token(Token = "0x200025A")]
	public enum Alignment2x2
	{
		[Token(Token = "0x4000C10")]
		Default,
		[Token(Token = "0x4000C11")]
		Left,
		[Token(Token = "0x4000C12")]
		Right,
		[Token(Token = "0x4000C13")]
		Top,
		[Token(Token = "0x4000C14")]
		Bottom
	}
	[Token(Token = "0x200025B")]
	public enum Alignment3x3
	{
		[Token(Token = "0x4000C16")]
		TopLeft,
		[Token(Token = "0x4000C17")]
		TopCenter,
		[Token(Token = "0x4000C18")]
		TopRight,
		[Token(Token = "0x4000C19")]
		MiddleLeft,
		[Token(Token = "0x4000C1A")]
		MiddleCenter,
		[Token(Token = "0x4000C1B")]
		MiddleRight,
		[Token(Token = "0x4000C1C")]
		BottomLeft,
		[Token(Token = "0x4000C1D")]
		BottomCenter,
		[Token(Token = "0x4000C1E")]
		BottomRight
	}
	[Token(Token = "0x200025C")]
	public class EventData
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC04DC", Offset = "0xFC04DC")]
		private string <name>k__BackingField;

		[Token(Token = "0x17000292")]
		public string name
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x1817630", Offset = "0x1817630", VA = "0x1817630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAA68", Offset = "0xFCAA68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x1817638", Offset = "0x1817638", VA = "0x1817638")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAA78", Offset = "0xFCAA78")]
			private set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public object value
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x1817640", Offset = "0x1817640", VA = "0x1817640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x181764C", Offset = "0x181764C", VA = "0x181764C", Slot = "4")]
		protected virtual object GetValue()
		{
			return null;
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x180C2B0", Offset = "0x180C2B0", VA = "0x180C2B0")]
		public EventData(string name)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class EventData<T> : EventData
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC04EC", Offset = "0xFC04EC")]
		private T <value>k__BackingField;

		[Token(Token = "0x17000294")]
		public new T value
		{
			[Token(Token = "0x600112C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAA88", Offset = "0xFCAA88")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600112D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAA98", Offset = "0xFCAA98")]
			private set
			{
			}
		}

		[Token(Token = "0x600112E")]
		protected override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x600112F")]
		public EventData(string name, T value)
		{
		}
	}
	[Token(Token = "0x200025E")]
	public static class OperationTools
	{
		[Token(Token = "0x6001130")]
		[Address(RVA = "0x180CCD0", Offset = "0x180CCD0", VA = "0x180CCD0")]
		public static string GetOperationString(OperationMethod om)
		{
			return null;
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x180CE58", Offset = "0x180CE58", VA = "0x180CE58")]
		public static float Operate(float a, float b, OperationMethod om, float delta = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x180D4A4", Offset = "0x180D4A4", VA = "0x180D4A4")]
		public static int Operate(int a, int b, OperationMethod om)
		{
			return default(int);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x180DFC4", Offset = "0x180DFC4", VA = "0x180DFC4")]
		public static Vector3 Operate(Vector3 a, Vector3 b, OperationMethod om, float delta = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1811FE4", Offset = "0x1811FE4", VA = "0x1811FE4")]
		public static string GetCompareString(CompareMethod cm)
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x1812180", Offset = "0x1812180", VA = "0x1812180")]
		public static bool Compare(float a, float b, CompareMethod cm, float floatingPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1812DC4", Offset = "0x1812DC4", VA = "0x1812DC4")]
		public static bool Compare(int a, int b, CompareMethod cm)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200025F")]
	public static class RectUtils
	{
		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1817654", Offset = "0x1817654", VA = "0x1817654")]
		public static Rect GetBoundRect(params Rect[] rects)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x1817804", Offset = "0x1817804", VA = "0x1817804")]
		public static Rect GetBoundRect(params Vector2[] positions)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1817980", Offset = "0x1817980", VA = "0x1817980")]
		public static bool Encapsulates(this Rect a, Rect b)
		{
			return default(bool);
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x1817A48", Offset = "0x1817A48", VA = "0x1817A48")]
		public static Rect ExpandBy(this Rect rect, float margin)
		{
			return default(Rect);
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x1817AD4", Offset = "0x1817AD4", VA = "0x1817AD4")]
		public static Rect TransformSpace(this Rect rect, Rect oldContainer, Rect newContainer)
		{
			return default(Rect);
		}
	}
	[Token(Token = "0x2000260")]
	public static class ReflectionTools
	{
		[Token(Token = "0x20004E2")]
		public enum MethodType
		{
			[Token(Token = "0x40015E1")]
			Normal,
			[Token(Token = "0x40015E2")]
			PropertyAccessor,
			[Token(Token = "0x40015E3")]
			Event,
			[Token(Token = "0x40015E4")]
			Operator
		}

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB96F4", Offset = "0xFB96F4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40015E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string typeName;

			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x600200B")]
			[Address(RVA = "0x1D53FB8", Offset = "0x1D53FB8", VA = "0x1D53FB8")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600200C")]
			[Address(RVA = "0x1D53FC0", Offset = "0x1D53FC0", VA = "0x1D53FC0")]
			internal bool <TryResolveDeserializeFromAttribute>b__0(string n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9704", Offset = "0xFB9704")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool includeObsolete;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<Type, bool> <>9__2;

			[Token(Token = "0x600200D")]
			[Address(RVA = "0x1D53F14", Offset = "0x1D53F14", VA = "0x1D53F14")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600200E")]
			[Address(RVA = "0x1D53F1C", Offset = "0x1D53F1C", VA = "0x1D53F1C")]
			internal bool <GetAllTypes>b__2(Type t)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9714", Offset = "0xFB9714")]
		private sealed class <>c
		{
			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Type, string> <>9__11_0;

			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, string> <>9__11_1;

			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ConstructorInfo, bool> <>9__44_0;

			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ParameterInfo, Type> <>9__72_0;

			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ParameterInfo, Type> <>9__79_0;

			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ConstructorInfo, bool> <>9__93_0;

			[Token(Token = "0x6002010")]
			[Address(RVA = "0x1D53DA0", Offset = "0x1D53DA0", VA = "0x1D53DA0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002011")]
			[Address(RVA = "0x1D53DA8", Offset = "0x1D53DA8", VA = "0x1D53DA8")]
			internal string <GetAllTypes>b__11_0(Type t)
			{
				return null;
			}

			[Token(Token = "0x6002012")]
			[Address(RVA = "0x1D53E14", Offset = "0x1D53E14", VA = "0x1D53E14")]
			internal string <GetAllTypes>b__11_1(Type t)
			{
				return null;
			}

			[Token(Token = "0x6002013")]
			[Address(RVA = "0x1D53E38", Offset = "0x1D53E38", VA = "0x1D53E38")]
			internal bool <RTGetConstructor>b__44_0(ConstructorInfo info)
			{
				return default(bool);
			}

			[Token(Token = "0x6002014")]
			[Address(RVA = "0x1D53E74", Offset = "0x1D53E74", VA = "0x1D53E74")]
			internal Type <RTCreateDelegate>b__72_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x6002015")]
			[Address(RVA = "0x1D53E94", Offset = "0x1D53E94", VA = "0x1D53E94")]
			internal Type <GetBaseDefinition>b__79_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x6002016")]
			[Address(RVA = "0x1D53EB4", Offset = "0x1D53EB4", VA = "0x1D53EB4")]
			internal bool <IsAllowedByGenericArgument>b__93_0(ConstructorInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C21")]
		private const BindingFlags flagsEverything = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Assembly[] _loadedAssemblies;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, Type> typeMap;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Type[] _allTypes;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<Type, Type[]> _subTypesMap;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Dictionary<string, string> op_FriendlyNamesLong;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Dictionary<string, string> op_FriendlyNamesShort;

		[Token(Token = "0x4000C28")]
		public const string METHOD_SPECIAL_NAME_GET = "get_";

		[Token(Token = "0x4000C29")]
		public const string METHOD_SPECIAL_NAME_SET = "set_";

		[Token(Token = "0x4000C2A")]
		public const string METHOD_SPECIAL_NAME_ADD = "add_";

		[Token(Token = "0x4000C2B")]
		public const string METHOD_SPECIAL_NAME_REMOVE = "remove_";

		[Token(Token = "0x4000C2C")]
		public const string METHOD_SPECIAL_NAME_OP = "op_";

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Dictionary<MethodBase, string> cacheSignatures;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Dictionary<Type, FieldInfo[]> _typeFields;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<Type, PropertyInfo[]> _typeProperties;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Dictionary<Type, MethodInfo[]> _typeMethods;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Dictionary<Type, ConstructorInfo[]> _typeConstructors;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Dictionary<Type, EventInfo[]> _typeEvents;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Dictionary<Type, MethodInfo[]> _typeExtensions;

		[Token(Token = "0x17000295")]
		private static Assembly[] loadedAssemblies
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x1817D78", Offset = "0x1817D78", VA = "0x1817D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1817E54", Offset = "0x1817E54", VA = "0x1817E54")]
		public static Type GetType(string typeFullName, bool fallbackNoNamespace = false, [Optional] Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x1818210", Offset = "0x1818210", VA = "0x1818210")]
		private static Type GetTypeDirect(string typeFullName)
		{
			return null;
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x1818418", Offset = "0x1818418", VA = "0x1818418")]
		private static Type TryResolveGenericType(string typeFullName, bool fallbackNoNamespace = false, [Optional] Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x1818B9C", Offset = "0x1818B9C", VA = "0x1818B9C")]
		private static Type TryResolveDeserializeFromAttribute(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x1818D4C", Offset = "0x1818D4C", VA = "0x1818D4C")]
		private static Type TryResolveWithoutNamespace(string typeName, [Optional] Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x1818FA4", Offset = "0x1818FA4", VA = "0x1818FA4")]
		public static Type[] GetAllTypes(bool includeObsolete)
		{
			return null;
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x1819454", Offset = "0x1819454", VA = "0x1819454")]
		public static Type[] GetImplementationsOf(Type baseType)
		{
			return null;
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x1819434", Offset = "0x1819434", VA = "0x1819434")]
		private static Type[] RTGetExportedTypes(this Assembly asm)
		{
			return null;
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1819698", Offset = "0x1819698", VA = "0x1819698")]
		public static string FriendlyName(this Type t, bool compileSafe = false)
		{
			return null;
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1819B30", Offset = "0x1819B30", VA = "0x1819B30")]
		public static MethodType GetMethodSpecialType(this MethodBase method)
		{
			return default(MethodType);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1819C48", Offset = "0x1819C48", VA = "0x1819C48")]
		public static string FriendlyName(this MethodBase method)
		{
			return null;
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1819CC0", Offset = "0x1819CC0", VA = "0x1819CC0")]
		public static string FriendlyName(this MethodBase method, out MethodType specialNameType)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x1819EF0", Offset = "0x1819EF0", VA = "0x1819EF0")]
		public static string SignatureName(this MethodBase method)
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x181A414", Offset = "0x181A414", VA = "0x181A414")]
		public static object CreateObject(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x181A4A0", Offset = "0x181A4A0", VA = "0x181A4A0")]
		public static object CreateObjectUninitialized(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x181A54C", Offset = "0x181A54C", VA = "0x181A54C")]
		public static Type RTReflectedType(this MemberInfo member)
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1819414", Offset = "0x1819414", VA = "0x1819414")]
		public static bool RTIsAssignableFrom(this Type type, Type other)
		{
			return default(bool);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x1819680", Offset = "0x1819680", VA = "0x1819680")]
		public static bool RTIsAbstract(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x181A5F4", Offset = "0x181A5F4", VA = "0x181A5F4")]
		public static bool RTIsValueType(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x181A60C", Offset = "0x181A60C", VA = "0x181A60C")]
		public static bool RTIsArray(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x181A624", Offset = "0x181A624", VA = "0x181A624")]
		public static bool RTIsInterface(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x181A63C", Offset = "0x181A63C", VA = "0x181A63C")]
		public static bool RTIsSubclassOf(this Type type, Type other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x1819AF0", Offset = "0x1819AF0", VA = "0x1819AF0")]
		public static bool RTIsGenericParameter(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1819B10", Offset = "0x1819B10", VA = "0x1819B10")]
		public static bool RTIsGenericType(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x181A65C", Offset = "0x181A65C", VA = "0x181A65C")]
		public static MethodInfo RTGetGetMethod(this PropertyInfo prop)
		{
			return null;
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x181A674", Offset = "0x181A674", VA = "0x181A674")]
		public static MethodInfo RTGetSetMethod(this PropertyInfo prop)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x1812A80", Offset = "0x1812A80", VA = "0x1812A80")]
		public static FieldInfo RTGetField(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x181A68C", Offset = "0x181A68C", VA = "0x181A68C")]
		public static PropertyInfo RTGetProperty(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x181A6A8", Offset = "0x181A6A8", VA = "0x181A6A8")]
		public static ConstructorInfo RTGetConstructor(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x181A7C8", Offset = "0x181A7C8", VA = "0x181A7C8")]
		public static ConstructorInfo RTGetConstructor(this Type type, Type[] paramTypes)
		{
			return null;
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x1811444", Offset = "0x1811444", VA = "0x1811444")]
		public static MethodInfo RTGetMethod(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x181A7F0", Offset = "0x181A7F0", VA = "0x181A7F0")]
		public static MethodInfo RTGetMethod(this Type type, string name, Type[] paramTypes)
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x1811420", Offset = "0x1811420", VA = "0x1811420")]
		public static EventInfo RTGetEvent(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x181A808", Offset = "0x181A808", VA = "0x181A808")]
		public static MethodInfo RTGetDelegateMethodInfo(this Delegate del)
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x181A820", Offset = "0x181A820", VA = "0x181A820")]
		public static ParameterInfo[] RTGetDelegateTypeParameters(this Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x181A97C", Offset = "0x181A97C", VA = "0x181A97C")]
		public static FieldInfo[] RTGetFields(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x181AA80", Offset = "0x181AA80", VA = "0x181AA80")]
		public static PropertyInfo[] RTGetProperties(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x181AB84", Offset = "0x181AB84", VA = "0x181AB84")]
		public static MethodInfo[] RTGetMethods(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x181AC88", Offset = "0x181AC88", VA = "0x181AC88")]
		public static ConstructorInfo[] RTGetConstructors(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x181AD8C", Offset = "0x181AD8C", VA = "0x181AD8C")]
		public static EventInfo[] RTGetEvents(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001165")]
		public static bool RTIsDefined<T>(this Type type, bool inherited) where T : Attribute
		{
			return default(bool);
		}

		[Token(Token = "0x6001166")]
		public static bool RTIsDefined<T>(this MemberInfo member, bool inherited) where T : Attribute
		{
			return default(bool);
		}

		[Token(Token = "0x6001167")]
		public static T RTGetAttribute<T>(this Type type, bool inherited) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6001168")]
		public static T RTGetAttribute<T>(this MemberInfo member, bool inherited) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6001169")]
		public static T[] RTGetAttributesRecursive<T>(this Type type) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x1818F84", Offset = "0x1818F84", VA = "0x1818F84")]
		public static Type RTMakeGenericType(this Type type, params Type[] typeArgs)
		{
			return null;
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x1818F64", Offset = "0x1818F64", VA = "0x1818F64")]
		public static Type[] RTGetGenericArguments(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x181AE90", Offset = "0x181AE90", VA = "0x181AE90")]
		public static Type[] RTGetEmptyTypes()
		{
			return null;
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x181AEF8", Offset = "0x181AEF8", VA = "0x181AEF8")]
		public static Type RTGetElementType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x181AF94", Offset = "0x181AF94", VA = "0x181AF94")]
		public static bool RTIsByRef(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600116F")]
		public static T RTCreateDelegate<T>(this MethodInfo method, object instance)
		{
			return (T)null;
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x1811460", Offset = "0x1811460", VA = "0x1811460")]
		public static Delegate RTCreateDelegate(this MethodInfo method, Type type, object instance)
		{
			return null;
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x181B028", Offset = "0x181B028", VA = "0x181B028")]
		public static Delegate ConvertDelegate(Delegate originalDelegate, Type targetDelegateType)
		{
			return null;
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x181B068", Offset = "0x181B068", VA = "0x181B068")]
		public static bool IsObsolete(this MemberInfo member, bool inherited = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x181B2BC", Offset = "0x181B2BC", VA = "0x181B2BC")]
		public static bool IsReadOnly(this FieldInfo field)
		{
			return default(bool);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x181B304", Offset = "0x181B304", VA = "0x181B304")]
		public static bool IsConstant(this FieldInfo field)
		{
			return default(bool);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x181B390", Offset = "0x181B390", VA = "0x181B390")]
		public static bool IsStatic(this EventInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x181A338", Offset = "0x181A338", VA = "0x181A338")]
		public static bool IsParams(this ParameterInfo parameter, ParameterInfo[] parameters)
		{
			return default(bool);
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x181B3E8", Offset = "0x181B3E8", VA = "0x181B3E8")]
		public static PropertyInfo GetBaseDefinition(this PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x181B610", Offset = "0x181B610", VA = "0x181B610")]
		public static FieldInfo GetBaseDefinition(this FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x181B6C0", Offset = "0x181B6C0", VA = "0x181B6C0")]
		public static MethodInfo[] GetExtensionMethods(this Type targetType)
		{
			return null;
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x181B9E4", Offset = "0x181B9E4", VA = "0x181B9E4")]
		public static bool IsExtensionMethod(this MethodInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x181B170", Offset = "0x181B170", VA = "0x181B170")]
		public static bool IsPropertyAccessor(this MethodInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x181BA58", Offset = "0x181BA58", VA = "0x181BA58")]
		public static bool IsIndexerProperty(this PropertyInfo property)
		{
			return default(bool);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x181B1E0", Offset = "0x181B1E0", VA = "0x181B1E0")]
		public static PropertyInfo GetAccessorProperty(this MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x181BA90", Offset = "0x181BA90", VA = "0x181BA90")]
		public static bool IsEnumerableCollection(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x181BBF8", Offset = "0x181BBF8", VA = "0x181BBF8")]
		public static Type GetEnumerableElementType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x181BDCC", Offset = "0x181BDCC", VA = "0x181BDCC")]
		public static Type GetFirstGenericParameterConstraintType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x181BF60", Offset = "0x181BF60", VA = "0x181BF60")]
		public static Type GetFirstGenericParameterConstraintType(this MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x181C0B0", Offset = "0x181C0B0", VA = "0x181C0B0")]
		public static bool CanBeMadeGenericWith(this MethodInfo def, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x181C5BC", Offset = "0x181C5BC", VA = "0x181C5BC")]
		public static bool CanBeMadeGenericWith(this Type def, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x181C1AC", Offset = "0x181C1AC", VA = "0x181C1AC")]
		public static bool IsAllowedByGenericArgument(this Type type, Type genericArgument)
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x181C6F0", Offset = "0x181C6F0", VA = "0x181C6F0")]
		public static Array Resize(this Array array, int newSize)
		{
			return null;
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x181C7E0", Offset = "0x181C7E0", VA = "0x181C7E0")]
		public static bool CanConvert(Type fromType, Type toType, out UnaryExpression exp)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000261")]
	public static class StringUtils
	{
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, string> splitCaseCache;

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x1952588", Offset = "0x1952588", VA = "0x1952588")]
		public static string SplitCamelCase(this string s)
		{
			return null;
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x19527D8", Offset = "0x19527D8", VA = "0x19527D8")]
		public static string CapLength(this string s, int max)
		{
			return null;
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x19528C0", Offset = "0x19528C0", VA = "0x19528C0")]
		public static string GetCapitals(this string s)
		{
			return null;
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x19529EC", Offset = "0x19529EC", VA = "0x19529EC")]
		public static string GetAlphabetLetter(int index)
		{
			return null;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1952A94", Offset = "0x1952A94", VA = "0x1952A94")]
		public static string GetStringWithin(this string input, string from, string to)
		{
			return null;
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1952B6C", Offset = "0x1952B6C", VA = "0x1952B6C")]
		public static bool SearchMatch(string input, string target)
		{
			return default(bool);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1952DAC", Offset = "0x1952DAC", VA = "0x1952DAC")]
		public static string ToStringAdvanced(this object o)
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Services
{
	[Token(Token = "0x2000262")]
	public static class Logger
	{
		[Token(Token = "0x20004E6")]
		public struct Message
		{
			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LogType type;

			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string text;

			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string tag;

			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object context;

			[Token(Token = "0x6002017")]
			[Address(RVA = "0x1124B40", Offset = "0x1124B40", VA = "0x1124B40")]
			public bool IsSameAs(Message b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002018")]
			[Address(RVA = "0x1124B70", Offset = "0x1124B70", VA = "0x1124B70")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004E7")]
		public delegate bool LogHandler(Message message);

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<LogHandler> subscribers;

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x194ED40", Offset = "0x194ED40", VA = "0x194ED40")]
		public static void AddListener(LogHandler callback)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x194EDC4", Offset = "0x194EDC4", VA = "0x194EDC4")]
		public static void RemoveListener(LogHandler callback)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x194EE48", Offset = "0x194EE48", VA = "0x194EE48")]
		public static void Log(object message, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x194F270", Offset = "0x194F270", VA = "0x194F270")]
		public static void LogWarning(object message, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x194F2F0", Offset = "0x194F2F0", VA = "0x194F2F0")]
		public static void LogError(object message, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x194F370", Offset = "0x194F370", VA = "0x194F370")]
		public static void LogException(Exception exception, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x194EEC8", Offset = "0x194EEC8", VA = "0x194EEC8")]
		private static void Internal_Log(LogType type, object message, string tag, object context)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x194F6C4", Offset = "0x194F6C4", VA = "0x194F6C4")]
		private static void ForwardToUnity(LogType type, object message, string tag, object context)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class MessageRouter : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler, IDragHandler, IScrollHandler, IUpdateSelectedHandler, ISelectHandler, IDeselectHandler, IMoveHandler, ISubmitHandler
	{
		[Token(Token = "0x20004E8")]
		public class MessageData
		{
			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5738", Offset = "0xFC5738")]
			private GameObject <receiver>k__BackingField;

			[Token(Token = "0x1700055A")]
			public GameObject receiver
			{
				[Token(Token = "0x600201D")]
				[Address(RVA = "0x195160C", Offset = "0x195160C", VA = "0x195160C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCE4C", Offset = "0xFCCE4C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600201E")]
				[Address(RVA = "0x1951614", Offset = "0x1951614", VA = "0x1951614")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCE5C", Offset = "0xFCCE5C")]
				private set
				{
				}
			}

			[Token(Token = "0x600201F")]
			[Address(RVA = "0x195161C", Offset = "0x195161C", VA = "0x195161C")]
			public MessageData()
			{
			}

			[Token(Token = "0x6002020")]
			[Address(RVA = "0x1951624", Offset = "0x1951624", VA = "0x1951624")]
			public MessageData(GameObject receiver)
			{
			}
		}

		[Token(Token = "0x20004E9")]
		public class MessageData<T> : MessageData
		{
			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5748", Offset = "0xFC5748")]
			private T <value>k__BackingField;

			[Token(Token = "0x1700055B")]
			public T value
			{
				[Token(Token = "0x6002021")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCE6C", Offset = "0xFCCE6C")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6002022")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCCE7C", Offset = "0xFCCE7C")]
				private set
				{
				}
			}

			[Token(Token = "0x6002023")]
			public MessageData(T value, GameObject receiver)
			{
			}
		}

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, List<object>> listeners;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private object _animator;

		[Token(Token = "0x17000296")]
		private Animator animator
		{
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x194FB10", Offset = "0x194FB10", VA = "0x194FB10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x194FBF8", Offset = "0x194FBF8", VA = "0x194FBF8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x194FC64", Offset = "0x194FC64", VA = "0x194FC64", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x194FCD0", Offset = "0x194FCD0", VA = "0x194FCD0", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x194FD3C", Offset = "0x194FD3C", VA = "0x194FD3C", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x194FDA8", Offset = "0x194FDA8", VA = "0x194FDA8", Slot = "8")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x194FE14", Offset = "0x194FE14", VA = "0x194FE14", Slot = "9")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x194FE80", Offset = "0x194FE80", VA = "0x194FE80")]
		public void OnDrop(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x194FEEC", Offset = "0x194FEEC", VA = "0x194FEEC", Slot = "10")]
		public void OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x194FF58", Offset = "0x194FF58", VA = "0x194FF58", Slot = "11")]
		public void OnUpdateSelected(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x194FFC4", Offset = "0x194FFC4", VA = "0x194FFC4", Slot = "12")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1950030", Offset = "0x1950030", VA = "0x1950030", Slot = "13")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x195009C", Offset = "0x195009C", VA = "0x195009C", Slot = "14")]
		public void OnMove(AxisEventData eventData)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1950108", Offset = "0x1950108", VA = "0x1950108", Slot = "15")]
		public void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1950174", Offset = "0x1950174", VA = "0x1950174")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x19501E0", Offset = "0x19501E0", VA = "0x19501E0")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x19502BC", Offset = "0x19502BC", VA = "0x19502BC")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x195030C", Offset = "0x195030C", VA = "0x195030C")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x195035C", Offset = "0x195035C", VA = "0x195035C")]
		private void OnCollisionEnter(Collision collisionInfo)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x19503C8", Offset = "0x19503C8", VA = "0x19503C8")]
		private void OnCollisionExit(Collision collisionInfo)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x1950434", Offset = "0x1950434", VA = "0x1950434")]
		private void OnCollisionStay(Collision collisionInfo)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x19504A0", Offset = "0x19504A0", VA = "0x19504A0")]
		private void OnCollisionEnter2D(Collision2D collisionInfo)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x195050C", Offset = "0x195050C", VA = "0x195050C")]
		private void OnCollisionExit2D(Collision2D collisionInfo)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1950578", Offset = "0x1950578", VA = "0x1950578")]
		private void OnCollisionStay2D(Collision2D collisionInfo)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x19505E4", Offset = "0x19505E4", VA = "0x19505E4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1950650", Offset = "0x1950650", VA = "0x1950650")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x19506BC", Offset = "0x19506BC", VA = "0x19506BC")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x1950728", Offset = "0x1950728", VA = "0x1950728")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x1950794", Offset = "0x1950794", VA = "0x1950794")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1950800", Offset = "0x1950800", VA = "0x1950800")]
		private void OnTriggerStay2D(Collider2D other)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x195086C", Offset = "0x195086C", VA = "0x195086C")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x19508BC", Offset = "0x19508BC", VA = "0x19508BC")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x195090C", Offset = "0x195090C", VA = "0x195090C")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x195095C", Offset = "0x195095C", VA = "0x195095C")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x19509AC", Offset = "0x19509AC", VA = "0x19509AC")]
		private void OnMouseOver()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x19509FC", Offset = "0x19509FC", VA = "0x19509FC")]
		private void OnMouseUp()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1950A4C", Offset = "0x1950A4C", VA = "0x1950A4C")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1950AB8", Offset = "0x1950AB8", VA = "0x1950AB8")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1950B24", Offset = "0x1950B24", VA = "0x1950B24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1950B74", Offset = "0x1950B74", VA = "0x1950B74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x1950BC4", Offset = "0x1950BC4", VA = "0x1950BC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1950C14", Offset = "0x1950C14", VA = "0x1950C14")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x1950C64", Offset = "0x1950C64", VA = "0x1950C64")]
		private void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1950CB4", Offset = "0x1950CB4", VA = "0x1950CB4")]
		public void OnCustomEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1950D20", Offset = "0x1950D20", VA = "0x1950D20")]
		public void Register(object target, params string[] messages)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1950F90", Offset = "0x1950F90", VA = "0x1950F90")]
		public void RegisterCallback(string message, Action callback)
		{
		}

		[Token(Token = "0x60011C7")]
		public void RegisterCallback<T>(string message, Action<T> callback)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x1950F94", Offset = "0x1950F94", VA = "0x1950F94")]
		private void Internal_RegisterCallback(string message, Delegate callback)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x195109C", Offset = "0x195109C", VA = "0x195109C")]
		public void UnRegister(object target)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x1951334", Offset = "0x1951334", VA = "0x1951334")]
		public void UnRegister(object target, params string[] messages)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1950258", Offset = "0x1950258", VA = "0x1950258")]
		public bool Dispatch(string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CC")]
		public bool Dispatch<T>(string message, T arg)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x195151C", Offset = "0x195151C", VA = "0x195151C")]
		public MessageRouter()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class MonoManager : MonoBehaviour
	{
		[Token(Token = "0x20004EA")]
		public enum UpdateMode
		{
			[Token(Token = "0x40015F7")]
			Auto,
			[Token(Token = "0x40015F8")]
			Manual
		}

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isQuiting;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MonoManager _current;

		[Token(Token = "0x17000297")]
		public static UpdateMode updateMode
		{
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x1951658", Offset = "0x1951658", VA = "0x1951658")]
			get
			{
				return default(UpdateMode);
			}
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x19517E4", Offset = "0x19517E4", VA = "0x19517E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public static MonoManager current
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x1951684", Offset = "0x1951684", VA = "0x1951684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000040")]
		public event Action onUpdate
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x1951818", Offset = "0x1951818", VA = "0x1951818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAF28", Offset = "0xFCAF28")]
			add
			{
			}
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x19518BC", Offset = "0x19518BC", VA = "0x19518BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAF38", Offset = "0xFCAF38")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action onLateUpdate
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x1951960", Offset = "0x1951960", VA = "0x1951960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAF48", Offset = "0xFCAF48")]
			add
			{
			}
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x1951A04", Offset = "0x1951A04", VA = "0x1951A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAF58", Offset = "0xFCAF58")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action onFixedUpdate
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x1951AA8", Offset = "0x1951AA8", VA = "0x1951AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAF68", Offset = "0xFCAF68")]
			add
			{
			}
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x1951B4C", Offset = "0x1951B4C", VA = "0x1951B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAF78", Offset = "0xFCAF78")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event Action onGUI
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x1951BF0", Offset = "0x1951BF0", VA = "0x1951BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAF88", Offset = "0xFCAF88")]
			add
			{
			}
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x1951C94", Offset = "0x1951C94", VA = "0x1951C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAF98", Offset = "0xFCAF98")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action onApplicationQuit
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x1951D38", Offset = "0x1951D38", VA = "0x1951D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAFA8", Offset = "0xFCAFA8")]
			add
			{
			}
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x1951DDC", Offset = "0x1951DDC", VA = "0x1951DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAFB8", Offset = "0xFCAFB8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action<bool> onApplicationPause
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x1951E80", Offset = "0x1951E80", VA = "0x1951E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAFC8", Offset = "0xFCAFC8")]
			add
			{
			}
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x1951F24", Offset = "0x1951F24", VA = "0x1951F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCAFD8", Offset = "0xFCAFD8")]
			remove
			{
			}
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x1951FC8", Offset = "0x1951FC8", VA = "0x1951FC8")]
		public static void Create()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x1952024", Offset = "0x1952024", VA = "0x1952024")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x1952094", Offset = "0x1952094", VA = "0x1952094")]
		private void OnApplicationPause(bool isPause)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x1952108", Offset = "0x1952108", VA = "0x1952108")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x195225C", Offset = "0x195225C", VA = "0x195225C")]
		public void Update()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x1952270", Offset = "0x1952270", VA = "0x1952270")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x1952284", Offset = "0x1952284", VA = "0x1952284")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x1952298", Offset = "0x1952298", VA = "0x1952298")]
		public MonoManager()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public static class Threader
	{
		[Token(Token = "0x20004EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9724", Offset = "0xFB9724")]
		private sealed class <>c__DisplayClass1_0<T1>
		{
			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> function;

			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x6002024")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002025")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9734", Offset = "0xFB9734")]
		private sealed class <>c__DisplayClass2_0<T1, T2>
		{
			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> function;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x6002026")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002027")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9744", Offset = "0xFB9744")]
		private sealed class <>c__DisplayClass3_0<T1, T2, T3>
		{
			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> function;

			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x4001600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 parameter3;

			[Token(Token = "0x6002028")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002029")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9754", Offset = "0xFB9754")]
		private sealed class <>c__DisplayClass4_0<TResult>
		{
			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TResult> function;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x600202A")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600202B")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x600202C")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9764", Offset = "0xFB9764")]
		private sealed class <>c__DisplayClass5_0<TResult, T1>
		{
			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, TResult> function;

			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x4001608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x600202D")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600202E")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x600202F")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9774", Offset = "0xFB9774")]
		private sealed class <>c__DisplayClass6_0<TResult, T1, T2>
		{
			[Token(Token = "0x4001609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x400160A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, T2, TResult> function;

			[Token(Token = "0x400160B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x400160C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x400160D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x6002030")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002031")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x6002032")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9784", Offset = "0xFB9784")]
		private sealed class <>c__DisplayClass7_0<TResult, T1, T2, T3>
		{
			[Token(Token = "0x400160E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x400160F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, T2, T3, TResult> function;

			[Token(Token = "0x4001610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x4001611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x4001612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 parameter3;

			[Token(Token = "0x4001613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x6002033")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002034")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x6002035")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9794", Offset = "0xFB9794")]
		private sealed class <ThreadUpdater>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Thread thread;

			[Token(Token = "0x4001617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x1700055C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002039")]
				[Address(RVA = "0x1952518", Offset = "0x1952518", VA = "0x1952518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600203B")]
				[Address(RVA = "0x1952580", Offset = "0x1952580", VA = "0x1952580", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002036")]
			[Address(RVA = "0x195243C", Offset = "0x195243C", VA = "0x195243C")]
			[DebuggerHidden]
			public <ThreadUpdater>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002037")]
			[Address(RVA = "0x1952468", Offset = "0x1952468", VA = "0x1952468", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002038")]
			[Address(RVA = "0x195246C", Offset = "0x195246C", VA = "0x195246C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600203A")]
			[Address(RVA = "0x1952520", Offset = "0x1952520", VA = "0x1952520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x19522A0", Offset = "0x19522A0", VA = "0x19522A0")]
		public static Thread StartAction(Action function, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60011E6")]
		public static Thread StartAction<T1>(Action<T1> function, T1 parameter1, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60011E7")]
		public static Thread StartAction<T1, T2>(Action<T1, T2> function, T1 parameter1, T2 parameter2, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60011E8")]
		public static Thread StartAction<T1, T2, T3>(Action<T1, T2, T3> function, T1 parameter1, T2 parameter2, T3 parameter3, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60011E9")]
		public static Thread StartFunction<TResult>(Func<TResult> function, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x60011EA")]
		public static Thread StartFunction<TResult, T1>(Func<T1, TResult> function, T1 parameter1, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		public static Thread StartFunction<TResult, T1, T2>(Func<T1, T2, TResult> function, T1 parameter1, T2 parameter2, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x60011EC")]
		public static Thread StartFunction<TResult, T1, T2, T3>(Func<T1, T2, T3, TResult> function, T1 parameter1, T2 parameter2, T3 parameter3, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x1952348", Offset = "0x1952348", VA = "0x1952348")]
		private static void Begin(Thread thread, Action callback)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x19523A4", Offset = "0x19523A4", VA = "0x19523A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCAFE8", Offset = "0xFCAFE8")]
		private static IEnumerator ThreadUpdater(Thread thread, Action callback)
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Serialization
{
	[Token(Token = "0x2000266")]
	public class DeserializeFromAttribute : Attribute
	{
		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] previousTypeNames;

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1D53FD4", Offset = "0x1D53FD4", VA = "0x1D53FD4")]
		public DeserializeFromAttribute(params string[] previousTypeNames)
		{
		}
	}
	[Token(Token = "0x2000267")]
	public interface IMissingRecoverable
	{
		[Token(Token = "0x17000299")]
		string missingType
		{
			[Token(Token = "0x60011F0")]
			get;
			[Token(Token = "0x60011F1")]
			set;
		}

		[Token(Token = "0x1700029A")]
		string recoveryState
		{
			[Token(Token = "0x60011F2")]
			get;
			[Token(Token = "0x60011F3")]
			set;
		}
	}
	[Token(Token = "0x2000268")]
	public static class JSONSerializer
	{
		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, fsData> cache;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static object serializerLock;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static fsSerializer serializer;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool init;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool applicationPlaying;

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x194BF28", Offset = "0x194BF28", VA = "0x194BF28")]
		public static string Serialize(Type type, object value, bool pretyJson = false, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x60011F5")]
		public static T Deserialize<T>(string serializedState, [Optional] List<UnityEngine.Object> objectReferences, [Optional] T deserialized)
		{
			return (T)null;
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x194C288", Offset = "0x194C288", VA = "0x194C288")]
		public static object Deserialize(Type type, string serializedState, [Optional] List<UnityEngine.Object> objectReferences, [Optional] object deserialized)
		{
			return null;
		}

		[Token(Token = "0x60011F7")]
		public static T Clone<T>(T original, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return (T)null;
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x194C698", Offset = "0x194C698", VA = "0x194C698")]
		public static object Clone(object original, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x194C744", Offset = "0x194C744", VA = "0x194C744")]
		public static void ShowData(string json, string name = "")
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000269")]
	public class SerializedConstructorInfo : SerializedMethodBaseInfo
	{
		[Serializable]
		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB97A4", Offset = "0xFB97A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, string> <>9__4_0;

			[Token(Token = "0x400161A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, Type> <>9__5_0;

			[Token(Token = "0x400161B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Type, bool> <>9__5_1;

			[Token(Token = "0x600203D")]
			[Address(RVA = "0x194D0C4", Offset = "0x194D0C4", VA = "0x194D0C4")]
			public <>c()
			{
			}

			[Token(Token = "0x600203E")]
			[Address(RVA = "0x194D0CC", Offset = "0x194D0CC", VA = "0x194D0CC")]
			internal string <OnBeforeSerialize>b__4_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x600203F")]
			[Address(RVA = "0x194D104", Offset = "0x194D104", VA = "0x194D104")]
			internal Type <OnAfterDeserialize>b__5_0(string n)
			{
				return null;
			}

			[Token(Token = "0x6002040")]
			[Address(RVA = "0x194D114", Offset = "0x194D114", VA = "0x194D114")]
			internal bool <OnAfterDeserialize>b__5_1(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _paramsInfo;

		[NonSerialized]
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConstructorInfo _constructor;

		[NonSerialized]
		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _hasChanged;

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x194C95C", Offset = "0x194C95C", VA = "0x194C95C", Slot = "9")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x194CB78", Offset = "0x194CB78", VA = "0x194CB78", Slot = "10")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x194CF4C", Offset = "0x194CF4C", VA = "0x194CF4C")]
		public SerializedConstructorInfo()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x194CF5C", Offset = "0x194CF5C", VA = "0x194CF5C")]
		public SerializedConstructorInfo(ConstructorInfo constructor)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x194CF94", Offset = "0x194CF94", VA = "0x194CF94")]
		public ConstructorInfo Get()
		{
			return null;
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x194CF9C", Offset = "0x194CF9C", VA = "0x194CF9C", Slot = "6")]
		public override MethodBase GetBase()
		{
			return null;
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x194CFA4", Offset = "0x194CFA4", VA = "0x194CFA4", Slot = "7")]
		public override bool HasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x194CFAC", Offset = "0x194CFAC", VA = "0x194CFAC", Slot = "8")]
		public override string GetMethodString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200026A")]
	public class SerializedEventInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EventInfo _event;

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x194D180", Offset = "0x194D180", VA = "0x194D180", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x194D270", Offset = "0x194D270", VA = "0x194D270", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x194D3D0", Offset = "0x194D3D0", VA = "0x194D3D0")]
		public SerializedEventInfo()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x194D3D8", Offset = "0x194D3D8", VA = "0x194D3D8")]
		public SerializedEventInfo(EventInfo info)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x194D40C", Offset = "0x194D40C", VA = "0x194D40C")]
		public EventInfo Get()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200026B")]
	public class SerializedFieldInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FieldInfo _field;

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x194D414", Offset = "0x194D414", VA = "0x194D414", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x194D504", Offset = "0x194D504", VA = "0x194D504", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x194D664", Offset = "0x194D664", VA = "0x194D664")]
		public SerializedFieldInfo()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x194D66C", Offset = "0x194D66C", VA = "0x194D66C")]
		public SerializedFieldInfo(FieldInfo info)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x194D6A0", Offset = "0x194D6A0", VA = "0x194D6A0")]
		public FieldInfo Get()
		{
			return null;
		}
	}
	[Token(Token = "0x200026C")]
	public abstract class SerializedMethodBaseInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x600120D")]
		public abstract MethodBase GetBase();

		[Token(Token = "0x600120E")]
		public abstract bool HasChanged();

		[Token(Token = "0x600120F")]
		public abstract string GetMethodString();

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x194D6A8", Offset = "0x194D6A8", VA = "0x194D6A8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001211")]
		public abstract void OnBeforeSerialize();

		[Token(Token = "0x6001212")]
		public abstract void OnAfterDeserialize();

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x194CF54", Offset = "0x194CF54", VA = "0x194CF54")]
		protected SerializedMethodBaseInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public class SerializedMethodInfo : SerializedMethodBaseInfo
	{
		[Serializable]
		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB97B4", Offset = "0xFB97B4")]
		private sealed class <>c
		{
			[Token(Token = "0x400161C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400161D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, string> <>9__5_0;

			[Token(Token = "0x400161E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, string> <>9__5_1;

			[Token(Token = "0x400161F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, Type> <>9__6_0;

			[Token(Token = "0x4001620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Type, bool> <>9__6_1;

			[Token(Token = "0x4001621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<string, Type> <>9__6_3;

			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ParameterInfo, Type> <>9__6_5;

			[Token(Token = "0x6002042")]
			[Address(RVA = "0x194E484", Offset = "0x194E484", VA = "0x194E484")]
			public <>c()
			{
			}

			[Token(Token = "0x6002043")]
			[Address(RVA = "0x194E48C", Offset = "0x194E48C", VA = "0x194E48C")]
			internal string <OnBeforeSerialize>b__5_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x6002044")]
			[Address(RVA = "0x194E4C4", Offset = "0x194E4C4", VA = "0x194E4C4")]
			internal string <OnBeforeSerialize>b__5_1(Type a)
			{
				return null;
			}

			[Token(Token = "0x6002045")]
			[Address(RVA = "0x194E4E8", Offset = "0x194E4E8", VA = "0x194E4E8")]
			internal Type <OnAfterDeserialize>b__6_0(string n)
			{
				return null;
			}

			[Token(Token = "0x6002046")]
			[Address(RVA = "0x194E4F8", Offset = "0x194E4F8", VA = "0x194E4F8")]
			internal bool <OnAfterDeserialize>b__6_1(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002047")]
			[Address(RVA = "0x194E564", Offset = "0x194E564", VA = "0x194E564")]
			internal Type <OnAfterDeserialize>b__6_3(string x)
			{
				return null;
			}

			[Token(Token = "0x6002048")]
			[Address(RVA = "0x194E574", Offset = "0x194E574", VA = "0x194E574")]
			internal Type <OnAfterDeserialize>b__6_5(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB97C4", Offset = "0xFB97C4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Type[] parameterTypes;

			[Token(Token = "0x6002049")]
			[Address(RVA = "0x194E304", Offset = "0x194E304", VA = "0x194E304")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600204A")]
			[Address(RVA = "0x194E594", Offset = "0x194E594", VA = "0x194E594")]
			internal bool <OnAfterDeserialize>b__2(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB97D4", Offset = "0xFB97D4")]
		private sealed class <>c__DisplayClass6_1
		{
			[Token(Token = "0x4001625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type[] genericArgumentTypes;

			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass6_0 CS$<>8__locals1;

			[Token(Token = "0x600204B")]
			[Address(RVA = "0x194E30C", Offset = "0x194E30C", VA = "0x194E30C")]
			public <>c__DisplayClass6_1()
			{
			}

			[Token(Token = "0x600204C")]
			[Address(RVA = "0x194E5D4", Offset = "0x194E5D4", VA = "0x194E5D4")]
			internal bool <OnAfterDeserialize>b__4(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _paramsInfo;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _genericArgumentsInfo;

		[NonSerialized]
		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MethodInfo _method;

		[NonSerialized]
		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _hasChanged;

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x194D6B4", Offset = "0x194D6B4", VA = "0x194D6B4", Slot = "9")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x194DA38", Offset = "0x194DA38", VA = "0x194DA38", Slot = "10")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x194E314", Offset = "0x194E314", VA = "0x194E314")]
		public SerializedMethodInfo()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x194E31C", Offset = "0x194E31C", VA = "0x194E31C")]
		public SerializedMethodInfo(MethodInfo method)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x194E354", Offset = "0x194E354", VA = "0x194E354")]
		public MethodInfo Get()
		{
			return null;
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x194E35C", Offset = "0x194E35C", VA = "0x194E35C", Slot = "6")]
		public override MethodBase GetBase()
		{
			return null;
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x194E364", Offset = "0x194E364", VA = "0x194E364", Slot = "7")]
		public override bool HasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x194E36C", Offset = "0x194E36C", VA = "0x194E36C", Slot = "8")]
		public override string GetMethodString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	public class SerializedTypeInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type _type;

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x194E7C0", Offset = "0x194E7C0", VA = "0x194E7C0", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x194E86C", Offset = "0x194E86C", VA = "0x194E86C", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x194E8B4", Offset = "0x194E8B4", VA = "0x194E8B4")]
		public SerializedTypeInfo()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x194E8BC", Offset = "0x194E8BC", VA = "0x194E8BC")]
		public SerializedTypeInfo(Type info)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x194E8F0", Offset = "0x194E8F0", VA = "0x194E8F0")]
		public Type Get()
		{
			return null;
		}
	}
	[Token(Token = "0x200026F")]
	public class fsRecoveryProcessor<TCanProcess, TMissing> : fsObjectProcessor where TMissing : TCanProcess, IMissingRecoverable
	{
		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB97E4", Offset = "0xFB97E4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Dictionary<string, fsData> json;

			[Token(Token = "0x600204D")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600204E")]
			internal bool <OnBeforeDeserialize>b__0(KeyValuePair<string, fsData> kvp)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB97F4", Offset = "0xFB97F4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<string, fsData>, string> <>9__1_1;

			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<string, fsData>, fsData> <>9__1_2;

			[Token(Token = "0x6002050")]
			public <>c()
			{
			}

			[Token(Token = "0x6002051")]
			internal string <OnBeforeDeserialize>b__1_1(KeyValuePair<string, fsData> c)
			{
				return null;
			}

			[Token(Token = "0x6002052")]
			internal fsData <OnBeforeDeserialize>b__1_2(KeyValuePair<string, fsData> c)
			{
				return null;
			}
		}

		[Token(Token = "0x6001221")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001222")]
		public override void OnBeforeDeserialize(Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x6001223")]
		public fsRecoveryProcessor()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class fsUnityObjectConverter : fsConverter
	{
		[Token(Token = "0x6001224")]
		[Address(RVA = "0x194E8F8", Offset = "0x194E8F8", VA = "0x194E8F8", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x194E9A4", Offset = "0x194E9A4", VA = "0x194E9A4", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x194E9AC", Offset = "0x194E9AC", VA = "0x194E9AC", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x194E9B4", Offset = "0x194E9B4", VA = "0x194E9B4", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x194EB80", Offset = "0x194EB80", VA = "0x194EB80", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x194ED38", Offset = "0x194ED38", VA = "0x194ED38", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x194C280", Offset = "0x194C280", VA = "0x194C280")]
		public fsUnityObjectConverter()
		{
		}
	}
}
namespace ParadoxNotion.Serialization.FullSerializer
{
	[Token(Token = "0x2000271")]
	public class fsConverterRegistrar
	{
		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AnimationCurve_DirectConverter Register_AnimationCurve_DirectConverter;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Bounds_DirectConverter Register_Bounds_DirectConverter;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static GUIStyleState_DirectConverter Register_GUIStyleState_DirectConverter;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static GUIStyle_DirectConverter Register_GUIStyle_DirectConverter;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Gradient_DirectConverter Register_Gradient_DirectConverter;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Keyframe_DirectConverter Register_Keyframe_DirectConverter;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static LayerMask_DirectConverter Register_LayerMask_DirectConverter;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static RectOffset_DirectConverter Register_RectOffset_DirectConverter;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Rect_DirectConverter Register_Rect_DirectConverter;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<Type> Converters;

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1D66448", Offset = "0x1D66448", VA = "0x1D66448")]
		static fsConverterRegistrar()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1D666CC", Offset = "0x1D666CC", VA = "0x1D666CC")]
		public fsConverterRegistrar()
		{
		}
	}
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2CF4", Offset = "0xFB2CF4")]
	public sealed class fsForwardAttribute : Attribute
	{
		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string MemberName;

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1D67178", Offset = "0x1D67178", VA = "0x1D67178")]
		public fsForwardAttribute(string memberName)
		{
		}
	}
	[Token(Token = "0x2000273")]
	public static class fsTypeExtensions
	{
		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9804", Offset = "0xFB9804")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool includeNamespace;

			[Token(Token = "0x6002053")]
			[Address(RVA = "0x194BF10", Offset = "0x194BF10", VA = "0x194BF10")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002054")]
			[Address(RVA = "0x194BF18", Offset = "0x194BF18", VA = "0x194BF18")]
			internal string <CSharpName>b__0(Type t)
			{
				return null;
			}
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x194B97C", Offset = "0x194B97C", VA = "0x194B97C")]
		public static string CSharpName(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x194BEA0", Offset = "0x194BEA0", VA = "0x194BEA0")]
		public static string CSharpName(this Type type, bool includeNamespace, bool ensureSafeDeclarationName)
		{
			return null;
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x194B984", Offset = "0x194B984", VA = "0x194B984")]
		public static string CSharpName(this Type type, bool includeNamespace)
		{
			return null;
		}
	}
	[Token(Token = "0x2000274")]
	public class fsMetaType
	{
		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9814", Offset = "0xFB9814")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400162C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MemberInfo member;

			[Token(Token = "0x6002055")]
			[Address(RVA = "0x1D6ACBC", Offset = "0x1D6ACBC", VA = "0x1D6ACBC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002056")]
			[Address(RVA = "0x1D6B550", Offset = "0x1D6B550", VA = "0x1D6B550")]
			internal bool <CollectProperties>b__0(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002057")]
			[Address(RVA = "0x1D6B5C8", Offset = "0x1D6B5C8", VA = "0x1D6B5C8")]
			internal bool <CollectProperties>b__1(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002058")]
			[Address(RVA = "0x1D6B640", Offset = "0x1D6B640", VA = "0x1D6B640")]
			internal bool <CollectProperties>b__2(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9824", Offset = "0xFB9824")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400162D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PropertyInfo property;

			[Token(Token = "0x6002059")]
			[Address(RVA = "0x1D6B2C8", Offset = "0x1D6B2C8", VA = "0x1D6B2C8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600205A")]
			[Address(RVA = "0x1D6B6B8", Offset = "0x1D6B6B8", VA = "0x1D6B6B8")]
			internal bool <CanSerializeProperty>b__0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9834", Offset = "0xFB9834")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400162E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo field;

			[Token(Token = "0x600205B")]
			[Address(RVA = "0x1D6B2D0", Offset = "0x1D6B2D0", VA = "0x1D6B2D0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600205C")]
			[Address(RVA = "0x1D6B730", Offset = "0x1D6B730", VA = "0x1D6B730")]
			internal bool <CanSerializeField>b__0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<fsConfig, Dictionary<Type, fsMetaType>> _configMetaTypes;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type ReflectedType;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _hasEmittedAotData;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC05DC", Offset = "0xFC05DC")]
		private fsMetaProperty[] <Properties>k__BackingField;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool? _hasDefaultConstructorCache;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool _isDefaultConstructorPublic;

		[Token(Token = "0x1700029B")]
		public fsMetaProperty[] Properties
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0x1D6B4C8", Offset = "0x1D6B4C8", VA = "0x1D6B4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB07C", Offset = "0xFCB07C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600123A")]
			[Address(RVA = "0x1D6B4D0", Offset = "0x1D6B4D0", VA = "0x1D6B4D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB08C", Offset = "0xFCB08C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public bool HasDefaultConstructor
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0x1D6B2D8", Offset = "0x1D6B2D8", VA = "0x1D6B2D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1D582A4", Offset = "0x1D582A4", VA = "0x1D582A4")]
		public static fsMetaType Get(fsConfig config, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1D6A748", Offset = "0x1D6A748", VA = "0x1D6A748")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1D6A660", Offset = "0x1D6A660", VA = "0x1D6A660")]
		private fsMetaType(fsConfig config, Type reflectedType)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1D6A7D8", Offset = "0x1D6A7D8", VA = "0x1D6A7D8")]
		private static void CollectProperties(fsConfig config, List<fsMetaProperty> properties, Type reflectedType)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1D6B19C", Offset = "0x1D6B19C", VA = "0x1D6B19C")]
		private static bool IsAutoProperty(PropertyInfo property, MemberInfo[] members)
		{
			return default(bool);
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1D6ACC4", Offset = "0x1D6ACC4", VA = "0x1D6ACC4")]
		private static bool CanSerializeProperty(fsConfig config, PropertyInfo property, MemberInfo[] members, bool annotationFreeValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1D6AFA8", Offset = "0x1D6AFA8", VA = "0x1D6AFA8")]
		private static bool CanSerializeField(fsConfig config, FieldInfo field, bool annotationFreeValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1D61EE0", Offset = "0x1D61EE0", VA = "0x1D61EE0")]
		public bool EmitAotData()
		{
			return default(bool);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1D58430", Offset = "0x1D58430", VA = "0x1D58430")]
		public object CreateInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x2000275")]
	public class fsAotCompilationManager
	{
		[Token(Token = "0x20004FD")]
		private struct AotCompilation
		{
			[Token(Token = "0x400162F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type Type;

			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public fsMetaProperty[] Members;

			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsConstructorPublic;
		}

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, string> _computedAotCompilations;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<AotCompilation> _uncomputedAotCompilations;

		[Token(Token = "0x1700029D")]
		public static Dictionary<Type, string> AvailableAotCompilations
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x1D6466C", Offset = "0x1D6466C", VA = "0x1D6466C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x1D65630", Offset = "0x1D65630", VA = "0x1D65630")]
		public static bool TryToPerformAotCompilation(fsConfig config, Type type, out string aotCompiledClassInCSharp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x1D65724", Offset = "0x1D65724", VA = "0x1D65724")]
		public static void AddAotCompilation(Type type, fsMetaProperty[] members, bool isConstructorPublic)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1D6582C", Offset = "0x1D6582C", VA = "0x1D6582C")]
		private static string GetConverterString(fsMetaProperty member)
		{
			return null;
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1D647D0", Offset = "0x1D647D0", VA = "0x1D647D0")]
		private static string GenerateDirectConverterForTypeInCSharp(Type type, fsMetaProperty[] members, bool isConstructorPublic)
		{
			return null;
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1D658EC", Offset = "0x1D658EC", VA = "0x1D658EC")]
		public fsAotCompilationManager()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public abstract class fsBaseConverter
	{
		[Serializable]
		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9844", Offset = "0xFB9844")]
		private sealed class <>c
		{
			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<fsDataType, string> <>9__6_0;

			[Token(Token = "0x600205E")]
			[Address(RVA = "0x1D65FAC", Offset = "0x1D65FAC", VA = "0x1D65FAC")]
			public <>c()
			{
			}

			[Token(Token = "0x600205F")]
			[Address(RVA = "0x1D65FB4", Offset = "0x1D65FB4", VA = "0x1D65FB4")]
			internal string <FailExpectedType>b__6_0(fsDataType t)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public fsSerializer Serializer;

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1D659A4", Offset = "0x1D659A4", VA = "0x1D659A4", Slot = "4")]
		public virtual object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1D65B64", Offset = "0x1D65B64", VA = "0x1D65B64", Slot = "5")]
		public virtual bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1D65C60", Offset = "0x1D65C60", VA = "0x1D65C60", Slot = "6")]
		public virtual bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001248")]
		public abstract fsResult TrySerialize(object instance, out fsData serialized, Type storageType);

		[Token(Token = "0x6001249")]
		public abstract fsResult TryDeserialize(fsData data, ref object instance, Type storageType);

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1D5A8CC", Offset = "0x1D5A8CC", VA = "0x1D5A8CC")]
		protected fsResult FailExpectedType(fsData data, params fsDataType[] types)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1D57F0C", Offset = "0x1D57F0C", VA = "0x1D57F0C")]
		protected fsResult CheckType(fsData data, fsDataType type)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1D5A3E4", Offset = "0x1D5A3E4", VA = "0x1D5A3E4")]
		protected fsResult CheckKey(fsData data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1D65CDC", Offset = "0x1D65CDC", VA = "0x1D65CDC")]
		protected fsResult CheckKey(Dictionary<string, fsData> data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600124E")]
		protected fsResult SerializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600124F")]
		protected fsResult DeserializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, out T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x1D65F3C", Offset = "0x1D65F3C", VA = "0x1D65F3C")]
		protected fsBaseConverter()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public static class fsGlobalConfig
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool SerializeDefaultValues;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool IsCaseSensitive;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static bool AllowInternalExceptions;
	}
	[Token(Token = "0x2000278")]
	public class fsConfig
	{
		[Serializable]
		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9854", Offset = "0xFB9854")]
		private sealed class <>c
		{
			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, MemberInfo, string> <>9__9_0;

			[Token(Token = "0x6002061")]
			[Address(RVA = "0x1D66364", Offset = "0x1D66364", VA = "0x1D66364")]
			public <>c()
			{
			}

			[Token(Token = "0x6002062")]
			[Address(RVA = "0x1D6636C", Offset = "0x1D6636C", VA = "0x1D6636C")]
			internal string <.ctor>b__9_0(string name, MemberInfo info)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type[] SerializeAttributes;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type[] IgnoreSerializeAttributes;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public fsMemberSerialization DefaultMemberSerialization;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<string, MemberInfo, string> GetJsonNameFromMemberName;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool SerializeNonAutoProperties;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool SerializeNonPublicSetProperties;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string CustomDateTimeFormatString;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool Serialize64BitIntegerAsString;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool SerializeEnumsAsInteger;

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x1D66038", Offset = "0x1D66038", VA = "0x1D66038")]
		public fsConfig()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public sealed class fsContext
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<Type, object> _contextObjects;

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x1D66374", Offset = "0x1D66374", VA = "0x1D66374")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001254")]
		public void Set<T>(T obj)
		{
		}

		[Token(Token = "0x6001255")]
		public bool Has<T>()
		{
			return default(bool);
		}

		[Token(Token = "0x6001256")]
		public T Get<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1D663CC", Offset = "0x1D663CC", VA = "0x1D663CC")]
		public fsContext()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public abstract class fsConverter : fsBaseConverter
	{
		[Token(Token = "0x6001258")]
		public abstract bool CanProcess(Type type);

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x1D587F0", Offset = "0x1D587F0", VA = "0x1D587F0")]
		protected fsConverter()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public enum fsDataType
	{
		[Token(Token = "0x4000C77")]
		Array,
		[Token(Token = "0x4000C78")]
		Object,
		[Token(Token = "0x4000C79")]
		Double,
		[Token(Token = "0x4000C7A")]
		Int64,
		[Token(Token = "0x4000C7B")]
		Boolean,
		[Token(Token = "0x4000C7C")]
		String,
		[Token(Token = "0x4000C7D")]
		Null
	}
	[Token(Token = "0x200027C")]
	public sealed class fsData
	{
		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object _value;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly fsData True;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly fsData False;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly fsData Null;

		[Token(Token = "0x1700029E")]
		public fsDataType Type
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x1D5989C", Offset = "0x1D5989C", VA = "0x1D5989C")]
			get
			{
				return default(fsDataType);
			}
		}

		[Token(Token = "0x1700029F")]
		public bool IsNull
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x1D66940", Offset = "0x1D66940", VA = "0x1D66940")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A0")]
		public bool IsDouble
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x1D61A64", Offset = "0x1D61A64", VA = "0x1D61A64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A1")]
		public bool IsInt64
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x1D5C5F0", Offset = "0x1D5C5F0", VA = "0x1D5C5F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A2")]
		public bool IsBool
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0x1D6459C", Offset = "0x1D6459C", VA = "0x1D6459C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A3")]
		public bool IsString
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x1D59834", Offset = "0x1D59834", VA = "0x1D59834")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A4")]
		public bool IsDictionary
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x1D5A774", Offset = "0x1D5A774", VA = "0x1D5A774")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A5")]
		public bool IsList
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x1D5A360", Offset = "0x1D5A360", VA = "0x1D5A360")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A6")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xFCF7E4", Offset = "0xFCF7E4")]
		public double AsDouble
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x1D61ACC", Offset = "0x1D61ACC", VA = "0x1D61ACC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002A7")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xFCF7F8", Offset = "0xFCF7F8")]
		public long AsInt64
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x1D5C658", Offset = "0x1D5C658", VA = "0x1D5C658")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170002A8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xFCF80C", Offset = "0xFCF80C")]
		public bool AsBool
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x1D61A14", Offset = "0x1D61A14", VA = "0x1D61A14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A9")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xFCF820", Offset = "0xFCF820")]
		public string AsString
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x1D59AAC", Offset = "0x1D59AAC", VA = "0x1D59AAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xFCF834", Offset = "0xFCF834")]
		public Dictionary<string, fsData> AsDictionary
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x1D5A7F8", Offset = "0x1D5A7F8", VA = "0x1D5A7F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xFCF848", Offset = "0xFCF848")]
		public List<fsData> AsList
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x1D57B90", Offset = "0x1D57B90", VA = "0x1D57B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1D666D4", Offset = "0x1D666D4", VA = "0x1D666D4")]
		public fsData()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1D611BC", Offset = "0x1D611BC", VA = "0x1D611BC")]
		public fsData(bool boolean)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1D6123C", Offset = "0x1D6123C", VA = "0x1D6123C")]
		public fsData(double f)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1D5C034", Offset = "0x1D5C034", VA = "0x1D5C034")]
		public fsData(long i)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x1D591B0", Offset = "0x1D591B0", VA = "0x1D591B0")]
		public fsData(string str)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x1D5B5B8", Offset = "0x1D5B5B8", VA = "0x1D5B5B8")]
		public fsData(Dictionary<string, fsData> dict)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x1D66704", Offset = "0x1D66704", VA = "0x1D66704")]
		public fsData(List<fsData> list)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x1D5B42C", Offset = "0x1D5B42C", VA = "0x1D5B42C")]
		public static fsData CreateDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x1D66738", Offset = "0x1D66738", VA = "0x1D66738")]
		public static fsData CreateList()
		{
			return null;
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1D57AF8", Offset = "0x1D57AF8", VA = "0x1D57AF8")]
		public static fsData CreateList(int capacity)
		{
			return null;
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1D667C8", Offset = "0x1D667C8", VA = "0x1D667C8")]
		internal void BecomeDictionary()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x1D668AC", Offset = "0x1D668AC", VA = "0x1D668AC")]
		internal fsData Clone()
		{
			return null;
		}

		[Token(Token = "0x6001274")]
		private T Cast<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x1D66950", Offset = "0x1D66950", VA = "0x1D66950", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x1D66AB0", Offset = "0x1D66AB0", VA = "0x1D66AB0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x1D66B24", Offset = "0x1D66B24", VA = "0x1D66B24")]
		public bool Equals(fsData other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1D66F58", Offset = "0x1D66F58", VA = "0x1D66F58")]
		public static bool operator ==(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1D5EE9C", Offset = "0x1D5EE9C", VA = "0x1D5EE9C")]
		public static bool operator !=(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1D67088", Offset = "0x1D67088", VA = "0x1D67088", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200027D")]
	public abstract class fsDirectConverter : fsBaseConverter
	{
		[Token(Token = "0x170002AC")]
		public abstract Type ModelType
		{
			[Token(Token = "0x600127C")]
			get;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x1D67170", Offset = "0x1D67170", VA = "0x1D67170")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public abstract class fsDirectConverter<TModel> : fsDirectConverter
	{
		[Token(Token = "0x170002AD")]
		public override Type ModelType
		{
			[Token(Token = "0x600127E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600127F")]
		public sealed override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001280")]
		public sealed override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001281")]
		protected abstract fsResult DoSerialize(TModel model, Dictionary<string, fsData> serialized);

		[Token(Token = "0x6001282")]
		protected abstract fsResult DoDeserialize(Dictionary<string, fsData> data, ref TModel model);

		[Token(Token = "0x6001283")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public sealed class fsMissingVersionConstructorException : Exception
	{
		[Token(Token = "0x6001284")]
		[Address(RVA = "0x1D637B0", Offset = "0x1D637B0", VA = "0x1D637B0")]
		public fsMissingVersionConstructorException(Type versionedType, Type constructorType)
		{
		}
	}
	[Token(Token = "0x2000280")]
	public sealed class fsDuplicateVersionNameException : Exception
	{
		[Token(Token = "0x6001285")]
		[Address(RVA = "0x1D63850", Offset = "0x1D63850", VA = "0x1D63850")]
		public fsDuplicateVersionNameException(Type typeA, Type typeB, string version)
		{
		}
	}
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2D18", Offset = "0xFB2D18")]
	public sealed class fsIgnoreAttribute : Attribute
	{
		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1D67218", Offset = "0x1D67218", VA = "0x1D67218")]
		public fsIgnoreAttribute()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class fsJsonParser
	{
		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _start;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _input;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly StringBuilder _cachedStringBuilder;

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x1D67220", Offset = "0x1D67220", VA = "0x1D67220")]
		private fsResult MakeFailure(string message)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x1D6748C", Offset = "0x1D6748C", VA = "0x1D6748C")]
		private bool TryMoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1D674C8", Offset = "0x1D674C8", VA = "0x1D674C8")]
		private bool HasValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1D674FC", Offset = "0x1D674FC", VA = "0x1D674FC")]
		private bool HasValue(int offset)
		{
			return default(bool);
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x1D67534", Offset = "0x1D67534", VA = "0x1D67534")]
		private char Character()
		{
			return default(char);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1D6753C", Offset = "0x1D6753C", VA = "0x1D6753C")]
		private char Character(int offset)
		{
			return default(char);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1D67564", Offset = "0x1D67564", VA = "0x1D67564")]
		private void SkipSpace()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1D67810", Offset = "0x1D67810", VA = "0x1D67810")]
		private bool IsHex(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1D6784C", Offset = "0x1D6784C", VA = "0x1D6784C")]
		private uint ParseSingleChar(char c1, uint multipliyer)
		{
			return default(uint);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x1D678A4", Offset = "0x1D678A4", VA = "0x1D678A4")]
		private uint ParseUnicode(char c1, char c2, char c3, char c4)
		{
			return default(uint);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x1D67A14", Offset = "0x1D67A14", VA = "0x1D67A14")]
		private fsResult TryUnescapeChar(out char escaped)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x1D680AC", Offset = "0x1D680AC", VA = "0x1D680AC")]
		private fsResult TryParseExact(string content)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x1D68200", Offset = "0x1D68200", VA = "0x1D68200")]
		private fsResult TryParseTrue(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x1D682E4", Offset = "0x1D682E4", VA = "0x1D682E4")]
		private fsResult TryParseFalse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x1D683C8", Offset = "0x1D683C8", VA = "0x1D683C8")]
		private fsResult TryParseNull(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x1D684BC", Offset = "0x1D684BC", VA = "0x1D684BC")]
		private bool IsSeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1D68550", Offset = "0x1D68550", VA = "0x1D68550")]
		private fsResult TryParseNumber(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1D68868", Offset = "0x1D68868", VA = "0x1D68868")]
		private fsResult TryParseString(out string str)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x1D68B38", Offset = "0x1D68B38", VA = "0x1D68B38")]
		private fsResult TryParseArray(out fsData arr)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1D690C4", Offset = "0x1D690C4", VA = "0x1D690C4")]
		private fsResult TryParseObject(out fsData obj)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x1D68E18", Offset = "0x1D68E18", VA = "0x1D68E18")]
		private fsResult RunParse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x1D69560", Offset = "0x1D69560", VA = "0x1D69560")]
		public static fsResult Parse(string input, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x1D696D0", Offset = "0x1D696D0", VA = "0x1D696D0")]
		public static fsData Parse(string input)
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x1D69634", Offset = "0x1D69634", VA = "0x1D69634")]
		private fsJsonParser(string input)
		{
		}
	}
	[Token(Token = "0x2000283")]
	public static class fsJsonPrinter
	{
		[Token(Token = "0x600129F")]
		[Address(RVA = "0x1D69768", Offset = "0x1D69768", VA = "0x1D69768")]
		private static void InsertSpacing(TextWriter stream, int count)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x1D697EC", Offset = "0x1D697EC", VA = "0x1D697EC")]
		private static string EscapeString(string str)
		{
			return null;
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x1D69AEC", Offset = "0x1D69AEC", VA = "0x1D69AEC")]
		private static void BuildCompressedString(fsData data, TextWriter stream)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x1D6A040", Offset = "0x1D6A040", VA = "0x1D6A040")]
		private static void BuildPrettyString(fsData data, TextWriter stream, int depth)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x1D6A4F4", Offset = "0x1D6A4F4", VA = "0x1D6A4F4")]
		public static void PrettyJson(fsData data, TextWriter outputStream)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1D6A4FC", Offset = "0x1D6A4FC", VA = "0x1D6A4FC")]
		public static string PrettyJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x1D6A65C", Offset = "0x1D6A65C", VA = "0x1D6A65C")]
		public static void CompressedJson(fsData data, StreamWriter outputStream)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x1D66954", Offset = "0x1D66954", VA = "0x1D66954")]
		public static string CompressedJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x1D69EA8", Offset = "0x1D69EA8", VA = "0x1D69EA8")]
		private static string ConvertDoubleToString(double d)
		{
			return null;
		}
	}
	[Token(Token = "0x2000284")]
	public enum fsMemberSerialization
	{
		[Token(Token = "0x4000C86")]
		OptIn,
		[Token(Token = "0x4000C87")]
		OptOut,
		[Token(Token = "0x4000C88")]
		Default
	}
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2D2C", Offset = "0xFB2D2C")]
	public sealed class fsObjectAttribute : Attribute
	{
		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type[] PreviousModels;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string VersionString;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public fsMemberSerialization MemberSerialization;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Type Converter;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Type Processor;

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x1D6B7A8", Offset = "0x1D6B7A8", VA = "0x1D6B7A8")]
		public fsObjectAttribute()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x1D6B7B8", Offset = "0x1D6B7B8", VA = "0x1D6B7B8")]
		public fsObjectAttribute(string versionString, params Type[] previousModels)
		{
		}
	}
	[Token(Token = "0x2000286")]
	public abstract class fsObjectProcessor
	{
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x1D6B810", Offset = "0x1D6B810", VA = "0x1D6B810", Slot = "4")]
		public virtual bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x1D6B870", Offset = "0x1D6B870", VA = "0x1D6B870", Slot = "5")]
		public virtual void OnBeforeSerialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x1D6B874", Offset = "0x1D6B874", VA = "0x1D6B874", Slot = "6")]
		public virtual void OnAfterSerialize(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x1D6B878", Offset = "0x1D6B878", VA = "0x1D6B878", Slot = "7")]
		public virtual void OnBeforeDeserialize(Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x1D6B87C", Offset = "0x1D6B87C", VA = "0x1D6B87C", Slot = "8")]
		public virtual void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1D6B880", Offset = "0x1D6B880", VA = "0x1D6B880", Slot = "9")]
		public virtual void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1D6B884", Offset = "0x1D6B884", VA = "0x1D6B884")]
		protected fsObjectProcessor()
		{
		}
	}
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2D40", Offset = "0xFB2D40")]
	public sealed class fsPropertyAttribute : Attribute
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type Converter;

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x1D6B88C", Offset = "0x1D6B88C", VA = "0x1D6B88C")]
		public fsPropertyAttribute()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1D6B8F8", Offset = "0x1D6B8F8", VA = "0x1D6B8F8")]
		public fsPropertyAttribute(string name)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public struct fsResult
	{
		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] EmptyStringArray;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _success;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<string> _messages;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static fsResult Success;

		[Token(Token = "0x170002AE")]
		public bool Failed
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x11353C0", Offset = "0x11353C0", VA = "0x11353C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AF")]
		public bool Succeeded
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x11353D0", Offset = "0x11353D0", VA = "0x11353D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B0")]
		public bool HasWarnings
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x11353D8", Offset = "0x11353D8", VA = "0x11353D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B1")]
		public Exception AsException
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x11353F0", Offset = "0x11353F0", VA = "0x11353F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		public IEnumerable<string> RawMessages
		{
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x11353F8", Offset = "0x11353F8", VA = "0x11353F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public string FormattedMessages
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0x1135400", Offset = "0x1135400", VA = "0x1135400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x11353A8", Offset = "0x11353A8", VA = "0x11353A8")]
		public void AddMessage(string message)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x11353B0", Offset = "0x11353B0", VA = "0x11353B0")]
		public void AddMessages(fsResult result)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x11353B8", Offset = "0x11353B8", VA = "0x11353B8")]
		public fsResult Merge(fsResult other)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x1D5B85C", Offset = "0x1D5B85C", VA = "0x1D5B85C")]
		public static fsResult Warn(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x1D59A04", Offset = "0x1D59A04", VA = "0x1D59A04")]
		public static fsResult Fail(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x1D541A0", Offset = "0x1D541A0", VA = "0x1D541A0")]
		public static fsResult operator +(fsResult a, fsResult b)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x11353E0", Offset = "0x11353E0", VA = "0x11353E0")]
		public fsResult AssertSuccess()
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x11353E8", Offset = "0x11353E8", VA = "0x11353E8")]
		public fsResult AssertSuccessWithoutWarnings()
		{
			return default(fsResult);
		}
	}
	[Token(Token = "0x2000289")]
	public class fsSerializer
	{
		[Token(Token = "0x2000500")]
		internal class fsLazyCycleDefinitionWriter
		{
			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<int, fsData> _pendingDefinitions;

			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HashSet<int> _references;

			[Token(Token = "0x6002063")]
			[Address(RVA = "0x194B538", Offset = "0x194B538", VA = "0x194B538")]
			public void WriteDefinition(int id, fsData data)
			{
			}

			[Token(Token = "0x6002064")]
			[Address(RVA = "0x194B684", Offset = "0x194B684", VA = "0x194B684")]
			public void WriteReference(int id, Dictionary<string, fsData> dict)
			{
			}

			[Token(Token = "0x6002065")]
			[Address(RVA = "0x194B85C", Offset = "0x194B85C", VA = "0x194B85C")]
			public void Clear()
			{
			}

			[Token(Token = "0x6002066")]
			[Address(RVA = "0x194B8CC", Offset = "0x194B8CC", VA = "0x194B8CC")]
			public fsLazyCycleDefinitionWriter()
			{
			}
		}

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<string> _reservedKeywords;

		[Token(Token = "0x4000C95")]
		private const string Key_ObjectReference = "$ref";

		[Token(Token = "0x4000C96")]
		private const string Key_ObjectDefinition = "$id";

		[Token(Token = "0x4000C97")]
		private const string Key_InstanceType = "$type";

		[Token(Token = "0x4000C98")]
		private const string Key_Version = "$version";

		[Token(Token = "0x4000C99")]
		private const string Key_Content = "$content";

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Type, fsBaseConverter> _cachedConverterTypeInstances;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, fsBaseConverter> _cachedConverters;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Type, List<fsObjectProcessor>> _cachedProcessors;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<fsConverter> _availableConverters;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<Type, fsDirectConverter> _availableDirectConverters;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<fsObjectProcessor> _processors;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly fsCyclicReferenceManager _references;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly fsLazyCycleDefinitionWriter _lazyReferenceWriter;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public fsContext Context;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public fsConfig Config;

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x1D6BDCC", Offset = "0x1D6BDCC", VA = "0x1D6BDCC")]
		static fsSerializer()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x1D5A848", Offset = "0x1D5A848", VA = "0x1D5A848")]
		public static bool IsReservedKeyword(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x1D6BECC", Offset = "0x1D6BECC", VA = "0x1D6BECC")]
		private static bool IsObjectReference(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x1D6BF54", Offset = "0x1D6BF54", VA = "0x1D6BF54")]
		private static bool IsObjectDefinition(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x1D6BFDC", Offset = "0x1D6BFDC", VA = "0x1D6BFDC")]
		private static bool IsVersioned(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x1D6C064", Offset = "0x1D6C064", VA = "0x1D6C064")]
		private static bool IsTypeSpecified(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x1D6C0EC", Offset = "0x1D6C0EC", VA = "0x1D6C0EC")]
		private static bool IsWrappedData(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x1D6C174", Offset = "0x1D6C174", VA = "0x1D6C174")]
		public static void StripDeserializationMetadata(ref fsData data)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x1D6C2BC", Offset = "0x1D6C2BC", VA = "0x1D6C2BC")]
		private static void Invoke_OnBeforeSerialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x1D6C468", Offset = "0x1D6C468", VA = "0x1D6C468")]
		private static void Invoke_OnAfterSerialize(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x1D6C528", Offset = "0x1D6C528", VA = "0x1D6C528")]
		private static void Invoke_OnBeforeDeserialize(List<fsObjectProcessor> processors, Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x1D6C5D4", Offset = "0x1D6C5D4", VA = "0x1D6C5D4")]
		private static void Invoke_OnBeforeDeserializeAfterInstanceCreation(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x1D6C690", Offset = "0x1D6C690", VA = "0x1D6C690")]
		private static void Invoke_OnAfterDeserialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x1D6C850", Offset = "0x1D6C850", VA = "0x1D6C850")]
		private static void EnsureDictionary(fsData data)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1D6C8EC", Offset = "0x1D6C8EC", VA = "0x1D6C8EC")]
		public fsSerializer()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x1D6D114", Offset = "0x1D6D114", VA = "0x1D6D114")]
		public void AddProcessor(fsObjectProcessor processor)
		{
		}

		[Token(Token = "0x60012D2")]
		public void RemoveProcessor<TProcessor>()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x1D6D1B0", Offset = "0x1D6D1B0", VA = "0x1D6D1B0")]
		private List<fsObjectProcessor> GetProcessors(Type type)
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x1D6CF44", Offset = "0x1D6CF44", VA = "0x1D6CF44")]
		public void AddConverter(fsBaseConverter converter)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x1D6D41C", Offset = "0x1D6D41C", VA = "0x1D6D41C")]
		private fsBaseConverter GetConverter(Type type, Type overrideConverterType)
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		public fsResult TrySerialize<T>(T instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012D7")]
		public fsResult TryDeserialize<T>(fsData data, ref T instance)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x1D57BE0", Offset = "0x1D57BE0", VA = "0x1D57BE0")]
		public fsResult TrySerialize(Type storageType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x1D61FE0", Offset = "0x1D61FE0", VA = "0x1D61FE0")]
		public fsResult TrySerialize(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1D6D828", Offset = "0x1D6D828", VA = "0x1D6D828")]
		private fsResult InternalSerialize_1_ProcessCycles(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x1D6DB00", Offset = "0x1D6DB00", VA = "0x1D6DB00")]
		private fsResult InternalSerialize_2_Inheritance(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x1D6DCC4", Offset = "0x1D6DCC4", VA = "0x1D6DCC4")]
		private fsResult InternalSerialize_4_Converter(Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x1D5820C", Offset = "0x1D5820C", VA = "0x1D5820C")]
		public fsResult TryDeserialize(fsData data, Type storageType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x1D623C8", Offset = "0x1D623C8", VA = "0x1D623C8")]
		public fsResult TryDeserialize(fsData data, Type storageType, Type overrideConverterType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x1D6DD3C", Offset = "0x1D6DD3C", VA = "0x1D6DD3C")]
		private fsResult InternalDeserialize_1_CycleReference(Type overrideConverterType, fsData data, Type storageType, ref object result, out List<fsObjectProcessor> processors)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x1D6DEB0", Offset = "0x1D6DEB0", VA = "0x1D6DEB0")]
		private fsResult InternalDeserialize_3_Inheritance(Type overrideConverterType, fsData data, Type storageType, ref object result, out List<fsObjectProcessor> processors)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x1D6E340", Offset = "0x1D6E340", VA = "0x1D6E340")]
		private fsResult InternalDeserialize_4_Cycles(Type overrideConverterType, fsData data, Type resultType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x1D6E438", Offset = "0x1D6E438", VA = "0x1D6E438")]
		private fsResult InternalDeserialize_5_Converter(Type overrideConverterType, fsData data, Type resultType, ref object result)
		{
			return default(fsResult);
		}
	}
}
namespace ParadoxNotion.Serialization.FullSerializer.Internal
{
	[Token(Token = "0x200028A")]
	public class fsArrayConverter : fsConverter
	{
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x1D577BC", Offset = "0x1D577BC", VA = "0x1D577BC", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x1D577D8", Offset = "0x1D577D8", VA = "0x1D577D8", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x1D577E0", Offset = "0x1D577E0", VA = "0x1D577E0", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x1D577E8", Offset = "0x1D577E8", VA = "0x1D577E8", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x1D57CB8", Offset = "0x1D57CB8", VA = "0x1D57CB8", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x1D58218", Offset = "0x1D58218", VA = "0x1D58218", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x1D587E8", Offset = "0x1D587E8", VA = "0x1D587E8")]
		public fsArrayConverter()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class fsDateConverter : fsConverter
	{
		[Token(Token = "0x4000CA4")]
		private const string DefaultDateTimeFormatString = "o";

		[Token(Token = "0x4000CA5")]
		private const string DateTimeOffsetFormatString = "o";

		[Token(Token = "0x170002B4")]
		private string DateTimeFormatString
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x1D58E54", Offset = "0x1D58E54", VA = "0x1D58E54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x1D58EC0", Offset = "0x1D58EC0", VA = "0x1D58EC0", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x1D58FE8", Offset = "0x1D58FE8", VA = "0x1D58FE8", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x1D591E4", Offset = "0x1D591E4", VA = "0x1D591E4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x1D59AFC", Offset = "0x1D59AFC", VA = "0x1D59AFC")]
		public fsDateConverter()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class fsDictionaryConverter : fsConverter
	{
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x1D59B04", Offset = "0x1D59B04", VA = "0x1D59B04", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x1D59B94", Offset = "0x1D59B94", VA = "0x1D59B94", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x1D59C20", Offset = "0x1D59C20", VA = "0x1D59C20", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x1D5AC60", Offset = "0x1D5AC60", VA = "0x1D5AC60", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x1D5A430", Offset = "0x1D5A430", VA = "0x1D5A430")]
		private fsResult AddItemToDictionary(IDictionary dictionary, object key, object value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x1D5A1F8", Offset = "0x1D5A1F8", VA = "0x1D5A1F8")]
		private static void GetKeyValueTypes(Type dictionaryType, out Type keyStorageType, out Type valueStorageType)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x1D5BA78", Offset = "0x1D5BA78", VA = "0x1D5BA78")]
		public fsDictionaryConverter()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class fsEnumConverter : fsConverter
	{
		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x1D5BA80", Offset = "0x1D5BA80", VA = "0x1D5BA80", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x1D5BAFC", Offset = "0x1D5BAFC", VA = "0x1D5BAFC", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1D5BB04", Offset = "0x1D5BB04", VA = "0x1D5BB04", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x1D5BB0C", Offset = "0x1D5BB0C", VA = "0x1D5BB0C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x1D5BBA4", Offset = "0x1D5BBA4", VA = "0x1D5BBA4", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x1D5C0B4", Offset = "0x1D5C0B4", VA = "0x1D5C0B4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60012FC")]
		private static bool ArrayContains<T>(T[] values, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x1D5C6A8", Offset = "0x1D5C6A8", VA = "0x1D5C6A8")]
		public fsEnumConverter()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class fsForwardConverter : fsConverter
	{
		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _memberName;

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1D5C6B0", Offset = "0x1D5C6B0", VA = "0x1D5C6B0")]
		public fsForwardConverter(fsForwardAttribute attribute)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x1D5C6EC", Offset = "0x1D5C6EC", VA = "0x1D5C6EC", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x1D5C758", Offset = "0x1D5C758", VA = "0x1D5C758")]
		private fsResult GetProperty(object instance, out fsMetaProperty property)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x1D5C934", Offset = "0x1D5C934", VA = "0x1D5C934", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x1D5CBC4", Offset = "0x1D5CBC4", VA = "0x1D5CBC4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1D5CF10", Offset = "0x1D5CF10", VA = "0x1D5CF10", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}
	}
	[Token(Token = "0x200028F")]
	public class fsGuidConverter : fsConverter
	{
		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1D5CF9C", Offset = "0x1D5CF9C", VA = "0x1D5CF9C", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x1D5D020", Offset = "0x1D5D020", VA = "0x1D5D020", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1D5D028", Offset = "0x1D5D028", VA = "0x1D5D028", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1D5D030", Offset = "0x1D5D030", VA = "0x1D5D030", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1D5D140", Offset = "0x1D5D140", VA = "0x1D5D140", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1D5D288", Offset = "0x1D5D288", VA = "0x1D5D288", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1D5D2E4", Offset = "0x1D5D2E4", VA = "0x1D5D2E4")]
		public fsGuidConverter()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class fsIEnumerableConverter : fsConverter
	{
		[Token(Token = "0x600130B")]
		[Address(RVA = "0x1D5D2EC", Offset = "0x1D5D2EC", VA = "0x1D5D2EC", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x1D5D538", Offset = "0x1D5D538", VA = "0x1D5D538", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x1D5D5C4", Offset = "0x1D5D5C4", VA = "0x1D5D5C4", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x1D5DC04", Offset = "0x1D5DC04", VA = "0x1D5DC04")]
		private bool IsStack(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x1D5DD0C", Offset = "0x1D5DD0C", VA = "0x1D5DD0C", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x1D5DAE8", Offset = "0x1D5DAE8", VA = "0x1D5DAE8")]
		private static int HintSize(IEnumerable collection)
		{
			return default(int);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x1D5D9A0", Offset = "0x1D5D9A0", VA = "0x1D5D9A0")]
		private static Type GetElementType(Type objectType)
		{
			return null;
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x1D5E318", Offset = "0x1D5E318", VA = "0x1D5E318")]
		private static void TryClear(Type type, object instance)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x1D5E3D4", Offset = "0x1D5E3D4", VA = "0x1D5E3D4")]
		private static int TryGetExistingSize(Type type, object instance)
		{
			return default(int);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x1D5D3A4", Offset = "0x1D5D3A4", VA = "0x1D5D3A4")]
		private static MethodInfo GetAddMethod(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x1D5E724", Offset = "0x1D5E724", VA = "0x1D5E724")]
		public fsIEnumerableConverter()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class fsKeyValuePairConverter : fsConverter
	{
		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1D5E72C", Offset = "0x1D5E72C", VA = "0x1D5E72C", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x1D5E81C", Offset = "0x1D5E81C", VA = "0x1D5E81C", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x1D5E824", Offset = "0x1D5E824", VA = "0x1D5E824", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x1D5E82C", Offset = "0x1D5E82C", VA = "0x1D5E82C", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x1D5EAF0", Offset = "0x1D5EAF0", VA = "0x1D5EAF0", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x1D5EF1C", Offset = "0x1D5EF1C", VA = "0x1D5EF1C")]
		public fsKeyValuePairConverter()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class fsNullableConverter : fsConverter
	{
		[Token(Token = "0x600131C")]
		[Address(RVA = "0x1D5F2B0", Offset = "0x1D5F2B0", VA = "0x1D5F2B0", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x1D5F3A0", Offset = "0x1D5F3A0", VA = "0x1D5F3A0", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x1D5F3F4", Offset = "0x1D5F3F4", VA = "0x1D5F3F4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x1D5F448", Offset = "0x1D5F448", VA = "0x1D5F448", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x1D5F450", Offset = "0x1D5F450", VA = "0x1D5F450")]
		public fsNullableConverter()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class fsPrimitiveConverter : fsConverter
	{
		[Token(Token = "0x6001321")]
		[Address(RVA = "0x1D6052C", Offset = "0x1D6052C", VA = "0x1D6052C", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x1D60648", Offset = "0x1D60648", VA = "0x1D60648", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x1D60650", Offset = "0x1D60650", VA = "0x1D60650", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1D60658", Offset = "0x1D60658", VA = "0x1D60658")]
		private static bool UseBool(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x1D606DC", Offset = "0x1D606DC", VA = "0x1D606DC")]
		private static bool UseInt64(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x1D60958", Offset = "0x1D60958", VA = "0x1D60958")]
		private static bool UseDouble(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1D60A80", Offset = "0x1D60A80", VA = "0x1D60A80")]
		private static bool UseString(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1D60B64", Offset = "0x1D60B64", VA = "0x1D60B64", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x1D612BC", Offset = "0x1D612BC", VA = "0x1D612BC", Slot = "8")]
		public override fsResult TryDeserialize(fsData storage, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1D61B1C", Offset = "0x1D61B1C", VA = "0x1D61B1C")]
		public fsPrimitiveConverter()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class fsReflectedConverter : fsConverter
	{
		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1D61B24", Offset = "0x1D61B24", VA = "0x1D61B24", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1D61BFC", Offset = "0x1D61BFC", VA = "0x1D61BFC", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1D62198", Offset = "0x1D62198", VA = "0x1D62198", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1D626C8", Offset = "0x1D626C8", VA = "0x1D626C8", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1D62754", Offset = "0x1D62754", VA = "0x1D62754")]
		public fsReflectedConverter()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class fsTypeConverter : fsConverter
	{
		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1D627F4", Offset = "0x1D627F4", VA = "0x1D627F4", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1D62884", Offset = "0x1D62884", VA = "0x1D62884", Slot = "5")]
		public override bool RequestCycleSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1D6288C", Offset = "0x1D6288C", VA = "0x1D6288C", Slot = "6")]
		public override bool RequestInheritanceSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x1D62894", Offset = "0x1D62894", VA = "0x1D62894", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x1D629A4", Offset = "0x1D629A4", VA = "0x1D629A4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1D62B1C", Offset = "0x1D62B1C", VA = "0x1D62B1C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x1D62B24", Offset = "0x1D62B24", VA = "0x1D62B24")]
		public fsTypeConverter()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class fsWeakReferenceConverter : fsConverter
	{
		[Token(Token = "0x6001337")]
		[Address(RVA = "0x1D64004", Offset = "0x1D64004", VA = "0x1D64004", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1D64088", Offset = "0x1D64088", VA = "0x1D64088", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x1D64090", Offset = "0x1D64090", VA = "0x1D64090", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x1D64098", Offset = "0x1D64098", VA = "0x1D64098", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1D642D0", Offset = "0x1D642D0", VA = "0x1D642D0", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x1D64604", Offset = "0x1D64604", VA = "0x1D64604", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1D64664", Offset = "0x1D64664", VA = "0x1D64664")]
		public fsWeakReferenceConverter()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class fsCyclicReferenceManager
	{
		[Token(Token = "0x2000501")]
		private class ObjectReferenceEqualityComparator : IEqualityComparer<object>
		{
			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly IEqualityComparer<object> Instance;

			[Token(Token = "0x6002067")]
			[Address(RVA = "0x1D58DCC", Offset = "0x1D58DCC", VA = "0x1D58DCC", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Object>.Equals(object x, object y)
			{
				return default(bool);
			}

			[Token(Token = "0x6002068")]
			[Address(RVA = "0x1D58DD8", Offset = "0x1D58DD8", VA = "0x1D58DD8", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(object obj)
			{
				return default(int);
			}

			[Token(Token = "0x6002069")]
			[Address(RVA = "0x1D58DE4", Offset = "0x1D58DE4", VA = "0x1D58DE4")]
			public ObjectReferenceEqualityComparator()
			{
			}
		}

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<object, int> _objectIds;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _nextId;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, object> _marked;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _depth;

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1D587F8", Offset = "0x1D587F8", VA = "0x1D587F8")]
		public void Enter()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x1D58808", Offset = "0x1D58808", VA = "0x1D58808")]
		public bool Exit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x1D58950", Offset = "0x1D58950", VA = "0x1D58950")]
		public object GetReferenceObject(int id)
		{
			return null;
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x1D58A54", Offset = "0x1D58A54", VA = "0x1D58A54")]
		public void AddReferenceWithId(int id, object reference)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x1D58AC4", Offset = "0x1D58AC4", VA = "0x1D58AC4")]
		public int GetReferenceId(object item)
		{
			return default(int);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x1D58B6C", Offset = "0x1D58B6C", VA = "0x1D58B6C")]
		public bool IsReference(object item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x1D58BE4", Offset = "0x1D58BE4", VA = "0x1D58BE4")]
		public void MarkSerialized(object item)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x1D58CE4", Offset = "0x1D58CE4", VA = "0x1D58CE4")]
		public fsCyclicReferenceManager()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public struct fsOption<T>
	{
		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasValue;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _value;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static fsOption<T> Empty;

		[Token(Token = "0x170002B5")]
		public bool HasValue
		{
			[Token(Token = "0x6001346")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B6")]
		public bool IsEmpty
		{
			[Token(Token = "0x6001347")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B7")]
		public T Value
		{
			[Token(Token = "0x6001348")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001349")]
		public fsOption(T value)
		{
		}
	}
	[Token(Token = "0x2000299")]
	public static class fsOption
	{
		[Token(Token = "0x600134A")]
		public static fsOption<T> Just<T>(T value)
		{
			return default(fsOption<T>);
		}
	}
	[Token(Token = "0x200029A")]
	public static class fsPortableReflection
	{
		[Token(Token = "0x2000502")]
		private struct AttributeQuery
		{
			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MemberInfo MemberInfo;

			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Type AttributeType;
		}

		[Token(Token = "0x2000503")]
		private class AttributeQueryComparator : IEqualityComparer<AttributeQuery>
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x1D60424", Offset = "0x1D60424", VA = "0x1D60424", Slot = "4")]
			public bool Equals(AttributeQuery x, AttributeQuery y)
			{
				return default(bool);
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0x1D604D8", Offset = "0x1D604D8", VA = "0x1D604D8", Slot = "5")]
			public int GetHashCode(AttributeQuery obj)
			{
				return default(int);
			}

			[Token(Token = "0x600206D")]
			[Address(RVA = "0x1D600E4", Offset = "0x1D600E4", VA = "0x1D600E4")]
			public AttributeQueryComparator()
			{
			}
		}

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9864", Offset = "0xFB9864")]
		private sealed class <GetFlattenedMethods>d__16 : IEnumerable<MethodInfo>, IEnumerable, IEnumerator<MethodInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MethodInfo <>2__current;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Type type;

			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Type <>3__type;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string methodName;

			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string <>3__methodName;

			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private MethodInfo[] <methods>5__2;

			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <i>5__3;

			[Token(Token = "0x1700055E")]
			private MethodInfo System.Collections.Generic.IEnumerator<System.Reflection.MethodInfo>.Current
			{
				[Token(Token = "0x6002071")]
				[Address(RVA = "0x1D602EC", Offset = "0x1D602EC", VA = "0x1D602EC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002073")]
				[Address(RVA = "0x1D60354", Offset = "0x1D60354", VA = "0x1D60354", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0x1D5FD4C", Offset = "0x1D5FD4C", VA = "0x1D5FD4C")]
			[DebuggerHidden]
			public <GetFlattenedMethods>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600206F")]
			[Address(RVA = "0x1D600EC", Offset = "0x1D600EC", VA = "0x1D600EC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002070")]
			[Address(RVA = "0x1D600F0", Offset = "0x1D600F0", VA = "0x1D600F0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0x1D602F4", Offset = "0x1D602F4", VA = "0x1D602F4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002074")]
			[Address(RVA = "0x1D6035C", Offset = "0x1D6035C", VA = "0x1D6035C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<MethodInfo> System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002075")]
			[Address(RVA = "0x1D60420", Offset = "0x1D60420", VA = "0x1D60420", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type[] EmptyTypes;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDictionary<AttributeQuery, Attribute> _cachedAttributeQueries;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static BindingFlags DeclaredFlags;

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x1D5F458", Offset = "0x1D5F458", VA = "0x1D5F458")]
		public static bool HasAttribute(MemberInfo element, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x600134C")]
		public static bool HasAttribute<TAttribute>(MemberInfo element)
		{
			return default(bool);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1D5F4DC", Offset = "0x1D5F4DC", VA = "0x1D5F4DC")]
		public static Attribute GetAttribute(MemberInfo element, Type attributeType, bool shouldCache)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		public static TAttribute GetAttribute<TAttribute>(MemberInfo element, bool shouldCache) where TAttribute : Attribute
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		public static TAttribute GetAttribute<TAttribute>(MemberInfo element) where TAttribute : Attribute
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x1D5EDA8", Offset = "0x1D5EDA8", VA = "0x1D5EDA8")]
		public static PropertyInfo GetDeclaredProperty(this Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x1D5E630", Offset = "0x1D5E630", VA = "0x1D5E630")]
		public static MethodInfo GetDeclaredMethod(this Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x1D5F844", Offset = "0x1D5F844", VA = "0x1D5F844")]
		public static ConstructorInfo GetDeclaredConstructor(this Type type, Type[] parameters)
		{
			return null;
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1D5F9DC", Offset = "0x1D5F9DC", VA = "0x1D5F9DC")]
		public static ConstructorInfo[] GetDeclaredConstructors(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x1D5FA60", Offset = "0x1D5FA60", VA = "0x1D5FA60")]
		public static MemberInfo[] GetFlattenedMember(this Type type, string memberName)
		{
			return null;
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x1D5B910", Offset = "0x1D5B910", VA = "0x1D5B910")]
		public static MethodInfo GetFlattenedMethod(this Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x1D5FCA4", Offset = "0x1D5FCA4", VA = "0x1D5FCA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB0FC", Offset = "0xFCB0FC")]
		public static IEnumerable<MethodInfo> GetFlattenedMethods(this Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1D5E4C8", Offset = "0x1D5E4C8", VA = "0x1D5E4C8")]
		public static PropertyInfo GetFlattenedProperty(this Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x1D5FD84", Offset = "0x1D5FD84", VA = "0x1D5FD84")]
		public static MemberInfo GetDeclaredMember(this Type type, string memberName)
		{
			return null;
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x1D5F7C0", Offset = "0x1D5F7C0", VA = "0x1D5F7C0")]
		public static MethodInfo[] GetDeclaredMethods(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x1D5F73C", Offset = "0x1D5F73C", VA = "0x1D5F73C")]
		public static PropertyInfo[] GetDeclaredProperties(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x1D5FE78", Offset = "0x1D5FE78", VA = "0x1D5FE78")]
		public static FieldInfo[] GetDeclaredFields(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x1D5FC20", Offset = "0x1D5FC20", VA = "0x1D5FC20")]
		public static MemberInfo[] GetDeclaredMembers(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1D5FEFC", Offset = "0x1D5FEFC", VA = "0x1D5FEFC")]
		public static MemberInfo AsMemberInfo(Type type)
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1D5FF00", Offset = "0x1D5FF00", VA = "0x1D5FF00")]
		public static bool IsType(MemberInfo member)
		{
			return default(bool);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x1D5FF80", Offset = "0x1D5FF80", VA = "0x1D5FF80")]
		public static Type AsType(MemberInfo member)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1D5BAF8", Offset = "0x1D5BAF8", VA = "0x1D5BAF8")]
		public static Type Resolve(this Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x200029B")]
	public static class fsVersionManager
	{
		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Type, fsOption<fsVersionedType>> _cache;

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1D62B2C", Offset = "0x1D62B2C", VA = "0x1D62B2C")]
		public static fsResult GetVersionImportPath(string currentVersion, fsVersionedType targetVersion, out List<fsVersionedType> path)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1D62E24", Offset = "0x1D62E24", VA = "0x1D62E24")]
		private static bool GetVersionImportPathRecursive(List<fsVersionedType> path, string currentVersion, fsVersionedType current)
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1D62F64", Offset = "0x1D62F64", VA = "0x1D62F64")]
		public static fsOption<fsVersionedType> GetVersionedType(Type type)
		{
			return default(fsOption<fsVersionedType>);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x1D635F8", Offset = "0x1D635F8", VA = "0x1D635F8")]
		private static void VerifyConstructors(fsVersionedType type)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x1D63374", Offset = "0x1D63374", VA = "0x1D63374")]
		private static void VerifyUniqueVersionStrings(fsVersionedType type)
		{
		}
	}
	[Token(Token = "0x200029C")]
	public struct fsVersionedType
	{
		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public fsVersionedType[] Ancestors;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string VersionString;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type ModelType;

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x11352F8", Offset = "0x11352F8", VA = "0x11352F8")]
		public object Migrate(object ancestorInstance)
		{
			return null;
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x1135300", Offset = "0x1135300", VA = "0x1135300", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1D63E28", Offset = "0x1D63E28", VA = "0x1D63E28")]
		public static bool operator ==(fsVersionedType a, fsVersionedType b)
		{
			return default(bool);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1D63EA8", Offset = "0x1D63EA8", VA = "0x1D63EA8")]
		public static bool operator !=(fsVersionedType a, fsVersionedType b)
		{
			return default(bool);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x1135308", Offset = "0x1135308", VA = "0x1135308", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x1135310", Offset = "0x1135310", VA = "0x1135310", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200029D")]
	public class fsMetaProperty
	{
		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MemberInfo _memberInfo;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC05EC", Offset = "0xFC05EC")]
		private Type <StorageType>k__BackingField;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC05FC", Offset = "0xFC05FC")]
		private Type <OverrideConverterType>k__BackingField;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC060C", Offset = "0xFC060C")]
		private bool <CanRead>k__BackingField;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC061C", Offset = "0xFC061C")]
		private bool <CanWrite>k__BackingField;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC062C", Offset = "0xFC062C")]
		private string <JsonName>k__BackingField;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC063C", Offset = "0xFC063C")]
		private string <MemberName>k__BackingField;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC064C", Offset = "0xFC064C")]
		private bool <IsPublic>k__BackingField;

		[Token(Token = "0x170002B8")]
		public Type StorageType
		{
			[Token(Token = "0x6001371")]
			[Address(RVA = "0x1D5F234", Offset = "0x1D5F234", VA = "0x1D5F234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB1E0", Offset = "0xFCB1E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001372")]
			[Address(RVA = "0x1D5F23C", Offset = "0x1D5F23C", VA = "0x1D5F23C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB1F0", Offset = "0xFCB1F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public Type OverrideConverterType
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x1D5F244", Offset = "0x1D5F244", VA = "0x1D5F244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB200", Offset = "0xFCB200")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001374")]
			[Address(RVA = "0x1D5F24C", Offset = "0x1D5F24C", VA = "0x1D5F24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB210", Offset = "0xFCB210")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public bool CanRead
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x1D5F254", Offset = "0x1D5F254", VA = "0x1D5F254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB220", Offset = "0xFCB220")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x1D5F25C", Offset = "0x1D5F25C", VA = "0x1D5F25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB230", Offset = "0xFCB230")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public bool CanWrite
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0x1D5F268", Offset = "0x1D5F268", VA = "0x1D5F268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB240", Offset = "0xFCB240")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x1D5F270", Offset = "0x1D5F270", VA = "0x1D5F270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB250", Offset = "0xFCB250")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public string JsonName
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x1D5F27C", Offset = "0x1D5F27C", VA = "0x1D5F27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB260", Offset = "0xFCB260")]
			get
			{
				return null;
			}
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x1D5F284", Offset = "0x1D5F284", VA = "0x1D5F284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB270", Offset = "0xFCB270")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public string MemberName
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x1D5F28C", Offset = "0x1D5F28C", VA = "0x1D5F28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB280", Offset = "0xFCB280")]
			get
			{
				return null;
			}
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x1D5F294", Offset = "0x1D5F294", VA = "0x1D5F294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB290", Offset = "0xFCB290")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public bool IsPublic
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x1D5F29C", Offset = "0x1D5F29C", VA = "0x1D5F29C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB2A0", Offset = "0xFCB2A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x1D5F2A4", Offset = "0x1D5F2A4", VA = "0x1D5F2A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB2B0", Offset = "0xFCB2B0")]
			private set
			{
			}
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x1D5EF24", Offset = "0x1D5EF24", VA = "0x1D5EF24")]
		internal fsMetaProperty(fsConfig config, FieldInfo field)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x1D5F0E4", Offset = "0x1D5F0E4", VA = "0x1D5F0E4")]
		internal fsMetaProperty(fsConfig config, PropertyInfo property)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x1D5EFD8", Offset = "0x1D5EFD8", VA = "0x1D5EFD8")]
		private void CommonInitialize(fsConfig config)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1D5CD1C", Offset = "0x1D5CD1C", VA = "0x1D5CD1C")]
		public void Write(object context, object value)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1D5CA68", Offset = "0x1D5CA68", VA = "0x1D5CA68")]
		public object Read(object context)
		{
			return null;
		}
	}
	[Token(Token = "0x200029E")]
	public static class fsReflectionUtility
	{
		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1D5B5EC", Offset = "0x1D5B5EC", VA = "0x1D5B5EC")]
		public static Type GetInterface(Type type, Type interfaceType)
		{
			return null;
		}
	}
	[Token(Token = "0x200029F")]
	public static class fsTypeCache
	{
		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1D6275C", Offset = "0x1D6275C", VA = "0x1D6275C")]
		public static Type GetType(string name)
		{
			return null;
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x1D627E8", Offset = "0x1D627E8", VA = "0x1D627E8")]
		public static Type GetType(string name, Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x1D62768", Offset = "0x1D62768", VA = "0x1D62768")]
		private static Type GetType(string name, bool fallbackNoNamespace, Type fallbackAssignable)
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Serialization.FullSerializer.Internal.DirectConverters
{
	[Token(Token = "0x20002A0")]
	public class AnimationCurve_DirectConverter : fsDirectConverter<AnimationCurve>
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0x1D54008", Offset = "0x1D54008", VA = "0x1D54008", Slot = "10")]
		protected override fsResult DoSerialize(AnimationCurve model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1D541CC", Offset = "0x1D541CC", VA = "0x1D541CC", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref AnimationCurve model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x1D543CC", Offset = "0x1D543CC", VA = "0x1D543CC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1D54428", Offset = "0x1D54428", VA = "0x1D54428")]
		public AnimationCurve_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class Bounds_DirectConverter : fsDirectConverter<Bounds>
	{
		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1D54478", Offset = "0x1D54478", VA = "0x1D54478", Slot = "10")]
		protected override fsResult DoSerialize(Bounds model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x1D545A4", Offset = "0x1D545A4", VA = "0x1D545A4", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Bounds model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x1D54730", Offset = "0x1D54730", VA = "0x1D54730", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x1D54790", Offset = "0x1D54790", VA = "0x1D54790")]
		public Bounds_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class GUIStyleState_DirectConverter : fsDirectConverter<GUIStyleState>
	{
		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1D547E0", Offset = "0x1D547E0", VA = "0x1D547E0", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyleState model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x1D54920", Offset = "0x1D54920", VA = "0x1D54920", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyleState model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x1D54AC0", Offset = "0x1D54AC0", VA = "0x1D54AC0", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x1D54B1C", Offset = "0x1D54B1C", VA = "0x1D54B1C")]
		public GUIStyleState_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class GUIStyle_DirectConverter : fsDirectConverter<GUIStyle>
	{
		[Token(Token = "0x6001391")]
		[Address(RVA = "0x1D54B6C", Offset = "0x1D54B6C", VA = "0x1D54B6C", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyle model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1D554DC", Offset = "0x1D554DC", VA = "0x1D554DC", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyle model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x1D561A4", Offset = "0x1D561A4", VA = "0x1D561A4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x1D56200", Offset = "0x1D56200", VA = "0x1D56200")]
		public GUIStyle_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class Gradient_DirectConverter : fsDirectConverter<Gradient>
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0x1D56250", Offset = "0x1D56250", VA = "0x1D56250", Slot = "10")]
		protected override fsResult DoSerialize(Gradient model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x1D56394", Offset = "0x1D56394", VA = "0x1D56394", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Gradient model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x1D56528", Offset = "0x1D56528", VA = "0x1D56528", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x1D56584", Offset = "0x1D56584", VA = "0x1D56584")]
		public Gradient_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class Keyframe_DirectConverter : fsDirectConverter<Keyframe>
	{
		[Token(Token = "0x6001399")]
		[Address(RVA = "0x1D565D4", Offset = "0x1D565D4", VA = "0x1D565D4", Slot = "10")]
		protected override fsResult DoSerialize(Keyframe model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1D567FC", Offset = "0x1D567FC", VA = "0x1D567FC", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Keyframe model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x1D56AB8", Offset = "0x1D56AB8", VA = "0x1D56AB8", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x1D56B20", Offset = "0x1D56B20", VA = "0x1D56B20")]
		public Keyframe_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class LayerMask_DirectConverter : fsDirectConverter<LayerMask>
	{
		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1D56B70", Offset = "0x1D56B70", VA = "0x1D56B70", Slot = "10")]
		protected override fsResult DoSerialize(LayerMask model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1D56C48", Offset = "0x1D56C48", VA = "0x1D56C48", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref LayerMask model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x1D56D54", Offset = "0x1D56D54", VA = "0x1D56D54", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x1D56DA8", Offset = "0x1D56DA8", VA = "0x1D56DA8")]
		public LayerMask_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class RectOffset_DirectConverter : fsDirectConverter<RectOffset>
	{
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x1D56DF8", Offset = "0x1D56DF8", VA = "0x1D56DF8", Slot = "10")]
		protected override fsResult DoSerialize(RectOffset model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x1D56FDC", Offset = "0x1D56FDC", VA = "0x1D56FDC", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref RectOffset model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x1D5724C", Offset = "0x1D5724C", VA = "0x1D5724C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x1D572A8", Offset = "0x1D572A8", VA = "0x1D572A8")]
		public RectOffset_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class Rect_DirectConverter : fsDirectConverter<Rect>
	{
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1D572F8", Offset = "0x1D572F8", VA = "0x1D572F8", Slot = "10")]
		protected override fsResult DoSerialize(Rect model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1D574C8", Offset = "0x1D574C8", VA = "0x1D574C8", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Rect model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x1D57710", Offset = "0x1D57710", VA = "0x1D57710", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1D5776C", Offset = "0x1D5776C", VA = "0x1D5776C")]
		public Rect_DirectConverter()
		{
		}
	}
}
namespace ParadoxNotion.Design
{
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2D64", Offset = "0xFB2D64")]
	public class SpoofAOTAttribute : Attribute
	{
		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x18175F4", Offset = "0x18175F4", VA = "0x18175F4")]
		public SpoofAOTAttribute()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2D78", Offset = "0xFB2D78")]
	public class DoNotListAttribute : Attribute
	{
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x18173A0", Offset = "0x18173A0", VA = "0x18173A0")]
		public DoNotListAttribute()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2D8C", Offset = "0xFB2D8C")]
	public class ProtectedSingletonAttribute : Attribute
	{
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x1817514", Offset = "0x1817514", VA = "0x1817514")]
		public ProtectedSingletonAttribute()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2DA0", Offset = "0xFB2DA0")]
	public class ExposeAsDefinitionAttribute : Attribute
	{
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x18173B0", Offset = "0x18173B0", VA = "0x18173B0")]
		public ExposeAsDefinitionAttribute()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2DB4", Offset = "0xFB2DB4")]
	public class ExposeFieldAttribute : Attribute
	{
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x18173B8", Offset = "0x18173B8", VA = "0x18173B8")]
		public ExposeFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2DC8", Offset = "0xFB2DC8")]
	public class NameAttribute : Attribute
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int priority;

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x1817498", Offset = "0x1817498", VA = "0x1817498")]
		public NameAttribute(string name, int priority = 0)
		{
		}
	}
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2DDC", Offset = "0xFB2DDC")]
	public class CategoryAttribute : Attribute
	{
		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string category;

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x18172FC", Offset = "0x18172FC", VA = "0x18172FC")]
		public CategoryAttribute(string category)
		{
		}
	}
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2DF0", Offset = "0xFB2DF0")]
	public class DescriptionAttribute : Attribute
	{
		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string description;

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x181736C", Offset = "0x181736C", VA = "0x181736C")]
		public DescriptionAttribute(string description)
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2E04", Offset = "0xFB2E04")]
	public class IconAttribute : Attribute
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string iconName;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool fixedColor;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string runtimeIconTypeCallback;

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x18173C8", Offset = "0x18173C8", VA = "0x18173C8")]
		public IconAttribute(string iconName = "", bool fixedColor = false, string runtimeIconTypeCallback = "")
		{
		}
	}
	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2E18", Offset = "0xFB2E18")]
	public class ColorAttribute : Attribute
	{
		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string hexColor;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1817330", Offset = "0x1817330", VA = "0x1817330")]
		public ColorAttribute(string hexColor)
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2E2C", Offset = "0xFB2E2C")]
	public abstract class DrawerAttribute : Attribute
	{
		[Token(Token = "0x170002BF")]
		public virtual int priority
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x18173A8", Offset = "0x18173A8", VA = "0x18173A8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x18172F4", Offset = "0x18172F4", VA = "0x18172F4")]
		protected DrawerAttribute()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2E40", Offset = "0xFB2E40")]
	public class ShowIfAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string fieldName;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int checkValue;

		[Token(Token = "0x170002C0")]
		public override int priority
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x181752C", Offset = "0x181752C", VA = "0x181752C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1817534", Offset = "0x1817534", VA = "0x1817534")]
		public ShowIfAttribute(string fieldName, int checkValue)
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2E54", Offset = "0xFB2E54")]
	public class RequiredFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x170002C1")]
		public override int priority
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x181751C", Offset = "0x181751C", VA = "0x181751C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1817524", Offset = "0x1817524", VA = "0x1817524")]
		public RequiredFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2E68", Offset = "0xFB2E68")]
	public class CallbackAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string methodName;

		[Token(Token = "0x170002C2")]
		public override int priority
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x18172B8", Offset = "0x18172B8", VA = "0x18172B8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x18172C0", Offset = "0x18172C0", VA = "0x18172C0")]
		public CallbackAttribute(string methodName)
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2E7C", Offset = "0xFB2E7C")]
	public class MinValueAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x170002C3")]
		public override int priority
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x181742C", Offset = "0x181742C", VA = "0x181742C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x1817434", Offset = "0x1817434", VA = "0x1817434")]
		public MinValueAttribute(float min)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x1817468", Offset = "0x1817468", VA = "0x1817468")]
		public MinValueAttribute(int min)
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2E90", Offset = "0xFB2E90")]
	public class DelayedFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1817364", Offset = "0x1817364", VA = "0x1817364")]
		public DelayedFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2EA4", Offset = "0xFB2EA4")]
	public class LayerFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1817424", Offset = "0x1817424", VA = "0x1817424")]
		public LayerFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2EB8", Offset = "0xFB2EB8")]
	public class TagFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x18175FC", Offset = "0x18175FC", VA = "0x18175FC")]
		public TagFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2ECC", Offset = "0xFB2ECC")]
	public class TextAreaFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int numberOfLines;

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1817604", Offset = "0x1817604", VA = "0x1817604")]
		public TextAreaFieldAttribute(int numberOfLines)
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2EE0", Offset = "0xFB2EE0")]
	public class PopupFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly object[] options;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x18174E0", Offset = "0x18174E0", VA = "0x18174E0")]
		public PopupFieldAttribute(params object[] options)
		{
		}
	}
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2EF4", Offset = "0xFB2EF4")]
	public class SliderFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float max;

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x181757C", Offset = "0x181757C", VA = "0x181757C")]
		public SliderFieldAttribute(float min, float max)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x18175B4", Offset = "0x18175B4", VA = "0x18175B4")]
		public SliderFieldAttribute(int min, int max)
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB2F08", Offset = "0xFB2F08")]
	public class ForceObjectFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x18173C0", Offset = "0x18173C0", VA = "0x18173C0")]
		public ForceObjectFieldAttribute()
		{
		}
	}
}
namespace NodeCanvas
{
	[Token(Token = "0x20002BF")]
	public enum Status
	{
		[Token(Token = "0x4000CCE")]
		Failure,
		[Token(Token = "0x4000CCF")]
		Success,
		[Token(Token = "0x4000CD0")]
		Running,
		[Token(Token = "0x4000CD1")]
		Resting,
		[Token(Token = "0x4000CD2")]
		Error,
		[Token(Token = "0x4000CD3")]
		Optional
	}
	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB2F1C", Offset = "0xFB2F1C")]
	public class ActionListPlayer : MonoBehaviour, ITaskSystem, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _serializedList;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<UnityEngine.Object> _objectReferences;

		[NonSerialized]
		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ActionList _actionList;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Blackboard _blackboard;

		[Token(Token = "0x170002C4")]
		public ActionList actionList
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x185A68C", Offset = "0x185A68C", VA = "0x185A68C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		private UnityEngine.Component NodeCanvas.Framework.ITaskSystem.agent
		{
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0x185A694", Offset = "0x185A694", VA = "0x185A694", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		public IBlackboard blackboard
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x185A698", Offset = "0x185A698", VA = "0x185A698", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x185A6A0", Offset = "0x185A6A0", VA = "0x185A6A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public float elapsedTime
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x185A874", Offset = "0x185A874", VA = "0x185A874", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C8")]
		private UnityEngine.Object NodeCanvas.Framework.ITaskSystem.contextObject
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x185A8D8", Offset = "0x185A8D8", VA = "0x185A8D8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x185A540", Offset = "0x185A540", VA = "0x185A540", Slot = "11")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x185A544", Offset = "0x185A544", VA = "0x185A544", Slot = "12")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x185A8DC", Offset = "0x185A8DC", VA = "0x185A8DC")]
		public static ActionListPlayer Create()
		{
			return null;
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x185A75C", Offset = "0x185A75C", VA = "0x185A75C", Slot = "8")]
		public void SendTaskOwnerDefaults()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x185A958", Offset = "0x185A958", VA = "0x185A958", Slot = "9")]
		private void NodeCanvas.Framework.ITaskSystem.SendEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x185A9C4", Offset = "0x185A9C4", VA = "0x185A9C4", Slot = "10")]
		private void NodeCanvas.Framework.ITaskSystem.RecordUndo(string name)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x185A9C8", Offset = "0x185A9C8", VA = "0x185A9C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x185A9CC", Offset = "0x185A9CC", VA = "0x185A9CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xFCB2C0", Offset = "0xFCB2C0")]
		public void Play()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x185AA40", Offset = "0x185AA40", VA = "0x185AA40")]
		public void Play(Action<bool> OnFinish)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x185A9DC", Offset = "0x185A9DC", VA = "0x185A9DC")]
		public void Play(UnityEngine.Component agent, IBlackboard blackboard, Action<bool> OnFinish)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x185AADC", Offset = "0x185AADC", VA = "0x185AADC")]
		public Status ExecuteAction()
		{
			return default(Status);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x185ABEC", Offset = "0x185ABEC", VA = "0x185ABEC")]
		public Status ExecuteAction(UnityEngine.Component agent)
		{
			return default(Status);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x185AC0C", Offset = "0x185AC0C", VA = "0x185AC0C")]
		public ActionListPlayer()
		{
		}
	}
}
namespace NodeCanvas.Tasks.Conditions
{
	[Token(Token = "0x20002C1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB2F54", Offset = "0xFB2F54")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB2F54", Offset = "0xFB2F54")]
	public class MecanimCheckBool : ConditionTask<Animator>
	{
		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC068C", Offset = "0xFC068C")]
		public BBParameter<string> parameter;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<bool> value;

		[Token(Token = "0x170002C9")]
		protected override string info
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x1816190", Offset = "0x1816190", VA = "0x1816190", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x1816320", Offset = "0x1816320", VA = "0x1816320", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x18163D4", Offset = "0x18163D4", VA = "0x18163D4")]
		public MecanimCheckBool()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB2FB8", Offset = "0xFB2FB8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB2FB8", Offset = "0xFB2FB8")]
	public class MecanimCheckFloat : ConditionTask<Animator>
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC069C", Offset = "0xFC069C")]
		public BBParameter<string> parameter;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CompareMethod comparison;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> value;

		[Token(Token = "0x170002CA")]
		protected override string info
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x1816424", Offset = "0x1816424", VA = "0x1816424", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x18165B0", Offset = "0x18165B0", VA = "0x18165B0", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x1816674", Offset = "0x1816674", VA = "0x1816674")]
		public MecanimCheckFloat()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB301C", Offset = "0xFB301C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB301C", Offset = "0xFB301C")]
	public class MecanimCheckInt : ConditionTask<Animator>
	{
		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC06AC", Offset = "0xFC06AC")]
		public BBParameter<string> parameter;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CompareMethod comparison;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<int> value;

		[Token(Token = "0x170002CB")]
		protected override string info
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x18166C4", Offset = "0x18166C4", VA = "0x18166C4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x1816850", Offset = "0x1816850", VA = "0x1816850", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x1816960", Offset = "0x1816960", VA = "0x1816960")]
		public MecanimCheckInt()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB3080", Offset = "0xFB3080")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3080", Offset = "0xFB3080")]
	public class MecanimIsInTransition : ConditionTask<Animator>
	{
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> layerIndex;

		[Token(Token = "0x170002CC")]
		protected override string info
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x18169B0", Offset = "0x18169B0", VA = "0x18169B0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x18169F8", Offset = "0x18169F8", VA = "0x18169F8", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x1816A80", Offset = "0x1816A80", VA = "0x1816A80")]
		public MecanimIsInTransition()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB30E4", Offset = "0xFB30E4")]
	public class CheckBoolean : ConditionTask
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<bool> valueA;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<bool> valueB;

		[Token(Token = "0x170002CD")]
		protected override string info
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x1810D3C", Offset = "0x1810D3C", VA = "0x1810D3C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x1810D90", Offset = "0x1810D90", VA = "0x1810D90", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x1810E0C", Offset = "0x1810E0C", VA = "0x1810E0C")]
		public CheckBoolean()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB311C", Offset = "0xFB311C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB311C", Offset = "0xFB311C")]
	public class CheckBooleanTrigger : ConditionTask
	{
		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<bool> trigger;

		[Token(Token = "0x170002CE")]
		protected override string info
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x1810E78", Offset = "0x1810E78", VA = "0x1810E78", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x1810ECC", Offset = "0x1810ECC", VA = "0x1810ECC", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x1810F54", Offset = "0x1810F54", VA = "0x1810F54")]
		public CheckBooleanTrigger()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB317C", Offset = "0xFB317C")]
	public class CheckEnum : ConditionTask
	{
		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBObjectParameter valueA;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBObjectParameter valueB;

		[Token(Token = "0x170002CF")]
		protected override string info
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x1812400", Offset = "0x1812400", VA = "0x1812400", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1812454", Offset = "0x1812454", VA = "0x1812454", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x18124D4", Offset = "0x18124D4", VA = "0x18124D4")]
		public CheckEnum()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB31B4", Offset = "0xFB31B4")]
	public class CheckFloat : ConditionTask
	{
		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> valueA;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CompareMethod checkType;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> valueB;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC06FC", Offset = "0xFC06FC")]
		public float differenceThreshold;

		[Token(Token = "0x170002D0")]
		protected override string info
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x1812E34", Offset = "0x1812E34", VA = "0x1812E34", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x1812E6C", Offset = "0x1812E6C", VA = "0x1812E6C", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x1812EF4", Offset = "0x1812EF4", VA = "0x1812EF4")]
		public CheckFloat()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB31EC", Offset = "0xFB31EC")]
	public class CheckInt : ConditionTask
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<int> valueA;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CompareMethod checkType;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<int> valueB;

		[Token(Token = "0x170002D1")]
		protected override string info
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x1812F08", Offset = "0x1812F08", VA = "0x1812F08", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x1812F40", Offset = "0x1812F40", VA = "0x1812F40", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x1813020", Offset = "0x1813020", VA = "0x1813020")]
		public CheckInt()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3224", Offset = "0xFB3224")]
	public class CheckString : ConditionTask
	{
		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<string> valueA;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<string> valueB;

		[Token(Token = "0x170002D2")]
		protected override string info
		{
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x1814BA0", Offset = "0x1814BA0", VA = "0x1814BA0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1814BF4", Offset = "0x1814BF4", VA = "0x1814BF4", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1814C74", Offset = "0x1814C74", VA = "0x1814C74")]
		public CheckString()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB325C", Offset = "0xFB325C")]
	public class CheckUnityObject : ConditionTask
	{
		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<UnityEngine.Object> valueA;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<UnityEngine.Object> valueB;

		[Token(Token = "0x170002D3")]
		protected override string info
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x1815574", Offset = "0x1815574", VA = "0x1815574", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x18155C8", Offset = "0x18155C8", VA = "0x18155C8", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x1815670", Offset = "0x1815670", VA = "0x1815670")]
		public CheckUnityObject()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3294", Offset = "0xFB3294")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3294", Offset = "0xFB3294")]
	public class CheckVariable<T> : ConditionTask
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> valueA;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> valueB;

		[Token(Token = "0x170002D4")]
		protected override string info
		{
			[Token(Token = "0x60013FA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FB")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FC")]
		public CheckVariable()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB32F4", Offset = "0xFB32F4")]
	public class CheckVectorDistance : ConditionTask
	{
		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<Vector3> vectorA;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> vectorB;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CompareMethod comparison;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> distance;

		[Token(Token = "0x170002D5")]
		protected override string info
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x1815678", Offset = "0x1815678", VA = "0x1815678", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x18157F0", Offset = "0x18157F0", VA = "0x18157F0", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x18158F8", Offset = "0x18158F8", VA = "0x18158F8")]
		public CheckVectorDistance()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB332C", Offset = "0xFB332C")]
	public class TryGetValue<T> : ConditionTask
	{
		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0778", Offset = "0xFC0778")]
		[BlackboardOnly]
		public BBParameter<Dictionary<string, T>> targetDictionary;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC07B0", Offset = "0xFC07B0")]
		public BBParameter<string> key;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveValueAs;

		[Token(Token = "0x170002D6")]
		protected override string info
		{
			[Token(Token = "0x6001400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001401")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001402")]
		public TryGetValue()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3364", Offset = "0xFB3364")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3364", Offset = "0xFB3364")]
	public class ListContainsElement<T> : ConditionTask
	{
		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC07D0", Offset = "0xFC07D0")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> checkElement;

		[Token(Token = "0x170002D7")]
		protected override string info
		{
			[Token(Token = "0x6001403")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001404")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001405")]
		public ListContainsElement()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB33C4", Offset = "0xFB33C4")]
	public class ListIsEmpty : ConditionTask
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0808", Offset = "0xFC0808")]
		[BlackboardOnly]
		public BBParameter<IList> targetList;

		[Token(Token = "0x170002D8")]
		protected override string info
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x181605C", Offset = "0x181605C", VA = "0x181605C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x18160B0", Offset = "0x18160B0", VA = "0x18160B0", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x1816188", Offset = "0x1816188", VA = "0x1816188")]
		public ListIsEmpty()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB33FC", Offset = "0xFB33FC")]
	public class StringContains : ConditionTask
	{
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0840", Offset = "0xFC0840")]
		[BlackboardOnly]
		public BBParameter<string> targetString;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<string> checkString;

		[Token(Token = "0x170002D9")]
		protected override string info
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0x1816DF0", Offset = "0x1816DF0", VA = "0x1816DF0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x1816E44", Offset = "0x1816E44", VA = "0x1816E44", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x1816EC8", Offset = "0x1816EC8", VA = "0x1816EC8")]
		public StringContains()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3434", Offset = "0xFB3434")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3434", Offset = "0xFB3434")]
	public class CanSeeTarget : ConditionTask<Transform>
	{
		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0878", Offset = "0xFC0878")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> maxDistance;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> awarnessDistance;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC0888", Offset = "0xFC0888")]
		public BBParameter<float> viewAngle;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 offset;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private RaycastHit hit;

		[Token(Token = "0x170002DA")]
		protected override string info
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0x18103D4", Offset = "0x18103D4", VA = "0x18103D4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x1810428", Offset = "0x1810428", VA = "0x1810428", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x18107FC", Offset = "0x18107FC", VA = "0x18107FC", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1810C88", Offset = "0x1810C88", VA = "0x1810C88")]
		public CanSeeTarget()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB3494", Offset = "0xFB3494")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3494", Offset = "0xFB3494")]
	public class CheckDistanceToGameObject : ConditionTask<Transform>
	{
		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC08A0", Offset = "0xFC08A0")]
		public BBParameter<GameObject> checkTarget;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CompareMethod checkType;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> distance;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC08B0", Offset = "0xFC08B0")]
		public float floatingPoint;

		[Token(Token = "0x170002DB")]
		protected override string info
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x1811E28", Offset = "0x1811E28", VA = "0x1811E28", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x1812050", Offset = "0x1812050", VA = "0x1812050", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x1812264", Offset = "0x1812264", VA = "0x1812264", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x1812378", Offset = "0x1812378", VA = "0x1812378")]
		public CheckDistanceToGameObject()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB34F8", Offset = "0xFB34F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB34F8", Offset = "0xFB34F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB34F8", Offset = "0xFB34F8")]
	public class CheckLOS : ConditionTask<Transform>
	{
		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC08CC", Offset = "0xFC08CC")]
		public BBParameter<GameObject> LOSTarget;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<LayerMask> layerMask;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 offset;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit hit;

		[Token(Token = "0x170002DC")]
		protected override string info
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x181315C", Offset = "0x181315C", VA = "0x181315C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x18131CC", Offset = "0x18131CC", VA = "0x18131CC", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x181341C", Offset = "0x181341C", VA = "0x181341C", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x1813608", Offset = "0x1813608", VA = "0x1813608")]
		public CheckLOS()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB3580", Offset = "0xFB3580")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3580", Offset = "0xFB3580")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3580", Offset = "0xFB3580")]
	public class CheckLOS2D : ConditionTask<Transform>
	{
		[Serializable]
		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9874", Offset = "0xFB9874")]
		private sealed class <>c
		{
			[Token(Token = "0x4001644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RaycastHit2D, Collider2D> <>9__7_0;

			[Token(Token = "0x6002077")]
			[Address(RVA = "0x1813E94", Offset = "0x1813E94", VA = "0x1813E94")]
			public <>c()
			{
			}

			[Token(Token = "0x6002078")]
			[Address(RVA = "0x1813E9C", Offset = "0x1813E9C", VA = "0x1813E9C")]
			internal Collider2D <OnCheck>b__7_0(RaycastHit2D h)
			{
				return null;
			}
		}

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC08EC", Offset = "0xFC08EC")]
		public BBParameter<GameObject> LOSTarget;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<LayerMask> layerMask;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[GetFromAgent]
		protected Collider2D agentCollider;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RaycastHit2D[] hits;

		[Token(Token = "0x170002DD")]
		protected override string info
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x1813688", Offset = "0x1813688", VA = "0x1813688", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x18136F8", Offset = "0x18136F8", VA = "0x18136F8", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x1813C30", Offset = "0x1813C30", VA = "0x1813C30", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x1813DAC", Offset = "0x1813DAC", VA = "0x1813DAC")]
		public CheckLOS2D()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3608", Offset = "0xFB3608")]
	public class HasComponent<T> : ConditionTask<Transform> where T : UnityEngine.Component
	{
		[Token(Token = "0x600141C")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		public HasComponent()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3640", Offset = "0xFB3640")]
	public class IsActive : ConditionTask<Transform>
	{
		[Token(Token = "0x600141E")]
		[Address(RVA = "0x1815B68", Offset = "0x1815B68", VA = "0x1815B68", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x1815BD4", Offset = "0x1815BD4", VA = "0x1815BD4")]
		public IsActive()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB3678", Offset = "0xFB3678")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3678", Offset = "0xFB3678")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3678", Offset = "0xFB3678")]
	public class IsInFront : ConditionTask<Transform>
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC091C", Offset = "0xFC091C")]
		public BBParameter<GameObject> checkTarget;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC092C", Offset = "0xFC092C")]
		public BBParameter<float> viewAngle;

		[Token(Token = "0x170002DE")]
		protected override string info
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x1815C24", Offset = "0x1815C24", VA = "0x1815C24", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x1815C78", Offset = "0x1815C78", VA = "0x1815C78", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x1815DE4", Offset = "0x1815DE4", VA = "0x1815DE4", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x1815FE4", Offset = "0x1815FE4", VA = "0x1815FE4")]
		public IsInFront()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3700", Offset = "0xFB3700")]
	public class CheckButtonInput : ConditionTask
	{
		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public PressTypes pressType;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0944", Offset = "0xFC0944")]
		public BBParameter<string> buttonName;

		[Token(Token = "0x170002DF")]
		protected override string info
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0x1810F5C", Offset = "0x1810F5C", VA = "0x1810F5C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x1811010", Offset = "0x1811010", VA = "0x1811010", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x18110E8", Offset = "0x18110E8", VA = "0x18110E8")]
		public CheckButtonInput()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3738", Offset = "0xFB3738")]
	public class CheckKeyboardInput : ConditionTask
	{
		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public PressTypes pressType;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public KeyCode key;

		[Token(Token = "0x170002E0")]
		protected override string info
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0x1813028", Offset = "0x1813028", VA = "0x1813028", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x1813108", Offset = "0x1813108", VA = "0x1813108", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x181314C", Offset = "0x181314C", VA = "0x181314C")]
		public CheckKeyboardInput()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3770", Offset = "0xFB3770")]
	public class CheckMousePick : ConditionTask
	{
		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ButtonKeys buttonKey;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[LayerField]
		public int layer;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGoAs;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePosAs;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RaycastHit hit;

		[Token(Token = "0x170002E1")]
		protected override string info
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x1814350", Offset = "0x1814350", VA = "0x1814350", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1814488", Offset = "0x1814488", VA = "0x1814488", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x18145E4", Offset = "0x18145E4", VA = "0x18145E4")]
		public CheckMousePick()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB37A8", Offset = "0xFB37A8")]
	public class CheckMousePick2D : ConditionTask
	{
		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ButtonKeys buttonKey;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LayerMask mask;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGoAs;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePosAs;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int buttonID;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private RaycastHit2D hit;

		[Token(Token = "0x170002E2")]
		protected override string info
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x18145EC", Offset = "0x18145EC", VA = "0x18145EC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x1814708", Offset = "0x1814708", VA = "0x1814708", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x18149B0", Offset = "0x18149B0", VA = "0x18149B0")]
		public CheckMousePick2D()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB37E0", Offset = "0xFB37E0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB37E0", Offset = "0xFB37E0")]
	public class PathExists : ConditionTask<NavMeshAgent>
	{
		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> targetPosition;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<List<Vector3>> savePathAs;

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x1816AD0", Offset = "0x1816AD0", VA = "0x1816AD0", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x1816BD4", Offset = "0x1816BD4", VA = "0x1816BD4")]
		public PathExists()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3840", Offset = "0xFB3840")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3840", Offset = "0xFB3840")]
	public class CheckCSharpEvent : ConditionTask
	{
		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Type targetType;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string eventName;

		[Token(Token = "0x170002E3")]
		public override Type agentType
		{
			[Token(Token = "0x6001432")]
			[Address(RVA = "0x181115C", Offset = "0x181115C", VA = "0x181115C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E4")]
		protected override string info
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x181121C", Offset = "0x181121C", VA = "0x181121C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x1811298", Offset = "0x1811298", VA = "0x1811298", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x1811670", Offset = "0x1811670", VA = "0x1811670")]
		public void Raised()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x181167C", Offset = "0x181167C", VA = "0x181167C", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x1811684", Offset = "0x1811684", VA = "0x1811684")]
		public CheckCSharpEvent()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB38A0", Offset = "0xFB38A0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB38A0", Offset = "0xFB38A0")]
	public class CheckCSharpEvent<T> : ConditionTask
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Type targetType;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string eventName;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BBParameter<T> saveAs;

		[Token(Token = "0x170002E5")]
		public override Type agentType
		{
			[Token(Token = "0x6001438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		protected override string info
		{
			[Token(Token = "0x6001439")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143A")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		public void Raised(T eventValue)
		{
		}

		[Token(Token = "0x600143C")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600143D")]
		public CheckCSharpEvent()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3900", Offset = "0xFB3900")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3900", Offset = "0xFB3900")]
	public class CheckCSharpEventValue<T> : ConditionTask
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Type targetType;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string eventName;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BBParameter<T> checkValue;

		[Token(Token = "0x170002E7")]
		public override Type agentType
		{
			[Token(Token = "0x600143E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		protected override string info
		{
			[Token(Token = "0x600143F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001440")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001441")]
		public void Raised(T eventValue)
		{
		}

		[Token(Token = "0x6001442")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		public CheckCSharpEventValue()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB3960", Offset = "0xFB3960")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3960", Offset = "0xFB3960")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3960", Offset = "0xFB3960")]
	public class CheckField : ConditionTask
	{
		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected BBParameter checkValue;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Type targetType;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected string fieldName;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected CompareMethod comparison;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FieldInfo field;

		[Token(Token = "0x170002E9")]
		public override Type agentType
		{
			[Token(Token = "0x6001444")]
			[Address(RVA = "0x181277C", Offset = "0x181277C", VA = "0x181277C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		protected override string info
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0x181283C", Offset = "0x181283C", VA = "0x181283C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x18129A4", Offset = "0x18129A4", VA = "0x18129A4", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x1812AA4", Offset = "0x1812AA4", VA = "0x1812AA4", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x1812E2C", Offset = "0x1812E2C", VA = "0x1812E2C")]
		public CheckField()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB39E8", Offset = "0xFB39E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB39E8", Offset = "0xFB39E8")]
	public class CheckStaticCSharpEvent : ConditionTask
	{
		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Type targetType;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string eventName;

		[Token(Token = "0x170002EB")]
		protected override string info
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0x18149E4", Offset = "0x18149E4", VA = "0x18149E4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x1814A60", Offset = "0x1814A60", VA = "0x1814A60", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x1814B78", Offset = "0x1814B78", VA = "0x1814B78")]
		public void Raised()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x1814B84", Offset = "0x1814B84", VA = "0x1814B84", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x1814B8C", Offset = "0x1814B8C", VA = "0x1814B8C")]
		public CheckStaticCSharpEvent()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x1814B94", Offset = "0x1814B94", VA = "0x1814B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB2F8", Offset = "0xFCB2F8")]
		private void <OnInit>b__4_0()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3A48", Offset = "0xFB3A48")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3A48", Offset = "0xFB3A48")]
	public class CheckStaticCSharpEvent<T> : ConditionTask
	{
		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Type targetType;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string eventName;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[BlackboardOnly]
		private BBParameter<T> saveAs;

		[Token(Token = "0x170002EC")]
		protected override string info
		{
			[Token(Token = "0x600144F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001450")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001451")]
		public void Raised(T eventValue)
		{
		}

		[Token(Token = "0x6001452")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001453")]
		public CheckStaticCSharpEvent()
		{
		}

		[Token(Token = "0x6001454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB308", Offset = "0xFCB308")]
		private void <OnInit>b__5_0(T v)
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3AA8", Offset = "0xFB3AA8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3AA8", Offset = "0xFB3AA8")]
	public class CheckUnityEvent : ConditionTask
	{
		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Type targetType;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string eventName;

		[Token(Token = "0x170002ED")]
		public override Type agentType
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x18152C4", Offset = "0x18152C4", VA = "0x18152C4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		protected override string info
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x181534C", Offset = "0x181534C", VA = "0x181534C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x18153C8", Offset = "0x18153C8", VA = "0x18153C8", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1815558", Offset = "0x1815558", VA = "0x1815558")]
		public void Raised()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x1815564", Offset = "0x1815564", VA = "0x1815564", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x181556C", Offset = "0x181556C", VA = "0x181556C")]
		public CheckUnityEvent()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3B08", Offset = "0xFB3B08")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3B08", Offset = "0xFB3B08")]
	public class CheckUnityEvent<T> : ConditionTask
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Type targetType;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string eventName;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BBParameter<T> saveAs;

		[Token(Token = "0x170002EF")]
		public override Type agentType
		{
			[Token(Token = "0x600145B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		protected override string info
		{
			[Token(Token = "0x600145C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600145D")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		public void Raised(T eventValue)
		{
		}

		[Token(Token = "0x600145F")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001460")]
		public CheckUnityEvent()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3B68", Offset = "0xFB3B68")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB3B68", Offset = "0xFB3B68")]
	public class CheckUnityEventValue<T> : ConditionTask
	{
		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Type targetType;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string eventName;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BBParameter<T> checkValue;

		[Token(Token = "0x170002F1")]
		public override Type agentType
		{
			[Token(Token = "0x6001461")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		protected override string info
		{
			[Token(Token = "0x6001462")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001463")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001464")]
		public void Raised(T eventValue)
		{
		}

		[Token(Token = "0x6001465")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		public CheckUnityEventValue()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3BC8", Offset = "0xFB3BC8")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB3BC8", Offset = "0xFB3BC8")]
	public class CheckCollision : ConditionTask<Collider>
	{
		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public CollisionTypes checkType;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool specifiedTagOnly;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactPoint;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactNormal;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool stay;

		[Token(Token = "0x170002F3")]
		protected override string info
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x181168C", Offset = "0x181168C", VA = "0x181168C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x181175C", Offset = "0x181175C", VA = "0x181175C", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x1811780", Offset = "0x1811780", VA = "0x1811780")]
		public void OnCollisionEnter(Collision info)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x18118EC", Offset = "0x18118EC", VA = "0x18118EC")]
		public void OnCollisionExit(Collision info)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x18119CC", Offset = "0x18119CC", VA = "0x18119CC")]
		public CheckCollision()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3C8C", Offset = "0xFB3C8C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB3C8C", Offset = "0xFB3C8C")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB3C8C", Offset = "0xFB3C8C")]
	public class CheckCollision2D : ConditionTask<Collider2D>
	{
		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public CollisionTypes checkType;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool specifiedTagOnly;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactPoint;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactNormal;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool stay;

		[Token(Token = "0x170002F4")]
		protected override string info
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0x1811A34", Offset = "0x1811A34", VA = "0x1811A34", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x1811B04", Offset = "0x1811B04", VA = "0x1811B04", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x1811B28", Offset = "0x1811B28", VA = "0x1811B28")]
		public void OnCollisionEnter2D(Collision2D info)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1811CE0", Offset = "0x1811CE0", VA = "0x1811CE0")]
		public void OnCollisionExit2D(Collision2D info)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1811DC0", Offset = "0x1811DC0", VA = "0x1811DC0")]
		public CheckCollision2D()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3D78", Offset = "0xFB3D78")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB3D78", Offset = "0xFB3D78")]
	public class CheckMouse : ConditionTask<Collider>
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public MouseInteractionTypes checkType;

		[Token(Token = "0x170002F5")]
		protected override string info
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x1813EA8", Offset = "0x1813EA8", VA = "0x1813EA8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1813F38", Offset = "0x1813F38", VA = "0x1813F38", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1813F40", Offset = "0x1813F40", VA = "0x1813F40")]
		public void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x1813F58", Offset = "0x1813F58", VA = "0x1813F58")]
		public void OnMouseExit()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x1813F74", Offset = "0x1813F74", VA = "0x1813F74")]
		public void OnMouseOver()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x1813F90", Offset = "0x1813F90", VA = "0x1813F90")]
		public CheckMouse()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3E58", Offset = "0xFB3E58")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB3E58", Offset = "0xFB3E58")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB3E58", Offset = "0xFB3E58")]
	public class CheckMouse2D : ConditionTask<Collider2D>
	{
		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public MouseInteractionTypes checkType;

		[Token(Token = "0x170002F6")]
		protected override string info
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0x1813FE0", Offset = "0x1813FE0", VA = "0x1813FE0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1814070", Offset = "0x1814070", VA = "0x1814070", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x1814078", Offset = "0x1814078", VA = "0x1814078")]
		public void OnMouseEnter()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x1814090", Offset = "0x1814090", VA = "0x1814090")]
		public void OnMouseExit()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x18140AC", Offset = "0x18140AC", VA = "0x18140AC")]
		public void OnMouseOver()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x18140C8", Offset = "0x18140C8", VA = "0x18140C8")]
		public CheckMouse2D()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB3F60", Offset = "0xFB3F60")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB3F60", Offset = "0xFB3F60")]
	public class CheckMouseClick : ConditionTask<Collider>
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public MouseClickEvent checkType;

		[Token(Token = "0x170002F7")]
		protected override string info
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0x1814118", Offset = "0x1814118", VA = "0x1814118", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x18141A8", Offset = "0x18141A8", VA = "0x18141A8", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x18141B0", Offset = "0x18141B0", VA = "0x18141B0")]
		public void OnMouseDown()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x18141C8", Offset = "0x18141C8", VA = "0x18141C8")]
		public void OnMouseUp()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x18141E4", Offset = "0x18141E4", VA = "0x18141E4")]
		public CheckMouseClick()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4024", Offset = "0xFB4024")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB4024", Offset = "0xFB4024")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB4024", Offset = "0xFB4024")]
	public class CheckMouseClick2D : ConditionTask<Collider2D>
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public MouseClickEvent checkType;

		[Token(Token = "0x170002F8")]
		protected override string info
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x1814234", Offset = "0x1814234", VA = "0x1814234", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x18142C4", Offset = "0x18142C4", VA = "0x18142C4", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x18142CC", Offset = "0x18142CC", VA = "0x18142CC")]
		public void OnMouseDown()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x18142E4", Offset = "0x18142E4", VA = "0x18142E4")]
		public void OnMouseUp()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x1814300", Offset = "0x1814300", VA = "0x1814300")]
		public CheckMouseClick2D()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4110", Offset = "0xFB4110")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB4110", Offset = "0xFB4110")]
	public class CheckTrigger : ConditionTask<Collider>
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public TriggerTypes checkType;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool specifiedTagOnly;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[TagField]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xFC0C0C", Offset = "0xFC0C0C")]
		public string objectTag;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stay;

		[Token(Token = "0x170002F9")]
		protected override string info
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0x1814C7C", Offset = "0x1814C7C", VA = "0x1814C7C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x1814D4C", Offset = "0x1814D4C", VA = "0x1814D4C", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x1814D70", Offset = "0x1814D70", VA = "0x1814D70")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x1814E58", Offset = "0x1814E58", VA = "0x1814E58")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x1814F38", Offset = "0x1814F38", VA = "0x1814F38")]
		public CheckTrigger()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB41D4", Offset = "0xFB41D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB41D4", Offset = "0xFB41D4")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB41D4", Offset = "0xFB41D4")]
	public class CheckTrigger2D : ConditionTask<Collider2D>
	{
		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public TriggerTypes CheckType;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool specifiedTagOnly;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stay;

		[Token(Token = "0x170002FA")]
		protected override string info
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x1814FA0", Offset = "0x1814FA0", VA = "0x1814FA0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x1815070", Offset = "0x1815070", VA = "0x1815070", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x1815094", Offset = "0x1815094", VA = "0x1815094")]
		public void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x181517C", Offset = "0x181517C", VA = "0x181517C")]
		public void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x181525C", Offset = "0x181525C", VA = "0x181525C")]
		public CheckTrigger2D()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB42C0", Offset = "0xFB42C0")]
	public class ButtonClicked : ConditionTask
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0C8C", Offset = "0xFC0C8C")]
		public BBParameter<Button> button;

		[Token(Token = "0x170002FB")]
		protected override string info
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0x1810298", Offset = "0x1810298", VA = "0x1810298", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x1810308", Offset = "0x1810308", VA = "0x1810308", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x18103B8", Offset = "0x18103B8", VA = "0x18103B8", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x18103C0", Offset = "0x18103C0", VA = "0x18103C0")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x18103CC", Offset = "0x18103CC", VA = "0x18103CC")]
		public ButtonClicked()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB42F8", Offset = "0xFB42F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB42F8", Offset = "0xFB42F8")]
	public class InterceptEvent : ConditionTask<Transform>
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public EventTriggerType eventType;

		[Token(Token = "0x170002FC")]
		protected override string info
		{
			[Token(Token = "0x6001496")]
			[Address(RVA = "0x1815910", Offset = "0x1815910", VA = "0x1815910", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x18159C0", Offset = "0x18159C0", VA = "0x18159C0", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x1815A74", Offset = "0x1815A74", VA = "0x1815A74", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x1815A7C", Offset = "0x1815A7C", VA = "0x1815A7C")]
		private void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x1815A88", Offset = "0x1815A88", VA = "0x1815A88")]
		private void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x1815A94", Offset = "0x1815A94", VA = "0x1815A94")]
		private void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x1815AA0", Offset = "0x1815AA0", VA = "0x1815AA0")]
		private void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x1815AAC", Offset = "0x1815AAC", VA = "0x1815AAC")]
		private void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1815AB8", Offset = "0x1815AB8", VA = "0x1815AB8")]
		private void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x1815AC4", Offset = "0x1815AC4", VA = "0x1815AC4")]
		private void OnDrop(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x1815AD0", Offset = "0x1815AD0", VA = "0x1815AD0")]
		private void OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x1815ADC", Offset = "0x1815ADC", VA = "0x1815ADC")]
		private void OnUpdateSelected(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x1815AE8", Offset = "0x1815AE8", VA = "0x1815AE8")]
		private void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x1815AF4", Offset = "0x1815AF4", VA = "0x1815AF4")]
		private void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x1815B00", Offset = "0x1815B00", VA = "0x1815B00")]
		private void OnMove(AxisEventData eventData)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1815B0C", Offset = "0x1815B0C", VA = "0x1815B0C")]
		private void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1815B18", Offset = "0x1815B18", VA = "0x1815B18")]
		public InterceptEvent()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4358", Offset = "0xFB4358")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB4358", Offset = "0xFB4358")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB4358", Offset = "0xFB4358")]
	public class CheckEvent : ConditionTask<GraphOwner>
	{
		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0C9C", Offset = "0xFC0C9C")]
		public BBParameter<string> eventName;

		[Token(Token = "0x170002FD")]
		protected override string info
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x18125D8", Offset = "0x18125D8", VA = "0x18125D8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x1812654", Offset = "0x1812654", VA = "0x1812654", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x181265C", Offset = "0x181265C", VA = "0x181265C")]
		public void OnCustomEvent(EventData receivedEvent)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x181272C", Offset = "0x181272C", VA = "0x181272C")]
		public CheckEvent()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4424", Offset = "0xFB4424")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB4424", Offset = "0xFB4424")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB4424", Offset = "0xFB4424")]
	public class CheckEvent<T> : ConditionTask<GraphOwner>
	{
		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0CAC", Offset = "0xFC0CAC")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveEventValue;

		[Token(Token = "0x170002FE")]
		protected override string info
		{
			[Token(Token = "0x60014AB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014AC")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AD")]
		public void OnCustomEvent(EventData receivedEvent)
		{
		}

		[Token(Token = "0x60014AE")]
		public CheckEvent()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB44F0", Offset = "0xFB44F0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB44F0", Offset = "0xFB44F0")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB44F0", Offset = "0xFB44F0")]
	public class CheckEventValue<T> : ConditionTask<GraphOwner>
	{
		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0CCC", Offset = "0xFC0CCC")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xFC0CDC", Offset = "0xFC0CDC")]
		public BBParameter<T> value;

		[Token(Token = "0x170002FF")]
		protected override string info
		{
			[Token(Token = "0x60014AF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B0")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B1")]
		public void OnCustomEvent(EventData receivedEvent)
		{
		}

		[Token(Token = "0x60014B2")]
		public CheckEventValue()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB45BC", Offset = "0xFB45BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB45BC", Offset = "0xFB45BC")]
	public class DebugCondition : ConditionTask
	{
		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x1815900", Offset = "0x1815900", VA = "0x1815900", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x1815908", Offset = "0x1815908", VA = "0x1815908")]
		public DebugCondition()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB461C", Offset = "0xFB461C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB461C", Offset = "0xFB461C")]
	public class Probability : ConditionTask
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> probability;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> maxValue;

		[Token(Token = "0x17000300")]
		protected override string info
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x1816C24", Offset = "0x1816C24", VA = "0x1816C24", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x1816CD8", Offset = "0x1816CD8", VA = "0x1816CD8", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x1816D68", Offset = "0x1816D68", VA = "0x1816D68")]
		public Probability()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB467C", Offset = "0xFB467C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB467C", Offset = "0xFB467C")]
	public class Timeout : ConditionTask
	{
		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9884", Offset = "0xFB9884")]
		private sealed class <Do>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Timeout <>4__this;

			[Token(Token = "0x17000560")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600207C")]
				[Address(RVA = "0x1817248", Offset = "0x1817248", VA = "0x1817248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000561")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600207E")]
				[Address(RVA = "0x18172B0", Offset = "0x18172B0", VA = "0x18172B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002079")]
			[Address(RVA = "0x18170EC", Offset = "0x18170EC", VA = "0x18170EC")]
			[DebuggerHidden]
			public <Do>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600207A")]
			[Address(RVA = "0x1817184", Offset = "0x1817184", VA = "0x1817184", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600207B")]
			[Address(RVA = "0x1817188", Offset = "0x1817188", VA = "0x1817188", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600207D")]
			[Address(RVA = "0x1817250", Offset = "0x1817250", VA = "0x1817250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> timeout;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float currentTime;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine coroutine;

		[Token(Token = "0x17000301")]
		protected override string info
		{
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x1816ED0", Offset = "0x1816ED0", VA = "0x1816ED0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x1816F64", Offset = "0x1816F64", VA = "0x1816F64", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x1816FAC", Offset = "0x1816FAC", VA = "0x1816FAC", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x1817070", Offset = "0x1817070", VA = "0x1817070")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB318", Offset = "0xFCB318")]
		private IEnumerator Do()
		{
			return null;
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x1817118", Offset = "0x1817118", VA = "0x1817118")]
		public Timeout()
		{
		}
	}
}
namespace NodeCanvas.Tasks.Actions
{
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB46DC", Offset = "0xFB46DC")]
	public class PlayAnimationAdvanced : ActionTask<Animation>
	{
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0D18", Offset = "0xFC0D18")]
		public BBParameter<AnimationClip> animationClip;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public WrapMode animationWrap;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public AnimationBlendMode blendMode;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC0D28", Offset = "0xFC0D28")]
		public float playbackSpeed;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC0D40", Offset = "0xFC0D40")]
		public float crossFadeTime;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public PlayDirections playDirection;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<string> mixTransformName;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<int> animationLayer;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool queueAnimation;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool waitActionFinish;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string animationToPlay;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int dir;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform mixTransform;

		[Token(Token = "0x17000302")]
		protected override string info
		{
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x180A1F4", Offset = "0x180A1F4", VA = "0x180A1F4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x180A264", Offset = "0x180A264", VA = "0x180A264", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x180A344", Offset = "0x180A344", VA = "0x180A344", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x180A8B4", Offset = "0x180A8B4", VA = "0x180A8B4", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x180A7C4", Offset = "0x180A7C4", VA = "0x180A7C4")]
		private Transform FindTransform(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x180A970", Offset = "0x180A970", VA = "0x180A970")]
		public PlayAnimationAdvanced()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4714", Offset = "0xFB4714")]
	public class PlayAnimationSimple : ActionTask<Animation>
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0D58", Offset = "0xFC0D58")]
		public BBParameter<AnimationClip> animationClip;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC0D68", Offset = "0xFC0D68")]
		public float crossFadeTime;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public WrapMode animationWrap;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool waitActionFinish;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Animation, AnimationClip> lastPlayedClips;

		[Token(Token = "0x17000303")]
		protected override string info
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x180A9FC", Offset = "0x180A9FC", VA = "0x180A9FC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x180AA6C", Offset = "0x180AA6C", VA = "0x180AA6C", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x180AB4C", Offset = "0x180AB4C", VA = "0x180AB4C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x180AD84", Offset = "0x180AD84", VA = "0x180AD84", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x180AE30", Offset = "0x180AE30", VA = "0x180AE30")]
		public PlayAnimationSimple()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB474C", Offset = "0xFB474C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB474C", Offset = "0xFB474C")]
	public class MecanimPlayAnimation : ActionTask<Animator>
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> layerIndex;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0D80", Offset = "0xFC0D80")]
		public BBParameter<string> stateName;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC0D90", Offset = "0xFC0D90")]
		public float transitTime;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool waitUntilFinish;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AnimatorStateInfo stateInfo;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool played;

		[Token(Token = "0x17000304")]
		protected override string info
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x180698C", Offset = "0x180698C", VA = "0x180698C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x1806A08", Offset = "0x1806A08", VA = "0x1806A08", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1806B78", Offset = "0x1806B78", VA = "0x1806B78", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x1806CEC", Offset = "0x1806CEC", VA = "0x1806CEC")]
		public MecanimPlayAnimation()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB47B0", Offset = "0xFB47B0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB47B0", Offset = "0xFB47B0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB47B0", Offset = "0xFB47B0")]
	public class MecanimSetBool : ActionTask<Animator>
	{
		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<string> parameter;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> parameterHashID;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<bool> setTo;

		[Token(Token = "0x17000305")]
		protected override string info
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x1806D44", Offset = "0x1806D44", VA = "0x1806D44", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x1806DE4", Offset = "0x1806DE4", VA = "0x1806DE4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x1806F18", Offset = "0x1806F18", VA = "0x1806F18")]
		public MecanimSetBool()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB4838", Offset = "0xFB4838")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4838", Offset = "0xFB4838")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB4838", Offset = "0xFB4838")]
	public class MecanimSetFloat : ActionTask<Animator>
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<string> parameter;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> parameterHashID;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> setTo;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC0DA8", Offset = "0xFC0DA8")]
		public float transitTime;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float currentValue;

		[Token(Token = "0x17000306")]
		protected override string info
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x1806F68", Offset = "0x1806F68", VA = "0x1806F68", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x1807008", Offset = "0x1807008", VA = "0x1807008", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x1807278", Offset = "0x1807278", VA = "0x1807278", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x1807194", Offset = "0x1807194", VA = "0x1807194")]
		private float Get()
		{
			return default(float);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x1807098", Offset = "0x1807098", VA = "0x1807098")]
		private void Set(float newValue)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x1807374", Offset = "0x1807374", VA = "0x1807374")]
		public MecanimSetFloat()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB48C0", Offset = "0xFB48C0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB48C0", Offset = "0xFB48C0")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB48C0", Offset = "0xFB48C0")]
	public class MecanimSetIK : ActionTask<Animator>
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AvatarIKGoal IKGoal;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0DC0", Offset = "0xFC0DC0")]
		public BBParameter<GameObject> goal;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> weight;

		[Token(Token = "0x17000307")]
		protected override string info
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x18073CC", Offset = "0x18073CC", VA = "0x18073CC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x1807568", Offset = "0x1807568", VA = "0x1807568")]
		public void OnAnimatorIK()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x1807664", Offset = "0x1807664", VA = "0x1807664")]
		public MecanimSetIK()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB4990", Offset = "0xFB4990")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4990", Offset = "0xFB4990")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB4990", Offset = "0xFB4990")]
	public class MecanimSetInt : ActionTask<Animator>
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<string> parameter;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> parameterHashID;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<int> setTo;

		[Token(Token = "0x17000308")]
		protected override string info
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x18076B4", Offset = "0x18076B4", VA = "0x18076B4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1807754", Offset = "0x1807754", VA = "0x1807754", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x180787C", Offset = "0x180787C", VA = "0x180787C")]
		public MecanimSetInt()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB4A18", Offset = "0xFB4A18")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4A18", Offset = "0xFB4A18")]
	public class MecanimSetLayerWeight : ActionTask<Animator>
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> layerIndex;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC0DD0", Offset = "0xFC0DD0")]
		public BBParameter<float> layerWeight;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC0DE8", Offset = "0xFC0DE8")]
		public float transitTime;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float currentValue;

		[Token(Token = "0x17000309")]
		protected override string info
		{
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x18078CC", Offset = "0x18078CC", VA = "0x18078CC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1807A48", Offset = "0x1807A48", VA = "0x1807A48", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1807AD8", Offset = "0x1807AD8", VA = "0x1807AD8", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1807C28", Offset = "0x1807C28", VA = "0x1807C28")]
		public MecanimSetLayerWeight()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB4A7C", Offset = "0xFB4A7C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4A7C", Offset = "0xFB4A7C")]
	[AttributeAttribute(Name = "EventReceiverAttribute", RVA = "0xFB4A7C", Offset = "0xFB4A7C")]
	public class MecanimSetLookAt : ActionTask<Animator>
	{
		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<GameObject> targetPosition;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> targetWeight;

		[Token(Token = "0x1700030A")]
		protected override string info
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x1807C78", Offset = "0x1807C78", VA = "0x1807C78", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1807CCC", Offset = "0x1807CCC", VA = "0x1807CCC")]
		public void OnAnimatorIK()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x1807DB8", Offset = "0x1807DB8", VA = "0x1807DB8")]
		public MecanimSetLookAt()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB4B4C", Offset = "0xFB4B4C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4B4C", Offset = "0xFB4B4C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB4B4C", Offset = "0xFB4B4C")]
	public class MecanimSetTrigger : ActionTask<Animator>
	{
		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<string> parameter;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> parameterHashID;

		[Token(Token = "0x1700030B")]
		protected override string info
		{
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x1807E08", Offset = "0x1807E08", VA = "0x1807E08", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1807EA4", Offset = "0x1807EA4", VA = "0x1807EA4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1807F8C", Offset = "0x1807F8C", VA = "0x1807F8C")]
		public MecanimSetTrigger()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4BD4", Offset = "0xFB4BD4")]
	public class LoadScene : ActionTask
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0E00", Offset = "0xFC0E00")]
		public BBParameter<string> sceneName;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<LoadSceneMode> mode;

		[Token(Token = "0x1700030C")]
		protected override string info
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x1806638", Offset = "0x1806638", VA = "0x1806638", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x180668C", Offset = "0x180668C", VA = "0x180668C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x1806750", Offset = "0x1806750", VA = "0x1806750")]
		public LoadScene()
		{
		}
	}
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4C0C", Offset = "0xFB4C0C")]
	public class PlayAudioAtPosition : ActionTask<Transform>
	{
		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0E10", Offset = "0xFC0E10")]
		public BBParameter<AudioClip> audioClip;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC0E20", Offset = "0xFC0E20")]
		public float volume;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool waitActionFinish;

		[Token(Token = "0x1700030D")]
		protected override string info
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x180AF0C", Offset = "0x180AF0C", VA = "0x180AF0C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x180AF7C", Offset = "0x180AF7C", VA = "0x180AF7C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x180B028", Offset = "0x180B028", VA = "0x180B028", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x180B0C8", Offset = "0x180B0C8", VA = "0x180B0C8")]
		public PlayAudioAtPosition()
		{
		}
	}
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4C44", Offset = "0xFB4C44")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB4C44", Offset = "0xFB4C44")]
	public class ComposeVector : ActionTask
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> x;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> y;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> z;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveAs;

		[Token(Token = "0x1700030E")]
		protected override string info
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x1D510F0", Offset = "0x1D510F0", VA = "0x1D510F0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x1D51144", Offset = "0x1D51144", VA = "0x1D51144", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1D51230", Offset = "0x1D51230", VA = "0x1D51230")]
		public ComposeVector()
		{
		}
	}
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4CA4", Offset = "0xFB4CA4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB4CA4", Offset = "0xFB4CA4")]
	public class DecomposeVector : ActionTask
	{
		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> targetVector;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<float> x;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> y;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<float> z;

		[Token(Token = "0x1700030F")]
		protected override string info
		{
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x1D528A8", Offset = "0x1D528A8", VA = "0x1D528A8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1D528FC", Offset = "0x1D528FC", VA = "0x1D528FC", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1D529D4", Offset = "0x1D529D4", VA = "0x1D529D4")]
		public DecomposeVector()
		{
		}
	}
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4D04", Offset = "0xFB4D04")]
	public class AddElementToDictionary<T> : ActionTask
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0E78", Offset = "0xFC0E78")]
		public BBParameter<Dictionary<string, T>> dictionary;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<string> key;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> value;

		[Token(Token = "0x17000310")]
		protected override string info
		{
			[Token(Token = "0x60014F3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F4")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014F5")]
		public AddElementToDictionary()
		{
		}
	}
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4D3C", Offset = "0xFB4D3C")]
	public class GetDictionaryElement<T> : ActionTask
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0EB0", Offset = "0xFC0EB0")]
		public BBParameter<Dictionary<string, T>> dictionary;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<string> key;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveAs;

		[Token(Token = "0x17000311")]
		protected override string info
		{
			[Token(Token = "0x60014F6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F7")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014F8")]
		public GetDictionaryElement()
		{
		}
	}
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4D74", Offset = "0xFB4D74")]
	public class EvaluateCurve : ActionTask
	{
		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0EF8", Offset = "0xFC0EF8")]
		public BBParameter<AnimationCurve> curve;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> from;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> to;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> time;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<float> saveAs;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1D52B2C", Offset = "0x1D52B2C", VA = "0x1D52B2C", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x1D52CA4", Offset = "0x1D52CA4", VA = "0x1D52CA4")]
		public EvaluateCurve()
		{
		}
	}
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4DAC", Offset = "0xFB4DAC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB4DAC", Offset = "0xFB4DAC")]
	public class GetOtherBlackboardVariable : ActionTask<Blackboard>
	{
		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0F18", Offset = "0xFC0F18")]
		public BBParameter<string> targetVariableName;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBObjectParameter saveAs;

		[Token(Token = "0x17000312")]
		protected override string info
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x1804E04", Offset = "0x1804E04", VA = "0x1804E04", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1804E58", Offset = "0x1804E58", VA = "0x1804E58", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x1804F2C", Offset = "0x1804F2C", VA = "0x1804F2C")]
		public GetOtherBlackboardVariable()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB4E0C", Offset = "0xFB4E0C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4E0C", Offset = "0xFB4E0C")]
	public class GetToString : ActionTask
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<object> variable;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<string> toString;

		[Token(Token = "0x17000313")]
		protected override string info
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x1805410", Offset = "0x1805410", VA = "0x1805410", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1805464", Offset = "0x1805464", VA = "0x1805464", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1805520", Offset = "0x1805520", VA = "0x1805520")]
		public GetToString()
		{
		}
	}
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4E70", Offset = "0xFB4E70")]
	public class AddElementToList<T> : ActionTask
	{
		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0F58", Offset = "0xFC0F58")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> targetElement;

		[Token(Token = "0x17000314")]
		protected override string info
		{
			[Token(Token = "0x6001501")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001502")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001503")]
		public AddElementToList()
		{
		}
	}
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4EA8", Offset = "0xFB4EA8")]
	public class ClearList : ActionTask
	{
		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0F90", Offset = "0xFC0F90")]
		[BlackboardOnly]
		public BBParameter<IList> targetList;

		[Token(Token = "0x17000315")]
		protected override string info
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x1D50FB8", Offset = "0x1D50FB8", VA = "0x1D50FB8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1D5100C", Offset = "0x1D5100C", VA = "0x1D5100C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1D510E8", Offset = "0x1D510E8", VA = "0x1D510E8")]
		public ClearList()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4EE0", Offset = "0xFB4EE0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB4EE0", Offset = "0xFB4EE0")]
	public class GetCloserGameObjectInList : ActionTask<Transform>
	{
		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0FC8", Offset = "0xFC0FC8")]
		public BBParameter<List<GameObject>> list;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x17000316")]
		protected override string info
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x1802F78", Offset = "0x1802F78", VA = "0x1802F78", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x18030F4", Offset = "0x18030F4", VA = "0x18030F4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x1803358", Offset = "0x1803358", VA = "0x1803358")]
		public GetCloserGameObjectInList()
		{
		}
	}
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4F40", Offset = "0xFB4F40")]
	public class GetIndexOfElement<T> : ActionTask
	{
		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC0FE8", Offset = "0xFC0FE8")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> targetElement;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<int> saveIndexAs;

		[Token(Token = "0x600150A")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600150B")]
		public GetIndexOfElement()
		{
		}
	}
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4F78", Offset = "0xFB4F78")]
	public class GetListCount : ActionTask
	{
		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1030", Offset = "0xFC1030")]
		[BlackboardOnly]
		public BBParameter<IList> targetList;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<int> saveAs;

		[Token(Token = "0x17000317")]
		protected override string info
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x1804B1C", Offset = "0x1804B1C", VA = "0x1804B1C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1804B70", Offset = "0x1804B70", VA = "0x1804B70", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x1804C74", Offset = "0x1804C74", VA = "0x1804C74")]
		public GetListCount()
		{
		}
	}
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4FB0", Offset = "0xFB4FB0")]
	public class InsertElementToList<T> : ActionTask
	{
		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1078", Offset = "0xFC1078")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> targetElement;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<int> targetIndex;

		[Token(Token = "0x17000318")]
		protected override string info
		{
			[Token(Token = "0x600150F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001510")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001511")]
		public InsertElementToList()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB4FE8", Offset = "0xFB4FE8")]
	public class PickListElement<T> : ActionTask
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC10B0", Offset = "0xFC10B0")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<int> index;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveAs;

		[Token(Token = "0x17000319")]
		protected override string info
		{
			[Token(Token = "0x6001512")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001513")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001514")]
		public PickListElement()
		{
		}
	}
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5020", Offset = "0xFB5020")]
	public class PickRandomListElement<T> : ActionTask
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC10F8", Offset = "0xFC10F8")]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> saveAs;

		[Token(Token = "0x1700031A")]
		protected override string info
		{
			[Token(Token = "0x6001515")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001516")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001517")]
		public PickRandomListElement()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5058", Offset = "0xFB5058")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5058", Offset = "0xFB5058")]
	public class RemoveElementFromList<T> : ActionTask
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1108", Offset = "0xFC1108")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> targetElement;

		[Token(Token = "0x1700031B")]
		protected override string info
		{
			[Token(Token = "0x6001518")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001519")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600151A")]
		public RemoveElementFromList()
		{
		}
	}
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB50B8", Offset = "0xFB50B8")]
	public class SetListElement<T> : ActionTask
	{
		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1140", Offset = "0xFC1140")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<int> index;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> newValue;

		[Token(Token = "0x600151B")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600151C")]
		public SetListElement()
		{
		}
	}
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB50F0", Offset = "0xFB50F0")]
	public class ShuffleList : ActionTask
	{
		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1178", Offset = "0xFC1178")]
		[BlackboardOnly]
		public BBParameter<IList> targetList;

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x180E7E8", Offset = "0x180E7E8", VA = "0x180E7E8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x180EAEC", Offset = "0x180EAEC", VA = "0x180EAEC")]
		public ShuffleList()
		{
		}
	}
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5128", Offset = "0xFB5128")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5128", Offset = "0xFB5128")]
	public class SortGameObjectListByDistance : ActionTask<Transform>
	{
		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC11B0", Offset = "0xFC11B0")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> targetList;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveAs;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool reverse;

		[Token(Token = "0x1700031C")]
		protected override string info
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0x180EAF4", Offset = "0x180EAF4", VA = "0x180EAF4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x180EC70", Offset = "0x180EC70", VA = "0x180EC70", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x180ED94", Offset = "0x180ED94", VA = "0x180ED94")]
		public SortGameObjectListByDistance()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x180EDE4", Offset = "0x180EDE4", VA = "0x180EDE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB37C", Offset = "0xFCB37C")]
		private float <OnExecute>b__5_0(GameObject go)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5188", Offset = "0xFB5188")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5188", Offset = "0xFB5188")]
	public class LoadBlackboard : ActionTask<Blackboard>
	{
		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC11F8", Offset = "0xFC11F8")]
		public BBParameter<string> saveKey;

		[Token(Token = "0x1700031D")]
		protected override string info
		{
			[Token(Token = "0x6001523")]
			[Address(RVA = "0x18064E0", Offset = "0x18064E0", VA = "0x18064E0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1806550", Offset = "0x1806550", VA = "0x1806550", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x18065E8", Offset = "0x18065E8", VA = "0x18065E8")]
		public LoadBlackboard()
		{
		}
	}
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB51E8", Offset = "0xFB51E8")]
	public class NormalizeVector : ActionTask
	{
		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> targetVector;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> multiply;

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1809760", Offset = "0x1809760", VA = "0x1809760", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1809878", Offset = "0x1809878", VA = "0x1809878")]
		public NormalizeVector()
		{
		}
	}
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5220", Offset = "0xFB5220")]
	public class SampleCurve : ActionTask
	{
		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1208", Offset = "0xFC1208")]
		public BBParameter<AnimationCurve> curve;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC1218", Offset = "0xFC1218")]
		public BBParameter<float> sampleAt;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> saveAs;

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x180B990", Offset = "0x180B990", VA = "0x180B990", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x180BA48", Offset = "0x180BA48", VA = "0x180BA48")]
		public SampleCurve()
		{
		}
	}
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5258", Offset = "0xFB5258")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5258", Offset = "0xFB5258")]
	public class SaveBlackboard : ActionTask<Blackboard>
	{
		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1240", Offset = "0xFC1240")]
		public BBParameter<string> saveKey;

		[Token(Token = "0x1700031E")]
		protected override string info
		{
			[Token(Token = "0x600152A")]
			[Address(RVA = "0x180BA50", Offset = "0x180BA50", VA = "0x180BA50", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x180BAC0", Offset = "0x180BAC0", VA = "0x180BAC0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x180BB54", Offset = "0x180BB54", VA = "0x180BB54")]
		public SaveBlackboard()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB52B8", Offset = "0xFB52B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB52B8", Offset = "0xFB52B8")]
	public class SetBoolean : ActionTask
	{
		[Token(Token = "0x2000507")]
		public enum BoolSetModes
		{
			[Token(Token = "0x400164A")]
			False,
			[Token(Token = "0x400164B")]
			True,
			[Token(Token = "0x400164C")]
			Toggle
		}

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1250", Offset = "0xFC1250")]
		[BlackboardOnly]
		public BBParameter<bool> boolVariable;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BoolSetModes setTo;

		[Token(Token = "0x1700031F")]
		protected override string info
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x180C6C0", Offset = "0x180C6C0", VA = "0x180C6C0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x180C7B8", Offset = "0x180C7B8", VA = "0x180C7B8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x180C864", Offset = "0x180C864", VA = "0x180C864")]
		public SetBoolean()
		{
		}
	}
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5318", Offset = "0xFB5318")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5318", Offset = "0xFB5318")]
	public class SetBooleanRandom : ActionTask
	{
		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<bool> boolVariable;

		[Token(Token = "0x17000320")]
		protected override string info
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x180C874", Offset = "0x180C874", VA = "0x180C874", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x180C8D4", Offset = "0x180C8D4", VA = "0x180C8D4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x180C954", Offset = "0x180C954", VA = "0x180C954")]
		public SetBooleanRandom()
		{
		}
	}
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5378", Offset = "0xFB5378")]
	public class SetEnum : ActionTask
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1298", Offset = "0xFC1298")]
		public BBObjectParameter valueA;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBObjectParameter valueB;

		[Token(Token = "0x17000321")]
		protected override string info
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x180C95C", Offset = "0x180C95C", VA = "0x180C95C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x180C9B0", Offset = "0x180C9B0", VA = "0x180C9B0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x180CA34", Offset = "0x180CA34", VA = "0x180CA34")]
		public SetEnum()
		{
		}
	}
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB53B0", Offset = "0xFB53B0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB53B0", Offset = "0xFB53B0")]
	public class SetFloat : ActionTask
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> valueA;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OperationMethod Operation;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> valueB;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool perSecond;

		[Token(Token = "0x17000322")]
		protected override string info
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x180CB38", Offset = "0x180CB38", VA = "0x180CB38", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x180CD3C", Offset = "0x180CD3C", VA = "0x180CD3C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x180CEB4", Offset = "0x180CEB4", VA = "0x180CEB4")]
		public SetFloat()
		{
		}
	}
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5410", Offset = "0xFB5410")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5410", Offset = "0xFB5410")]
	public class SetFloatRandom : ActionTask
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random rd;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> minValue;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> maxValue;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> floatVariable;

		[Token(Token = "0x17000323")]
		protected override string info
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x180D000", Offset = "0x180D000", VA = "0x180D000", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x180CEBC", Offset = "0x180CEBC", VA = "0x180CEBC")]
		public static int Rand(int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x180CF4C", Offset = "0x180CF4C", VA = "0x180CF4C")]
		public static float Rand(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x180D23C", Offset = "0x180D23C", VA = "0x180D23C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x180D310", Offset = "0x180D310", VA = "0x180D310")]
		public SetFloatRandom()
		{
		}
	}
	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB5470", Offset = "0xFB5470")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5470", Offset = "0xFB5470")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5470", Offset = "0xFB5470")]
	public class SetInt : ActionTask
	{
		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<int> valueA;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OperationMethod Operation;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<int> valueB;

		[Token(Token = "0x17000324")]
		protected override string info
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x180D388", Offset = "0x180D388", VA = "0x180D388", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x180D3C0", Offset = "0x180D3C0", VA = "0x180D3C0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x180D4F0", Offset = "0x180D4F0", VA = "0x180D4F0")]
		public SetInt()
		{
		}
	}
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB54F8", Offset = "0xFB54F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB54F8", Offset = "0xFB54F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB54F8", Offset = "0xFB54F8")]
	public class SetIntRandom : ActionTask
	{
		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random rd;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> minValue;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> maxValue;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<int> intVariable;

		[Token(Token = "0x17000325")]
		protected override string info
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0x180D63C", Offset = "0x180D63C", VA = "0x180D63C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x180D4F8", Offset = "0x180D4F8", VA = "0x180D4F8")]
		public static int Rand(int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x180D588", Offset = "0x180D588", VA = "0x180D588")]
		public static float Rand(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x180D878", Offset = "0x180D878", VA = "0x180D878", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x180D950", Offset = "0x180D950", VA = "0x180D950")]
		public SetIntRandom()
		{
		}
	}
	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5580", Offset = "0xFB5580")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5580", Offset = "0xFB5580")]
	public class SetOtherBlackboardVariable : ActionTask<Blackboard>
	{
		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1310", Offset = "0xFC1310")]
		public BBParameter<string> targetVariableName;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBObjectParameter newValue;

		[Token(Token = "0x17000326")]
		protected override string info
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x180DB78", Offset = "0x180DB78", VA = "0x180DB78", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x180DC18", Offset = "0x180DC18", VA = "0x180DC18", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x180DCD8", Offset = "0x180DCD8", VA = "0x180DCD8")]
		public SetOtherBlackboardVariable()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB55E0", Offset = "0xFB55E0")]
	public class SetVariable<T> : ActionTask
	{
		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> valueA;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> valueB;

		[Token(Token = "0x17000327")]
		protected override string info
		{
			[Token(Token = "0x600154B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154C")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600154D")]
		public SetVariable()
		{
		}
	}
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5618", Offset = "0xFB5618")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5618", Offset = "0xFB5618")]
	public class SetVector3 : ActionTask
	{
		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<Vector3> valueA;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OperationMethod operation;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<Vector3> valueB;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool perSecond;

		[Token(Token = "0x17000328")]
		protected override string info
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x180DD28", Offset = "0x180DD28", VA = "0x180DD28", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x180DEC0", Offset = "0x180DEC0", VA = "0x180DEC0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x180E220", Offset = "0x180E220", VA = "0x180E220")]
		public SetVector3()
		{
		}
	}
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5678", Offset = "0xFB5678")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5678", Offset = "0xFB5678")]
	public class TriggerBoolean : ActionTask
	{
		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9894", Offset = "0xFB9894")]
		private sealed class <Flip>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerBoolean <>4__this;

			[Token(Token = "0x17000562")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002082")]
				[Address(RVA = "0x180F55C", Offset = "0x180F55C", VA = "0x180F55C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000563")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002084")]
				[Address(RVA = "0x180F5C4", Offset = "0x180F5C4", VA = "0x180F5C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600207F")]
			[Address(RVA = "0x180F47C", Offset = "0x180F47C", VA = "0x180F47C")]
			[DebuggerHidden]
			public <Flip>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002080")]
			[Address(RVA = "0x180F4B0", Offset = "0x180F4B0", VA = "0x180F4B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002081")]
			[Address(RVA = "0x180F4B4", Offset = "0x180F4B4", VA = "0x180F4B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002083")]
			[Address(RVA = "0x180F564", Offset = "0x180F564", VA = "0x180F564", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1340", Offset = "0xFC1340")]
		[BlackboardOnly]
		public BBParameter<bool> variable;

		[Token(Token = "0x17000329")]
		protected override string info
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x180F310", Offset = "0x180F310", VA = "0x180F310", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x180F364", Offset = "0x180F364", VA = "0x180F364", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x180F400", Offset = "0x180F400", VA = "0x180F400")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB38C", Offset = "0xFCB38C")]
		private IEnumerator Flip()
		{
			return null;
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x180F4A8", Offset = "0x180F4A8", VA = "0x180F4A8")]
		public TriggerBoolean()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class CameraFader : MonoBehaviour
	{
		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB98A4", Offset = "0xFB98A4")]
		private sealed class <CoroutineFadeIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraFader <>4__this;

			[Token(Token = "0x4001653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x17000564")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002088")]
				[Address(RVA = "0x1D50CA0", Offset = "0x1D50CA0", VA = "0x1D50CA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000565")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600208A")]
				[Address(RVA = "0x1D50D08", Offset = "0x1D50D08", VA = "0x1D50D08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002085")]
			[Address(RVA = "0x1D50A94", Offset = "0x1D50A94", VA = "0x1D50A94")]
			[DebuggerHidden]
			public <CoroutineFadeIn>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002086")]
			[Address(RVA = "0x1D50BF0", Offset = "0x1D50BF0", VA = "0x1D50BF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002087")]
			[Address(RVA = "0x1D50BF4", Offset = "0x1D50BF4", VA = "0x1D50BF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002089")]
			[Address(RVA = "0x1D50CA8", Offset = "0x1D50CA8", VA = "0x1D50CA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB98B4", Offset = "0xFB98B4")]
		private sealed class <CoroutineFadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraFader <>4__this;

			[Token(Token = "0x4001657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x17000566")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600208E")]
				[Address(RVA = "0x1D50DBC", Offset = "0x1D50DBC", VA = "0x1D50DBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000567")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002090")]
				[Address(RVA = "0x1D50E24", Offset = "0x1D50E24", VA = "0x1D50E24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600208B")]
			[Address(RVA = "0x1D50AC0", Offset = "0x1D50AC0", VA = "0x1D50AC0")]
			[DebuggerHidden]
			public <CoroutineFadeOut>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600208C")]
			[Address(RVA = "0x1D50D10", Offset = "0x1D50D10", VA = "0x1D50D10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600208D")]
			[Address(RVA = "0x1D50D14", Offset = "0x1D50D14", VA = "0x1D50D14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600208F")]
			[Address(RVA = "0x1D50DC4", Offset = "0x1D50DC4", VA = "0x1D50DC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CameraFader _current;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float alpha;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D _blackTexture;

		[Token(Token = "0x1700032A")]
		private Texture2D blackTexture
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x1D506D0", Offset = "0x1D506D0", VA = "0x1D506D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		public static CameraFader current
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x1D507B8", Offset = "0x1D507B8", VA = "0x1D507B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x1D50924", Offset = "0x1D50924", VA = "0x1D50924")]
		public void FadeIn(float time)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x1D509DC", Offset = "0x1D509DC", VA = "0x1D509DC")]
		public void FadeOut(float time)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x1D50950", Offset = "0x1D50950", VA = "0x1D50950")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB3F0", Offset = "0xFCB3F0")]
		private IEnumerator CoroutineFadeIn(float time)
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1D50A08", Offset = "0x1D50A08", VA = "0x1D50A08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB454", Offset = "0xFCB454")]
		private IEnumerator CoroutineFadeOut(float time)
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x1D50AEC", Offset = "0x1D50AEC", VA = "0x1D50AEC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x1D50BE8", Offset = "0x1D50BE8", VA = "0x1D50BE8")]
		public CameraFader()
		{
		}
	}
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB56D8", Offset = "0xFB56D8")]
	public class FadeIn : ActionTask
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float fadeTime;

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x1800E78", Offset = "0x1800E78", VA = "0x1800E78", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x1800EAC", Offset = "0x1800EAC", VA = "0x1800EAC", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x1800EF0", Offset = "0x1800EF0", VA = "0x1800EF0")]
		public FadeIn()
		{
		}
	}
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5710", Offset = "0xFB5710")]
	public class FadeOut : ActionTask
	{
		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float fadeTime;

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x1800F00", Offset = "0x1800F00", VA = "0x1800F00", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x1800F34", Offset = "0x1800F34", VA = "0x1800F34", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1800F78", Offset = "0x1800F78", VA = "0x1800F78")]
		public FadeOut()
		{
		}
	}
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5748", Offset = "0xFB5748")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5748", Offset = "0xFB5748")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB5748", Offset = "0xFB5748")]
	public class Say : ActionTask<IDialogueActor>
	{
		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Statement statement;

		[Token(Token = "0x1700032C")]
		protected override string info
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x180BBA4", Offset = "0x180BBA4", VA = "0x180BBA4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x180BC44", Offset = "0x180BC44", VA = "0x180BC44", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x180BD20", Offset = "0x180BD20", VA = "0x180BD20")]
		public Say()
		{
		}
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB57EC", Offset = "0xFB57EC")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB57EC", Offset = "0xFB57EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB57EC", Offset = "0xFB57EC")]
	public class SayRandom : ActionTask<IDialogueActor>
	{
		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Statement> statements;

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x180BDA8", Offset = "0x180BDA8", VA = "0x180BDA8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x180BEC4", Offset = "0x180BEC4", VA = "0x180BEC4")]
		public SayRandom()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5890", Offset = "0xFB5890")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5890", Offset = "0xFB5890")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB5890", Offset = "0xFB5890")]
	public class StartDialogueTree : ActionTask<IDialogueActor>
	{
		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1378", Offset = "0xFC1378")]
		public BBParameter<DialogueTreeController> dialogueTreeController;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool waitActionFinish;

		[Token(Token = "0x1700032D")]
		protected override string info
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x180EEDC", Offset = "0x180EEDC", VA = "0x180EEDC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x180EF30", Offset = "0x180EF30", VA = "0x180EF30", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x180F02C", Offset = "0x180F02C", VA = "0x180F02C")]
		public StartDialogueTree()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x180F084", Offset = "0x180F084", VA = "0x180F084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB4B8", Offset = "0xFCB4B8")]
		private void <OnExecute>b__4_0(bool success)
		{
		}
	}
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5934", Offset = "0xFB5934")]
	public class CreateGameObject : ActionTask
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<string> objectName;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> position;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<Vector3> rotation;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1D51238", Offset = "0x1D51238", VA = "0x1D51238", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x1D5135C", Offset = "0x1D5135C", VA = "0x1D5135C")]
		public CreateGameObject()
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB596C", Offset = "0xFB596C")]
	public class CreatePrimitive : ActionTask
	{
		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<string> objectName;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> position;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<Vector3> rotation;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<PrimitiveType> type;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1D51364", Offset = "0x1D51364", VA = "0x1D51364", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1D51498", Offset = "0x1D51498", VA = "0x1D51498")]
		public CreatePrimitive()
		{
		}
	}
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB59A4", Offset = "0xFB59A4")]
	public class DestroyGameObject : ActionTask<Transform>
	{
		[Token(Token = "0x1700032E")]
		protected override string info
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0x1D529DC", Offset = "0x1D529DC", VA = "0x1D529DC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1D52A3C", Offset = "0x1D52A3C", VA = "0x1D52A3C", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1D52ADC", Offset = "0x1D52ADC", VA = "0x1D52ADC")]
		public DestroyGameObject()
		{
		}
	}
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB59DC", Offset = "0xFB59DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB59DC", Offset = "0xFB59DC")]
	public class FindAllWithName : ActionTask
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC13A8", Offset = "0xFC13A8")]
		public BBParameter<string> searchName;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveAs;

		[Token(Token = "0x1700032F")]
		protected override string info
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x1800F88", Offset = "0x1800F88", VA = "0x1800F88", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x1801104", Offset = "0x1801104", VA = "0x1801104", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x180128C", Offset = "0x180128C", VA = "0x180128C")]
		public FindAllWithName()
		{
		}
	}
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5A3C", Offset = "0xFB5A3C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5A3C", Offset = "0xFB5A3C")]
	public class FindAllWithTag : ActionTask
	{
		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC13C8", Offset = "0xFC13C8")]
		[TagField]
		public string searchTag;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveAs;

		[Token(Token = "0x17000330")]
		protected override string info
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x1801300", Offset = "0x1801300", VA = "0x1801300", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x180147C", Offset = "0x180147C", VA = "0x180147C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x1801528", Offset = "0x1801528", VA = "0x1801528")]
		public FindAllWithTag()
		{
		}
	}
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5A9C", Offset = "0xFB5A9C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5A9C", Offset = "0xFB5A9C")]
	public class FindChildByName : ActionTask<Transform>
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1410", Offset = "0xFC1410")]
		public BBParameter<string> childName;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Transform> saveAs;

		[Token(Token = "0x17000331")]
		protected override string info
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x1801588", Offset = "0x1801588", VA = "0x1801588", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x18015F8", Offset = "0x18015F8", VA = "0x18015F8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x18016E4", Offset = "0x18016E4", VA = "0x18016E4")]
		public FindChildByName()
		{
		}
	}
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5AFC", Offset = "0xFB5AFC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5AFC", Offset = "0xFB5AFC")]
	public class FindClosestWithTag : ActionTask<Transform>
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[TagField]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1430", Offset = "0xFC1430")]
		public BBParameter<string> searchTag;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<bool> ignoreChildren;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveObjectAs;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x18017FC", Offset = "0x18017FC", VA = "0x18017FC", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x1801B9C", Offset = "0x1801B9C", VA = "0x1801B9C")]
		public FindClosestWithTag()
		{
		}
	}
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5B5C", Offset = "0xFB5B5C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5B5C", Offset = "0xFB5B5C")]
	public class FindObjectOfType<T> : ActionTask where T : UnityEngine.Component
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveComponentAs;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x600157E")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600157F")]
		public FindObjectOfType()
		{
		}
	}
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5BBC", Offset = "0xFB5BBC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB5BBC", Offset = "0xFB5BBC")]
	public class FindObjectsOfType<T> : ActionTask where T : UnityEngine.Component
	{
		[Serializable]
		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB98C4", Offset = "0xFB98C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, GameObject> <>9__2_0;

			[Token(Token = "0x6002092")]
			public <>c()
			{
			}

			[Token(Token = "0x6002093")]
			internal GameObject <OnExecute>b__2_0(T o)
			{
				return null;
			}
		}

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveGameObjects;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<List<T>> saveComponents;

		[Token(Token = "0x6001580")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001581")]
		public FindObjectsOfType()
		{
		}
	}
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5C1C", Offset = "0xFB5C1C")]
	public class FindWithName : ActionTask
	{
		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC14C8", Offset = "0xFC14C8")]
		public BBParameter<string> gameObjectName;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x17000332")]
		protected override string info
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0x1801BEC", Offset = "0x1801BEC", VA = "0x1801BEC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1801D68", Offset = "0x1801D68", VA = "0x1801D68", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1801DF4", Offset = "0x1801DF4", VA = "0x1801DF4")]
		public FindWithName()
		{
		}
	}
	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5C54", Offset = "0xFB5C54")]
	public class FindWithTag : ActionTask
	{
		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC14E8", Offset = "0xFC14E8")]
		[TagField]
		public string searchTag;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x17000333")]
		protected override string info
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x1801DFC", Offset = "0x1801DFC", VA = "0x1801DFC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1801F78", Offset = "0x1801F78", VA = "0x1801F78", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x1801FF0", Offset = "0x1801FF0", VA = "0x1801FF0")]
		public FindWithTag()
		{
		}
	}
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5C8C", Offset = "0xFB5C8C")]
	public class GetAllChildGameObjects : ActionTask<Transform>
	{
		[Serializable]
		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB98D4", Offset = "0xFB98D4")]
		private sealed class <>c
		{
			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, GameObject> <>9__4_0;

			[Token(Token = "0x6002095")]
			[Address(RVA = "0x1802F54", Offset = "0x1802F54", VA = "0x1802F54")]
			public <>c()
			{
			}

			[Token(Token = "0x6002096")]
			[Address(RVA = "0x1802F5C", Offset = "0x1802F5C", VA = "0x1802F5C")]
			internal GameObject <OnExecute>b__4_0(Transform t)
			{
				return null;
			}
		}

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveAs;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool recursive;

		[Token(Token = "0x17000334")]
		protected override string info
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x1802778", Offset = "0x1802778", VA = "0x1802778", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1802810", Offset = "0x1802810", VA = "0x1802810", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1802BD8", Offset = "0x1802BD8", VA = "0x1802BD8")]
		private List<Transform> Get(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x1802E9C", Offset = "0x1802E9C", VA = "0x1802E9C")]
		public GetAllChildGameObjects()
		{
		}
	}
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5CC4", Offset = "0xFB5CC4")]
	public class GetComponent<T> : ActionTask<Transform> where T : UnityEngine.Component
	{
		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveAs;

		[Token(Token = "0x17000335")]
		protected override string info
		{
			[Token(Token = "0x600158C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158D")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600158E")]
		public GetComponent()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5CFC", Offset = "0xFB5CFC")]
	public class GetDistance : ActionTask<Transform>
	{
		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1550", Offset = "0xFC1550")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<float> saveAs;

		[Token(Token = "0x17000336")]
		protected override string info
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x18033A8", Offset = "0x18033A8", VA = "0x18033A8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x1803418", Offset = "0x1803418", VA = "0x1803418", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x1803540", Offset = "0x1803540", VA = "0x1803540")]
		public GetDistance()
		{
		}
	}
	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFB5D34", Offset = "0xFB5D34")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5D34", Offset = "0xFB5D34")]
	public class GetGameObjectPosition : ActionTask<Transform>
	{
		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveAs;

		[Token(Token = "0x17000337")]
		protected override string info
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x1803590", Offset = "0x1803590", VA = "0x1803590", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x1803718", Offset = "0x1803718", VA = "0x1803718", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x18037A0", Offset = "0x18037A0", VA = "0x18037A0")]
		public GetGameObjectPosition()
		{
		}
	}
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5D94", Offset = "0xFB5D94")]
	public class InstantiateGameObject : ActionTask<Transform>
	{
		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Transform> parent;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> clonePosition;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<Vector3> cloneRotation;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveCloneAs;

		[Token(Token = "0x17000338")]
		protected override string info
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x1806030", Offset = "0x1806030", VA = "0x1806030", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1806328", Offset = "0x1806328", VA = "0x1806328", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1806490", Offset = "0x1806490", VA = "0x1806490")]
		public InstantiateGameObject()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5DCC", Offset = "0xFB5DCC")]
	public class LookAt : ActionTask<Transform>
	{
		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1590", Offset = "0xFC1590")]
		public BBParameter<GameObject> lookTarget;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool repeat;

		[Token(Token = "0x17000339")]
		protected override string info
		{
			[Token(Token = "0x6001598")]
			[Address(RVA = "0x1806758", Offset = "0x1806758", VA = "0x1806758", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x18067AC", Offset = "0x18067AC", VA = "0x18067AC", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x1806938", Offset = "0x1806938", VA = "0x1806938", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x18067B0", Offset = "0x18067B0", VA = "0x18067B0")]
		private void DoLook()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x180693C", Offset = "0x180693C", VA = "0x180693C")]
		public LookAt()
		{
		}
	}
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5E04", Offset = "0xFB5E04")]
	public class RemoveComponent<T> : ActionTask<Transform> where T : UnityEngine.Component
	{
		[Token(Token = "0x1700033A")]
		protected override string info
		{
			[Token(Token = "0x600159D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159E")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600159F")]
		public RemoveComponent()
		{
		}
	}
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB5E3C", Offset = "0xFB5E3C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5E3C", Offset = "0xFB5E3C")]
	public class SetObjectActive : ActionTask<Transform>
	{
		[Token(Token = "0x200050D")]
		public enum SetActiveMode
		{
			[Token(Token = "0x400165D")]
			Deactivate,
			[Token(Token = "0x400165E")]
			Activate,
			[Token(Token = "0x400165F")]
			Toggle
		}

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SetActiveMode setTo;

		[Token(Token = "0x1700033B")]
		protected override string info
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x180D9C8", Offset = "0x180D9C8", VA = "0x180D9C8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x180DA5C", Offset = "0x180DA5C", VA = "0x180DA5C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x180DB20", Offset = "0x180DB20", VA = "0x180DB20")]
		public SetObjectActive()
		{
		}
	}
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5EA0", Offset = "0xFB5EA0")]
	public class GetInputAxis : ActionTask
	{
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<string> xAxisName;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<string> yAxisName;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<string> zAxisName;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> multiplier;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveAs;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[BlackboardOnly]
		public BBParameter<float> saveXAs;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[BlackboardOnly]
		public BBParameter<float> saveYAs;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[BlackboardOnly]
		public BBParameter<float> saveZAs;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool repeat;

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x18037F0", Offset = "0x18037F0", VA = "0x18037F0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x1803A34", Offset = "0x1803A34", VA = "0x1803A34", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x18037F4", Offset = "0x18037F4", VA = "0x18037F4")]
		private void Do()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x1803A38", Offset = "0x1803A38", VA = "0x1803A38")]
		public GetInputAxis()
		{
		}
	}
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5ED8", Offset = "0xFB5ED8")]
	public class GetMousePosition : ActionTask
	{
		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveAs;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool repeat;

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x1804C7C", Offset = "0x1804C7C", VA = "0x1804C7C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x1804D04", Offset = "0x1804D04", VA = "0x1804D04", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1804C80", Offset = "0x1804C80", VA = "0x1804C80")]
		private void Do()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x1804D08", Offset = "0x1804D08", VA = "0x1804D08")]
		public GetMousePosition()
		{
		}
	}
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5F10", Offset = "0xFB5F10")]
	public class GetMouseScrollDelta : ActionTask
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> saveAs;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool repeat;

		[Token(Token = "0x1700033C")]
		protected override string info
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x1804D10", Offset = "0x1804D10", VA = "0x1804D10", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1804D64", Offset = "0x1804D64", VA = "0x1804D64", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x1804DF8", Offset = "0x1804DF8", VA = "0x1804DF8", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x1804D68", Offset = "0x1804D68", VA = "0x1804D68")]
		private void Do()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1804DFC", Offset = "0x1804DFC", VA = "0x1804DFC")]
		public GetMouseScrollDelta()
		{
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5F48", Offset = "0xFB5F48")]
	public class WaitMousePick : ActionTask
	{
		[Token(Token = "0x200050E")]
		public enum ButtonKeys
		{
			[Token(Token = "0x4001661")]
			Left,
			[Token(Token = "0x4001662")]
			Right,
			[Token(Token = "0x4001663")]
			Middle
		}

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ButtonKeys buttonKey;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LayerMask mask;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveObjectAs;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePositionAs;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int buttonID;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private RaycastHit hit;

		[Token(Token = "0x1700033D")]
		protected override string info
		{
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x180F734", Offset = "0x180F734", VA = "0x180F734", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x180F7B8", Offset = "0x180F7B8", VA = "0x180F7B8", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x180F920", Offset = "0x180F920", VA = "0x180F920")]
		public WaitMousePick()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5F80", Offset = "0xFB5F80")]
	public class WaitMousePick2D : ActionTask
	{
		[Token(Token = "0x200050F")]
		public enum ButtonKeys
		{
			[Token(Token = "0x4001665")]
			Left,
			[Token(Token = "0x4001666")]
			Right,
			[Token(Token = "0x4001667")]
			Middle
		}

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ButtonKeys buttonKey;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LayerMask mask;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveObjectAs;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePositionAs;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int buttonID;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private RaycastHit2D hit;

		[Token(Token = "0x1700033E")]
		protected override string info
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x180F954", Offset = "0x180F954", VA = "0x180F954", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x180F9D8", Offset = "0x180F9D8", VA = "0x180F9D8", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x180FC84", Offset = "0x180FC84", VA = "0x180FC84")]
		public WaitMousePick2D()
		{
		}
	}
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB5FB8", Offset = "0xFB5FB8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB5FB8", Offset = "0xFB5FB8")]
	public class CurveTransformTween : ActionTask<Transform>
	{
		[Token(Token = "0x2000510")]
		public enum TransformMode
		{
			[Token(Token = "0x4001669")]
			Position,
			[Token(Token = "0x400166A")]
			Rotation,
			[Token(Token = "0x400166B")]
			Scale
		}

		[Token(Token = "0x2000511")]
		public enum TweenMode
		{
			[Token(Token = "0x400166D")]
			Absolute,
			[Token(Token = "0x400166E")]
			Additive
		}

		[Token(Token = "0x2000512")]
		public enum PlayMode
		{
			[Token(Token = "0x4001670")]
			Normal,
			[Token(Token = "0x4001671")]
			PingPong
		}

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TransformMode transformMode;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public TweenMode mode;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PlayMode playMode;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<Vector3> targetPosition;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<AnimationCurve> curve;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<float> time;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 original;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 final;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool ponging;

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x1D514A0", Offset = "0x1D514A0", VA = "0x1D514A0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x1D5171C", Offset = "0x1D5171C", VA = "0x1D5171C", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x1D51938", Offset = "0x1D51938", VA = "0x1D51938")]
		public CurveTransformTween()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB601C", Offset = "0xFB601C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB601C", Offset = "0xFB601C")]
	public class InputMove : ActionTask<Transform>
	{
		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> strafe;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<float> turn;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> forward;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<float> up;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<float> moveSpeed;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<float> rotationSpeed;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool repeat;

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x1805A80", Offset = "0x1805A80", VA = "0x1805A80", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x1805F94", Offset = "0x1805F94", VA = "0x1805F94")]
		public InputMove()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB607C", Offset = "0xFB607C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB607C", Offset = "0xFB607C")]
	public class MoveAway : ActionTask<Transform>
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC16A0", Offset = "0xFC16A0")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> stopDistance;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool waitActionFinish;

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x1807FDC", Offset = "0x1807FDC", VA = "0x1807FDC", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1808228", Offset = "0x1808228", VA = "0x1808228")]
		public MoveAway()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB60DC", Offset = "0xFB60DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB60DC", Offset = "0xFB60DC")]
	public class MoveDirection : ActionTask<Transform>
	{
		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC16B0", Offset = "0xFC16B0")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> direction;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> stopMaxDistance;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<Vector3> offset;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<bool> useSelfDir;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool waitActionFinish;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 moveDir;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 prePoint;

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x18082B8", Offset = "0x18082B8", VA = "0x18082B8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x1808558", Offset = "0x1808558", VA = "0x1808558", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1808700", Offset = "0x1808700", VA = "0x1808700")]
		private bool IsEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x18087F4", Offset = "0x18087F4", VA = "0x18087F4")]
		public MoveDirection()
		{
		}
	}
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB613C", Offset = "0xFB613C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB613C", Offset = "0xFB613C")]
	public class MoveTowards : ActionTask<Transform>
	{
		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC16C0", Offset = "0xFC16C0")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> stopDistance;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool waitActionFinish;

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1809480", Offset = "0x1809480", VA = "0x1809480", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x18096CC", Offset = "0x18096CC", VA = "0x18096CC")]
		public MoveTowards()
		{
		}
	}
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB619C", Offset = "0xFB619C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB619C", Offset = "0xFB619C")]
	public class RotateAway : ActionTask<Transform>
	{
		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC16D0", Offset = "0xFC16D0")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC16E0", Offset = "0xFC16E0")]
		public BBParameter<float> angleDifference;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> upVector;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool waitActionFinish;

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x180B120", Offset = "0x180B120", VA = "0x180B120", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x180B474", Offset = "0x180B474", VA = "0x180B474")]
		public RotateAway()
		{
		}
	}
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB61FC", Offset = "0xFB61FC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB61FC", Offset = "0xFB61FC")]
	public class RotateTowards : ActionTask<Transform>
	{
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC16F8", Offset = "0xFC16F8")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC1708", Offset = "0xFC1708")]
		public BBParameter<float> angleDifference;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> upVector;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool waitActionFinish;

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x180B558", Offset = "0x180B558", VA = "0x180B558", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x180B8A4", Offset = "0x180B8A4", VA = "0x180B8A4")]
		public RotateTowards()
		{
		}
	}
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB625C", Offset = "0xFB625C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB625C", Offset = "0xFB625C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB625C", Offset = "0xFB625C")]
	public class FindClosestEdge : ActionTask
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> targetPosition;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveFoundPosition;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NavMeshHit hit;

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1801734", Offset = "0x1801734", VA = "0x1801734", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x18017F4", Offset = "0x18017F4", VA = "0x18017F4")]
		public FindClosestEdge()
		{
		}
	}
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB62E4", Offset = "0xFB62E4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB62E4", Offset = "0xFB62E4")]
	public class Flee : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1730", Offset = "0xFC1730")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> fledDistance;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> lookAhead;

		[Token(Token = "0x1700033F")]
		protected override string info
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x1802050", Offset = "0x1802050", VA = "0x1802050", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x18020A4", Offset = "0x18020A4", VA = "0x18020A4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x1802248", Offset = "0x1802248", VA = "0x1802248", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x1802504", Offset = "0x1802504", VA = "0x1802504", Slot = "15")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1802514", Offset = "0x1802514", VA = "0x1802514", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x18025A8", Offset = "0x18025A8", VA = "0x18025A8")]
		public Flee()
		{
		}
	}
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB6344", Offset = "0xFB6344")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6344", Offset = "0xFB6344")]
	public class MoveToGameObject : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1740", Offset = "0xFC1740")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> keepDistance;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3? lastRequest;

		[Token(Token = "0x17000340")]
		protected override string info
		{
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x18088F4", Offset = "0x18088F4", VA = "0x18088F4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1808948", Offset = "0x1808948", VA = "0x1808948", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1808B00", Offset = "0x1808B00", VA = "0x1808B00", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1808D0C", Offset = "0x1808D0C", VA = "0x1808D0C", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x1808DA8", Offset = "0x1808DA8", VA = "0x1808DA8", Slot = "15")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x1808DB8", Offset = "0x1808DB8", VA = "0x1808DB8", Slot = "10")]
		public override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x1808EE0", Offset = "0x1808EE0", VA = "0x1808EE0")]
		public MoveToGameObject()
		{
		}
	}
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB63A8", Offset = "0xFB63A8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB63A8", Offset = "0xFB63A8")]
	public class MoveToPosition : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> targetPosition;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float keepDistance;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3? lastRequest;

		[Token(Token = "0x17000341")]
		protected override string info
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x1808F74", Offset = "0x1808F74", VA = "0x1808F74", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x1808FC8", Offset = "0x1808FC8", VA = "0x1808FC8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x1809158", Offset = "0x1809158", VA = "0x1809158", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x1809354", Offset = "0x1809354", VA = "0x1809354", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x18093F0", Offset = "0x18093F0", VA = "0x18093F0", Slot = "15")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x1809400", Offset = "0x1809400", VA = "0x1809400")]
		public MoveToPosition()
		{
		}
	}
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB640C", Offset = "0xFB640C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB640C", Offset = "0xFB640C")]
	public class Patrol : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x2000513")]
		public enum PatrolMode
		{
			[Token(Token = "0x4001673")]
			Progressive,
			[Token(Token = "0x4001674")]
			Random
		}

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1750", Offset = "0xFC1750")]
		public BBParameter<List<GameObject>> targetList;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<PatrolMode> patrolMode;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float keepDistance;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int index;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3? lastRequest;

		[Token(Token = "0x17000342")]
		protected override string info
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0x18098E4", Offset = "0x18098E4", VA = "0x18098E4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x1809938", Offset = "0x1809938", VA = "0x1809938", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x1809C98", Offset = "0x1809C98", VA = "0x1809C98", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1809EC4", Offset = "0x1809EC4", VA = "0x1809EC4", Slot = "15")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x1809ED4", Offset = "0x1809ED4", VA = "0x1809ED4", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x1809F70", Offset = "0x1809F70", VA = "0x1809F70", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x180A150", Offset = "0x180A150", VA = "0x180A150")]
		public Patrol()
		{
		}
	}
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB646C", Offset = "0xFB646C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB646C", Offset = "0xFB646C")]
	public class Wander : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> speed;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> keepDistance;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> minWanderDistance;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> maxWanderDistance;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool repeat;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x180FCB8", Offset = "0x180FCB8", VA = "0x180FCB8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x1810020", Offset = "0x1810020", VA = "0x1810020", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x180FD44", Offset = "0x180FD44", VA = "0x180FD44")]
		private void DoWander()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x1810120", Offset = "0x1810120", VA = "0x1810120", Slot = "15")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x1810130", Offset = "0x1810130", VA = "0x1810130", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x18101C4", Offset = "0x18101C4", VA = "0x18101C4")]
		public Wander()
		{
		}
	}
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB64CC", Offset = "0xFB64CC")]
	public class GetLinecastInfo : ActionTask<Transform>
	{
		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1760", Offset = "0xFC1760")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<LayerMask> layerMask;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveHitGameObjectAs;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePointAs;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveNormalAs;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RaycastHit hit;

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x1803AF4", Offset = "0x1803AF4", VA = "0x1803AF4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x1803CD4", Offset = "0x1803CD4", VA = "0x1803CD4", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x1803E50", Offset = "0x1803E50", VA = "0x1803E50")]
		public GetLinecastInfo()
		{
		}
	}
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6504", Offset = "0xFB6504")]
	public class GetLinecastInfo2D : ActionTask<Transform>
	{
		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC17B0", Offset = "0xFC17B0")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LayerMask mask;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveHitGameObjectAs;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePointAs;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveNormalAs;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RaycastHit2D hit;

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x1803ED0", Offset = "0x1803ED0", VA = "0x1803ED0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x1804190", Offset = "0x1804190", VA = "0x1804190", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x180430C", Offset = "0x180430C", VA = "0x180430C")]
		public GetLinecastInfo2D()
		{
		}
	}
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB653C", Offset = "0xFB653C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB653C", Offset = "0xFB653C")]
	public class GetLinecastInfo2DAll : ActionTask<Transform>
	{
		[Serializable]
		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB98E4", Offset = "0xFB98E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RaycastHit2D, GameObject> <>9__7_0;

			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<RaycastHit2D, float> <>9__7_1;

			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<RaycastHit2D, Vector2> <>9__7_2;

			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<RaycastHit2D, Vector2> <>9__7_3;

			[Token(Token = "0x6002098")]
			[Address(RVA = "0x1804AC8", Offset = "0x1804AC8", VA = "0x1804AC8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002099")]
			[Address(RVA = "0x1804AD0", Offset = "0x1804AD0", VA = "0x1804AD0")]
			internal GameObject <OnExecute>b__7_0(RaycastHit2D h)
			{
				return null;
			}

			[Token(Token = "0x600209A")]
			[Address(RVA = "0x1804AF8", Offset = "0x1804AF8", VA = "0x1804AF8")]
			internal float <OnExecute>b__7_1(RaycastHit2D h)
			{
				return default(float);
			}

			[Token(Token = "0x600209B")]
			[Address(RVA = "0x1804B04", Offset = "0x1804B04", VA = "0x1804B04")]
			internal Vector2 <OnExecute>b__7_2(RaycastHit2D h)
			{
				return default(Vector2);
			}

			[Token(Token = "0x600209C")]
			[Address(RVA = "0x1804B10", Offset = "0x1804B10", VA = "0x1804B10")]
			internal Vector2 <OnExecute>b__7_3(RaycastHit2D h)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1800", Offset = "0xFC1800")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LayerMask mask;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveHitGameObjectsAs;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<List<float>> saveDistancesAs;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<List<Vector3>> savePointsAs;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[BlackboardOnly]
		public BBParameter<List<Vector3>> saveNormalsAs;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RaycastHit2D[] hits;

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x180436C", Offset = "0x180436C", VA = "0x180436C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x1804884", Offset = "0x1804884", VA = "0x1804884", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1804A00", Offset = "0x1804A00", VA = "0x1804A00")]
		public GetLinecastInfo2DAll()
		{
		}
	}
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB659C", Offset = "0xFB659C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB659C", Offset = "0xFB659C")]
	public class GetOverlapSphereObjects : ActionTask<Transform>
	{
		[Serializable]
		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB98F4", Offset = "0xFB98F4")]
		private sealed class <>c
		{
			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, GameObject> <>9__3_0;

			[Token(Token = "0x600209E")]
			[Address(RVA = "0x18053EC", Offset = "0x18053EC", VA = "0x18053EC")]
			public <>c()
			{
			}

			[Token(Token = "0x600209F")]
			[Address(RVA = "0x18053F4", Offset = "0x18053F4", VA = "0x18053F4")]
			internal GameObject <OnExecute>b__3_0(Collider c)
			{
				return null;
			}
		}

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LayerMask layerMask;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> radius;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveObjectsAs;

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x1804F7C", Offset = "0x1804F7C", VA = "0x1804F7C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x18051C4", Offset = "0x18051C4", VA = "0x18051C4", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x1805300", Offset = "0x1805300", VA = "0x1805300")]
		public GetOverlapSphereObjects()
		{
		}
	}
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB65FC", Offset = "0xFB65FC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB65FC", Offset = "0xFB65FC")]
	public class SendMessage : ActionTask<Transform>
	{
		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1860", Offset = "0xFC1860")]
		public BBParameter<string> methodName;

		[Token(Token = "0x17000343")]
		protected override string info
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x180C588", Offset = "0x180C588", VA = "0x180C588", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x180C5DC", Offset = "0x180C5DC", VA = "0x180C5DC", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x180C670", Offset = "0x180C670", VA = "0x180C670")]
		public SendMessage()
		{
		}
	}
	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB665C", Offset = "0xFB665C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB665C", Offset = "0xFB665C")]
	public class SendMessage<T> : ActionTask<Transform>
	{
		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1870", Offset = "0xFC1870")]
		public BBParameter<string> methodName;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> argument;

		[Token(Token = "0x17000344")]
		protected override string info
		{
			[Token(Token = "0x60015F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F9")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015FA")]
		public SendMessage()
		{
		}
	}
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB66BC", Offset = "0xFB66BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB66BC", Offset = "0xFB66BC")]
	public class SendMessageToType<T> : ActionTask where T : UnityEngine.Component
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1880", Offset = "0xFC1880")]
		public BBParameter<string> message;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<object> argument;

		[Token(Token = "0x17000345")]
		protected override string info
		{
			[Token(Token = "0x60015FB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FC")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60015FD")]
		public SendMessageToType()
		{
		}
	}
	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB671C", Offset = "0xFB671C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB671C", Offset = "0xFB671C")]
	public class ExecuteFunction : ActionTask, ISubParametersContainer
	{
		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9904", Offset = "0xFB9904")]
		private sealed class <InternalCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400167C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400167D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400167E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExecuteFunction <>4__this;

			[Token(Token = "0x400167F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator routine;

			[Token(Token = "0x17000568")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020A3")]
				[Address(RVA = "0x1800E08", Offset = "0x1800E08", VA = "0x1800E08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000569")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020A5")]
				[Address(RVA = "0x1800E70", Offset = "0x1800E70", VA = "0x1800E70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x1800C28", Offset = "0x1800C28", VA = "0x1800C28")]
			[DebuggerHidden]
			public <InternalCoroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x1800C60", Offset = "0x1800C60", VA = "0x1800C60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x1800C64", Offset = "0x1800C64", VA = "0x1800C64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x1800E10", Offset = "0x1800E10", VA = "0x1800E10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		private bool routineRunning;

		[Token(Token = "0x17000346")]
		public override Type agentType
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x1800B28", Offset = "0x1800B28", VA = "0x1800B28", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		protected override string info
		{
			[Token(Token = "0x6001600")]
			[Address(RVA = "0x1800B30", Offset = "0x1800B30", VA = "0x1800B30", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x1800B20", Offset = "0x1800B20", VA = "0x1800B20", Slot = "16")]
		private BBParameter[] NodeCanvas.Framework.ISubParametersContainer.GetSubParameters()
		{
			return null;
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x1800B78", Offset = "0x1800B78", VA = "0x1800B78", Slot = "6")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x1800B7C", Offset = "0x1800B7C", VA = "0x1800B7C", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x1800B84", Offset = "0x1800B84", VA = "0x1800B84", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x1800B88", Offset = "0x1800B88", VA = "0x1800B88", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x1800B90", Offset = "0x1800B90", VA = "0x1800B90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB4C8", Offset = "0xFCB4C8")]
		private IEnumerator InternalCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x1800C54", Offset = "0x1800C54", VA = "0x1800C54")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x1800C58", Offset = "0x1800C58", VA = "0x1800C58")]
		public ExecuteFunction()
		{
		}
	}
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB677C", Offset = "0xFB677C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB677C", Offset = "0xFB677C")]
	public class DebugBeep : ActionTask
	{
		[Token(Token = "0x6001608")]
		[Address(RVA = "0x1D519E4", Offset = "0x1D519E4", VA = "0x1D519E4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x1D519EC", Offset = "0x1D519EC", VA = "0x1D519EC")]
		public DebugBeep()
		{
		}
	}
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB67DC", Offset = "0xFB67DC")]
	public class DebugDrawLine : ActionTask
	{
		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> from;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> to;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color color;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float timeToShow;

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1D519F4", Offset = "0x1D519F4", VA = "0x1D519F4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x1D51AFC", Offset = "0x1D51AFC", VA = "0x1D51AFC")]
		public DebugDrawLine()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6814", Offset = "0xFB6814")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6814", Offset = "0xFB6814")]
	public class DebugLogText : ActionTask<Transform>
	{
		[Token(Token = "0x2000517")]
		public enum LogMode
		{
			[Token(Token = "0x4001681")]
			Log,
			[Token(Token = "0x4001682")]
			Warning,
			[Token(Token = "0x4001683")]
			Error
		}

		[Token(Token = "0x2000518")]
		public enum VerboseMode
		{
			[Token(Token = "0x4001685")]
			LogAndDisplayLabel,
			[Token(Token = "0x4001686")]
			LogOnly,
			[Token(Token = "0x4001687")]
			DisplayLabelOnly
		}

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC18A0", Offset = "0xFC18A0")]
		public BBParameter<string> log;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float labelYOffset;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float secondsToRun;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public VerboseMode verboseMode;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public LogMode logMode;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CompactStatus finishStatus;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Texture2D _tex;

		[Token(Token = "0x17000348")]
		protected override string info
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x1D51B3C", Offset = "0x1D51B3C", VA = "0x1D51B3C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000349")]
		private Texture2D tex
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0x1D51F80", Offset = "0x1D51F80", VA = "0x1D51F80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x1D51C1C", Offset = "0x1D51C1C", VA = "0x1D51C1C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x1D51E6C", Offset = "0x1D51E6C", VA = "0x1D51E6C", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x1D51F30", Offset = "0x1D51F30", VA = "0x1D51F30", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x1D52068", Offset = "0x1D52068", VA = "0x1D52068")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x1D523C0", Offset = "0x1D523C0", VA = "0x1D523C0")]
		public DebugLogText()
		{
		}
	}
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6874", Offset = "0xFB6874")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6874", Offset = "0xFB6874")]
	public class DebugLogVariable : ActionTask
	{
		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<object> log;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<string> prefix;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float secondsToRun;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public CompactStatus finishStatus;

		[Token(Token = "0x1700034A")]
		protected override string info
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x1D5244C", Offset = "0x1D5244C", VA = "0x1D5244C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x1D5262C", Offset = "0x1D5262C", VA = "0x1D5262C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x1D52844", Offset = "0x1D52844", VA = "0x1D52844", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x1D52894", Offset = "0x1D52894", VA = "0x1D52894")]
		public DebugLogVariable()
		{
		}
	}
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB68D4", Offset = "0xFB68D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB68D4", Offset = "0xFB68D4")]
	public class ForceFinishGraph : ActionTask
	{
		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CompactStatus finishStatus;

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x1802654", Offset = "0x1802654", VA = "0x1802654", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x1802768", Offset = "0x1802768", VA = "0x1802768")]
		public ForceFinishGraph()
		{
		}
	}
	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB6934", Offset = "0xFB6934")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6934", Offset = "0xFB6934")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6934", Offset = "0xFB6934")]
	public class GraphOwnerControl : ActionTask<GraphOwner>
	{
		[Token(Token = "0x2000519")]
		public enum Control
		{
			[Token(Token = "0x4001689")]
			StartBehaviour,
			[Token(Token = "0x400168A")]
			StopBehaviour,
			[Token(Token = "0x400168B")]
			PauseBehaviour
		}

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9914", Offset = "0xFB9914")]
		private sealed class <YieldDo>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400168C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400168D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400168E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GraphOwnerControl <>4__this;

			[Token(Token = "0x1700056A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020A9")]
				[Address(RVA = "0x1805A10", Offset = "0x1805A10", VA = "0x1805A10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020AB")]
				[Address(RVA = "0x1805A78", Offset = "0x1805A78", VA = "0x1805A78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020A6")]
			[Address(RVA = "0x1805890", Offset = "0x1805890", VA = "0x1805890")]
			[DebuggerHidden]
			public <YieldDo>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x18059A0", Offset = "0x18059A0", VA = "0x18059A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x18059A4", Offset = "0x18059A4", VA = "0x18059A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x1805A18", Offset = "0x1805A18", VA = "0x1805A18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Control control;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool waitActionFinish;

		[Token(Token = "0x1700034B")]
		protected override string info
		{
			[Token(Token = "0x6001619")]
			[Address(RVA = "0x1805528", Offset = "0x1805528", VA = "0x1805528", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x18055DC", Offset = "0x18055DC", VA = "0x18055DC", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x1805754", Offset = "0x1805754", VA = "0x1805754")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB52C", Offset = "0xFCB52C")]
		private IEnumerator YieldDo()
		{
			return null;
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x18057D0", Offset = "0x18057D0", VA = "0x18057D0")]
		private void Do()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x18058BC", Offset = "0x18058BC", VA = "0x18058BC", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x180593C", Offset = "0x180593C", VA = "0x180593C")]
		public GraphOwnerControl()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x1805994", Offset = "0x1805994", VA = "0x1805994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB590", Offset = "0xFCB590")]
		private void <OnExecute>b__5_0(bool s)
		{
		}
	}
	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB69BC", Offset = "0xFB69BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB69BC", Offset = "0xFB69BC")]
	public class RunForever : ActionTask
	{
		[Token(Token = "0x6001620")]
		[Address(RVA = "0x180B988", Offset = "0x180B988", VA = "0x180B988")]
		public RunForever()
		{
		}
	}
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6A1C", Offset = "0xFB6A1C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6A1C", Offset = "0xFB6A1C")]
	public class SendEvent : ActionTask<GraphOwner>
	{
		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC18C0", Offset = "0xFC18C0")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> delay;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool sendGlobal;

		[Token(Token = "0x1700034C")]
		protected override string info
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x180BF48", Offset = "0x180BF48", VA = "0x180BF48", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x180C168", Offset = "0x180C168", VA = "0x180C168", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x180C2E4", Offset = "0x180C2E4", VA = "0x180C2E4")]
		public SendEvent()
		{
		}
	}
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6A7C", Offset = "0xFB6A7C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6A7C", Offset = "0xFB6A7C")]
	public class SendEvent<T> : ActionTask<GraphOwner>
	{
		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC18D0", Offset = "0xFC18D0")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> eventValue;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<float> delay;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool sendGlobal;

		[Token(Token = "0x1700034D")]
		protected override string info
		{
			[Token(Token = "0x6001624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001625")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001626")]
		public SendEvent()
		{
		}
	}
	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6ADC", Offset = "0xFB6ADC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6ADC", Offset = "0xFB6ADC")]
	public class SendEventToObjects : ActionTask
	{
		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC18E0", Offset = "0xFC18E0")]
		public BBParameter<List<GameObject>> targetObjects;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC18F0", Offset = "0xFC18F0")]
		public BBParameter<string> eventName;

		[Token(Token = "0x1700034E")]
		protected override string info
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0x180C334", Offset = "0x180C334", VA = "0x180C334", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x180C388", Offset = "0x180C388", VA = "0x180C388", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x180C580", Offset = "0x180C580", VA = "0x180C580")]
		public SendEventToObjects()
		{
		}
	}
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6B3C", Offset = "0xFB6B3C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6B3C", Offset = "0xFB6B3C")]
	public class SendEventToObjects<T> : ActionTask
	{
		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1900", Offset = "0xFC1900")]
		public BBParameter<List<GameObject>> targetObjects;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1910", Offset = "0xFC1910")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> eventValue;

		[Token(Token = "0x1700034F")]
		protected override string info
		{
			[Token(Token = "0x600162A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600162B")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600162C")]
		public SendEventToObjects()
		{
		}
	}
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6B9C", Offset = "0xFB6B9C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6B9C", Offset = "0xFB6B9C")]
	public class ShoutEvent : ActionTask<Transform>
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1920", Offset = "0xFC1920")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> shoutRange;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> completionTime;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GraphOwner[] owners;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<GraphOwner> receivedOwners;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float traveledDistance;

		[Token(Token = "0x17000350")]
		protected override string info
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0x180E228", Offset = "0x180E228", VA = "0x180E228", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x180E298", Offset = "0x180E298", VA = "0x180E298", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x180E330", Offset = "0x180E330", VA = "0x180E330", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x180E5C4", Offset = "0x180E5C4", VA = "0x180E5C4", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x180E724", Offset = "0x180E724", VA = "0x180E724")]
		public ShoutEvent()
		{
		}
	}
	[Token(Token = "0x2000364")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6BFC", Offset = "0xFB6BFC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6BFC", Offset = "0xFB6BFC")]
	public class SwitchBehaviourTree : ActionTask<BehaviourTreeOwner>
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1930", Offset = "0xFC1930")]
		public BBParameter<BehaviourTree> behaviourTree;

		[Token(Token = "0x17000351")]
		protected override string info
		{
			[Token(Token = "0x6001632")]
			[Address(RVA = "0x180F090", Offset = "0x180F090", VA = "0x180F090", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x180F0E4", Offset = "0x180F0E4", VA = "0x180F0E4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x180F180", Offset = "0x180F180", VA = "0x180F180")]
		public SwitchBehaviourTree()
		{
		}
	}
	[Token(Token = "0x2000365")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6C5C", Offset = "0xFB6C5C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6C5C", Offset = "0xFB6C5C")]
	public class SwitchFSM : ActionTask<FSMOwner>
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1940", Offset = "0xFC1940")]
		public BBParameter<FSM> fsm;

		[Token(Token = "0x17000352")]
		protected override string info
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0x180F1D0", Offset = "0x180F1D0", VA = "0x180F1D0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x180F224", Offset = "0x180F224", VA = "0x180F224", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x180F2C0", Offset = "0x180F2C0", VA = "0x180F2C0")]
		public SwitchFSM()
		{
		}
	}
	[Token(Token = "0x2000366")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6CBC", Offset = "0xFB6CBC")]
	public class Wait : ActionTask
	{
		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> waitTime;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CompactStatus finishStatus;

		[Token(Token = "0x17000353")]
		protected override string info
		{
			[Token(Token = "0x6001638")]
			[Address(RVA = "0x180F5CC", Offset = "0x180F5CC", VA = "0x180F5CC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x180F620", Offset = "0x180F620", VA = "0x180F620", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x180F6C0", Offset = "0x180F6C0", VA = "0x180F6C0")]
		public Wait()
		{
		}
	}
	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6CF4", Offset = "0xFB6CF4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6CF4", Offset = "0xFB6CF4")]
	public class CheckSpeed : ConditionTask<Rigidbody>
	{
		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public CompareMethod checkType;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> value;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC1950", Offset = "0xFC1950")]
		public float differenceThreshold;

		[Token(Token = "0x17000354")]
		protected override string info
		{
			[Token(Token = "0x600163B")]
			[Address(RVA = "0x1D50E2C", Offset = "0x1D50E2C", VA = "0x1D50E2C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x1D50E94", Offset = "0x1D50E94", VA = "0x1D50E94", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x1D50F5C", Offset = "0x1D50F5C", VA = "0x1D50F5C")]
		public CheckSpeed()
		{
		}
	}
}
namespace NodeCanvas.StateMachines
{
	[Token(Token = "0x2000368")]
	[GraphInfo]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xFB6D54", Offset = "0xFB6D54")]
	public class FSM : Graph
	{
		[Serializable]
		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9924", Offset = "0xFB9924")]
		private sealed class <>c
		{
			[Token(Token = "0x400168F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Node, bool> <>9__44_0;

			[Token(Token = "0x4001691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Node, string> <>9__44_1;

			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x1D4E140", Offset = "0x1D4E140", VA = "0x1D4E140")]
			public <>c()
			{
			}

			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x1D4E148", Offset = "0x1D4E148", VA = "0x1D4E148")]
			internal bool <GetStateNames>b__44_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x1D4E168", Offset = "0x1D4E168", VA = "0x1D4E168")]
			internal string <GetStateNames>b__44_1(Node n)
			{
				return null;
			}
		}

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9934", Offset = "0xFB9934")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4001692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x1D4E064", Offset = "0x1D4E064", VA = "0x1D4E064")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x1D4E188", Offset = "0x1D4E188", VA = "0x1D4E188")]
			internal bool <GetStateWithName>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9944", Offset = "0xFB9944")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4001693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MethodInfo enterMethod;

			[Token(Token = "0x4001694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MonoBehaviour mono;

			[Token(Token = "0x4001695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MethodInfo stayMethod;

			[Token(Token = "0x4001696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MethodInfo exitMethod;

			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x1D4E06C", Offset = "0x1D4E06C", VA = "0x1D4E06C")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x1D4E1EC", Offset = "0x1D4E1EC", VA = "0x1D4E1EC")]
			internal void <GatherDelegates>b__0(IState m)
			{
			}

			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x1D4E2B8", Offset = "0x1D4E2B8", VA = "0x1D4E2B8")]
			internal void <GatherDelegates>b__1(IState m)
			{
			}

			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x1D4E384", Offset = "0x1D4E384", VA = "0x1D4E384")]
			internal void <GatherDelegates>b__2(IState m)
			{
			}
		}

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
		private bool hasInitialized;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<IUpdatable> updatableNodes;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<AnyState> anyStates;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<ConcurrentState> concurentStates;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC199C", Offset = "0xFC199C")]
		private FSMState <currentState>k__BackingField;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC19AC", Offset = "0xFC19AC")]
		private FSMState <previousState>k__BackingField;

		[Token(Token = "0x17000355")]
		public FSMState currentState
		{
			[Token(Token = "0x6001644")]
			[Address(RVA = "0x1D4CD0C", Offset = "0x1D4CD0C", VA = "0x1D4CD0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB600", Offset = "0xFCB600")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001645")]
			[Address(RVA = "0x1D4CD14", Offset = "0x1D4CD14", VA = "0x1D4CD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB610", Offset = "0xFCB610")]
			private set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public FSMState previousState
		{
			[Token(Token = "0x6001646")]
			[Address(RVA = "0x1D4CD1C", Offset = "0x1D4CD1C", VA = "0x1D4CD1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB620", Offset = "0xFCB620")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001647")]
			[Address(RVA = "0x1D4CD24", Offset = "0x1D4CD24", VA = "0x1D4CD24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB630", Offset = "0xFCB630")]
			private set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public string currentStateName
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0x1D4CD2C", Offset = "0x1D4CD2C", VA = "0x1D4CD2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		public string previousStateName
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0x1D4CD44", Offset = "0x1D4CD44", VA = "0x1D4CD44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		public override Type baseNodeType
		{
			[Token(Token = "0x600164A")]
			[Address(RVA = "0x1D4CD5C", Offset = "0x1D4CD5C", VA = "0x1D4CD5C", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public override bool requiresAgent
		{
			[Token(Token = "0x600164B")]
			[Address(RVA = "0x1D4CDCC", Offset = "0x1D4CDCC", VA = "0x1D4CDCC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035B")]
		public override bool requiresPrimeNode
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0x1D4CDD4", Offset = "0x1D4CDD4", VA = "0x1D4CDD4", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035C")]
		public override bool autoSort
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0x1D4CDDC", Offset = "0x1D4CDDC", VA = "0x1D4CDDC", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035D")]
		public override bool useLocalBlackboard
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0x1D4CDE4", Offset = "0x1D4CDE4", VA = "0x1D4CDE4", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035E")]
		public sealed override bool canAcceptVariableDrops
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0x1D4CDEC", Offset = "0x1D4CDEC", VA = "0x1D4CDEC", Slot = "21")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000046")]
		private event Action<IState> CallbackEnter
		{
			[Token(Token = "0x600163E")]
			[Address(RVA = "0x1D4C934", Offset = "0x1D4C934", VA = "0x1D4C934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB5A0", Offset = "0xFCB5A0")]
			add
			{
			}
			[Token(Token = "0x600163F")]
			[Address(RVA = "0x1D4C9D8", Offset = "0x1D4C9D8", VA = "0x1D4C9D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB5B0", Offset = "0xFCB5B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		private event Action<IState> CallbackStay
		{
			[Token(Token = "0x6001640")]
			[Address(RVA = "0x1D4CA7C", Offset = "0x1D4CA7C", VA = "0x1D4CA7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB5C0", Offset = "0xFCB5C0")]
			add
			{
			}
			[Token(Token = "0x6001641")]
			[Address(RVA = "0x1D4CB20", Offset = "0x1D4CB20", VA = "0x1D4CB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB5D0", Offset = "0xFCB5D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		private event Action<IState> CallbackExit
		{
			[Token(Token = "0x6001642")]
			[Address(RVA = "0x1D4CBC4", Offset = "0x1D4CBC4", VA = "0x1D4CBC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB5E0", Offset = "0xFCB5E0")]
			add
			{
			}
			[Token(Token = "0x6001643")]
			[Address(RVA = "0x1D4CC68", Offset = "0x1D4CC68", VA = "0x1D4CC68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB5F0", Offset = "0xFCB5F0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x1D4CDF4", Offset = "0x1D4CDF4", VA = "0x1D4CDF4", Slot = "22")]
		protected override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x1D4D7D0", Offset = "0x1D4D7D0", VA = "0x1D4D7D0", Slot = "26")]
		protected override void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x1D4D864", Offset = "0x1D4D864", VA = "0x1D4D864", Slot = "23")]
		protected override void OnGraphUpdate()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x1D4DA88", Offset = "0x1D4DA88", VA = "0x1D4DA88", Slot = "24")]
		protected override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x1D4DB2C", Offset = "0x1D4DB2C", VA = "0x1D4DB2C", Slot = "25")]
		protected override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x1D4C2D8", Offset = "0x1D4C2D8", VA = "0x1D4C2D8")]
		public bool EnterState(FSMState newState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x1D4DB64", Offset = "0x1D4DB64", VA = "0x1D4DB64")]
		public FSMState TriggerState(string stateName)
		{
			return null;
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1D4DEA8", Offset = "0x1D4DEA8", VA = "0x1D4DEA8")]
		public string[] GetStateNames()
		{
			return null;
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x1D4DD98", Offset = "0x1D4DD98", VA = "0x1D4DD98")]
		public FSMState GetStateWithName(string name)
		{
			return null;
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x1D4D210", Offset = "0x1D4D210", VA = "0x1D4D210")]
		private void GatherDelegates()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x1D4E074", Offset = "0x1D4E074", VA = "0x1D4E074")]
		public FSM()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class FSMConnection : Connection, ITaskAssignable<ConditionTask>, ITaskAssignable
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x1700035F")]
		public ConditionTask condition
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x1D4E454", Offset = "0x1D4E454", VA = "0x1D4E454")]
			get
			{
				return null;
			}
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x1D4E45C", Offset = "0x1D4E45C", VA = "0x1D4E45C")]
			set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public Task task
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x1D4E464", Offset = "0x1D4E464", VA = "0x1D4E464", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x1D4E46C", Offset = "0x1D4E46C", VA = "0x1D4E46C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x1D4E504", Offset = "0x1D4E504", VA = "0x1D4E504")]
		public void PerformTransition()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x1D4E5D4", Offset = "0x1D4E5D4", VA = "0x1D4E5D4")]
		public FSMConnection()
		{
		}
	}
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB6E20", Offset = "0xFB6E20")]
	public class FSMOwner : GraphOwner<FSM>
	{
		[Token(Token = "0x17000361")]
		public string currentRootStateName
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0x1D4E5E4", Offset = "0x1D4E5E4", VA = "0x1D4E5E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000362")]
		public string previousRootStateName
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0x1D4E688", Offset = "0x1D4E688", VA = "0x1D4E688")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		public string currentDeepStateName
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0x1D4E72C", Offset = "0x1D4E72C", VA = "0x1D4E72C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		public string previousDeepStateName
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0x1D4E920", Offset = "0x1D4E920", VA = "0x1D4E920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x1D4E7F0", Offset = "0x1D4E7F0", VA = "0x1D4E7F0")]
		public IState GetCurrentState(bool includeSubFSMs = true)
		{
			return null;
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x1D4E9E4", Offset = "0x1D4E9E4", VA = "0x1D4E9E4")]
		public IState GetPreviousState(bool includeSubFSMs = true)
		{
			return null;
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x1D4EBE8", Offset = "0x1D4EBE8", VA = "0x1D4EBE8")]
		public IState TriggerState(string stateName)
		{
			return null;
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x1D4EC88", Offset = "0x1D4EC88", VA = "0x1D4EC88")]
		public string[] GetStateNames()
		{
			return null;
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x1D4ED1C", Offset = "0x1D4ED1C", VA = "0x1D4ED1C")]
		public FSMOwner()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public interface IState
	{
		[Token(Token = "0x17000365")]
		string name
		{
			[Token(Token = "0x600166A")]
			get;
		}

		[Token(Token = "0x17000366")]
		string tag
		{
			[Token(Token = "0x600166B")]
			get;
		}

		[Token(Token = "0x17000367")]
		float elapsedTime
		{
			[Token(Token = "0x600166C")]
			get;
		}

		[Token(Token = "0x17000368")]
		FSM FSM
		{
			[Token(Token = "0x600166D")]
			get;
		}

		[Token(Token = "0x600166E")]
		FSMConnection[] GetTransitions();

		[Token(Token = "0x600166F")]
		bool CheckTransitions();

		[Token(Token = "0x6001670")]
		void Finish(bool success);
	}
	[Token(Token = "0x200036C")]
	public abstract class FSMState : Node, IState
	{
		[Token(Token = "0x200051E")]
		public enum TransitionEvaluationMode
		{
			[Token(Token = "0x4001698")]
			CheckContinuously,
			[Token(Token = "0x4001699")]
			CheckAfterStateFinished,
			[Token(Token = "0x400169A")]
			CheckManually
		}

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private TransitionEvaluationMode _transitionEvaluation;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _elapsedTime;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool hasInit;

		[Token(Token = "0x17000369")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x1D4ED6C", Offset = "0x1D4ED6C", VA = "0x1D4ED6C", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036A")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x1D4ED74", Offset = "0x1D4ED74", VA = "0x1D4ED74", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036B")]
		public sealed override Type outConnectionType
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x1D4ED7C", Offset = "0x1D4ED7C", VA = "0x1D4ED7C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x1D4EDEC", Offset = "0x1D4EDEC", VA = "0x1D4EDEC", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036D")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x1D4EDF4", Offset = "0x1D4EDF4", VA = "0x1D4EDF4", Slot = "12")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700036E")]
		public sealed override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0x1D4EDFC", Offset = "0x1D4EDFC", VA = "0x1D4EDFC", Slot = "13")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700036F")]
		public TransitionEvaluationMode transitionEvaluation
		{
			[Token(Token = "0x6001677")]
			[Address(RVA = "0x1D4EE04", Offset = "0x1D4EE04", VA = "0x1D4EE04")]
			get
			{
				return default(TransitionEvaluationMode);
			}
			[Token(Token = "0x6001678")]
			[Address(RVA = "0x1D4EE0C", Offset = "0x1D4EE0C", VA = "0x1D4EE0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public float elapsedTime
		{
			[Token(Token = "0x6001679")]
			[Address(RVA = "0x1D4EE14", Offset = "0x1D4EE14", VA = "0x1D4EE14", Slot = "29")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600167A")]
			[Address(RVA = "0x1D4EE1C", Offset = "0x1D4EE1C", VA = "0x1D4EE1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public FSM FSM
		{
			[Token(Token = "0x600167B")]
			[Address(RVA = "0x1D4C258", Offset = "0x1D4C258", VA = "0x1D4C258", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1D4EE24", Offset = "0x1D4EE24", VA = "0x1D4EE24", Slot = "31")]
		public FSMConnection[] GetTransitions()
		{
			return null;
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x1D4C8A8", Offset = "0x1D4C8A8", VA = "0x1D4C8A8")]
		public void Finish()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x1D4BF94", Offset = "0x1D4BF94", VA = "0x1D4BF94", Slot = "33")]
		public void Finish(bool inSuccess)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x1D4EE84", Offset = "0x1D4EE84", VA = "0x1D4EE84", Slot = "23")]
		public sealed override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x1D4EE88", Offset = "0x1D4EE88", VA = "0x1D4EE88", Slot = "24")]
		public sealed override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x1D4EE94", Offset = "0x1D4EE94", VA = "0x1D4EE94", Slot = "25")]
		public sealed override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x1D4EEB4", Offset = "0x1D4EEB4", VA = "0x1D4EEB4", Slot = "17")]
		protected sealed override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x1D4D9FC", Offset = "0x1D4D9FC", VA = "0x1D4D9FC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x1D4F06C", Offset = "0x1D4F06C", VA = "0x1D4F06C", Slot = "32")]
		public bool CheckTransitions()
		{
			return default(bool);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x1D4F1F4", Offset = "0x1D4F1F4", VA = "0x1D4F1F4", Slot = "18")]
		protected sealed override void OnReset()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x1D4F35C", Offset = "0x1D4F35C", VA = "0x1D4F35C", Slot = "34")]
		protected virtual void OnInit()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x1D4F360", Offset = "0x1D4F360", VA = "0x1D4F360", Slot = "35")]
		protected virtual void OnEnter()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x1D4F364", Offset = "0x1D4F364", VA = "0x1D4F364", Slot = "36")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x1D4F368", Offset = "0x1D4F368", VA = "0x1D4F368", Slot = "37")]
		protected virtual void OnExit()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x1D4F36C", Offset = "0x1D4F36C", VA = "0x1D4F36C", Slot = "38")]
		protected virtual void OnPause()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x1D4BFF0", Offset = "0x1D4BFF0", VA = "0x1D4BFF0")]
		protected FSMState()
		{
		}
	}
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB6E58", Offset = "0xFB6E58")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6E58", Offset = "0xFB6E58")]
	public class ActionState : FSMState, ITaskAssignable
	{
		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ActionList _actionList;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool _repeatStateActions;

		[Token(Token = "0x17000372")]
		public Task task
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x1D4BD54", Offset = "0x1D4BD54", VA = "0x1D4BD54", Slot = "39")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168D")]
			[Address(RVA = "0x1D4BD5C", Offset = "0x1D4BD5C", VA = "0x1D4BD5C", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public ActionList actionList
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0x1D4BDF4", Offset = "0x1D4BDF4", VA = "0x1D4BDF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168F")]
			[Address(RVA = "0x1D4BDFC", Offset = "0x1D4BDFC", VA = "0x1D4BDFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public bool repeatStateActions
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x1D4BE04", Offset = "0x1D4BE04", VA = "0x1D4BE04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x1D4BE0C", Offset = "0x1D4BE0C", VA = "0x1D4BE0C")]
			set
			{
			}
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x1D4BE18", Offset = "0x1D4BE18", VA = "0x1D4BE18", Slot = "15")]
		public override void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x1D4BF14", Offset = "0x1D4BF14", VA = "0x1D4BF14", Slot = "35")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x1D4BF24", Offset = "0x1D4BF24", VA = "0x1D4BF24", Slot = "36")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1D4BFB0", Offset = "0x1D4BFB0", VA = "0x1D4BFB0", Slot = "37")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x1D4BFD0", Offset = "0x1D4BFD0", VA = "0x1D4BFD0", Slot = "38")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x1D4BFEC", Offset = "0x1D4BFEC", VA = "0x1D4BFEC")]
		public ActionState()
		{
		}
	}
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB6EBC", Offset = "0xFB6EBC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6EBC", Offset = "0xFB6EBC")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB6EBC", Offset = "0xFB6EBC")]
	public class AnyState : FSMState, IUpdatable
	{
		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public bool dontRetriggerStates;

		[Token(Token = "0x17000375")]
		public override string name
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0x1D4BFF4", Offset = "0x1D4BFF4", VA = "0x1D4BFF4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001699")]
			[Address(RVA = "0x1D4C03C", Offset = "0x1D4C03C", VA = "0x1D4C03C", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000377")]
		public override int maxOutConnections
		{
			[Token(Token = "0x600169A")]
			[Address(RVA = "0x1D4C044", Offset = "0x1D4C044", VA = "0x1D4C044", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000378")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x600169B")]
			[Address(RVA = "0x1D4C04C", Offset = "0x1D4C04C", VA = "0x1D4C04C", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x1D4C054", Offset = "0x1D4C054", VA = "0x1D4C054", Slot = "39")]
		public new void Update()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x1D4C478", Offset = "0x1D4C478", VA = "0x1D4C478")]
		public AnyState()
		{
		}
	}
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB6F44", Offset = "0xFB6F44")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6F44", Offset = "0xFB6F44")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB6F44", Offset = "0xFB6F44")]
	public class ConcurrentState : FSMState, IUpdatable, ISubTasksContainer
	{
		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ConditionList _conditionList;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ActionList _actionList;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _repeatStateActions;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool accessed;

		[Token(Token = "0x17000379")]
		public ConditionList conditionList
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0x1D4C47C", Offset = "0x1D4C47C", VA = "0x1D4C47C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600169F")]
			[Address(RVA = "0x1D4C484", Offset = "0x1D4C484", VA = "0x1D4C484")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public ActionList actionList
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x1D4C48C", Offset = "0x1D4C48C", VA = "0x1D4C48C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x1D4C494", Offset = "0x1D4C494", VA = "0x1D4C494")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public bool repeatStateActions
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x1D4C58C", Offset = "0x1D4C58C", VA = "0x1D4C58C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x1D4C594", Offset = "0x1D4C594", VA = "0x1D4C594")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public override string name
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x1D4C5A0", Offset = "0x1D4C5A0", VA = "0x1D4C5A0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		public override int maxInConnections
		{
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x1D4C5C0", Offset = "0x1D4C5C0", VA = "0x1D4C5C0", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037E")]
		public override int maxOutConnections
		{
			[Token(Token = "0x60016A7")]
			[Address(RVA = "0x1D4C5C8", Offset = "0x1D4C5C8", VA = "0x1D4C5C8", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037F")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x1D4C5D0", Offset = "0x1D4C5D0", VA = "0x1D4C5D0", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x1D4C49C", Offset = "0x1D4C49C", VA = "0x1D4C49C", Slot = "40")]
		public Task[] GetSubTasks()
		{
			return null;
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x1D4C5D8", Offset = "0x1D4C5D8", VA = "0x1D4C5D8", Slot = "15")]
		public override void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x1D4C778", Offset = "0x1D4C778", VA = "0x1D4C778", Slot = "35")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1D4C7E4", Offset = "0x1D4C7E4", VA = "0x1D4C7E4", Slot = "39")]
		public new void Update()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x1D4C8C4", Offset = "0x1D4C8C4", VA = "0x1D4C8C4", Slot = "37")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1D4C914", Offset = "0x1D4C914", VA = "0x1D4C914", Slot = "38")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1D4C930", Offset = "0x1D4C930", VA = "0x1D4C930")]
		public ConcurrentState()
		{
		}
	}
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB6FCC", Offset = "0xFB6FCC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB6FCC", Offset = "0xFB6FCC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB6FCC", Offset = "0xFB6FCC")]
	public class NestedBTState : FSMState, IGraphAssignable
	{
		[Token(Token = "0x200051F")]
		public enum BTExecutionMode
		{
			[Token(Token = "0x400169C")]
			Once,
			[Token(Token = "0x400169D")]
			Repeat
		}

		[Token(Token = "0x2000520")]
		public enum BTExitMode
		{
			[Token(Token = "0x400169F")]
			StopAndRestart,
			[Token(Token = "0x40016A0")]
			PauseAndResume
		}

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private BBParameter<BehaviourTree> _nestedBT;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BTExecutionMode executionMode;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public BTExitMode exitMode;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string successEvent;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string failureEvent;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<BehaviourTree, BehaviourTree> instances;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BehaviourTree currentInstance;

		[Token(Token = "0x17000380")]
		public BehaviourTree nestedBT
		{
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0x1D4F370", Offset = "0x1D4F370", VA = "0x1D4F370")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0x1D4F3C8", Offset = "0x1D4F3C8", VA = "0x1D4F3C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000381")]
		private Graph NodeCanvas.Framework.IGraphAssignable.nestedGraph
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x1D4F430", Offset = "0x1D4F430", VA = "0x1D4F430", Slot = "39")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x1D4F434", Offset = "0x1D4F434", VA = "0x1D4F434", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x1D4F4C8", Offset = "0x1D4F4C8", VA = "0x1D4F4C8", Slot = "41")]
		private Graph[] NodeCanvas.Framework.IGraphAssignable.GetInstances()
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x1D4F530", Offset = "0x1D4F530", VA = "0x1D4F530", Slot = "35")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x1D4F828", Offset = "0x1D4F828", VA = "0x1D4F828", Slot = "36")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x1D4F8C4", Offset = "0x1D4F8C4", VA = "0x1D4F8C4")]
		private void OnFinish(bool success)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x1D4F9B8", Offset = "0x1D4F9B8", VA = "0x1D4F9B8", Slot = "37")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x1D4FA68", Offset = "0x1D4FA68", VA = "0x1D4FA68", Slot = "38")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x1D4F68C", Offset = "0x1D4F68C", VA = "0x1D4F68C")]
		private BehaviourTree CheckInstance()
		{
			return null;
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x1D4FB00", Offset = "0x1D4FB00", VA = "0x1D4FB00")]
		public NestedBTState()
		{
		}
	}
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB7054", Offset = "0xFB7054")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7054", Offset = "0xFB7054")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7054", Offset = "0xFB7054")]
	public class NestedFSMState : FSMState, IGraphAssignable
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected BBParameter<FSM> _nestedFSM;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<FSM, FSM> instances;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FSM currentInstance;

		[Token(Token = "0x17000382")]
		public FSM nestedFSM
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x1D4EB90", Offset = "0x1D4EB90", VA = "0x1D4EB90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x1D4FB80", Offset = "0x1D4FB80", VA = "0x1D4FB80")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		private Graph NodeCanvas.Framework.IGraphAssignable.nestedGraph
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x1D4FBE8", Offset = "0x1D4FBE8", VA = "0x1D4FBE8", Slot = "39")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x1D4FBEC", Offset = "0x1D4FBEC", VA = "0x1D4FBEC", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x1D4FC80", Offset = "0x1D4FC80", VA = "0x1D4FC80", Slot = "41")]
		private Graph[] NodeCanvas.Framework.IGraphAssignable.GetInstances()
		{
			return null;
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1D4FCE8", Offset = "0x1D4FCE8", VA = "0x1D4FCE8", Slot = "35")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1D4FFBC", Offset = "0x1D4FFBC", VA = "0x1D4FFBC", Slot = "36")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x1D4FFEC", Offset = "0x1D4FFEC", VA = "0x1D4FFEC", Slot = "37")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x1D50090", Offset = "0x1D50090", VA = "0x1D50090", Slot = "38")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x1D4FE20", Offset = "0x1D4FE20", VA = "0x1D4FE20")]
		private FSM CheckInstance()
		{
			return null;
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x1D50120", Offset = "0x1D50120", VA = "0x1D50120")]
		public NestedFSMState()
		{
		}
	}
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB70DC", Offset = "0xFB70DC")]
	public class SuperActionState : FSMState, ISubTasksContainer
	{
		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ActionList _onEnterList;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ActionList _onUpdateList;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ActionList _onExitList;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool enterListFinished;

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x1D50198", Offset = "0x1D50198", VA = "0x1D50198", Slot = "39")]
		public Task[] GetSubTasks()
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x1D502C0", Offset = "0x1D502C0", VA = "0x1D502C0", Slot = "15")]
		public override void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x1D5050C", Offset = "0x1D5050C", VA = "0x1D5050C", Slot = "35")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x1D50520", Offset = "0x1D50520", VA = "0x1D50520", Slot = "36")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x1D50600", Offset = "0x1D50600", VA = "0x1D50600", Slot = "37")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x1D50690", Offset = "0x1D50690", VA = "0x1D50690", Slot = "38")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x1D506CC", Offset = "0x1D506CC", VA = "0x1D506CC")]
		public SuperActionState()
		{
		}
	}
}
namespace NodeCanvas.DialogueTrees
{
	[Token(Token = "0x2000373")]
	public class DTConnection : Connection
	{
		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x1860FF4", Offset = "0x1860FF4", VA = "0x1860FF4")]
		public DTConnection()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public abstract class DTNode : Node
	{
		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _actorName;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _actorParameterID;

		[Token(Token = "0x17000384")]
		public override string name
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x1860FFC", Offset = "0x1860FFC", VA = "0x1860FFC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public virtual bool requireActorSelection
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x186125C", Offset = "0x186125C", VA = "0x186125C", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000386")]
		public override int maxInConnections
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x1861264", Offset = "0x1861264", VA = "0x1861264", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000387")]
		public override int maxOutConnections
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x186126C", Offset = "0x186126C", VA = "0x186126C", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000388")]
		public sealed override Type outConnectionType
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x1861274", Offset = "0x1861274", VA = "0x1861274", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000389")]
		public sealed override bool allowAsPrime
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x18612E4", Offset = "0x18612E4", VA = "0x18612E4", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038A")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x18612EC", Offset = "0x18612EC", VA = "0x18612EC", Slot = "12")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700038B")]
		public sealed override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x18612F4", Offset = "0x18612F4", VA = "0x18612F4", Slot = "13")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700038C")]
		protected DialogueTree DLGTree
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x1860A90", Offset = "0x1860A90", VA = "0x1860A90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		protected string actorName
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x1861218", Offset = "0x1861218", VA = "0x1861218")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x18613CC", Offset = "0x18613CC", VA = "0x18613CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		protected IDialogueActor finalActor
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x1860934", Offset = "0x1860934", VA = "0x1860934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x1860C4C", Offset = "0x1860C4C", VA = "0x1860C4C")]
		protected DTNode()
		{
		}
	}
	[Token(Token = "0x2000375")]
	[GraphInfo]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xFB7114", Offset = "0xFB7114")]
	public class DialogueTree : Graph
	{
		[Serializable]
		[Token(Token = "0x2000521")]
		private struct DerivedSerializationData
		{
			[Token(Token = "0x40016A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ActorParameter> actorParameters;
		}

		[Serializable]
		[Token(Token = "0x2000522")]
		public class ActorParameter
		{
			[Token(Token = "0x40016A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string _keyName;

			[Token(Token = "0x40016A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string _id;

			[Token(Token = "0x40016A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private UnityEngine.Object _actorObject;

			[NonSerialized]
			[Token(Token = "0x40016A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IDialogueActor _actor;

			[Token(Token = "0x1700056C")]
			public string name
			{
				[Token(Token = "0x60020B6")]
				[Address(RVA = "0x1863374", Offset = "0x1863374", VA = "0x1863374")]
				get
				{
					return null;
				}
				[Token(Token = "0x60020B7")]
				[Address(RVA = "0x186337C", Offset = "0x186337C", VA = "0x186337C")]
				set
				{
				}
			}

			[Token(Token = "0x1700056D")]
			public string ID
			{
				[Token(Token = "0x60020B8")]
				[Address(RVA = "0x186153C", Offset = "0x186153C", VA = "0x186153C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056E")]
			public IDialogueActor actor
			{
				[Token(Token = "0x60020B9")]
				[Address(RVA = "0x186252C", Offset = "0x186252C", VA = "0x186252C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60020BA")]
				[Address(RVA = "0x18626F0", Offset = "0x18626F0", VA = "0x18626F0")]
				set
				{
				}
			}

			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x1863384", Offset = "0x1863384", VA = "0x1863384")]
			public ActorParameter()
			{
			}

			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x186338C", Offset = "0x186338C", VA = "0x186338C")]
			public ActorParameter(string name)
			{
			}

			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x18633C0", Offset = "0x18633C0", VA = "0x18633C0")]
			public ActorParameter(string name, IDialogueActor actor)
			{
			}

			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x186340C", Offset = "0x186340C", VA = "0x186340C", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9954", Offset = "0xFB9954")]
		private sealed class <>c
		{
			[Token(Token = "0x40016A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ActorParameter, string> <>9__45_0;

			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x1863254", Offset = "0x1863254", VA = "0x1863254")]
			public <>c()
			{
			}

			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x186325C", Offset = "0x186325C", VA = "0x186325C")]
			internal string <get_definedActorParameterNames>b__45_0(ActorParameter r)
			{
				return null;
			}
		}

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9964", Offset = "0xFB9964")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x40016A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x18624C4", Offset = "0x18624C4", VA = "0x18624C4")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x1863274", Offset = "0x1863274", VA = "0x1863274")]
			internal bool <GetParameterByID>b__0(ActorParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9974", Offset = "0xFB9974")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x40016A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string paramName;

			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x18624CC", Offset = "0x18624CC", VA = "0x18624CC")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x18632A8", Offset = "0x18632A8", VA = "0x18632A8")]
			internal bool <GetParameterByName>b__0(ActorParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9984", Offset = "0xFB9984")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x40016AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string paramName;

			[Token(Token = "0x60020C6")]
			[Address(RVA = "0x18624D4", Offset = "0x18624D4", VA = "0x18624D4")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x18632CC", Offset = "0x18632CC", VA = "0x18632CC")]
			internal bool <GetActorReferenceByName>b__0(ActorParameter r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9994", Offset = "0xFB9994")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x40016AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string paramName;

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x18626E8", Offset = "0x18626E8", VA = "0x18626E8")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x18632F0", Offset = "0x18632F0", VA = "0x18632F0")]
			internal bool <SetActorReference>b__0(ActorParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB99A4", Offset = "0xFB99A4")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x40016AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<string, IDialogueActor> pair;

			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x18629B8", Offset = "0x18629B8", VA = "0x18629B8")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x1863314", Offset = "0x1863314", VA = "0x1863314")]
			internal bool <SetActorReferences>b__0(ActorParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EF1")]
		public const string INSTIGATOR_NAME = "INSTIGATOR";

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private List<ActorParameter> _actorParameters;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private DTNode currentNode;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC1AFC", Offset = "0xFC1AFC")]
		private static DialogueTree <currentDialogue>k__BackingField;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC1B0C", Offset = "0xFC1B0C")]
		private static DialogueTree <previousDialogue>k__BackingField;

		[Token(Token = "0x1700038F")]
		public static DialogueTree currentDialogue
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x18622D4", Offset = "0x18622D4", VA = "0x18622D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB6E0", Offset = "0xFCB6E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x1862324", Offset = "0x1862324", VA = "0x1862324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB6F0", Offset = "0xFCB6F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public static DialogueTree previousDialogue
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x186237C", Offset = "0x186237C", VA = "0x186237C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB700", Offset = "0xFCB700")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x18623CC", Offset = "0x18623CC", VA = "0x18623CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB710", Offset = "0xFCB710")]
			private set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public override Type baseNodeType
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x1862424", Offset = "0x1862424", VA = "0x1862424", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		public override bool requiresAgent
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x1862494", Offset = "0x1862494", VA = "0x1862494", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000393")]
		public override bool requiresPrimeNode
		{
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x186249C", Offset = "0x186249C", VA = "0x186249C", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000394")]
		public override bool autoSort
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x18624A4", Offset = "0x18624A4", VA = "0x18624A4", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000395")]
		public override bool useLocalBlackboard
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x18624AC", Offset = "0x18624AC", VA = "0x18624AC", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000396")]
		public sealed override bool canAcceptVariableDrops
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x18624B4", Offset = "0x18624B4", VA = "0x18624B4", Slot = "21")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000397")]
		public List<ActorParameter> actorParameters
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x18624BC", Offset = "0x18624BC", VA = "0x18624BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		public List<string> definedActorParameterNames
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x18610DC", Offset = "0x18610DC", VA = "0x18610DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000049")]
		public static event Action<DialogueTree> OnDialogueStarted
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x1861BAC", Offset = "0x1861BAC", VA = "0x1861BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB640", Offset = "0xFCB640")]
			add
			{
			}
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x1861C60", Offset = "0x1861C60", VA = "0x1861C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB650", Offset = "0xFCB650")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public static event Action<DialogueTree> OnDialoguePaused
		{
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x1861D14", Offset = "0x1861D14", VA = "0x1861D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB660", Offset = "0xFCB660")]
			add
			{
			}
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x1861DCC", Offset = "0x1861DCC", VA = "0x1861DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB670", Offset = "0xFCB670")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public static event Action<DialogueTree> OnDialogueFinished
		{
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x1861E84", Offset = "0x1861E84", VA = "0x1861E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB680", Offset = "0xFCB680")]
			add
			{
			}
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x1861F3C", Offset = "0x1861F3C", VA = "0x1861F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB690", Offset = "0xFCB690")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public static event Action<SubtitlesRequestInfo> OnSubtitlesRequest
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x1861FF4", Offset = "0x1861FF4", VA = "0x1861FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB6A0", Offset = "0xFCB6A0")]
			add
			{
			}
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x18620AC", Offset = "0x18620AC", VA = "0x18620AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB6B0", Offset = "0xFCB6B0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public static event Action<MultipleChoiceRequestInfo> OnMultipleChoiceRequest
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x1862164", Offset = "0x1862164", VA = "0x1862164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB6C0", Offset = "0xFCB6C0")]
			add
			{
			}
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x186221C", Offset = "0x186221C", VA = "0x186221C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB6D0", Offset = "0xFCB6D0")]
			remove
			{
			}
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x1861AAC", Offset = "0x1861AAC", VA = "0x1861AAC", Slot = "13")]
		public override object OnDerivedDataSerialization()
		{
			return null;
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x1861B20", Offset = "0x1861B20", VA = "0x1861B20", Slot = "14")]
		public override void OnDerivedDataDeserialization(object data)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x18612FC", Offset = "0x18612FC", VA = "0x18612FC")]
		public ActorParameter GetParameterByID(string id)
		{
			return null;
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x186146C", Offset = "0x186146C", VA = "0x186146C")]
		public ActorParameter GetParameterByName(string paramName)
		{
			return null;
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x18615F0", Offset = "0x18615F0", VA = "0x18615F0")]
		public IDialogueActor GetActorReferenceByID(string id)
		{
			return null;
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x1861628", Offset = "0x1861628", VA = "0x1861628")]
		public IDialogueActor GetActorReferenceByName(string paramName)
		{
			return null;
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x18625A0", Offset = "0x18625A0", VA = "0x18625A0")]
		public void SetActorReference(string paramName, IDialogueActor actor)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x1862794", Offset = "0x1862794", VA = "0x1862794")]
		public void SetActorReferences(Dictionary<string, IDialogueActor> actors)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x1860B10", Offset = "0x1860B10", VA = "0x1860B10")]
		public void Continue(int index = 0)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x18629C0", Offset = "0x18629C0", VA = "0x18629C0")]
		public void EnterNode(DTNode node)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x1862A5C", Offset = "0x1862A5C", VA = "0x1862A5C")]
		public static void RequestSubtitles(SubtitlesRequestInfo info)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x1862B00", Offset = "0x1862B00", VA = "0x1862B00")]
		public static void RequestMultipleChoices(MultipleChoiceRequestInfo info)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x1862BA4", Offset = "0x1862BA4", VA = "0x1862BA4", Slot = "22")]
		protected override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x1862DBC", Offset = "0x1862DBC", VA = "0x1862DBC", Slot = "26")]
		protected override void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1862EF4", Offset = "0x1862EF4", VA = "0x1862EF4", Slot = "24")]
		protected override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x1863080", Offset = "0x1863080", VA = "0x1863080", Slot = "25")]
		protected override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x1863150", Offset = "0x1863150", VA = "0x1863150")]
		public DialogueTree()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB71E0", Offset = "0xFB71E0")]
	public class DialogueTreeController : GraphOwner<DialogueTree>, IDialogueActor
	{
		[Token(Token = "0x17000399")]
		private string NodeCanvas.DialogueTrees.IDialogueActor.name
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0x1863414", Offset = "0x1863414", VA = "0x1863414", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		private Texture2D NodeCanvas.DialogueTrees.IDialogueActor.portrait
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0x186341C", Offset = "0x186341C", VA = "0x186341C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		private Sprite NodeCanvas.DialogueTrees.IDialogueActor.portraitSprite
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0x1863424", Offset = "0x1863424", VA = "0x1863424", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039C")]
		private Color NodeCanvas.DialogueTrees.IDialogueActor.dialogueColor
		{
			[Token(Token = "0x6001705")]
			[Address(RVA = "0x186342C", Offset = "0x186342C", VA = "0x186342C", Slot = "12")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700039D")]
		private Vector3 NodeCanvas.DialogueTrees.IDialogueActor.dialoguePosition
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0x1863434", Offset = "0x1863434", VA = "0x1863434", Slot = "13")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700039E")]
		private Transform NodeCanvas.DialogueTrees.IDialogueActor.transform
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x1863494", Offset = "0x1863494", VA = "0x1863494", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x186349C", Offset = "0x186349C", VA = "0x186349C")]
		public void StartDialogue()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x1863618", Offset = "0x1863618", VA = "0x1863618")]
		public void StartDialogue(Action<bool> callback)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x1863624", Offset = "0x1863624", VA = "0x1863624")]
		public void StartDialogue(IDialogueActor instigator)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x18634A8", Offset = "0x18634A8", VA = "0x18634A8")]
		public void StartDialogue(IDialogueActor instigator, Action<bool> callback)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x186362C", Offset = "0x186362C", VA = "0x186362C")]
		public void PauseDialogue()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1863654", Offset = "0x1863654", VA = "0x1863654")]
		public void StopDialogue()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1863680", Offset = "0x1863680", VA = "0x1863680")]
		public void SetActorReference(string paramName, IDialogueActor actor)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x186372C", Offset = "0x186372C", VA = "0x186372C")]
		public void SetActorReferences(Dictionary<string, IDialogueActor> actors)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x18637D0", Offset = "0x18637D0", VA = "0x18637D0")]
		public IDialogueActor GetActorReferenceByName(string paramName)
		{
			return null;
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x1863878", Offset = "0x1863878", VA = "0x1863878")]
		public DialogueTreeController()
		{
		}
	}
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB7218", Offset = "0xFB7218")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7218", Offset = "0xFB7218")]
	public class ActionNode : DTNode, ITaskAssignable<ActionTask>, ITaskAssignable
	{
		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB99B4", Offset = "0xFB99B4")]
		private sealed class <UpdateAction>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ActionNode <>4__this;

			[Token(Token = "0x40016B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Component actionAgent;

			[Token(Token = "0x1700056F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020CF")]
				[Address(RVA = "0x1860D60", Offset = "0x1860D60", VA = "0x1860D60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000570")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020D1")]
				[Address(RVA = "0x1860DC8", Offset = "0x1860DC8", VA = "0x1860DC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020CC")]
			[Address(RVA = "0x1860A1C", Offset = "0x1860A1C", VA = "0x1860A1C")]
			[DebuggerHidden]
			public <UpdateAction>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x1860CAC", Offset = "0x1860CAC", VA = "0x1860CAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020CE")]
			[Address(RVA = "0x1860CB0", Offset = "0x1860CB0", VA = "0x1860CB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x1860D68", Offset = "0x1860D68", VA = "0x1860D68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ActionTask _action;

		[Token(Token = "0x1700039F")]
		public ActionTask action
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0x186076C", Offset = "0x186076C", VA = "0x186076C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x1860774", Offset = "0x1860774", VA = "0x1860774")]
			set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public Task task
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0x186077C", Offset = "0x186077C", VA = "0x186077C", Slot = "28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x1860784", Offset = "0x1860784", VA = "0x1860784", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x186081C", Offset = "0x186081C", VA = "0x186081C", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x1860824", Offset = "0x1860824", VA = "0x1860824", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x1860984", Offset = "0x1860984", VA = "0x1860984")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB720", Offset = "0xFCB720")]
		private IEnumerator UpdateAction(UnityEngine.Component actionAgent)
		{
			return null;
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x1860A48", Offset = "0x1860A48", VA = "0x1860A48")]
		private void OnActionEnd(bool success)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x1860C24", Offset = "0x1860C24", VA = "0x1860C24", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x1860C38", Offset = "0x1860C38", VA = "0x1860C38", Slot = "25")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x1860C48", Offset = "0x1860C48", VA = "0x1860C48")]
		public ActionNode()
		{
		}
	}
	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB727C", Offset = "0xFB727C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB727C", Offset = "0xFB727C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB727C", Offset = "0xFB727C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB727C", Offset = "0xFB727C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB727C", Offset = "0xFB727C")]
	public class ConditionNode : DTNode, ITaskAssignable<ConditionTask>, ITaskAssignable
	{
		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x170003A2")]
		public ConditionTask condition
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x1860DD0", Offset = "0x1860DD0", VA = "0x1860DD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600171E")]
			[Address(RVA = "0x1860DD8", Offset = "0x1860DD8", VA = "0x1860DD8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public Task task
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0x1860DE0", Offset = "0x1860DE0", VA = "0x1860DE0", Slot = "28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001720")]
			[Address(RVA = "0x1860DE8", Offset = "0x1860DE8", VA = "0x1860DE8", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0x1860E80", Offset = "0x1860E80", VA = "0x1860E80", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A5")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0x1860E88", Offset = "0x1860E88", VA = "0x1860E88", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1860E90", Offset = "0x1860E90", VA = "0x1860E90", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x1860FF0", Offset = "0x1860FF0", VA = "0x1860FF0")]
		public ConditionNode()
		{
		}
	}
	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB736C", Offset = "0xFB736C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB736C", Offset = "0xFB736C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB736C", Offset = "0xFB736C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB736C", Offset = "0xFB736C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB736C", Offset = "0xFB736C")]
	public class FinishNode : DTNode
	{
		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CompactStatus finishState;

		[Token(Token = "0x170003A6")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x18638C8", Offset = "0x18638C8", VA = "0x18638C8", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A7")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0x18638D0", Offset = "0x18638D0", VA = "0x18638D0", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x18638D8", Offset = "0x18638D8", VA = "0x18638D8", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x1863920", Offset = "0x1863920", VA = "0x1863920")]
		public FinishNode()
		{
		}
	}
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB745C", Offset = "0xFB745C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB745C", Offset = "0xFB745C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB745C", Offset = "0xFB745C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB745C", Offset = "0xFB745C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB745C", Offset = "0xFB745C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFB745C", Offset = "0xFB745C")]
	public class GoToNode : DTNode
	{
		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private DTNode _targetNode;

		[Token(Token = "0x170003A8")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0x186392C", Offset = "0x186392C", VA = "0x186392C", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A9")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x600172A")]
			[Address(RVA = "0x1863934", Offset = "0x1863934", VA = "0x1863934", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x186393C", Offset = "0x186393C", VA = "0x186393C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x18639C0", Offset = "0x18639C0", VA = "0x18639C0")]
		public GoToNode()
		{
		}
	}
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB7570", Offset = "0xFB7570")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7570", Offset = "0xFB7570")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7570", Offset = "0xFB7570")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7570", Offset = "0xFB7570")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7570", Offset = "0xFB7570")]
	public class Jumper : DTNode
	{
		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string _sourceNodeUID;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private object _sourceNode;

		[Token(Token = "0x170003AA")]
		private string sourceNodeUID
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x18639C4", Offset = "0x18639C4", VA = "0x18639C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600172E")]
			[Address(RVA = "0x18639CC", Offset = "0x18639CC", VA = "0x18639CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		private DTNode sourceNode
		{
			[Token(Token = "0x600172F")]
			[Address(RVA = "0x18639D4", Offset = "0x18639D4", VA = "0x18639D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001730")]
			[Address(RVA = "0x1863B24", Offset = "0x1863B24", VA = "0x1863B24")]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001731")]
			[Address(RVA = "0x1863B2C", Offset = "0x1863B2C", VA = "0x1863B2C", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AD")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0x1863B34", Offset = "0x1863B34", VA = "0x1863B34", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x1863B3C", Offset = "0x1863B3C", VA = "0x1863B3C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1863BD4", Offset = "0x1863BD4", VA = "0x1863BD4")]
		public Jumper()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1863BD8", Offset = "0x1863BD8", VA = "0x1863BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB784", Offset = "0xFCB784")]
		private bool <get_sourceNode>b__6_0(DTNode n)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7660", Offset = "0xFB7660")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB7660", Offset = "0xFB7660")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7660", Offset = "0xFB7660")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7660", Offset = "0xFB7660")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7660", Offset = "0xFB7660")]
	public class MultipleChoiceNode : DTNode, ISubTasksContainer
	{
		[Serializable]
		[Token(Token = "0x200052A")]
		public class Choice
		{
			[Token(Token = "0x40016B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isUnfolded;

			[Token(Token = "0x40016B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Statement statement;

			[Token(Token = "0x40016B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConditionTask condition;

			[Token(Token = "0x60020D2")]
			[Address(RVA = "0x1864854", Offset = "0x1864854", VA = "0x1864854")]
			public Choice()
			{
			}

			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x1864864", Offset = "0x1864864", VA = "0x1864864")]
			public Choice(Statement statement)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB99C4", Offset = "0xFB99C4")]
		private sealed class <>c
		{
			[Token(Token = "0x40016B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Choice, ConditionTask> <>9__4_0;

			[Token(Token = "0x60020D5")]
			[Address(RVA = "0x1864800", Offset = "0x1864800", VA = "0x1864800")]
			public <>c()
			{
			}

			[Token(Token = "0x60020D6")]
			[Address(RVA = "0x1864808", Offset = "0x1864808", VA = "0x1864808")]
			internal ConditionTask <GetSubTasks>b__4_0(Choice c)
			{
				return null;
			}
		}

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB99D4", Offset = "0xFB99D4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40016B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MultipleChoiceNode <>4__this;

			[Token(Token = "0x40016B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x60020D7")]
			[Address(RVA = "0x18646B4", Offset = "0x18646B4", VA = "0x18646B4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60020D8")]
			[Address(RVA = "0x1864820", Offset = "0x1864820", VA = "0x1864820")]
			internal void <OnOptionSelected>b__0()
			{
			}
		}

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xFC1B5C", Offset = "0xFC1B5C")]
		public float availableTime;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool saySelection;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private List<Choice> availableChoices;

		[Token(Token = "0x170003AE")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x1863D38", Offset = "0x1863D38", VA = "0x1863D38", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AF")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x1863D88", Offset = "0x1863D88", VA = "0x1863D88", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x1863C10", Offset = "0x1863C10", VA = "0x1863C10", Slot = "28")]
		public Task[] GetSubTasks()
		{
			return null;
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1863D90", Offset = "0x1863D90", VA = "0x1863D90", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x186454C", Offset = "0x186454C", VA = "0x186454C")]
		private void OnOptionSelected(int index)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1864720", Offset = "0x1864720", VA = "0x1864720")]
		public MultipleChoiceNode()
		{
		}
	}
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7750", Offset = "0xFB7750")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB7750", Offset = "0xFB7750")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7750", Offset = "0xFB7750")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7750", Offset = "0xFB7750")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7750", Offset = "0xFB7750")]
	public class MultipleConditionNode : DTNode, ISubTasksContainer
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private List<ConditionTask> conditions;

		[Token(Token = "0x170003B0")]
		public override int maxOutConnections
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x1864928", Offset = "0x1864928", VA = "0x1864928", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1864930", Offset = "0x1864930", VA = "0x1864930", Slot = "28")]
		public Task[] GetSubTasks()
		{
			return null;
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1864988", Offset = "0x1864988", VA = "0x1864988", Slot = "21")]
		public override void OnChildConnected(int index)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x18649F4", Offset = "0x18649F4", VA = "0x18649F4", Slot = "22")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x1864A5C", Offset = "0x1864A5C", VA = "0x1864A5C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1864C78", Offset = "0x1864C78", VA = "0x1864C78")]
		public MultipleConditionNode()
		{
		}
	}
	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB7840", Offset = "0xFB7840")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7840", Offset = "0xFB7840")]
	public class StatementNode : DTNode
	{
		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Statement statement;

		[Token(Token = "0x170003B1")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0x186507C", Offset = "0x186507C", VA = "0x186507C", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x1865084", Offset = "0x1865084", VA = "0x1865084", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1865154", Offset = "0x1865154", VA = "0x1865154")]
		private void OnStatementFinish()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x186517C", Offset = "0x186517C", VA = "0x186517C")]
		public StatementNode()
		{
		}
	}
	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB78A4", Offset = "0xFB78A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB78A4", Offset = "0xFB78A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB78A4", Offset = "0xFB78A4")]
	public class SubDialogueTree : DTNode, IGraphAssignable, ISubParametersContainer
	{
		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private BBParameter<DialogueTree> _subTree;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Dictionary<string, string> actorParametersMap;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Dictionary<string, BBObjectParameter> variablesMap;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<DialogueTree, DialogueTree> instances;

		[Token(Token = "0x170003B2")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x18651F4", Offset = "0x18651F4", VA = "0x18651F4", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B3")]
		public DialogueTree subTree
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0x18651FC", Offset = "0x18651FC", VA = "0x18651FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001748")]
			[Address(RVA = "0x1865254", Offset = "0x1865254", VA = "0x1865254")]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		private Graph NodeCanvas.Framework.IGraphAssignable.nestedGraph
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0x18652BC", Offset = "0x18652BC", VA = "0x18652BC", Slot = "28")]
			get
			{
				return null;
			}
			[Token(Token = "0x600174A")]
			[Address(RVA = "0x18652C0", Offset = "0x18652C0", VA = "0x18652C0", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1865354", Offset = "0x1865354", VA = "0x1865354", Slot = "30")]
		private Graph[] NodeCanvas.Framework.IGraphAssignable.GetInstances()
		{
			return null;
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x18653BC", Offset = "0x18653BC", VA = "0x18653BC", Slot = "31")]
		private BBParameter[] NodeCanvas.Framework.ISubParametersContainer.GetSubParameters()
		{
			return null;
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1865424", Offset = "0x1865424", VA = "0x1865424", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x18657CC", Offset = "0x18657CC", VA = "0x18657CC")]
		private void SetActorParametersMapping()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1865968", Offset = "0x1865968", VA = "0x1865968")]
		private void SetVariablesMapping()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x1865BCC", Offset = "0x1865BCC", VA = "0x1865BCC")]
		private void OnSubDialogueFinish(bool success)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1865C08", Offset = "0x1865C08", VA = "0x1865C08", Slot = "24")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x1865CC4", Offset = "0x1865CC4", VA = "0x1865CC4", Slot = "25")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x1865C5C", Offset = "0x1865C5C", VA = "0x1865C5C")]
		private bool IsInstance(DialogueTree dt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x1865668", Offset = "0x1865668", VA = "0x1865668")]
		private void CheckInstance()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x1865D14", Offset = "0x1865D14", VA = "0x1865D14")]
		public SubDialogueTree()
		{
		}
	}
	[Token(Token = "0x2000380")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB792C", Offset = "0xFB792C")]
	public class DialogueActor : MonoBehaviour, IDialogueActor
	{
		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Texture2D _portrait;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Color _dialogueColor;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Vector3 _dialogueOffset;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Sprite _portraitSprite;

		[Token(Token = "0x170003B5")]
		public new string name
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x18618C4", Offset = "0x18618C4", VA = "0x18618C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		public Texture2D portrait
		{
			[Token(Token = "0x6001757")]
			[Address(RVA = "0x18618CC", Offset = "0x18618CC", VA = "0x18618CC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B7")]
		public Sprite portraitSprite
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x18618D4", Offset = "0x18618D4", VA = "0x18618D4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B8")]
		public Color dialogueColor
		{
			[Token(Token = "0x6001759")]
			[Address(RVA = "0x1861A2C", Offset = "0x1861A2C", VA = "0x1861A2C", Slot = "7")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003B9")]
		public Vector3 dialoguePosition
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0x1861A38", Offset = "0x1861A38", VA = "0x1861A38", Slot = "8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x1861A70", Offset = "0x1861A70", VA = "0x1861A70")]
		public DialogueActor()
		{
		}

		[SpecialName]
		[Token(Token = "0x600175C")]
		[Address(RVA = "0x1861AA4", Offset = "0x1861AA4", VA = "0x1861AA4", Slot = "9")]
		private Transform NodeCanvas.DialogueTrees.IDialogueActor.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x2000381")]
	public class SubtitlesRequestInfo
	{
		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDialogueActor actor;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IStatement statement;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action Continue;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x18646BC", Offset = "0x18646BC", VA = "0x18646BC")]
		public SubtitlesRequestInfo(IDialogueActor actor, IStatement statement, Action callback)
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class MultipleChoiceRequestInfo
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDialogueActor actor;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<IStatement, int> options;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float availableTime;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool showLastStatement;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<int> SelectOption;

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x18648A0", Offset = "0x18648A0", VA = "0x18648A0")]
		public MultipleChoiceRequestInfo(IDialogueActor actor, Dictionary<IStatement, int> options, float availableTime, bool showLastStatement, Action<int> callback)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x18644D8", Offset = "0x18644D8", VA = "0x18644D8")]
		public MultipleChoiceRequestInfo(IDialogueActor actor, Dictionary<IStatement, int> options, float availableTime, Action<int> callback)
		{
		}
	}
	[Token(Token = "0x2000383")]
	public interface IDialogueActor
	{
		[Token(Token = "0x170003BA")]
		string name
		{
			[Token(Token = "0x6001760")]
			get;
		}

		[Token(Token = "0x170003BB")]
		Texture2D portrait
		{
			[Token(Token = "0x6001761")]
			get;
		}

		[Token(Token = "0x170003BC")]
		Sprite portraitSprite
		{
			[Token(Token = "0x6001762")]
			get;
		}

		[Token(Token = "0x170003BD")]
		Color dialogueColor
		{
			[Token(Token = "0x6001763")]
			get;
		}

		[Token(Token = "0x170003BE")]
		Vector3 dialoguePosition
		{
			[Token(Token = "0x6001764")]
			get;
		}

		[Token(Token = "0x170003BF")]
		Transform transform
		{
			[Token(Token = "0x6001765")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x2000384")]
	public class ProxyDialogueActor : IDialogueActor
	{
		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _name;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _transform;

		[Token(Token = "0x170003C0")]
		public string name
		{
			[Token(Token = "0x6001766")]
			[Address(RVA = "0x1864CF0", Offset = "0x1864CF0", VA = "0x1864CF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C1")]
		public Texture2D portrait
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x1864CF8", Offset = "0x1864CF8", VA = "0x1864CF8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		public Sprite portraitSprite
		{
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x1864D00", Offset = "0x1864D00", VA = "0x1864D00", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C3")]
		public Color dialogueColor
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x1864D08", Offset = "0x1864D08", VA = "0x1864D08", Slot = "7")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003C4")]
		public Vector3 dialoguePosition
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x1864D10", Offset = "0x1864D10", VA = "0x1864D10", Slot = "8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003C5")]
		public Transform transform
		{
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x1864D70", Offset = "0x1864D70", VA = "0x1864D70", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x18624DC", Offset = "0x18624DC", VA = "0x18624DC")]
		public ProxyDialogueActor(string name, Transform transform)
		{
		}
	}
	[Token(Token = "0x2000385")]
	public interface IStatement
	{
		[Token(Token = "0x170003C6")]
		string text
		{
			[Token(Token = "0x600176D")]
			get;
		}

		[Token(Token = "0x170003C7")]
		AudioClip audio
		{
			[Token(Token = "0x600176E")]
			get;
		}

		[Token(Token = "0x170003C8")]
		string meta
		{
			[Token(Token = "0x600176F")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x2000386")]
	public class Statement : IStatement
	{
		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _text;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _audio;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _meta;

		[Token(Token = "0x170003C9")]
		public string text
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x1864D78", Offset = "0x1864D78", VA = "0x1864D78", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x1864D80", Offset = "0x1864D80", VA = "0x1864D80")]
			set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public AudioClip audio
		{
			[Token(Token = "0x6001772")]
			[Address(RVA = "0x1864D88", Offset = "0x1864D88", VA = "0x1864D88", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x1864D90", Offset = "0x1864D90", VA = "0x1864D90")]
			set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		public string meta
		{
			[Token(Token = "0x6001774")]
			[Address(RVA = "0x1864D98", Offset = "0x1864D98", VA = "0x1864D98", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001775")]
			[Address(RVA = "0x1864DA0", Offset = "0x1864DA0", VA = "0x1864DA0")]
			set
			{
			}
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x1864DA8", Offset = "0x1864DA8", VA = "0x1864DA8")]
		public Statement()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x1864E28", Offset = "0x1864E28", VA = "0x1864E28")]
		public Statement(string text)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x1864EC8", Offset = "0x1864EC8", VA = "0x1864EC8")]
		public Statement(string text, AudioClip audio)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x1864F84", Offset = "0x1864F84", VA = "0x1864F84")]
		public Statement(string text, AudioClip audio, string meta)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x18640F8", Offset = "0x18640F8", VA = "0x18640F8")]
		public Statement BlackboardReplace(IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x1865074", Offset = "0x1865074", VA = "0x1865074", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace NodeCanvas.DialogueTrees.UI.Examples
{
	[Token(Token = "0x2000387")]
	public class DialogueUGUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200052D")]
		public class SubtitleDelays
		{
			[Token(Token = "0x40016B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float characterDelay;

			[Token(Token = "0x40016B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float sentenceDelay;

			[Token(Token = "0x40016BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float commaDelay;

			[Token(Token = "0x40016BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float finalDelay;

			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x1867348", Offset = "0x1867348", VA = "0x1867348")]
			public SubtitleDelays()
			{
			}
		}

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB99E4", Offset = "0xFB99E4")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40016BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool inputDown;

			[Token(Token = "0x60020DA")]
			[Address(RVA = "0x186735C", Offset = "0x186735C", VA = "0x186735C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60020DB")]
			[Address(RVA = "0x1867364", Offset = "0x1867364", VA = "0x1867364")]
			internal void <Internal_OnSubtitlesRequestInfo>b__0()
			{
			}
		}

		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB99F4", Offset = "0xFB99F4")]
		private sealed class <Internal_OnSubtitlesRequestInfo>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SubtitlesRequestInfo info;

			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DialogueUGUI <>4__this;

			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass25_0 <>8__1;

			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <text>5__2;

			[Token(Token = "0x40016C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AudioClip <audio>5__3;

			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private AudioSource <playSource>5__4;

			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <timer>5__5;

			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private string <tempText>5__6;

			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__7;

			[Token(Token = "0x40016C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private char <c>5__8;

			[Token(Token = "0x17000571")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020DF")]
				[Address(RVA = "0x18682D0", Offset = "0x18682D0", VA = "0x18682D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000572")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E1")]
				[Address(RVA = "0x1868338", Offset = "0x1868338", VA = "0x1868338", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020DC")]
			[Address(RVA = "0x1866580", Offset = "0x1866580", VA = "0x1866580")]
			[DebuggerHidden]
			public <Internal_OnSubtitlesRequestInfo>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60020DD")]
			[Address(RVA = "0x18677C4", Offset = "0x18677C4", VA = "0x18677C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020DE")]
			[Address(RVA = "0x18677C8", Offset = "0x18677C8", VA = "0x18677C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E0")]
			[Address(RVA = "0x18682D8", Offset = "0x18682D8", VA = "0x18682D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A04", Offset = "0xFB9A04")]
		private sealed class <CheckInput>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action Do;

			[Token(Token = "0x17000573")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020E5")]
				[Address(RVA = "0x186746C", Offset = "0x186746C", VA = "0x186746C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000574")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E7")]
				[Address(RVA = "0x18674D4", Offset = "0x18674D4", VA = "0x18674D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E2")]
			[Address(RVA = "0x186672C", Offset = "0x186672C", VA = "0x186672C")]
			[DebuggerHidden]
			public <CheckInput>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60020E3")]
			[Address(RVA = "0x18673F8", Offset = "0x18673F8", VA = "0x18673F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020E4")]
			[Address(RVA = "0x18673FC", Offset = "0x18673FC", VA = "0x18673FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E6")]
			[Address(RVA = "0x1867474", Offset = "0x1867474", VA = "0x1867474", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A14", Offset = "0xFB9A14")]
		private sealed class <DelayPrint>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <timer>5__2;

			[Token(Token = "0x17000575")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020EB")]
				[Address(RVA = "0x1867754", Offset = "0x1867754", VA = "0x1867754", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000576")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020ED")]
				[Address(RVA = "0x18677BC", Offset = "0x18677BC", VA = "0x18677BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E8")]
			[Address(RVA = "0x18667D0", Offset = "0x18667D0", VA = "0x18667D0")]
			[DebuggerHidden]
			public <DelayPrint>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60020E9")]
			[Address(RVA = "0x18676C0", Offset = "0x18676C0", VA = "0x18676C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020EA")]
			[Address(RVA = "0x18676C4", Offset = "0x18676C4", VA = "0x18676C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020EC")]
			[Address(RVA = "0x186775C", Offset = "0x186775C", VA = "0x186775C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A24", Offset = "0xFB9A24")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x40016D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueUGUI <>4__this;

			[Token(Token = "0x40016D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MultipleChoiceRequestInfo info;

			[Token(Token = "0x60020EE")]
			[Address(RVA = "0x1866F08", Offset = "0x1866F08", VA = "0x1866F08")]
			public <>c__DisplayClass29_0()
			{
			}
		}

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A34", Offset = "0xFB9A34")]
		private sealed class <>c__DisplayClass29_1
		{
			[Token(Token = "0x40016D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Button btn;

			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass29_0 CS$<>8__locals1;

			[Token(Token = "0x60020EF")]
			[Address(RVA = "0x1866F10", Offset = "0x1866F10", VA = "0x1866F10")]
			public <>c__DisplayClass29_1()
			{
			}

			[Token(Token = "0x60020F0")]
			[Address(RVA = "0x1867370", Offset = "0x1867370", VA = "0x1867370")]
			internal void <OnMultipleChoiceRequest>b__0()
			{
			}
		}

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A44", Offset = "0xFB9A44")]
		private sealed class <CountDown>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DialogueUGUI <>4__this;

			[Token(Token = "0x40016D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MultipleChoiceRequestInfo info;

			[Token(Token = "0x40016D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x17000577")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020F4")]
				[Address(RVA = "0x1867650", Offset = "0x1867650", VA = "0x1867650", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000578")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020F6")]
				[Address(RVA = "0x18676B8", Offset = "0x18676B8", VA = "0x18676B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x1866FB0", Offset = "0x1866FB0", VA = "0x1866FB0")]
			[DebuggerHidden]
			public <CountDown>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60020F2")]
			[Address(RVA = "0x18674DC", Offset = "0x18674DC", VA = "0x18674DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x18674E0", Offset = "0x18674E0", VA = "0x18674E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020F5")]
			[Address(RVA = "0x1867658", Offset = "0x1867658", VA = "0x1867658", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFC1C44", Offset = "0xFC1C44")]
		public bool skipOnInput;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool waitForInput;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFC1C7C", Offset = "0xFC1C7C")]
		public RectTransform subtitlesGroup;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text actorSpeech;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text actorName;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image actorPortrait;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform waitInputIndicator;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SubtitleDelays subtitleDelays;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<AudioClip> typingSounds;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xFC1CB4", Offset = "0xFC1CB4")]
		public RectTransform optionsGroup;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Button optionButton;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<Button, int> cachedButtons;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 originalSubsPosition;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isWaitingChoice;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource _localSource;

		[Token(Token = "0x170003CC")]
		private AudioSource localSource
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x1865DF4", Offset = "0x1865DF4", VA = "0x1865DF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1865EBC", Offset = "0x1865EBC", VA = "0x1865EBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x186600C", Offset = "0x186600C", VA = "0x186600C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x186615C", Offset = "0x186615C", VA = "0x186615C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1866290", Offset = "0x1866290", VA = "0x1866290")]
		private void OnDialogueStarted(DialogueTree dlg)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1866294", Offset = "0x1866294", VA = "0x1866294")]
		private void OnDialoguePaused(DialogueTree dlg)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x18662F0", Offset = "0x18662F0", VA = "0x18662F0")]
		private void OnDialogueFinished(DialogueTree dlg)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x18664BC", Offset = "0x18664BC", VA = "0x18664BC")]
		private void OnSubtitlesRequest(SubtitlesRequestInfo info)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x18664E8", Offset = "0x18664E8", VA = "0x18664E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB794", Offset = "0xFCB794")]
		private IEnumerator Internal_OnSubtitlesRequestInfo(SubtitlesRequestInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x18665AC", Offset = "0x18665AC", VA = "0x18665AC")]
		private void PlayTypeSound()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x18666B0", Offset = "0x18666B0", VA = "0x18666B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB7F8", Offset = "0xFCB7F8")]
		private IEnumerator CheckInput(Action Do)
		{
			return null;
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x1866758", Offset = "0x1866758", VA = "0x1866758")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB85C", Offset = "0xFCB85C")]
		private IEnumerator DelayPrint(float time)
		{
			return null;
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x18667FC", Offset = "0x18667FC", VA = "0x18667FC")]
		private void OnMultipleChoiceRequest(MultipleChoiceRequestInfo info)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x1866F18", Offset = "0x1866F18", VA = "0x1866F18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB8C0", Offset = "0xFCB8C0")]
		private IEnumerator CountDown(MultipleChoiceRequestInfo info)
		{
			return null;
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x1866FDC", Offset = "0x1866FDC", VA = "0x1866FDC")]
		private void Finalize(MultipleChoiceRequestInfo info, int index)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x186720C", Offset = "0x186720C", VA = "0x186720C")]
		private void SetMassAlpha(RectTransform root, float alpha)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x18672C8", Offset = "0x18672C8", VA = "0x18672C8")]
		public DialogueUGUI()
		{
		}
	}
}
namespace NodeCanvas.BehaviourTrees
{
	[Token(Token = "0x2000388")]
	public class BTConnection : Connection
	{
		[Token(Token = "0x600178D")]
		[Address(RVA = "0x185AE5C", Offset = "0x185AE5C", VA = "0x185AE5C")]
		public BTConnection()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public abstract class BTNode : Node
	{
		[Token(Token = "0x170003CD")]
		public sealed override Type outConnectionType
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x185AF00", Offset = "0x185AF00", VA = "0x185AF00", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CE")]
		public override int maxInConnections
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x185AF70", Offset = "0x185AF70", VA = "0x185AF70", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CF")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x185AF78", Offset = "0x185AF78", VA = "0x185AF78", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003D0")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0x185AF80", Offset = "0x185AF80", VA = "0x185AF80", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D1")]
		public override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0x185AF88", Offset = "0x185AF88", VA = "0x185AF88", Slot = "12")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x170003D2")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0x185AF90", Offset = "0x185AF90", VA = "0x185AF90", Slot = "13")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x6001794")]
		public T AddChild<T>(int childIndex) where T : BTNode
		{
			return null;
		}

		[Token(Token = "0x6001795")]
		public T AddChild<T>() where T : BTNode
		{
			return null;
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x185AE3C", Offset = "0x185AE3C", VA = "0x185AE3C")]
		protected BTNode()
		{
		}
	}
	[Token(Token = "0x200038A")]
	[GraphInfo]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xFB7964", Offset = "0xFB7964")]
	public class BehaviourTree : Graph
	{
		[Serializable]
		[Token(Token = "0x2000535")]
		private struct DerivedSerializationData
		{
			[Token(Token = "0x40016D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool repeat;

			[Token(Token = "0x40016DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float updateInterval;
		}

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
		[SerializeField]
		public bool repeat;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public float updateInterval;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float intervalCounter;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Status _rootStatus;

		[Token(Token = "0x170003D3")]
		public Status rootStatus
		{
			[Token(Token = "0x600179B")]
			[Address(RVA = "0x185B20C", Offset = "0x185B20C", VA = "0x185B20C")]
			get
			{
				return default(Status);
			}
			[Token(Token = "0x600179C")]
			[Address(RVA = "0x185B214", Offset = "0x185B214", VA = "0x185B214")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		public override Type baseNodeType
		{
			[Token(Token = "0x600179D")]
			[Address(RVA = "0x185B2AC", Offset = "0x185B2AC", VA = "0x185B2AC", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D5")]
		public override bool requiresAgent
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0x185B31C", Offset = "0x185B31C", VA = "0x185B31C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D6")]
		public override bool requiresPrimeNode
		{
			[Token(Token = "0x600179F")]
			[Address(RVA = "0x185B324", Offset = "0x185B324", VA = "0x185B324", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D7")]
		public override bool autoSort
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x185B32C", Offset = "0x185B32C", VA = "0x185B32C", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D8")]
		public override bool useLocalBlackboard
		{
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x185B334", Offset = "0x185B334", VA = "0x185B334", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D9")]
		public sealed override bool canAcceptVariableDrops
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0x185B33C", Offset = "0x185B33C", VA = "0x185B33C", Slot = "21")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400004E")]
		public static event Action<BehaviourTree, Status> onRootStatusChanged
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0x185B0A4", Offset = "0x185B0A4", VA = "0x185B0A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB924", Offset = "0xFCB924")]
			add
			{
			}
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x185B158", Offset = "0x185B158", VA = "0x185B158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB934", Offset = "0xFCB934")]
			remove
			{
			}
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x185AF98", Offset = "0x185AF98", VA = "0x185AF98", Slot = "13")]
		public override object OnDerivedDataSerialization()
		{
			return null;
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x185B000", Offset = "0x185B000", VA = "0x185B000", Slot = "14")]
		public override void OnDerivedDataDeserialization(object data)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x185B344", Offset = "0x185B344", VA = "0x185B344", Slot = "22")]
		protected override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x185B368", Offset = "0x185B368", VA = "0x185B368", Slot = "23")]
		protected override void OnGraphUpdate()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x185B404", Offset = "0x185B404", VA = "0x185B404")]
		public Status Tick(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x185B47C", Offset = "0x185B47C", VA = "0x185B47C")]
		public BehaviourTree()
		{
		}
	}
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB7A30", Offset = "0xFB7A30")]
	public class BehaviourTreeOwner : GraphOwner<BehaviourTree>
	{
		[Token(Token = "0x170003DA")]
		public bool repeat
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x185B4F4", Offset = "0x185B4F4", VA = "0x185B4F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x185B58C", Offset = "0x185B58C", VA = "0x185B58C")]
			set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public float updateInterval
		{
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x185B624", Offset = "0x185B624", VA = "0x185B624")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x185B6B0", Offset = "0x185B6B0", VA = "0x185B6B0")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public Status rootStatus
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x185B744", Offset = "0x185B744", VA = "0x185B744")]
			get
			{
				return default(Status);
			}
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x185B7D4", Offset = "0x185B7D4", VA = "0x185B7D4")]
		public Status Tick()
		{
			return default(Status);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x185B8D0", Offset = "0x185B8D0", VA = "0x185B8D0")]
		public BehaviourTreeOwner()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public abstract class BTComposite : BTNode
	{
		[Token(Token = "0x170003DD")]
		public sealed override int maxOutConnections
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x185AE44", Offset = "0x185AE44", VA = "0x185AE44", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003DE")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0x185AE4C", Offset = "0x185AE4C", VA = "0x185AE4C", Slot = "12")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x185AE54", Offset = "0x185AE54", VA = "0x185AE54")]
		protected BTComposite()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public abstract class BTDecorator : BTNode
	{
		[Token(Token = "0x170003DF")]
		public sealed override int maxOutConnections
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0x185AE64", Offset = "0x185AE64", VA = "0x185AE64", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E0")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x185AE6C", Offset = "0x185AE6C", VA = "0x185AE6C", Slot = "12")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x170003E1")]
		protected Connection decoratedConnection
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x185AE74", Offset = "0x185AE74", VA = "0x185AE74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		protected Node decoratedNode
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x185AEDC", Offset = "0x185AEDC", VA = "0x185AEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x185AEF8", Offset = "0x185AEF8", VA = "0x185AEF8")]
		protected BTDecorator()
		{
		}
	}
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7A68", Offset = "0xFB7A68")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7A68", Offset = "0xFB7A68")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7A68", Offset = "0xFB7A68")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7A68", Offset = "0xFB7A68")]
	public class BinarySelector : BTNode, ITaskAssignable<ConditionTask>, ITaskAssignable
	{
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool dynamic;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int succeedIndex;

		[Token(Token = "0x170003E3")]
		public override int maxOutConnections
		{
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x185B920", Offset = "0x185B920", VA = "0x185B920", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E4")]
		public override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x185B928", Offset = "0x185B928", VA = "0x185B928", Slot = "12")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x170003E5")]
		public override string name
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x185B930", Offset = "0x185B930", VA = "0x185B930", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		public Task task
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x185B954", Offset = "0x185B954", VA = "0x185B954", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x185B95C", Offset = "0x185B95C", VA = "0x185B95C", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		private ConditionTask condition
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x185B9F4", Offset = "0x185B9F4", VA = "0x185B9F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x185B9FC", Offset = "0x185B9FC", VA = "0x185B9FC")]
			set
			{
			}
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x185BA04", Offset = "0x185BA04", VA = "0x185BA04", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x185BB44", Offset = "0x185BB44", VA = "0x185BB44")]
		public BinarySelector()
		{
		}
	}
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7B30", Offset = "0xFB7B30")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7B30", Offset = "0xFB7B30")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7B30", Offset = "0xFB7B30")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7B30", Offset = "0xFB7B30")]
	public class FlipSelector : BTComposite
	{
		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int current;

		[Token(Token = "0x170003E8")]
		public override string name
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x185C1E8", Offset = "0x185C1E8", VA = "0x185C1E8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x185C20C", Offset = "0x185C20C", VA = "0x185C20C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x185C2F8", Offset = "0x185C2F8", VA = "0x185C2F8")]
		private void SendToBack(int i)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x185C3BC", Offset = "0x185C3BC", VA = "0x185C3BC", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x185C3C4", Offset = "0x185C3C4", VA = "0x185C3C4")]
		public FlipSelector()
		{
		}
	}
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB7BF8", Offset = "0xFB7BF8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7BF8", Offset = "0xFB7BF8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7BF8", Offset = "0xFB7BF8")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7BF8", Offset = "0xFB7BF8")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7BF8", Offset = "0xFB7BF8")]
	public class Parallel : BTComposite
	{
		[Token(Token = "0x2000536")]
		public enum ParallelPolicy
		{
			[Token(Token = "0x40016DC")]
			FirstFailure,
			[Token(Token = "0x40016DD")]
			FirstSuccess,
			[Token(Token = "0x40016DE")]
			FirstSuccessOrFailure
		}

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ParallelPolicy policy;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xFC1D2C", Offset = "0xFC1D2C")]
		public bool dynamic;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly List<Connection> finishedConnections;

		[Token(Token = "0x170003E9")]
		public override string name
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x185DDF8", Offset = "0x185DDF8", VA = "0x185DDF8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x185DE1C", Offset = "0x185DE1C", VA = "0x185DE1C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x185E1D0", Offset = "0x185E1D0", VA = "0x185E1D0", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x185E100", Offset = "0x185E100", VA = "0x185E100")]
		private void ResetRunning()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x185E228", Offset = "0x185E228", VA = "0x185E228")]
		public Parallel()
		{
		}
	}
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7CE8", Offset = "0xFB7CE8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7CE8", Offset = "0xFB7CE8")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7CE8", Offset = "0xFB7CE8")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7CE8", Offset = "0xFB7CE8")]
	public class PrioritySelector : BTComposite
	{
		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<BBParameter<float>> priorities;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Connection> orderedConnections;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int current;

		[Token(Token = "0x170003EA")]
		public override string name
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x185E2A4", Offset = "0x185E2A4", VA = "0x185E2A4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x185E2C8", Offset = "0x185E2C8", VA = "0x185E2C8", Slot = "21")]
		public override void OnChildConnected(int index)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x185E3F4", Offset = "0x185E3F4", VA = "0x185E3F4", Slot = "22")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x185E45C", Offset = "0x185E45C", VA = "0x185E45C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x185E5D4", Offset = "0x185E5D4", VA = "0x185E5D4", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x185E5DC", Offset = "0x185E5DC", VA = "0x185E5DC")]
		public PrioritySelector()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x185E68C", Offset = "0x185E68C", VA = "0x185E68C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB944", Offset = "0xFCB944")]
		private float <OnExecute>b__7_0(Connection c)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7DB0", Offset = "0xFB7DB0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7DB0", Offset = "0xFB7DB0")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7DB0", Offset = "0xFB7DB0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7DB0", Offset = "0xFB7DB0")]
	public class ProbabilitySelector : BTComposite
	{
		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<BBParameter<float>> childWeights;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> failChance;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float probability;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float currentProbability;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<int> failedIndeces;

		[Token(Token = "0x170003EB")]
		public override string name
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x185E734", Offset = "0x185E734", VA = "0x185E734", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x185E758", Offset = "0x185E758", VA = "0x185E758", Slot = "21")]
		public override void OnChildConnected(int index)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x185E820", Offset = "0x185E820", VA = "0x185E820", Slot = "22")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x185E888", Offset = "0x185E888", VA = "0x185E888", Slot = "23")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x185E898", Offset = "0x185E898", VA = "0x185E898", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x185EC0C", Offset = "0x185EC0C", VA = "0x185EC0C", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x185EAE8", Offset = "0x185EAE8", VA = "0x185EAE8")]
		private float GetTotal()
		{
			return default(float);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x185EC84", Offset = "0x185EC84", VA = "0x185EC84")]
		public ProbabilitySelector()
		{
		}
	}
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB7E78", Offset = "0xFB7E78")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7E78", Offset = "0xFB7E78")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7E78", Offset = "0xFB7E78")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7E78", Offset = "0xFB7E78")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7E78", Offset = "0xFB7E78")]
	public class Selector : BTComposite
	{
		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool dynamic;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool random;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int lastRunningNodeIndex;

		[Token(Token = "0x170003EC")]
		public override string name
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x185F084", Offset = "0x185F084", VA = "0x185F084", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x185F0A8", Offset = "0x185F0A8", VA = "0x185F0A8", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x185F258", Offset = "0x185F258", VA = "0x185F258", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x185F3DC", Offset = "0x185F3DC", VA = "0x185F3DC", Slot = "22")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x185F3F8", Offset = "0x185F3F8", VA = "0x185F3F8", Slot = "23")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x185F2A0", Offset = "0x185F2A0", VA = "0x185F2A0")]
		private List<Connection> Shuffle(List<Connection> list)
		{
			return null;
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x185F408", Offset = "0x185F408", VA = "0x185F408")]
		public Selector()
		{
		}
	}
	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB7F68", Offset = "0xFB7F68")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB7F68", Offset = "0xFB7F68")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB7F68", Offset = "0xFB7F68")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB7F68", Offset = "0xFB7F68")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB7F68", Offset = "0xFB7F68")]
	public class Sequencer : BTComposite
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool dynamic;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool random;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int lastRunningNodeIndex;

		[Token(Token = "0x170003ED")]
		public override string name
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x185F410", Offset = "0x185F410", VA = "0x185F410", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x185F434", Offset = "0x185F434", VA = "0x185F434", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x185F5D0", Offset = "0x185F5D0", VA = "0x185F5D0", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x185F754", Offset = "0x185F754", VA = "0x185F754", Slot = "22")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x185F770", Offset = "0x185F770", VA = "0x185F770", Slot = "23")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x185F618", Offset = "0x185F618", VA = "0x185F618")]
		private List<Connection> Shuffle(List<Connection> list)
		{
			return null;
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x185F780", Offset = "0x185F780", VA = "0x185F780")]
		public Sequencer()
		{
		}
	}
	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8058", Offset = "0xFB8058")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8058", Offset = "0xFB8058")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8058", Offset = "0xFB8058")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8058", Offset = "0xFB8058")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB8058", Offset = "0xFB8058")]
	public class StepIterator : BTComposite
	{
		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int current;

		[Token(Token = "0x170003EE")]
		public override string name
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x185F89C", Offset = "0x185F89C", VA = "0x185F89C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x185F8C0", Offset = "0x185F8C0", VA = "0x185F8C0", Slot = "23")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x185F8C8", Offset = "0x185F8C8", VA = "0x185F8C8", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x185F970", Offset = "0x185F970", VA = "0x185F970", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x185F980", Offset = "0x185F980", VA = "0x185F980")]
		public StepIterator()
		{
		}
	}
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8148", Offset = "0xFB8148")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8148", Offset = "0xFB8148")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8148", Offset = "0xFB8148")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xFB8148", Offset = "0xFB8148")]
	public class Switch : BTComposite
	{
		[Token(Token = "0x2000537")]
		public enum CaseSelectionMode
		{
			[Token(Token = "0x40016E0")]
			IndexBased,
			[Token(Token = "0x40016E1")]
			EnumBased
		}

		[Token(Token = "0x2000538")]
		public enum OutOfRangeMode
		{
			[Token(Token = "0x40016E3")]
			ReturnFailure,
			[Token(Token = "0x40016E4")]
			LoopIndex
		}

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool dynamic;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public CaseSelectionMode selectionMode;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xFC1D68", Offset = "0xFC1D68")]
		public BBParameter<int> intCase;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xFC1DA4", Offset = "0xFC1DA4")]
		public OutOfRangeMode outOfRangeMode;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xFC1DE0", Offset = "0xFC1DE0")]
		[BlackboardOnly]
		public BBObjectParameter enumCase;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int current;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int runningIndex;

		[Token(Token = "0x170003EF")]
		public override string name
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x1860168", Offset = "0x1860168", VA = "0x1860168", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x186018C", Offset = "0x186018C", VA = "0x186018C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x186038C", Offset = "0x186038C", VA = "0x186038C")]
		public Switch()
		{
		}
	}
	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8210", Offset = "0xFB8210")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8210", Offset = "0xFB8210")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8210", Offset = "0xFB8210")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8210", Offset = "0xFB8210")]
	public class ConditionalEvaluator : BTDecorator, ITaskAssignable<ConditionTask>, ITaskAssignable
	{
		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool isDynamic;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool accessed;

		[Token(Token = "0x170003F0")]
		public Task task
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x185BC4C", Offset = "0x185BC4C", VA = "0x185BC4C", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x185BC54", Offset = "0x185BC54", VA = "0x185BC54", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		private ConditionTask condition
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x185BCEC", Offset = "0x185BCEC", VA = "0x185BCEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x185BCF4", Offset = "0x185BCF4", VA = "0x185BCF4")]
			set
			{
			}
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x185BCFC", Offset = "0x185BCFC", VA = "0x185BCFC", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x185BDDC", Offset = "0x185BDDC", VA = "0x185BDDC", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x185BDE4", Offset = "0x185BDE4", VA = "0x185BDE4")]
		public ConditionalEvaluator()
		{
		}
	}
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB82D4", Offset = "0xFB82D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB82D4", Offset = "0xFB82D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB82D4", Offset = "0xFB82D4")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB82D4", Offset = "0xFB82D4")]
	public class Filter : BTDecorator
	{
		[Token(Token = "0x2000539")]
		public enum FilterMode
		{
			[Token(Token = "0x40016E6")]
			LimitNumberOfTimes,
			[Token(Token = "0x40016E7")]
			CoolDown
		}

		[Token(Token = "0x200053A")]
		public enum Policy
		{
			[Token(Token = "0x40016E9")]
			SuccessOrFailure,
			[Token(Token = "0x40016EA")]
			SuccessOnly,
			[Token(Token = "0x40016EB")]
			FailureOnly
		}

		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A54", Offset = "0xFB9A54")]
		private sealed class <Cooldown>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Filter <>4__this;

			[Token(Token = "0x17000579")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020FA")]
				[Address(RVA = "0x185C178", Offset = "0x185C178", VA = "0x185C178", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020FC")]
				[Address(RVA = "0x185C1E0", Offset = "0x185C1E0", VA = "0x185C1E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x185BFDC", Offset = "0x185BFDC", VA = "0x185BFDC")]
			[DebuggerHidden]
			public <Cooldown>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x185C0A4", Offset = "0x185C0A4", VA = "0x185C0A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x185C0A8", Offset = "0x185C0A8", VA = "0x185C0A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020FB")]
			[Address(RVA = "0x185C180", Offset = "0x185C180", VA = "0x185C180", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public FilterMode filterMode;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xFC1E40", Offset = "0xFC1E40")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xFC1E40", Offset = "0xFC1E40")]
		public BBParameter<int> maxCount;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xFC1EA8", Offset = "0xFC1EA8")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xFC1EA8", Offset = "0xFC1EA8")]
		public Policy policy;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xFC1F10", Offset = "0xFC1F10")]
		public BBParameter<float> coolDownTime;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool inactiveWhenLimited;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int executedCount;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float currentTime;

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x185BDEC", Offset = "0x185BDEC", VA = "0x185BDEC", Slot = "23")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x185BDF4", Offset = "0x185BDF4", VA = "0x185BDF4", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x185BF60", Offset = "0x185BF60", VA = "0x185BF60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB954", Offset = "0xFCB954")]
		private IEnumerator Cooldown()
		{
			return null;
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x185C008", Offset = "0x185C008", VA = "0x185C008")]
		public Filter()
		{
		}
	}
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB83A0", Offset = "0xFB83A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB83A0", Offset = "0xFB83A0")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB83A0", Offset = "0xFB83A0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB83A0", Offset = "0xFB83A0")]
	public class Guard : BTDecorator
	{
		[Token(Token = "0x200053C")]
		public enum GuardMode
		{
			[Token(Token = "0x40016F0")]
			ReturnFailure,
			[Token(Token = "0x40016F1")]
			WaitUntilReleased
		}

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<string> token;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GuardMode ifGuarded;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool isGuarding;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<GameObject, List<Guard>> guards;

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x185C3CC", Offset = "0x185C3CC", VA = "0x185C3CC")]
		private static List<Guard> AgentGuards(UnityEngine.Component agent)
		{
			return null;
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x185C464", Offset = "0x185C464", VA = "0x185C464", Slot = "23")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x185C668", Offset = "0x185C668", VA = "0x185C668", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x185C850", Offset = "0x185C850", VA = "0x185C850", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x185C490", Offset = "0x185C490", VA = "0x185C490")]
		private void SetGuards(UnityEngine.Component guardAgent)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x185C858", Offset = "0x185C858", VA = "0x185C858")]
		public Guard()
		{
		}
	}
	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB846C", Offset = "0xFB846C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB846C", Offset = "0xFB846C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB846C", Offset = "0xFB846C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB846C", Offset = "0xFB846C")]
	public class Interruptor : BTDecorator, ITaskAssignable<ConditionTask>, ITaskAssignable
	{
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x170003F2")]
		public ConditionTask condition
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x185C8D8", Offset = "0x185C8D8", VA = "0x185C8D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001801")]
			[Address(RVA = "0x185C8E0", Offset = "0x185C8E0", VA = "0x185C8E0")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public Task task
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x185C8E8", Offset = "0x185C8E8", VA = "0x185C8E8", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001803")]
			[Address(RVA = "0x185C8F0", Offset = "0x185C8F0", VA = "0x185C8F0", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x185C988", Offset = "0x185C988", VA = "0x185C988", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x185CA40", Offset = "0x185CA40", VA = "0x185CA40")]
		public Interruptor()
		{
		}
	}
	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8530", Offset = "0xFB8530")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8530", Offset = "0xFB8530")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8530", Offset = "0xFB8530")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8530", Offset = "0xFB8530")]
	public class Inverter : BTDecorator
	{
		[Token(Token = "0x6001806")]
		[Address(RVA = "0x185CA48", Offset = "0x185CA48", VA = "0x185CA48", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x185CABC", Offset = "0x185CABC", VA = "0x185CABC")]
		public Inverter()
		{
		}
	}
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB85F4", Offset = "0xFB85F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB85F4", Offset = "0xFB85F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB85F4", Offset = "0xFB85F4")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB85F4", Offset = "0xFB85F4")]
	public class Iterator : BTDecorator
	{
		[Token(Token = "0x200053D")]
		public enum TerminationConditions
		{
			[Token(Token = "0x40016F3")]
			None,
			[Token(Token = "0x40016F4")]
			FirstSuccess,
			[Token(Token = "0x40016F5")]
			FirstFailure
		}

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xFC1F5C", Offset = "0xFC1F5C")]
		[BlackboardOnly]
		public BBParameter<IList> targetList;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBObjectParameter current;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<int> storeIndex;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<int> maxIteration;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TerminationConditions terminationCondition;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool resetIndex;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int currentIndex;

		[Token(Token = "0x170003F4")]
		private IList list
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x185CAC4", Offset = "0x185CAC4", VA = "0x185CAC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x185CB24", Offset = "0x185CB24", VA = "0x185CB24", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x185CED0", Offset = "0x185CED0", VA = "0x185CED0", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x185CEE0", Offset = "0x185CEE0", VA = "0x185CEE0")]
		public Iterator()
		{
		}
	}
	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB86B8", Offset = "0xFB86B8")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB86B8", Offset = "0xFB86B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB86B8", Offset = "0xFB86B8")]
	public class Monitor : BTDecorator, ITaskAssignable<ActionTask>, ITaskAssignable
	{
		[Token(Token = "0x200053E")]
		public enum MonitorMode
		{
			[Token(Token = "0x40016F7")]
			Failure = 0,
			[Token(Token = "0x40016F8")]
			Success = 1,
			[Token(Token = "0x40016F9")]
			AnyStatus = 10
		}

		[Token(Token = "0x200053F")]
		public enum ReturnStatusMode
		{
			[Token(Token = "0x40016FB")]
			OriginalDecoratedChildStatus,
			[Token(Token = "0x40016FC")]
			NewDecoratorActionStatus
		}

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xFC1FB4", Offset = "0xFC1FB4")]
		public MonitorMode monitorMode;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xFC1FF0", Offset = "0xFC1FF0")]
		public ReturnStatusMode returnMode;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Status decoratorActionStatus;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ActionTask _action;

		[Token(Token = "0x170003F5")]
		public ActionTask action
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x185CF54", Offset = "0x185CF54", VA = "0x185CF54")]
			get
			{
				return null;
			}
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x185CF5C", Offset = "0x185CF5C", VA = "0x185CF5C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public Task task
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x185CF64", Offset = "0x185CF64", VA = "0x185CF64", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x185CF6C", Offset = "0x185CF6C", VA = "0x185CF6C", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x185D004", Offset = "0x185D004", VA = "0x185D004", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x185D104", Offset = "0x185D104", VA = "0x185D104", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x185D13C", Offset = "0x185D13C", VA = "0x185D13C")]
		public Monitor()
		{
		}
	}
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB875C", Offset = "0xFB875C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB875C", Offset = "0xFB875C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB875C", Offset = "0xFB875C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB875C", Offset = "0xFB875C")]
	public class Optional : BTDecorator
	{
		[Token(Token = "0x6001813")]
		[Address(RVA = "0x185DD5C", Offset = "0x185DD5C", VA = "0x185DD5C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x185DDF0", Offset = "0x185DDF0", VA = "0x185DDF0")]
		public Optional()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8820", Offset = "0xFB8820")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8820", Offset = "0xFB8820")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8820", Offset = "0xFB8820")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8820", Offset = "0xFB8820")]
	public class Remapper : BTDecorator
	{
		[Token(Token = "0x2000540")]
		public enum RemapStatus
		{
			[Token(Token = "0x40016FE")]
			Failure,
			[Token(Token = "0x40016FF")]
			Success
		}

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public RemapStatus successRemap;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RemapStatus failureRemap;

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x185ED68", Offset = "0x185ED68", VA = "0x185ED68", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x185EDE0", Offset = "0x185EDE0", VA = "0x185EDE0")]
		public Remapper()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB88EC", Offset = "0xFB88EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB88EC", Offset = "0xFB88EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB88EC", Offset = "0xFB88EC")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB88EC", Offset = "0xFB88EC")]
	public class Repeater : BTDecorator
	{
		[Token(Token = "0x2000541")]
		public enum RepeaterMode
		{
			[Token(Token = "0x4001701")]
			RepeatTimes,
			[Token(Token = "0x4001702")]
			RepeatUntil,
			[Token(Token = "0x4001703")]
			RepeatForever
		}

		[Token(Token = "0x2000542")]
		public enum RepeatUntilStatus
		{
			[Token(Token = "0x4001705")]
			Failure,
			[Token(Token = "0x4001706")]
			Success
		}

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public RepeaterMode repeaterMode;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xFC203C", Offset = "0xFC203C")]
		public BBParameter<int> repeatTimes;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xFC2078", Offset = "0xFC2078")]
		public RepeatUntilStatus repeatUntilStatus;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int currentIteration;

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x185EDF0", Offset = "0x185EDF0", VA = "0x185EDF0", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x185EF30", Offset = "0x185EF30", VA = "0x185EF30", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x185EF3C", Offset = "0x185EF3C", VA = "0x185EF3C")]
		public Repeater()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB89B8", Offset = "0xFB89B8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB89B8", Offset = "0xFB89B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB89B8", Offset = "0xFB89B8")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB89B8", Offset = "0xFB89B8")]
	public class Setter : BTDecorator
	{
		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<GameObject> newAgent;

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x185F788", Offset = "0x185F788", VA = "0x185F788", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x185F894", Offset = "0x185F894", VA = "0x185F894")]
		public Setter()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8A7C", Offset = "0xFB8A7C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8A7C", Offset = "0xFB8A7C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8A7C", Offset = "0xFB8A7C")]
	public class Timeout : BTDecorator
	{
		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> timeout;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float timer;

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1860454", Offset = "0x1860454", VA = "0x1860454", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1860568", Offset = "0x1860568", VA = "0x1860568", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1860570", Offset = "0x1860570", VA = "0x1860570")]
		public Timeout()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8B18", Offset = "0xFB8B18")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8B18", Offset = "0xFB8B18")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8B18", Offset = "0xFB8B18")]
	public class WaitUntil : BTDecorator, ITaskAssignable<ConditionTask>, ITaskAssignable
	{
		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool accessed;

		[Token(Token = "0x170003F7")]
		public Task task
		{
			[Token(Token = "0x600181F")]
			[Address(RVA = "0x18605DC", Offset = "0x18605DC", VA = "0x18605DC", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001820")]
			[Address(RVA = "0x18605E4", Offset = "0x18605E4", VA = "0x18605E4", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		private ConditionTask condition
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x186067C", Offset = "0x186067C", VA = "0x186067C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001822")]
			[Address(RVA = "0x1860684", Offset = "0x1860684", VA = "0x1860684")]
			set
			{
			}
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x186068C", Offset = "0x186068C", VA = "0x186068C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x186075C", Offset = "0x186075C", VA = "0x186075C", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1860764", Offset = "0x1860764", VA = "0x1860764")]
		public WaitUntil()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8BB4", Offset = "0xFB8BB4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8BB4", Offset = "0xFB8BB4")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8BB4", Offset = "0xFB8BB4")]
	public class ActionNode : BTNode, ITaskAssignable<ActionTask>, ITaskAssignable
	{
		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ActionTask _action;

		[Token(Token = "0x170003F9")]
		public Task task
		{
			[Token(Token = "0x6001826")]
			[Address(RVA = "0x185AC14", Offset = "0x185AC14", VA = "0x185AC14", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x185AC1C", Offset = "0x185AC1C", VA = "0x185AC1C", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x170003FA")]
		public ActionTask action
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0x185ACB4", Offset = "0x185ACB4", VA = "0x185ACB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001829")]
			[Address(RVA = "0x185ACBC", Offset = "0x185ACBC", VA = "0x185ACBC")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public override string name
		{
			[Token(Token = "0x600182A")]
			[Address(RVA = "0x185ACC4", Offset = "0x185ACC4", VA = "0x185ACC4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x185ACE8", Offset = "0x185ACE8", VA = "0x185ACE8", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x185AD14", Offset = "0x185AD14", VA = "0x185AD14", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x185ADD4", Offset = "0x185ADD4", VA = "0x185ADD4", Slot = "25")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x185AE34", Offset = "0x185AE34", VA = "0x185AE34")]
		public ActionNode()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8C5C", Offset = "0xFB8C5C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8C5C", Offset = "0xFB8C5C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8C5C", Offset = "0xFB8C5C")]
	public class ConditionNode : BTNode, ITaskAssignable<ConditionTask>, ITaskAssignable
	{
		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x170003FC")]
		public Task task
		{
			[Token(Token = "0x600182F")]
			[Address(RVA = "0x185BB4C", Offset = "0x185BB4C", VA = "0x185BB4C", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001830")]
			[Address(RVA = "0x185BB54", Offset = "0x185BB54", VA = "0x185BB54", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		public ConditionTask condition
		{
			[Token(Token = "0x6001831")]
			[Address(RVA = "0x185BBEC", Offset = "0x185BBEC", VA = "0x185BBEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001832")]
			[Address(RVA = "0x185BBF4", Offset = "0x185BBF4", VA = "0x185BBF4")]
			set
			{
			}
		}

		[Token(Token = "0x170003FE")]
		public override string name
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x185BBFC", Offset = "0x185BBFC", VA = "0x185BBFC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x185BC20", Offset = "0x185BC20", VA = "0x185BC20", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x185BC44", Offset = "0x185BC44", VA = "0x185BC44")]
		public ConditionNode()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8D04", Offset = "0xFB8D04")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8D04", Offset = "0xFB8D04")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8D04", Offset = "0xFB8D04")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8D04", Offset = "0xFB8D04")]
	public class NestedFSM : BTNode, IGraphAssignable
	{
		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private BBParameter<FSM> _nestedFSM;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<FSM, FSM> instances;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FSM currentInstance;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string successState;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string failureState;

		[Token(Token = "0x170003FF")]
		public override string name
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0x185D144", Offset = "0x185D144", VA = "0x185D144", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		public FSM nestedFSM
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x185D168", Offset = "0x185D168", VA = "0x185D168")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x185D1C0", Offset = "0x185D1C0", VA = "0x185D1C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000401")]
		private Graph NodeCanvas.Framework.IGraphAssignable.nestedGraph
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x185D228", Offset = "0x185D228", VA = "0x185D228", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183A")]
			[Address(RVA = "0x185D22C", Offset = "0x185D22C", VA = "0x185D22C", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x185D2C0", Offset = "0x185D2C0", VA = "0x185D2C0", Slot = "29")]
		private Graph[] NodeCanvas.Framework.IGraphAssignable.GetInstances()
		{
			return null;
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x185D328", Offset = "0x185D328", VA = "0x185D328", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x185D6E4", Offset = "0x185D6E4", VA = "0x185D6E4")]
		private void OnFSMFinish(bool success)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x185D6FC", Offset = "0x185D6FC", VA = "0x185D6FC", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x185D794", Offset = "0x185D794", VA = "0x185D794", Slot = "25")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x185D828", Offset = "0x185D828", VA = "0x185D828", Slot = "24")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x185D53C", Offset = "0x185D53C", VA = "0x185D53C")]
		private FSM CheckInstance()
		{
			return null;
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x185D8C0", Offset = "0x185D8C0", VA = "0x185D8C0")]
		public NestedFSM()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[DoNotList]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8DD0", Offset = "0xFB8DD0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8DD0", Offset = "0xFB8DD0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8DD0", Offset = "0xFB8DD0")]
	public class NodeToggler : BTNode
	{
		[Token(Token = "0x2000543")]
		public enum ToggleMode
		{
			[Token(Token = "0x4001708")]
			Enable,
			[Token(Token = "0x4001709")]
			Disable,
			[Token(Token = "0x400170A")]
			Toggle
		}

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ToggleMode toggleMode;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string targetNodeTag;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Node> targetNodes;

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x185D93C", Offset = "0x185D93C", VA = "0x185D93C", Slot = "23")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x185D9A8", Offset = "0x185D9A8", VA = "0x185D9A8", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x185DD4C", Offset = "0x185DD4C", VA = "0x185DD4C")]
		public NodeToggler()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	[DoNotList]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8E68", Offset = "0xFB8E68")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8E68", Offset = "0xFB8E68")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8E68", Offset = "0xFB8E68")]
	public class RootSwitcher : BTNode
	{
		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string targetNodeTag;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Node targetNode;

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x185EFB0", Offset = "0x185EFB0", VA = "0x185EFB0", Slot = "23")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x185F01C", Offset = "0x185F01C", VA = "0x185F01C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x185F07C", Offset = "0x185F07C", VA = "0x185F07C")]
		public RootSwitcher()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xFB8F00", Offset = "0xFB8F00")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xFB8F00", Offset = "0xFB8F00")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB8F00", Offset = "0xFB8F00")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xFB8F00", Offset = "0xFB8F00")]
	public class SubTree : BTNode, IGraphAssignable
	{
		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private BBParameter<BehaviourTree> _subTree;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<BehaviourTree, BehaviourTree> instances;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BehaviourTree currentInstance;

		[Token(Token = "0x17000402")]
		public override string name
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x185F988", Offset = "0x185F988", VA = "0x185F988", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000403")]
		public BehaviourTree subTree
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x185F9AC", Offset = "0x185F9AC", VA = "0x185F9AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600184B")]
			[Address(RVA = "0x185FA04", Offset = "0x185FA04", VA = "0x185FA04")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		private Graph NodeCanvas.Framework.IGraphAssignable.nestedGraph
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0x185FA6C", Offset = "0x185FA6C", VA = "0x185FA6C", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x600184D")]
			[Address(RVA = "0x185FA70", Offset = "0x185FA70", VA = "0x185FA70", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x185FB04", Offset = "0x185FB04", VA = "0x185FB04", Slot = "29")]
		private Graph[] NodeCanvas.Framework.IGraphAssignable.GetInstances()
		{
			return null;
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x185FB6C", Offset = "0x185FB6C", VA = "0x185FB6C", Slot = "17")]
		protected override Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x185FE8C", Offset = "0x185FE8C", VA = "0x185FE8C", Slot = "18")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x185FF2C", Offset = "0x185FF2C", VA = "0x185FF2C", Slot = "24")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x186000C", Offset = "0x186000C", VA = "0x186000C", Slot = "25")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x185FC6C", Offset = "0x185FC6C", VA = "0x185FC6C")]
		private BehaviourTree CheckInstance()
		{
			return null;
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x18600EC", Offset = "0x18600EC", VA = "0x18600EC")]
		public SubTree()
		{
		}
	}
}
namespace NodeCanvas.Framework
{
	[Serializable]
	[Token(Token = "0x20003AA")]
	public class CanvasGroup
	{
		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect rect;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x1D3AA00", Offset = "0x1D3AA00", VA = "0x1D3AA00")]
		public CanvasGroup()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x1D3AA08", Offset = "0x1D3AA08", VA = "0x1D3AA08")]
		public CanvasGroup(Rect rect, string name)
		{
		}
	}
	[Token(Token = "0x20003AB")]
	[SpoofAOT]
	public abstract class Connection
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Node _sourceNode;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Node _targetNode;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isDisabled;

		[NonSerialized]
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Status _status;

		[Token(Token = "0x17000405")]
		public Node sourceNode
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0x1D3BF20", Offset = "0x1D3BF20", VA = "0x1D3BF20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001858")]
			[Address(RVA = "0x1D3BF28", Offset = "0x1D3BF28", VA = "0x1D3BF28")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000406")]
		public Node targetNode
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0x1D3BF30", Offset = "0x1D3BF30", VA = "0x1D3BF30")]
			get
			{
				return null;
			}
			[Token(Token = "0x600185A")]
			[Address(RVA = "0x1D3BF38", Offset = "0x1D3BF38", VA = "0x1D3BF38")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000407")]
		public bool isActive
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0x1D3BF40", Offset = "0x1D3BF40", VA = "0x1D3BF40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600185C")]
			[Address(RVA = "0x1D3BF50", Offset = "0x1D3BF50", VA = "0x1D3BF50")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public Status status
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0x1D3BFCC", Offset = "0x1D3BFCC", VA = "0x1D3BFCC")]
			get
			{
				return default(Status);
			}
			[Token(Token = "0x600185E")]
			[Address(RVA = "0x1D3BFD4", Offset = "0x1D3BFD4", VA = "0x1D3BFD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		protected Graph graph
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0x1D3BFDC", Offset = "0x1D3BFDC", VA = "0x1D3BFDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1D3BFF4", Offset = "0x1D3BFF4", VA = "0x1D3BFF4")]
		public Connection()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x1D3C004", Offset = "0x1D3C004", VA = "0x1D3C004")]
		public static Connection Create(Node source, Node target, int sourceIndex)
		{
			return null;
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x1D3C568", Offset = "0x1D3C568", VA = "0x1D3C568")]
		public Connection Duplicate(Node newSource, Node newTarget)
		{
			return null;
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x1D3C88C", Offset = "0x1D3C88C", VA = "0x1D3C88C", Slot = "4")]
		public virtual void OnCreate(int sourceIndex, int targetIndex)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x1D3C890", Offset = "0x1D3C890", VA = "0x1D3C890", Slot = "5")]
		public virtual void OnValidate(int sourceIndex, int targetIndex)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x1D3C894", Offset = "0x1D3C894", VA = "0x1D3C894", Slot = "6")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x1D3C204", Offset = "0x1D3C204", VA = "0x1D3C204")]
		public void SetSource(Node newSource, bool isRelink = true, int index = -1)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x1D3C3B4", Offset = "0x1D3C3B4", VA = "0x1D3C3B4")]
		public void SetTarget(Node newTarget, bool isRelink = true, int index = -1)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x1D3C898", Offset = "0x1D3C898", VA = "0x1D3C898")]
		public Status Execute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1D3BF94", Offset = "0x1D3BF94", VA = "0x1D3BF94")]
		public void Reset(bool recursively = true)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AC")]
	public abstract class Graph : ScriptableObject, ITaskSystem, ISerializationCallbackReceiver
	{
		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A64", Offset = "0xFB9A64")]
		private sealed class <>c__DisplayClass96_0
		{
			[Token(Token = "0x400170B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graph targetGraph;

			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x1D3F908", Offset = "0x1D3F908", VA = "0x1D3F908")]
			public <>c__DisplayClass96_0()
			{
			}

			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x1D43894", Offset = "0x1D43894", VA = "0x1D43894")]
			internal bool <CloneNodes>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A74", Offset = "0xFB9A74")]
		private sealed class <>c
		{
			[Token(Token = "0x400170C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Node, bool> <>9__100_0;

			[Token(Token = "0x400170E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Node, int> <>9__100_1;

			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Node, bool> <>9__121_0;

			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Node, bool> <>9__122_0;

			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<BBParameter, string> <>9__127_0;

			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<BBParameter, string> <>9__127_1;

			[Token(Token = "0x4001713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<BBParameter, string> <>9__127_2;

			[Token(Token = "0x4001714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<BBParameter, string> <>9__127_3;

			[Token(Token = "0x6002100")]
			[Address(RVA = "0x1D43630", Offset = "0x1D43630", VA = "0x1D43630")]
			public <>c()
			{
			}

			[Token(Token = "0x6002101")]
			[Address(RVA = "0x1D43638", Offset = "0x1D43638", VA = "0x1D43638")]
			internal bool <UpdateNodeIDs>b__100_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x6002102")]
			[Address(RVA = "0x1D43694", Offset = "0x1D43694", VA = "0x1D43694")]
			internal int <UpdateNodeIDs>b__100_1(Node node)
			{
				return default(int);
			}

			[Token(Token = "0x6002103")]
			[Address(RVA = "0x1D436AC", Offset = "0x1D436AC", VA = "0x1D436AC")]
			internal bool <GetRootNodes>b__121_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x6002104")]
			[Address(RVA = "0x1D43708", Offset = "0x1D43708", VA = "0x1D43708")]
			internal bool <GetLeafNodes>b__122_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x6002105")]
			[Address(RVA = "0x1D43764", Offset = "0x1D43764", VA = "0x1D43764")]
			internal string <GetUsedParameterNamesOfTarget>b__127_0(BBParameter p)
			{
				return null;
			}

			[Token(Token = "0x6002106")]
			[Address(RVA = "0x1D4377C", Offset = "0x1D4377C", VA = "0x1D4377C")]
			internal string <GetUsedParameterNamesOfTarget>b__127_1(BBParameter p)
			{
				return null;
			}

			[Token(Token = "0x6002107")]
			[Address(RVA = "0x1D43794", Offset = "0x1D43794", VA = "0x1D43794")]
			internal string <GetUsedParameterNamesOfTarget>b__127_2(BBParameter p)
			{
				return null;
			}

			[Token(Token = "0x6002108")]
			[Address(RVA = "0x1D437AC", Offset = "0x1D437AC", VA = "0x1D437AC")]
			internal string <GetUsedParameterNamesOfTarget>b__127_3(BBParameter p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A84", Offset = "0xFB9A84")]
		private sealed class <>c__DisplayClass116_0
		{
			[Token(Token = "0x4001715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int searchID;

			[Token(Token = "0x6002109")]
			[Address(RVA = "0x1D40D00", Offset = "0x1D40D00", VA = "0x1D40D00")]
			public <>c__DisplayClass116_0()
			{
			}

			[Token(Token = "0x600210A")]
			[Address(RVA = "0x1D437C4", Offset = "0x1D437C4", VA = "0x1D437C4")]
			internal bool <GetNodeWithID>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9A94", Offset = "0xFB9A94")]
		private sealed class <>c__DisplayClass136_0
		{
			[Token(Token = "0x4001716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x600210B")]
			[Address(RVA = "0x1D42F48", Offset = "0x1D42F48", VA = "0x1D42F48")]
			public <>c__DisplayClass136_0()
			{
			}

			[Token(Token = "0x600210C")]
			[Address(RVA = "0x1D437E8", Offset = "0x1D437E8", VA = "0x1D437E8")]
			internal bool <RemoveNode>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _serializedGraph;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<UnityEngine.Object> _objectReferences;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _deserializationFailed;

		[NonSerialized]
		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool hasDeserialized;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _category;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _comments;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 _translation;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _zoomFactor;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Node> _nodes;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Node _primeNode;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<CanvasGroup> _canvasGroups;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BlackboardSource _localBlackboard;

		[NonSerialized]
		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Component _agent;

		[NonSerialized]
		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IBlackboard _blackboard;

		[NonSerialized]
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Graph> runningGraphs;

		[NonSerialized]
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float timeStarted;

		[NonSerialized]
		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _isRunning;

		[NonSerialized]
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool _isPaused;

		[Token(Token = "0x1700040A")]
		public abstract Type baseNodeType
		{
			[Token(Token = "0x6001881")]
			get;
		}

		[Token(Token = "0x1700040B")]
		public abstract bool requiresAgent
		{
			[Token(Token = "0x6001882")]
			get;
		}

		[Token(Token = "0x1700040C")]
		public abstract bool requiresPrimeNode
		{
			[Token(Token = "0x6001883")]
			get;
		}

		[Token(Token = "0x1700040D")]
		public abstract bool autoSort
		{
			[Token(Token = "0x6001884")]
			get;
		}

		[Token(Token = "0x1700040E")]
		public abstract bool useLocalBlackboard
		{
			[Token(Token = "0x6001885")]
			get;
		}

		[Token(Token = "0x1700040F")]
		public abstract bool canAcceptVariableDrops
		{
			[Token(Token = "0x6001886")]
			get;
		}

		[Token(Token = "0x17000410")]
		public new string name
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x1D3EC3C", Offset = "0x1D3EC3C", VA = "0x1D3EC3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x1D3EC44", Offset = "0x1D3EC44", VA = "0x1D3EC44")]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public string category
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0x1D3EC4C", Offset = "0x1D3EC4C", VA = "0x1D3EC4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600188A")]
			[Address(RVA = "0x1D3EC54", Offset = "0x1D3EC54", VA = "0x1D3EC54")]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public string comments
		{
			[Token(Token = "0x600188B")]
			[Address(RVA = "0x1D3EC5C", Offset = "0x1D3EC5C", VA = "0x1D3EC5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600188C")]
			[Address(RVA = "0x1D3EC64", Offset = "0x1D3EC64", VA = "0x1D3EC64")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public float elapsedTime
		{
			[Token(Token = "0x600188D")]
			[Address(RVA = "0x1D3EC6C", Offset = "0x1D3EC6C", VA = "0x1D3EC6C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000414")]
		public bool isRunning
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0x1D3ECB0", Offset = "0x1D3ECB0", VA = "0x1D3ECB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600188F")]
			[Address(RVA = "0x1D3ECB8", Offset = "0x1D3ECB8", VA = "0x1D3ECB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public bool isPaused
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0x1D3ECC4", Offset = "0x1D3ECC4", VA = "0x1D3ECC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001891")]
			[Address(RVA = "0x1D3ECCC", Offset = "0x1D3ECCC", VA = "0x1D3ECCC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public List<Node> allNodes
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0x1D3ECD8", Offset = "0x1D3ECD8", VA = "0x1D3ECD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001893")]
			[Address(RVA = "0x1D3ECE0", Offset = "0x1D3ECE0", VA = "0x1D3ECE0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000417")]
		public Node primeNode
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x1D3ECE8", Offset = "0x1D3ECE8", VA = "0x1D3ECE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001895")]
			[Address(RVA = "0x1D3ECF0", Offset = "0x1D3ECF0", VA = "0x1D3ECF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public List<CanvasGroup> canvasGroups
		{
			[Token(Token = "0x6001896")]
			[Address(RVA = "0x1D3EDB4", Offset = "0x1D3EDB4", VA = "0x1D3EDB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001897")]
			[Address(RVA = "0x1D3EDBC", Offset = "0x1D3EDBC", VA = "0x1D3EDBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public Vector2 translation
		{
			[Token(Token = "0x6001898")]
			[Address(RVA = "0x1D3EDC4", Offset = "0x1D3EDC4", VA = "0x1D3EDC4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001899")]
			[Address(RVA = "0x1D3EDCC", Offset = "0x1D3EDCC", VA = "0x1D3EDCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public float zoomFactor
		{
			[Token(Token = "0x600189A")]
			[Address(RVA = "0x1D3EDD4", Offset = "0x1D3EDD4", VA = "0x1D3EDD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600189B")]
			[Address(RVA = "0x1D3EDDC", Offset = "0x1D3EDDC", VA = "0x1D3EDDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public UnityEngine.Component agent
		{
			[Token(Token = "0x600189C")]
			[Address(RVA = "0x1D3EDE4", Offset = "0x1D3EDE4", VA = "0x1D3EDE4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600189D")]
			[Address(RVA = "0x1D3EDEC", Offset = "0x1D3EDEC", VA = "0x1D3EDEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public IBlackboard blackboard
		{
			[Token(Token = "0x600189E")]
			[Address(RVA = "0x1D3EDF4", Offset = "0x1D3EDF4", VA = "0x1D3EDF4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600189F")]
			[Address(RVA = "0x1D3EE34", Offset = "0x1D3EE34", VA = "0x1D3EE34")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public BlackboardSource localBlackboard
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x1D3E930", Offset = "0x1D3E930", VA = "0x1D3E930")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041E")]
		private UnityEngine.Object NodeCanvas.Framework.ITaskSystem.contextObject
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x1D3EE94", Offset = "0x1D3EE94", VA = "0x1D3EE94", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004F")]
		public event Action<bool> onFinish
		{
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x1D3EAF4", Offset = "0x1D3EAF4", VA = "0x1D3EAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB9B8", Offset = "0xFCB9B8")]
			add
			{
			}
			[Token(Token = "0x6001880")]
			[Address(RVA = "0x1D3EB98", Offset = "0x1D3EB98", VA = "0x1D3EB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB9C8", Offset = "0xFCB9C8")]
			remove
			{
			}
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1D3D460", Offset = "0x1D3D460", VA = "0x1D3D460", Slot = "11")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1D3D468", Offset = "0x1D3D468", VA = "0x1D3D468", Slot = "12")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1D3D504", Offset = "0x1D3D504", VA = "0x1D3D504")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1D3D84C", Offset = "0x1D3D84C", VA = "0x1D3D84C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1D3D850", Offset = "0x1D3D850", VA = "0x1D3D850")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1D3D854", Offset = "0x1D3D854", VA = "0x1D3D854")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1D3D464", Offset = "0x1D3D464", VA = "0x1D3D464")]
		public void Serialize()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1D3D46C", Offset = "0x1D3D46C", VA = "0x1D3D46C")]
		public void Deserialize()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1D3DA14", Offset = "0x1D3DA14", VA = "0x1D3DA14")]
		public string Serialize(bool pretyJson, List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x1D3D858", Offset = "0x1D3D858", VA = "0x1D3D858")]
		public GraphSerializationData Deserialize(string serializedGraph, bool validate, List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1D3E158", Offset = "0x1D3E158", VA = "0x1D3E158")]
		private bool LoadGraphData(GraphSerializationData data, bool validate)
		{
			return default(bool);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x1D3E4F4", Offset = "0x1D3E4F4", VA = "0x1D3E4F4", Slot = "13")]
		public virtual object OnDerivedDataSerialization()
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x1D3E4FC", Offset = "0x1D3E4FC", VA = "0x1D3E4FC", Slot = "14")]
		public virtual void OnDerivedDataDeserialization(object data)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x1D3E500", Offset = "0x1D3E500", VA = "0x1D3E500")]
		public void GetSerializationData(out string json, out List<UnityEngine.Object> references)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x1D3E5A4", Offset = "0x1D3E5A4", VA = "0x1D3E5A4")]
		public void SetSerializationObjectReferences(List<UnityEngine.Object> references)
		{
		}

		[Token(Token = "0x6001879")]
		public static T Clone<T>(T graph) where T : Graph
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x1D3E5AC", Offset = "0x1D3E5AC", VA = "0x1D3E5AC")]
		public string SerializeLocalBlackboard()
		{
			return null;
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x1D3E670", Offset = "0x1D3E670", VA = "0x1D3E670")]
		public bool DeserializeLocalBlackboard(string json)
		{
			return default(bool);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x1D3E8EC", Offset = "0x1D3E8EC", VA = "0x1D3E8EC")]
		public void CopySerialized(Graph target)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x1D3D508", Offset = "0x1D3D508", VA = "0x1D3D508")]
		public void Validate()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x1D3EAF0", Offset = "0x1D3EAF0", VA = "0x1D3EAF0", Slot = "15")]
		protected virtual void OnGraphValidate()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x1D3EE98", Offset = "0x1D3EE98", VA = "0x1D3EE98")]
		public static List<Node> CloneNodes(List<Node> originalNodes, [Optional] Graph targetGraph, [Optional] Vector2 originPosition)
		{
			return null;
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x1D3FD2C", Offset = "0x1D3FD2C", VA = "0x1D3FD2C")]
		public void UpdateReferences()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x1D3FD50", Offset = "0x1D3FD50", VA = "0x1D3FD50")]
		private void UpdateNodeBBFields()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1D3FE18", Offset = "0x1D3FE18", VA = "0x1D3FE18", Slot = "8")]
		public void SendTaskOwnerDefaults()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1D3DB64", Offset = "0x1D3DB64", VA = "0x1D3DB64")]
		public void UpdateNodeIDs(bool alsoReorderList)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1D40034", Offset = "0x1D40034", VA = "0x1D40034")]
		public void StartGraph(UnityEngine.Component agent, IBlackboard blackboard, bool autoUpdate, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x1D404F4", Offset = "0x1D404F4", VA = "0x1D404F4")]
		public void Stop(bool success = true)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x1D406C8", Offset = "0x1D406C8", VA = "0x1D406C8")]
		public void Pause()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x1D404D8", Offset = "0x1D404D8", VA = "0x1D404D8")]
		public void UpdateGraph()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x1D4082C", Offset = "0x1D4082C", VA = "0x1D4082C", Slot = "22")]
		protected virtual void OnGraphStarted()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x1D40830", Offset = "0x1D40830", VA = "0x1D40830", Slot = "23")]
		protected virtual void OnGraphUpdate()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1D40834", Offset = "0x1D40834", VA = "0x1D40834", Slot = "24")]
		protected virtual void OnGraphStoped()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1D40838", Offset = "0x1D40838", VA = "0x1D40838", Slot = "25")]
		protected virtual void OnGraphPaused()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1D4083C", Offset = "0x1D4083C", VA = "0x1D4083C", Slot = "26")]
		protected virtual void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1D40840", Offset = "0x1D40840", VA = "0x1D40840")]
		public void SendEvent(string name)
		{
		}

		[Token(Token = "0x60018B1")]
		public void SendEvent<T>(string name, T value)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1D408B4", Offset = "0x1D408B4", VA = "0x1D408B4", Slot = "9")]
		public void SendEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x1D409F4", Offset = "0x1D409F4", VA = "0x1D409F4")]
		public static void SendGlobalEvent(string name)
		{
		}

		[Token(Token = "0x60018B4")]
		public static void SendGlobalEvent<T>(string name, T value)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1D40A78", Offset = "0x1D40A78", VA = "0x1D40A78")]
		public static void SendGlobalEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1D40C24", Offset = "0x1D40C24", VA = "0x1D40C24")]
		public Node GetNodeWithID(int searchID)
		{
			return null;
		}

		[Token(Token = "0x60018B7")]
		public List<T> GetAllNodesOfType<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x60018B8")]
		public T GetNodeWithTag<T>(string tagName) where T : Node
		{
			return null;
		}

		[Token(Token = "0x60018B9")]
		public List<T> GetNodesWithTag<T>(string tagName) where T : Node
		{
			return null;
		}

		[Token(Token = "0x60018BA")]
		public List<T> GetAllTagedNodes<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x1D40D08", Offset = "0x1D40D08", VA = "0x1D40D08")]
		public List<Node> GetRootNodes()
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1D40E10", Offset = "0x1D40E10", VA = "0x1D40E10")]
		public List<Node> GetLeafNodes()
		{
			return null;
		}

		[Token(Token = "0x60018BD")]
		public List<T> GetAllNestedGraphs<T>(bool recursive) where T : Graph
		{
			return null;
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1D40F18", Offset = "0x1D40F18", VA = "0x1D40F18")]
		public List<Graph> GetAllInstancedNestedGraphs()
		{
			return null;
		}

		[Token(Token = "0x60018BF")]
		public List<T> GetAllTasksOfType<T>() where T : Task
		{
			return null;
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1D412C8", Offset = "0x1D412C8", VA = "0x1D412C8")]
		public Node GetTaskParent(Task task)
		{
			return null;
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1D41778", Offset = "0x1D41778", VA = "0x1D41778")]
		public static List<string> GetUsedParameterNamesOfTarget(object target)
		{
			return null;
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x1D41F7C", Offset = "0x1D41F7C", VA = "0x1D41F7C")]
		public static Graph GetElementGraph(object obj)
		{
			return null;
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1D4210C", Offset = "0x1D4210C", VA = "0x1D4210C")]
		public BBParameter[] GetDefinedParameters()
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x1D42178", Offset = "0x1D42178", VA = "0x1D42178")]
		public BBParameter[] GetDefinedParameters(ref object[] parents)
		{
			return null;
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x1D425C4", Offset = "0x1D425C4", VA = "0x1D425C4")]
		public void PromoteDefinedParametersToVariables(IBlackboard bb)
		{
		}

		[Token(Token = "0x60018C6")]
		public T AddNode<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x60018C7")]
		public T AddNode<T>(Vector2 pos) where T : Node
		{
			return null;
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x1D42644", Offset = "0x1D42644", VA = "0x1D42644")]
		public Node AddNode(Type nodeType)
		{
			return null;
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x1D42698", Offset = "0x1D42698", VA = "0x1D42698")]
		public Node AddNode(Type nodeType, Vector2 pos)
		{
			return null;
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1D42C2C", Offset = "0x1D42C2C", VA = "0x1D42C2C")]
		public void RemoveNode(Node node, bool recordUndo = true, bool force = false)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1D4308C", Offset = "0x1D4308C", VA = "0x1D4308C")]
		public Connection ConnectNodes(Node sourceNode, Node targetNode)
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1D430FC", Offset = "0x1D430FC", VA = "0x1D430FC")]
		public Connection ConnectNodes(Node sourceNode, Node targetNode, int indexToInsert)
		{
			return null;
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1D42F50", Offset = "0x1D42F50", VA = "0x1D42F50")]
		public void RemoveConnection(Connection connection, bool recordUndo = true)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1D3C200", Offset = "0x1D3C200", VA = "0x1D3C200", Slot = "10")]
		public void RecordUndo(string name)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1D43394", Offset = "0x1D43394", VA = "0x1D43394")]
		public void ClearGraph()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1D43464", Offset = "0x1D43464", VA = "0x1D43464")]
		protected Graph()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB8FD4", Offset = "0xFB8FD4")]
	public class GraphInfoAttribute : Attribute
	{
		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string packageName;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string docsURL;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string resourcesURL;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string forumsURL;

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1D43908", Offset = "0x1D43908", VA = "0x1D43908")]
		public GraphInfoAttribute()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public abstract class GraphOwner : MonoBehaviour
	{
		[Token(Token = "0x2000548")]
		public enum EnableAction
		{
			[Token(Token = "0x4001718")]
			EnableBehaviour,
			[Token(Token = "0x4001719")]
			DoNothing
		}

		[Token(Token = "0x2000549")]
		public enum DisableAction
		{
			[Token(Token = "0x400171B")]
			DisableBehaviour,
			[Token(Token = "0x400171C")]
			PauseBehaviour,
			[Token(Token = "0x400171D")]
			DoNothing
		}

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string boundGraphSerialization;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<UnityEngine.Object> boundGraphObjectReferences;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public EnableAction enableAction;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public DisableAction disableAction;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<GraphOwner> onOwnerBehaviourStateChange;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Graph, Graph> instances;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool awakeCalled;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool isQuiting;

		[Token(Token = "0x1700041F")]
		public abstract Graph graph
		{
			[Token(Token = "0x60018D3")]
			get;
			[Token(Token = "0x60018D4")]
			set;
		}

		[Token(Token = "0x17000420")]
		public abstract IBlackboard blackboard
		{
			[Token(Token = "0x60018D5")]
			get;
			[Token(Token = "0x60018D6")]
			set;
		}

		[Token(Token = "0x17000421")]
		public abstract Type graphType
		{
			[Token(Token = "0x60018D7")]
			get;
		}

		[Token(Token = "0x17000422")]
		public bool isRunning
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x1D43910", Offset = "0x1D43910", VA = "0x1D43910")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000423")]
		public bool isPaused
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x1D439C8", Offset = "0x1D439C8", VA = "0x1D439C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000424")]
		public float elapsedTime
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x1D43A80", Offset = "0x1D43A80", VA = "0x1D43A80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x1D43B58", Offset = "0x1D43B58", VA = "0x1D43B58")]
		protected Graph GetInstance(Graph originalGraph)
		{
			return null;
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x1D43CCC", Offset = "0x1D43CCC", VA = "0x1D43CCC")]
		public void StartBehaviour()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x1D43E00", Offset = "0x1D43E00", VA = "0x1D43E00")]
		public void StartBehaviour(Action<bool> callback)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x1D43F44", Offset = "0x1D43F44", VA = "0x1D43F44")]
		public void PauseBehaviour()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x1D44020", Offset = "0x1D44020", VA = "0x1D44020")]
		public void StopBehaviour(bool success = true)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1D44110", Offset = "0x1D44110", VA = "0x1D44110")]
		public void UpdateBehaviour()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1D441D4", Offset = "0x1D441D4", VA = "0x1D441D4")]
		public void SendEvent(string eventName)
		{
		}

		[Token(Token = "0x60018E2")]
		public void SendEvent<T>(string eventName, T eventValue)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x1D44248", Offset = "0x1D44248", VA = "0x1D44248")]
		public void SendEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x1D4430C", Offset = "0x1D4430C", VA = "0x1D4430C")]
		public static void SendGlobalEvent(string eventName)
		{
		}

		[Token(Token = "0x60018E5")]
		public static void SendGlobalEvent<T>(string eventName, T eventValue)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1D44390", Offset = "0x1D44390", VA = "0x1D44390")]
		public void Awake()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x1D445F8", Offset = "0x1D445F8", VA = "0x1D445F8")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x1D44608", Offset = "0x1D44608", VA = "0x1D44608")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x1D44690", Offset = "0x1D44690", VA = "0x1D44690")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x1D44950", Offset = "0x1D44950", VA = "0x1D44950")]
		protected void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x1D449A4", Offset = "0x1D449A4", VA = "0x1D449A4")]
		protected GraphOwner()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public abstract class GraphOwner<T> : GraphOwner where T : Graph
	{
		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _graph;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private UnityEngine.Object _blackboard;

		[Token(Token = "0x17000425")]
		public sealed override Graph graph
		{
			[Token(Token = "0x60018EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018ED")]
			set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public T behaviour
		{
			[Token(Token = "0x60018EE")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018EF")]
			set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public sealed override IBlackboard blackboard
		{
			[Token(Token = "0x60018F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F1")]
			set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public sealed override Type graphType
		{
			[Token(Token = "0x60018F2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F3")]
		public void StartBehaviour(T newGraph)
		{
		}

		[Token(Token = "0x60018F4")]
		public void StartBehaviour(T newGraph, Action<bool> callback)
		{
		}

		[Token(Token = "0x60018F5")]
		public void SwitchBehaviour(T newGraph)
		{
		}

		[Token(Token = "0x60018F6")]
		public void SwitchBehaviour(T newGraph, Action<bool> callback)
		{
		}

		[Token(Token = "0x60018F7")]
		protected GraphOwner()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public interface IUpdatable
	{
		[Token(Token = "0x60018F8")]
		void Update();
	}
	[Token(Token = "0x20003B1")]
	public interface IInvokable
	{
		[Token(Token = "0x60018F9")]
		string GetInvocationID();

		[Token(Token = "0x60018FA")]
		object Invoke(params object[] args);
	}
	[Token(Token = "0x20003B2")]
	public interface IGraphAssignable
	{
		[Token(Token = "0x17000429")]
		Graph nestedGraph
		{
			[Token(Token = "0x60018FB")]
			get;
			[Token(Token = "0x60018FC")]
			set;
		}

		[Token(Token = "0x60018FD")]
		Graph[] GetInstances();
	}
	[Token(Token = "0x20003B3")]
	public interface ITaskAssignable
	{
		[Token(Token = "0x1700042A")]
		Task task
		{
			[Token(Token = "0x60018FE")]
			get;
			[Token(Token = "0x60018FF")]
			set;
		}
	}
	[Token(Token = "0x20003B4")]
	public interface ITaskAssignable<T> : ITaskAssignable where T : Task
	{
	}
	[Token(Token = "0x20003B5")]
	public interface ISubTasksContainer
	{
		[Token(Token = "0x6001900")]
		Task[] GetSubTasks();
	}
	[Token(Token = "0x20003B6")]
	public interface ISubParametersContainer
	{
		[Token(Token = "0x6001901")]
		BBParameter[] GetSubParameters();
	}
	[Serializable]
	[Token(Token = "0x20003B7")]
	[SpoofAOT]
	public abstract class Node
	{
		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9AA4", Offset = "0xFB9AA4")]
		private sealed class <YieldBreak>d__78 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400171E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400171F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Node <>4__this;

			[Token(Token = "0x4001721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Component agent;

			[Token(Token = "0x4001722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IBlackboard blackboard;

			[Token(Token = "0x1700057B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002110")]
				[Address(RVA = "0x1D47B18", Offset = "0x1D47B18", VA = "0x1D47B18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002112")]
				[Address(RVA = "0x1D47B80", Offset = "0x1D47B80", VA = "0x1D47B80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600210D")]
			[Address(RVA = "0x1D46C3C", Offset = "0x1D46C3C", VA = "0x1D46C3C")]
			[DebuggerHidden]
			public <YieldBreak>d__78(int <>1__state)
			{
			}

			[Token(Token = "0x600210E")]
			[Address(RVA = "0x1D47A38", Offset = "0x1D47A38", VA = "0x1D47A38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600210F")]
			[Address(RVA = "0x1D47A3C", Offset = "0x1D47A3C", VA = "0x1D47A3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002111")]
			[Address(RVA = "0x1D47B20", Offset = "0x1D47B20", VA = "0x1D47B20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9AB4", Offset = "0xFB9AB4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Connection, Node> <>9__96_0;

			[Token(Token = "0x4001725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Connection, Node> <>9__97_0;

			[Token(Token = "0x6002114")]
			[Address(RVA = "0x1D47A00", Offset = "0x1D47A00", VA = "0x1D47A00")]
			public <>c()
			{
			}

			[Token(Token = "0x6002115")]
			[Address(RVA = "0x1D47A08", Offset = "0x1D47A08", VA = "0x1D47A08")]
			internal Node <GetParentNodes>b__96_0(Connection c)
			{
				return null;
			}

			[Token(Token = "0x6002116")]
			[Address(RVA = "0x1D47A20", Offset = "0x1D47A20", VA = "0x1D47A20")]
			internal Node <GetChildNodes>b__97_0(Connection c)
			{
				return null;
			}
		}

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector2 _position;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _UID;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _tag;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _comment;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _isBreakpoint;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Graph _graph;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Connection> _inConnections;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Connection> _outConnections;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _ID;

		[NonSerialized]
		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Status _status;

		[NonSerialized]
		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _nameCache;

		[NonSerialized]
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _descriptionCache;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2234", Offset = "0xFC2234")]
		private bool <isChecked>k__BackingField;

		[Token(Token = "0x1700042B")]
		public Graph graph
		{
			[Token(Token = "0x6001902")]
			[Address(RVA = "0x1D464B8", Offset = "0x1D464B8", VA = "0x1D464B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001903")]
			[Address(RVA = "0x1D464C0", Offset = "0x1D464C0", VA = "0x1D464C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700042C")]
		public int ID
		{
			[Token(Token = "0x6001904")]
			[Address(RVA = "0x1D464C8", Offset = "0x1D464C8", VA = "0x1D464C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001905")]
			[Address(RVA = "0x1D464D0", Offset = "0x1D464D0", VA = "0x1D464D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public List<Connection> inConnections
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0x1D464D8", Offset = "0x1D464D8", VA = "0x1D464D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001907")]
			[Address(RVA = "0x1D464E0", Offset = "0x1D464E0", VA = "0x1D464E0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public List<Connection> outConnections
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0x1D464E8", Offset = "0x1D464E8", VA = "0x1D464E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001909")]
			[Address(RVA = "0x1D464F0", Offset = "0x1D464F0", VA = "0x1D464F0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700042F")]
		public Vector2 position
		{
			[Token(Token = "0x600190A")]
			[Address(RVA = "0x1D464F8", Offset = "0x1D464F8", VA = "0x1D464F8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600190B")]
			[Address(RVA = "0x1D46500", Offset = "0x1D46500", VA = "0x1D46500")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public string UID
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0x1D46508", Offset = "0x1D46508", VA = "0x1D46508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000431")]
		private string customName
		{
			[Token(Token = "0x600190D")]
			[Address(RVA = "0x1D465BC", Offset = "0x1D465BC", VA = "0x1D465BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600190E")]
			[Address(RVA = "0x1D465C4", Offset = "0x1D465C4", VA = "0x1D465C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public string tag
		{
			[Token(Token = "0x600190F")]
			[Address(RVA = "0x1D465CC", Offset = "0x1D465CC", VA = "0x1D465CC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001910")]
			[Address(RVA = "0x1D465D4", Offset = "0x1D465D4", VA = "0x1D465D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public string comments
		{
			[Token(Token = "0x6001911")]
			[Address(RVA = "0x1D465DC", Offset = "0x1D465DC", VA = "0x1D465DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001912")]
			[Address(RVA = "0x1D465E4", Offset = "0x1D465E4", VA = "0x1D465E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public bool isBreakpoint
		{
			[Token(Token = "0x6001913")]
			[Address(RVA = "0x1D465EC", Offset = "0x1D465EC", VA = "0x1D465EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001914")]
			[Address(RVA = "0x1D465F4", Offset = "0x1D465F4", VA = "0x1D465F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000435")]
		public virtual string name
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0x1D46600", Offset = "0x1D46600", VA = "0x1D46600", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001916")]
			[Address(RVA = "0x1D4674C", Offset = "0x1D4674C", VA = "0x1D4674C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000436")]
		public virtual string description
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0x1D46754", Offset = "0x1D46754", VA = "0x1D46754", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000437")]
		public abstract int maxInConnections
		{
			[Token(Token = "0x6001918")]
			get;
		}

		[Token(Token = "0x17000438")]
		public abstract int maxOutConnections
		{
			[Token(Token = "0x6001919")]
			get;
		}

		[Token(Token = "0x17000439")]
		public abstract Type outConnectionType
		{
			[Token(Token = "0x600191A")]
			get;
		}

		[Token(Token = "0x1700043A")]
		public abstract bool allowAsPrime
		{
			[Token(Token = "0x600191B")]
			get;
		}

		[Token(Token = "0x1700043B")]
		public abstract Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x600191C")]
			get;
		}

		[Token(Token = "0x1700043C")]
		public abstract Alignment2x2 iconAlignment
		{
			[Token(Token = "0x600191D")]
			get;
		}

		[Token(Token = "0x1700043D")]
		public Status status
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x1D4681C", Offset = "0x1D4681C", VA = "0x1D4681C")]
			get
			{
				return default(Status);
			}
			[Token(Token = "0x600191F")]
			[Address(RVA = "0x1D46824", Offset = "0x1D46824", VA = "0x1D46824")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public UnityEngine.Component graphAgent
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0x1D4682C", Offset = "0x1D4682C", VA = "0x1D4682C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		public IBlackboard graphBlackboard
		{
			[Token(Token = "0x6001921")]
			[Address(RVA = "0x1D468BC", Offset = "0x1D468BC", VA = "0x1D468BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000440")]
		private bool isChecked
		{
			[Token(Token = "0x6001922")]
			[Address(RVA = "0x1D46970", Offset = "0x1D46970", VA = "0x1D46970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB9D8", Offset = "0xFCB9D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001923")]
			[Address(RVA = "0x1D46978", Offset = "0x1D46978", VA = "0x1D46978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCB9E8", Offset = "0xFCB9E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1D46114", Offset = "0x1D46114", VA = "0x1D46114")]
		public Node()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1D42A0C", Offset = "0x1D42A0C", VA = "0x1D42A0C")]
		public static Node Create(Graph targetGraph, Type nodeType, Vector2 pos)
		{
			return null;
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1D3F910", Offset = "0x1D3F910", VA = "0x1D3F910")]
		public Node Duplicate(Graph targetGraph)
		{
			return null;
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1D46984", Offset = "0x1D46984", VA = "0x1D46984", Slot = "14")]
		public virtual void OnCreate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1D46988", Offset = "0x1D46988", VA = "0x1D46988", Slot = "15")]
		public virtual void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1D4698C", Offset = "0x1D4698C", VA = "0x1D4698C", Slot = "16")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1D3C8D8", Offset = "0x1D3C8D8", VA = "0x1D3C8D8")]
		public Status Execute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1D3C978", Offset = "0x1D3C978", VA = "0x1D3C978")]
		public void Reset(bool recursively = true)
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1D46B90", Offset = "0x1D46B90", VA = "0x1D46B90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCB9F8", Offset = "0xFCB9F8")]
		private IEnumerator YieldBreak(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return null;
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1D46990", Offset = "0x1D46990", VA = "0x1D46990")]
		protected Status Error(string error)
		{
			return default(Status);
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1D46C68", Offset = "0x1D46C68", VA = "0x1D46C68")]
		public Status Fail(Exception e)
		{
			return default(Status);
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1D46CF8", Offset = "0x1D46CF8", VA = "0x1D46CF8")]
		public Status Fail(string error)
		{
			return default(Status);
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1D46EF4", Offset = "0x1D46EF4", VA = "0x1D46EF4")]
		public void SetStatus(Status status)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1D46EFC", Offset = "0x1D46EFC", VA = "0x1D46EFC")]
		public void SendEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1D46F14", Offset = "0x1D46F14", VA = "0x1D46F14")]
		public void RegisterEvents(params string[] eventNames)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x1D46F44", Offset = "0x1D46F44", VA = "0x1D46F44")]
		public void RegisterEvents(UnityEngine.Component targetAgent, params string[] eventNames)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1D470A0", Offset = "0x1D470A0", VA = "0x1D470A0")]
		public void UnRegisterEvents(params string[] eventNames)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x1D470D0", Offset = "0x1D470D0", VA = "0x1D470D0")]
		public void UnRegisterEvents(UnityEngine.Component targetAgent, params string[] eventNames)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1D471C8", Offset = "0x1D471C8", VA = "0x1D471C8")]
		public void UnregisterAllEvents()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1D471F0", Offset = "0x1D471F0", VA = "0x1D471F0")]
		public void UnregisterAllEvents(UnityEngine.Component targetAgent)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1D472E0", Offset = "0x1D472E0", VA = "0x1D472E0")]
		public bool IsNewConnectionAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1D431EC", Offset = "0x1D431EC", VA = "0x1D431EC")]
		public bool IsNewConnectionAllowed(Node sourceNode)
		{
			return default(bool);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x1D3FEC8", Offset = "0x1D3FEC8", VA = "0x1D3FEC8")]
		public int AssignIDToGraph(int lastID)
		{
			return default(int);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1D3FF8C", Offset = "0x1D3FF8C", VA = "0x1D3FF8C")]
		public void ResetRecursion()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x1D472E8", Offset = "0x1D472E8", VA = "0x1D472E8")]
		protected Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x1D4731C", Offset = "0x1D4731C", VA = "0x1D4731C")]
		protected void StopCoroutine(Coroutine routine)
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x1D47350", Offset = "0x1D47350", VA = "0x1D47350")]
		public List<Node> GetParentNodes()
		{
			return null;
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x1D4749C", Offset = "0x1D4749C", VA = "0x1D4749C")]
		public List<Node> GetChildNodes()
		{
			return null;
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x1D475E8", Offset = "0x1D475E8", VA = "0x1D475E8", Slot = "17")]
		protected virtual Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x1D475F0", Offset = "0x1D475F0", VA = "0x1D475F0", Slot = "18")]
		protected virtual void OnReset()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x1D475F4", Offset = "0x1D475F4", VA = "0x1D475F4", Slot = "19")]
		public virtual void OnParentConnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x1D475F8", Offset = "0x1D475F8", VA = "0x1D475F8", Slot = "20")]
		public virtual void OnParentDisconnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x1D475FC", Offset = "0x1D475FC", VA = "0x1D475FC", Slot = "21")]
		public virtual void OnChildConnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x1D47600", Offset = "0x1D47600", VA = "0x1D47600", Slot = "22")]
		public virtual void OnChildDisconnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x1D47604", Offset = "0x1D47604", VA = "0x1D47604", Slot = "23")]
		public virtual void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x1D47608", Offset = "0x1D47608", VA = "0x1D47608", Slot = "24")]
		public virtual void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x1D4760C", Offset = "0x1D4760C", VA = "0x1D4760C", Slot = "25")]
		public virtual void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x1D47610", Offset = "0x1D47610", VA = "0x1D47610", Slot = "26")]
		public virtual void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1D47614", Offset = "0x1D47614", VA = "0x1D47614", Slot = "3")]
		public sealed override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1D47680", Offset = "0x1D47680", VA = "0x1D47680")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1D4780C", Offset = "0x1D4780C", VA = "0x1D4780C")]
		public void OnDrawGizmosSelected()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[DoNotList]
	public class ActionList : ActionTask
	{
		[Token(Token = "0x200054C")]
		public enum ActionsExecutionMode
		{
			[Token(Token = "0x4001727")]
			ActionsRunInSequence,
			[Token(Token = "0x4001728")]
			ActionsRunInParallel
		}

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ActionsExecutionMode executionMode;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<ActionTask> actions;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int currentActionIndex;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly List<int> finishedIndeces;

		[Token(Token = "0x17000441")]
		protected override string info
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0x1868340", Offset = "0x1868340", VA = "0x1868340", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x18684BC", Offset = "0x18684BC", VA = "0x18684BC", Slot = "4")]
		public override Task Duplicate(ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1868780", Offset = "0x1868780", VA = "0x1868780", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x18687E0", Offset = "0x18687E0", VA = "0x18687E0", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1868A9C", Offset = "0x1868A9C", VA = "0x1868A9C", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1868B34", Offset = "0x1868B34", VA = "0x1868B34", Slot = "15")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1868BC8", Offset = "0x1868BC8", VA = "0x1868BC8", Slot = "10")]
		public override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1868C64", Offset = "0x1868C64", VA = "0x1868C64", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x186868C", Offset = "0x186868C", VA = "0x186868C")]
		public void AddAction(ActionTask action)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1868D00", Offset = "0x1868D00", VA = "0x1868D00")]
		public ActionList()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public abstract class ActionTask<T> : ActionTask where T : class
	{
		[Token(Token = "0x17000442")]
		public sealed override Type agentType
		{
			[Token(Token = "0x6001957")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000443")]
		public new T agent
		{
			[Token(Token = "0x6001958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001959")]
		protected ActionTask()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public abstract class ActionTask : Task
	{
		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9AC4", Offset = "0xFB9AC4")]
		private sealed class <ActionUpdater>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400172A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400172B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ActionTask <>4__this;

			[Token(Token = "0x400172C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Component agent;

			[Token(Token = "0x400172D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IBlackboard blackboard;

			[Token(Token = "0x400172E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<bool> callback;

			[Token(Token = "0x1700057D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600211A")]
				[Address(RVA = "0x1868FA8", Offset = "0x1868FA8", VA = "0x1868FA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600211C")]
				[Address(RVA = "0x1869010", Offset = "0x1869010", VA = "0x1869010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002117")]
			[Address(RVA = "0x1868EB0", Offset = "0x1868EB0", VA = "0x1868EB0")]
			[DebuggerHidden]
			public <ActionUpdater>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002118")]
			[Address(RVA = "0x1868EEC", Offset = "0x1868EEC", VA = "0x1868EEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002119")]
			[Address(RVA = "0x1868EF0", Offset = "0x1868EF0", VA = "0x1868EF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600211B")]
			[Address(RVA = "0x1868FB0", Offset = "0x1868FB0", VA = "0x1868FB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Status status;

		[NonSerialized]
		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float startedTime;

		[NonSerialized]
		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float pausedTime;

		[NonSerialized]
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool latch;

		[NonSerialized]
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool _isPaused;

		[Token(Token = "0x17000444")]
		public float elapsedTime
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0x185A88C", Offset = "0x185A88C", VA = "0x185A88C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000445")]
		public bool isRunning
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x18684AC", Offset = "0x18684AC", VA = "0x18684AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000446")]
		public bool isPaused
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x1868DC8", Offset = "0x1868DC8", VA = "0x1868DC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x1868DD0", Offset = "0x1868DD0", VA = "0x1868DD0")]
			private set
			{
			}
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x1868DDC", Offset = "0x1868DDC", VA = "0x1868DDC")]
		public void ExecuteAction(UnityEngine.Component agent, Action<bool> callback)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x185AA50", Offset = "0x185AA50", VA = "0x185AA50")]
		public void ExecuteAction(UnityEngine.Component agent, IBlackboard blackboard, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1868DE8", Offset = "0x1868DE8", VA = "0x1868DE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCBA5C", Offset = "0xFCBA5C")]
		private IEnumerator ActionUpdater(UnityEngine.Component agent, IBlackboard blackboard, Action<bool> callback)
		{
			return null;
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x185AAFC", Offset = "0x185AAFC", VA = "0x185AAFC")]
		public Status ExecuteAction(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1868A20", Offset = "0x1868A20", VA = "0x1868A20")]
		public void EndAction()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x1868A28", Offset = "0x1868A28", VA = "0x1868A28")]
		public void EndAction(bool success)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x185AD28", Offset = "0x185AD28", VA = "0x185AD28")]
		public void EndAction(bool? success)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x185ADE4", Offset = "0x185ADE4", VA = "0x185ADE4")]
		public void PauseAction()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x1868EDC", Offset = "0x1868EDC", VA = "0x1868EDC", Slot = "12")]
		protected virtual void OnExecute()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1868EE0", Offset = "0x1868EE0", VA = "0x1868EE0", Slot = "13")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1868EE4", Offset = "0x1868EE4", VA = "0x1868EE4", Slot = "14")]
		protected virtual void OnStop()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1868EE8", Offset = "0x1868EE8", VA = "0x1868EE8", Slot = "15")]
		protected virtual void OnPause()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x1868DB8", Offset = "0x1868DB8", VA = "0x1868DB8")]
		protected ActionTask()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[DoNotList]
	public class ConditionList : ConditionTask
	{
		[Token(Token = "0x200054E")]
		public enum ConditionsCheckMode
		{
			[Token(Token = "0x4001730")]
			AllTrueRequired,
			[Token(Token = "0x4001731")]
			AnyTrueSuffice
		}

		[Serializable]
		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9AD4", Offset = "0xFB9AD4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ConditionTask, bool> <>9__9_0;

			[Token(Token = "0x600211E")]
			[Address(RVA = "0x1D3BB14", Offset = "0x1D3BB14", VA = "0x1D3BB14")]
			public <>c()
			{
			}

			[Token(Token = "0x600211F")]
			[Address(RVA = "0x1D3BB1C", Offset = "0x1D3BB1C", VA = "0x1D3BB1C")]
			internal bool <OnEnable>b__9_0(ConditionTask c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ConditionsCheckMode checkMode;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<ConditionTask> conditions;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<ConditionTask> initialActiveConditions;

		[Token(Token = "0x17000447")]
		private bool allTrueRequired
		{
			[Token(Token = "0x600196B")]
			[Address(RVA = "0x1D3AA64", Offset = "0x1D3AA64", VA = "0x1D3AA64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000448")]
		protected override string info
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x1D3AA74", Offset = "0x1D3AA74", VA = "0x1D3AA74", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1D3ADD8", Offset = "0x1D3ADD8", VA = "0x1D3ADD8", Slot = "4")]
		public override Task Duplicate(ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1D3B23C", Offset = "0x1D3B23C", VA = "0x1D3B23C", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x1D3B518", Offset = "0x1D3B518", VA = "0x1D3B518", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x1D3B5D8", Offset = "0x1D3B5D8", VA = "0x1D3B5D8", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x1D3B774", Offset = "0x1D3B774", VA = "0x1D3B774", Slot = "10")]
		public override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x1D3B870", Offset = "0x1D3B870", VA = "0x1D3B870", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1D3B14C", Offset = "0x1D3B14C", VA = "0x1D3B14C")]
		public void AddCondition(ConditionTask condition)
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1D3BA18", Offset = "0x1D3BA18", VA = "0x1D3BA18")]
		public ConditionList()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public abstract class ConditionTask<T> : ConditionTask where T : class
	{
		[Token(Token = "0x17000449")]
		public sealed override Type agentType
		{
			[Token(Token = "0x6001975")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		public new T agent
		{
			[Token(Token = "0x6001976")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001977")]
		protected ConditionTask()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public abstract class ConditionTask : Task
	{
		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9AE4", Offset = "0xFB9AE4")]
		private sealed class <Flip>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConditionTask <>4__this;

			[Token(Token = "0x1700057F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002123")]
				[Address(RVA = "0x1D3BEB0", Offset = "0x1D3BEB0", VA = "0x1D3BEB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000580")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002125")]
				[Address(RVA = "0x1D3BF18", Offset = "0x1D3BF18", VA = "0x1D3BF18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002120")]
			[Address(RVA = "0x1D3BDE0", Offset = "0x1D3BDE0", VA = "0x1D3BDE0")]
			[DebuggerHidden]
			public <Flip>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002121")]
			[Address(RVA = "0x1D3BE14", Offset = "0x1D3BE14", VA = "0x1D3BE14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002122")]
			[Address(RVA = "0x1D3BE18", Offset = "0x1D3BE18", VA = "0x1D3BE18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002124")]
			[Address(RVA = "0x1D3BEB8", Offset = "0x1D3BEB8", VA = "0x1D3BEB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _invert;

		[NonSerialized]
		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int yieldReturn;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int yields;

		[Token(Token = "0x1700044B")]
		public bool invert
		{
			[Token(Token = "0x6001978")]
			[Address(RVA = "0x1D3BB3C", Offset = "0x1D3BB3C", VA = "0x1D3BB3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001979")]
			[Address(RVA = "0x1D3BB44", Offset = "0x1D3BB44", VA = "0x1D3BB44")]
			set
			{
			}
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1D3B4DC", Offset = "0x1D3B4DC", VA = "0x1D3B4DC")]
		public void Enable(UnityEngine.Component agent, IBlackboard bb)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x1D3B5C0", Offset = "0x1D3B5C0", VA = "0x1D3B5C0")]
		public void Disable()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1D3B6EC", Offset = "0x1D3B6EC", VA = "0x1D3B6EC")]
		public bool CheckCondition(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(bool);
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1D3BCF4", Offset = "0x1D3BCF4", VA = "0x1D3BCF4")]
		protected void YieldReturn(bool value)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1D3BDD0", Offset = "0x1D3BDD0", VA = "0x1D3BDD0", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1D3BDD4", Offset = "0x1D3BDD4", VA = "0x1D3BDD4", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1D3BDD8", Offset = "0x1D3BDD8", VA = "0x1D3BDD8", Slot = "14")]
		protected virtual bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x1D3BD20", Offset = "0x1D3BD20", VA = "0x1D3BD20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xFCBAC0", Offset = "0xFCBAC0")]
		private IEnumerator Flip()
		{
			return null;
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1D3BA9C", Offset = "0x1D3BA9C", VA = "0x1D3BA9C")]
		protected ConditionTask()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public interface ITaskSystem
	{
		[Token(Token = "0x1700044C")]
		UnityEngine.Component agent
		{
			[Token(Token = "0x6001983")]
			get;
		}

		[Token(Token = "0x1700044D")]
		IBlackboard blackboard
		{
			[Token(Token = "0x6001984")]
			get;
		}

		[Token(Token = "0x1700044E")]
		float elapsedTime
		{
			[Token(Token = "0x6001985")]
			get;
		}

		[Token(Token = "0x1700044F")]
		UnityEngine.Object contextObject
		{
			[Token(Token = "0x6001986")]
			get;
		}

		[Token(Token = "0x6001987")]
		void SendTaskOwnerDefaults();

		[Token(Token = "0x6001988")]
		void SendEvent(EventData eventData);

		[Token(Token = "0x6001989")]
		void RecordUndo(string name);
	}
	[Serializable]
	[Token(Token = "0x20003BF")]
	[SpoofAOT]
	public abstract class Task
	{
		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB9AF4", Offset = "0xFB9AF4")]
		protected class EventReceiverAttribute : Attribute
		{
			[Token(Token = "0x4001737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string[] eventMessages;

			[Token(Token = "0x6002126")]
			[Address(RVA = "0x1D498E0", Offset = "0x1D498E0", VA = "0x1D498E0")]
			public EventReceiverAttribute(params string[] args)
			{
			}
		}

		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB9B08", Offset = "0xFB9B08")]
		protected class GetFromAgentAttribute : Attribute
		{
			[Token(Token = "0x6002127")]
			[Address(RVA = "0x1D49914", Offset = "0x1D49914", VA = "0x1D49914")]
			public GetFromAgentAttribute()
			{
			}
		}

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _isDisabled;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TaskAgent overrideAgent;

		[NonSerialized]
		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IBlackboard _blackboard;

		[NonSerialized]
		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ITaskSystem _ownerSystem;

		[NonSerialized]
		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Component current;

		[NonSerialized]
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _agentTypeInit;

		[NonSerialized]
		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Type _agentType;

		[NonSerialized]
		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _taskName;

		[NonSerialized]
		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _taskDescription;

		[NonSerialized]
		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _obsoleteInfo;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2274", Offset = "0xFC2274")]
		private string <firstWarningMessage>k__BackingField;

		[Token(Token = "0x17000450")]
		public ITaskSystem ownerSystem
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x1D47D64", Offset = "0x1D47D64", VA = "0x1D47D64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x1D47D6C", Offset = "0x1D47D6C", VA = "0x1D47D6C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public UnityEngine.Component ownerAgent
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x1D47D74", Offset = "0x1D47D74", VA = "0x1D47D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000452")]
		public IBlackboard ownerBlackboard
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x1D47E30", Offset = "0x1D47E30", VA = "0x1D47E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		protected float ownerElapsedTime
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x1D47EF0", Offset = "0x1D47EF0", VA = "0x1D47EF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000454")]
		public bool isActive
		{
			[Token(Token = "0x6001996")]
			[Address(RVA = "0x1D3AC64", Offset = "0x1D3AC64", VA = "0x1D3AC64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x1D3BCE4", Offset = "0x1D3BCE4", VA = "0x1D3BCE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000455")]
		public string obsolete
		{
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x1D47FB0", Offset = "0x1D47FB0", VA = "0x1D47FB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000456")]
		public string name
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x1D48078", Offset = "0x1D48078", VA = "0x1D48078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		public string description
		{
			[Token(Token = "0x600199A")]
			[Address(RVA = "0x1D481A8", Offset = "0x1D481A8", VA = "0x1D481A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000458")]
		public virtual Type agentType
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x1D48270", Offset = "0x1D48270", VA = "0x1D48270", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		public string summaryInfo
		{
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x1D3AC74", Offset = "0x1D3AC74", VA = "0x1D3AC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		protected virtual string info
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x1D48278", Offset = "0x1D48278", VA = "0x1D48278", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045B")]
		public string agentInfo
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x1D4827C", Offset = "0x1D4827C", VA = "0x1D4827C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045C")]
		public bool agentIsOverride
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x1D425B4", Offset = "0x1D425B4", VA = "0x1D425B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x1D482E4", Offset = "0x1D482E4", VA = "0x1D482E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700045D")]
		public string overrideAgentParameterName
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x1D41F64", Offset = "0x1D41F64", VA = "0x1D41F64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045E")]
		public UnityEngine.Component agent
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x1D3B3E0", Offset = "0x1D3B3E0", VA = "0x1D3B3E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045F")]
		public IBlackboard blackboard
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x1D48704", Offset = "0x1D48704", VA = "0x1D48704")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x1D4870C", Offset = "0x1D4870C", VA = "0x1D4870C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000460")]
		public string firstWarningMessage
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x1D4876C", Offset = "0x1D4876C", VA = "0x1D4876C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBB24", Offset = "0xFCBB24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x1D48774", Offset = "0x1D48774", VA = "0x1D48774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBB34", Offset = "0xFCBB34")]
			private set
			{
			}
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1D3BE0C", Offset = "0x1D3BE0C", VA = "0x1D3BE0C")]
		public Task()
		{
		}

		[Token(Token = "0x600198B")]
		public static T Create<T>(ITaskSystem newOwnerSystem) where T : Task
		{
			return null;
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x1D47B90", Offset = "0x1D47B90", VA = "0x1D47B90")]
		public static Task Create(Type type, ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x1D3AFA4", Offset = "0x1D3AFA4", VA = "0x1D3AFA4", Slot = "4")]
		public virtual Task Duplicate(ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x1D47D5C", Offset = "0x1D47D5C", VA = "0x1D47D5C", Slot = "5")]
		public virtual void OnCreate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1D47D60", Offset = "0x1D47D60", VA = "0x1D47D60", Slot = "6")]
		public virtual void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x1D3B96C", Offset = "0x1D3B96C", VA = "0x1D3B96C")]
		public void SetOwnerSystem(ITaskSystem newOwnerSystem)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x1D3BD9C", Offset = "0x1D3BD9C", VA = "0x1D3BD9C")]
		protected Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x1D4877C", Offset = "0x1D4877C", VA = "0x1D4877C")]
		protected void StopCoroutine(Coroutine routine)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x1D487B0", Offset = "0x1D487B0", VA = "0x1D487B0")]
		protected void SendEvent(string eventName)
		{
		}

		[Token(Token = "0x60019AA")]
		protected void SendEvent<T>(string eventName, T value)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x1D48824", Offset = "0x1D48824", VA = "0x1D48824")]
		protected void SendEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x1D488F4", Offset = "0x1D488F4", VA = "0x1D488F4", Slot = "9")]
		protected virtual string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x1D3BB50", Offset = "0x1D3BB50", VA = "0x1D3BB50")]
		protected bool Set(UnityEngine.Component newAgent, IBlackboard newBB)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x1D48548", Offset = "0x1D48548", VA = "0x1D48548")]
		private static UnityEngine.Component TransformAgent(UnityEngine.Component input, Type type)
		{
			return null;
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x1D488FC", Offset = "0x1D488FC", VA = "0x1D488FC")]
		private bool Initialize(UnityEngine.Component newAgent)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1D48E58", Offset = "0x1D48E58", VA = "0x1D48E58")]
		private bool InitializeAttributes(UnityEngine.Component newAgent)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x1D48BD8", Offset = "0x1D48BD8", VA = "0x1D48BD8")]
		protected bool Error(string error)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x1D49104", Offset = "0x1D49104", VA = "0x1D49104")]
		public void RegisterEvent(string eventName)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x1D48D24", Offset = "0x1D48D24", VA = "0x1D48D24")]
		public void RegisterEvents(params string[] eventNames)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x1D491C0", Offset = "0x1D491C0", VA = "0x1D491C0")]
		public void UnRegisterEvent(string eventName)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x1D4927C", Offset = "0x1D4927C", VA = "0x1D4927C")]
		public void UnRegisterEvents(params string[] eventNames)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x1D48AD8", Offset = "0x1D48AD8", VA = "0x1D48AD8")]
		public void UnRegisterAllEvents()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x1D49384", Offset = "0x1D49384", VA = "0x1D49384")]
		public string GetWarning()
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x1D493B8", Offset = "0x1D493B8", VA = "0x1D493B8")]
		private string Internal_GetWarning()
		{
			return null;
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x1D498D4", Offset = "0x1D498D4", VA = "0x1D498D4", Slot = "3")]
		public sealed override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x1D498D8", Offset = "0x1D498D8", VA = "0x1D498D8", Slot = "10")]
		public virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x1D498DC", Offset = "0x1D498DC", VA = "0x1D498DC", Slot = "11")]
		public virtual void OnDrawGizmosSelected()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C0")]
	public class TaskAgent : BBParameter<UnityEngine.Object>
	{
		[Token(Token = "0x17000461")]
		public new UnityEngine.Object value
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x1D483FC", Offset = "0x1D483FC", VA = "0x1D483FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x1D4991C", Offset = "0x1D4991C", VA = "0x1D4991C")]
			set
			{
			}
		}

		[Token(Token = "0x17000462")]
		protected override object objectValue
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x1D49924", Offset = "0x1D49924", VA = "0x1D49924", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x1D49928", Offset = "0x1D49928", VA = "0x1D49928", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x1D483AC", Offset = "0x1D483AC", VA = "0x1D483AC")]
		public TaskAgent()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB9028", Offset = "0xFB9028")]
	public class BlackboardOnlyAttribute : Attribute
	{
		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x1D3A9F8", Offset = "0x1D3A9F8", VA = "0x1D3A9F8")]
		public BlackboardOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB903C", Offset = "0xFB903C")]
	public class InputParameterAttribute : Attribute
	{
		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x1D44A20", Offset = "0x1D44A20", VA = "0x1D44A20")]
		public InputParameterAttribute()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xFB9050", Offset = "0xFB9050")]
	public class OutputParameterAttribute : Attribute
	{
		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x1D47B88", Offset = "0x1D47B88", VA = "0x1D47B88")]
		public OutputParameterAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C4")]
	[SpoofAOT]
	public abstract class BBParameter
	{
		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _targetVariableID;

		[NonSerialized]
		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IBlackboard _bb;

		[NonSerialized]
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Variable _varRef;

		[Token(Token = "0x17000463")]
		private string targetVariableID
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x18699C0", Offset = "0x18699C0", VA = "0x18699C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0x18699C8", Offset = "0x18699C8", VA = "0x18699C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public Variable varRef
		{
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0x18699D0", Offset = "0x18699D0", VA = "0x18699D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0x18699D8", Offset = "0x18699D8", VA = "0x18699D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000465")]
		public IBlackboard bb
		{
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x1869A28", Offset = "0x1869A28", VA = "0x1869A28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x185E390", Offset = "0x185E390", VA = "0x185E390")]
			set
			{
			}
		}

		[Token(Token = "0x17000466")]
		public string name
		{
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0x1869C78", Offset = "0x1869C78", VA = "0x1869C78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0x1869C80", Offset = "0x1869C80", VA = "0x1869C80")]
			set
			{
			}
		}

		[Token(Token = "0x17000467")]
		public bool useBlackboard
		{
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x1869D00", Offset = "0x1869D00", VA = "0x1869D00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x1869D10", Offset = "0x1869D10", VA = "0x1869D10")]
			set
			{
			}
		}

		[Token(Token = "0x17000468")]
		public bool isNone
		{
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0x1865B70", Offset = "0x1865B70", VA = "0x1865B70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000469")]
		public bool isNull
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x1869DA0", Offset = "0x1869DA0", VA = "0x1869DA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046A")]
		public Type refType
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x1869DC4", Offset = "0x1869DC4", VA = "0x1869DC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046B")]
		public object value
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x1869DDC", Offset = "0x1869DDC", VA = "0x1869DDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x1869DE8", Offset = "0x1869DE8", VA = "0x1869DE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		protected abstract object objectValue
		{
			[Token(Token = "0x60019D7")]
			get;
			[Token(Token = "0x60019D8")]
			set;
		}

		[Token(Token = "0x1700046D")]
		public abstract Type varType
		{
			[Token(Token = "0x60019D9")]
			get;
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x1869018", Offset = "0x1869018", VA = "0x1869018")]
		public BBParameter()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x1869020", Offset = "0x1869020", VA = "0x1869020")]
		public static BBParameter CreateInstance(Type t, IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x18691D0", Offset = "0x18691D0", VA = "0x18691D0")]
		public static void SetBBFields(object o, IBlackboard bb)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x1869278", Offset = "0x1869278", VA = "0x1869278")]
		public static List<BBParameter> GetObjectBBParameters(object o)
		{
			return null;
		}

		[Token(Token = "0x60019DA")]
		protected abstract void Bind(Variable data);

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x1869A30", Offset = "0x1869A30", VA = "0x1869A30")]
		private Variable ResolveReference(IBlackboard targetBlackboard, bool useID)
		{
			return null;
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x1869DF4", Offset = "0x1869DF4", VA = "0x1869DF4")]
		public Variable PromoteToVariable(IBlackboard targetBB)
		{
			return null;
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x186A188", Offset = "0x186A188", VA = "0x186A188", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003C5")]
	public class BBParameter<T> : BBParameter
	{
		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9B1C", Offset = "0xFB9B1C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<object> convertFunc;

			[Token(Token = "0x6002128")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002129")]
			internal T <BindGetter>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9B2C", Offset = "0xFB9B2C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<object> convertFunc;

			[Token(Token = "0x600212A")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600212B")]
			internal void <BindSetter>b__0(T value)
			{
			}
		}

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<T> getter;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> setter;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T _value;

		[Token(Token = "0x1700046E")]
		public new T value
		{
			[Token(Token = "0x60019E0")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60019E1")]
			set
			{
			}
		}

		[Token(Token = "0x1700046F")]
		protected override object objectValue
		{
			[Token(Token = "0x60019E2")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E3")]
			set
			{
			}
		}

		[Token(Token = "0x17000470")]
		public override Type varType
		{
			[Token(Token = "0x60019E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019DE")]
		public BBParameter()
		{
		}

		[Token(Token = "0x60019DF")]
		public BBParameter(T value)
		{
		}

		[Token(Token = "0x60019E5")]
		protected override void Bind(Variable variable)
		{
		}

		[Token(Token = "0x60019E6")]
		private bool BindGetter(Variable variable)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E7")]
		private bool BindSetter(Variable variable)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E8")]
		public static implicit operator BBParameter<T>(T value)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFB9074", Offset = "0xFB9074")]
	[SpoofAOT]
	public class Blackboard : MonoBehaviour, ISerializationCallbackReceiver, IBlackboard
	{
		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _serializedBlackboard;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<UnityEngine.Object> _objectReferences;

		[NonSerialized]
		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BlackboardSource _blackboard;

		[NonSerialized]
		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasDeserialized;

		[Token(Token = "0x17000471")]
		public new string name
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x186A704", Offset = "0x186A704", VA = "0x186A704", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x186A7A0", Offset = "0x186A7A0", VA = "0x186A7A0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000472")]
		public object Item
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x186A840", Offset = "0x186A840", VA = "0x186A840")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x186A85C", Offset = "0x186A85C", VA = "0x186A85C")]
			set
			{
			}
		}

		[Token(Token = "0x17000473")]
		public Dictionary<string, Variable> variables
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x186A894", Offset = "0x186A894", VA = "0x186A894", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x186A8B0", Offset = "0x186A8B0", VA = "0x186A8B0", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000474")]
		public GameObject propertiesBindTarget
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x186A6FC", Offset = "0x186A6FC", VA = "0x186A6FC", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000050")]
		public event Action<Variable> onVariableAdded
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x186A320", Offset = "0x186A320", VA = "0x186A320", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBB44", Offset = "0xFCBB44")]
			add
			{
			}
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x186A3C4", Offset = "0x186A3C4", VA = "0x186A3C4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBB54", Offset = "0xFCBB54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event Action<Variable> onVariableRemoved
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x186A468", Offset = "0x186A468", VA = "0x186A468", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBB64", Offset = "0xFCBB64")]
			add
			{
			}
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x186A50C", Offset = "0x186A50C", VA = "0x186A50C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBB74", Offset = "0xFCBB74")]
			remove
			{
			}
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x186A5B0", Offset = "0x186A5B0", VA = "0x186A5B0", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x186A5B4", Offset = "0x186A5B4", VA = "0x186A5B4", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x186A6C0", Offset = "0x186A6C0", VA = "0x186A6C0", Slot = "25")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x186A8CC", Offset = "0x186A8CC", VA = "0x186A8CC", Slot = "15")]
		public Variable AddVariable(string name, Type type)
		{
			return null;
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x186A960", Offset = "0x186A960", VA = "0x186A960", Slot = "16")]
		public Variable AddVariable(string name, object value)
		{
			return null;
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x186A9F4", Offset = "0x186A9F4", VA = "0x186A9F4", Slot = "17")]
		public Variable RemoveVariable(string name)
		{
			return null;
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x1865058", Offset = "0x1865058", VA = "0x1865058", Slot = "18")]
		public Variable GetVariable(string name, [Optional] Type ofType)
		{
			return null;
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x186AA80", Offset = "0x186AA80", VA = "0x186AA80", Slot = "19")]
		public Variable GetVariableByID(string ID)
		{
			return null;
		}

		[Token(Token = "0x60019FC")]
		public Variable<T> GetVariable<T>(string name)
		{
			return null;
		}

		[Token(Token = "0x60019FD")]
		public T GetValue<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x186A878", Offset = "0x186A878", VA = "0x186A878", Slot = "22")]
		public Variable SetValue(string name, object value)
		{
			return null;
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x186AA9C", Offset = "0x186AA9C", VA = "0x186AA9C", Slot = "23")]
		public string[] GetVariableNames()
		{
			return null;
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x186AAB8", Offset = "0x186AAB8", VA = "0x186AAB8", Slot = "24")]
		public string[] GetVariableNames(Type ofType)
		{
			return null;
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x186AAD4", Offset = "0x186AAD4", VA = "0x186AAD4")]
		public string Save()
		{
			return null;
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x186AB1C", Offset = "0x186AB1C", VA = "0x186AB1C")]
		public string Save(string saveKey)
		{
			return null;
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x186AB64", Offset = "0x186AB64", VA = "0x186AB64")]
		public bool Load()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x186AB8C", Offset = "0x186AB8C", VA = "0x186AB8C")]
		public bool Load(string saveKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x186AB5C", Offset = "0x186AB5C", VA = "0x186AB5C")]
		public string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x186AC70", Offset = "0x186AC70", VA = "0x186AC70")]
		public string Serialize(List<UnityEngine.Object> storedObjectReferences)
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x186AC64", Offset = "0x186AC64", VA = "0x186AC64")]
		public bool Deserialize(string json)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x186AD34", Offset = "0x186AD34", VA = "0x186AD34")]
		public bool Deserialize(string json, List<UnityEngine.Object> storedObjectReferences, bool removeMissing = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x186B0DC", Offset = "0x186B0DC", VA = "0x186B0DC")]
		public Blackboard()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[ExecuteInEditMode]
	public class GlobalBlackboard : Blackboard
	{
		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9B3C", Offset = "0xFB9B3C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400173A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x600212C")]
			[Address(RVA = "0x1D3CF8C", Offset = "0x1D3CF8C", VA = "0x1D3CF8C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600212D")]
			[Address(RVA = "0x1D3D3B8", Offset = "0x1D3D3B8", VA = "0x1D3D3B8")]
			internal bool <Find>b__0(GlobalBlackboard b)
			{
				return default(bool);
			}

			[Token(Token = "0x600212E")]
			[Address(RVA = "0x1D3D3F0", Offset = "0x1D3D3F0", VA = "0x1D3D3F0")]
			internal bool <Find>b__1(GlobalBlackboard b)
			{
				return default(bool);
			}

			[Token(Token = "0x600212F")]
			[Address(RVA = "0x1D3D428", Offset = "0x1D3D428", VA = "0x1D3D428")]
			internal bool <Find>b__2(GlobalBlackboard b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<GlobalBlackboard> allGlobals;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool dontDestroy;

		[Token(Token = "0x17000475")]
		public new string name
		{
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x1D3CA54", Offset = "0x1D3CA54", VA = "0x1D3CA54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x1D3CA5C", Offset = "0x1D3CA5C", VA = "0x1D3CA5C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x1D3CC34", Offset = "0x1D3CC34", VA = "0x1D3CC34")]
		public static GlobalBlackboard Create()
		{
			return null;
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x1D3CCD0", Offset = "0x1D3CCD0", VA = "0x1D3CCD0")]
		public static GlobalBlackboard Find(string name)
		{
			return null;
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x1D3CF94", Offset = "0x1D3CF94", VA = "0x1D3CF94", Slot = "25")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x1D3D1E8", Offset = "0x1D3D1E8", VA = "0x1D3D1E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x1D3CB38", Offset = "0x1D3CB38", VA = "0x1D3CB38")]
		private bool IsUnique()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x1D3D26C", Offset = "0x1D3D26C", VA = "0x1D3D26C")]
		public GlobalBlackboard()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x1D3D2F4", Offset = "0x1D3D2F4", VA = "0x1D3D2F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBB84", Offset = "0xFCBB84")]
		private bool <IsUnique>b__9_0(GlobalBlackboard b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003C8")]
	[SpoofAOT]
	public interface IBlackboard
	{
		[Token(Token = "0x17000476")]
		string name
		{
			[Token(Token = "0x6001A18")]
			get;
			[Token(Token = "0x6001A19")]
			set;
		}

		[Token(Token = "0x17000477")]
		Dictionary<string, Variable> variables
		{
			[Token(Token = "0x6001A1A")]
			get;
			[Token(Token = "0x6001A1B")]
			set;
		}

		[Token(Token = "0x17000478")]
		GameObject propertiesBindTarget
		{
			[Token(Token = "0x6001A1C")]
			get;
		}

		[Token(Token = "0x14000052")]
		event Action<Variable> onVariableAdded;

		[Token(Token = "0x14000053")]
		event Action<Variable> onVariableRemoved;

		[Token(Token = "0x6001A1D")]
		Variable AddVariable(string varName, Type type);

		[Token(Token = "0x6001A1E")]
		Variable AddVariable(string varName, object value);

		[Token(Token = "0x6001A1F")]
		Variable RemoveVariable(string varName);

		[Token(Token = "0x6001A20")]
		Variable GetVariable(string varName, [Optional] Type ofType);

		[Token(Token = "0x6001A21")]
		Variable GetVariableByID(string ID);

		[Token(Token = "0x6001A22")]
		Variable<T> GetVariable<T>(string varName);

		[Token(Token = "0x6001A23")]
		T GetValue<T>(string varName);

		[Token(Token = "0x6001A24")]
		Variable SetValue(string varName, object value);

		[Token(Token = "0x6001A25")]
		string[] GetVariableNames();

		[Token(Token = "0x6001A26")]
		string[] GetVariableNames(Type ofType);
	}
	[Serializable]
	[Token(Token = "0x20003C9")]
	[SpoofAOT]
	public abstract class Variable
	{
		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9B4C", Offset = "0xFB9B4C")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x400173B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Variable <>4__this;

			[Token(Token = "0x400173C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Type toType;

			[Token(Token = "0x6002130")]
			[Address(RVA = "0x1D4A510", Offset = "0x1D4A510", VA = "0x1D4A510")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002131")]
			[Address(RVA = "0x1D4B534", Offset = "0x1D4B534", VA = "0x1D4B534")]
			internal object <GetGetConverter>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002132")]
			[Address(RVA = "0x1D4B554", Offset = "0x1D4B554", VA = "0x1D4B554")]
			internal object <GetGetConverter>b__1()
			{
				return null;
			}

			[Token(Token = "0x6002133")]
			[Address(RVA = "0x1D4B6B8", Offset = "0x1D4B6B8", VA = "0x1D4B6B8")]
			internal object <GetGetConverter>b__2()
			{
				return null;
			}

			[Token(Token = "0x6002134")]
			[Address(RVA = "0x1D4B74C", Offset = "0x1D4B74C", VA = "0x1D4B74C")]
			internal object <GetGetConverter>b__3()
			{
				return null;
			}

			[Token(Token = "0x6002135")]
			[Address(RVA = "0x1D4B7FC", Offset = "0x1D4B7FC", VA = "0x1D4B7FC")]
			internal object <GetGetConverter>b__4()
			{
				return null;
			}

			[Token(Token = "0x6002136")]
			[Address(RVA = "0x1D4B8EC", Offset = "0x1D4B8EC", VA = "0x1D4B8EC")]
			internal object <GetGetConverter>b__5()
			{
				return null;
			}

			[Token(Token = "0x6002137")]
			[Address(RVA = "0x1D4B9EC", Offset = "0x1D4B9EC", VA = "0x1D4B9EC")]
			internal object <GetGetConverter>b__6()
			{
				return null;
			}

			[Token(Token = "0x6002138")]
			[Address(RVA = "0x1D4BAAC", Offset = "0x1D4BAAC", VA = "0x1D4BAAC")]
			internal object <GetGetConverter>b__7()
			{
				return null;
			}

			[Token(Token = "0x6002139")]
			[Address(RVA = "0x1D4BB88", Offset = "0x1D4BB88", VA = "0x1D4BB88")]
			internal object <GetGetConverter>b__8()
			{
				return null;
			}

			[Token(Token = "0x600213A")]
			[Address(RVA = "0x1D4BC60", Offset = "0x1D4BC60", VA = "0x1D4BC60")]
			internal object <GetGetConverter>b__9()
			{
				return null;
			}
		}

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _id;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _protected;

		[Token(Token = "0x17000479")]
		public string name
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x1D49C50", Offset = "0x1D49C50", VA = "0x1D49C50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x1D456B4", Offset = "0x1D456B4", VA = "0x1D456B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700047A")]
		public string ID
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x1D45954", Offset = "0x1D45954", VA = "0x1D45954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047B")]
		public object value
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x1D4502C", Offset = "0x1D4502C", VA = "0x1D4502C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x1D455C4", Offset = "0x1D455C4", VA = "0x1D455C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700047C")]
		public bool isProtected
		{
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x1D49C58", Offset = "0x1D49C58", VA = "0x1D49C58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x1D49C60", Offset = "0x1D49C60", VA = "0x1D49C60")]
			set
			{
			}
		}

		[Token(Token = "0x1700047D")]
		protected abstract object objectValue
		{
			[Token(Token = "0x6001A35")]
			get;
			[Token(Token = "0x6001A36")]
			set;
		}

		[Token(Token = "0x1700047E")]
		public abstract Type varType
		{
			[Token(Token = "0x6001A37")]
			get;
		}

		[Token(Token = "0x1700047F")]
		public abstract bool hasBinding
		{
			[Token(Token = "0x6001A38")]
			get;
		}

		[Token(Token = "0x17000480")]
		public abstract string propertyPath
		{
			[Token(Token = "0x6001A39")]
			get;
			[Token(Token = "0x6001A3A")]
			set;
		}

		[Token(Token = "0x14000054")]
		public event Action<string> onNameChanged
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x1D499C0", Offset = "0x1D499C0", VA = "0x1D499C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBBD4", Offset = "0xFCBBD4")]
			add
			{
			}
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x1D49A64", Offset = "0x1D49A64", VA = "0x1D49A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBBE4", Offset = "0xFCBBE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event Action<string, object> onValueChanged
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x1D49B08", Offset = "0x1D49B08", VA = "0x1D49B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBBF4", Offset = "0xFCBBF4")]
			add
			{
			}
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x1D49BAC", Offset = "0x1D49BAC", VA = "0x1D49BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC04", Offset = "0xFCBC04")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x1D49C6C", Offset = "0x1D49C6C", VA = "0x1D49C6C")]
		protected bool HasValueChangeEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x1D49C7C", Offset = "0x1D49C7C", VA = "0x1D49C7C")]
		protected void OnValueChanged(string name, object value)
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x1D49CEC", Offset = "0x1D49CEC", VA = "0x1D49CEC")]
		public Variable()
		{
		}

		[Token(Token = "0x6001A3B")]
		public abstract void BindProperty(MemberInfo prop, [Optional] GameObject target);

		[Token(Token = "0x6001A3C")]
		public abstract void UnBindProperty();

		[Token(Token = "0x6001A3D")]
		public abstract void InitializePropertyBinding(GameObject go, bool callSetter = false);

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1D45804", Offset = "0x1D45804", VA = "0x1D45804")]
		public bool CanConvertTo(Type toType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x1D49CF4", Offset = "0x1D49CF4", VA = "0x1D49CF4")]
		public Func<object> GetGetConverter(Type toType)
		{
			return null;
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x1D4A518", Offset = "0x1D4A518", VA = "0x1D4A518")]
		public bool CanConvertFrom(Type fromType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x1D4A534", Offset = "0x1D4A534", VA = "0x1D4A534")]
		public Action<object> GetSetConverter(Type fromType)
		{
			return null;
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x1D4ACEC", Offset = "0x1D4ACEC", VA = "0x1D4ACEC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x1D4ACF4", Offset = "0x1D4ACF4", VA = "0x1D4ACF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC14", Offset = "0xFCBC14")]
		private void <GetSetConverter>b__39_0(object o)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x1D4AD00", Offset = "0x1D4AD00", VA = "0x1D4AD00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC24", Offset = "0xFCBC24")]
		private void <GetSetConverter>b__39_1(object o)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x1D4AE98", Offset = "0x1D4AE98", VA = "0x1D4AE98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC34", Offset = "0xFCBC34")]
		private void <GetSetConverter>b__39_2(object o)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x1D4AF2C", Offset = "0x1D4AF2C", VA = "0x1D4AF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC44", Offset = "0xFCBC44")]
		private void <GetSetConverter>b__39_3(object o)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x1D4AFDC", Offset = "0x1D4AFDC", VA = "0x1D4AFDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC54", Offset = "0xFCBC54")]
		private void <GetSetConverter>b__39_4(object o)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x1D4B0D0", Offset = "0x1D4B0D0", VA = "0x1D4B0D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC64", Offset = "0xFCBC64")]
		private void <GetSetConverter>b__39_5(object o)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x1D4B1D0", Offset = "0x1D4B1D0", VA = "0x1D4B1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC74", Offset = "0xFCBC74")]
		private void <GetSetConverter>b__39_6(object o)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x1D4B2A0", Offset = "0x1D4B2A0", VA = "0x1D4B2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC84", Offset = "0xFCBC84")]
		private void <GetSetConverter>b__39_7(object o)
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x1D4B380", Offset = "0x1D4B380", VA = "0x1D4B380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBC94", Offset = "0xFCBC94")]
		private void <GetSetConverter>b__39_8(object o)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x1D4B454", Offset = "0x1D4B454", VA = "0x1D4B454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBCA4", Offset = "0xFCBCA4")]
		private void <GetSetConverter>b__39_9(object o)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CA")]
	public class Variable<T> : Variable
	{
		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9B5C", Offset = "0xFB9B5C")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x400173D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Variable<T> <>4__this;

			[Token(Token = "0x400173E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject go;

			[Token(Token = "0x400173F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FieldInfo field;

			[Token(Token = "0x600213B")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x600213C")]
			internal T <InitializePropertyBinding>b__1()
			{
				return (T)null;
			}

			[Token(Token = "0x600213D")]
			internal void <InitializePropertyBinding>b__3(T o)
			{
			}
		}

		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9B6C", Offset = "0xFB9B6C")]
		private sealed class <>c__DisplayClass22_1
		{
			[Token(Token = "0x4001740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MethodInfo getMethod;

			[Token(Token = "0x4001741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Component instance;

			[Token(Token = "0x4001742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MethodInfo setMethod;

			[Token(Token = "0x600213E")]
			public <>c__DisplayClass22_1()
			{
			}

			[Token(Token = "0x600213F")]
			internal T <InitializePropertyBinding>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x6002140")]
			internal void <InitializePropertyBinding>b__2(T o)
			{
			}
		}

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9B7C", Offset = "0xFB9B7C")]
		private sealed class <>c__DisplayClass22_2
		{
			[Token(Token = "0x4001743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Component instance;

			[Token(Token = "0x4001744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass22_0 CS$<>8__locals1;

			[Token(Token = "0x6002141")]
			public <>c__DisplayClass22_2()
			{
			}

			[Token(Token = "0x6002142")]
			internal T <InitializePropertyBinding>b__4()
			{
				return (T)null;
			}

			[Token(Token = "0x6002143")]
			internal void <InitializePropertyBinding>b__5(T o)
			{
			}
		}

		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9B8C", Offset = "0xFB9B8C")]
		private sealed class <>c__DisplayClass22_3
		{
			[Token(Token = "0x4001745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x6002144")]
			public <>c__DisplayClass22_3()
			{
			}

			[Token(Token = "0x6002145")]
			internal T <InitializePropertyBinding>b__6()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _value;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _propertyPath;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<T> getter;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> setter;

		[Token(Token = "0x17000481")]
		public override string propertyPath
		{
			[Token(Token = "0x6001A4E")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4F")]
			set
			{
			}
		}

		[Token(Token = "0x17000482")]
		public override bool hasBinding
		{
			[Token(Token = "0x6001A50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000483")]
		protected override object objectValue
		{
			[Token(Token = "0x6001A51")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A52")]
			set
			{
			}
		}

		[Token(Token = "0x17000484")]
		public override Type varType
		{
			[Token(Token = "0x6001A53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000485")]
		public new T value
		{
			[Token(Token = "0x6001A54")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001A55")]
			set
			{
			}
		}

		[Token(Token = "0x6001A4D")]
		public Variable()
		{
		}

		[Token(Token = "0x6001A56")]
		public T GetValue()
		{
			return (T)null;
		}

		[Token(Token = "0x6001A57")]
		public void SetValue(T newValue)
		{
		}

		[Token(Token = "0x6001A58")]
		public override void BindProperty(MemberInfo prop, [Optional] GameObject target)
		{
		}

		[Token(Token = "0x6001A59")]
		public override void UnBindProperty()
		{
		}

		[Token(Token = "0x6001A5A")]
		public override void InitializePropertyBinding(GameObject go, bool callSetter = false)
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class VariableSeperator
	{
		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2364", Offset = "0xFC2364")]
		private bool <isEditingName>k__BackingField;

		[Token(Token = "0x17000486")]
		public bool isEditingName
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x1D4BD38", Offset = "0x1D4BD38", VA = "0x1D4BD38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBCB4", Offset = "0xFCBCB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x1D4BD40", Offset = "0x1D4BD40", VA = "0x1D4BD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBCC4", Offset = "0xFCBCC4")]
			set
			{
			}
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x1D4BD4C", Offset = "0x1D4BD4C", VA = "0x1D4BD4C")]
		public VariableSeperator()
		{
		}
	}
}
namespace NodeCanvas.Framework.Internal
{
	[Serializable]
	[Token(Token = "0x20003CC")]
	public class GraphSerializationData
	{
		[Token(Token = "0x4000FEA")]
		public const float FRAMEWORK_VERSION = 2.81f;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float version;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string category;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string comments;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 translation;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float zoomFactor;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Node> nodes;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Connection> connections;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Node primeNode;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<CanvasGroup> canvasGroups;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BlackboardSource localBlackboard;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public object derivedData;

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x1D45CD8", Offset = "0x1D45CD8", VA = "0x1D45CD8")]
		public GraphSerializationData()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x1D3DE18", Offset = "0x1D3DE18", VA = "0x1D3DE18")]
		public GraphSerializationData(Graph graph)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x1D3E304", Offset = "0x1D3E304", VA = "0x1D3E304")]
		public void Reconstruct(Graph graph)
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[DoNotList]
	public sealed class MissingConnection : Connection, IMissingRecoverable
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2374", Offset = "0xFC2374")]
		private string <missingType>k__BackingField;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2384", Offset = "0xFC2384")]
		private string <recoveryState>k__BackingField;

		[Token(Token = "0x17000487")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF85C", Offset = "0xFCF85C")]
		public string missingType
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0x1D46048", Offset = "0x1D46048", VA = "0x1D46048", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBCD4", Offset = "0xFCBCD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0x1D46050", Offset = "0x1D46050", VA = "0x1D46050", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBCE4", Offset = "0xFCBCE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000488")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF86C", Offset = "0xFCF86C")]
		public string recoveryState
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x1D46058", Offset = "0x1D46058", VA = "0x1D46058", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBCF4", Offset = "0xFCBCF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0x1D46060", Offset = "0x1D46060", VA = "0x1D46060", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD04", Offset = "0xFCBD04")]
			set
			{
			}
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x1D46068", Offset = "0x1D46068", VA = "0x1D46068")]
		public MissingConnection()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB9100", Offset = "0xFB9100")]
	public sealed class MissingNode : Node, IMissingRecoverable
	{
		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2394", Offset = "0xFC2394")]
		private string <missingType>k__BackingField;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC23A4", Offset = "0xFC23A4")]
		private string <recoveryState>k__BackingField;

		[Token(Token = "0x17000489")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF87C", Offset = "0xFCF87C")]
		public string missingType
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x1D46078", Offset = "0x1D46078", VA = "0x1D46078", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD14", Offset = "0xFCBD14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x1D46080", Offset = "0x1D46080", VA = "0x1D46080", Slot = "28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD24", Offset = "0xFCBD24")]
			set
			{
			}
		}

		[Token(Token = "0x1700048A")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF88C", Offset = "0xFCF88C")]
		public string recoveryState
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x1D46088", Offset = "0x1D46088", VA = "0x1D46088", Slot = "29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD34", Offset = "0xFCBD34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x1D46090", Offset = "0x1D46090", VA = "0x1D46090", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD44", Offset = "0xFCBD44")]
			set
			{
			}
		}

		[Token(Token = "0x1700048B")]
		public override string name
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x1D46098", Offset = "0x1D46098", VA = "0x1D46098", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		public override Type outConnectionType
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x1D460E0", Offset = "0x1D460E0", VA = "0x1D460E0", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0x1D460E8", Offset = "0x1D460E8", VA = "0x1D460E8", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700048E")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0x1D460F0", Offset = "0x1D460F0", VA = "0x1D460F0", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700048F")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0x1D460F8", Offset = "0x1D460F8", VA = "0x1D460F8", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000490")]
		public override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0x1D46100", Offset = "0x1D46100", VA = "0x1D46100", Slot = "12")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x17000491")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001A70")]
			[Address(RVA = "0x1D46108", Offset = "0x1D46108", VA = "0x1D46108", Slot = "13")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x1D46110", Offset = "0x1D46110", VA = "0x1D46110")]
		public MissingNode()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB914C", Offset = "0xFB914C")]
	public class MissingAction : ActionTask, IMissingRecoverable
	{
		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC23B4", Offset = "0xFC23B4")]
		private string <missingType>k__BackingField;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC23C4", Offset = "0xFC23C4")]
		private string <recoveryState>k__BackingField;

		[Token(Token = "0x17000492")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF89C", Offset = "0xFCF89C")]
		public string missingType
		{
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0x1D45E10", Offset = "0x1D45E10", VA = "0x1D45E10", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD54", Offset = "0xFCBD54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0x1D45E18", Offset = "0x1D45E18", VA = "0x1D45E18", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD64", Offset = "0xFCBD64")]
			set
			{
			}
		}

		[Token(Token = "0x17000493")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF8AC", Offset = "0xFCF8AC")]
		public string recoveryState
		{
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x1D45E20", Offset = "0x1D45E20", VA = "0x1D45E20", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD74", Offset = "0xFCBD74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0x1D45E28", Offset = "0x1D45E28", VA = "0x1D45E28", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD84", Offset = "0xFCBD84")]
			set
			{
			}
		}

		[Token(Token = "0x17000494")]
		protected override string info
		{
			[Token(Token = "0x6001A76")]
			[Address(RVA = "0x1D45E30", Offset = "0x1D45E30", VA = "0x1D45E30", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x1D45EE8", Offset = "0x1D45EE8", VA = "0x1D45EE8")]
		public MissingAction()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xFB9198", Offset = "0xFB9198")]
	public class MissingCondition : ConditionTask, IMissingRecoverable
	{
		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC23D4", Offset = "0xFC23D4")]
		private string <missingType>k__BackingField;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC23E4", Offset = "0xFC23E4")]
		private string <recoveryState>k__BackingField;

		[Token(Token = "0x17000495")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF8BC", Offset = "0xFCF8BC")]
		public string missingType
		{
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0x1D45F60", Offset = "0x1D45F60", VA = "0x1D45F60", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBD94", Offset = "0xFCBD94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x1D45F68", Offset = "0x1D45F68", VA = "0x1D45F68", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBDA4", Offset = "0xFCBDA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000496")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF8CC", Offset = "0xFCF8CC")]
		public string recoveryState
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x1D45F70", Offset = "0x1D45F70", VA = "0x1D45F70", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBDB4", Offset = "0xFCBDB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x1D45F78", Offset = "0x1D45F78", VA = "0x1D45F78", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBDC4", Offset = "0xFCBDC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000497")]
		protected override string info
		{
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x1D45F80", Offset = "0x1D45F80", VA = "0x1D45F80", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x1D46038", Offset = "0x1D46038", VA = "0x1D46038")]
		public MissingCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D1")]
	public class BBObjectParameter : BBParameter<object>
	{
		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Type _type;

		[Token(Token = "0x17000498")]
		public override Type varType
		{
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x1D44C70", Offset = "0x1D44C70", VA = "0x1D44C70", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x1D44A28", Offset = "0x1D44A28", VA = "0x1D44A28")]
		public BBObjectParameter()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x1D44C08", Offset = "0x1D44C08", VA = "0x1D44C08")]
		public BBObjectParameter(Type t)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x1D44ABC", Offset = "0x1D44ABC", VA = "0x1D44ABC")]
		public void SetType(Type t)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFB91E4", Offset = "0xFB91E4")]
	public sealed class BlackboardSource : IBlackboard
	{
		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9B9C", Offset = "0xFB9B9C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type ofType;

			[Token(Token = "0x6002146")]
			[Address(RVA = "0x1D45C18", Offset = "0x1D45C18", VA = "0x1D45C18")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6002147")]
			[Address(RVA = "0x1D45CA8", Offset = "0x1D45CA8", VA = "0x1D45CA8")]
			internal bool <GetVariableNames>b__0(Variable v)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9BAC", Offset = "0xFB9BAC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Variable, string> <>9__30_1;

			[Token(Token = "0x6002149")]
			[Address(RVA = "0x1D45C88", Offset = "0x1D45C88", VA = "0x1D45C88")]
			public <>c()
			{
			}

			[Token(Token = "0x600214A")]
			[Address(RVA = "0x1D45C90", Offset = "0x1D45C90", VA = "0x1D45C90")]
			internal string <GetVariableNames>b__30_1(Variable v)
			{
				return null;
			}
		}

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dictionary<string, Variable> _variables;

		[Token(Token = "0x17000499")]
		public string name
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x1D44F08", Offset = "0x1D44F08", VA = "0x1D44F08", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0x1D44F10", Offset = "0x1D44F10", VA = "0x1D44F10", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700049A")]
		public Dictionary<string, Variable> variables
		{
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0x1D44F18", Offset = "0x1D44F18", VA = "0x1D44F18", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0x1D44F20", Offset = "0x1D44F20", VA = "0x1D44F20", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700049B")]
		public GameObject propertiesBindTarget
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x1D44F28", Offset = "0x1D44F28", VA = "0x1D44F28", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049C")]
		public object Item
		{
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x1D44F30", Offset = "0x1D44F30", VA = "0x1D44F30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x1D45038", Offset = "0x1D45038", VA = "0x1D45038")]
			set
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event Action<Variable> onVariableAdded
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0x1D44C78", Offset = "0x1D44C78", VA = "0x1D44C78", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBDD4", Offset = "0xFCBDD4")]
			add
			{
			}
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x1D44D1C", Offset = "0x1D44D1C", VA = "0x1D44D1C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBDE4", Offset = "0xFCBDE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event Action<Variable> onVariableRemoved
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x1D44DC0", Offset = "0x1D44DC0", VA = "0x1D44DC0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBDF4", Offset = "0xFCBDF4")]
			add
			{
			}
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x1D44E64", Offset = "0x1D44E64", VA = "0x1D44E64", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE04", Offset = "0xFCBE04")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x1D3E7FC", Offset = "0x1D3E7FC", VA = "0x1D3E7FC")]
		public BlackboardSource()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x1D3E9C4", Offset = "0x1D3E9C4", VA = "0x1D3E9C4")]
		public void InitializePropertiesBinding(GameObject targetGO, bool callSetter)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x1D45250", Offset = "0x1D45250", VA = "0x1D45250", Slot = "14")]
		public Variable AddVariable(string varName, object value)
		{
			return null;
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x1D4531C", Offset = "0x1D4531C", VA = "0x1D4531C", Slot = "13")]
		public Variable AddVariable(string varName, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x1D45750", Offset = "0x1D45750", VA = "0x1D45750", Slot = "15")]
		public Variable RemoveVariable(string varName)
		{
			return null;
		}

		[Token(Token = "0x6001A92")]
		public T GetValue<T>(string varName)
		{
			return (T)null;
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x1D4503C", Offset = "0x1D4503C", VA = "0x1D4503C", Slot = "20")]
		public Variable SetValue(string varName, object value)
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x1D455D0", Offset = "0x1D455D0", VA = "0x1D455D0", Slot = "16")]
		public Variable GetVariable(string varName, [Optional] Type ofType)
		{
			return null;
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x1D45820", Offset = "0x1D45820", VA = "0x1D45820", Slot = "17")]
		public Variable GetVariableByID(string ID)
		{
			return null;
		}

		[Token(Token = "0x6001A96")]
		public Variable<T> GetVariable<T>(string varName)
		{
			return null;
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x1D459FC", Offset = "0x1D459FC", VA = "0x1D459FC", Slot = "21")]
		public string[] GetVariableNames()
		{
			return null;
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x1D45A64", Offset = "0x1D45A64", VA = "0x1D45A64", Slot = "22")]
		public string[] GetVariableNames(Type ofType)
		{
			return null;
		}

		[Token(Token = "0x6001A99")]
		public Variable<T> AddVariable<T>(string varName, T value)
		{
			return null;
		}

		[Token(Token = "0x6001A9A")]
		public Variable<T> AddVariable<T>(string varName)
		{
			return null;
		}
	}
	[Token(Token = "0x20003D3")]
	public class MissingBBParameterType : BBParameter<object>, IMissingRecoverable
	{
		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2444", Offset = "0xFC2444")]
		private string <missingType>k__BackingField;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2454", Offset = "0xFC2454")]
		private string <recoveryState>k__BackingField;

		[Token(Token = "0x1700049D")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF8DC", Offset = "0xFCF8DC")]
		public string missingType
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x1D45EF0", Offset = "0x1D45EF0", VA = "0x1D45EF0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE14", Offset = "0xFCBE14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0x1D45EF8", Offset = "0x1D45EF8", VA = "0x1D45EF8", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE24", Offset = "0xFCBE24")]
			set
			{
			}
		}

		[Token(Token = "0x1700049E")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF8EC", Offset = "0xFCF8EC")]
		public string recoveryState
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0x1D45F00", Offset = "0x1D45F00", VA = "0x1D45F00", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE34", Offset = "0xFCBE34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0x1D45F08", Offset = "0x1D45F08", VA = "0x1D45F08", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE44", Offset = "0xFCBE44")]
			set
			{
			}
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x1D45F10", Offset = "0x1D45F10", VA = "0x1D45F10")]
		public MissingBBParameterType()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class MissingVariableType : Variable<object>, IMissingRecoverable
	{
		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2464", Offset = "0xFC2464")]
		private string <missingType>k__BackingField;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2474", Offset = "0xFC2474")]
		private string <recoveryState>k__BackingField;

		[Token(Token = "0x1700049F")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF8FC", Offset = "0xFCF8FC")]
		public string missingType
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0x1D461C4", Offset = "0x1D461C4", VA = "0x1D461C4", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE54", Offset = "0xFCBE54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0x1D461CC", Offset = "0x1D461CC", VA = "0x1D461CC", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE64", Offset = "0xFCBE64")]
			set
			{
			}
		}

		[Token(Token = "0x170004A0")]
		[AttributeAttribute(Name = "fsPropertyAttribute", RVA = "0xFCF90C", Offset = "0xFCF90C")]
		public string recoveryState
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0x1D461D4", Offset = "0x1D461D4", VA = "0x1D461D4", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE74", Offset = "0xFCBE74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0x1D461DC", Offset = "0x1D461DC", VA = "0x1D461DC", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE84", Offset = "0xFCBE84")]
			set
			{
			}
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x1D461E4", Offset = "0x1D461E4", VA = "0x1D461E4")]
		public MissingVariableType()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class fsBBParameterProcessor : fsRecoveryProcessor<BBParameter, MissingBBParameterType>
	{
		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x1D46234", Offset = "0x1D46234", VA = "0x1D46234", Slot = "8")]
		public override void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x1D46468", Offset = "0x1D46468", VA = "0x1D46468")]
		public fsBBParameterProcessor()
		{
		}
	}
}
namespace Exploder
{
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFB921C", Offset = "0xFB921C")]
	public class Array<T>
	{
		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] array;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int size;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int index;

		[Token(Token = "0x170004A1")]
		public int Count
		{
			[Token(Token = "0x6001AA9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004A2")]
		public T Item
		{
			[Token(Token = "0x6001AAA")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001AA7")]
		public Array(int size)
		{
		}

		[Token(Token = "0x6001AA8")]
		public void Initialize(int newSize)
		{
		}

		[Token(Token = "0x6001AAB")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001AAC")]
		public void Add(T data)
		{
		}

		[Token(Token = "0x6001AAD")]
		public void Reverse()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFB9254", Offset = "0xFB9254")]
	internal class ArrayDictionary<T>
	{
		[Token(Token = "0x200055D")]
		private struct DicItem
		{
			[Token(Token = "0x4001749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x400174A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool valid;
		}

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Size;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DicItem[] dictionary;

		[Token(Token = "0x170004A3")]
		public T Item
		{
			[Token(Token = "0x6001AB0")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001AB1")]
			set
			{
			}
		}

		[Token(Token = "0x6001AAE")]
		public ArrayDictionary(int size)
		{
		}

		[Token(Token = "0x6001AAF")]
		public bool ContainsKey(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB2")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001AB3")]
		public void Add(int key, T data)
		{
		}

		[Token(Token = "0x6001AB4")]
		public void Remove(int key)
		{
		}

		[Token(Token = "0x6001AB5")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6001AB6")]
		public bool TryGetValue(int key, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB7")]
		public T GetFirstValue()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20003D8")]
	internal class BakeSkinManager
	{
		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject parent;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<GameObject> bakedObjects;

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x18B418C", Offset = "0x18B418C", VA = "0x18B418C")]
		public BakeSkinManager(Core core)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x18B42E8", Offset = "0x18B42E8", VA = "0x18B42E8")]
		public GameObject CreateBakeObject(string name)
		{
			return null;
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x18B43B4", Offset = "0x18B43B4", VA = "0x18B43B4")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class Contour
	{
		[Token(Token = "0x200055E")]
		private struct MidPoint
		{
			[Token(Token = "0x400174B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int id;

			[Token(Token = "0x400174C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vertexId;

			[Token(Token = "0x400174D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int idNext;

			[Token(Token = "0x400174E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int idPrev;
		}

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Dictionary<int, int>> contour;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ArrayDictionary<MidPoint> midPoints;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LSHash lsHash;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2484", Offset = "0xFC2484")]
		private int <MidPointsCount>k__BackingField;

		[Token(Token = "0x170004A4")]
		public int MidPointsCount
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x18B4760", Offset = "0x18B4760", VA = "0x18B4760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBE94", Offset = "0xFCBE94")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x18B4768", Offset = "0x18B4768", VA = "0x18B4768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBEA4", Offset = "0xFCBEA4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x18B44D4", Offset = "0x18B44D4", VA = "0x18B44D4")]
		public Contour(int trianglesNum)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x18B4504", Offset = "0x18B4504", VA = "0x18B4504")]
		public void AllocateBuffers(int trianglesNum)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x18B4770", Offset = "0x18B4770", VA = "0x18B4770")]
		public void AddTriangle(int triangleID, int id0, int id1, Vector3 v0, Vector3 v1)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x18B49A0", Offset = "0x18B49A0", VA = "0x18B49A0")]
		public bool FindContours()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DA")]
	internal class Core : Singleton<Core>
	{
		[NonSerialized]
		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderParams parameters;

		[NonSerialized]
		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderQueue queue;

		[NonSerialized]
		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Stopwatch explosionWatch;

		[NonSerialized]
		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Stopwatch frameWatch;

		[NonSerialized]
		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HashSet<MeshObject> meshSet;

		[NonSerialized]
		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<int, int> targetFragments;

		[NonSerialized]
		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MeshObject> postList;

		[NonSerialized]
		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Fragment> pool;

		[NonSerialized]
		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CrackManager crackManager;

		[NonSerialized]
		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int processingFrames;

		[NonSerialized]
		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int poolIdx;

		[NonSerialized]
		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool splitMeshIslands;

		[NonSerialized]
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BakeSkinManager bakeSkinManager;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ExploderTask[] tasks;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TaskType currTaskType;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool initialized;

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x18B4C44", Offset = "0x18B4C44", VA = "0x18B4C44")]
		public void Initialize(ExploderObject exploder)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x18B5A04", Offset = "0x18B5A04", VA = "0x18B5A04")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, bool crack, params GameObject[] obj)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x18B5AF4", Offset = "0x18B5AF4", VA = "0x18B5AF4")]
		public void ExplodeCracked(GameObject obj, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x18B60F4", Offset = "0x18B60F4", VA = "0x18B60F4")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x18B6380", Offset = "0x18B6380", VA = "0x18B6380")]
		public bool IsCracked(GameObject gm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x18B6400", Offset = "0x18B6400", VA = "0x18B6400")]
		public void StartExplosionFromQueue(ExploderParams p)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x18B6A80", Offset = "0x18B6A80", VA = "0x18B6A80")]
		public void Update()
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x18B6B80", Offset = "0x18B6B80", VA = "0x18B6B80", Slot = "4")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x18B58C8", Offset = "0x18B58C8", VA = "0x18B58C8")]
		private void PreAllocateBuffers()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x18B68F0", Offset = "0x18B68F0", VA = "0x18B68F0")]
		private bool RunTask(TaskType taskType, float budget = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x18B68A8", Offset = "0x18B68A8", VA = "0x18B68A8")]
		private void InitTask(TaskType taskType)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x18B6938", Offset = "0x18B6938", VA = "0x18B6938")]
		private TaskType NextTask(TaskType taskType)
		{
			return default(TaskType);
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x18B6C38", Offset = "0x18B6C38", VA = "0x18B6C38")]
		public Core()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	internal class CrackManager
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<GameObject, CrackedObject> crackedObjects;

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x18B535C", Offset = "0x18B535C", VA = "0x18B535C")]
		public CrackManager(Core core)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x18B6CA8", Offset = "0x18B6CA8", VA = "0x18B6CA8")]
		public CrackedObject Create(GameObject originalObject, ExploderParams parameters)
		{
			return null;
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x18B5BBC", Offset = "0x18B5BBC", VA = "0x18B5BBC")]
		public long Explode(GameObject gameObject)
		{
			return default(long);
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x18B6224", Offset = "0x18B6224", VA = "0x18B6224")]
		public long ExplodePartial(GameObject gameObject, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
			return default(long);
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x18B5FC0", Offset = "0x18B5FC0", VA = "0x18B5FC0")]
		public long ExplodeAll()
		{
			return default(long);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x18B6398", Offset = "0x18B6398", VA = "0x18B6398")]
		public bool IsCracked(GameObject gameObject)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DC")]
	internal class CrackedObject
	{
		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Fragment> pool;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Stopwatch watch;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Quaternion initRot;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 initPos;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly GameObject originalObject;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ExploderParams parameters;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly FractureGrid fractureGrid;

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x18B6D40", Offset = "0x18B6D40", VA = "0x18B6D40")]
		public CrackedObject(GameObject originalObject, ExploderParams parameters)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x18B77D4", Offset = "0x18B77D4", VA = "0x18B77D4")]
		public void CalculateFractureGrid()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x18B6E5C", Offset = "0x18B6E5C", VA = "0x18B6E5C")]
		public long Explode()
		{
			return default(long);
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x18B7424", Offset = "0x18B7424", VA = "0x18B7424")]
		public long ExplodePartial(GameObject gameObject, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
			return default(long);
		}
	}
	[Token(Token = "0x20003DD")]
	internal class CuttingPlane
	{
		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly System.Random random;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Plane plane;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Core core;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] rectAxis;

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x18B7E64", Offset = "0x18B7E64", VA = "0x18B7E64")]
		public CuttingPlane(Core core)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x18BA9AC", Offset = "0x18BA9AC", VA = "0x18BA9AC")]
		private Plane GetRandomPlane(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x18BAA88", Offset = "0x18BAA88", VA = "0x18BAA88")]
		private Plane GetRectangularRegularPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x18BABD4", Offset = "0x18BABD4", VA = "0x18BABD4")]
		private Plane GetRectangularRandom(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x18B9E8C", Offset = "0x18B9E8C", VA = "0x18B9E8C")]
		public Plane GetPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}
	}
	[Token(Token = "0x20003DE")]
	public class ExploderParams
	{
		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 ForceVector;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 CubeRadius;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 HitPosition;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 ShotDir;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Force;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float FrameBudget;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Radius;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float BulletSize;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int id;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int TargetFragments;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int FragmentPoolSize;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject.ThreadOptions ThreadOptions;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ExploderObject.OnExplosion Callback;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FragmentDeactivation FragmentDeactivation;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FragmentSFX FragmentSFX;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ExploderObject.CuttingStyleOption CuttingStyle;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject[] Targets;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject ExploderGameObject;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool UseCubeRadius;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool DontUseTag;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool UseForceVector;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		public bool ExplodeSelf;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool HideSelf;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		public bool SplitMeshIslands;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		public bool Use2DCollision;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool DisableRadiusScan;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool DisableTriangulation;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool Crack;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool processing;

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x18B503C", Offset = "0x18B503C", VA = "0x18B503C")]
		public ExploderParams(ExploderObject exploder)
		{
		}
	}
	[Token(Token = "0x20003DF")]
	internal class ExploderQueue
	{
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<ExploderParams> queue;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Core core;

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x18B53D8", Offset = "0x18B53D8", VA = "0x18B53D8")]
		public ExploderQueue(Core core)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x18B5A20", Offset = "0x18B5A20", VA = "0x18B5A20")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, bool crack, params GameObject[] target)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x18C16F4", Offset = "0x18C16F4", VA = "0x18C16F4")]
		private void ProcessQueue()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x18B69EC", Offset = "0x18B69EC", VA = "0x18B69EC")]
		public void OnExplosionFinished(int id, long ellapsedMS)
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public struct ExploderTransform
	{
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 localScale;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform parent;

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x1110730", Offset = "0x1110730", VA = "0x1110730")]
		public ExploderTransform(Transform unityTransform)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x1110738", Offset = "0x1110738", VA = "0x1110738")]
		public Vector3 InverseTransformDirection(Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x1110740", Offset = "0x1110740", VA = "0x1110740")]
		public Vector3 InverseTransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x1110748", Offset = "0x1110748", VA = "0x1110748")]
		public Vector3 TransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003E1")]
	internal class FractureGrid
	{
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x18B77CC", Offset = "0x18B77CC", VA = "0x18B77CC")]
		public FractureGrid(CrackedObject obj)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x18B77EC", Offset = "0x18B77EC", VA = "0x18B77EC")]
		public void CreateGrid()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class LSHash
	{
		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Vector3[] buckets;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float bucketSize2;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int count;

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x1CEDB18", Offset = "0x1CEDB18", VA = "0x1CEDB18")]
		public LSHash(float bucketSize, int allocSize)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x1CEDBAC", Offset = "0x1CEDBAC", VA = "0x1CEDBAC")]
		public int Capacity()
		{
			return default(int);
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x1CEDBC8", Offset = "0x1CEDBC8", VA = "0x1CEDBC8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x1CEDC98", Offset = "0x1CEDC98", VA = "0x1CEDC98")]
		public int Hash(Vector3 p)
		{
			return default(int);
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x1CEDD70", Offset = "0x1CEDD70", VA = "0x1CEDD70")]
		public void Hash(Vector3 p0, Vector3 p1, out int hash0, out int hash1)
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class ExploderMesh
	{
		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] triangles;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uv;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color32[] colors32;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 centroid;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 min;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 max;

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x18C0574", Offset = "0x18C0574", VA = "0x18C0574")]
		public ExploderMesh()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x18C057C", Offset = "0x18C057C", VA = "0x18C057C")]
		public ExploderMesh(Mesh unityMesh)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x18C06C0", Offset = "0x18C06C0", VA = "0x18C06C0")]
		public static void CalculateCentroid(List<Vector3> vertices, ref Vector3 ctr, ref Vector3 min, ref Vector3 max)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x18C0AC8", Offset = "0x18C0AC8", VA = "0x18C0AC8")]
		public Mesh ToUnityMesh()
		{
			return null;
		}
	}
	[Token(Token = "0x20003E4")]
	public class MeshCutter
	{
		[Token(Token = "0x200055F")]
		private struct Triangle
		{
			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] ids;

			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] pos;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normal;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2[] uvs;

			[Token(Token = "0x4001753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color32[] colors;
		}

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int>[] triangles;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3>[] vertices;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector3>[] normals;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2>[] uvs;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector4>[] tangents;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Color32>[] vertexColors;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> cutTris;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] triCache;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] centroid;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] triCounter;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Array<int> polygonIndicesArray;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Contour contour;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<long, int>[] cutVertCache;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, int>[] cornerVertCache;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int contourBufferSize;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color crossSectionVertexColour;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector4 crossSectionUV;

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x1CEDDD8", Offset = "0x1CEDDD8", VA = "0x1CEDDD8")]
		public void Init(int trianglesNum, int verticesNum)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x1CEDE14", Offset = "0x1CEDE14", VA = "0x1CEDE14")]
		private void AllocateBuffers(int trianglesNum, int verticesNum, bool useMeshTangents, bool useVertexColors)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x1CEE820", Offset = "0x1CEE820", VA = "0x1CEE820")]
		private void AllocateContours(int cutTrianglesNum)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x1CEECE0", Offset = "0x1CEECE0", VA = "0x1CEECE0")]
		public float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes, Color crossSectionVertexColor, Vector4 crossUV)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x1CEECFC", Offset = "0x1CEECFC", VA = "0x1CEECFC")]
		private float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x1CF4FA8", Offset = "0x1CF4FA8", VA = "0x1CF4FA8")]
		private int AddIntersectionPoint(Vector3 pos, Triangle tri, int edge0, int edge1, Dictionary<long, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors32, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x1CF5350", Offset = "0x1CF5350", VA = "0x1CF5350")]
		private int AddTrianglePoint(Vector3 pos, Vector3 normal, Vector2 uv, Vector4 tangent, Color32 color, int idx, int[] triCache, Dictionary<int, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x1CF5548", Offset = "0x1CF5548", VA = "0x1CF5548")]
		private void Triangulate(List<Dictionary<int, int>> contours, Plane plane, List<Vector3>[] vertices, List<Vector3>[] normals, List<Vector2>[] uvs, List<Vector4>[] tangents, List<Color32>[] colors, List<int>[] triangles, bool uvCutMesh, bool useTangents, bool useColors, bool useNormals)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x1CF78D8", Offset = "0x1CF78D8", VA = "0x1CF78D8")]
		public MeshCutter()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	internal struct MeshObject
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExploderMesh mesh;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderTransform transform;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform parent;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 position;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Quaternion rotation;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 localScale;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject original;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExploderOption option;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject skinnedOriginal;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject bakeObject;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float distanceRatio;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int id;
	}
	[Token(Token = "0x20003E6")]
	public static class MeshUtils
	{
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x1CF6824", Offset = "0x1CF6824", VA = "0x1CF6824")]
		public static Vector3 ComputeBarycentricCoordinates(Vector3 a, Vector3 b, Vector3 c, Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AFC")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x1CF78E0", Offset = "0x1CF78E0", VA = "0x1CF78E0")]
		public static void CenterPivot(Vector3[] vertices, Vector3 centroid)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x1CF7950", Offset = "0x1CF7950", VA = "0x1CF7950")]
		public static List<ExploderMesh> IsolateMeshIslands(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x1CF8A38", Offset = "0x1CF8A38", VA = "0x1CF8A38")]
		public static void GeneratePolygonCollider(PolygonCollider2D collider, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class Plane
	{
		[Token(Token = "0x2000560")]
		[Flags]
		public enum PointClass
		{
			[Token(Token = "0x4001756")]
			Coplanar = 0,
			[Token(Token = "0x4001757")]
			Front = 1,
			[Token(Token = "0x4001758")]
			Back = 2,
			[Token(Token = "0x4001759")]
			Intersection = 3
		}

		[Token(Token = "0x4001083")]
		private const float epsylon = 0.0001f;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Normal;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC2494", Offset = "0xFC2494")]
		private Vector3 <Pnt>k__BackingField;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Distance;

		[Token(Token = "0x170004A5")]
		public Vector3 Pnt
		{
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x1CF8E98", Offset = "0x1CF8E98", VA = "0x1CF8E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBEB4", Offset = "0xFCBEB4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001B01")]
			[Address(RVA = "0x1CF8EA4", Offset = "0x1CF8EA4", VA = "0x1CF8EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBEC4", Offset = "0xFCBEC4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x1CF8EB0", Offset = "0x1CF8EB0", VA = "0x1CF8EB0")]
		public Plane(Vector3 a, Vector3 b, Vector3 c)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x1CF9014", Offset = "0x1CF9014", VA = "0x1CF9014")]
		public Plane(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x1CF9084", Offset = "0x1CF9084", VA = "0x1CF9084")]
		public void Set(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x1CF9160", Offset = "0x1CF9160", VA = "0x1CF9160")]
		public Plane(Plane instance)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x1CF91B8", Offset = "0x1CF91B8", VA = "0x1CF91B8")]
		public PointClass ClassifyPoint(Vector3 p)
		{
			return default(PointClass);
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x1CF4D94", Offset = "0x1CF4D94", VA = "0x1CF4D94")]
		public bool GetSide(Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x1CF9294", Offset = "0x1CF9294", VA = "0x1CF9294")]
		public void Flip()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x1CF4CC8", Offset = "0x1CF4CC8", VA = "0x1CF4CC8")]
		public bool GetSideFix(ref Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x1CF9334", Offset = "0x1CF9334", VA = "0x1CF9334")]
		public bool SameSide(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x1CF4E58", Offset = "0x1CF4E58", VA = "0x1CF4E58")]
		public bool IntersectSegment(Vector3 a, Vector3 b, out float t, ref Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x1CF9394", Offset = "0x1CF9394", VA = "0x1CF9394")]
		public void InverseTransform(ExploderTransform transform)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x1CF692C", Offset = "0x1CF692C", VA = "0x1CF692C")]
		public Matrix4x4 GetPlaneMatrix()
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x20003E8")]
	public class Polygon
	{
		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] Points;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float Area;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Min;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 Max;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Polygon> holes;

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x1CF6A68", Offset = "0x1CF6A68", VA = "0x1CF6A68")]
		public Polygon(Vector2[] pnts)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x1CF9488", Offset = "0x1CF9488", VA = "0x1CF9488")]
		public float GetArea()
		{
			return default(float);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x1CF6B0C", Offset = "0x1CF6B0C", VA = "0x1CF6B0C")]
		public bool IsPointInside(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x1CF959C", Offset = "0x1CF959C", VA = "0x1CF959C")]
		public bool IsPolygonInside(Polygon polygon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x1CF6C68", Offset = "0x1CF6C68", VA = "0x1CF6C68")]
		public void AddHole(Polygon polygon)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x1CF6CD0", Offset = "0x1CF6CD0", VA = "0x1CF6CD0")]
		public bool Triangulate(Array<int> indicesArray)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x1CF9674", Offset = "0x1CF9674", VA = "0x1CF9674")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x1CF98AC", Offset = "0x1CF98AC", VA = "0x1CF98AC")]
		private bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E9")]
	internal class CutterMT : CutterST
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected readonly int THREAD_MAX;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly CutterWorker[] workers;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int[] splitIDs;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Stopwatch localWatch;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool cutInitialized;

		[Token(Token = "0x170004A6")]
		public override TaskType Type
		{
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x18B8190", Offset = "0x18B8190", VA = "0x18B8190", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x18B5598", Offset = "0x18B5598", VA = "0x18B5598")]
		public CutterMT(Core Core)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x18B8198", Offset = "0x18B8198", VA = "0x18B8198", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x18B8300", Offset = "0x18B8300", VA = "0x18B8300", Slot = "5")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x18B83A0", Offset = "0x18B83A0", VA = "0x18B83A0", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x18B8524", Offset = "0x18B8524", VA = "0x18B8524", Slot = "8")]
		protected override bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x18B91F0", Offset = "0x18B91F0", VA = "0x18B91F0")]
		private int[] SplitMeshTargetFragments(int id)
		{
			return null;
		}
	}
	[Token(Token = "0x20003EA")]
	internal class CutterST : ExploderTask
	{
		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly MeshCutter cutter;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cutAttempt;

		[Token(Token = "0x170004A7")]
		public override TaskType Type
		{
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0x18B94D8", Offset = "0x18B94D8", VA = "0x18B94D8", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x18B5470", Offset = "0x18B5470", VA = "0x18B5470")]
		public CutterST(Core Core)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x18B8220", Offset = "0x18B8220", VA = "0x18B8220", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x18B951C", Offset = "0x18B951C", VA = "0x18B951C", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x18B9568", Offset = "0x18B9568", VA = "0x18B9568", Slot = "8")]
		protected virtual bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x18B8FDC", Offset = "0x18B8FDC", VA = "0x18B8FDC")]
		protected List<ExploderMesh> CutSingleMesh(MeshObject mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x20003EB")]
	internal class CutterWorker
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly HashSet<MeshObject> meshSet;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MeshCutter cutter;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Core core;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool running;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int cutAttempt;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ManualResetEvent mre;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread thread;

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x18B7F98", Offset = "0x18B7F98", VA = "0x18B7F98")]
		public CutterWorker(Core core, CuttingPlane cuttingPlane)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x18B8298", Offset = "0x18B8298", VA = "0x18B8298")]
		public void Init()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x18B9360", Offset = "0x18B9360", VA = "0x18B9360")]
		public void AddMesh(MeshObject meshObject)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x18B93FC", Offset = "0x18B93FC", VA = "0x18B93FC")]
		public void Run()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x18B9EE4", Offset = "0x18B9EE4", VA = "0x18B9EE4")]
		private void ThreadRun()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x18B84F8", Offset = "0x18B84F8", VA = "0x18B84F8")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x18BA9A4", Offset = "0x18BA9A4", VA = "0x18BA9A4")]
		public HashSet<MeshObject> GetResults()
		{
			return null;
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x18B837C", Offset = "0x18B837C", VA = "0x18B837C")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x18BA020", Offset = "0x18BA020", VA = "0x18BA020")]
		private void Cut()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public enum TaskType
	{
		[Token(Token = "0x40010A1")]
		None,
		[Token(Token = "0x40010A2")]
		Preprocess,
		[Token(Token = "0x40010A3")]
		ProcessCutter,
		[Token(Token = "0x40010A4")]
		IsolateMeshIslands,
		[Token(Token = "0x40010A5")]
		PostprocessExplode,
		[Token(Token = "0x40010A6")]
		PostprocessCrack,
		[Token(Token = "0x40010A7")]
		TaskMax
	}
	[Token(Token = "0x20003ED")]
	internal abstract class ExploderTask
	{
		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Core core;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC24A4", Offset = "0xFC24A4")]
		private Stopwatch <Watch>k__BackingField;

		[Token(Token = "0x170004A8")]
		public abstract TaskType Type
		{
			[Token(Token = "0x6001B2C")]
			get;
		}

		[Token(Token = "0x170004A9")]
		public Stopwatch Watch
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x18C1998", Offset = "0x18C1998", VA = "0x18C1998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBED4", Offset = "0xFCBED4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0x18C19A0", Offset = "0x18C19A0", VA = "0x18C19A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBEE4", Offset = "0xFCBEE4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x18B943C", Offset = "0x18B943C", VA = "0x18B943C")]
		protected ExploderTask(Core Core)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x18C19A8", Offset = "0x18C19A8", VA = "0x18C19A8", Slot = "5")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x18B94E0", Offset = "0x18B94E0", VA = "0x18B94E0", Slot = "6")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6001B32")]
		public abstract bool Run(float frameBudget);
	}
	[Token(Token = "0x20003EE")]
	internal class IsolateMeshIslands : ExploderTask
	{
		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<MeshObject> islands;

		[Token(Token = "0x170004AA")]
		public override TaskType Type
		{
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0x18C5348", Offset = "0x18C5348", VA = "0x18C5348", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x18B5840", Offset = "0x18B5840", VA = "0x18B5840")]
		public IsolateMeshIslands(Core Core)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x18C5350", Offset = "0x18C5350", VA = "0x18C5350", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x18C5408", Offset = "0x18C5408", VA = "0x18C5408", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003EF")]
	internal abstract class Postprocess : ExploderTask
	{
		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x1CF9928", Offset = "0x1CF9928", VA = "0x1CF9928")]
		protected Postprocess(Core Core)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1CF9930", Offset = "0x1CF9930", VA = "0x1CF9930", Slot = "6")]
		public override void Init()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	internal class PostprocessCrack : Postprocess
	{
		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CrackedObject crackedObject;

		[Token(Token = "0x170004AB")]
		public override TaskType Type
		{
			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0x1CF99F0", Offset = "0x1CF99F0", VA = "0x1CF99F0", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1CF99E8", Offset = "0x1CF99E8", VA = "0x1CF99E8")]
		public PostprocessCrack(Core Core)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x1CF99F8", Offset = "0x1CF99F8", VA = "0x1CF99F8", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x1CF9C10", Offset = "0x1CF9C10", VA = "0x1CF9C10", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F1")]
	internal class PostprocessExplode : Postprocess
	{
		[Token(Token = "0x170004AC")]
		public override TaskType Type
		{
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0x1CFA23C", Offset = "0x1CFA23C", VA = "0x1CFA23C", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x1CFA234", Offset = "0x1CFA234", VA = "0x1CFA234")]
		public PostprocessExplode(Core Core)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x1CFA244", Offset = "0x1CFA244", VA = "0x1CFA244", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x1CFA394", Offset = "0x1CFA394", VA = "0x1CFA394", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F2")]
	internal class Preprocess : ExploderTask
	{
		[Token(Token = "0x2000561")]
		private struct MeshData
		{
			[Token(Token = "0x400175A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh sharedMesh;

			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material sharedMaterial;

			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject parentObject;

			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject skinnedBakeOriginal;

			[Token(Token = "0x400175F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 centroid;
		}

		[Token(Token = "0x170004AD")]
		public override TaskType Type
		{
			[Token(Token = "0x6001B42")]
			[Address(RVA = "0x1CFAE78", Offset = "0x1CFAE78", VA = "0x1CFAE78", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x1CFADE0", Offset = "0x1CFADE0", VA = "0x1CFADE0")]
		public Preprocess(Core Core)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x1CFAE80", Offset = "0x1CFAE80", VA = "0x1CFAE80", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x1CFAEEC", Offset = "0x1CFAEEC", VA = "0x1CFAEEC", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x1CFB16C", Offset = "0x1CFB16C", VA = "0x1CFB16C")]
		private List<MeshObject> GetMeshList()
		{
			return null;
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x1CFC548", Offset = "0x1CFC548", VA = "0x1CFC548")]
		private List<MeshData> GetMeshData(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x1CFCC3C", Offset = "0x1CFCC3C", VA = "0x1CFCC3C")]
		private float GetDistanceRatio(float distance, float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x1CFC2CC", Offset = "0x1CFC2CC", VA = "0x1CFC2CC")]
		private bool IsInRadius(GameObject o)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F3")]
	public class Example : MonoBehaviour
	{
		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject Exploder;

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x18C0030", Offset = "0x18C0030", VA = "0x18C0030")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x18C00CC", Offset = "0x18C00CC", VA = "0x18C00CC")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x18C00D0", Offset = "0x18C00D0", VA = "0x18C00D0")]
		private void CrackAndExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x18C024C", Offset = "0x18C024C", VA = "0x18C024C")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x18C0300", Offset = "0x18C0300", VA = "0x18C0300")]
		public Example()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class Explodable : MonoBehaviour
	{
		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x18C056C", Offset = "0x18C056C", VA = "0x18C056C")]
		public Explodable()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class ExploderObject : MonoBehaviour
	{
		[Token(Token = "0x2000562")]
		public enum ThreadOptions
		{
			[Token(Token = "0x4001761")]
			WorkerThread1x,
			[Token(Token = "0x4001762")]
			WorkerThread2x,
			[Token(Token = "0x4001763")]
			WorkerThread3x,
			[Token(Token = "0x4001764")]
			Disabled
		}

		[Token(Token = "0x2000563")]
		public enum CuttingStyleOption
		{
			[Token(Token = "0x4001766")]
			Random,
			[Token(Token = "0x4001767")]
			RectangularRandom,
			[Token(Token = "0x4001768")]
			RectangularRegular
		}

		[Token(Token = "0x2000564")]
		public delegate void OnExplosion(float timeMS, ExplosionState state);

		[Token(Token = "0x2000565")]
		public enum ExplosionState
		{
			[Token(Token = "0x400176A")]
			ExplosionStarted,
			[Token(Token = "0x400176B")]
			ExplosionFinished,
			[Token(Token = "0x400176C")]
			ObjectCracked
		}

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Tag;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DontUseTag;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 CubeRadius;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool UseCubeRadius;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 ForceVector;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseForceVector;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float FrameBudget;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int TargetFragments;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ThreadOptions ThreadOption;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool ExplodeSelf;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool DisableRadiusScan;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool HideSelf;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool SplitMeshIslands;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool DisableTriangulation;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int FragmentPoolSize;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool Use2DCollision;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CuttingStyleOption CuttingStyle;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FragmentDeactivation FragmentDeactivation;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FragmentSFX FragmentSFX;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Core core;

		[Token(Token = "0x170004AE")]
		public int ProcessingFrames
		{
			[Token(Token = "0x6001B61")]
			[Address(RVA = "0x18C0D60", Offset = "0x18C0D60", VA = "0x18C0D60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x18BD8C0", Offset = "0x18BD8C0", VA = "0x18BD8C0")]
		public void ExplodeRadius()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x18BC498", Offset = "0x18BC498", VA = "0x18BC498")]
		public void ExplodeRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x18BD614", Offset = "0x18BD614", VA = "0x18BD614")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x18BB648", Offset = "0x18BB648", VA = "0x18BB648")]
		public void ExplodeObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x18C03D4", Offset = "0x18C03D4", VA = "0x18C03D4")]
		public void ExplodeObjects(params GameObject[] objects)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x18C0B90", Offset = "0x18C0B90", VA = "0x18C0B90")]
		public void ExplodeObjects(OnExplosion callback, params GameObject[] objects)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x18C0BC8", Offset = "0x18C0BC8", VA = "0x18C0BC8")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x18C0BE4", Offset = "0x18C0BE4", VA = "0x18C0BE4")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x18C0BFC", Offset = "0x18C0BFC", VA = "0x18C0BFC")]
		public void CrackRadius()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x18C0C04", Offset = "0x18C0C04", VA = "0x18C0C04")]
		public void CrackRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x18C0C3C", Offset = "0x18C0C3C", VA = "0x18C0C3C")]
		public void CrackObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x18C016C", Offset = "0x18C016C", VA = "0x18C016C")]
		public void CrackObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x18C0C44", Offset = "0x18C0C44", VA = "0x18C0C44")]
		public bool CanCrack()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x18C0CE8", Offset = "0x18C0CE8", VA = "0x18C0CE8")]
		public bool IsCracked(GameObject gm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x18C0D0C", Offset = "0x18C0D0C", VA = "0x18C0D0C")]
		public void ExplodeCracked(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x18C0D24", Offset = "0x18C0D24", VA = "0x18C0D24")]
		public void ExplodeCracked(GameObject obj)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x18C02E0", Offset = "0x18C02E0", VA = "0x18C02E0")]
		public void ExplodeCracked(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x18C0D40", Offset = "0x18C0D40", VA = "0x18C0D40")]
		public void ExplodeCracked()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x18C0D7C", Offset = "0x18C0D7C", VA = "0x18C0D7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x18C0E10", Offset = "0x18C0E10", VA = "0x18C0E10")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x18C0FA0", Offset = "0x18C0FA0", VA = "0x18C0FA0")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x18C109C", Offset = "0x18C109C", VA = "0x18C109C")]
		public ExploderObject()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class ExploderOption : MonoBehaviour
	{
		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Plane2D;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color CrossSectionVertexColor;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 CrossSectionUV;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool SplitMeshIslands;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool UseLocalForce;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material FragmentMaterial;

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x18C13E0", Offset = "0x18C13E0", VA = "0x18C13E0")]
		public void DuplicateSettings(ExploderOption options)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x18C1434", Offset = "0x18C1434", VA = "0x18C1434")]
		public ExploderOption()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class Fragment : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Cracked;

		[NonSerialized]
		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool Visible;

		[NonSerialized]
		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool IsActive;

		[NonSerialized]
		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer meshRenderer;

		[NonSerialized]
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshCollider meshCollider;

		[NonSerialized]
		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter meshFilter;

		[NonSerialized]
		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoxCollider boxCollider;

		[NonSerialized]
		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PolygonCollider2D polygonCollider2D;

		[NonSerialized]
		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource audioSource;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject particleChild;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigid2D;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigidBody;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ExploderParams settings;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 originalScale;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float visibilityCheckTimer;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float deactivateTimer;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float emmitersTimeout;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stopEmitOnTimeout;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool collided;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioSource activePlayback;

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x18C2144", Offset = "0x18C2144", VA = "0x18C2144")]
		public bool IsSleeping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x18C21E0", Offset = "0x18C21E0", VA = "0x18C21E0")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x18C227C", Offset = "0x18C227C", VA = "0x18C227C")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x18C2318", Offset = "0x18C2318", VA = "0x18C2318")]
		public void SetConstraints(RigidbodyConstraints constraints)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x18C23BC", Offset = "0x18C23BC", VA = "0x18C23BC")]
		public void InitSFX(FragmentSFX sfx)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x18C2684", Offset = "0x18C2684", VA = "0x18C2684")]
		private void OnCollisionEnter()
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x18C281C", Offset = "0x18C281C", VA = "0x18C281C")]
		public void DisableColliders(bool disable, bool meshColliders, bool physics2d)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x18C2A80", Offset = "0x18C2A80", VA = "0x18C2A80")]
		public void ApplyExplosion(ExploderTransform meshTransform, Vector3 centroid, float force, GameObject original, ExploderParams set)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x18C2EE0", Offset = "0x18C2EE0", VA = "0x18C2EE0")]
		private void ApplyExplosion2D(ExploderTransform meshTransform, Vector3 centroid, float force, GameObject original)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x18C3264", Offset = "0x18C3264", VA = "0x18C3264")]
		public void RefreshComponentsCache()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x18B7D14", Offset = "0x18B7D14", VA = "0x18B7D14")]
		public void Explode(ExploderParams parameters)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x18C33D0", Offset = "0x18C33D0", VA = "0x18C33D0")]
		public void Emit(bool centerToBound)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x18C3554", Offset = "0x18C3554", VA = "0x18C3554")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x18C3750", Offset = "0x18C3750", VA = "0x18C3750")]
		public void AssignMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x18C3838", Offset = "0x18C3838", VA = "0x18C3838")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x18C3864", Offset = "0x18C3864", VA = "0x18C3864")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x18C3E04", Offset = "0x18C3E04", VA = "0x18C3E04")]
		public Fragment()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public enum DeactivateOptions
	{
		[Token(Token = "0x40010E3")]
		Never,
		[Token(Token = "0x40010E4")]
		OutsideOfCamera,
		[Token(Token = "0x40010E5")]
		Timeout
	}
	[Token(Token = "0x20003F9")]
	public enum FadeoutOptions
	{
		[Token(Token = "0x40010E7")]
		None,
		[Token(Token = "0x40010E8")]
		FadeoutAlpha,
		[Token(Token = "0x40010E9")]
		ScaleDown
	}
	[Serializable]
	[Token(Token = "0x20003FA")]
	public class FragmentDeactivation
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DeactivateOptions DeactivateOptions;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float DeactivateTimeout;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FadeoutOptions FadeoutOptions;

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x18C15C4", Offset = "0x18C15C4", VA = "0x18C15C4")]
		public FragmentDeactivation Clone()
		{
			return null;
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x18C129C", Offset = "0x18C129C", VA = "0x18C129C")]
		public FragmentDeactivation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FB")]
	public class FragmentOption
	{
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject FragmentPrefab;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool FreezePositionX;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool FreezePositionY;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool FreezePositionZ;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool FreezeRotationX;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool FreezeRotationY;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool FreezeRotationZ;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Layer;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ExplodeFragments;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxVelocity;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool InheritParentPhysicsProperty;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Mass;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool UseGravity;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool DisableColliders;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool MeshColliders;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float AngularVelocity;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxAngularVelocity;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 AngularVelocityVector;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RandomAngularVelocityVector;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material FragmentMaterial;

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x18C14A4", Offset = "0x18C14A4", VA = "0x18C14A4")]
		public FragmentOption Clone()
		{
			return null;
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x18C12BC", Offset = "0x18C12BC", VA = "0x18C12BC")]
		public FragmentOption()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class FragmentPool : MonoBehaviour
	{
		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FragmentPool instance;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Fragment[] pool;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool meshColliders;

		[Token(Token = "0x170004AF")]
		public static FragmentPool Instance
		{
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x18B5200", Offset = "0x18B5200", VA = "0x18B5200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B0")]
		public int PoolSize
		{
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0x18C402C", Offset = "0x18C402C", VA = "0x18C402C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B1")]
		public Fragment[] Pool
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0x18C4048", Offset = "0x18C4048", VA = "0x18C4048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x18C3E0C", Offset = "0x18C3E0C", VA = "0x18C3E0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x18C3EA4", Offset = "0x18C3EA4", VA = "0x18C3EA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x18C4050", Offset = "0x18C4050", VA = "0x18C4050")]
		public List<Fragment> GetAvailableFragments(int size)
		{
			return null;
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x18C0C78", Offset = "0x18C0C78", VA = "0x18C0C78")]
		public int GetAvailableCrackFragmentsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x18B52EC", Offset = "0x18B52EC", VA = "0x18B52EC")]
		public void Reset(ExploderParams parameters)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x18C43C8", Offset = "0x18C43C8", VA = "0x18C43C8")]
		public void Allocate(int poolSize, bool useMeshColliders, bool use2dCollision)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x18C4CF0", Offset = "0x18C4CF0", VA = "0x18C4CF0")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x18C4DE0", Offset = "0x18C4DE0", VA = "0x18C4DE0")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x18C4E48", Offset = "0x18C4E48", VA = "0x18C4E48")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x18C3F04", Offset = "0x18C3F04", VA = "0x18C3F04")]
		public void DestroyFragments()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x18C4EB0", Offset = "0x18C4EB0", VA = "0x18C4EB0")]
		public void DeactivateFragments()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x18C48B8", Offset = "0x18C48B8", VA = "0x18C48B8")]
		public void SetExplodableFragments(bool explodable, bool dontUseTag)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x18C4A90", Offset = "0x18C4A90", VA = "0x18C4A90")]
		public void SetFragmentPhysicsOptions(FragmentOption options, bool physics2d)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x18C4C44", Offset = "0x18C4C44", VA = "0x18C4C44")]
		public void SetSFXOptions(FragmentSFX sfx)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x18C4F88", Offset = "0x18C4F88", VA = "0x18C4F88")]
		public List<Fragment> GetActiveFragments()
		{
			return null;
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x18C50BC", Offset = "0x18C50BC", VA = "0x18C50BC")]
		public FragmentPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FD")]
	public class FragmentSFX
	{
		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject FragmentEmitter;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ChanceToPlay;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool PlayOnlyOnce;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool MixMultipleSounds;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int EmitersMax;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float ParticleTimeout;

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x18C164C", Offset = "0x18C164C", VA = "0x18C164C")]
		public FragmentSFX Clone()
		{
			return null;
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x18C12AC", Offset = "0x18C12AC", VA = "0x18C12AC")]
		public FragmentSFX()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public static class Profiler
	{
		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, Stopwatch> timeSegments;

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x1CFCCBC", Offset = "0x1CFCCBC", VA = "0x1CFCCBC")]
		public static void Start(string key)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x1CFCDEC", Offset = "0x1CFCDEC", VA = "0x1CFCDEC")]
		public static void End(string key)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x1CFCE7C", Offset = "0x1CFCE7C", VA = "0x1CFCE7C")]
		public static string[] PrintResults()
		{
			return null;
		}
	}
	[Token(Token = "0x20003FF")]
	public class ExploderSlowMotion : MonoBehaviour
	{
		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowMotionTime;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float slowMotionSpeed;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool slowmo;

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x18C17A0", Offset = "0x18C17A0", VA = "0x18C17A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x18C17FC", Offset = "0x18C17FC", VA = "0x18C17FC")]
		public void EnableSlowMotion(bool status)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x18C190C", Offset = "0x18C190C", VA = "0x18C190C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x18C1984", Offset = "0x18C1984", VA = "0x18C1984")]
		public ExploderSlowMotion()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public static class ExploderUtils
	{
		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<MeshRenderer> meshRenderers;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Collider> colliders;

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x18C1D68", Offset = "0x18C1D68", VA = "0x18C1D68")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFCBEF4", Offset = "0xFCBEF4")]
		public static void Assert(bool condition, string message)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x18C1E18", Offset = "0x18C1E18", VA = "0x18C1E18")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFCBF2C", Offset = "0xFCBF2C")]
		public static void Warning(bool condition, string message)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x18C1EC0", Offset = "0x18C1EC0", VA = "0x18C1EC0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xFCBF64", Offset = "0xFCBF64")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x18BEEE8", Offset = "0x18BEEE8", VA = "0x18BEEE8")]
		public static Vector3 GetCentroid(GameObject obj)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x18B7B54", Offset = "0x18B7B54", VA = "0x18B7B54")]
		public static void SetVisible(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x18BD03C", Offset = "0x18BD03C", VA = "0x18BD03C")]
		public static void ClearLog()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x18C1F28", Offset = "0x18C1F28", VA = "0x18C1F28")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x18BB954", Offset = "0x18BB954", VA = "0x18BB954")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x18B7858", Offset = "0x18B7858", VA = "0x18B7858")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x18B7994", Offset = "0x18B7994", VA = "0x18B7994")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x18C1FB8", Offset = "0x18C1FB8", VA = "0x18C1FB8")]
		public static bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x18B65D4", Offset = "0x18B65D4", VA = "0x18B65D4")]
		public static void CopyAudioSource(AudioSource src, AudioSource dst)
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class HUDFPS : MonoBehaviour
	{
		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float accum;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frames;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeleft;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text text;

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x18C50C4", Offset = "0x18C50C4", VA = "0x18C50C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x18C51B0", Offset = "0x18C51B0", VA = "0x18C51B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x18C5338", Offset = "0x18C5338", VA = "0x18C5338")]
		public HUDFPS()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isQuitting;

		[Token(Token = "0x170004B2")]
		public static T Instance
		{
			[Token(Token = "0x6001BAB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAC")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001BAD")]
		public Singleton()
		{
		}
	}
}
namespace Exploder.Utils
{
	[Token(Token = "0x2000403")]
	public static class Compatibility
	{
		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x1CFD134", Offset = "0x1CFD134", VA = "0x1CFD134")]
		public static void SetVisible(GameObject obj, bool status, bool includeInactive)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x1CFD290", Offset = "0x1CFD290", VA = "0x1CFD290")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x1CFD320", Offset = "0x1CFD320", VA = "0x1CFD320")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x1CFD3C0", Offset = "0x1CFD3C0", VA = "0x1CFD3C0")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x1CFD4C4", Offset = "0x1CFD4C4", VA = "0x1CFD4C4")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1CFD5B4", Offset = "0x1CFD5B4", VA = "0x1CFD5B4")]
		public static void Destroy(UnityEngine.Object obj, bool allowDestroyingAssets)
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x1CFD668", Offset = "0x1CFD668", VA = "0x1CFD668")]
		public static void SetCursorVisible(bool status)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x1CFD674", Offset = "0x1CFD674", VA = "0x1CFD674")]
		public static void LockCursor(bool status)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x1CFD688", Offset = "0x1CFD688", VA = "0x1CFD688")]
		public static bool IsCursorLocked()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000404")]
	public class ExploderSingleton : MonoBehaviour
	{
		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xFC24B4", Offset = "0xFC24B4")]
		public static ExploderObject ExploderInstance;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ExploderObject Instance;

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x1CFD6A8", Offset = "0x1CFD6A8", VA = "0x1CFD6A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x1CFD73C", Offset = "0x1CFD73C", VA = "0x1CFD73C")]
		public ExploderSingleton()
		{
		}
	}
	[Token(Token = "0x2000405")]
	internal class Hull2D
	{
		[Serializable]
		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9BCC", Offset = "0xFB9BCC")]
		private sealed class <>c
		{
			[Token(Token = "0x400176D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400176E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__0_0;

			[Token(Token = "0x6002150")]
			[Address(RVA = "0x1CFD9D8", Offset = "0x1CFD9D8", VA = "0x1CFD9D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002151")]
			[Address(RVA = "0x1CFD9E0", Offset = "0x1CFD9E0", VA = "0x1CFD9E0")]
			internal int <Sort>b__0_0(Vector2 value0, Vector2 value1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x1CFD744", Offset = "0x1CFD744", VA = "0x1CFD744")]
		public static void Sort(Vector2[] array)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x1CFD838", Offset = "0x1CFD838", VA = "0x1CFD838")]
		public static void DumpArray(Vector2[] array)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x1CF8C04", Offset = "0x1CF8C04", VA = "0x1CF8C04")]
		public static Vector2[] ChainHull2D(Vector2[] Pnts)
		{
			return null;
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1CFD940", Offset = "0x1CFD940", VA = "0x1CFD940")]
		private static float Hull2DCross(ref Vector2 O, ref Vector2 A, ref Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1CFD968", Offset = "0x1CFD968", VA = "0x1CFD968")]
		public Hull2D()
		{
		}
	}
}
namespace Exploder.Examples
{
	[Token(Token = "0x2000406")]
	public class ExplodeAllObjects : MonoBehaviour
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x18C0308", Offset = "0x18C0308", VA = "0x18C0308")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x18C0388", Offset = "0x18C0388", VA = "0x18C0388")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x18C03E0", Offset = "0x18C03E0", VA = "0x18C03E0")]
		private void ExplodeObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x18C04BC", Offset = "0x18C04BC", VA = "0x18C04BC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x18C0564", Offset = "0x18C0564", VA = "0x18C0564")]
		public ExplodeAllObjects()
		{
		}
	}
}
namespace Exploder.Demo
{
	[Token(Token = "0x2000407")]
	public class DemoClickExplode : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9BDC", Offset = "0xFB9BDC")]
		private sealed class <>c
		{
			[Token(Token = "0x400176F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Explodable, bool> <>9__3_0;

			[Token(Token = "0x4001771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Explodable, GameObject> <>9__3_1;

			[Token(Token = "0x6002153")]
			[Address(RVA = "0x18BBA64", Offset = "0x18BBA64", VA = "0x18BBA64")]
			public <>c()
			{
			}

			[Token(Token = "0x6002154")]
			[Address(RVA = "0x18BBA6C", Offset = "0x18BBA6C", VA = "0x18BBA6C")]
			internal bool <Start>b__3_0(Explodable ex)
			{
				return default(bool);
			}

			[Token(Token = "0x6002155")]
			[Address(RVA = "0x18BBAD4", Offset = "0x18BBAD4", VA = "0x18BBAD4")]
			internal GameObject <Start>b__3_1(Explodable ex)
			{
				return null;
			}
		}

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera Camera;

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x18BB038", Offset = "0x18BB038", VA = "0x18BB038")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x18BB340", Offset = "0x18BB340", VA = "0x18BB340")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x18BB434", Offset = "0x18BB434", VA = "0x18BB434")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x18BB594", Offset = "0x18BB594", VA = "0x18BB594")]
		private void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x18BB728", Offset = "0x18BB728", VA = "0x18BB728")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x18BB72C", Offset = "0x18BB72C", VA = "0x18BB72C")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x18BB630", Offset = "0x18BB630", VA = "0x18BB630")]
		private void ExplodeAfterCrack(GameObject obj)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x18BB730", Offset = "0x18BB730", VA = "0x18BB730")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x18BB9F4", Offset = "0x18BB9F4", VA = "0x18BB9F4")]
		public DemoClickExplode()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class QuickStartDemo : MonoBehaviour
	{
		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject sphereObject;

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x18BD3FC", Offset = "0x18BD3FC", VA = "0x18BD3FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x18BD4A8", Offset = "0x18BD4A8", VA = "0x18BD4A8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x18BD61C", Offset = "0x18BD61C", VA = "0x18BD61C")]
		public QuickStartDemo()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class CursorLocking : MonoBehaviour
	{
		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockCursor;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode LockKey;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode UnlockKey;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsLocked;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CursorLocking instance;

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x18BAE30", Offset = "0x18BAE30", VA = "0x18BAE30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x18BAE88", Offset = "0x18BAE88", VA = "0x18BAE88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x18BAF44", Offset = "0x18BAF44", VA = "0x18BAF44")]
		public static void Lock()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x18BAFBC", Offset = "0x18BAFBC", VA = "0x18BAFBC")]
		public static void Unlock()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x18BB030", Offset = "0x18BB030", VA = "0x18BB030")]
		public CursorLocking()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class ExploderMouseLook : MonoBehaviour
	{
		[Token(Token = "0x2000568")]
		public enum RotationAxes
		{
			[Token(Token = "0x4001773")]
			MouseXAndY,
			[Token(Token = "0x4001774")]
			MouseX,
			[Token(Token = "0x4001775")]
			MouseY
		}

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotationAxes axes;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityX;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityY;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minimumX;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maximumX;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minimumY;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maximumY;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float rotationY;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float kickTimeout;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float kickBackRot;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool kickBack;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationTarget;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Camera mainCamera;

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x18BBAF0", Offset = "0x18BBAF0", VA = "0x18BBAF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x18BBEEC", Offset = "0x18BBEEC", VA = "0x18BBEEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x18BBFAC", Offset = "0x18BBFAC", VA = "0x18BBFAC")]
		public void Kick()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x18BC00C", Offset = "0x18BC00C", VA = "0x18BC00C")]
		public ExploderMouseLook()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class GrenadeController : MonoBehaviour
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip Throw;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource Source;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrenadeObject Grenade;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera MainCamera;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float explodeTimer;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float throwTimer;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool exploding;

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x18BC02C", Offset = "0x18BC02C", VA = "0x18BC02C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x18BC040", Offset = "0x18BC040", VA = "0x18BC040")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x18BC490", Offset = "0x18BC490", VA = "0x18BC490")]
		public GrenadeController()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class GrenadeObject : MonoBehaviour
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Light Flash;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ExplodeFinished;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool Impact;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool throwing;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float explodeTimeoutMax;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool explosionInProgress;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderObject exploder;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int flashing;

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x18BC328", Offset = "0x18BC328", VA = "0x18BC328")]
		public void Throw()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x18BC348", Offset = "0x18BC348", VA = "0x18BC348")]
		public void Explode()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x18BC4D0", Offset = "0x18BC4D0", VA = "0x18BC4D0")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x18BC688", Offset = "0x18BC688", VA = "0x18BC688")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x18BC6A8", Offset = "0x18BC6A8", VA = "0x18BC6A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x18BC750", Offset = "0x18BC750", VA = "0x18BC750")]
		public GrenadeObject()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class MoveController : MonoBehaviour
	{
		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float jumpSpeed;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float gravity;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 moveDirection;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController controller;

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x18BC758", Offset = "0x18BC758", VA = "0x18BC758")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x18BC7B8", Offset = "0x18BC7B8", VA = "0x18BC7B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x18BC998", Offset = "0x18BC998", VA = "0x18BC998")]
		public MoveController()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class PanelChairBomb : UseObject
	{
		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderObject Exploder;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ChairBomb;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Light Flash;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x18BCA24", Offset = "0x18BCA24", VA = "0x18BCA24", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x18BCC30", Offset = "0x18BCC30", VA = "0x18BCC30")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x18BCD8C", Offset = "0x18BCD8C", VA = "0x18BCD8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x18BCDEC", Offset = "0x18BCDEC", VA = "0x18BCDEC")]
		public PanelChairBomb()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class PanelResetScene : UseObject
	{
		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> objectList;

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x18BCE60", Offset = "0x18BCE60", VA = "0x18BCE60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x18BCEF8", Offset = "0x18BCEF8", VA = "0x18BCEF8", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x18BD040", Offset = "0x18BD040", VA = "0x18BD040")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x18BD084", Offset = "0x18BD084", VA = "0x18BD084")]
		public PanelResetScene()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class PanelThrowObject : UseObject
	{
		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ThrowBox;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] ThrowObjects;

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x18BD088", Offset = "0x18BD088", VA = "0x18BD088")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x18BD08C", Offset = "0x18BD08C", VA = "0x18BD08C", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x18BD3F8", Offset = "0x18BD3F8", VA = "0x18BD3F8")]
		public PanelThrowObject()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class RPGController : MonoBehaviour
	{
		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject exploder;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rocket Rocket;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextShotTimeout;

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x18BD624", Offset = "0x18BD624", VA = "0x18BD624")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x18BD6D0", Offset = "0x18BD6D0", VA = "0x18BD6D0")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x18BD7F0", Offset = "0x18BD7F0", VA = "0x18BD7F0")]
		private void OnRocketHit(Vector3 position)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x18BD94C", Offset = "0x18BD94C", VA = "0x18BD94C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x18BDE04", Offset = "0x18BDE04", VA = "0x18BDE04")]
		public RPGController()
		{
		}
	}
	[Token(Token = "0x2000412")]
	internal class RobotScript : MonoBehaviour
	{
		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocity;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float angle;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 center;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPos;

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x18BDE0C", Offset = "0x18BDE0C", VA = "0x18BDE0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x18BDE54", Offset = "0x18BDE54", VA = "0x18BDE54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x18BDEB4", Offset = "0x18BDEB4", VA = "0x18BDEB4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x18BE068", Offset = "0x18BE068", VA = "0x18BE068")]
		public RobotScript()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class Rocket : MonoBehaviour
	{
		[Token(Token = "0x2000569")]
		public delegate void OnHit(Vector3 pos);

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Explosion;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject RocketStatic;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light RocketLight;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RocketVelocity;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnHit HitCallback;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Ray direction;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool launch;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float launchTimeout;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform parent;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 shotPos;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float targetDistance;

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x18BE07C", Offset = "0x18BE07C", VA = "0x18BE07C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x18BD6E8", Offset = "0x18BD6E8", VA = "0x18BD6E8")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x18BD8C8", Offset = "0x18BD8C8", VA = "0x18BD8C8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x18BDBFC", Offset = "0x18BDBFC", VA = "0x18BDBFC")]
		public void Launch(Ray ray)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x18BE130", Offset = "0x18BE130", VA = "0x18BE130")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x18BE8CC", Offset = "0x18BE8CC", VA = "0x18BE8CC")]
		public Rocket()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class ShotgunController : MonoBehaviour
	{
		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Reload;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light Flash;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animation ReloadAnim;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationClip HideAnim;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject MuzzleFlash;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float reloadTimeout;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float nextShotTimeout;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TargetType lastTarget;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject exploder;

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x18BE978", Offset = "0x18BE978", VA = "0x18BE978")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x18BE9E4", Offset = "0x18BE9E4", VA = "0x18BE9E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x18BF24C", Offset = "0x18BF24C", VA = "0x18BF24C")]
		public ShotgunController()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public enum TargetType
	{
		[Token(Token = "0x4001175")]
		DestroyableObject,
		[Token(Token = "0x4001176")]
		UseObject,
		[Token(Token = "0x4001177")]
		Default,
		[Token(Token = "0x4001178")]
		None
	}
	[Token(Token = "0x2000416")]
	public class TargetManager : MonoBehaviour
	{
		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TargetManager instance;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TargetObject;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetType TargetType;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 TargetPosition;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image CrosshairGun;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image CrosshairHand;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text PanelText;

		[Token(Token = "0x170004B3")]
		public static TargetManager Instance
		{
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x18BF25C", Offset = "0x18BF25C", VA = "0x18BF25C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x18BF2AC", Offset = "0x18BF2AC", VA = "0x18BF2AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x18BF304", Offset = "0x18BF304", VA = "0x18BF304")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x18BF3B8", Offset = "0x18BF3B8", VA = "0x18BF3B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x18BFA44", Offset = "0x18BFA44", VA = "0x18BFA44")]
		private bool IsDestroyableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x18BFB4C", Offset = "0x18BFB4C", VA = "0x18BFB4C")]
		private bool IsUseObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x18BFC54", Offset = "0x18BFC54", VA = "0x18BFC54")]
		public TargetManager()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x18BFC5C", Offset = "0x18BFC5C", VA = "0x18BFC5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBF9C", Offset = "0xFCBF9C")]
		private int <Update>b__12_0(RaycastHit a, RaycastHit b)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000417")]
	public class ThrowObject : MonoBehaviour
	{
		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float destroyTimer;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x18BFDE8", Offset = "0x18BFDE8", VA = "0x18BFDE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x18BFDF4", Offset = "0x18BFDF4", VA = "0x18BFDF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x18BFEA4", Offset = "0x18BFEA4", VA = "0x18BFEA4")]
		public ThrowObject()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public abstract class UseObject : MonoBehaviour
	{
		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UseRadius;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string HelperText;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip UseClip;

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x18BCB4C", Offset = "0x18BCB4C", VA = "0x18BCB4C", Slot = "4")]
		public virtual void Use()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x18BFEAC", Offset = "0x18BFEAC", VA = "0x18BFEAC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x18BCDF0", Offset = "0x18BCDF0", VA = "0x18BCDF0")]
		protected UseObject()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class WeaponManager : MonoBehaviour
	{
		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Shotgun;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject RPG;

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x18BFEFC", Offset = "0x18BFEFC", VA = "0x18BFEFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x18C0028", Offset = "0x18C0028", VA = "0x18C0028")]
		public WeaponManager()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB928C", Offset = "0xFB928C")]
	public class DOTweenAnimation : ABSAnimationComponent
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float delay;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float duration;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Ease easeType;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve easeCurve;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LoopType loopType;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int loops;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string id;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool isRelative;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool isFrom;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool isIndependentUpdate;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		public bool autoKill;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool isActive;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public bool isValid;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEngine.Component target;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public DOTweenAnimationType animationType;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public TargetType targetType;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TargetType forcedTargetType;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool autoPlay;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool useTargetAsV3;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float endValueFloat;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector3 endValueV3;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector2 endValueV2;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Color endValueColor;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string endValueString;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Rect endValueRect;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform endValueTransform;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool optionalBool0;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float optionalFloat0;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int optionalInt0;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public RotateMode optionalRotationMode;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ScrambleMode optionalScrambleMode;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string optionalString;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool _tweenCreated;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int _playCount;

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x18357AC", Offset = "0x18357AC", VA = "0x18357AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1836C48", Offset = "0x1836C48", VA = "0x1836C48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x1836C8C", Offset = "0x1836C8C", VA = "0x1836C8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x18357FC", Offset = "0x18357FC", VA = "0x18357FC")]
		public void CreateTween()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x1836E48", Offset = "0x1836E48", VA = "0x1836E48", Slot = "4")]
		public override void DOPlay()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1836EC4", Offset = "0x1836EC4", VA = "0x1836EC4", Slot = "5")]
		public override void DOPlayBackwards()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1836F40", Offset = "0x1836F40", VA = "0x1836F40", Slot = "6")]
		public override void DOPlayForward()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1836FBC", Offset = "0x1836FBC", VA = "0x1836FBC", Slot = "7")]
		public override void DOPause()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1837038", Offset = "0x1837038", VA = "0x1837038", Slot = "8")]
		public override void DOTogglePause()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x18370B4", Offset = "0x18370B4", VA = "0x18370B4", Slot = "9")]
		public override void DORewind()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x18371B0", Offset = "0x18371B0", VA = "0x18371B0", Slot = "10")]
		public override void DORestart(bool fromHere = false)
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x183744C", Offset = "0x183744C", VA = "0x183744C", Slot = "11")]
		public override void DOComplete()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x18374CC", Offset = "0x18374CC", VA = "0x18374CC", Slot = "12")]
		public override void DOKill()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x183755C", Offset = "0x183755C", VA = "0x183755C")]
		public void DOPlayById(string id)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x18375E8", Offset = "0x18375E8", VA = "0x18375E8")]
		public void DOPlayAllById(string id)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x1837650", Offset = "0x1837650", VA = "0x1837650")]
		public void DOPauseAllById(string id)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x18376B8", Offset = "0x18376B8", VA = "0x18376B8")]
		public void DOPlayBackwardsById(string id)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x1837744", Offset = "0x1837744", VA = "0x1837744")]
		public void DOPlayBackwardsAllById(string id)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x18377AC", Offset = "0x18377AC", VA = "0x18377AC")]
		public void DOPlayForwardById(string id)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x1837838", Offset = "0x1837838", VA = "0x1837838")]
		public void DOPlayForwardAllById(string id)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x18378A0", Offset = "0x18378A0", VA = "0x18378A0")]
		public void DOPlayNext()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x18379D4", Offset = "0x18379D4", VA = "0x18379D4")]
		public void DORewindAndPlayNext()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x1837A64", Offset = "0x1837A64", VA = "0x1837A64")]
		public void DORestartById(string id)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x1837B00", Offset = "0x1837B00", VA = "0x1837B00")]
		public void DORestartAllById(string id)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x1837B84", Offset = "0x1837B84", VA = "0x1837B84")]
		public List<Tween> GetTweens()
		{
			return null;
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x1836CD0", Offset = "0x1836CD0", VA = "0x1836CD0")]
		public static TargetType TypeToDOTargetType(Type t)
		{
			return default(TargetType);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x18372A8", Offset = "0x18372A8", VA = "0x18372A8")]
		private void ReEvaluateRelativeTween()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x1837C70", Offset = "0x1837C70", VA = "0x1837C70")]
		public DOTweenAnimation()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x1837E5C", Offset = "0x1837E5C", VA = "0x1837E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBFAC", Offset = "0xFCBFAC")]
		private void <CreateTween>b__37_0()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public static class DOTweenAnimationExtensions
	{
		[Token(Token = "0x6001C2F")]
		public static bool IsSameOrSubclassOf<T>(this UnityEngine.Component t)
		{
			return default(bool);
		}
	}
}
namespace TinyTeam.Debuger
{
	[Token(Token = "0x200041C")]
	public class Console : MonoBehaviour
	{
		[Token(Token = "0x200056A")]
		public enum MessageType
		{
			[Token(Token = "0x4001777")]
			NORMAL,
			[Token(Token = "0x4001778")]
			WARNING,
			[Token(Token = "0x4001779")]
			ERROR,
			[Token(Token = "0x400177A")]
			SYSTEM,
			[Token(Token = "0x400177B")]
			INPUT,
			[Token(Token = "0x400177C")]
			OUTPUT,
			[Token(Token = "0x400177D")]
			UNITY
		}

		[Token(Token = "0x200056B")]
		private struct Message
		{
			[Token(Token = "0x400177E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private string text;

			[Token(Token = "0x400177F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string formatted;

			[Token(Token = "0x4001780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string customType;

			[Token(Token = "0x4001781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MessageType type;

			[Token(Token = "0x4001782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC5788", Offset = "0xFC5788")]
			private Color <color>k__BackingField;

			[Token(Token = "0x4001783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Color defaultColor;

			[Token(Token = "0x4001784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Color warningColor;

			[Token(Token = "0x4001785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Color errorColor;

			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Color systemColor;

			[Token(Token = "0x4001787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Color inputColor;

			[Token(Token = "0x4001788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Color outputColor;

			[Token(Token = "0x4001789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Color unityColor;

			[Token(Token = "0x17000581")]
			public Color color
			{
				[Token(Token = "0x600215A")]
				[Address(RVA = "0x1102D34", Offset = "0x1102D34", VA = "0x1102D34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCD3FC", Offset = "0xFCD3FC")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x600215B")]
				[Address(RVA = "0x1102D40", Offset = "0x1102D40", VA = "0x1102D40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCD40C", Offset = "0xFCD40C")]
				private set
				{
				}
			}

			[Token(Token = "0x600215C")]
			[Address(RVA = "0x1102D4C", Offset = "0x1102D4C", VA = "0x1102D4C")]
			public Message(object messageObject, MessageType messageType, Color displayColor, string customType)
			{
			}

			[Token(Token = "0x600215D")]
			[Address(RVA = "0x1102D5C", Offset = "0x1102D5C", VA = "0x1102D5C")]
			public void Set(object messageObject, MessageType messageType, Color displayColor, string customType)
			{
			}

			[Token(Token = "0x600215E")]
			[Address(RVA = "0x16F352C", Offset = "0x16F352C", VA = "0x16F352C")]
			public static Message Log(object message, string customType)
			{
				return default(Message);
			}

			[Token(Token = "0x600215F")]
			[Address(RVA = "0x16F3934", Offset = "0x16F3934", VA = "0x16F3934")]
			public static Message Log(object message, string customType, Color col)
			{
				return default(Message);
			}

			[Token(Token = "0x6002160")]
			[Address(RVA = "0x16F39E4", Offset = "0x16F39E4", VA = "0x16F39E4")]
			public static Message Log(object message, MessageType messageType)
			{
				return default(Message);
			}

			[Token(Token = "0x6002161")]
			[Address(RVA = "0x16ED0DC", Offset = "0x16ED0DC", VA = "0x16ED0DC")]
			public static Message System(object message)
			{
				return default(Message);
			}

			[Token(Token = "0x6002162")]
			[Address(RVA = "0x16F3DD0", Offset = "0x16F3DD0", VA = "0x16F3DD0")]
			public static Message Warning(object message, string customType)
			{
				return default(Message);
			}

			[Token(Token = "0x6002163")]
			[Address(RVA = "0x16F41A8", Offset = "0x16F41A8", VA = "0x16F41A8")]
			public static Message Error(object message, string customType)
			{
				return default(Message);
			}

			[Token(Token = "0x6002164")]
			[Address(RVA = "0x16F30C4", Offset = "0x16F30C4", VA = "0x16F30C4")]
			public static Message Output(object message)
			{
				return default(Message);
			}

			[Token(Token = "0x6002165")]
			[Address(RVA = "0x16F2FE4", Offset = "0x16F2FE4", VA = "0x16F2FE4")]
			public static Message Input(object message)
			{
				return default(Message);
			}

			[Token(Token = "0x6002166")]
			[Address(RVA = "0x16EDBA0", Offset = "0x16EDBA0", VA = "0x16EDBA0")]
			public static Message Unity(object message, LogType logType)
			{
				return default(Message);
			}

			[Token(Token = "0x6002167")]
			[Address(RVA = "0x1102D64", Offset = "0x1102D64", VA = "0x1102D64", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6002168")]
			[Address(RVA = "0x1102D6C", Offset = "0x1102D6C", VA = "0x1102D6C")]
			public string ToGUIString()
			{
				return null;
			}
		}

		[Token(Token = "0x200056C")]
		private class History
		{
			[Token(Token = "0x400178A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<string> history;

			[Token(Token = "0x400178B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int index;

			[Token(Token = "0x400178C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string current;

			[Token(Token = "0x600216A")]
			[Address(RVA = "0x16F31A4", Offset = "0x16F31A4", VA = "0x16F31A4")]
			public void Add(string item)
			{
			}

			[Token(Token = "0x600216B")]
			[Address(RVA = "0x16EE108", Offset = "0x16EE108", VA = "0x16EE108")]
			public string Fetch(string cur, bool next)
			{
				return null;
			}

			[Token(Token = "0x600216C")]
			[Address(RVA = "0x16F4F5C", Offset = "0x16F4F5C", VA = "0x16F4F5C")]
			public History()
			{
			}
		}

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9BEC", Offset = "0xFB9BEC")]
		private sealed class <>c__DisplayClass70_0
		{
			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string cached;

			[Token(Token = "0x600216D")]
			[Address(RVA = "0x16F2474", Offset = "0x16F2474", VA = "0x16F2474")]
			public <>c__DisplayClass70_0()
			{
			}

			[Token(Token = "0x600216E")]
			[Address(RVA = "0x16F5278", Offset = "0x16F5278", VA = "0x16F5278")]
			internal void <CMDSetOutputToUnityMsgType>b__0(string str)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFB9BFC", Offset = "0xFB9BFC")]
		private sealed class <>c
		{
			[Token(Token = "0x400178E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400178F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Texture> <>9__72_0;

			[Token(Token = "0x4001790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<AudioClip> <>9__72_1;

			[Token(Token = "0x4001791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, DateTime> <>9__103_0;

			[Token(Token = "0x6002170")]
			[Address(RVA = "0x16F5168", Offset = "0x16F5168", VA = "0x16F5168")]
			public <>c()
			{
			}

			[Token(Token = "0x6002171")]
			[Address(RVA = "0x16F5170", Offset = "0x16F5170", VA = "0x16F5170")]
			internal int <CMDShowMemory>b__72_0(Texture a, Texture b)
			{
				return default(int);
			}

			[Token(Token = "0x6002172")]
			[Address(RVA = "0x16F51BC", Offset = "0x16F51BC", VA = "0x16F51BC")]
			internal int <CMDShowMemory>b__72_1(AudioClip a, AudioClip b)
			{
				return default(int);
			}

			[Token(Token = "0x6002173")]
			[Address(RVA = "0x16F5208", Offset = "0x16F5208", VA = "0x16F5208")]
			internal DateTime <get_logFolder>b__103_0(string ss)
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInit;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Console _instance;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static object _lock;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool applicationIsQuitting;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_isOpen;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isNeedBindUnityLog;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float preOpenTime;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action delegateInitEventSystem;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<Console> delegateInitCMD;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject ui_root_obj;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text text_content;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ScrollRect sr_content;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputField input;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text text_pageCount;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject ui_fps_root;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text text_fps;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal bool isNeedRefreshContent;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int maxLinesForDisplay;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int maxLinesForAsyncRecord;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int beginMsgIndex;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int endMsgIndex;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int maxMsgCount;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool needAutoToMax;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int currentShowMessageType;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string currentShowMessageCustom;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int fpsMode;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FPSCounter fps;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MemoryCounter memoryCounter;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<string, Func<string[], object>> _cmdTable;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<string, string> _cmdTableDiscribes;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<string> _outputToUnityMsgType;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Queue<Message> _messages;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<string, Queue<Message>> customQueueMessages;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private History _history;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Queue<string> LogQueue;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private object thisLock;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Thread logThread;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string _currentAsyncLogFilePath;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int asyncWriteCounter;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool isAsyncWritingLog;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private string _logBuff;

		[Token(Token = "0x170004B4")]
		public static Console Instance
		{
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x16EB828", Offset = "0x16EB828", VA = "0x16EB828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B5")]
		public bool IsOpen
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x16EBCF8", Offset = "0x16EBCF8", VA = "0x16EBCF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x16EBD00", Offset = "0x16EBD00", VA = "0x16EBD00")]
			set
			{
			}
		}

		[Token(Token = "0x170004B6")]
		private int currentPersent
		{
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0x16EFDA8", Offset = "0x16EFDA8", VA = "0x16EFDA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B7")]
		public string currentAsyncLogFilePath
		{
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0x16F4710", Offset = "0x16F4710", VA = "0x16F4710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B8")]
		private string logFolder
		{
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0x16F4718", Offset = "0x16F4718", VA = "0x16F4718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B9")]
		private string logPath
		{
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0x16F4960", Offset = "0x16F4960", VA = "0x16F4960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		private string logBuff
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x16F4A40", Offset = "0x16F4A40", VA = "0x16F4A40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x16EBBD4", Offset = "0x16EBBD4", VA = "0x16EBBD4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x16EC374", Offset = "0x16EC374", VA = "0x16EC374")]
		private static Queue<Message> FindCustomQueue(string customType)
		{
			return null;
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x16EC4E0", Offset = "0x16EC4E0", VA = "0x16EC4E0")]
		private static Message CreateNew(object messageObject, MessageType messageType, Color displayColor, string customType)
		{
			return default(Message);
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x16EC9E4", Offset = "0x16EC9E4", VA = "0x16EC9E4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x16ED4E4", Offset = "0x16ED4E4", VA = "0x16ED4E4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x16ED590", Offset = "0x16ED590", VA = "0x16ED590")]
		public void HandleUnityLog(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x16EDDBC", Offset = "0x16EDDBC", VA = "0x16EDDBC")]
		private void UpdateKeyCode()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x16EE290", Offset = "0x16EE290", VA = "0x16EE290")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x16EDD14", Offset = "0x16EDD14", VA = "0x16EDD14")]
		private static string ColorToHex(Color32 color)
		{
			return null;
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x16EEAEC", Offset = "0x16EEAEC", VA = "0x16EEAEC")]
		private static Color HexToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x16EEBA8", Offset = "0x16EEBA8", VA = "0x16EEBA8")]
		private void InitEventSystem()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x16EC140", Offset = "0x16EC140", VA = "0x16EC140")]
		private void DrawWindow(bool isHide)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x16EECA4", Offset = "0x16EECA4", VA = "0x16EECA4")]
		private void InitBlackground(GameObject windows)
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x16EEEAC", Offset = "0x16EEEAC", VA = "0x16EEEAC")]
		private void InitScrollView(GameObject windows)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x16EF150", Offset = "0x16EF150", VA = "0x16EF150")]
		private void InitScrollContent(GameObject scrollView)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x16EF4A0", Offset = "0x16EF4A0", VA = "0x16EF4A0")]
		private void InitInput(GameObject windows)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x16EE980", Offset = "0x16EE980", VA = "0x16EE980")]
		private void DrawingContent()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x16F0AE4", Offset = "0x16F0AE4", VA = "0x16F0AE4")]
		private void DrawFPS()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x16F0EE0", Offset = "0x16F0EE0", VA = "0x16F0EE0")]
		private object CMDClose(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x16F0F38", Offset = "0x16F0F38", VA = "0x16F0F38")]
		private object CMDClear(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x16F1038", Offset = "0x16F1038", VA = "0x16F1038")]
		private object CMDHelp(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x16F1238", Offset = "0x16F1238", VA = "0x16F1238")]
		private object CMDSystemInfo(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x16F1DF8", Offset = "0x16F1DF8", VA = "0x16F1DF8")]
		private object CMDShowMessageType(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x16F1F4C", Offset = "0x16F1F4C", VA = "0x16F1F4C")]
		private object CMDShowCustomMessage(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x16F2004", Offset = "0x16F2004", VA = "0x16F2004")]
		private object CMDShowNetMessage(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x16F2120", Offset = "0x16F2120", VA = "0x16F2120")]
		private object CMDShowAssetManagerMessage(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x16F223C", Offset = "0x16F223C", VA = "0x16F223C")]
		private object CMDSetOutputToUnityMsgType(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x16F247C", Offset = "0x16F247C", VA = "0x16F247C")]
		private object CMDShowFPS(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x16F25B8", Offset = "0x16F25B8", VA = "0x16F25B8")]
		private object CMDShowMemory(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x16F2B70", Offset = "0x16F2B70", VA = "0x16F2B70")]
		private object CMDStartAsyncLoging(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x16ED1BC", Offset = "0x16ED1BC", VA = "0x16ED1BC")]
		private void LogMessage(Message msg)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x16F0F8C", Offset = "0x16F0F8C", VA = "0x16F0F8C")]
		private void ClearLog()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x16EBFCC", Offset = "0x16EBFCC", VA = "0x16EBFCC")]
		private int CaculateCurrentMaxMsgCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x16ED238", Offset = "0x16ED238", VA = "0x16ED238")]
		private void RegisterCommandCallback(string commandString, Func<string[], object> commandCallback, string CMD_Discribes)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x16F2CA4", Offset = "0x16F2CA4", VA = "0x16F2CA4")]
		private void UnRegisterCommandCallback(string commandString)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x16F2DF8", Offset = "0x16F2DF8", VA = "0x16F2DF8")]
		private void EvalInputString(string inputString)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x16F3220", Offset = "0x16F3220", VA = "0x16F3220")]
		public void ExecCMDInputString(string inputCMD)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x16F3224", Offset = "0x16F3224", VA = "0x16F3224")]
		internal static object Log(object message, string customType)
		{
			return null;
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x16F35FC", Offset = "0x16F35FC", VA = "0x16F35FC")]
		internal static object Log(object message, string customType, Color col)
		{
			return null;
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x16F1CC0", Offset = "0x16F1CC0", VA = "0x16F1CC0")]
		internal static object Log(object message, MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x16F3AC8", Offset = "0x16F3AC8", VA = "0x16F3AC8")]
		internal static object LogWarning(object message, string customType)
		{
			return null;
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x16F3EA0", Offset = "0x16F3EA0", VA = "0x16F3EA0")]
		internal static object LogError(object message, string customType)
		{
			return null;
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x16F4278", Offset = "0x16F4278", VA = "0x16F4278")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x16F4344", Offset = "0x16F4344", VA = "0x16F4344")]
		public static void RegisterCommand(string commandString, Func<string[], object> commandCallback, string CMD_Discribes)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x16F4440", Offset = "0x16F4440", VA = "0x16F4440")]
		public static void UnRegisterCommand(string commandString)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x16F4520", Offset = "0x16F4520", VA = "0x16F4520")]
		private void ProcessInput(string cmd)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x16EE1EC", Offset = "0x16EE1EC", VA = "0x16EE1EC")]
		private void AddPage(int val)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x16EFE60", Offset = "0x16EFE60", VA = "0x16EFE60")]
		private List<Message> GetAllCurrentTypeMessages()
		{
			return null;
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x16EC020", Offset = "0x16EC020", VA = "0x16EC020")]
		private int FindBeginMsgIndexFromEnd()
		{
			return default(int);
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x16F45F0", Offset = "0x16F45F0", VA = "0x16F45F0")]
		private int FindEndMsgIndexFromBegin()
		{
			return default(int);
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x16ED3D4", Offset = "0x16ED3D4", VA = "0x16ED3D4")]
		internal void StartAsyncWriteLog()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x16EBC74", Offset = "0x16EBC74", VA = "0x16EBC74")]
		internal void StopAsyncWriteLog()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x16EE454", Offset = "0x16EE454", VA = "0x16EE454")]
		internal void CreateNewLogFile()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x16F2BD8", Offset = "0x16F2BD8", VA = "0x16F2BD8")]
		private void AddToAsyncWriteBuff(string text)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x16F4BD8", Offset = "0x16F4BD8", VA = "0x16F4BD8")]
		private void RunningAsyncWritingLog()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x16F4D7C", Offset = "0x16F4D7C", VA = "0x16F4D7C")]
		public Console()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x16F50FC", Offset = "0x16F50FC", VA = "0x16F50FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBFCC", Offset = "0xFCBFCC")]
		private void <Init>b__45_0(Scene scene, LoadSceneMode mode)
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class FPSCounter
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float current;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float updateInterval;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float accum;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int frames;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timeleft;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float delta;

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x16ED08C", Offset = "0x16ED08C", VA = "0x16ED08C")]
		public FPSCounter()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x16EE584", Offset = "0x16EE584", VA = "0x16EE584")]
		public bool Update()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200041E")]
	public class MemoryCounter
	{
		[Token(Token = "0x40011D8")]
		public const float MEMORY_DIVIDER = 9.536743E-07f;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float preTime;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float interval;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long totalReserved;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long allocated;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long monoMemory;

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x16EE614", Offset = "0x16EE614", VA = "0x16EE614")]
		public bool Update(int updateInterval)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x16EE6CC", Offset = "0x16EE6CC", VA = "0x16EE6CC")]
		public new string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x16ED0C8", Offset = "0x16ED0C8", VA = "0x16ED0C8")]
		public MemoryCounter()
		{
		}
	}
}
namespace VRNetLib.UnityBind
{
	[Token(Token = "0x200041F")]
	public class UnityDebug : IDebuger
	{
		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isConsole;

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x16FDAFC", Offset = "0x16FDAFC", VA = "0x16FDAFC", Slot = "4")]
		public void Log(object message)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x16FDB64", Offset = "0x16FDB64", VA = "0x16FDB64", Slot = "5")]
		public void LogError(object message)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x16FDBCC", Offset = "0x16FDBCC", VA = "0x16FDBCC", Slot = "6")]
		public void LogWarning(object message)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x16FDC34", Offset = "0x16FDC34", VA = "0x16FDC34")]
		public UnityDebug()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class TcpSocket : ISocket
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ISocket socket;

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x16F8B50", Offset = "0x16F8B50", VA = "0x16F8B50", Slot = "6")]
		public void Close()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x16F8C0C", Offset = "0x16F8C0C", VA = "0x16F8C0C", Slot = "5")]
		public void Connect(IPEndPoint localEndPoint, IPEndPoint serverEndPoint, params IPEndPoint[] ipArgs)
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x16F8CF8", Offset = "0x16F8CF8", VA = "0x16F8CF8", Slot = "4")]
		public void Init(dSocketReceiveHandle receiveCallback, bool isServer, params object[] args)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x16F8E18", Offset = "0x16F8E18", VA = "0x16F8E18", Slot = "8")]
		public bool IsConnect(IPEndPoint ipInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x16F8EDC", Offset = "0x16F8EDC", VA = "0x16F8EDC", Slot = "7")]
		public void Send(IPEndPoint ipInfo, BytesPackage messageBytes, bool isReliable = false)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x16F8FC8", Offset = "0x16F8FC8", VA = "0x16F8FC8", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x16F9084", Offset = "0x16F9084", VA = "0x16F9084")]
		public TcpSocket()
		{
		}
	}
	[Token(Token = "0x2000421")]
	internal class TcpListenerSocket : ISocket
	{
		[Token(Token = "0x200056F")]
		public class ClientCell : IDisposable
		{
			[Token(Token = "0x4001792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Socket socket;

			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MemoryStream memoryStream;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long lastTimer;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public byte[] buffer;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] buffer2;

			[Token(Token = "0x6002174")]
			[Address(RVA = "0x16F7564", Offset = "0x16F7564", VA = "0x16F7564")]
			public ClientCell(Socket _socket)
			{
			}

			[Token(Token = "0x6002175")]
			[Address(RVA = "0x16F6EF0", Offset = "0x16F6EF0", VA = "0x16F6EF0", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002176")]
			[Address(RVA = "0x16F8098", Offset = "0x16F8098", VA = "0x16F8098")]
			public void UpdateLastTimer()
			{
			}

			[Token(Token = "0x6002177")]
			[Address(RVA = "0x16F8104", Offset = "0x16F8104", VA = "0x16F8104")]
			public long RemainingBytes()
			{
				return default(long);
			}

			[Token(Token = "0x6002178")]
			[Address(RVA = "0x16F8158", Offset = "0x16F8158", VA = "0x16F8158")]
			public void Resize()
			{
			}
		}

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Socket mListener;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private dSocketReceiveHandle mReceiveCallback;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint mLocalEndPoint;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IPEndPoint[] mClientIPEndPonit;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ConcurrentDictionary<IPEndPoint, ClientCell> mClientDic;

		[Token(Token = "0x40011E5")]
		private const int MAX_READ = 2048;

		[Token(Token = "0x40011E6")]
		private const int MIN_HEAD_LENGTH = 2;

		[Token(Token = "0x40011E7")]
		private const int TIMEOUT = 5000;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool IsClose;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly long epoch;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<IPEndPoint> delList;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private long checkTimer;

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x16F6B0C", Offset = "0x16F6B0C", VA = "0x16F6B0C")]
		private static long NowSeconds()
		{
			return default(long);
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x16F6BE4", Offset = "0x16F6BE4", VA = "0x16F6BE4", Slot = "6")]
		public void Close()
		{
		}

		[Token(Token = "0x6001C84")]
		private bool Check<T>(T[] array, T itam)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x16F6F34", Offset = "0x16F6F34", VA = "0x16F6F34", Slot = "5")]
		public void Connect(IPEndPoint localEndPoint, IPEndPoint serverEndPoint, params IPEndPoint[] ipArgs)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x16F71E8", Offset = "0x16F71E8", VA = "0x16F71E8")]
		private void OnAcceptTcpClientCallback(IAsyncResult ar)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x16F7398", Offset = "0x16F7398", VA = "0x16F7398")]
		private void AddClient(Socket client)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x16F7708", Offset = "0x16F7708", VA = "0x16F7708")]
		private void RemoveClient(IPEndPoint endPoint)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x16F77CC", Offset = "0x16F77CC", VA = "0x16F77CC")]
		private void mOnRead(IAsyncResult asr)
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x16F8244", Offset = "0x16F8244", VA = "0x16F8244")]
		public bool IsConnect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x16F8254", Offset = "0x16F8254", VA = "0x16F8254", Slot = "4")]
		public void Init(dSocketReceiveHandle receiveCallback, bool isServer, params object[] args)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x16F82DC", Offset = "0x16F82DC", VA = "0x16F82DC", Slot = "7")]
		public void Send(IPEndPoint ipInfo, BytesPackage messageBytes, bool isReliable = false)
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x16F85F4", Offset = "0x16F85F4", VA = "0x16F85F4")]
		private void CheckTimeOut()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x16F89D4", Offset = "0x16F89D4", VA = "0x16F89D4", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x16F89D8", Offset = "0x16F89D8", VA = "0x16F89D8", Slot = "8")]
		public bool IsConnect(IPEndPoint ipInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x16F8A40", Offset = "0x16F8A40", VA = "0x16F8A40")]
		public TcpListenerSocket()
		{
		}
	}
	[Token(Token = "0x2000422")]
	internal class TcpClientSocket : ISocket
	{
		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Socket mClient;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private dSocketReceiveHandle mReceiveCallback;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint mRemoteEndPoint;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IPEndPoint mlocalEndPoint;

		[Token(Token = "0x40011F0")]
		private const int MAX_READ = 2048;

		[Token(Token = "0x40011F1")]
		private const int MIN_HEAD_LENGTH = 2;

		[Token(Token = "0x40011F2")]
		private const int TIMEOUT = 5000;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MemoryStream memoryStream;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte[] buffer;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte[] buffer2;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool IsClose;

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x16F5580", Offset = "0x16F5580", VA = "0x16F5580", Slot = "6")]
		public void Close()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x16F5674", Offset = "0x16F5674", VA = "0x16F5674", Slot = "5")]
		public void Connect(IPEndPoint localEndPoint, IPEndPoint serverEndPoint, params IPEndPoint[] ipArgs)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x16F59A4", Offset = "0x16F59A4", VA = "0x16F59A4")]
		private void ReConnect()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x16F5B04", Offset = "0x16F5B04", VA = "0x16F5B04")]
		private void mOnConnect(IAsyncResult asr)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x16F5D80", Offset = "0x16F5D80", VA = "0x16F5D80")]
		private long mRemainingBytes()
		{
			return default(long);
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x16F5DD4", Offset = "0x16F5DD4", VA = "0x16F5DD4")]
		private void mOnRead(IAsyncResult asr)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x16F6314", Offset = "0x16F6314", VA = "0x16F6314")]
		private void OnReceive(byte[] bytes, int index, int length)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x16F65DC", Offset = "0x16F65DC", VA = "0x16F65DC")]
		public bool IsConnect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x16F65FC", Offset = "0x16F65FC", VA = "0x16F65FC", Slot = "4")]
		public void Init(dSocketReceiveHandle receiveCallback, bool isServer, params object[] args)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x16F6684", Offset = "0x16F6684", VA = "0x16F6684", Slot = "7")]
		public void Send(IPEndPoint ipInfo, BytesPackage messageBytes, bool isReliable = false)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x16F6A30", Offset = "0x16F6A30", VA = "0x16F6A30", Slot = "8")]
		public bool IsConnect(IPEndPoint ipInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x16F6A50", Offset = "0x16F6A50", VA = "0x16F6A50", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x16F6A54", Offset = "0x16F6A54", VA = "0x16F6A54")]
		public TcpClientSocket()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class UNetSocket : ISocket
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private dSocketReceiveHandle mReceiveCallback;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HostTopology topology;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte RELIABLE_BYTE_ID;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private byte UNRELIABLE_BYTE_ID;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool isServer;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool isEnable;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int mServerHostId;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int mClientHostId;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int mClientId;

		[Token(Token = "0x4001200")]
		private const ushort FIXED_BUFFER_SIZE = 1470;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BytesPackage receivebuffer;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int r_recHostId;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int r_connectionId;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int r_channelId;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int r_dataSize;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private byte r_error;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private NetworkEventType r_networkEvent;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ConcurrentDictionary<IPEndPoint, int> ipTocidDic;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ConcurrentDictionary<int, IPEndPoint> cidToipDic;

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x16F908C", Offset = "0x16F908C", VA = "0x16F908C")]
		private void LogNetworkError(byte error)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x16F9148", Offset = "0x16F9148", VA = "0x16F9148", Slot = "6")]
		public void Close()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x16F9260", Offset = "0x16F9260", VA = "0x16F9260", Slot = "5")]
		public void Connect(IPEndPoint localEndPoint, IPEndPoint serverEndPoint, params IPEndPoint[] ipArgs)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x16F9548", Offset = "0x16F9548", VA = "0x16F9548", Slot = "4")]
		public void Init(dSocketReceiveHandle receiveCallback, bool isServer, params object[] args)
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x16F95D4", Offset = "0x16F95D4", VA = "0x16F95D4", Slot = "8")]
		public bool IsConnect(IPEndPoint ipInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x16F95DC", Offset = "0x16F95DC", VA = "0x16F95DC", Slot = "7")]
		public void Send(IPEndPoint ipInfo, BytesPackage messageBytes, bool isReliable)
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x16F97D8", Offset = "0x16F97D8", VA = "0x16F97D8", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x16F9EA0", Offset = "0x16F9EA0", VA = "0x16F9EA0")]
		private IPEndPoint GetIP(int hostId, int connectionId)
		{
			return null;
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x16F9FC8", Offset = "0x16F9FC8", VA = "0x16F9FC8")]
		private void SetIpToCId(IPEndPoint iPEndPoint, int connectionId)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x16FA0A8", Offset = "0x16FA0A8", VA = "0x16FA0A8")]
		private void RemoveIpToCId(int connectionId)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x16F9750", Offset = "0x16F9750", VA = "0x16F9750")]
		private int GetCId(IPEndPoint iPEndPoint)
		{
			return default(int);
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x16FA180", Offset = "0x16FA180", VA = "0x16FA180")]
		public UNetSocket()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class UTransportSocket : ISocket
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ISocket socket;

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x16FA24C", Offset = "0x16FA24C", VA = "0x16FA24C", Slot = "6")]
		public void Close()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x16FA308", Offset = "0x16FA308", VA = "0x16FA308", Slot = "5")]
		public void Connect(IPEndPoint localEndPoint, IPEndPoint serverEndPoint, params IPEndPoint[] ipArgs)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x16FA3F4", Offset = "0x16FA3F4", VA = "0x16FA3F4", Slot = "4")]
		public void Init(dSocketReceiveHandle receiveCallback, bool isServer, params object[] args)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x16FA518", Offset = "0x16FA518", VA = "0x16FA518", Slot = "8")]
		public bool IsConnect(IPEndPoint ipInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x16FA5EC", Offset = "0x16FA5EC", VA = "0x16FA5EC", Slot = "7")]
		public void Send(IPEndPoint ipInfo, BytesPackage messageBytes, bool isReliable = false)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x16FA6D8", Offset = "0x16FA6D8", VA = "0x16FA6D8", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x16FA794", Offset = "0x16FA794", VA = "0x16FA794")]
		public UTransportSocket()
		{
		}
	}
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xFB92D4", Offset = "0xFB92D4")]
	public struct BlitableArray<T> : IDisposable where T : struct
	{
		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private unsafe void* m_Buffer;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Allocator m_AllocatorLabel;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFC24EC", Offset = "0xFC24EC")]
		private int <Length>k__BackingField;

		[Token(Token = "0x170004BB")]
		public int Length
		{
			[Token(Token = "0x6001CB2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBFDC", Offset = "0xFCBFDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CB3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xFCBFEC", Offset = "0xFCBFEC")]
			private set
			{
			}
		}

		[Token(Token = "0x170004BC")]
		public T Item
		{
			[Token(Token = "0x6001CB7")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001CB8")]
			set
			{
			}
		}

		[Token(Token = "0x6001CB4")]
		public BlitableArray(T[] array, Allocator allocator)
		{
		}

		[Token(Token = "0x6001CB5")]
		public BlitableArray(NativeArray<T> array, Allocator allocator)
		{
		}

		[Token(Token = "0x6001CB6")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001CB9")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6001CBA")]
		public NativeArray<T> ToNativeArray(Allocator allocator = Allocator.Temp)
		{
			return default(NativeArray<T>);
		}

		[Token(Token = "0x6001CBB")]
		public void CopyTo(T[] array)
		{
		}

		[Token(Token = "0x6001CBC")]
		public void CopyTo(ref NativeArray<T> array)
		{
		}

		[Token(Token = "0x6001CBD")]
		public void CopyFrom(T[] array)
		{
		}

		[Token(Token = "0x6001CBE")]
		public void CopyFrom(NativeArray<T> array)
		{
		}
	}
	[Token(Token = "0x2000426")]
	public struct UTransportReceiveMessageData
	{
		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NetworkConnection connection;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BlitableArray<byte> buffer;
	}
	[Token(Token = "0x2000427")]
	public struct UTransportSendMessageData
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NetworkConnection connection;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public NetworkPipeline networkPipeline;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BlitableArray<byte> buffer;
	}
	[Token(Token = "0x2000428")]
	public struct UTransportSendMessageData_Raw
	{
		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IPEndPoint ipInfo;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BytesPackage messageBytes;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isReliable;
	}
	[Token(Token = "0x2000429")]
	public class UTransportSocketClient : ISocket
	{
		[Token(Token = "0x2000570")]
		private struct ClientSendMessagesJob : IJob
		{
			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkDriver driver;

			[Token(Token = "0x4001798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
			public NativeQueue<UTransportSendMessageData> sendDatas;

			[Token(Token = "0x6002179")]
			[Address(RVA = "0x1102DB8", Offset = "0x1102DB8", VA = "0x1102DB8", Slot = "4")]
			public void Execute()
			{
			}
		}

		[Token(Token = "0x2000571")]
		private struct ClientReceiveMessageJob : IJob
		{
			[Token(Token = "0x4001799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkDriver driver;

			[Token(Token = "0x400179A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
			public NativeArray<NetworkConnection> connection;

			[Token(Token = "0x400179B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
			public NativeQueue<UTransportReceiveMessageData>.ParallelWriter datas;

			[Token(Token = "0x400179C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
			public NativeArray<bool> isConnect;

			[Token(Token = "0x600217A")]
			[Address(RVA = "0x1102DB0", Offset = "0x1102DB0", VA = "0x1102DB0", Slot = "4")]
			public void Execute()
			{
			}
		}

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NetworkDriver m_Driver;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private NativeArray<NetworkConnection> m_Connection;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private NativeQueue<UTransportReceiveMessageData> receiveDatas;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private NativeQueue<UTransportSendMessageData> sendDatas;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Queue<UTransportSendMessageData_Raw> sendDatas_raw;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private NetworkPipeline pipeline_ReliableSequenced;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private NetworkPipeline pipeline_UnReliableSequenced;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private NativeArray<bool> isConnect;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private IPEndPoint mLocalEndPoint;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private IPEndPoint mServerEndPoint;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private NetworkEndPoint nep_local;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private NetworkEndPoint nep_server;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private JobHandle ClientJobHandle;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private dSocketReceiveHandle mReceiveCallback;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private bool mIsServer;

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x16FA79C", Offset = "0x16FA79C", VA = "0x16FA79C", Slot = "6")]
		public void Close()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x16FA920", Offset = "0x16FA920", VA = "0x16FA920", Slot = "5")]
		public void Connect(IPEndPoint localEndPoint, IPEndPoint serverEndPoint, params IPEndPoint[] ipArgs)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x16FAD80", Offset = "0x16FAD80", VA = "0x16FAD80", Slot = "4")]
		public void Init(dSocketReceiveHandle receiveCallback, bool isServer, params object[] args)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x16FAE0C", Offset = "0x16FAE0C", VA = "0x16FAE0C", Slot = "8")]
		public bool IsConnect(IPEndPoint ipInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x16FAE80", Offset = "0x16FAE80", VA = "0x16FAE80", Slot = "7")]
		public void Send(IPEndPoint ipInfo, BytesPackage messageBytes, bool isReliable = false)
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x16FAF58", Offset = "0x16FAF58", VA = "0x16FAF58", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x16FA510", Offset = "0x16FA510", VA = "0x16FA510")]
		public UTransportSocketClient()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class UTransportSocketServer : ISocket
	{
		[Token(Token = "0x2000572")]
		private struct ServerSendMessagesJob : IJob
		{
			[Token(Token = "0x400179D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkDriver.Concurrent driver;

			[Token(Token = "0x400179E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			public NativeQueue<UTransportSendMessageData> sendDatas;

			[Token(Token = "0x600217B")]
			[Address(RVA = "0x1102DC8", Offset = "0x1102DC8", VA = "0x1102DC8", Slot = "4")]
			public void Execute()
			{
			}
		}

		[Token(Token = "0x2000573")]
		private struct ServerUpdateConnectionsJob : IJob
		{
			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkDriver driver;

			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
			public NativeList<NetworkConnection> connections;

			[Token(Token = "0x600217C")]
			[Address(RVA = "0x1102DD0", Offset = "0x1102DD0", VA = "0x1102DD0", Slot = "4")]
			public void Execute()
			{
			}
		}

		[Token(Token = "0x2000574")]
		private struct ReceiveMessagesJob : IJobParallelForDefer
		{
			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkDriver.Concurrent driver;

			[Token(Token = "0x40017A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			public NativeArray<NetworkConnection> connections;

			[Token(Token = "0x40017A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			public NativeQueue<UTransportReceiveMessageData>.ParallelWriter datas;

			[Token(Token = "0x600217D")]
			[Address(RVA = "0x1102DC0", Offset = "0x1102DC0", VA = "0x1102DC0", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NetworkDriver m_Driver;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public NativeList<NetworkConnection> m_Connections;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public NetworkPipeline m_Pipeline_ReliableSequenced;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public NetworkPipeline m_Pipeline_UnReliableSequenced;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private JobHandle ServerJobHandle;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private dSocketReceiveHandle mReceiveCallback;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private bool mIsServer;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private NativeQueue<UTransportReceiveMessageData> receiveDatas;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private Queue<UTransportSendMessageData_Raw> sendDatas_raw;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private NativeQueue<UTransportSendMessageData> sendDatas;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private NetworkEndPoint local_NetworkEndPoint;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Dictionary<IPEndPoint, NetworkEndPoint> clientIpDic;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private List<KeyValuePair<NetworkEndPoint, IPEndPoint>> clientNetworkEndPointToIp;

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x16FB808", Offset = "0x16FB808", VA = "0x16FB808", Slot = "6")]
		public void Close()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x16FBA48", Offset = "0x16FBA48", VA = "0x16FBA48", Slot = "5")]
		public void Connect(IPEndPoint localEndPoint, IPEndPoint serverEndPoint, params IPEndPoint[] ipArgs)
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x16FC0B0", Offset = "0x16FC0B0", VA = "0x16FC0B0", Slot = "4")]
		public void Init(dSocketReceiveHandle receiveCallback, bool isServer, params object[] args)
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x16FC13C", Offset = "0x16FC13C", VA = "0x16FC13C", Slot = "8")]
		public bool IsConnect(IPEndPoint ipInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x16FC144", Offset = "0x16FC144", VA = "0x16FC144", Slot = "7")]
		public void Send(IPEndPoint ipInfo, BytesPackage messageBytes, bool isReliable = false)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x16FC21C", Offset = "0x16FC21C", VA = "0x16FC21C")]
		public IPEndPoint GetIp(NetworkEndPoint networkEndPoint)
		{
			return null;
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x16FC340", Offset = "0x16FC340", VA = "0x16FC340")]
		public NetworkEndPoint GetNetworkEndPoint(NetworkConnection networkConnection)
		{
			return default(NetworkEndPoint);
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x16FC34C", Offset = "0x16FC34C", VA = "0x16FC34C")]
		public bool TryGetNetworkEndPoint(IPEndPoint iPEndPoint, out NetworkEndPoint networkEndPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x16FC3BC", Offset = "0x16FC3BC", VA = "0x16FC3BC")]
		public bool TryGetNetworkConnection(NetworkEndPoint iPEndPoint, out NetworkConnection networkConnection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x16FC518", Offset = "0x16FC518", VA = "0x16FC518", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x16FA508", Offset = "0x16FA508", VA = "0x16FA508")]
		public UTransportSocketServer()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class UdpSocket : ISocket
	{
		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UdpClient mClient;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private dSocketReceiveHandle mReceiveCallback;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint mTempIPEndPonit;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsClose;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool isServer;

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x16FCF4C", Offset = "0x16FCF4C", VA = "0x16FCF4C", Slot = "6")]
		public void Close()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x16FCF98", Offset = "0x16FCF98", VA = "0x16FCF98", Slot = "5")]
		public void Connect(IPEndPoint localEndPoint, IPEndPoint serverEndPoint, params IPEndPoint[] ipArgs)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x16FD258", Offset = "0x16FD258", VA = "0x16FD258", Slot = "8")]
		public bool IsConnect(IPEndPoint ipInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x16FD268", Offset = "0x16FD268", VA = "0x16FD268", Slot = "4")]
		public void Init(dSocketReceiveHandle receiveCallback, bool isServer, params object[] args)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x16FD2F4", Offset = "0x16FD2F4", VA = "0x16FD2F4", Slot = "7")]
		public void Send(IPEndPoint ipInfo, BytesPackage messageBytes, bool isReliable = false)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x16FD3DC", Offset = "0x16FD3DC", VA = "0x16FD3DC")]
		private void SendLogic(IPEndPoint ip, BytesPackage bytesPackage, bool isReliable)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x16FD46C", Offset = "0x16FD46C", VA = "0x16FD46C")]
		private void ReceiveCB(IAsyncResult ar)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x16FDAF0", Offset = "0x16FDAF0", VA = "0x16FDAF0", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x16FDAF4", Offset = "0x16FDAF4", VA = "0x16FDAF4")]
		public UdpSocket()
		{
		}
	}
}
namespace PostProcess
{
	[Token(Token = "0x200042C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xFB930C", Offset = "0xFB930C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xFB930C", Offset = "0xFB930C")]
	public class BlinkEffect : MonoBehaviour
	{
		[Token(Token = "0x2000575")]
		private enum State
		{
			[Token(Token = "0x40017A5")]
			FadingIn,
			[Token(Token = "0x40017A6")]
			FadingOut,
			[Token(Token = "0x40017A7")]
			WaitingForFadeOut,
			[Token(Token = "0x40017A8")]
			Idle
		}

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader standard;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader curved;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC24FC", Offset = "0xFC24FC")]
		public float smoothness;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2514", Offset = "0xFC2514")]
		public float curvature;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC252C", Offset = "0xFC252C")]
		public float time;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xFC2544", Offset = "0xFC2544")]
		public float fadeOutDelay;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float fadeInTime;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeOutTime;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve fadeInCurve;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve fadeOutCurve;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material material;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material materialCurved;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float localTime;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private State state;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool inAndOut;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action onFadeInComplete;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Action onFadeOutComplete;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _Curvature;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _LocalTime;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _Smoothness;

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x19548B4", Offset = "0x19548B4", VA = "0x19548B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x19548F0", Offset = "0x19548F0", VA = "0x19548F0")]
		private void SetDefaultFadeInAnimationCurves()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x1954A6C", Offset = "0x1954A6C", VA = "0x1954A6C")]
		private void SetDefaultFadeOutAnimationCurves()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x1954BE8", Offset = "0x1954BE8", VA = "0x1954BE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x1954D1C", Offset = "0x1954D1C", VA = "0x1954D1C")]
		public void Blink([Optional] Action onComplete, [Optional] Action onFadeInComplete)
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x1954E1C", Offset = "0x1954E1C", VA = "0x1954E1C")]
		public void FadeIn([Optional] Action onComplete)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x1954ECC", Offset = "0x1954ECC", VA = "0x1954ECC")]
		public void FadeOut([Optional] Action onComplete)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x1954F8C", Offset = "0x1954F8C", VA = "0x1954F8C")]
		public BlinkEffect()
		{
		}
	}
}
