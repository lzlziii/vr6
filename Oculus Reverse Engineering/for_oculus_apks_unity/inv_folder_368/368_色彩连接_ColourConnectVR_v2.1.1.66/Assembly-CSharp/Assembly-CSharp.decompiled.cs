using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using Assets.UserReporting.Scripts.Plugin;
using DMS.Scriptables;
using Il2CppDummyDll;
using LIV.SDK.Unity;
using Microsoft.CodeAnalysis;
using StylizedWater;
using TMPro;
using Unity.Cloud.Authorization;
using Unity.Cloud.UserReporting;
using Unity.Cloud.UserReporting.Client;
using Unity.Cloud.UserReporting.Plugin;
using Unity.Cloud.UserReporting.Plugin.SimpleJson.Reflection;
using Unity.Collections;
using Unity.Screenshots;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Profiling;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using Viveport;
using Viveport.Internal;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AB18", Offset = "0x109AB18")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x1770864", Offset = "0x1770864", VA = "0x1770864")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[Microsoft.CodeAnalysis.Embedded]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AB50", Offset = "0x109AB50")]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x1A655F4", Offset = "0x1A655F4", VA = "0x1A655F4")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109AB88", Offset = "0x109AB88")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x109AB88", Offset = "0x109AB88")]
public class AlphaFlashingText : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109DA40", Offset = "0x109DA40")]
	public List<TextAlpha> textList;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109DA78", Offset = "0x109DA78")]
	public string HelpURL;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ReportAProblem;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Patrons;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color[] currentColor;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text[] thisText;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] chAlpha;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int textCount;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1937BE4", Offset = "0x1937BE4", VA = "0x1937BE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1937E14", Offset = "0x1937E14", VA = "0x1937E14")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1938060", Offset = "0x1938060", VA = "0x1938060")]
	public AlphaFlashingText()
	{
	}
}
[Serializable]
[Token(Token = "0x2000005")]
public class TextAlpha
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text text;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minAlpha;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAlpha;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timerAlpha;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x13892D8", Offset = "0x13892D8", VA = "0x13892D8")]
	public TextAlpha()
	{
	}
}
[Token(Token = "0x2000006")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x109ABE8", Offset = "0x109ABE8")]
public class LineColourProfileCustom : LineColourProfile
{
	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1C2F3C4", Offset = "0x1C2F3C4", VA = "0x1C2F3C4")]
	public LineColourProfileCustom()
	{
	}
}
[Token(Token = "0x2000007")]
public class ColourPickerCard : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image image;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color myColor;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x17634C8", Offset = "0x17634C8", VA = "0x17634C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x176354C", Offset = "0x176354C", VA = "0x176354C")]
	public void PickColour()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1763654", Offset = "0x1763654", VA = "0x1763654")]
	public ColourPickerCard()
	{
	}
}
[Token(Token = "0x2000008")]
public class CustomLineColour_MonoListener : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineCustomColour lineCustomColour;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject selectedImage;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image colourImage;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x17658C8", Offset = "0x17658C8", VA = "0x17658C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1765A50", Offset = "0x1765A50", VA = "0x1765A50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1765BC4", Offset = "0x1765BC4", VA = "0x1765BC4")]
	public void ClickColour()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1765A48", Offset = "0x1765A48", VA = "0x1765A48")]
	private void SelectedCustomColourChanged()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1765D6C", Offset = "0x1765D6C", VA = "0x1765D6C")]
	private void SelectedCustomColourChanged(bool val)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1765E94", Offset = "0x1765E94", VA = "0x1765E94")]
	public CustomLineColour_MonoListener()
	{
	}
}
[Token(Token = "0x2000009")]
public class GameColours : GlobalScriptable
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameColours instance;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineColourProfile defaultColourProfile;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnCustomColourChanged;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoolVariable customColourSelected;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineCustomColour selectedCustomColourForChange;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<LineCustomColour> customColours;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x177403C", Offset = "0x177403C", VA = "0x177403C", Slot = "5")]
	public override void SoSetStartingValue()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1765CA4", Offset = "0x1765CA4", VA = "0x1765CA4")]
	public void SetSelectedCustomColour(LineCustomColour customColour)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x17635A8", Offset = "0x17635A8", VA = "0x17635A8")]
	public void SetCustomColourColour(ColourPickerCard card)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x17740C4", Offset = "0x17740C4", VA = "0x17740C4")]
	public void SetLineColoursFromProfile(LineColourProfile colourProfile)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x177425C", Offset = "0x177425C", VA = "0x177425C", Slot = "9")]
	public override void Load()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1774390", Offset = "0x1774390", VA = "0x1774390")]
	public GameColours()
	{
	}
}
[Token(Token = "0x200000A")]
public class I_SetMonoColoursFromLineProfile : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useCustomProfile;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineColourProfile profileToListenTo;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Image> images;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject loadColoursButton;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1A623F0", Offset = "0x1A623F0", VA = "0x1A623F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1A626C4", Offset = "0x1A626C4", VA = "0x1A626C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1A624E8", Offset = "0x1A624E8", VA = "0x1A624E8")]
	public void ColoursChanged()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1A627B4", Offset = "0x1A627B4", VA = "0x1A627B4")]
	public void SaveCurrentMaterialsToProfile()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1A62884", Offset = "0x1A62884", VA = "0x1A62884")]
	public void SetMaterialsFromProfile()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1A62914", Offset = "0x1A62914", VA = "0x1A62914")]
	public I_SetMonoColoursFromLineProfile()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x109ABF8", Offset = "0x109ABF8")]
public class LineColourProfile : GlobalScriptableWithID
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool allowOverwriteFromRuntime;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool setAllColoursAsDefault;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color defaultColour;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Color> lineColours;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent coloursChanged;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1C2ED80", Offset = "0x1C2ED80", VA = "0x1C2ED80")]
	public void UseThisProfile()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1C2EE44", Offset = "0x1C2EE44", VA = "0x1C2EE44")]
	public void SaveCurrentMaterialsToProfile()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1C2EF80", Offset = "0x1C2EF80", VA = "0x1C2EF80", Slot = "8")]
	public override void Save()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1C2F0F4", Offset = "0x1C2F0F4", VA = "0x1C2F0F4", Slot = "9")]
	public override void Load()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1C2F2D4", Offset = "0x1C2F2D4", VA = "0x1C2F2D4")]
	public LineColourProfile()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x109AC08", Offset = "0x109AC08")]
public class LineCustomColour : GlobalScriptableWithID
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color colour;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material material;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1C2F3C8", Offset = "0x1C2F3C8", VA = "0x1C2F3C8")]
	public void SelectForColourChange()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1C2F428", Offset = "0x1C2F428", VA = "0x1C2F428")]
	public void SetColour(Color _colour)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1C2F470", Offset = "0x1C2F470", VA = "0x1C2F470", Slot = "8")]
	public override void Save()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1C2F510", Offset = "0x1C2F510", VA = "0x1C2F510", Slot = "9")]
	public override void Load()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1C2F60C", Offset = "0x1C2F60C", VA = "0x1C2F60C")]
	public LineCustomColour()
	{
	}
}
[Token(Token = "0x200000D")]
public class SelectCustomLineColourForChange : MonoBehaviour
{
	[Token(Token = "0x6000027")]
	[Address(RVA = "0x18C0DD0", Offset = "0x18C0DD0", VA = "0x18C0DD0")]
	public SelectCustomLineColourForChange()
	{
	}
}
[Token(Token = "0x200000E")]
public class SetWaterObjectForPlanarReflections : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable reflections;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlanarReflections planerReflections;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x18C2010", Offset = "0x18C2010", VA = "0x18C2010")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x18C2120", Offset = "0x18C2120", VA = "0x18C2120")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x18C2104", Offset = "0x18C2104", VA = "0x18C2104")]
	private void Changed(GameObject arg0, Vector3 arg1, Vector3 arg2)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x18C21E4", Offset = "0x18C21E4", VA = "0x18C21E4")]
	public SetWaterObjectForPlanarReflections()
	{
	}
}
[Token(Token = "0x200000F")]
public class AnimatePostProcessing : MonoBehaviour
{
	[Token(Token = "0x2000010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AC18", Offset = "0x109AC18")]
	private sealed class <AdjustWeight>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimatePostProcessing <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000036")]
			[Address(RVA = "0x293A258", Offset = "0x293A258", VA = "0x293A258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000038")]
			[Address(RVA = "0x293A2A0", Offset = "0x293A2A0", VA = "0x293A2A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x293A0E4", Offset = "0x293A0E4", VA = "0x293A0E4")]
		[DebuggerHidden]
		public <AdjustWeight>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x293A110", Offset = "0x293A110", VA = "0x293A110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x293A114", Offset = "0x293A114", VA = "0x293A114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0x293A260", Offset = "0x293A260", VA = "0x293A260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCondition conToHide;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Volume vProfile;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float targetWeight;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109DAB0", Offset = "0x109DAB0")]
	public float adjustSpeed;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator adjustWeightRoutine;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x193B408", Offset = "0x193B408", VA = "0x193B408")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x193B4CC", Offset = "0x193B4CC", VA = "0x193B4CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x193B4C8", Offset = "0x193B4C8", VA = "0x193B4C8")]
	private void ConChanged(bool val)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x193B574", Offset = "0x193B574", VA = "0x193B574")]
	private void CheckList()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x193B5B8", Offset = "0x193B5B8", VA = "0x193B5B8")]
	private void SetWeightAndStartRoutine(float weight)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x193B614", Offset = "0x193B614", VA = "0x193B614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A47C4", Offset = "0x10A47C4")]
	private IEnumerator AdjustWeight()
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x193B68C", Offset = "0x193B68C", VA = "0x193B68C")]
	public AnimatePostProcessing()
	{
	}
}
[Token(Token = "0x2000011")]
public class SetLivPos : MonoBehaviour
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LIV.SDK.Unity.LIV liv;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform toCopy;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int vFov;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x18C1EF8", Offset = "0x18C1EF8", VA = "0x18C1EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x18C1FA4", Offset = "0x18C1FA4", VA = "0x18C1FA4")]
	public SetLivPos()
	{
	}
}
[Token(Token = "0x2000012")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	public delegate void OnClick();

	[Token(Token = "0x2000014")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000015")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000016")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000017")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AC28", Offset = "0x109AC28")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600005C")]
		[Address(RVA = "0x293AAC0", Offset = "0x293AAC0", VA = "0x293AAC0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x293AAC8", Offset = "0x293AAC8", VA = "0x293AAC8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000018")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AC38", Offset = "0x109AC38")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x293ACEC", Offset = "0x293ACEC", VA = "0x293ACEC")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0x293ACF4", Offset = "0x293ACF4", VA = "0x293ACF4")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000019")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AC48", Offset = "0x109AC48")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x293AF40", Offset = "0x293AF40", VA = "0x293AF40")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x6000061")]
		[Address(RVA = "0x293AF48", Offset = "0x293AF48", VA = "0x293AF48")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200001A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AC58", Offset = "0x109AC58")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000062")]
		[Address(RVA = "0x293B2DC", Offset = "0x293B2DC", VA = "0x293B2DC")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6000063")]
		[Address(RVA = "0x293B2E4", Offset = "0x293B2E4", VA = "0x293B2E4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AC68", Offset = "0x109AC68")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000064")]
		[Address(RVA = "0x293B304", Offset = "0x293B304", VA = "0x293B304")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x293B30C", Offset = "0x293B30C", VA = "0x293B30C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000030")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000031")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000032")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1765EA4", Offset = "0x1765EA4", VA = "0x1765EA4")]
	public void Awake()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x17663D8", Offset = "0x17663D8", VA = "0x17663D8")]
	public void Show()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x17667A0", Offset = "0x17667A0", VA = "0x17667A0")]
	public void Hide()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x176695C", Offset = "0x176695C", VA = "0x176695C")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1766B9C", Offset = "0x1766B9C", VA = "0x1766B9C")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1766790", Offset = "0x1766790", VA = "0x1766790")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1766ECC", Offset = "0x1766ECC", VA = "0x1766ECC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x17671EC", Offset = "0x17671EC", VA = "0x17671EC")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x17675B4", Offset = "0x17675B4", VA = "0x17675B4")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x17676B8", Offset = "0x17676B8", VA = "0x17676B8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x176789C", Offset = "0x176789C", VA = "0x176789C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1767940", Offset = "0x1767940", VA = "0x1767940")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1767B30", Offset = "0x1767B30", VA = "0x1767B30")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1767D38", Offset = "0x1767D38", VA = "0x1767D38")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x176803C", Offset = "0x176803C", VA = "0x176803C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1768138", Offset = "0x1768138", VA = "0x1768138")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x17681E4", Offset = "0x17681E4", VA = "0x17681E4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200001C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRHand hand;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule inputModule;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1A5E27C", Offset = "0x1A5E27C", VA = "0x1A5E27C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1A5E2A8", Offset = "0x1A5E2A8", VA = "0x1A5E2A8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1A5E2AC", Offset = "0x1A5E2AC", VA = "0x1A5E2AC")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200001D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200001E")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000062")]
		On,
		[Token(Token = "0x4000063")]
		Off,
		[Token(Token = "0x4000064")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000003")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600006A")]
		[Address(RVA = "0x1C2C150", Offset = "0x1C2C150", VA = "0x1C2C150")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x1C2C10C", Offset = "0x1C2C10C", VA = "0x1C2C10C")]
		set
		{
		}
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1C2C158", Offset = "0x1C2C158", VA = "0x1C2C158")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1C2C1B4", Offset = "0x1C2C1B4", VA = "0x1C2C1B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1C2C2F8", Offset = "0x1C2C2F8", VA = "0x1C2C2F8", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1C2C314", Offset = "0x1C2C314", VA = "0x1C2C314", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1C2C368", Offset = "0x1C2C368", VA = "0x1C2C368")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1C2C524", Offset = "0x1C2C524", VA = "0x1C2C524")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1C2C638", Offset = "0x1C2C638", VA = "0x1C2C638")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1C2C6C8", Offset = "0x1C2C6C8", VA = "0x1C2C6C8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1C2C794", Offset = "0x1C2C794", VA = "0x1C2C794")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1C2C848", Offset = "0x1C2C848", VA = "0x1C2C848")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1C2C934", Offset = "0x1C2C934", VA = "0x1C2C934")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200001F")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000065")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000066")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000067")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DB88", Offset = "0x109DB88")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DBC0", Offset = "0x109DBC0")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DBF8", Offset = "0x109DBF8")]
	public float HeightOffset;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DC30", Offset = "0x109DC30")]
	public float MinimumHeight;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DC68", Offset = "0x109DC68")]
	public float MaximumHeight;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x19490D4", Offset = "0x19490D4", VA = "0x19490D4")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x19490DC", Offset = "0x19490DC", VA = "0x19490DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1949168", Offset = "0x1949168", VA = "0x1949168")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x19491FC", Offset = "0x19491FC", VA = "0x19491FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1949290", Offset = "0x1949290", VA = "0x1949290")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x19495BC", Offset = "0x19495BC", VA = "0x19495BC")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x19497EC", Offset = "0x19497EC", VA = "0x19497EC")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000020")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1C2F810", Offset = "0x1C2F810", VA = "0x1C2F810")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1C2F8DC", Offset = "0x1C2F8DC", VA = "0x1C2F8DC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000021")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000022")]
	public enum States
	{
		[Token(Token = "0x4000095")]
		Ready,
		[Token(Token = "0x4000096")]
		Aim,
		[Token(Token = "0x4000097")]
		CancelAim,
		[Token(Token = "0x4000098")]
		PreTeleport,
		[Token(Token = "0x4000099")]
		CancelTeleport,
		[Token(Token = "0x400009A")]
		Teleporting,
		[Token(Token = "0x400009B")]
		PostTeleport
	}

	[Token(Token = "0x2000023")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400009D")]
		None,
		[Token(Token = "0x400009E")]
		Aim,
		[Token(Token = "0x400009F")]
		PreTeleport,
		[Token(Token = "0x40000A0")]
		Teleport
	}

	[Token(Token = "0x2000024")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40000A2")]
		Point,
		[Token(Token = "0x40000A3")]
		Sphere,
		[Token(Token = "0x40000A4")]
		Capsule
	}

	[Token(Token = "0x2000025")]
	public class AimData
	{
		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109E080", Offset = "0x109E080")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000007")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60000B4")]
			[Address(RVA = "0x294502C", Offset = "0x294502C", VA = "0x294502C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4CEC", Offset = "0x10A4CEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000B5")]
			[Address(RVA = "0x2945034", Offset = "0x2945034", VA = "0x2945034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4CFC", Offset = "0x10A4CFC")]
			private set
			{
			}
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x2944FA8", Offset = "0x2944FA8", VA = "0x2944FA8")]
		public AimData()
		{
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x294503C", Offset = "0x294503C", VA = "0x294503C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AC78", Offset = "0x109AC78")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000008")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BA")]
			[Address(RVA = "0x2944DF4", Offset = "0x2944DF4", VA = "0x2944DF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000009")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0x2944E3C", Offset = "0x2944E3C", VA = "0x2944E3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x2944CB8", Offset = "0x2944CB8", VA = "0x2944CB8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x2944CE4", Offset = "0x2944CE4", VA = "0x2944CE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x2944CE8", Offset = "0x2944CE8", VA = "0x2944CE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x2944DFC", Offset = "0x2944DFC", VA = "0x2944DFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000027")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AC88", Offset = "0x109AC88")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C0")]
			[Address(RVA = "0x2944724", Offset = "0x2944724", VA = "0x2944724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C2")]
			[Address(RVA = "0x294476C", Offset = "0x294476C", VA = "0x294476C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x294459C", Offset = "0x294459C", VA = "0x294459C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x29445C8", Offset = "0x29445C8", VA = "0x29445C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x29445CC", Offset = "0x29445CC", VA = "0x29445CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x294472C", Offset = "0x294472C", VA = "0x294472C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AC98", Offset = "0x109AC98")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C6")]
			[Address(RVA = "0x2944850", Offset = "0x2944850", VA = "0x2944850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0x2944898", Offset = "0x2944898", VA = "0x2944898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x2944774", Offset = "0x2944774", VA = "0x2944774")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x29447A0", Offset = "0x29447A0", VA = "0x29447A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x29447A4", Offset = "0x29447A4", VA = "0x29447A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x2944858", Offset = "0x2944858", VA = "0x2944858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109ACA8", Offset = "0x109ACA8")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CC")]
			[Address(RVA = "0x2944C68", Offset = "0x2944C68", VA = "0x2944C68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CE")]
			[Address(RVA = "0x2944CB0", Offset = "0x2944CB0", VA = "0x2944CB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x2944B4C", Offset = "0x2944B4C", VA = "0x2944B4C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x2944B78", Offset = "0x2944B78", VA = "0x2944B78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x2944B7C", Offset = "0x2944B7C", VA = "0x2944B7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x2944C70", Offset = "0x2944C70", VA = "0x2944C70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109ACB8", Offset = "0x109ACB8")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0x294497C", Offset = "0x294497C", VA = "0x294497C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D4")]
			[Address(RVA = "0x29449C4", Offset = "0x29449C4", VA = "0x29449C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x29448A0", Offset = "0x29448A0", VA = "0x29448A0")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x29448CC", Offset = "0x29448CC", VA = "0x29448CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x29448D0", Offset = "0x29448D0", VA = "0x29448D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x2944984", Offset = "0x2944984", VA = "0x2944984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109ACC8", Offset = "0x109ACC8")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D8")]
			[Address(RVA = "0x2944F58", Offset = "0x2944F58", VA = "0x2944F58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DA")]
			[Address(RVA = "0x2944FA0", Offset = "0x2944FA0", VA = "0x2944FA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x2944E44", Offset = "0x2944E44", VA = "0x2944E44")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x2944E70", Offset = "0x2944E70", VA = "0x2944E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x2944E74", Offset = "0x2944E74", VA = "0x2944E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x2944F60", Offset = "0x2944F60", VA = "0x2944F60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109ACD8", Offset = "0x109ACD8")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DE")]
			[Address(RVA = "0x2944AFC", Offset = "0x2944AFC", VA = "0x2944AFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E0")]
			[Address(RVA = "0x2944B44", Offset = "0x2944B44", VA = "0x2944B44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x29449CC", Offset = "0x29449CC", VA = "0x29449CC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x29449F8", Offset = "0x29449F8", VA = "0x29449F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x29449FC", Offset = "0x29449FC", VA = "0x29449FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x2944B04", Offset = "0x2944B04", VA = "0x2944B04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DCA0", Offset = "0x109DCA0")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DCD8", Offset = "0x109DCD8")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DD10", Offset = "0x109DD10")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DD48", Offset = "0x109DD48")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DD80", Offset = "0x109DD80")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DDB8", Offset = "0x109DDB8")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DDF0", Offset = "0x109DDF0")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DE28", Offset = "0x109DE28")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109DE60", Offset = "0x109DE60")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DE70", Offset = "0x109DE70")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DEA8", Offset = "0x109DEA8")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109DEF0", Offset = "0x109DEF0")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DF00", Offset = "0x109DF00")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DF38", Offset = "0x109DF38")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DF70", Offset = "0x109DF70")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109DFA8", Offset = "0x109DFA8")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000004")]
	public States CurrentState
	{
		[Token(Token = "0x6000081")]
		[Address(RVA = "0x1C303D8", Offset = "0x1C303D8", VA = "0x1C303D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4874", Offset = "0x10A4874")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000082")]
		[Address(RVA = "0x1C303E0", Offset = "0x1C303E0", VA = "0x1C303E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4884", Offset = "0x10A4884")]
		private set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0x1C30604", Offset = "0x1C30604", VA = "0x1C30604")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000006")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0x1C3062C", Offset = "0x1C3062C", VA = "0x1C3062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A48B4", Offset = "0x10A48B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000088")]
		[Address(RVA = "0x1C30634", Offset = "0x1C30634", VA = "0x1C30634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A48C4", Offset = "0x10A48C4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000083")]
		[Address(RVA = "0x1C303E8", Offset = "0x1C303E8", VA = "0x1C303E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4894", Offset = "0x10A4894")]
		add
		{
		}
		[Token(Token = "0x6000084")]
		[Address(RVA = "0x1C30488", Offset = "0x1C30488", VA = "0x1C30488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A48A4", Offset = "0x10A48A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0x1C30C74", Offset = "0x1C30C74", VA = "0x1C30C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A490C", Offset = "0x10A490C")]
		add
		{
		}
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x1C30D14", Offset = "0x1C30D14", VA = "0x1C30D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A491C", Offset = "0x10A491C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x1C30DB4", Offset = "0x1C30DB4", VA = "0x1C30DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A498C", Offset = "0x10A498C")]
		add
		{
		}
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x1C30E54", Offset = "0x1C30E54", VA = "0x1C30E54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A499C", Offset = "0x10A499C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x1C30EF4", Offset = "0x1C30EF4", VA = "0x1C30EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A49AC", Offset = "0x10A49AC")]
		add
		{
		}
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x1C30F94", Offset = "0x1C30F94", VA = "0x1C30F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A49BC", Offset = "0x10A49BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x1C310A4", Offset = "0x1C310A4", VA = "0x1C310A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A49CC", Offset = "0x10A49CC")]
		add
		{
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x1C31144", Offset = "0x1C31144", VA = "0x1C31144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A49DC", Offset = "0x10A49DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600009D")]
		[Address(RVA = "0x1C3125C", Offset = "0x1C3125C", VA = "0x1C3125C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4A4C", Offset = "0x10A4A4C")]
		add
		{
		}
		[Token(Token = "0x600009E")]
		[Address(RVA = "0x1C312FC", Offset = "0x1C312FC", VA = "0x1C312FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4A5C", Offset = "0x10A4A5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x1C31414", Offset = "0x1C31414", VA = "0x1C31414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4ACC", Offset = "0x10A4ACC")]
		add
		{
		}
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x1C314B4", Offset = "0x1C314B4", VA = "0x1C314B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4ADC", Offset = "0x10A4ADC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x1C315CC", Offset = "0x1C315CC", VA = "0x1C315CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4B4C", Offset = "0x10A4B4C")]
		add
		{
		}
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x1C3166C", Offset = "0x1C3166C", VA = "0x1C3166C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4B5C", Offset = "0x10A4B5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x1C31784", Offset = "0x1C31784", VA = "0x1C31784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4BCC", Offset = "0x10A4BCC")]
		add
		{
		}
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x1C31824", Offset = "0x1C31824", VA = "0x1C31824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4BDC", Offset = "0x10A4BDC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x1C3193C", Offset = "0x1C3193C", VA = "0x1C3193C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4C4C", Offset = "0x10A4C4C")]
		add
		{
		}
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x1C319DC", Offset = "0x1C319DC", VA = "0x1C319DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4C5C", Offset = "0x10A4C5C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x1C31AF4", Offset = "0x1C31AF4", VA = "0x1C31AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4CCC", Offset = "0x10A4CCC")]
		add
		{
		}
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x1C31B94", Offset = "0x1C31B94", VA = "0x1C31B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4CDC", Offset = "0x10A4CDC")]
		remove
		{
		}
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1C30084", Offset = "0x1C30084", VA = "0x1C30084")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1C300A8", Offset = "0x1C300A8", VA = "0x1C300A8")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1C30528", Offset = "0x1C30528", VA = "0x1C30528")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1C3063C", Offset = "0x1C3063C", VA = "0x1C3063C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1C30888", Offset = "0x1C30888", VA = "0x1C30888")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x10A48D4", Offset = "0x10A48D4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1C3093C", Offset = "0x1C3093C", VA = "0x1C3093C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1C30A3C", Offset = "0x1C30A3C", VA = "0x1C30A3C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1C30A58", Offset = "0x1C30A58", VA = "0x1C30A58")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1C30B1C", Offset = "0x1C30B1C", VA = "0x1C30B1C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1C30B60", Offset = "0x1C30B60", VA = "0x1C30B60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1C30BC4", Offset = "0x1C30BC4", VA = "0x1C30BC4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1C30C6C", Offset = "0x1C30C6C", VA = "0x1C30C6C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1C30BF4", Offset = "0x1C30BF4", VA = "0x1C30BF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A492C", Offset = "0x10A492C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1C31034", Offset = "0x1C31034", VA = "0x1C31034")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1C311E4", Offset = "0x1C311E4", VA = "0x1C311E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A49EC", Offset = "0x10A49EC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1C3139C", Offset = "0x1C3139C", VA = "0x1C3139C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A4A6C", Offset = "0x10A4A6C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1C31554", Offset = "0x1C31554", VA = "0x1C31554")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A4AEC", Offset = "0x10A4AEC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1C3170C", Offset = "0x1C3170C", VA = "0x1C3170C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A4B6C", Offset = "0x10A4B6C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1C318C4", Offset = "0x1C318C4", VA = "0x1C318C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A4BEC", Offset = "0x10A4BEC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1C31A7C", Offset = "0x1C31A7C", VA = "0x1C31A7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A4C6C", Offset = "0x10A4C6C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1C31C34", Offset = "0x1C31C34", VA = "0x1C31C34")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1C31D74", Offset = "0x1C31D74", VA = "0x1C31D74")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1C31DA8", Offset = "0x1C31DA8", VA = "0x1C31DA8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1C31E70", Offset = "0x1C31E70", VA = "0x1C31E70")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1C31F68", Offset = "0x1C31F68", VA = "0x1C31F68")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200002D")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x18C21EC", Offset = "0x18C21EC", VA = "0x18C21EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4F3C", Offset = "0x10A4F3C")]
		add
		{
		}
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x18C228C", Offset = "0x18C228C", VA = "0x18C228C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4F4C", Offset = "0x10A4F4C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x18C232C", Offset = "0x18C232C", VA = "0x18C232C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4F5C", Offset = "0x10A4F5C")]
		add
		{
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x18C23CC", Offset = "0x18C23CC", VA = "0x18C23CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4F6C", Offset = "0x10A4F6C")]
		remove
		{
		}
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x18C246C", Offset = "0x18C246C", VA = "0x18C246C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x18C2558", Offset = "0x18C2558", VA = "0x18C2558")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x18C255C", Offset = "0x18C255C", VA = "0x18C255C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x18C25D0", Offset = "0x18C25D0", VA = "0x18C25D0")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x18C26F4", Offset = "0x18C26F4", VA = "0x18C26F4")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x18C28DC", Offset = "0x18C28DC", VA = "0x18C28DC")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x18C2AE4", Offset = "0x18C2AE4", VA = "0x18C2AE4")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200002E")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x18CCE34", Offset = "0x18CCE34", VA = "0x18CCE34", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x18CCED4", Offset = "0x18CCED4", VA = "0x18CCED4", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000EE")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x18CCFC4", Offset = "0x18CCFC4", VA = "0x18CCFC4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200002F")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E0B0", Offset = "0x109E0B0")]
	public float Range;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x18CCFD4", Offset = "0x18CCFD4", VA = "0x18CCFD4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x18CD0D0", Offset = "0x18CD0D0", VA = "0x18CD0D0")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000030")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E0E8", Offset = "0x109E0E8")]
	public float Range;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E120", Offset = "0x109E120")]
	public float MinimumElevation;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E158", Offset = "0x109E158")]
	public float Gravity;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109E190", Offset = "0x109E190")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E190", Offset = "0x109E190")]
	public float AimVelocity;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109E1EC", Offset = "0x109E1EC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E1EC", Offset = "0x109E1EC")]
	public float AimStep;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x18CD0E0", Offset = "0x18CD0E0", VA = "0x18CD0E0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x18CD270", Offset = "0x18CD270", VA = "0x18CD270")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000031")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E244", Offset = "0x109E244")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x18CD284", Offset = "0x18CD284", VA = "0x18CD284")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x18CD3C0", Offset = "0x18CD3C0", VA = "0x18CD3C0")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x18CD3F0", Offset = "0x18CD3F0", VA = "0x18CD3F0")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x18CD420", Offset = "0x18CD420", VA = "0x18CD420")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x18CD4D0", Offset = "0x18CD4D0", VA = "0x18CD4D0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x18CD53C", Offset = "0x18CD53C", VA = "0x18CD53C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x18CD5A4", Offset = "0x18CD5A4", VA = "0x18CD5A4")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000032")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109E27C", Offset = "0x109E27C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E28C", Offset = "0x109E28C")]
	public Transform PositionIndicator;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E2C4", Offset = "0x109E2C4")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E2FC", Offset = "0x109E2FC")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000016")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x18CD6C8", Offset = "0x18CD6C8", VA = "0x18CD6C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4F7C", Offset = "0x10A4F7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x18CD6D0", Offset = "0x18CD6D0", VA = "0x18CD6D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4F8C", Offset = "0x10A4F8C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000101")]
		[Address(RVA = "0x18CD88C", Offset = "0x18CD88C", VA = "0x18CD88C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4F9C", Offset = "0x10A4F9C")]
		add
		{
		}
		[Token(Token = "0x6000102")]
		[Address(RVA = "0x18CD92C", Offset = "0x18CD92C", VA = "0x18CD92C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A4FAC", Offset = "0x10A4FAC")]
		remove
		{
		}
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x18CD6DC", Offset = "0x18CD6DC", VA = "0x18CD6DC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x18CD774", Offset = "0x18CD774", VA = "0x18CD774")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x18CD848", Offset = "0x18CD848", VA = "0x18CD848")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x18CD888", Offset = "0x18CD888", VA = "0x18CD888")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x18CD9CC", Offset = "0x18CD9CC", VA = "0x18CD9CC")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x18CDA30", Offset = "0x18CDA30", VA = "0x18CDA30")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x18CDA50", Offset = "0x18CDA50", VA = "0x18CDA50", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000033")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109ACE8", Offset = "0x109ACE8")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000112")]
			[Address(RVA = "0x228DE84", Offset = "0x228DE84", VA = "0x228DE84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000114")]
			[Address(RVA = "0x228DECC", Offset = "0x228DECC", VA = "0x228DECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x228DDBC", Offset = "0x228DDBC", VA = "0x228DDBC")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x228DDE8", Offset = "0x228DDE8", VA = "0x228DDE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x228DDEC", Offset = "0x228DDEC", VA = "0x228DDEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x228DE8C", Offset = "0x228DE8C", VA = "0x228DE8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109ACF8", Offset = "0x109ACF8")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000118")]
			[Address(RVA = "0x228DD6C", Offset = "0x228DD6C", VA = "0x228DD6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011A")]
			[Address(RVA = "0x228DDB4", Offset = "0x228DDB4", VA = "0x228DDB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0x228DCA0", Offset = "0x228DCA0", VA = "0x228DCA0")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x228DCCC", Offset = "0x228DCCC", VA = "0x228DCCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x228DCD0", Offset = "0x228DCD0", VA = "0x228DCD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x228DD74", Offset = "0x228DD74", VA = "0x228DD74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x18CDC5C", Offset = "0x18CDC5C", VA = "0x18CDC5C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x18CDD30", Offset = "0x18CDD30", VA = "0x18CDD30", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x18CDD90", Offset = "0x18CDD90", VA = "0x18CDD90", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x18CDE50", Offset = "0x18CDE50", VA = "0x18CDE50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A4FBC", Offset = "0x10A4FBC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x18CDEC8", Offset = "0x18CDEC8", VA = "0x18CDEC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A501C", Offset = "0x10A501C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600010C")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x18CDF40", Offset = "0x18CDF40", VA = "0x18CDF40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A507C", Offset = "0x10A507C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x18CDF6C", Offset = "0x18CDF6C", VA = "0x18CDF6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A508C", Offset = "0x10A508C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000036")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109E344", Offset = "0x109E344")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E354", Offset = "0x109E354")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E38C", Offset = "0x109E38C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E3C4", Offset = "0x109E3C4")]
	public bool FastTeleport;

	[Token(Token = "0x1700001B")]
	public Transform Pointer
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x18CDF98", Offset = "0x18CDF98", VA = "0x18CDF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A513C", Offset = "0x10A513C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x18CDFA0", Offset = "0x18CDFA0", VA = "0x18CDFA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A514C", Offset = "0x10A514C")]
		private set
		{
		}
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x18CDFA8", Offset = "0x18CDFA8", VA = "0x18CDFA8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x18CE100", Offset = "0x18CE100", VA = "0x18CE100", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x18CE1B8", Offset = "0x18CE1B8", VA = "0x18CE1B8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000037")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000038")]
	public enum InputModes
	{
		[Token(Token = "0x40000F5")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40000F6")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40000F7")]
		ThumbstickTeleport,
		[Token(Token = "0x40000F8")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000039")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40000FA")]
		A,
		[Token(Token = "0x40000FB")]
		B,
		[Token(Token = "0x40000FC")]
		LeftTrigger,
		[Token(Token = "0x40000FD")]
		LeftThumbstick,
		[Token(Token = "0x40000FE")]
		RightTrigger,
		[Token(Token = "0x40000FF")]
		RightThumbstick,
		[Token(Token = "0x4000100")]
		X,
		[Token(Token = "0x4000101")]
		Y
	}

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E3FC", Offset = "0x109E3FC")]
	public InputModes InputMode;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E434", Offset = "0x109E434")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E46C", Offset = "0x109E46C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E4A4", Offset = "0x109E4A4")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x18CE1BC", Offset = "0x18CE1BC", VA = "0x18CE1BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x18CE1C0", Offset = "0x18CE1C0", VA = "0x18CE1C0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x18CE5A8", Offset = "0x18CE5A8", VA = "0x18CE5A8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x18CE668", Offset = "0x18CE668", VA = "0x18CE668")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200003A")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200003B")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000106")]
		HeadRelative,
		[Token(Token = "0x4000107")]
		ForwardFacing
	}

	[Token(Token = "0x200003C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AD08", Offset = "0x109AD08")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000130")]
			[Address(RVA = "0x228DFB4", Offset = "0x228DFB4", VA = "0x228DFB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000132")]
			[Address(RVA = "0x228DFFC", Offset = "0x228DFFC", VA = "0x228DFFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x228DED4", Offset = "0x228DED4", VA = "0x228DED4")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x228DF00", Offset = "0x228DF00", VA = "0x228DF00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0x228DF04", Offset = "0x228DF04", VA = "0x228DF04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x228DFBC", Offset = "0x228DFBC", VA = "0x228DFBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x18CE74C", Offset = "0x18CE74C", VA = "0x18CE74C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x18CE840", Offset = "0x18CE840", VA = "0x18CE840")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x18CE848", Offset = "0x18CE848", VA = "0x18CE848", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x18CE894", Offset = "0x18CE894", VA = "0x18CE894", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x18CE8DC", Offset = "0x18CE8DC", VA = "0x18CE8DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A515C", Offset = "0x10A515C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600012A")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x18CE954", Offset = "0x18CE954", VA = "0x18CE954")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x18CEA10", Offset = "0x18CEA10", VA = "0x18CEA10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A51BC", Offset = "0x10A51BC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200003D")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000133")]
	[Address(RVA = "0x18CEA3C", Offset = "0x18CEA3C", VA = "0x18CEA3C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x18CEA40", Offset = "0x18CEA40", VA = "0x18CEA40", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x18CEABC", Offset = "0x18CEABC", VA = "0x18CEABC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200003E")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E4DC", Offset = "0x109E4DC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E514", Offset = "0x109E514")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E54C", Offset = "0x109E54C")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E584", Offset = "0x109E584")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x18CEAC0", Offset = "0x18CEAC0", VA = "0x18CEAC0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x18CEAEC", Offset = "0x18CEAEC", VA = "0x18CEAEC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x18CEE9C", Offset = "0x18CEE9C", VA = "0x18CEE9C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200003F")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E5BC", Offset = "0x109E5BC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E5F4", Offset = "0x109E5F4")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E62C", Offset = "0x109E62C")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x18CEEA0", Offset = "0x18CEEA0", VA = "0x18CEEA0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x18CEEE4", Offset = "0x18CEEE4", VA = "0x18CEEE4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x18CF28C", Offset = "0x18CF28C", VA = "0x18CF28C")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000040")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x18CF29C", Offset = "0x18CF29C", VA = "0x18CF29C")]
	private void Start()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x18CF2A0", Offset = "0x18CF2A0", VA = "0x18CF2A0")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x18CF2A8", Offset = "0x18CF2A8", VA = "0x18CF2A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x18CF364", Offset = "0x18CF364", VA = "0x18CF364")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x18CF38C", Offset = "0x18CF38C", VA = "0x18CF38C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000041")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109E664", Offset = "0x109E664")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700001E")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0x18CF3A4", Offset = "0x18CF3A4", VA = "0x18CF3A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A521C", Offset = "0x10A521C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000142")]
		[Address(RVA = "0x18CF3AC", Offset = "0x18CF3AC", VA = "0x18CF3AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A522C", Offset = "0x10A522C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x18CCE68", Offset = "0x18CCE68", VA = "0x18CCE68", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x18CCF90", Offset = "0x18CCF90", VA = "0x18CCF90", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x18CF3B4", Offset = "0x18CF3B4", VA = "0x18CF3B4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x10A523C", Offset = "0x10A523C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x18CD530", Offset = "0x18CD530", VA = "0x18CD530", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x18CD59C", Offset = "0x18CD59C", VA = "0x18CD59C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x18CCFCC", Offset = "0x18CCFCC", VA = "0x18CCFCC")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000042")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AD18", Offset = "0x109AD18")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000154")]
			[Address(RVA = "0x228E2D4", Offset = "0x228E2D4", VA = "0x228E2D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000156")]
			[Address(RVA = "0x228E31C", Offset = "0x228E31C", VA = "0x228E31C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x228E004", Offset = "0x228E004", VA = "0x228E004")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x228E030", Offset = "0x228E030", VA = "0x228E030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x228E034", Offset = "0x228E034", VA = "0x228E034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0x228E2DC", Offset = "0x228E2DC", VA = "0x228E2DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E674", Offset = "0x109E674")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000121")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x18CF490", Offset = "0x18CF490", VA = "0x18CF490")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x18CF5A0", Offset = "0x18CF5A0", VA = "0x18CF5A0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x18CF5CC", Offset = "0x18CF5CC", VA = "0x18CF5CC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x18CF5F4", Offset = "0x18CF5F4", VA = "0x18CF5F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5274", Offset = "0x10A5274")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x18CF66C", Offset = "0x18CF66C", VA = "0x18CF66C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600014E")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x18CF688", Offset = "0x18CF688", VA = "0x18CF688", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x18CF7A8", Offset = "0x18CF7A8", VA = "0x18CF7A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A52D4", Offset = "0x10A52D4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000044")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x18CF7D4", Offset = "0x18CF7D4", VA = "0x18CF7D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x18CF838", Offset = "0x18CF838", VA = "0x18CF838", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x18CF930", Offset = "0x18CF930", VA = "0x18CF930", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x18CFA28", Offset = "0x18CFA28", VA = "0x18CFA28")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x10A5334", Offset = "0x10A5334")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x18CFA2C", Offset = "0x18CFA2C", VA = "0x18CFA2C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000045")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E6AC", Offset = "0x109E6AC")]
	public float LOSOffset;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E6E4", Offset = "0x109E6E4")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x18CFA38", Offset = "0x18CFA38", VA = "0x18CFA38", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x18CFC44", Offset = "0x18CFC44", VA = "0x18CFC44")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000046")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600015E")]
	[Address(RVA = "0x18CFC50", Offset = "0x18CFC50", VA = "0x18CFC50", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x18CFD48", Offset = "0x18CFD48", VA = "0x18CFD48")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000047")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000160")]
	[Address(RVA = "0x18CFD4C", Offset = "0x18CFD4C", VA = "0x18CFD4C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x18CFDE0", Offset = "0x18CFDE0", VA = "0x18CFDE0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000162")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x18CFE70", Offset = "0x18CFE70", VA = "0x18CFE70")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000048")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AD28", Offset = "0x109AD28")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0x228E45C", Offset = "0x228E45C", VA = "0x228E45C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016C")]
			[Address(RVA = "0x228E4A4", Offset = "0x228E4A4", VA = "0x228E4A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x228E324", Offset = "0x228E324", VA = "0x228E324")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x228E350", Offset = "0x228E350", VA = "0x228E350", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x228E354", Offset = "0x228E354", VA = "0x228E354", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x228E464", Offset = "0x228E464", VA = "0x228E464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E71C", Offset = "0x109E71C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109E71C", Offset = "0x109E71C")]
	public float TransitionDuration;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109E774", Offset = "0x109E774")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E774", Offset = "0x109E774")]
	public float TeleportDelay;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E7C8", Offset = "0x109E7C8")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1388F6C", Offset = "0x1388F6C", VA = "0x1388F6C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1388F98", Offset = "0x1388F98", VA = "0x1388F98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A536C", Offset = "0x10A536C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1389010", Offset = "0x1389010", VA = "0x1389010")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200004A")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600016D")]
	[Address(RVA = "0x13891BC", Offset = "0x13891BC", VA = "0x13891BC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x13891D8", Offset = "0x13891D8", VA = "0x13891D8")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200004B")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200004C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AD38", Offset = "0x109AD38")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000175")]
			[Address(RVA = "0x228E618", Offset = "0x228E618", VA = "0x228E618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000177")]
			[Address(RVA = "0x228E660", Offset = "0x228E660", VA = "0x228E660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x228E4AC", Offset = "0x228E4AC", VA = "0x228E4AC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x228E4D8", Offset = "0x228E4D8", VA = "0x228E4D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x228E4DC", Offset = "0x228E4DC", VA = "0x228E4DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x228E620", Offset = "0x228E620", VA = "0x228E620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E800", Offset = "0x109E800")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109E800", Offset = "0x109E800")]
	public float TransitionDuration;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x13891E0", Offset = "0x13891E0", VA = "0x13891E0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x138920C", Offset = "0x138920C", VA = "0x138920C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A541C", Offset = "0x10A541C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1389284", Offset = "0x1389284", VA = "0x1389284")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200004D")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x200004E")]
	public enum PlabackState
	{
		[Token(Token = "0x4000151")]
		Idle = 1,
		[Token(Token = "0x4000152")]
		Preparing,
		[Token(Token = "0x4000153")]
		Buffering,
		[Token(Token = "0x4000154")]
		Ready,
		[Token(Token = "0x4000155")]
		Ended
	}

	[Token(Token = "0x200004F")]
	public enum StereoMode
	{
		[Token(Token = "0x4000157")]
		Unknown = -1,
		[Token(Token = "0x4000158")]
		Mono,
		[Token(Token = "0x4000159")]
		TopBottom,
		[Token(Token = "0x400015A")]
		LeftRight,
		[Token(Token = "0x400015B")]
		Mesh
	}

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000025")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x1C37AD0", Offset = "0x1C37AD0", VA = "0x1C37AD0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000026")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x1C37E00", Offset = "0x1C37E00", VA = "0x1C37E00")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000027")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x1C34E70", Offset = "0x1C34E70", VA = "0x1C34E70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000028")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x1C3666C", Offset = "0x1C3666C", VA = "0x1C3666C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000029")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x1C380D0", Offset = "0x1C380D0", VA = "0x1C380D0")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700002A")]
	public static long Duration
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x1C36890", Offset = "0x1C36890", VA = "0x1C36890")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700002B")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x1C35498", Offset = "0x1C35498", VA = "0x1C35498")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700002C")]
	public static int VideoWidth
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x1C35270", Offset = "0x1C35270", VA = "0x1C35270")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002D")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x1C35384", Offset = "0x1C35384", VA = "0x1C35384")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002E")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x1C3677C", Offset = "0x1C3677C", VA = "0x1C3677C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x1C35D50", Offset = "0x1C35D50", VA = "0x1C35D50")]
		set
		{
		}
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1C381E4", Offset = "0x1C381E4", VA = "0x1C381E4")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1C36C60", Offset = "0x1C36C60", VA = "0x1C36C60")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1C3599C", Offset = "0x1C3599C", VA = "0x1C3599C")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1C35B3C", Offset = "0x1C35B3C", VA = "0x1C35B3C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1C36A58", Offset = "0x1C36A58", VA = "0x1C36A58")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1C38410", Offset = "0x1C38410", VA = "0x1C38410")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1C3647C", Offset = "0x1C3647C", VA = "0x1C3647C")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000050")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x1946818", Offset = "0x1946818", VA = "0x1946818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A54CC", Offset = "0x10A54CC")]
		add
		{
		}
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x19468B8", Offset = "0x19468B8", VA = "0x19468B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A54DC", Offset = "0x10A54DC")]
		remove
		{
		}
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1946958", Offset = "0x1946958", VA = "0x1946958", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x194696C", Offset = "0x194696C", VA = "0x194696C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000051")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000052")]
	public enum ButtonType
	{
		[Token(Token = "0x400015F")]
		Play,
		[Token(Token = "0x4000160")]
		Pause,
		[Token(Token = "0x4000161")]
		FastForward,
		[Token(Token = "0x4000162")]
		Rewind,
		[Token(Token = "0x4000163")]
		SkipForward,
		[Token(Token = "0x4000164")]
		SkipBack,
		[Token(Token = "0x4000165")]
		Stop
	}

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700002F")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x1C330A8", Offset = "0x1C330A8", VA = "0x1C330A8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x1C330B0", Offset = "0x1C330B0", VA = "0x1C330B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1C330D4", Offset = "0x1C330D4", VA = "0x1C330D4", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1C3456C", Offset = "0x1C3456C", VA = "0x1C3456C")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000053")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000054")]
	public enum VideoShape
	{
		[Token(Token = "0x400017A")]
		_360,
		[Token(Token = "0x400017B")]
		_180,
		[Token(Token = "0x400017C")]
		Quad
	}

	[Token(Token = "0x2000055")]
	public enum VideoStereo
	{
		[Token(Token = "0x400017E")]
		Mono,
		[Token(Token = "0x400017F")]
		TopBottom,
		[Token(Token = "0x4000180")]
		LeftRight,
		[Token(Token = "0x4000181")]
		BottomTop
	}

	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AD48", Offset = "0x109AD48")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A9")]
			[Address(RVA = "0x2945804", Offset = "0x2945804", VA = "0x2945804", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001AB")]
			[Address(RVA = "0x294584C", Offset = "0x294584C", VA = "0x294584C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x2945610", Offset = "0x2945610", VA = "0x2945610")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x294563C", Offset = "0x294563C", VA = "0x294563C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x2945640", Offset = "0x2945640", VA = "0x2945640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x294580C", Offset = "0x294580C", VA = "0x294580C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000057")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AD58", Offset = "0x109AD58")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x2945518", Offset = "0x2945518", VA = "0x2945518")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x2945520", Offset = "0x2945520", VA = "0x2945520")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109E888", Offset = "0x109E888")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109E898", Offset = "0x109E898")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109E8A8", Offset = "0x109E8A8")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000030")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x1C34B94", Offset = "0x1C34B94", VA = "0x1C34B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A54EC", Offset = "0x10A54EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x1C34B9C", Offset = "0x1C34B9C", VA = "0x1C34B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A54FC", Offset = "0x10A54FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public long Duration
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x1C34BA8", Offset = "0x1C34BA8", VA = "0x1C34BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A550C", Offset = "0x10A550C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x1C34BB0", Offset = "0x1C34BB0", VA = "0x1C34BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A551C", Offset = "0x10A551C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x1C34BB8", Offset = "0x1C34BB8", VA = "0x1C34BB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A552C", Offset = "0x10A552C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x1C34BC0", Offset = "0x1C34BC0", VA = "0x1C34BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A553C", Offset = "0x10A553C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1C34BC8", Offset = "0x1C34BC8", VA = "0x1C34BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1C34EE0", Offset = "0x1C34EE0", VA = "0x1C34EE0")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1C34F44", Offset = "0x1C34F44", VA = "0x1C34F44")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1C355AC", Offset = "0x1C355AC", VA = "0x1C355AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A554C", Offset = "0x10A554C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1C35624", Offset = "0x1C35624", VA = "0x1C35624")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1C3590C", Offset = "0x1C3590C", VA = "0x1C3590C")]
	public void Play()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1C35AB0", Offset = "0x1C35AB0", VA = "0x1C35AB0")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1C35C50", Offset = "0x1C35C50", VA = "0x1C35C50")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1C35EC4", Offset = "0x1C35EC4", VA = "0x1C35EC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1C369A4", Offset = "0x1C369A4", VA = "0x1C369A4")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1C36BD4", Offset = "0x1C36BD4", VA = "0x1C36BD4")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1C36D74", Offset = "0x1C36D74", VA = "0x1C36D74")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1C36E60", Offset = "0x1C36E60", VA = "0x1C36E60")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000058")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000059")]
	private enum PlaybackState
	{
		[Token(Token = "0x400019E")]
		Playing,
		[Token(Token = "0x400019F")]
		Paused,
		[Token(Token = "0x40001A0")]
		Rewinding,
		[Token(Token = "0x40001A1")]
		FastForwarding
	}

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1C36E70", Offset = "0x1C36E70", VA = "0x1C36E70")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1C371C4", Offset = "0x1C371C4", VA = "0x1C371C4")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1C373A0", Offset = "0x1C373A0", VA = "0x1C373A0")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1C374D4", Offset = "0x1C374D4", VA = "0x1C374D4")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1C375DC", Offset = "0x1C375DC", VA = "0x1C375DC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x1C374A8", Offset = "0x1C374A8", VA = "0x1C374A8")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1C3763C", Offset = "0x1C3763C", VA = "0x1C3763C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1C370B0", Offset = "0x1C370B0", VA = "0x1C370B0")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1C379A0", Offset = "0x1C379A0", VA = "0x1C379A0")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200005A")]
public static class VectorUtil
{
	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x139D048", Offset = "0x139D048", VA = "0x139D048")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200005B")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40001A2")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40001A3")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x193CBE4", Offset = "0x193CBE4", VA = "0x193CBE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x193CFF8", Offset = "0x193CFF8", VA = "0x193CFF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x193D284", Offset = "0x193D284", VA = "0x193D284")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x193D3EC", Offset = "0x193D3EC", VA = "0x193D3EC")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x193D558", Offset = "0x193D558", VA = "0x193D558")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x193D6E8", Offset = "0x193D6E8", VA = "0x193D6E8")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x200005C")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40001AC")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1764E58", Offset = "0x1764E58", VA = "0x1764E58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1764EAC", Offset = "0x1764EAC", VA = "0x1764EAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1764EB0", Offset = "0x1764EB0", VA = "0x1764EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1764EB4", Offset = "0x1764EB4", VA = "0x1764EB4")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1765128", Offset = "0x1765128", VA = "0x1765128")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1765358", Offset = "0x1765358", VA = "0x1765358")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x200005D")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1768278", Offset = "0x1768278", VA = "0x1768278")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1768794", Offset = "0x1768794", VA = "0x1768794")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1768854", Offset = "0x1768854", VA = "0x1768854")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1768AD4", Offset = "0x1768AD4", VA = "0x1768AD4")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1768BB4", Offset = "0x1768BB4", VA = "0x1768BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1768C98", Offset = "0x1768C98", VA = "0x1768C98")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1768D0C", Offset = "0x1768D0C", VA = "0x1768D0C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1768D14", Offset = "0x1768D14", VA = "0x1768D14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A560C", Offset = "0x10A560C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1768D78", Offset = "0x1768D78", VA = "0x1768D78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A561C", Offset = "0x10A561C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1768DDC", Offset = "0x1768DDC", VA = "0x1768DDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A562C", Offset = "0x10A562C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1768E40", Offset = "0x1768E40", VA = "0x1768E40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A563C", Offset = "0x10A563C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200005E")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1938C1C", Offset = "0x1938C1C", VA = "0x1938C1C")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x200005F")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x18BE528", Offset = "0x18BE528", VA = "0x18BE528")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x18BE5CC", Offset = "0x18BE5CC", VA = "0x18BE5CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x18BE6B8", Offset = "0x18BE6B8", VA = "0x18BE6B8")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x18BE718", Offset = "0x18BE718", VA = "0x18BE718")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000060")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x18CA4AC", Offset = "0x18CA4AC", VA = "0x18CA4AC")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000061")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000062")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AD78", Offset = "0x109AD78")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DC")]
			[Address(RVA = "0x293CA7C", Offset = "0x293CA7C", VA = "0x293CA7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001DE")]
			[Address(RVA = "0x293CAC4", Offset = "0x293CAC4", VA = "0x293CAC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x293C900", Offset = "0x293C900", VA = "0x293C900")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x293C92C", Offset = "0x293C92C", VA = "0x293C92C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x293C930", Offset = "0x293C930", VA = "0x293C930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x293CA84", Offset = "0x293CA84", VA = "0x293CA84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1A5E2B4", Offset = "0x1A5E2B4", VA = "0x1A5E2B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1A5E3D0", Offset = "0x1A5E3D0", VA = "0x1A5E3D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1A5E358", Offset = "0x1A5E358", VA = "0x1A5E358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A564C", Offset = "0x10A564C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1A5E57C", Offset = "0x1A5E57C", VA = "0x1A5E57C")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000063")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109E8D8", Offset = "0x109E8D8")]
	public int SubdivisionsU;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109E8F4", Offset = "0x109E8F4")]
	public int SubdivisionsV;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1949CB8", Offset = "0x1949CB8", VA = "0x1949CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x194A700", Offset = "0x194A700", VA = "0x194A700")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000064")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000037")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x1C2F8E4", Offset = "0x1C2F8E4", VA = "0x1C2F8E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1C2F938", Offset = "0x1C2F938", VA = "0x1C2F938")]
	public void Start()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1C2FD60", Offset = "0x1C2FD60", VA = "0x1C2FD60")]
	public void Update()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1C2FE4C", Offset = "0x1C2FE4C", VA = "0x1C2FE4C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x10A56FC", Offset = "0x10A56FC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60001E5")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60001E7")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60001E8")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60001E9")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60001EA")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60001EB")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60001EC")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1C2FEB0", Offset = "0x1C2FEB0", VA = "0x1C2FEB0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1C2FEEC", Offset = "0x1C2FEEC", VA = "0x1C2FEEC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1C2FF5C", Offset = "0x1C2FF5C", VA = "0x1C2FF5C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x1C300CC", Offset = "0x1C300CC", VA = "0x1C300CC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1C301A8", Offset = "0x1C301A8", VA = "0x1C301A8")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1C2FC58", Offset = "0x1C2FC58", VA = "0x1C2FC58")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x1C30270", Offset = "0x1C30270", VA = "0x1C30270")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1C302D8", Offset = "0x1C302D8", VA = "0x1C302D8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1C303D0", Offset = "0x1C303D0", VA = "0x1C303D0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109AD98", Offset = "0x109AD98")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000066")]
	public enum DrawMode
	{
		[Token(Token = "0x40001DB")]
		Opaque,
		[Token(Token = "0x40001DC")]
		OpaqueWithClip,
		[Token(Token = "0x40001DD")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40001DE")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000038")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x1C3B2FC", Offset = "0x1C3B2FC", VA = "0x1C3B2FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x1C3B38C", Offset = "0x1C3B38C", VA = "0x1C3B38C")]
		set
		{
		}
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1C39D78", Offset = "0x1C39D78", VA = "0x1C39D78")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x1C3A968", Offset = "0x1C3A968", VA = "0x1C3A968")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1C3A9E8", Offset = "0x1C3A9E8", VA = "0x1C3A9E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1C3AAD8", Offset = "0x1C3AAD8", VA = "0x1C3AAD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1C3ABC8", Offset = "0x1C3ABC8", VA = "0x1C3ABC8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1C3ADD4", Offset = "0x1C3ADD4", VA = "0x1C3ADD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1C3B458", Offset = "0x1C3B458", VA = "0x1C3B458")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000067")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x193FD78", Offset = "0x193FD78", VA = "0x193FD78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x193FF60", Offset = "0x193FF60", VA = "0x193FF60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x19400E8", Offset = "0x19400E8", VA = "0x19400E8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x19400F0", Offset = "0x19400F0", VA = "0x19400F0")]
	public void Release()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x19400D8", Offset = "0x19400D8", VA = "0x19400D8")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x19400F8", Offset = "0x19400F8", VA = "0x19400F8")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x2000068")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x2000069")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109ADF8", Offset = "0x109ADF8")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000210")]
			[Address(RVA = "0x293A868", Offset = "0x293A868", VA = "0x293A868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000212")]
			[Address(RVA = "0x293A8B0", Offset = "0x293A8B0", VA = "0x293A8B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x293A738", Offset = "0x293A738", VA = "0x293A738")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x293A764", Offset = "0x293A764", VA = "0x293A764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x293A768", Offset = "0x293A768", VA = "0x293A768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x293A870", Offset = "0x293A870", VA = "0x293A870", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AE08", Offset = "0x109AE08")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000216")]
			[Address(RVA = "0x293AA70", Offset = "0x293AA70", VA = "0x293AA70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000218")]
			[Address(RVA = "0x293AAB8", Offset = "0x293AAB8", VA = "0x293AAB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x293A8B8", Offset = "0x293A8B8", VA = "0x293A8B8")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x293A8E4", Offset = "0x293A8E4", VA = "0x293A8E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x293A8E8", Offset = "0x293A8E8", VA = "0x293A8E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x293AA78", Offset = "0x293AA78", VA = "0x293AA78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1944D0C", Offset = "0x1944D0C", VA = "0x1944D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1944FE0", Offset = "0x1944FE0", VA = "0x1944FE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x194503C", Offset = "0x194503C", VA = "0x194503C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x19451BC", Offset = "0x19451BC", VA = "0x19451BC")]
	public void Release()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1945290", Offset = "0x1945290", VA = "0x1945290")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5734", Offset = "0x10A5734")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x19450F8", Offset = "0x19450F8", VA = "0x19450F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5794", Offset = "0x10A5794")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x194532C", Offset = "0x194532C", VA = "0x194532C")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200006B")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000219")]
	[Address(RVA = "0x177086C", Offset = "0x177086C", VA = "0x177086C")]
	private void Start()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x17708CC", Offset = "0x17708CC", VA = "0x17708CC")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x200006C")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x17721F0", Offset = "0x17721F0", VA = "0x17721F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1772324", Offset = "0x1772324", VA = "0x1772324")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x17723B8", Offset = "0x17723B8", VA = "0x17723B8")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1772420", Offset = "0x1772420", VA = "0x1772420")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x200006D")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AE18", Offset = "0x109AE18")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022B")]
			[Address(RVA = "0x293BF9C", Offset = "0x293BF9C", VA = "0x293BF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600022D")]
			[Address(RVA = "0x293BFE4", Offset = "0x293BFE4", VA = "0x293BFE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x293BD90", Offset = "0x293BD90", VA = "0x293BD90")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x293BDBC", Offset = "0x293BDBC", VA = "0x293BDBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x293BDC0", Offset = "0x293BDC0", VA = "0x293BDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0x293BFA4", Offset = "0x293BFA4", VA = "0x293BFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1772428", Offset = "0x1772428", VA = "0x1772428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x177270C", Offset = "0x177270C", VA = "0x177270C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1772A5C", Offset = "0x1772A5C", VA = "0x1772A5C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1772DB8", Offset = "0x1772DB8", VA = "0x1772DB8")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x17730BC", Offset = "0x17730BC", VA = "0x17730BC")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x17731B0", Offset = "0x17731B0", VA = "0x17731B0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x177337C", Offset = "0x177337C", VA = "0x177337C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x17732C8", Offset = "0x17732C8", VA = "0x17732C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5894", Offset = "0x10A5894")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1773464", Offset = "0x1773464", VA = "0x1773464")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x200006F")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000070")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000213")]
		Default,
		[Token(Token = "0x4000214")]
		ForcedHand,
		[Token(Token = "0x4000215")]
		DollyHand,
		[Token(Token = "0x4000216")]
		DollyAttached,
		[Token(Token = "0x4000217")]
		HorizontalScaled,
		[Token(Token = "0x4000218")]
		VerticalScaled,
		[Token(Token = "0x4000219")]
		Menu
	}

	[Token(Token = "0x2000071")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000072")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000073")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x109E980", Offset = "0x109E980")]
	public string ObjectName;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x109E990", Offset = "0x109E990")]
	public string ObjectInstructions;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x17756D8", Offset = "0x17756D8", VA = "0x17756D8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1775734", Offset = "0x1775734", VA = "0x1775734")]
	public void Release()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1775748", Offset = "0x1775748", VA = "0x1775748")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x177575C", Offset = "0x177575C", VA = "0x177575C")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000074")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E9B0", Offset = "0x109E9B0")]
	public int radialDivisions;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109E9E8", Offset = "0x109E9E8")]
	public float borderSize;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109EA20", Offset = "0x109EA20")]
	public float fingerTaper;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109EA58", Offset = "0x109EA58")]
	public float fingerTipLength;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109EA90", Offset = "0x109EA90")]
	public float webOffset;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1A59E18", Offset = "0x1A59E18", VA = "0x1A59E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1A5A018", Offset = "0x1A5A018", VA = "0x1A5A018")]
	private void Update()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1A5A224", Offset = "0x1A5A224", VA = "0x1A5A224")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1A5A8A8", Offset = "0x1A5A8A8", VA = "0x1A5A8A8")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1A5AED8", Offset = "0x1A5AED8", VA = "0x1A5AED8")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1A5D554", Offset = "0x1A5D554", VA = "0x1A5D554")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1A5D610", Offset = "0x1A5D610", VA = "0x1A5D610")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000075")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1A5D634", Offset = "0x1A5D634", VA = "0x1A5D634")]
	private void Start()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1A5D96C", Offset = "0x1A5D96C", VA = "0x1A5D96C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1A5D6DC", Offset = "0x1A5D6DC", VA = "0x1A5D6DC")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1A5DD5C", Offset = "0x1A5DD5C", VA = "0x1A5DD5C")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1A5E24C", Offset = "0x1A5E24C", VA = "0x1A5E24C")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000076")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000077")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AE28", Offset = "0x109AE28")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000259")]
			[Address(RVA = "0x2945F28", Offset = "0x2945F28", VA = "0x2945F28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600025B")]
			[Address(RVA = "0x2945F70", Offset = "0x2945F70", VA = "0x2945F70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x2945C58", Offset = "0x2945C58", VA = "0x2945C58")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0x2945C84", Offset = "0x2945C84", VA = "0x2945C84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x2945C88", Offset = "0x2945C88", VA = "0x2945C88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x2945F30", Offset = "0x2945F30", VA = "0x2945F30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1C3C988", Offset = "0x1C3C988", VA = "0x1C3C988")]
	private void Start()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1C3CBC0", Offset = "0x1C3CBC0", VA = "0x1C3CBC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1C3D810", Offset = "0x1C3D810", VA = "0x1C3D810")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1C3E418", Offset = "0x1C3E418", VA = "0x1C3E418")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1C3CB48", Offset = "0x1C3CB48", VA = "0x1C3CB48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5944", Offset = "0x10A5944")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1C3CE2C", Offset = "0x1C3CE2C", VA = "0x1C3CE2C")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1C3DAD4", Offset = "0x1C3DAD4", VA = "0x1C3DAD4")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1C3E6DC", Offset = "0x1C3E6DC", VA = "0x1C3E6DC")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1C3E768", Offset = "0x1C3E768", VA = "0x1C3E768")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1C3E798", Offset = "0x1C3E798", VA = "0x1C3E798")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1C3E5A4", Offset = "0x1C3E5A4", VA = "0x1C3E5A4")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1C3E8BC", Offset = "0x1C3E8BC", VA = "0x1C3E8BC")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x2000078")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1E40F88", Offset = "0x1E40F88", VA = "0x1E40F88")]
	private void Start()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1E41120", Offset = "0x1E41120", VA = "0x1E41120")]
	private void Update()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1E411E8", Offset = "0x1E411E8", VA = "0x1E411E8")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000079")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200007A")]
	public enum BrushState
	{
		[Token(Token = "0x4000256")]
		Idle,
		[Token(Token = "0x4000257")]
		Inking
	}

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1E41D70", Offset = "0x1E41D70", VA = "0x1E41D70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1E41D78", Offset = "0x1E41D78", VA = "0x1E41D78")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1E42060", Offset = "0x1E42060", VA = "0x1E42060")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1E42258", Offset = "0x1E42258", VA = "0x1E42258")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1E42400", Offset = "0x1E42400", VA = "0x1E42400")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1E41F6C", Offset = "0x1E41F6C", VA = "0x1E41F6C")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1E424DC", Offset = "0x1E424DC", VA = "0x1E424DC")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200007B")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1E42574", Offset = "0x1E42574", VA = "0x1E42574")]
	private void Find()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1E4270C", Offset = "0x1E4270C", VA = "0x1E4270C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1E42848", Offset = "0x1E42848", VA = "0x1E42848")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x200007C")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1E4285C", Offset = "0x1E4285C", VA = "0x1E4285C")]
	private void Start()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x1E42A70", Offset = "0x1E42A70", VA = "0x1E42A70")]
	private void Update()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1E42C40", Offset = "0x1E42C40", VA = "0x1E42C40")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x200007D")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x200007E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AE38", Offset = "0x109AE38")]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0x2946368", Offset = "0x2946368", VA = "0x2946368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0x29463B0", Offset = "0x29463B0", VA = "0x29463B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x29461B4", Offset = "0x29461B4", VA = "0x29461B4")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x29461E0", Offset = "0x29461E0", VA = "0x29461E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x29461E4", Offset = "0x29461E4", VA = "0x29461E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x2946370", Offset = "0x2946370", VA = "0x2946370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AE48", Offset = "0x109AE48")]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000283")]
			[Address(RVA = "0x29465AC", Offset = "0x29465AC", VA = "0x29465AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000285")]
			[Address(RVA = "0x29465F4", Offset = "0x29465F4", VA = "0x29465F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x29463B8", Offset = "0x29463B8", VA = "0x29463B8")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x29463E4", Offset = "0x29463E4", VA = "0x29463E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x29463E8", Offset = "0x29463E8", VA = "0x29463E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x29465B4", Offset = "0x29465B4", VA = "0x29465B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1E42C48", Offset = "0x1E42C48", VA = "0x1E42C48")]
	private void Start()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1E42F94", Offset = "0x1E42F94", VA = "0x1E42F94")]
	private void Update()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1E431EC", Offset = "0x1E431EC", VA = "0x1E431EC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1E43370", Offset = "0x1E43370", VA = "0x1E43370")]
	public void Release()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1E432E8", Offset = "0x1E432E8", VA = "0x1E432E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A59F4", Offset = "0x10A59F4")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1E43460", Offset = "0x1E43460", VA = "0x1E43460")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5A54", Offset = "0x10A5A54")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1E434E8", Offset = "0x1E434E8", VA = "0x1E434E8")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1E43508", Offset = "0x1E43508", VA = "0x1E43508")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x1E43528", Offset = "0x1E43528", VA = "0x1E43528")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1E42F18", Offset = "0x1E42F18", VA = "0x1E42F18")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x1E4358C", Offset = "0x1E4358C", VA = "0x1E4358C")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1E43598", Offset = "0x1E43598", VA = "0x1E43598")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1E42FAC", Offset = "0x1E42FAC", VA = "0x1E42FAC")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1E435A4", Offset = "0x1E435A4", VA = "0x1E435A4")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000080")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1E435E8", Offset = "0x1E435E8", VA = "0x1E435E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1E436A8", Offset = "0x1E436A8", VA = "0x1E436A8")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000081")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x18BE238", Offset = "0x18BE238", VA = "0x18BE238")]
	private void Start()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x18BE47C", Offset = "0x18BE47C", VA = "0x18BE47C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x18BE4D4", Offset = "0x18BE4D4", VA = "0x18BE4D4")]
	public void Release()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x18BE520", Offset = "0x18BE520", VA = "0x18BE520")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000082")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x18BE720", Offset = "0x18BE720", VA = "0x18BE720")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x18BE798", Offset = "0x18BE798", VA = "0x18BE798")]
	private void Update()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x18BEABC", Offset = "0x18BEABC", VA = "0x18BEABC")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000083")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x18C12C8", Offset = "0x18C12C8", VA = "0x18C12C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x18C1750", Offset = "0x18C1750", VA = "0x18C1750")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000084")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AE58", Offset = "0x109AE58")]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0x293A6E8", Offset = "0x293A6E8", VA = "0x293A6E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029E")]
			[Address(RVA = "0x293A730", Offset = "0x293A730", VA = "0x293A730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x293A5BC", Offset = "0x293A5BC", VA = "0x293A5BC")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x293A5E8", Offset = "0x293A5E8", VA = "0x293A5E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x293A5EC", Offset = "0x293A5EC", VA = "0x293A5EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x293A6F0", Offset = "0x293A6F0", VA = "0x293A6F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x19443D4", Offset = "0x19443D4", VA = "0x19443D4")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x19443F8", Offset = "0x19443F8", VA = "0x19443F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1944518", Offset = "0x1944518", VA = "0x1944518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x19445CC", Offset = "0x19445CC", VA = "0x19445CC")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x19447F8", Offset = "0x19447F8", VA = "0x19447F8")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x19448B0", Offset = "0x19448B0", VA = "0x19448B0")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1944770", Offset = "0x1944770", VA = "0x1944770")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5B54", Offset = "0x10A5B54")]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x19449D0", Offset = "0x19449D0", VA = "0x19449D0")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x2000086")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x19449E8", Offset = "0x19449E8", VA = "0x19449E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1944D04", Offset = "0x1944D04", VA = "0x1944D04")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109AE68", Offset = "0x109AE68")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x109AE68", Offset = "0x109AE68")]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x109EB68", Offset = "0x109EB68")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x17736AC", Offset = "0x17736AC", VA = "0x17736AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x17738E0", Offset = "0x17738E0", VA = "0x17738E0")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1773D40", Offset = "0x1773D40", VA = "0x1773D40")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1773748", Offset = "0x1773748", VA = "0x1773748")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1773F40", Offset = "0x1773F40", VA = "0x1773F40")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1774034", Offset = "0x1774034", VA = "0x1774034")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x2000088")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x2000089")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109AEDC", Offset = "0x109AEDC")]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AE")]
			[Address(RVA = "0x2945988", Offset = "0x2945988", VA = "0x2945988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B0")]
			[Address(RVA = "0x29459D0", Offset = "0x29459D0", VA = "0x29459D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x2945854", Offset = "0x2945854", VA = "0x2945854")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x2945880", Offset = "0x2945880", VA = "0x2945880", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x2945884", Offset = "0x2945884", VA = "0x2945884", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x2945990", Offset = "0x2945990", VA = "0x2945990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1C379B0", Offset = "0x1C379B0", VA = "0x1C379B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5C04", Offset = "0x10A5C04")]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1C37A28", Offset = "0x1C37A28", VA = "0x1C37A28", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1C37A54", Offset = "0x1C37A54", VA = "0x1C37A54", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1C37AC8", Offset = "0x1C37AC8", VA = "0x1C37AC8")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x200008A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109AEEC", Offset = "0x109AEEC")]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1E42850", Offset = "0x1E42850", VA = "0x1E42850")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1E42854", Offset = "0x1E42854", VA = "0x1E42854")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x200008B")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1E4F280", Offset = "0x1E4F280", VA = "0x1E4F280")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1E4F304", Offset = "0x1E4F304", VA = "0x1E4F304")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1E4F394", Offset = "0x1E4F394", VA = "0x1E4F394")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x200008C")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x200008D")]
	public enum Method
	{
		[Token(Token = "0x40002B3")]
		Adapt,
		[Token(Token = "0x40002B4")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x40002B5")]
		Scale,
		[Token(Token = "0x40002B6")]
		None
	}

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x109EBA0", Offset = "0x109EBA0")]
	public Method ScalingX;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109EBB4", Offset = "0x109EBB4")]
	public float PaddingX;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109EBCC", Offset = "0x109EBCC")]
	public float PaddingXMax;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x109EBE4", Offset = "0x109EBE4")]
	public Method ScalingY;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109EBF8", Offset = "0x109EBF8")]
	public float PaddingY;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109EC10", Offset = "0x109EC10")]
	public float PaddingYMax;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x109EC28", Offset = "0x109EC28")]
	public Method ScalingZ;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109EC3C", Offset = "0x109EC3C")]
	public float PaddingZ;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x109EC54", Offset = "0x109EC54")]
	public float PaddingZMax;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109EC6C", Offset = "0x109EC6C")]
	private Vector3 <NewSize>k__BackingField;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109EC7C", Offset = "0x109EC7C")]
	private Vector3 <DefaultSize>k__BackingField;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109EC8C", Offset = "0x109EC8C")]
	private Mesh <Mesh>k__BackingField;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x17000049")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x18C5CDC", Offset = "0x18C5CDC", VA = "0x18C5CDC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004A")]
	public Vector3 NewSize
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x18C5CF8", Offset = "0x18C5CF8", VA = "0x18C5CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5CB4", Offset = "0x10A5CB4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x18C5D04", Offset = "0x18C5D04", VA = "0x18C5D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5CC4", Offset = "0x10A5CC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x18C5D10", Offset = "0x18C5D10", VA = "0x18C5D10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5CD4", Offset = "0x10A5CD4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x18C5D1C", Offset = "0x18C5D1C", VA = "0x18C5D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5CE4", Offset = "0x10A5CE4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public Mesh Mesh
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x18C5D28", Offset = "0x18C5D28", VA = "0x18C5D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5CF4", Offset = "0x10A5CF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x18C5D30", Offset = "0x18C5D30", VA = "0x18C5D30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5D04", Offset = "0x10A5D04")]
		private set
		{
		}
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x18C5D38", Offset = "0x18C5D38", VA = "0x18C5D38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x18C5E80", Offset = "0x18C5E80", VA = "0x18C5E80")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x200008E")]
public class SimpleResizer
{
	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x18C5E88", Offset = "0x18C5E88", VA = "0x18C5E88")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x18C6194", Offset = "0x18C6194", VA = "0x18C6194")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x18C642C", Offset = "0x18C642C", VA = "0x18C642C")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x18C6508", Offset = "0x18C6508", VA = "0x18C6508")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x200008F")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x18C6C60", Offset = "0x18C6C60", VA = "0x18C6C60", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x18C6C64", Offset = "0x18C6C64", VA = "0x18C6C64", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x18C70C8", Offset = "0x18C70C8", VA = "0x18C70C8")]
	public Spawnable()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x18C6DD4", Offset = "0x18C6DD4", VA = "0x18C6DD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5D14", Offset = "0x10A5D14")]
	internal static int <OnAfterDeserialize>g__IndexOf|4_0(string label, IEnumerable<string> collection)
	{
		return default(int);
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109AF5C", Offset = "0x109AF5C")]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000091")]
	public enum GeometryType
	{
		[Token(Token = "0x40002BE")]
		Plane,
		[Token(Token = "0x40002BF")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x2000092")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x2937AC0", Offset = "0x2937AC0", VA = "0x2937AC0")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x2937ECC", Offset = "0x2937ECC", VA = "0x2937ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x2938770", Offset = "0x2938770", VA = "0x2938770")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x2938674", Offset = "0x2938674", VA = "0x2938674")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x29387F4", Offset = "0x29387F4", VA = "0x29387F4")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109AFBC", Offset = "0x109AFBC")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109B01C", Offset = "0x109B01C")]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002DF")]
			[Address(RVA = "0x2939E3C", Offset = "0x2939E3C", VA = "0x2939E3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E1")]
			[Address(RVA = "0x2939E84", Offset = "0x2939E84", VA = "0x2939E84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x2939C78", Offset = "0x2939C78", VA = "0x2939C78")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x2939CA4", Offset = "0x2939CA4", VA = "0x2939CA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x2939CA8", Offset = "0x2939CA8", VA = "0x2939CA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x2939E44", Offset = "0x2939E44", VA = "0x2939E44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C2")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109ECBC", Offset = "0x109ECBC")]
	private Canvas _canvas;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109ED08", Offset = "0x109ED08")]
	private Transform _pivot;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109ED54", Offset = "0x109ED54")]
	[SerializeField]
	private GameObject _anchorMenu;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109EDA0", Offset = "0x109EDA0")]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109EDEC", Offset = "0x109EDEC")]
	private GameObject _saveIcon;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109EE38", Offset = "0x109EE38")]
	private Image _labelImage;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109EE84", Offset = "0x109EE84")]
	[SerializeField]
	private Color _labelBaseColor;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109EED0", Offset = "0x109EED0")]
	private Color _labelHighlightColor;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109EF1C", Offset = "0x109EF1C")]
	[SerializeField]
	private Color _labelSelectedColor;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109EF68", Offset = "0x109EF68")]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109EFB4", Offset = "0x109EFB4")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109F000", Offset = "0x109F000")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x1700004D")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x19392FC", Offset = "0x19392FC", VA = "0x19392FC")]
		set
		{
		}
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1938C24", Offset = "0x1938C24", VA = "0x1938C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1938D9C", Offset = "0x1938D9C", VA = "0x1938D9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5D24", Offset = "0x10A5D24")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1938E14", Offset = "0x1938E14", VA = "0x1938E14")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1939094", Offset = "0x1939094", VA = "0x1939094")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x193918C", Offset = "0x193918C", VA = "0x193918C")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1939204", Offset = "0x1939204", VA = "0x1939204")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x193931C", Offset = "0x193931C", VA = "0x193931C")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1939424", Offset = "0x1939424", VA = "0x1939424")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1939544", Offset = "0x1939544", VA = "0x1939544")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1938E70", Offset = "0x1938E70", VA = "0x1938E70")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1938F84", Offset = "0x1938F84", VA = "0x1938F84")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1939618", Offset = "0x1939618", VA = "0x1939618")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1939770", Offset = "0x1939770", VA = "0x1939770")]
	public Anchor()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1939778", Offset = "0x1939778", VA = "0x1939778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5D84", Offset = "0x10A5D84")]
	private void <OnSaveLocalButtonPressed>b__22_0(OVRSpatialAnchor anchor, bool success)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x19398A0", Offset = "0x19398A0", VA = "0x19398A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5D94", Offset = "0x10A5D94")]
	private void <OnEraseButtonPressed>b__24_0(OVRSpatialAnchor anchor, bool success)
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B02C", Offset = "0x109B02C")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000096")]
	public enum AnchorMode
	{
		[Token(Token = "0x40002EB")]
		Create,
		[Token(Token = "0x40002EC")]
		Select
	}

	[Token(Token = "0x2000097")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109F04C", Offset = "0x109F04C")]
	[SerializeField]
	private GameObject _createModeButton;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109F098", Offset = "0x109F098")]
	[SerializeField]
	private GameObject _selectModeButton;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109F0E4", Offset = "0x109F0E4")]
	[SerializeField]
	private Transform _trackedDevice;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109F130", Offset = "0x109F130")]
	[SerializeField]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109F17C", Offset = "0x109F17C")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109F1D8", Offset = "0x109F1D8")]
	[SerializeField]
	private GameObject _placementPreview;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x109F224", Offset = "0x109F224")]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000050")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x19398C8", Offset = "0x19398C8", VA = "0x19398C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x19398D0", Offset = "0x19398D0", VA = "0x19398D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x19399A8", Offset = "0x19399A8", VA = "0x19399A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1939B14", Offset = "0x1939B14", VA = "0x1939B14")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1939F68", Offset = "0x1939F68", VA = "0x1939F68")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1939FD8", Offset = "0x1939FD8", VA = "0x1939FD8")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1939A9C", Offset = "0x1939A9C", VA = "0x1939A9C")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x193A060", Offset = "0x193A060", VA = "0x193A060")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x193A0E8", Offset = "0x193A0E8", VA = "0x193A0E8")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x193A114", Offset = "0x193A114", VA = "0x193A114")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x193A034", Offset = "0x193A034", VA = "0x193A034")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1939E58", Offset = "0x1939E58", VA = "0x1939E58")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x193A250", Offset = "0x193A250", VA = "0x193A250")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x193A19C", Offset = "0x193A19C", VA = "0x193A19C")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x193A1BC", Offset = "0x193A1BC", VA = "0x193A1BC")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x193A368", Offset = "0x193A368", VA = "0x193A368")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x193A1DC", Offset = "0x193A1DC", VA = "0x193A1DC")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x193A218", Offset = "0x193A218", VA = "0x193A218")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1939C20", Offset = "0x1939C20", VA = "0x1939C20")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x193A460", Offset = "0x193A460", VA = "0x193A460")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x193A494", Offset = "0x193A494", VA = "0x193A494")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x193A530", Offset = "0x193A530", VA = "0x193A530")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x193A6AC", Offset = "0x193A6AC", VA = "0x193A6AC")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000098")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x18C6510", Offset = "0x18C6510", VA = "0x18C6510")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x18C68C0", Offset = "0x18C68C0", VA = "0x18C68C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x18C67C8", Offset = "0x18C67C8", VA = "0x18C67C8")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x18C6954", Offset = "0x18C6954", VA = "0x18C6954")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x18C6738", Offset = "0x18C6738", VA = "0x18C6738")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x18C6B08", Offset = "0x18C6B08", VA = "0x18C6B08")]
	public SpatialAnchorLoader()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x18C6B10", Offset = "0x18C6B10", VA = "0x18C6B10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5DF4", Offset = "0x10A5DF4")]
	private void <Load>b__4_0(OVRSpatialAnchor.UnboundAnchor[] anchors)
	{
	}
}
[Token(Token = "0x2000099")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200009A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109B08C", Offset = "0x109B08C")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x228DC74", Offset = "0x228DC74", VA = "0x228DC74")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x228DC7C", Offset = "0x228DC7C", VA = "0x228DC7C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x18CA4B4", Offset = "0x18CA4B4", VA = "0x18CA4B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x18CA6D0", Offset = "0x18CA6D0", VA = "0x18CA6D0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x18CA7E0", Offset = "0x18CA7E0", VA = "0x18CA7E0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200009B")]
public class LocalizedHaptics : MonoBehaviour
{
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F280", Offset = "0x109F280")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1C2F670", Offset = "0x1C2F670", VA = "0x1C2F670")]
	private void Start()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1C2F698", Offset = "0x1C2F698", VA = "0x1C2F698")]
	private void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1C2F800", Offset = "0x1C2F800", VA = "0x1C2F800")]
	public LocalizedHaptics()
	{
	}
}
[Token(Token = "0x200009C")]
public class SceneSettings : MonoBehaviour
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F2CC", Offset = "0x109F2CC")]
	[SerializeField]
	private float m_fixedTimeStep;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F318", Offset = "0x109F318")]
	private float m_gravityScalar;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_defaultContactOffset;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x18BEAC4", Offset = "0x18BEAC4", VA = "0x18BEAC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x18BEB28", Offset = "0x18BEB28", VA = "0x18BEB28")]
	private void Start()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x18BEB30", Offset = "0x18BEB30", VA = "0x18BEB30")]
	private static void CollidersSetContactOffset(float contactOffset)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x18BEC08", Offset = "0x18BEC08", VA = "0x18BEC08")]
	public SceneSettings()
	{
	}
}
[Token(Token = "0x200009D")]
public class StylusTip : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	private const int MaxBreadCrumbs = 60;

	[Token(Token = "0x40002FA")]
	private const float BreadCrumbMinSize = 0.005f;

	[Token(Token = "0x40002FB")]
	private const float BreadCrumbMaxSize = 0.02f;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F374", Offset = "0x109F374")]
	[SerializeField]
	private Transform m_trackingSpace;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F3C0", Offset = "0x109F3C0")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_breadCrumbPf;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_breadCrumbContainer;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] m_breadCrumbs;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_breadCrumbIndexPrev;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_breadCrumbIndexCurr;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x18CB388", Offset = "0x18CB388", VA = "0x18CB388")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x18CB620", Offset = "0x18CB620", VA = "0x18CB620")]
	private void Update()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x18CBA64", Offset = "0x18CBA64", VA = "0x18CBA64")]
	private static Pose GetT_Device_StylusTip(OVRInput.Controller controller)
	{
		return default(Pose);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x18CBB9C", Offset = "0x18CBB9C", VA = "0x18CBB9C")]
	public StylusTip()
	{
	}
}
[Token(Token = "0x200009E")]
public class UiAxis1dInspector : MonoBehaviour
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F41C", Offset = "0x109F41C")]
	[SerializeField]
	private float m_minExtent;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_maxExtent;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F478", Offset = "0x109F478")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Slider m_slider;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x138EBE0", Offset = "0x138EBE0", VA = "0x138EBE0")]
	public void SetExtents(float minExtent, float maxExtent)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x138EBE8", Offset = "0x138EBE8", VA = "0x138EBE8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x138EC0C", Offset = "0x138EC0C", VA = "0x138EC0C")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x138ED1C", Offset = "0x138ED1C", VA = "0x138ED1C")]
	public UiAxis1dInspector()
	{
	}
}
[Token(Token = "0x200009F")]
public class UiAxis2dInspector : MonoBehaviour
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F4E4", Offset = "0x109F4E4")]
	[SerializeField]
	private Vector2 m_xExtent;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 m_yExtent;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F540", Offset = "0x109F540")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image m_handle;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x138ED2C", Offset = "0x138ED2C", VA = "0x138ED2C")]
	public void SetExtents(Vector2 xExtent, Vector2 yExtent)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x138ED38", Offset = "0x138ED38", VA = "0x138ED38")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x138ED5C", Offset = "0x138ED5C", VA = "0x138ED5C")]
	public void SetValue(bool isTouching, Vector2 value)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x138F13C", Offset = "0x138F13C", VA = "0x138F13C")]
	public UiAxis2dInspector()
	{
	}
}
[Token(Token = "0x20000A0")]
public class UiBoolInspector : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F5AC", Offset = "0x109F5AC")]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle m_toggle;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x138F150", Offset = "0x138F150", VA = "0x138F150")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x138F174", Offset = "0x138F174", VA = "0x138F174")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x138F194", Offset = "0x138F194", VA = "0x138F194")]
	public UiBoolInspector()
	{
	}
}
[Token(Token = "0x20000A1")]
public class UiDeviceInspector : MonoBehaviour
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F608", Offset = "0x109F608")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F654", Offset = "0x109F654")]
	[SerializeField]
	private TextMeshProUGUI m_title;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_status;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UiBoolInspector m_thumbRestTouch;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UiAxis1dInspector m_thumbRestForce;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UiAxis1dInspector m_indexTrigger;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UiAxis1dInspector m_gripTrigger;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UiAxis1dInspector m_stylusTipForce;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UiAxis1dInspector m_indexCurl1d;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UiAxis1dInspector m_indexSlider1d;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F720", Offset = "0x109F720")]
	[SerializeField]
	private UiBoolInspector m_ax;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UiBoolInspector m_axTouch;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UiBoolInspector m_by;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UiBoolInspector m_byTouch;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private UiBoolInspector m_indexTouch;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UiAxis2dInspector m_thumbstick;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x138F19C", Offset = "0x138F19C", VA = "0x138F19C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x138F1C4", Offset = "0x138F1C4", VA = "0x138F1C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x138F754", Offset = "0x138F754", VA = "0x138F754")]
	private static string ToDeviceModel()
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x138F798", Offset = "0x138F798", VA = "0x138F798")]
	private static string ToHandednessString(OVRInput.Handedness handedness)
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x138F818", Offset = "0x138F818", VA = "0x138F818")]
	public UiDeviceInspector()
	{
	}
}
[Token(Token = "0x20000A2")]
public class UiSceneMenu : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F7BC", Offset = "0x109F7BC")]
	[SerializeField]
	private VerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_labelPf;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2 s_lastThumbstickL;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 s_lastThumbstickR;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Scene m_activeScene;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x138F828", Offset = "0x138F828", VA = "0x138F828")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x138FB24", Offset = "0x138FB24", VA = "0x138FB24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x138FC50", Offset = "0x138FC50", VA = "0x138FC50")]
	private bool InputPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x138FD08", Offset = "0x138FD08", VA = "0x138FD08")]
	private bool InputNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x138FD5C", Offset = "0x138FD5C", VA = "0x138FD5C")]
	private bool KeyboardPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x138FE04", Offset = "0x138FE04", VA = "0x138FE04")]
	private bool KeyboardNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x138FD68", Offset = "0x138FD68", VA = "0x138FD68")]
	private bool ThumbstickPrevScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x138FE10", Offset = "0x138FE10", VA = "0x138FE10")]
	private bool ThumbstickNextScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x138FEAC", Offset = "0x138FEAC", VA = "0x138FEAC")]
	private Vector2 GetLastThumbstickValue(OVRInput.Controller controller)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x138FCA4", Offset = "0x138FCA4", VA = "0x138FCA4")]
	private void ChangeScene(int nextScene)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x138F8E8", Offset = "0x138F8E8", VA = "0x138F8E8")]
	private void CreateLabel(int sceneIndex, string scenePath)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x138FF18", Offset = "0x138FF18", VA = "0x138FF18")]
	public UiSceneMenu()
	{
	}
}
[Token(Token = "0x20000A3")]
public class UiVectorInspector : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x109F818", Offset = "0x109F818")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x138FF20", Offset = "0x138FF20", VA = "0x138FF20")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x138FF44", Offset = "0x138FF44", VA = "0x138FF44")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x138FFF0", Offset = "0x138FFF0", VA = "0x138FFF0")]
	public UiVectorInspector()
	{
	}
}
[Token(Token = "0x20000A4")]
public class SECTR_AudioDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SECTR_AudioCueInstance chatterInstance;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109F874", Offset = "0x109F874")]
	public SECTR_AudioCue SoftCue;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109F8B4", Offset = "0x109F8B4")]
	public SECTR_AudioCue ChatterCue;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109F8F4", Offset = "0x109F8F4")]
	public SECTR_AudioCue GunshotCue;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109F934", Offset = "0x109F934")]
	public SECTR_AudioCue ExplosionCue;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109F974", Offset = "0x109F974")]
	public GameObject AudioPrefab;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109F9AC", Offset = "0x109F9AC")]
	public float PrefabThrowSpeed;

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1A47C30", Offset = "0x1A47C30", VA = "0x1A47C30", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1A47FF0", Offset = "0x1A47FF0", VA = "0x1A47FF0")]
	protected void ShowHUD(bool active)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1A480A8", Offset = "0x1A480A8", VA = "0x1A480A8")]
	protected void PlaySoft(bool active)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1A481F0", Offset = "0x1A481F0", VA = "0x1A481F0")]
	protected void PlayChatter(bool active)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1A48330", Offset = "0x1A48330", VA = "0x1A48330")]
	protected void PlayGunshot(bool active)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1A483DC", Offset = "0x1A483DC", VA = "0x1A483DC")]
	protected void PlayExplosion(bool active)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1A48488", Offset = "0x1A48488", VA = "0x1A48488")]
	protected void ThrowPrefab(bool active)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1A4866C", Offset = "0x1A4866C", VA = "0x1A4866C")]
	public SECTR_AudioDemoUI()
	{
	}
}
[Token(Token = "0x20000A5")]
public class SECTR_CompleteDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string originalDemoMessage;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0x109F9E4", Offset = "0x109F9E4")]
	public string Unity4PerfMessage;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1A50AA0", Offset = "0x1A50AA0", VA = "0x1A50AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1A50C60", Offset = "0x1A50C60", VA = "0x1A50C60", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1A50D20", Offset = "0x1A50D20", VA = "0x1A50D20", Slot = "6")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1A50E68", Offset = "0x1A50E68", VA = "0x1A50E68")]
	public SECTR_CompleteDemoUI()
	{
	}
}
[Token(Token = "0x20000A6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B09C", Offset = "0x109B09C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B09C", Offset = "0x109B09C")]
public class SECTR_CharacterMotor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000A7")]
	public class CharacterMotorMovement
	{
		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxForwardSpeed;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxSidewaysSpeed;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxBackwardsSpeed;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve slopeSpeedMultiplier;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxGroundAcceleration;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxAirAcceleration;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float gravity;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxFallSpeed;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float footstepDistance;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float pushPower;

		[NonSerialized]
		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CollisionFlags collisionFlags;

		[NonSerialized]
		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 velocity;

		[NonSerialized]
		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 frameVelocity;

		[NonSerialized]
		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 hitPoint;

		[NonSerialized]
		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 lastHitPoint;

		[NonSerialized]
		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PhysicMaterial hitMaterial;

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x228A904", Offset = "0x228A904", VA = "0x228A904")]
		public CharacterMotorMovement()
		{
		}
	}

	[Token(Token = "0x20000A8")]
	public enum MovementTransferOnJump
	{
		[Token(Token = "0x4000350")]
		None,
		[Token(Token = "0x4000351")]
		InitTransfer,
		[Token(Token = "0x4000352")]
		PermaTransfer,
		[Token(Token = "0x4000353")]
		PermaLocked
	}

	[Serializable]
	[Token(Token = "0x20000A9")]
	public class CharacterMotorJumping
	{
		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float baseHeight;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float extraHeight;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float perpAmount;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float steepPerpAmount;

		[NonSerialized]
		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool jumping;

		[NonSerialized]
		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool holdingJumpButton;

		[NonSerialized]
		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lastStartTime;

		[NonSerialized]
		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lastButtonDownTime;

		[NonSerialized]
		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 jumpDir;

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x228A8AC", Offset = "0x228A8AC", VA = "0x228A8AC")]
		public CharacterMotorJumping()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000AA")]
	public class CharacterMotorMovingPlatform
	{
		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MovementTransferOnJump movementTransfer;

		[NonSerialized]
		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform hitPlatform;

		[NonSerialized]
		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform activePlatform;

		[NonSerialized]
		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 activeLocalPoint;

		[NonSerialized]
		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 activeGlobalPoint;

		[NonSerialized]
		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion activeLocalRotation;

		[NonSerialized]
		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Quaternion activeGlobalRotation;

		[NonSerialized]
		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Matrix4x4 lastMatrix;

		[NonSerialized]
		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 platformVelocity;

		[NonSerialized]
		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool newPlatform;

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x228AB0C", Offset = "0x228AB0C", VA = "0x228AB0C")]
		public CharacterMotorMovingPlatform()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000AB")]
	public class CharacterMotorSliding
	{
		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float slidingSpeed;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidewaysControl;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedControl;

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x228AB24", Offset = "0x228AB24", VA = "0x228AB24")]
		public CharacterMotorSliding()
		{
		}
	}

	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109B120", Offset = "0x109B120")]
	private sealed class <SubtractNewPlatformVelocity>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_CharacterMotor <>4__this;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <platform>5__2;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000355")]
			[Address(RVA = "0x228A85C", Offset = "0x228A85C", VA = "0x228A85C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000357")]
			[Address(RVA = "0x228A8A4", Offset = "0x228A8A4", VA = "0x228A8A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x228A654", Offset = "0x228A654", VA = "0x228A654")]
		[DebuggerHidden]
		public <SubtractNewPlatformVelocity>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x228A680", Offset = "0x228A680", VA = "0x228A680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x228A684", Offset = "0x228A684", VA = "0x228A684", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x228A864", Offset = "0x228A864", VA = "0x228A864", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canControl;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 lastGroundNormal;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform cachedTransform;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CharacterController cachedController;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastFootstepPosition;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhysicMaterial defaultHitMaterial;

	[NonSerialized]
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 inputMoveDirection;

	[NonSerialized]
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool inputJump;

	[NonSerialized]
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool grounded;

	[NonSerialized]
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 groundNormal;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109F9F4", Offset = "0x109F9F4")]
	public CharacterMotorMovement movement;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FA2C", Offset = "0x109FA2C")]
	public CharacterMotorJumping jumping;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FA64", Offset = "0x109FA64")]
	public CharacterMotorMovingPlatform movingPlatform;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CharacterMotorSliding sliding;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1A4CFA4", Offset = "0x1A4CFA4", VA = "0x1A4CFA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1A4D074", Offset = "0x1A4D074", VA = "0x1A4D074")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1A4DBAC", Offset = "0x1A4DBAC", VA = "0x1A4DBAC")]
	private Vector3 ApplyInputVelocityChange(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1A4DE38", Offset = "0x1A4DE38", VA = "0x1A4DE38")]
	private Vector3 ApplyGravityAndJumping(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1A4E5F4", Offset = "0x1A4E5F4", VA = "0x1A4E5F4")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1A4E34C", Offset = "0x1A4E34C", VA = "0x1A4E34C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5E04", Offset = "0x10A5E04")]
	private IEnumerator SubtractNewPlatformVelocity()
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1A4E28C", Offset = "0x1A4E28C", VA = "0x1A4E28C")]
	private bool MoveWithPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1A4E410", Offset = "0x1A4E410", VA = "0x1A4E410")]
	private Vector3 GetDesiredHorizontalVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1A4E4D4", Offset = "0x1A4E4D4", VA = "0x1A4E4D4")]
	private Vector3 AdjustGroundVelocityToNormal(Vector3 hVelocity, Vector3 groundNormal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1A4E330", Offset = "0x1A4E330", VA = "0x1A4E330")]
	private bool IsGroundedTest()
	{
		return default(bool);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1A4E590", Offset = "0x1A4E590", VA = "0x1A4E590")]
	private float GetMaxAcceleration(bool grounded)
	{
		return default(float);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1A4E5BC", Offset = "0x1A4E5BC", VA = "0x1A4E5BC")]
	private float CalculateJumpVerticalSpeed(float targetJumpHeight)
	{
		return default(float);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1A4E3C4", Offset = "0x1A4E3C4", VA = "0x1A4E3C4")]
	private bool TooSteep()
	{
		return default(bool);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1A4E98C", Offset = "0x1A4E98C", VA = "0x1A4E98C")]
	private float MaxSpeedInDirection(Vector3 desiredMovementDirection)
	{
		return default(float);
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1A4EA74", Offset = "0x1A4EA74", VA = "0x1A4EA74")]
	public SECTR_CharacterMotor()
	{
	}
}
[Token(Token = "0x20000AD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B130", Offset = "0x109B130")]
public class SECTR_DemoUI : MonoBehaviour
{
	[Token(Token = "0x20000AE")]
	protected enum WatermarkLocation
	{
		[Token(Token = "0x400037B")]
		UpperLeft,
		[Token(Token = "0x400037C")]
		UpperCenter,
		[Token(Token = "0x400037D")]
		UpperRight
	}

	[Token(Token = "0x20000AF")]
	protected delegate void DemoButtonPressedDelegate(bool active);

	[Token(Token = "0x20000B0")]
	private class DemoButton
	{
		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode key;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string activeHint;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string inactiveHint;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool pressed;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DemoButtonPressedDelegate demoButtonPressed;

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x228BCB8", Offset = "0x228BCB8", VA = "0x228BCB8")]
		public DemoButton(KeyCode key, string activeHint, string inactiveHint, DemoButtonPressedDelegate demoButtonPressed)
		{
		}
	}

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool passedIntro;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected SECTR_FPSController cachedController;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GUIStyle demoButtonStyle;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected WatermarkLocation watermarkLocation;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<DemoButton> demoButtons;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FA9C", Offset = "0x109FA9C")]
	public Texture2D Watermark;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FAD4", Offset = "0x109FAD4")]
	public SECTR_GhostController PipController;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FB0C", Offset = "0x109FB0C")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0x109FB0C", Offset = "0x109FB0C")]
	public string DemoMessage;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FB58", Offset = "0x109FB58")]
	public bool CaptureMode;

	[Token(Token = "0x17000053")]
	public bool PipActive
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1C54DE8", Offset = "0x1C54DE8", VA = "0x1C54DE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1C54E78", Offset = "0x1C54E78", VA = "0x1C54E78", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1C55118", Offset = "0x1C55118", VA = "0x1C55118", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1C551D0", Offset = "0x1C551D0", VA = "0x1C551D0", Slot = "6")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1C55064", Offset = "0x1C55064", VA = "0x1C55064")]
	protected void AddButton(KeyCode key, string activeHint, string inactiveHint, DemoButtonPressedDelegate buttonPressedDelegate)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1C55B70", Offset = "0x1C55B70", VA = "0x1C55B70")]
	private void PressedPip(bool active)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1C55BE0", Offset = "0x1C55BE0", VA = "0x1C55BE0")]
	public SECTR_DemoUI()
	{
	}
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B190", Offset = "0x109B190")]
public abstract class SECTR_FPController : MonoBehaviour
{
	[Token(Token = "0x20000B2")]
	protected class TrackedTouch
	{
		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 startPos;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 currentPos;

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x228C028", Offset = "0x228C028", VA = "0x228C028")]
		public TrackedTouch()
		{
		}
	}

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _mouseAbsolute;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 _smoothMouse;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 _clampInDegrees;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _targetDirection;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool focused;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Dictionary<int, TrackedTouch> _touches;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FB90", Offset = "0x109FB90")]
	public bool LockCursor;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FBC8", Offset = "0x109FBC8")]
	public Vector2 Sensitivity;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FC00", Offset = "0x109FC00")]
	public Vector2 Smoothing;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FC38", Offset = "0x109FC38")]
	public float TouchScreenLookScale;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1C56790", Offset = "0x1C56790", VA = "0x1C56790")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1C567E8", Offset = "0x1C567E8", VA = "0x1C567E8")]
	private void OnApplicationFocus(bool focused)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1C567F4", Offset = "0x1C567F4", VA = "0x1C567F4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1C56F04", Offset = "0x1C56F04", VA = "0x1C56F04")]
	protected Vector2 GetScreenJoystick(bool left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1C56B7C", Offset = "0x1C56B7C", VA = "0x1C56B7C")]
	private void _UpdateTouches()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1C57140", Offset = "0x1C57140", VA = "0x1C57140")]
	protected SECTR_FPController()
	{
	}
}
[Token(Token = "0x20000B3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B1F0", Offset = "0x109B1F0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B1F0", Offset = "0x109B1F0")]
public class SECTR_FPSController : SECTR_FPController
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SECTR_CharacterMotor cachedMotor;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1C571F8", Offset = "0x1C571F8", VA = "0x1C571F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1C57254", Offset = "0x1C57254", VA = "0x1C57254", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1C574A8", Offset = "0x1C574A8", VA = "0x1C574A8")]
	private Vector3 ProjectOntoPlane(Vector3 v, Vector3 normal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1C574E8", Offset = "0x1C574E8", VA = "0x1C574E8")]
	private Vector3 ConstantSlerp(Vector3 from, Vector3 to, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1C5756C", Offset = "0x1C5756C", VA = "0x1C5756C")]
	public SECTR_FPSController()
	{
	}
}
[Token(Token = "0x20000B4")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B274", Offset = "0x109B274")]
public class SECTR_FogDisable : MonoBehaviour
{
	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool previousFogState;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1C589A4", Offset = "0x1C589A4", VA = "0x1C589A4")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1C589D8", Offset = "0x1C589D8", VA = "0x1C589D8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1C589E4", Offset = "0x1C589E4", VA = "0x1C589E4")]
	public SECTR_FogDisable()
	{
	}
}
[Token(Token = "0x20000B5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B2E4", Offset = "0x109B2E4")]
public class SECTR_GhostController : SECTR_FPController
{
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FC70", Offset = "0x109FC70")]
	public float FlySpeed;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FCA8", Offset = "0x109FCA8")]
	public float AccelerationRatio;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FCE0", Offset = "0x109FCE0")]
	public float SlowDownRatio;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1C5971C", Offset = "0x1C5971C", VA = "0x1C5971C", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1C59B1C", Offset = "0x1C59B1C", VA = "0x1C59B1C")]
	public SECTR_GhostController()
	{
	}
}
[Token(Token = "0x20000B6")]
public class SECTR_TreeSpawner : MonoBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject treeToSpawn;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spawnThreshold;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool spawnEnabled;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x18BC5C0", Offset = "0x18BC5C0", VA = "0x18BC5C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x18BC5C4", Offset = "0x18BC5C4", VA = "0x18BC5C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x18BC5C8", Offset = "0x18BC5C8", VA = "0x18BC5C8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x18BC918", Offset = "0x18BC918", VA = "0x18BC918")]
	public SECTR_TreeSpawner()
	{
	}
}
[Token(Token = "0x20000B7")]
public class SECTR_Wanderer : MonoBehaviour
{
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<SECTR_Graph.Node> path;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> waypoints;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentWaypointIndex;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FD18", Offset = "0x109FD18")]
	public float MovementSpeed;

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x18BDAF8", Offset = "0x18BDAF8", VA = "0x18BDAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x18BE158", Offset = "0x18BE158", VA = "0x18BE158")]
	public SECTR_Wanderer()
	{
	}
}
[Token(Token = "0x20000B8")]
public class SECTR_StreamDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0x109FD50", Offset = "0x109FD50")]
	public string NoExportMessage;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x18BBFD8", Offset = "0x18BBFD8", VA = "0x18BBFD8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x18BC088", Offset = "0x18BC088", VA = "0x18BC088", Slot = "6")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x18BC2B0", Offset = "0x18BC2B0", VA = "0x18BC2B0")]
	public SECTR_StreamDemoUI()
	{
	}
}
[Token(Token = "0x20000B9")]
public class SECTR_VisDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string originalDemoMessage;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0x109FD60", Offset = "0x109FD60")]
	public string Unity4PerfMessage;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x18BD444", Offset = "0x18BD444", VA = "0x18BD444")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x18BD604", Offset = "0x18BD604", VA = "0x18BD604", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x18BD6DC", Offset = "0x18BD6DC", VA = "0x18BD6DC", Slot = "6")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x18BDA1C", Offset = "0x18BDA1C", VA = "0x18BDA1C")]
	protected void ToggleCulling(bool active)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x18BDAF0", Offset = "0x18BDAF0", VA = "0x18BDAF0")]
	public SECTR_VisDemoUI()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BA")]
public class SECTR_AudioAmbience
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FD70", Offset = "0x109FD70")]
	public SECTR_AudioCue BackgroundLoop;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FDB0", Offset = "0x109FDB0")]
	public List<SECTR_AudioCue> OneShots;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FDE8", Offset = "0x109FDE8")]
	public Vector2 OneShotInterval;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FE34", Offset = "0x109FE34")]
	public float Volume;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FE6C", Offset = "0x109FE6C")]
	public bool UseOneShotCuesProbability;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float TotalProbability;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1A457A8", Offset = "0x1A457A8", VA = "0x1A457A8")]
	public SECTR_AudioAmbience()
	{
	}
}
[Token(Token = "0x20000BB")]
public class SECTR_AudioBus : ScriptableObject
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private SECTR_AudioBus parent;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SECTR_AudioBus> children;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float userVolume;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float userPitch;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float effectiveVolume;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float effectivePitch;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool muted;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FEEC", Offset = "0x109FEEC")]
	public float Volume;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FF2C", Offset = "0x109FF2C")]
	public float Pitch;

	[Token(Token = "0x17000054")]
	public float UserVolume
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x1A45850", Offset = "0x1A45850", VA = "0x1A45850")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x1A45848", Offset = "0x1A45848", VA = "0x1A45848")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float UserPitch
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x1A45860", Offset = "0x1A45860", VA = "0x1A45860")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000386")]
		[Address(RVA = "0x1A45858", Offset = "0x1A45858", VA = "0x1A45858")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public bool Muted
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x1A45868", Offset = "0x1A45868", VA = "0x1A45868")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x1A45870", Offset = "0x1A45870", VA = "0x1A45870")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public float EffectiveVolume
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x1A4587C", Offset = "0x1A4587C", VA = "0x1A4587C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x1A45884", Offset = "0x1A45884", VA = "0x1A45884")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public float EffectivePitch
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x1A458CC", Offset = "0x1A458CC", VA = "0x1A458CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1A458D4", Offset = "0x1A458D4", VA = "0x1A458D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public SECTR_AudioBus Parent
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x1A45BAC", Offset = "0x1A45BAC", VA = "0x1A45BAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1A45914", Offset = "0x1A45914", VA = "0x1A45914")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public List<SECTR_AudioBus> Children
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x1A45BB4", Offset = "0x1A45BB4", VA = "0x1A45BB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1A45BBC", Offset = "0x1A45BBC", VA = "0x1A45BBC")]
	public bool IsAncestorOf(SECTR_AudioBus bus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1A45C80", Offset = "0x1A45C80", VA = "0x1A45C80")]
	public bool IsDecendentOf(SECTR_AudioBus bus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1A45D40", Offset = "0x1A45D40", VA = "0x1A45D40")]
	public void ResetUserVolume()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1A45E38", Offset = "0x1A45E38", VA = "0x1A45E38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1A45EC4", Offset = "0x1A45EC4", VA = "0x1A45EC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1A45ACC", Offset = "0x1A45ACC", VA = "0x1A45ACC")]
	private void _AddChild(SECTR_AudioBus child)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1A45A68", Offset = "0x1A45A68", VA = "0x1A45A68")]
	private void _RemoveChild(SECTR_AudioBus child)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1A45F50", Offset = "0x1A45F50", VA = "0x1A45F50")]
	public SECTR_AudioBus()
	{
	}
}
[Token(Token = "0x20000BC")]
public class SECTR_AudioCue : ScriptableObject
{
	[Token(Token = "0x20000BD")]
	public enum PlaybackModes
	{
		[Token(Token = "0x40003CF")]
		Random,
		[Token(Token = "0x40003D0")]
		Shuffle,
		[Token(Token = "0x40003D1")]
		Loop,
		[Token(Token = "0x40003D2")]
		PingPong
	}

	[Token(Token = "0x20000BE")]
	public enum FalloffTypes
	{
		[Token(Token = "0x40003D4")]
		Linear,
		[Token(Token = "0x40003D5")]
		Logarithmic
	}

	[Token(Token = "0x20000BF")]
	public enum Spatializations
	{
		[Token(Token = "0x40003D7")]
		Simple2D,
		[Token(Token = "0x40003D8")]
		Infinite3D,
		[Token(Token = "0x40003D9")]
		Local3D,
		[Token(Token = "0x40003DA")]
		Occludable3D
	}

	[Serializable]
	[Token(Token = "0x20000C0")]
	public class ClipData
	{
		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private AudioClip clip;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool playedInShuffle;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float volume;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SECTR_ULong bakeTimestamp;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve HDRCurve;

		[Token(Token = "0x17000061")]
		public AudioClip Clip
		{
			[Token(Token = "0x60003AA")]
			[Address(RVA = "0x2947728", Offset = "0x2947728", VA = "0x2947728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		public float Volume
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0x2947730", Offset = "0x2947730", VA = "0x2947730")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003AC")]
			[Address(RVA = "0x2947738", Offset = "0x2947738", VA = "0x2947738")]
			set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public bool PlayedInShuffle
		{
			[Token(Token = "0x60003AD")]
			[Address(RVA = "0x2947740", Offset = "0x2947740", VA = "0x2947740")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003AE")]
			[Address(RVA = "0x2947748", Offset = "0x2947748", VA = "0x2947748")]
			set
			{
			}
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x2947680", Offset = "0x2947680", VA = "0x2947680")]
		public ClipData(AudioClip clip)
		{
		}
	}

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private SECTR_AudioCue template;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private SECTR_AudioBus bus;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int clipPlaybackIndex;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool needsShuffling;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool pingPongIncrement;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x109FFDC", Offset = "0x109FFDC")]
	public List<ClipData> AudioClips;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0014", Offset = "0x10A0014")]
	public PlaybackModes PlaybackMode;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A004C", Offset = "0x10A004C")]
	public bool HDR;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0084", Offset = "0x10A0084")]
	public Vector2 Loudness;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A00BC", Offset = "0x10A00BC")]
	public Vector2 Volume;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A00F4", Offset = "0x10A00F4")]
	public Vector2 Pitch;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A012C", Offset = "0x10A012C")]
	public bool Loops;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0164", Offset = "0x10A0164")]
	public int Priority;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A01A8", Offset = "0x10A01A8")]
	public bool BypassEffects;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A01E0", Offset = "0x10A01E0")]
	public int MaxInstances;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0220", Offset = "0x10A0220")]
	public float FadeInTime;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0260", Offset = "0x10A0260")]
	public float FadeOutTime;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A02A0", Offset = "0x10A02A0")]
	public int KeepAliveTime;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A02D8", Offset = "0x10A02D8")]
	public Spatializations Spatialization;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0310", Offset = "0x10A0310")]
	public float Spread;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0354", Offset = "0x10A0354")]
	public float Pan2D;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0394", Offset = "0x10A0394")]
	public FalloffTypes Falloff;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A03CC", Offset = "0x10A03CC")]
	public float MaxDistance;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A040C", Offset = "0x10A040C")]
	public float MinDistance;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A044C", Offset = "0x10A044C")]
	public float DopplerLevel;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A048C", Offset = "0x10A048C")]
	public int ProximityLimit;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A04CC", Offset = "0x10A04CC")]
	public float ProximityRange;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0520", Offset = "0x10A0520")]
	public float OcclusionScale;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0560", Offset = "0x10A0560")]
	public float PlayProbability;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A05A0", Offset = "0x10A05A0")]
	public Vector2 Delay;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A05D8", Offset = "0x10A05D8")]
	public GameObject Prefab;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0618", Offset = "0x10A0618")]
	public List<SECTR_CueParam> ControlParams;

	[Token(Token = "0x1700005B")]
	public SECTR_AudioCue Template
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x1A460BC", Offset = "0x1A460BC", VA = "0x1A460BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x1A45FE4", Offset = "0x1A45FE4", VA = "0x1A45FE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public SECTR_AudioBus Bus
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x1A46160", Offset = "0x1A46160", VA = "0x1A46160")]
		get
		{
			return null;
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0x1A460C4", Offset = "0x1A460C4", VA = "0x1A460C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public SECTR_AudioCue SourceCue
	{
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x1A46168", Offset = "0x1A46168", VA = "0x1A46168")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public bool Is3D
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1A461E4", Offset = "0x1A461E4", VA = "0x1A461E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005F")]
	public bool IsLocal
	{
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1A461F4", Offset = "0x1A461F4", VA = "0x1A461F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000060")]
	public int ClipIndex
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x1A46204", Offset = "0x1A46204", VA = "0x1A46204")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1A4620C", Offset = "0x1A4620C", VA = "0x1A4620C")]
	public ClipData GetNextClip()
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1A46508", Offset = "0x1A46508", VA = "0x1A46508")]
	public float MinClipLength()
	{
		return default(float);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1A46644", Offset = "0x1A46644", VA = "0x1A46644")]
	public float MaxClipLength()
	{
		return default(float);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1A46768", Offset = "0x1A46768", VA = "0x1A46768")]
	public void ResetClipIndex()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1A4677C", Offset = "0x1A4677C", VA = "0x1A4677C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1A46790", Offset = "0x1A46790", VA = "0x1A46790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1A46390", Offset = "0x1A46390", VA = "0x1A46390")]
	private void _ShuffleClips()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1A46794", Offset = "0x1A46794", VA = "0x1A46794")]
	public SECTR_AudioCue()
	{
	}
}
[Token(Token = "0x20000C1")]
public interface SECTR_IAudioInstance
{
	[Token(Token = "0x17000064")]
	int Generation
	{
		[Token(Token = "0x60003AF")]
		get;
	}

	[Token(Token = "0x17000065")]
	bool Active
	{
		[Token(Token = "0x60003B0")]
		get;
	}

	[Token(Token = "0x17000066")]
	Vector3 Position
	{
		[Token(Token = "0x60003B1")]
		get;
		[Token(Token = "0x60003B2")]
		set;
	}

	[Token(Token = "0x17000067")]
	Vector3 LocalPosition
	{
		[Token(Token = "0x60003B3")]
		get;
		[Token(Token = "0x60003B4")]
		set;
	}

	[Token(Token = "0x17000068")]
	float Volume
	{
		[Token(Token = "0x60003B5")]
		get;
		[Token(Token = "0x60003B6")]
		set;
	}

	[Token(Token = "0x17000069")]
	float Pitch
	{
		[Token(Token = "0x60003B7")]
		get;
		[Token(Token = "0x60003B8")]
		set;
	}

	[Token(Token = "0x1700006A")]
	bool Mute
	{
		[Token(Token = "0x60003B9")]
		get;
		[Token(Token = "0x60003BA")]
		set;
	}

	[Token(Token = "0x1700006B")]
	bool Pause
	{
		[Token(Token = "0x60003BB")]
		get;
		[Token(Token = "0x60003BC")]
		set;
	}

	[Token(Token = "0x1700006C")]
	int TimeSamples
	{
		[Token(Token = "0x60003BD")]
		get;
		[Token(Token = "0x60003BE")]
		set;
	}

	[Token(Token = "0x1700006D")]
	float TimeSeconds
	{
		[Token(Token = "0x60003BF")]
		get;
		[Token(Token = "0x60003C0")]
		set;
	}

	[Token(Token = "0x60003C1")]
	void Stop(bool stopImmediately);

	[Token(Token = "0x60003C2")]
	void ForceInfinite();

	[Token(Token = "0x60003C3")]
	void ForceOcclusion(bool occluded);

	[Token(Token = "0x60003C4")]
	void SetParameter(string param, float value);

	[Token(Token = "0x60003C5")]
	AudioSource GetInternalAudioSource();
}
[Token(Token = "0x20000C2")]
public struct SECTR_AudioCueInstance : SECTR_IAudioInstance
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SECTR_IAudioInstance internalInstance;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private int generation;

	[Token(Token = "0x1700006E")]
	public int Generation
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1A46904", Offset = "0x1A46904", VA = "0x1A46904", Slot = "4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006F")]
	public bool Active
	{
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x1A4690C", Offset = "0x1A4690C", VA = "0x1A4690C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000070")]
	public Vector3 Position
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x1A46A4C", Offset = "0x1A46A4C", VA = "0x1A46A4C", Slot = "6")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x1A46B18", Offset = "0x1A46B18", VA = "0x1A46B18", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public Vector3 LocalPosition
	{
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x1A46C10", Offset = "0x1A46C10", VA = "0x1A46C10", Slot = "8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x1A46CDC", Offset = "0x1A46CDC", VA = "0x1A46CDC", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public float Volume
	{
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x1A46DD4", Offset = "0x1A46DD4", VA = "0x1A46DD4", Slot = "10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x1A46EA0", Offset = "0x1A46EA0", VA = "0x1A46EA0", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public float Pitch
	{
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1A46F7C", Offset = "0x1A46F7C", VA = "0x1A46F7C", Slot = "12")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x1A47048", Offset = "0x1A47048", VA = "0x1A47048", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public bool Mute
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x1A47124", Offset = "0x1A47124", VA = "0x1A47124", Slot = "14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1A471F0", Offset = "0x1A471F0", VA = "0x1A471F0", Slot = "15")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool Pause
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1A472CC", Offset = "0x1A472CC", VA = "0x1A472CC", Slot = "16")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1A47398", Offset = "0x1A47398", VA = "0x1A47398", Slot = "17")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public float TimeSeconds
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1A47474", Offset = "0x1A47474", VA = "0x1A47474", Slot = "20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1A47540", Offset = "0x1A47540", VA = "0x1A47540", Slot = "21")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public int TimeSamples
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1A4761C", Offset = "0x1A4761C", VA = "0x1A4761C", Slot = "18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x1A476E8", Offset = "0x1A476E8", VA = "0x1A476E8", Slot = "19")]
		set
		{
		}
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1A468D8", Offset = "0x1A468D8", VA = "0x1A468D8")]
	public SECTR_AudioCueInstance(SECTR_IAudioInstance internalInstance, int generation)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1A477C4", Offset = "0x1A477C4", VA = "0x1A477C4", Slot = "22")]
	public void Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1A478A0", Offset = "0x1A478A0", VA = "0x1A478A0", Slot = "23")]
	public void ForceInfinite()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1A47968", Offset = "0x1A47968", VA = "0x1A47968", Slot = "24")]
	public void ForceOcclusion(bool occluded)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1A47A44", Offset = "0x1A47A44", VA = "0x1A47A44", Slot = "25")]
	public void SetParameter(string param, float value)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1A47B34", Offset = "0x1A47B34", VA = "0x1A47B34", Slot = "26")]
	public AudioSource GetInternalAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1A47C00", Offset = "0x1A47C00", VA = "0x1A47C00")]
	public SECTR_IAudioInstance GetInternalInstance()
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1A47C08", Offset = "0x1A47C08", VA = "0x1A47C08")]
	public static implicit operator bool(SECTR_AudioCueInstance x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000C3")]
public abstract class SECTR_AudioEnvironment : MonoBehaviour
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool ambienceActive;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0690", Offset = "0x10A0690")]
	public SECTR_AudioAmbience Ambience;

	[Token(Token = "0x17000078")]
	public bool Active
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x1A4867C", Offset = "0x1A4867C", VA = "0x1A4867C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1A48684", Offset = "0x1A48684", VA = "0x1A48684")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1A486FC", Offset = "0x1A486FC", VA = "0x1A486FC")]
	protected void Activate()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1A48688", Offset = "0x1A48688", VA = "0x1A48688")]
	protected void Deactivate()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1A48950", Offset = "0x1A48950", VA = "0x1A48950")]
	protected SECTR_AudioEnvironment()
	{
	}
}
[Token(Token = "0x20000C4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B31C", Offset = "0x109B31C")]
public class SECTR_AudioEnvironmentTrigger : SECTR_AudioEnvironment
{
	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject activator;

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1A489BC", Offset = "0x1A489BC", VA = "0x1A489BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1A48A3C", Offset = "0x1A48A3C", VA = "0x1A48A3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1A48AF8", Offset = "0x1A48AF8", VA = "0x1A48AF8")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1A48BB4", Offset = "0x1A48BB4", VA = "0x1A48BB4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1A48C78", Offset = "0x1A48C78", VA = "0x1A48C78")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1A48D3C", Offset = "0x1A48D3C", VA = "0x1A48D3C")]
	public SECTR_AudioEnvironmentTrigger()
	{
	}
}
[Token(Token = "0x20000C5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B354", Offset = "0x109B354")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B354", Offset = "0x109B354")]
public class SECTR_AudioEnvironmentZone : SECTR_AudioEnvironment
{
	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioReverbZone cachedZone;

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1A48D40", Offset = "0x1A48D40", VA = "0x1A48D40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1A48D9C", Offset = "0x1A48D9C", VA = "0x1A48D9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1A48DC8", Offset = "0x1A48DC8", VA = "0x1A48DC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1A49060", Offset = "0x1A49060", VA = "0x1A49060")]
	public SECTR_AudioEnvironmentZone()
	{
	}
}
[Token(Token = "0x20000C6")]
public abstract class SECTR_AudioSource : MonoBehaviour
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	protected float volume;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	[SerializeField]
	protected float pitch;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool playedFromStart;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0738", Offset = "0x10A0738")]
	public SECTR_AudioCue Cue;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0778", Offset = "0x10A0778")]
	public bool Loop;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A07B0", Offset = "0x10A07B0")]
	public bool PlayOnStart;

	[Token(Token = "0x17000079")]
	public float Volume
	{
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1A49064", Offset = "0x1A49064", VA = "0x1A49064")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1A4906C", Offset = "0x1A4906C", VA = "0x1A4906C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public float Pitch
	{
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1A490B0", Offset = "0x1A490B0", VA = "0x1A490B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1A490B8", Offset = "0x1A490B8", VA = "0x1A490B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public abstract bool IsPlaying
	{
		[Token(Token = "0x60003F3")]
		get;
	}

	[Token(Token = "0x60003F4")]
	public abstract void Play();

	[Token(Token = "0x60003F5")]
	public abstract void Stop(bool stopImmediately);

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1A49104", Offset = "0x1A49104", VA = "0x1A49104")]
	public void PlayEvent()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1A49110", Offset = "0x1A49110", VA = "0x1A49110")]
	public void StopEvent(bool stopImmediately)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1A49120", Offset = "0x1A49120", VA = "0x1A49120")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1A49168", Offset = "0x1A49168", VA = "0x1A49168")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1A491B8", Offset = "0x1A491B8", VA = "0x1A491B8", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003FB")]
	protected abstract void OnVolumePitchChanged();

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1A491C8", Offset = "0x1A491C8", VA = "0x1A491C8")]
	protected SECTR_AudioSource()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B3D8", Offset = "0x109B3D8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B3D8", Offset = "0x109B3D8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B3D8", Offset = "0x109B3D8")]
[ExecuteInEditMode]
public class SECTR_AudioSystem : MonoBehaviour
{
	[Token(Token = "0x20000C8")]
	public class Instance : SECTR_IAudioInstance
	{
		[Token(Token = "0x20000C9")]
		[Flags]
		private enum Flags
		{
			[Token(Token = "0x400042D")]
			Loops = 1,
			[Token(Token = "0x400042E")]
			FadingIn = 2,
			[Token(Token = "0x400042F")]
			FadingOut = 4,
			[Token(Token = "0x4000430")]
			Muted = 8,
			[Token(Token = "0x4000431")]
			Local = 0x10,
			[Token(Token = "0x4000432")]
			ThreeD = 0x20,
			[Token(Token = "0x4000433")]
			Paused = 0x40,
			[Token(Token = "0x4000434")]
			HDR = 0x80,
			[Token(Token = "0x4000435")]
			Occludable = 0x100,
			[Token(Token = "0x4000436")]
			Occluded = 0x200,
			[Token(Token = "0x4000437")]
			ForcedInfinite = 0x400,
			[Token(Token = "0x4000438")]
			Delayed = 0x800
		}

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double KeepAliveTimeStamp;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int generation;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource source;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioLowPassFilter lowpass;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SECTR_AudioCue audioCue;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform parent;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 localPosition;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Flags flags;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float nextTestTime;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float fadeStarTime;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float basePitch;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float baseVolumeLoudness;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float userVolume;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float userPitch;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float occlusionAlpha;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AnimationCurve hdrCurve;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<SECTR_CueParam, float> paramTable;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<float> volumeParamValues;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<float> pitchParamValues;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<SECTR_CueParam.AttributeData, float> attributeParamValues;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<SECTR_CueParam.AttributeData, float> attributeParamBaseValues;

		[Token(Token = "0x17000081")]
		public int Generation
		{
			[Token(Token = "0x600041B")]
			[Address(RVA = "0x2947754", Offset = "0x2947754", VA = "0x2947754", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000082")]
		public bool Active
		{
			[Token(Token = "0x600041C")]
			[Address(RVA = "0x294775C", Offset = "0x294775C", VA = "0x294775C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		public Vector3 Position
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0x2947858", Offset = "0x2947858", VA = "0x2947858", Slot = "6")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600041E")]
			[Address(RVA = "0x294799C", Offset = "0x294799C", VA = "0x294799C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public Vector3 LocalPosition
		{
			[Token(Token = "0x600041F")]
			[Address(RVA = "0x2947B28", Offset = "0x2947B28", VA = "0x2947B28", Slot = "8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000420")]
			[Address(RVA = "0x2947B34", Offset = "0x2947B34", VA = "0x2947B34", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public Transform Parent
		{
			[Token(Token = "0x6000421")]
			[Address(RVA = "0x2947C08", Offset = "0x2947C08", VA = "0x2947C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		public float Volume
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0x2947C10", Offset = "0x2947C10", VA = "0x2947C10", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000423")]
			[Address(RVA = "0x2947C18", Offset = "0x2947C18", VA = "0x2947C18", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public float Pitch
		{
			[Token(Token = "0x6000424")]
			[Address(RVA = "0x2948FD0", Offset = "0x2948FD0", VA = "0x2948FD0", Slot = "12")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000425")]
			[Address(RVA = "0x2948FD8", Offset = "0x2948FD8", VA = "0x2948FD8", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public bool Mute
		{
			[Token(Token = "0x6000426")]
			[Address(RVA = "0x2949028", Offset = "0x2949028", VA = "0x2949028", Slot = "14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000427")]
			[Address(RVA = "0x2949040", Offset = "0x2949040", VA = "0x2949040", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public bool Pause
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0x294911C", Offset = "0x294911C", VA = "0x294911C", Slot = "16")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000429")]
			[Address(RVA = "0x2949134", Offset = "0x2949134", VA = "0x2949134", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public float TimeSeconds
		{
			[Token(Token = "0x600042A")]
			[Address(RVA = "0x2949214", Offset = "0x2949214", VA = "0x2949214", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600042B")]
			[Address(RVA = "0x29492A8", Offset = "0x29492A8", VA = "0x29492A8", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public int TimeSamples
		{
			[Token(Token = "0x600042C")]
			[Address(RVA = "0x2949348", Offset = "0x2949348", VA = "0x2949348", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600042D")]
			[Address(RVA = "0x29493DC", Offset = "0x29493DC", VA = "0x29493DC", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public bool Loops
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x294781C", Offset = "0x294781C", VA = "0x294781C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008D")]
		public bool Local
		{
			[Token(Token = "0x6000433")]
			[Address(RVA = "0x2947990", Offset = "0x2947990", VA = "0x2947990")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		public bool ThreeD
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x2947984", Offset = "0x2947984", VA = "0x2947984")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008F")]
		public bool FadingIn
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0x29498A0", Offset = "0x29498A0", VA = "0x29498A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000090")]
		public bool FadingOut
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0x294784C", Offset = "0x294784C", VA = "0x294784C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000091")]
		public bool Muted
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0x2949034", Offset = "0x2949034", VA = "0x2949034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000092")]
		public bool Paused
		{
			[Token(Token = "0x6000438")]
			[Address(RVA = "0x2947834", Offset = "0x2947834", VA = "0x2947834")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000093")]
		public bool HDR
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0x29498AC", Offset = "0x29498AC", VA = "0x29498AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000094")]
		public bool Occludable
		{
			[Token(Token = "0x600043A")]
			[Address(RVA = "0x29498B8", Offset = "0x29498B8", VA = "0x29498B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000095")]
		public bool Occluded
		{
			[Token(Token = "0x600043B")]
			[Address(RVA = "0x29498C4", Offset = "0x29498C4", VA = "0x29498C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000096")]
		public bool ForcedInfinite
		{
			[Token(Token = "0x600043C")]
			[Address(RVA = "0x29498D0", Offset = "0x29498D0", VA = "0x29498D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000097")]
		public bool Delayed
		{
			[Token(Token = "0x600043D")]
			[Address(RVA = "0x2947828", Offset = "0x2947828", VA = "0x2947828")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000098")]
		public SECTR_AudioBus Bus
		{
			[Token(Token = "0x600043E")]
			[Address(RVA = "0x29498DC", Offset = "0x29498DC", VA = "0x29498DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		public SECTR_AudioCue Cue
		{
			[Token(Token = "0x600043F")]
			[Address(RVA = "0x2949968", Offset = "0x2949968", VA = "0x2949968")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x294947C", Offset = "0x294947C", VA = "0x294947C", Slot = "23")]
		public void ForceInfinite()
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x2949580", Offset = "0x2949580", VA = "0x2949580", Slot = "24")]
		public void ForceOcclusion(bool occluded)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x2949638", Offset = "0x2949638", VA = "0x2949638", Slot = "25")]
		public void SetParameter(string param, float value)
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x2949898", Offset = "0x2949898", VA = "0x2949898", Slot = "26")]
		public AudioSource GetInternalAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x2949970", Offset = "0x2949970", VA = "0x2949970")]
		public void Init(SECTR_AudioCue audioCue, Transform parent, Vector3 localPosition, bool loops)
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x2949E24", Offset = "0x2949E24", VA = "0x2949E24")]
		public void Clone(Instance instance, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x294AE14", Offset = "0x294AE14", VA = "0x294AE14")]
		public void Uninit()
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x294B3C4", Offset = "0x294B3C4", VA = "0x294B3C4")]
		public void Play()
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x294B798", Offset = "0x294B798", VA = "0x294B798", Slot = "22")]
		public void Stop(bool stopImmediately)
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x2947C60", Offset = "0x2947C60", VA = "0x2947C60")]
		public void Update(float deltaTime, bool volumeOnly)
		{
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x2949100", Offset = "0x2949100", VA = "0x2949100")]
		private void _SetFlag(Flags flag, bool on)
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x2949204", Offset = "0x2949204", VA = "0x2949204")]
		private bool _GetFlag(Flags flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x294A018", Offset = "0x294A018", VA = "0x294A018")]
		private bool _AcquireSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x294B034", Offset = "0x294B034", VA = "0x294B034")]
		private void _ReleaseSource()
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x2949C1C", Offset = "0x2949C1C", VA = "0x2949C1C")]
		private void _AddProximityInstance(SECTR_AudioCue srcCue)
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x2949D94", Offset = "0x2949D94", VA = "0x2949D94")]
		private void _ScheduleNextTest()
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x294B7B0", Offset = "0x294B7B0", VA = "0x294B7B0")]
		private void _Stop(bool stopImmediately)
		{
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x294BA24", Offset = "0x294BA24", VA = "0x294BA24")]
		public Instance()
		{
		}
	}

	[Token(Token = "0x20000CA")]
	[Flags]
	public enum OcclusionModes
	{
		[Token(Token = "0x400043A")]
		Graph = 1,
		[Token(Token = "0x400043B")]
		Raycast = 2,
		[Token(Token = "0x400043C")]
		Distance = 4
	}

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SECTR_AudioSystem audioSystem;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Stack<Instance> instancePool;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stack<AudioSource> simpleSourcePool;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Stack<AudioSource> lowpassSourcePool;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<GameObject, Stack<AudioSource>> prefabSourcePool;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Transform sourcePoolParent;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<Instance> activeInstances;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<SECTR_AudioCue, int> maxInstancesTable;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<SECTR_AudioCue, List<Instance>> proximityTable;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static float currentTime;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static List<SECTR_AudioAmbience> ambienceStack;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static SECTR_AudioAmbience currentAmbience;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static SECTR_AudioCueInstance ambienceLoop;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static SECTR_AudioCueInstance ambienceOneShot;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static float nextAmbienceOneShotTime;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static SECTR_AudioCue currentMusic;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static SECTR_AudioCueInstance musicLoop;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static float windowHDRMax;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private static float windowHDRMin;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static float currentLoudness;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static List<SECTR_Graph.Node> occlusionPath;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static SECTR_Member cachedMember;

	[Token(Token = "0x4000402")]
	private const float EPSILON = 0.001f;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A07E8", Offset = "0x10A07E8")]
	public int MaxInstances;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0820", Offset = "0x10A0820")]
	public int LowpassInstances;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0858", Offset = "0x10A0858")]
	public SECTR_AudioBus MasterBus;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0898", Offset = "0x10A0898")]
	public SECTR_AudioAmbience DefaultAmbience;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A08D0", Offset = "0x10A08D0")]
	public float HDRBaseLoudness;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0914", Offset = "0x10A0914")]
	public float HDRWindowSize;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0958", Offset = "0x10A0958")]
	public float HDRDecay;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A099C", Offset = "0x10A099C")]
	public bool BlendNearbySounds;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A09D4", Offset = "0x10A09D4")]
	public Vector2 NearBlendRange;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0A20", Offset = "0x10A0A20")]
	public OcclusionModes OcclusionFlags;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0A9C", Offset = "0x10A0A9C")]
	public float OcclusionDistance;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0AE8", Offset = "0x10A0AE8")]
	public LayerMask RaycastLayers;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0B34", Offset = "0x10A0B34")]
	public float OcclusionVolume;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0B88", Offset = "0x10A0B88")]
	public float OcclusionCutoff;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0BE0", Offset = "0x10A0BE0")]
	public float OcclusionResonanceQ;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0C34", Offset = "0x10A0C34")]
	public Vector2 RetestInterval;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0C6C", Offset = "0x10A0C6C")]
	public float CullingBuffer;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0CA4", Offset = "0x10A0CA4")]
	public bool ShowAudioHUD;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0CE0", Offset = "0x10A0CE0")]
	public Material HUDLineMaterial;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0D1C", Offset = "0x10A0D1C")]
	public bool Debugging;

	[Token(Token = "0x1700007C")]
	public static bool Initialized
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x1A48F50", Offset = "0x1A48F50", VA = "0x1A48F50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007D")]
	public static SECTR_Member Member
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x1A491E0", Offset = "0x1A491E0", VA = "0x1A491E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007E")]
	public static SECTR_AudioSystem AudioSystem
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x1A49244", Offset = "0x1A49244", VA = "0x1A49244")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007F")]
	public static Transform Listener
	{
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1A48FF0", Offset = "0x1A48FF0", VA = "0x1A48FF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000080")]
	public static List<Instance> ActiveInstances
	{
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x1A492A8", Offset = "0x1A492A8", VA = "0x1A492A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1A48154", Offset = "0x1A48154", VA = "0x1A48154")]
	public static SECTR_AudioCueInstance Play(SECTR_AudioCue audioCue, Vector3 position, bool loop)
	{
		return default(SECTR_AudioCueInstance);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1A4930C", Offset = "0x1A4930C", VA = "0x1A4930C")]
	public static SECTR_AudioCueInstance Play(SECTR_AudioCue audioCue, Transform parent, Vector3 localPosition, bool loop)
	{
		return default(SECTR_AudioCueInstance);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1A49B30", Offset = "0x1A49B30", VA = "0x1A49B30")]
	public static SECTR_AudioCueInstance Clone(SECTR_AudioCueInstance instance, Vector3 newPosition)
	{
		return default(SECTR_AudioCueInstance);
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1A49D18", Offset = "0x1A49D18", VA = "0x1A49D18")]
	public static void PlayMusic(SECTR_AudioCue musicCue)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1A49F40", Offset = "0x1A49F40", VA = "0x1A49F40")]
	public static void StopMusic(bool stopImmediate)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1A48784", Offset = "0x1A48784", VA = "0x1A48784")]
	public static void PushAmbience(SECTR_AudioAmbience ambience)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1A48894", Offset = "0x1A48894", VA = "0x1A48894")]
	public static void RemoveAmbience(SECTR_AudioAmbience ambience)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1A49FEC", Offset = "0x1A49FEC", VA = "0x1A49FEC")]
	public static void SetBusVolume(string busName, float volume)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1A4A29C", Offset = "0x1A4A29C", VA = "0x1A4A29C")]
	public static void SetBusVolume(SECTR_AudioBus bus, float volume)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1A4A3AC", Offset = "0x1A4A3AC", VA = "0x1A4A3AC")]
	public static void MuteBus(string busName, bool mute)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1A4A4D0", Offset = "0x1A4A4D0", VA = "0x1A4A4D0")]
	public static void MuteBus(SECTR_AudioBus bus, bool mute)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1A4A5E4", Offset = "0x1A4A5E4", VA = "0x1A4A5E4")]
	public static void PauseBus(SECTR_AudioBus bus, bool paused)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1A4A7DC", Offset = "0x1A4A7DC", VA = "0x1A4A7DC")]
	public static bool IsOccluded(Vector3 worldSpacePosition, OcclusionModes occlusionFlags)
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1A4ABA4", Offset = "0x1A4ABA4", VA = "0x1A4ABA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1A4B838", Offset = "0x1A4B838", VA = "0x1A4B838")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1A4BBAC", Offset = "0x1A4BBAC", VA = "0x1A4BBAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1A49778", Offset = "0x1A49778", VA = "0x1A49778")]
	private static bool _CheckInstances(SECTR_AudioCue audioCue, bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1A4985C", Offset = "0x1A4985C", VA = "0x1A4985C")]
	private static bool _CheckProximity(SECTR_AudioCue audioCue, Transform parent, Vector3 position, Instance testInstance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1A4C8C0", Offset = "0x1A4C8C0", VA = "0x1A4C8C0")]
	private static double GetUnixTimeStamp()
	{
		return default(double);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1A4B634", Offset = "0x1A4B634", VA = "0x1A4B634")]
	private static float _UpdateTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1A4B6B4", Offset = "0x1A4B6B4", VA = "0x1A4B6B4")]
	private static void _UpdateBusPitchVolume(SECTR_AudioBus bus, float effectiveVolume, float effectivePitch)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1A4BF58", Offset = "0x1A4BF58", VA = "0x1A4BF58")]
	private static void _UpdateAmbience()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1A4A110", Offset = "0x1A4A110", VA = "0x1A4A110")]
	private static SECTR_AudioBus _FindBus(SECTR_AudioBus bus, string busName)
	{
		return null;
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1A4C970", Offset = "0x1A4C970", VA = "0x1A4C970")]
	public SECTR_AudioSystem()
	{
	}
}
[Token(Token = "0x20000CB")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B4C0", Offset = "0x109B4C0")]
public class SECTR_CharacterAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000CC")]
	public class SurfaceSound
	{
		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0DC8", Offset = "0x10A0DC8")]
		public PhysicMaterial SurfaceMaterial;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0E00", Offset = "0x10A0E00")]
		public SECTR_AudioCue FootstepCue;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0E38", Offset = "0x10A0E38")]
		public SECTR_AudioCue JumpCue;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0E70", Offset = "0x10A0E70")]
		public SECTR_AudioCue LandCue;

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x228A64C", Offset = "0x228A64C", VA = "0x228A64C")]
		public SurfaceSound()
		{
		}
	}

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<PhysicMaterial, SurfaceSound> surfaceTable;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0D58", Offset = "0x10A0D58")]
	public SurfaceSound DefaultSounds;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0D90", Offset = "0x10A0D90")]
	public List<SurfaceSound> SurfaceSounds;

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1A4CA44", Offset = "0x1A4CA44", VA = "0x1A4CA44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1A4CBC8", Offset = "0x1A4CBC8", VA = "0x1A4CBC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1A4CBD4", Offset = "0x1A4CBD4", VA = "0x1A4CBD4")]
	private void OnFootstep(PhysicMaterial currentMaterial)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1A4CD58", Offset = "0x1A4CD58", VA = "0x1A4CD58")]
	private void OnJump(PhysicMaterial currentMaterial)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1A4CE20", Offset = "0x1A4CE20", VA = "0x1A4CE20")]
	private void OnLand(PhysicMaterial currentMaterial)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1A4CC9C", Offset = "0x1A4CC9C", VA = "0x1A4CC9C")]
	private SurfaceSound _GetCurrentSurface(PhysicMaterial currentMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1A4CEE8", Offset = "0x1A4CEE8", VA = "0x1A4CEE8")]
	public SECTR_CharacterAudio()
	{
	}
}
[Token(Token = "0x20000CD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B4F8", Offset = "0x109B4F8")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B4F8", Offset = "0x109B4F8")]
public class SECTR_ComputeRMS : MonoBehaviour
{
	[Token(Token = "0x20000CE")]
	private struct BakeInfo
	{
		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SECTR_AudioCue cue;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SECTR_AudioCue.ClipData clipData;

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x228B24C", Offset = "0x228B24C", VA = "0x228B24C")]
		public BakeInfo(SECTR_AudioCue cue, SECTR_AudioCue.ClipData clipData)
		{
		}
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<BakeInfo> hdrBakeList;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SECTR_ComputeRMS> activeBakeList;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int hdrBakeIndex;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SECTR_AudioCue cue;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SECTR_AudioCue.ClipData clipData;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> samples;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int numChannels;

	[Token(Token = "0x1700009A")]
	public float Progress
	{
		[Token(Token = "0x6000456")]
		[Address(RVA = "0x1A50E70", Offset = "0x1A50E70", VA = "0x1A50E70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1A51068", Offset = "0x1A51068", VA = "0x1A51068")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1A5106C", Offset = "0x1A5106C", VA = "0x1A5106C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1A51070", Offset = "0x1A51070", VA = "0x1A51070")]
	private void Update()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1A51928", Offset = "0x1A51928", VA = "0x1A51928")]
	private void OnAudioFilterRead(float[] samples, int numChannels)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1A51790", Offset = "0x1A51790", VA = "0x1A51790")]
	public void _StartCompute(SECTR_AudioCue cue, SECTR_AudioCue.ClipData clipData)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1A51994", Offset = "0x1A51994", VA = "0x1A51994")]
	public SECTR_ComputeRMS()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CF")]
public class SECTR_CueParam
{
	[Token(Token = "0x20000D0")]
	public enum TargetType
	{
		[Token(Token = "0x4000454")]
		Volume,
		[Token(Token = "0x4000455")]
		Pitch,
		[Token(Token = "0x4000456")]
		Attribute
	}

	[Serializable]
	[Token(Token = "0x20000D1")]
	public class AttributeData
	{
		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Type componentType;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string componentTypeString;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string attributeName;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fieldAttribute;

		[Token(Token = "0x1700009B")]
		public Type ComponentType
		{
			[Token(Token = "0x6000460")]
			[Address(RVA = "0x228B348", Offset = "0x228B348", VA = "0x228B348")]
			get
			{
				return null;
			}
			[Token(Token = "0x600045F")]
			[Address(RVA = "0x228B280", Offset = "0x228B280", VA = "0x228B280")]
			set
			{
			}
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x228B43C", Offset = "0x228B43C", VA = "0x228B43C")]
		public AttributeData()
		{
		}
	}

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TargetType affects;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultValue;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AttributeData attributeData;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool toggle;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1A51ADC", Offset = "0x1A51ADC", VA = "0x1A51ADC")]
	public SECTR_CueParam()
	{
	}
}
[Token(Token = "0x20000D2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B58C", Offset = "0x109B58C")]
public class SECTR_DoorAudio : MonoBehaviour
{
	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SECTR_AudioCueInstance instance;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0EB8", Offset = "0x10A0EB8")]
	public SECTR_AudioCue OpenLoopCue;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0EF8", Offset = "0x10A0EF8")]
	public SECTR_AudioCue ClosedLoopCue;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0F38", Offset = "0x10A0F38")]
	public SECTR_AudioCue OpeningCue;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0F78", Offset = "0x10A0F78")]
	public SECTR_AudioCue ClosingCue;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0FB8", Offset = "0x10A0FB8")]
	public SECTR_AudioCue WaitingCue;

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1C5631C", Offset = "0x1C5631C", VA = "0x1C5631C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1C5633C", Offset = "0x1C5633C", VA = "0x1C5633C")]
	private void OnOpen()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1C56418", Offset = "0x1C56418", VA = "0x1C56418")]
	private void OnOpening()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1C564F4", Offset = "0x1C564F4", VA = "0x1C564F4")]
	private void OnClose()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1C565D0", Offset = "0x1C565D0", VA = "0x1C565D0")]
	private void OnClosing()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1C566AC", Offset = "0x1C566AC", VA = "0x1C566AC")]
	private void OnWaiting()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1C5632C", Offset = "0x1C5632C", VA = "0x1C5632C")]
	private void _Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1C56788", Offset = "0x1C56788", VA = "0x1C56788")]
	public SECTR_DoorAudio()
	{
	}
}
[Token(Token = "0x20000D3")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B5C4", Offset = "0x109B5C4")]
public class SECTR_ImpactAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000D4")]
	public class ImpactSound
	{
		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicMaterial SurfaceMaterial;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SECTR_AudioCue ImpactCue;

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x228C33C", Offset = "0x228C33C", VA = "0x228C33C")]
		public ImpactSound()
		{
		}
	}

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float nextImpactTime;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<PhysicMaterial, ImpactSound> surfaceTable;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A0FF8", Offset = "0x10A0FF8")]
	public ImpactSound DefaultSound;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1030", Offset = "0x10A1030")]
	public List<ImpactSound> SurfaceImpacts;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1068", Offset = "0x10A1068")]
	public float MinImpactSpeed;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A10A0", Offset = "0x10A10A0")]
	public float MinImpactInterval;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1C5E42C", Offset = "0x1C5E42C", VA = "0x1C5E42C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1C5E5B0", Offset = "0x1C5E5B0", VA = "0x1C5E5B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1C5E5BC", Offset = "0x1C5E5BC", VA = "0x1C5E5BC")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1C5E7DC", Offset = "0x1C5E7DC", VA = "0x1C5E7DC")]
	public SECTR_ImpactAudio()
	{
	}
}
[Token(Token = "0x20000D5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B610", Offset = "0x109B610")]
[ExecuteInEditMode]
public class SECTR_MusicTrigger : MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject activator;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A10D8", Offset = "0x10A10D8")]
	public SECTR_AudioCue Cue;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1118", Offset = "0x10A1118")]
	public bool Loop;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1150", Offset = "0x10A1150")]
	public bool StopOnExit;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1C64074", Offset = "0x1C64074", VA = "0x1C64074")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1C641AC", Offset = "0x1C641AC", VA = "0x1C641AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1C64224", Offset = "0x1C64224", VA = "0x1C64224")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1C6432C", Offset = "0x1C6432C", VA = "0x1C6432C")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1C64434", Offset = "0x1C64434", VA = "0x1C64434")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1C644E0", Offset = "0x1C644E0", VA = "0x1C644E0")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1C640F4", Offset = "0x1C640F4", VA = "0x1C640F4")]
	private void _Play()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1C641C0", Offset = "0x1C641C0", VA = "0x1C641C0")]
	private void _Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1C645A8", Offset = "0x1C645A8", VA = "0x1C645A8")]
	public SECTR_MusicTrigger()
	{
	}
}
[Token(Token = "0x20000D6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B65C", Offset = "0x109B65C")]
[ExecuteInEditMode]
public class SECTR_PointSource : SECTR_AudioSource
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected SECTR_AudioCueInstance instance;

	[Token(Token = "0x1700009C")]
	public override bool IsPlaying
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x1C65868", Offset = "0x1C65868", VA = "0x1C65868", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1C65878", Offset = "0x1C65878", VA = "0x1C65878", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1C65A7C", Offset = "0x1C65A7C", VA = "0x1C65A7C", Slot = "6")]
	public override void Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x1C65A8C", Offset = "0x1C65A8C", VA = "0x1C65A8C", Slot = "8")]
	protected override void OnVolumePitchChanged()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x1C65AE8", Offset = "0x1C65AE8", VA = "0x1C65AE8")]
	public SECTR_PointSource()
	{
	}
}
[Token(Token = "0x20000D7")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B6A8", Offset = "0x109B6A8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B6A8", Offset = "0x109B6A8")]
public class SECTR_PropagationSource : SECTR_AudioSource
{
	[Token(Token = "0x20000D8")]
	private class PathSound
	{
		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SECTR_AudioCueInstance instance;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Portal firstPortal;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SECTR_Portal secondPortal;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float firstDistance;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float secondDistance;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distance;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 position;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 lastListenerPosition;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float weight;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool occluded;

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x228D534", Offset = "0x228D534", VA = "0x228D534")]
		public PathSound()
		{
		}
	}

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SECTR_Graph.Node> path;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<PathSound> activeSounds;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float directDistanceToListener;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool playing;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool played;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1188", Offset = "0x10A1188")]
	public float InterpDistance;

	[Token(Token = "0x1700009D")]
	public override bool IsPlaying
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x1C66228", Offset = "0x1C66228", VA = "0x1C66228", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1C6628C", Offset = "0x1C6628C", VA = "0x1C6628C", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1C66298", Offset = "0x1C66298", VA = "0x1C66298", Slot = "6")]
	public override void Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1C66378", Offset = "0x1C66378", VA = "0x1C66378")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1C663D4", Offset = "0x1C663D4", VA = "0x1C663D4", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1C66404", Offset = "0x1C66404", VA = "0x1C66404")]
	private void Update()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1C6735C", Offset = "0x1C6735C", VA = "0x1C6735C", Slot = "8")]
	protected override void OnVolumePitchChanged()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1C67104", Offset = "0x1C67104", VA = "0x1C67104")]
	private void _ComputeSoundSpatialization(Vector3 listenerPosition, float distanceToListener, PathSound pathSound)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1C67360", Offset = "0x1C67360", VA = "0x1C67360")]
	public SECTR_PropagationSource()
	{
	}
}
[Token(Token = "0x20000D9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B73C", Offset = "0x109B73C")]
[ExecuteInEditMode]
public class SECTR_RegionSource : SECTR_PointSource
{
	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A11C8", Offset = "0x10A11C8")]
	public bool Raycast;

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1C67CD4", Offset = "0x1C67CD4", VA = "0x1C67CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1C67FB4", Offset = "0x1C67FB4", VA = "0x1C67FB4")]
	public SECTR_RegionSource()
	{
	}
}
[Token(Token = "0x20000DA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B788", Offset = "0x109B788")]
[ExecuteInEditMode]
public class SECTR_SplineSource : SECTR_PointSource
{
	[Token(Token = "0x20000DB")]
	private class SplineNode
	{
		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Point;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rot;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float T;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 EaseIO;

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x228D544", Offset = "0x228D544", VA = "0x228D544")]
		public SplineNode(Vector3 p, Quaternion q, float t, Vector2 io)
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x228D5C8", Offset = "0x228D5C8", VA = "0x228D5C8")]
		public SplineNode(SplineNode o)
		{
		}
	}

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<SplineNode> nodes;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1200", Offset = "0x10A1200")]
	public List<Transform> SplinePoints;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1238", Offset = "0x10A1238")]
	public bool Closed;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1270", Offset = "0x10A1270")]
	public bool AllowShortcuts;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A12A8", Offset = "0x10A12A8")]
	public float MaxInterpSpeed;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x18BA5E8", Offset = "0x18BA5E8", VA = "0x18BA5E8", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x18BA940", Offset = "0x18BA940", VA = "0x18BA940")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x18BB0C8", Offset = "0x18BB0C8", VA = "0x18BB0C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x18BB0CC", Offset = "0x18BB0CC", VA = "0x18BB0CC", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x18BB0D4", Offset = "0x18BB0D4", VA = "0x18BB0D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x18BA944", Offset = "0x18BA944", VA = "0x18BA944")]
	private void _SetupSpline()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x18BA69C", Offset = "0x18BA69C", VA = "0x18BA69C")]
	private Vector3 _GetClosestPointOnSpline(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x18BB308", Offset = "0x18BB308", VA = "0x18BB308")]
	private Vector3 _GetHermiteAtT(float timeParam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x18BB6E4", Offset = "0x18BB6E4", VA = "0x18BB6E4")]
	private float _Ease(float t, float k1, float k2)
	{
		return default(float);
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x18BB7C0", Offset = "0x18BB7C0", VA = "0x18BB7C0")]
	public SECTR_SplineSource()
	{
	}
}
[Token(Token = "0x20000DC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B7D4", Offset = "0x109B7D4")]
public class SECTR_StartMusic : MonoBehaviour
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A12E8", Offset = "0x10A12E8")]
	public SECTR_AudioCue Cue;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x18BBF30", Offset = "0x18BBF30", VA = "0x18BBF30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x18BBFD0", Offset = "0x18BBFD0", VA = "0x18BBFD0")]
	public SECTR_StartMusic()
	{
	}
}
[Token(Token = "0x20000DD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B80C", Offset = "0x109B80C")]
[ExecuteInEditMode]
public class SECTR_TriggerSource : SECTR_PointSource
{
	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject activator;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x18BCE60", Offset = "0x18BCE60", VA = "0x18BCE60")]
	public SECTR_TriggerSource()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x18BCE88", Offset = "0x18BCE88", VA = "0x18BCE88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x18BCF24", Offset = "0x18BCF24", VA = "0x18BCF24")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x18BCFE8", Offset = "0x18BCFE8", VA = "0x18BCFE8")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x18BD0AC", Offset = "0x18BD0AC", VA = "0x18BD0AC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x18BD17C", Offset = "0x18BD17C", VA = "0x18BD17C")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}
}
[Token(Token = "0x20000DE")]
public static class SECTR_Constants
{
	[Token(Token = "0x20000DF")]
	public enum ReparentingMode
	{
		[Token(Token = "0x4000494")]
		Bounds,
		[Token(Token = "0x4000495")]
		Position
	}

	[Token(Token = "0x400048B")]
	public const string MAJOR_VERSION = "1";

	[Token(Token = "0x400048C")]
	public const string MINOR_VERSION = "4.0";

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color UI_SEPARATOR_LINE_COLOR;

	[Token(Token = "0x400048E")]
	public const string GAIA_SPAWN_GROUP = "Gaia_Spawns";

	[Token(Token = "0x400048F")]
	public const string PATH_AudioHUDGraphMaterial = "Scripts/Audio/Assets/AudioHUD_Graph.mat";

	[Token(Token = "0x4000490")]
	public const string PATH_VisGizmoMaterial = "Scripts/Vis/Assets/FrustumDebug.mat";

	[Token(Token = "0x4000491")]
	public const string PATH_AudioIcons = "Scripts/Audio/Editor/Icons/";

	[Token(Token = "0x4000492")]
	public const string GX_ABOUT = "\nSECTR is a suite of modules for Unity that allows you to build the best looking, sounding, and most efficient games possible, all by taking advantage of the structure already present in your game world. If you want to stream an open world, bring a huge game to mobile, or take advantage of the latest techniques in audio occlusion and propagation, SECTR is your solution.\n\nMain Features\n - SECTR CORE: Sector Creation Kit\n - SECTR AUDIO: Immersive Spatial Audio\n - SECTR STREAM: Seamless Scene Streaming\n - SECTR VIS: Dynamic Occlusion Culling\n\n - SECTR COMPLETE: Contains all the packages\n";
}
[Token(Token = "0x20000E0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B858", Offset = "0x109B858")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B858", Offset = "0x109B858")]
public class SECTR_Door : MonoBehaviour
{
	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int controlParam;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int canOpenParam;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int closedState;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int waitingState;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int openingState;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int openState;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int closingState;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastState;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator cachedAnimator;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int openCount;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1320", Offset = "0x10A1320")]
	public SECTR_Portal Portal;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1358", Offset = "0x10A1358")]
	public string ControlParam;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1390", Offset = "0x10A1390")]
	public string CanOpenParam;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A13C8", Offset = "0x10A13C8")]
	public string OpenState;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1400", Offset = "0x10A1400")]
	public string ClosedState;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1438", Offset = "0x10A1438")]
	public string OpeningState;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1470", Offset = "0x10A1470")]
	public string ClosingState;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A14A8", Offset = "0x10A14A8")]
	public string WaitingState;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1C55C70", Offset = "0x1C55C70", VA = "0x1C55C70")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1C55C80", Offset = "0x1C55C80", VA = "0x1C55C80")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1C55C90", Offset = "0x1C55C90", VA = "0x1C55C90")]
	public bool IsFullyOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1C55D08", Offset = "0x1C55D08", VA = "0x1C55D08")]
	public bool IsClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1C55D80", Offset = "0x1C55D80", VA = "0x1C55D80", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1C55E68", Offset = "0x1C55E68", VA = "0x1C55E68")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1C55F74", Offset = "0x1C55F74", VA = "0x1C55F74")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1C561C0", Offset = "0x1C561C0", VA = "0x1C561C0", Slot = "5")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1C561D0", Offset = "0x1C561D0", VA = "0x1C561D0", Slot = "6")]
	protected virtual void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1C561E0", Offset = "0x1C561E0", VA = "0x1C561E0", Slot = "7")]
	protected virtual bool CanOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1C561E8", Offset = "0x1C561E8", VA = "0x1C561E8")]
	public SECTR_Door()
	{
	}
}
[Token(Token = "0x20000E1")]
public class SECTR_FloatingPointFix : MonoBehaviour
{
	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SECTR_FloatingPointFix instance;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<SECTR_FloatingPointFixMember> allMembers;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ParticleSystem> allWorldSpaceParticleSystems;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] currentParticles;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float threshold;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 totalOffset;

	[Token(Token = "0x1700009E")]
	public static SECTR_FloatingPointFix Instance
	{
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x1C57570", Offset = "0x1C57570", VA = "0x1C57570")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009F")]
	public static bool IsActive
	{
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x1C577D4", Offset = "0x1C577D4", VA = "0x1C577D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1C579B4", Offset = "0x1C579B4", VA = "0x1C579B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1C57BBC", Offset = "0x1C57BBC", VA = "0x1C57BBC")]
	public void AddMember(SECTR_FloatingPointFixMember member)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1C57C5C", Offset = "0x1C57C5C", VA = "0x1C57C5C")]
	public void RemoveMember(SECTR_FloatingPointFixMember member)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1C57CFC", Offset = "0x1C57CFC", VA = "0x1C57CFC")]
	public void AddWorldSpaceParticleSystem(ParticleSystem ps)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1C57D9C", Offset = "0x1C57D9C", VA = "0x1C57D9C")]
	public void RemoveWorldSpaceParticleSystem(ParticleSystem ps)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1C57E3C", Offset = "0x1C57E3C", VA = "0x1C57E3C")]
	public Vector3 ConvertToOriginalSpace(Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1C57E54", Offset = "0x1C57E54", VA = "0x1C57E54")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1C58590", Offset = "0x1C58590", VA = "0x1C58590")]
	public SECTR_FloatingPointFix()
	{
	}
}
[Token(Token = "0x20000E2")]
public class SECTR_FloatingPointFixMember : MonoBehaviour
{
	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1C5867C", Offset = "0x1C5867C", VA = "0x1C5867C")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1C586E8", Offset = "0x1C586E8", VA = "0x1C586E8")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1C58780", Offset = "0x1C58780", VA = "0x1C58780")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1C58784", Offset = "0x1C58784", VA = "0x1C58784")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1C58788", Offset = "0x1C58788", VA = "0x1C58788")]
	public SECTR_FloatingPointFixMember()
	{
	}
}
[Token(Token = "0x20000E3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109B8DC", Offset = "0x109B8DC")]
public class SECTR_FloatingPointFixParticleSystem : SECTR_FloatingPointFixMember
{
	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1C58790", Offset = "0x1C58790", VA = "0x1C58790")]
	protected new void OnEnable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1C58898", Offset = "0x1C58898", VA = "0x1C58898")]
	protected new void OnDestroy()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1C58994", Offset = "0x1C58994", VA = "0x1C58994")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1C58998", Offset = "0x1C58998", VA = "0x1C58998")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1C5899C", Offset = "0x1C5899C", VA = "0x1C5899C")]
	public SECTR_FloatingPointFixParticleSystem()
	{
	}
}
[Token(Token = "0x20000E4")]
public static class SECTR_Geometry
{
	[Token(Token = "0x40004AE")]
	public const float kVERTEX_EPSILON = 0.001f;

	[Token(Token = "0x40004AF")]
	public const float kBOUNDS_CHEAT = 0.01f;

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1C589EC", Offset = "0x1C589EC", VA = "0x1C589EC")]
	public static Bounds ComputeBounds(Light light)
	{
		return default(Bounds);
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1C58D38", Offset = "0x1C58D38", VA = "0x1C58D38")]
	public static Bounds ComputeBounds(Terrain terrain)
	{
		return default(Bounds);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1C58EA8", Offset = "0x1C58EA8", VA = "0x1C58EA8")]
	public static bool FrustumIntersectsBounds(Bounds bounds, List<Plane> frustum, int inMask, out int outMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1C59078", Offset = "0x1C59078", VA = "0x1C59078")]
	public static bool FrustumContainsBounds(Bounds bounds, List<Plane> frustum)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1C59234", Offset = "0x1C59234", VA = "0x1C59234")]
	public static bool BoundsContainsBounds(Bounds container, Bounds contained)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1C59294", Offset = "0x1C59294", VA = "0x1C59294")]
	public static bool BoundsIntersectsSphere(Bounds bounds, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1C593B0", Offset = "0x1C593B0", VA = "0x1C593B0")]
	public static Bounds ProjectBounds(Bounds bounds, Vector3 projection)
	{
		return default(Bounds);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1C59460", Offset = "0x1C59460", VA = "0x1C59460")]
	public static bool IsPointInFrontOfPlane(Vector3 position, Vector3 center, Vector3 normal)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1C594CC", Offset = "0x1C594CC", VA = "0x1C594CC")]
	public static bool IsPolygonConvex(Vector3[] verts)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1C5966C", Offset = "0x1C5966C", VA = "0x1C5966C")]
	public static int CompareVectorsCW(Vector3 a, Vector3 b, Vector3 centroid, Vector3 normal)
	{
		return default(int);
	}
}
[Token(Token = "0x20000E5")]
public static class SECTR_Graph
{
	[Token(Token = "0x20000E6")]
	public class Node : IComparable<Node>
	{
		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SECTR_Portal Portal;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SECTR_Sector Sector;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CostPlusEstimate;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Cost;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Depth;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ForwardTraversal;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Node Parent;

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x228C030", Offset = "0x228C030", VA = "0x228C030", Slot = "4")]
		public int CompareTo(Node other)
		{
			return default(int);
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x228C060", Offset = "0x228C060", VA = "0x228C060")]
		public static void ReconstructPath(List<Node> path, Node currentNode)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x228C0DC", Offset = "0x228C0DC", VA = "0x228C0DC")]
		public Node()
		{
		}
	}

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Sector> initialSectors;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<SECTR_Sector> goalSectors;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static SECTR_PriorityQueue<Node> openSet;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<SECTR_Portal, Node> closedSet;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1C59B34", Offset = "0x1C59B34", VA = "0x1C59B34")]
	public static void DepthWalk(ref List<Node> nodes, SECTR_Sector root, SECTR_Portal.PortalFlags stopFlags, int maxDepth)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1C5A1D8", Offset = "0x1C5A1D8", VA = "0x1C5A1D8")]
	public static void BreadthWalk(ref List<Node> nodes, SECTR_Sector root, SECTR_Portal.PortalFlags stopFlags, int maxDepth)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1C5A748", Offset = "0x1C5A748", VA = "0x1C5A748")]
	public static void FindShortestPath(ref List<Node> path, Vector3 start, Vector3 goal, SECTR_Portal.PortalFlags stopFlags)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1C5B4D0", Offset = "0x1C5B4D0", VA = "0x1C5B4D0")]
	public static string GetGraphAsDot(string graphName)
	{
		return null;
	}
}
[Token(Token = "0x20000E7")]
public abstract class SECTR_Hull : MonoBehaviour
{
	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh previousMesh;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] vertsCW;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 meshCentroid;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Vector3 meshNormal;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A14E0", Offset = "0x10A14E0")]
	public Mesh HullMesh;

	[Token(Token = "0x170000A0")]
	public Vector3[] VertsCW
	{
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x1C5D778", Offset = "0x1C5D778", VA = "0x1C5D778")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	public Vector3 Normal
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x1C5DD44", Offset = "0x1C5DD44", VA = "0x1C5DD44")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000A2")]
	public Vector3 ReverseNormal
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x1C5DD8C", Offset = "0x1C5DD8C", VA = "0x1C5DD8C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000A3")]
	public Vector3 Center
	{
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x1C5DDE0", Offset = "0x1C5DDE0", VA = "0x1C5DDE0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000A4")]
	public Plane HullPlane
	{
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x1C5DE58", Offset = "0x1C5DE58", VA = "0x1C5DE58")]
		get
		{
			return default(Plane);
		}
	}

	[Token(Token = "0x170000A5")]
	public Plane ReverseHullPlane
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x1C5DEDC", Offset = "0x1C5DEDC", VA = "0x1C5DEDC")]
		get
		{
			return default(Plane);
		}
	}

	[Token(Token = "0x170000A6")]
	public Bounds BoundingBox
	{
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x1C5DF60", Offset = "0x1C5DF60", VA = "0x1C5DF60")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1C5E128", Offset = "0x1C5E128", VA = "0x1C5E128")]
	public bool IsPointInHull(Vector3 p, float distanceTolerance)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1C5D79C", Offset = "0x1C5D79C", VA = "0x1C5D79C")]
	protected void ComputeVerts()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1C5E3A8", Offset = "0x1C5E3A8", VA = "0x1C5E3A8")]
	protected SECTR_Hull()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1C5E3EC", Offset = "0x1C5E3EC", VA = "0x1C5E3EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5EB4", Offset = "0x10A5EB4")]
	private int <ComputeVerts>b__20_0(Vector3 a, Vector3 b)
	{
		return default(int);
	}
}
[Token(Token = "0x20000E8")]
public enum SECTR_MemberUpdateMode
{
	[Token(Token = "0x40004C1")]
	Realtime,
	[Token(Token = "0x40004C2")]
	Delayed,
	[Token(Token = "0x40004C3")]
	OnSaveOnly
}
[Token(Token = "0x20000E9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B93C", Offset = "0x109B93C")]
[ExecuteInEditMode]
public class SECTR_Member : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000EA")]
	public class Child
	{
		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gameObjectHash;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Member member;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer renderer;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int renderHash;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light light;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int lightHash;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Terrain terrain;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int terrainHash;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Bounds rendererBounds;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Bounds lightBounds;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Bounds terrainBounds;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool shadowLight;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool rendererCastsShadows;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		public bool terrainCastsShadows;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LayerMask layer;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 shadowLightPosition;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float shadowLightRange;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public LightType shadowLightType;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int shadowCullingMask;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool processed;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool renderCulled;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		public bool lightCulled;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
		public bool terrainCulled;

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x228C73C", Offset = "0x228C73C", VA = "0x228C73C")]
		public void Init(GameObject gameObject, Renderer renderer, Light light, Terrain terrain, SECTR_Member member, bool dirShadowCaster, Vector3 shadowVec)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x228CE5C", Offset = "0x228CE5C", VA = "0x228CE5C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x228CF28", Offset = "0x228CF28", VA = "0x228CF28", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x228CEFC", Offset = "0x228CEFC", VA = "0x228CEFC")]
		public static bool operator ==(Child x, Child y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x228CF30", Offset = "0x228CF30", VA = "0x228CF30")]
		public static bool operator !=(Child x, Child y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x228CF5C", Offset = "0x228CF5C", VA = "0x228CF5C")]
		public Child()
		{
		}
	}

	[Token(Token = "0x20000EB")]
	public enum BoundsUpdateModes
	{
		[Token(Token = "0x400050A")]
		Start,
		[Token(Token = "0x400050B")]
		Movement,
		[Token(Token = "0x400050C")]
		Always,
		[Token(Token = "0x400050D")]
		Static,
		[Token(Token = "0x400050E")]
		SelfOnly
	}

	[Token(Token = "0x20000EC")]
	public enum ChildCullModes
	{
		[Token(Token = "0x4000510")]
		Default,
		[Token(Token = "0x4000511")]
		Group,
		[Token(Token = "0x4000512")]
		Individual
	}

	[Token(Token = "0x20000ED")]
	public delegate void MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined);

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Transform> ignoreTransforms;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private List<Child> children;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private List<Child> renderers;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private List<Child> lights;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Child> terrains;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<Child> shadowLights;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private List<Child> shadowCasters;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private Bounds totalBounds;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[HideInInspector]
	private Bounds renderBounds;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[HideInInspector]
	private Bounds lightBounds;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	[SerializeField]
	private bool hasRenderBounds;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[HideInInspector]
	[SerializeField]
	private bool hasLightBounds;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	[SerializeField]
	[HideInInspector]
	private bool shadowCaster;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	[SerializeField]
	[HideInInspector]
	private bool shadowLight;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	[HideInInspector]
	private bool frozen;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	[HideInInspector]
	[SerializeField]
	private bool neverJoin;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	[SerializeField]
	protected List<Light> bakedOnlyLights;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected bool isSector;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected SECTR_Member childProxy;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected bool hasChildProxy;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool started;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool usedStartSector;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<SECTR_Sector> sectors;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<SECTR_Sector> newSectors;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<SECTR_Sector> leftSectors;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<Transform, Child> childTable;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Dictionary<Light, Light> bakedOnlyTable;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 lastPosition;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Stack<Child> childPool;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Member> allMembers;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<Transform, SECTR_Member> allMemberTable;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A18A8", Offset = "0x10A18A8")]
	public bool PortalDetermined;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A18E0", Offset = "0x10A18E0")]
	public SECTR_Sector ForceStartSector;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A192C", Offset = "0x10A192C")]
	public static SECTR_MemberUpdateMode MemberUpdateMode;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1964", Offset = "0x10A1964")]
	public static int MemberUpdateDelay;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A199C", Offset = "0x10A199C")]
	public BoundsUpdateModes BoundsUpdateMode;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A19D4", Offset = "0x10A19D4")]
	public float ExtraBounds;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1A0C", Offset = "0x10A1A0C")]
	public bool OverrideBounds;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1A44", Offset = "0x10A1A44")]
	public Bounds BoundsOverride;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1A90", Offset = "0x10A1A90")]
	public Light DirShadowCaster;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1AC8", Offset = "0x10A1AC8")]
	public float DirShadowDistance;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1B14", Offset = "0x10A1B14")]
	public ChildCullModes ChildCulling;

	[NonSerialized]
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public int LastVisibleFrameNumber;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool FloatingPointFix;

	[Token(Token = "0x170000A7")]
	public static List<SECTR_Member> All
	{
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x1C61120", Offset = "0x1C61120", VA = "0x1C61120")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A8")]
	public bool CullEachChild
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x1C61184", Offset = "0x1C61184", VA = "0x1C61184")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A9")]
	public List<SECTR_Sector> Sectors
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x1C611B4", Offset = "0x1C611B4", VA = "0x1C611B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AA")]
	public List<Child> Children
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x1C611BC", Offset = "0x1C611BC", VA = "0x1C611BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AB")]
	public List<Child> Renderers
	{
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x1C611E0", Offset = "0x1C611E0", VA = "0x1C611E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AC")]
	public bool ShadowCaster
	{
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x1C61204", Offset = "0x1C61204", VA = "0x1C61204")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AD")]
	public List<Child> ShadowCasters
	{
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x1C61228", Offset = "0x1C61228", VA = "0x1C61228")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AE")]
	public List<Child> Lights
	{
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x1C6124C", Offset = "0x1C6124C", VA = "0x1C6124C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AF")]
	public bool ShadowLight
	{
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x1C61270", Offset = "0x1C61270", VA = "0x1C61270")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B0")]
	public List<Child> ShadowLights
	{
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x1C61294", Offset = "0x1C61294", VA = "0x1C61294")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public List<Child> Terrains
	{
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1C612B8", Offset = "0x1C612B8", VA = "0x1C612B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public Bounds TotalBounds
	{
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x1C612DC", Offset = "0x1C612DC", VA = "0x1C612DC")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x170000B3")]
	public Bounds RenderBounds
	{
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1C612F0", Offset = "0x1C612F0", VA = "0x1C612F0")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x170000B4")]
	public bool HasRenderBounds
	{
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x1C61334", Offset = "0x1C61334", VA = "0x1C61334")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B5")]
	public Bounds LightBounds
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x1C61358", Offset = "0x1C61358", VA = "0x1C61358")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x170000B6")]
	public bool HasLightBounds
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x1C6139C", Offset = "0x1C6139C", VA = "0x1C6139C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B7")]
	public bool Frozen
	{
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x1C61430", Offset = "0x1C61430", VA = "0x1C61430")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x1C6141C", Offset = "0x1C6141C", VA = "0x1C6141C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public SECTR_Member ChildProxy
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x1C61438", Offset = "0x1C61438", VA = "0x1C61438")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public bool NeverJoin
	{
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x1C614D0", Offset = "0x1C614D0", VA = "0x1C614D0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public bool IsSector
	{
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x1C614DC", Offset = "0x1C614DC", VA = "0x1C614DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000010")]
	public event MembershipChanged Changed
	{
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x1C5CB9C", Offset = "0x1C5CB9C", VA = "0x1C5CB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5EC4", Offset = "0x10A5EC4")]
		add
		{
		}
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x1C5CD08", Offset = "0x1C5CD08", VA = "0x1C5CD08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5ED4", Offset = "0x10A5ED4")]
		remove
		{
		}
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1C613C0", Offset = "0x1C613C0", VA = "0x1C613C0")]
	public bool IsVisibleThisFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x1C613EC", Offset = "0x1C613EC", VA = "0x1C613EC")]
	public bool WasVisibleLastFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1C58524", Offset = "0x1C58524", VA = "0x1C58524")]
	public void ForceUpdate(bool updateChildren)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1C622FC", Offset = "0x1C622FC", VA = "0x1C622FC")]
	public void SectorDisabled(SECTR_Sector sector)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1C62418", Offset = "0x1C62418", VA = "0x1C62418")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1C62478", Offset = "0x1C62478", VA = "0x1C62478", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1C626B0", Offset = "0x1C626B0", VA = "0x1C626B0")]
	private void OnSceneSaving(Scene scene, string path)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1C62824", Offset = "0x1C62824", VA = "0x1C62824", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x1C62BD4", Offset = "0x1C62BD4", VA = "0x1C62BD4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1C62BD8", Offset = "0x1C62BD8", VA = "0x1C62BD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1C62770", Offset = "0x1C62770", VA = "0x1C62770")]
	public void UpdateMembers()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1C62BDC", Offset = "0x1C62BDC", VA = "0x1C62BDC")]
	public void UpdatePrefSettings()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1C614E4", Offset = "0x1C614E4", VA = "0x1C614E4")]
	private void _UpdateChildren()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1C62BE0", Offset = "0x1C62BE0", VA = "0x1C62BE0")]
	private void _AddChildren(Transform childTransform, bool dirShadowCaster, Vector3 shadowVec)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1C61D40", Offset = "0x1C61D40", VA = "0x1C61D40")]
	private void _UpdateSectorMembership()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1C63388", Offset = "0x1C63388", VA = "0x1C63388")]
	private SECTR_Portal _CrossedPortal(SECTR_Sector sector)
	{
		return null;
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1C63870", Offset = "0x1C63870", VA = "0x1C63870")]
	public SECTR_Member()
	{
	}
}
[Token(Token = "0x20000EE")]
public static class SECTR_Modules
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool AUDIO;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool VIS;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool STREAM;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool DEV;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string VERSION;

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1C63D7C", Offset = "0x1C63D7C", VA = "0x1C63D7C")]
	static SECTR_Modules()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x1C63FB0", Offset = "0x1C63FB0", VA = "0x1C63FB0")]
	public static bool HasPro()
	{
		return default(bool);
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1C63FB8", Offset = "0x1C63FB8", VA = "0x1C63FB8")]
	public static bool HasComplete()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000EF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109B988", Offset = "0x109B988")]
[ExecuteInEditMode]
public class SECTR_Portal : SECTR_Hull
{
	[Token(Token = "0x20000F0")]
	[Flags]
	public enum PortalFlags
	{
		[Token(Token = "0x400051E")]
		Closed = 1,
		[Token(Token = "0x400051F")]
		Locked = 2,
		[Token(Token = "0x4000520")]
		PassThrough = 4
	}

	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109B9E4", Offset = "0x109B9E4")]
	private sealed class <GetSectors>d__17 : IEnumerable<SECTR_Sector>, IEnumerable, IEnumerator<SECTR_Sector>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SECTR_Sector <>2__current;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SECTR_Portal <>4__this;

		[Token(Token = "0x170000BF")]
		private SECTR_Sector System.Collections.Generic.IEnumerator<SECTR_Sector>.Current
		{
			[Token(Token = "0x6000521")]
			[Address(RVA = "0x228D430", Offset = "0x228D430", VA = "0x228D430", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0x228D478", Offset = "0x228D478", VA = "0x228D478", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x228D344", Offset = "0x228D344", VA = "0x228D344")]
		[DebuggerHidden]
		public <GetSectors>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x228D37C", Offset = "0x228D37C", VA = "0x228D37C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x228D380", Offset = "0x228D380", VA = "0x228D380", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x228D438", Offset = "0x228D438", VA = "0x228D438", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x228D480", Offset = "0x228D480", VA = "0x228D480", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<SECTR_Sector> System.Collections.Generic.IEnumerable<SECTR_Sector>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x228D530", Offset = "0x228D530", VA = "0x228D530", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private SECTR_Sector frontSector;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private SECTR_Sector backSector;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool visited;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Portal> allPortals;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1BDC", Offset = "0x10A1BDC")]
	public PortalFlags Flags;

	[Token(Token = "0x170000BB")]
	public static List<SECTR_Portal> All
	{
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1C65AF0", Offset = "0x1C65AF0", VA = "0x1C65AF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	public SECTR_Sector FrontSector
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1C5A0A0", Offset = "0x1C5A0A0", VA = "0x1C5A0A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x1C65B54", Offset = "0x1C65B54", VA = "0x1C65B54")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public SECTR_Sector BackSector
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x1C5A13C", Offset = "0x1C5A13C", VA = "0x1C5A13C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x1C65D80", Offset = "0x1C65D80", VA = "0x1C65D80")]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public bool Visited
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x1C65EA8", Offset = "0x1C65EA8", VA = "0x1C65EA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x1C65EB0", Offset = "0x1C65EB0", VA = "0x1C65EB0")]
		set
		{
		}
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1C65EBC", Offset = "0x1C65EBC", VA = "0x1C65EBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5EE4", Offset = "0x10A5EE4")]
	public IEnumerable<SECTR_Sector> GetSectors()
	{
		return null;
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1C55F58", Offset = "0x1C55F58", VA = "0x1C55F58")]
	public void SetFlag(PortalFlags flag, bool on)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x1C65F34", Offset = "0x1C65F34", VA = "0x1C65F34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1C66064", Offset = "0x1C66064", VA = "0x1C66064")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1C66194", Offset = "0x1C66194", VA = "0x1C66194")]
	public SECTR_Portal()
	{
	}
}
[Token(Token = "0x20000F2")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x109B9F4", Offset = "0x109B9F4")]
public class SECTR_PriorityQueue<T> where T : IComparable<T>
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<T> data;

	[Token(Token = "0x170000C1")]
	public int Count
	{
		[Token(Token = "0x6000528")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000529")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public T Item
	{
		[Token(Token = "0x600052A")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600052B")]
		set
		{
		}
	}

	[Token(Token = "0x6000526")]
	public SECTR_PriorityQueue()
	{
	}

	[Token(Token = "0x6000527")]
	public SECTR_PriorityQueue(int capacity)
	{
	}

	[Token(Token = "0x600052C")]
	public void Enqueue(T item)
	{
	}

	[Token(Token = "0x600052D")]
	public T Dequeue()
	{
		return (T)null;
	}

	[Token(Token = "0x600052E")]
	public T Peek()
	{
		return (T)null;
	}

	[Token(Token = "0x600052F")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000530")]
	public bool IsConsistent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000531")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000532")]
	private void _SwapElements(int i, int j)
	{
	}

	[Token(Token = "0x6000533")]
	private void _Update(int i)
	{
	}
}
[Token(Token = "0x20000F3")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BA2C", Offset = "0x109BA2C")]
public class SECTR_Sector : SECTR_Member
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<SECTR_Portal> portals;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<SECTR_Member> members;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool visited;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Sector> allSectors;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1C58", Offset = "0x10A1C58")]
	public SECTR_Sector TopTerrain;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1C90", Offset = "0x10A1C90")]
	public SECTR_Sector BottomTerrain;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1CC8", Offset = "0x10A1CC8")]
	public SECTR_Sector LeftTerrain;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1D00", Offset = "0x10A1D00")]
	public SECTR_Sector RightTerrain;

	[Token(Token = "0x170000C3")]
	public new static List<SECTR_Sector> All
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x1C680C8", Offset = "0x1C680C8", VA = "0x1C680C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public bool Visited
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x1C6812C", Offset = "0x1C6812C", VA = "0x1C6812C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x1C68134", Offset = "0x1C68134", VA = "0x1C68134")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public List<SECTR_Portal> Portals
	{
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x1C68140", Offset = "0x1C68140", VA = "0x1C68140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C6")]
	public List<SECTR_Member> Members
	{
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x1C68148", Offset = "0x1C68148", VA = "0x1C68148")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public bool IsConnectedTerrain
	{
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x1C68150", Offset = "0x1C68150", VA = "0x1C68150")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1C67FBC", Offset = "0x1C67FBC", VA = "0x1C67FBC")]
	private SECTR_Sector()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1C5B324", Offset = "0x1C5B324", VA = "0x1C5B324")]
	public static void GetContaining(ref List<SECTR_Sector> sectors, Vector3 position)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1C636CC", Offset = "0x1C636CC", VA = "0x1C636CC")]
	public static void GetContaining(ref List<SECTR_Sector> sectors, Bounds bounds)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1C68258", Offset = "0x1C68258", VA = "0x1C68258")]
	public void ConnectTerrainNeighbors()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1C6846C", Offset = "0x1C6846C", VA = "0x1C6846C")]
	public void DisonnectTerrainNeighbors()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1C65CE0", Offset = "0x1C65CE0", VA = "0x1C65CE0")]
	public void Register(SECTR_Portal portal)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1C65C7C", Offset = "0x1C65C7C", VA = "0x1C65C7C")]
	public void Deregister(SECTR_Portal portal)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1C63668", Offset = "0x1C63668", VA = "0x1C63668")]
	public void Register(SECTR_Member member)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1C62B70", Offset = "0x1C62B70", VA = "0x1C62B70")]
	public void Deregister(SECTR_Member member)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1C68878", Offset = "0x1C68878", VA = "0x1C68878", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1C689E0", Offset = "0x1C689E0", VA = "0x1C689E0", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1C6839C", Offset = "0x1C6839C", VA = "0x1C6839C")]
	protected static Terrain GetTerrain(SECTR_Sector sector)
	{
		return null;
	}
}
[Token(Token = "0x20000F4")]
public struct SECTR_SectorChildCandidate
{
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<string> ancestors;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform transform;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Bounds bounds;
}
[Token(Token = "0x20000F5")]
public class SECTR_SectorUtils : MonoBehaviour
{
	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1C68C04", Offset = "0x1C68C04", VA = "0x1C68C04")]
	public static bool DoHaveSectors()
	{
		return default(bool);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1C68CC8", Offset = "0x1C68CC8", VA = "0x1C68CC8")]
	public static void SendObjectsIntoSectors(ref List<GameObject> parentsUndoList, List<GameObject> gameObjects, Vector3 parentLocation, SECTR_Constants.ReparentingMode localizeBy = SECTR_Constants.ReparentingMode.Bounds, bool mergeSpawns = true, bool doGlobalParenting = false)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1C68D78", Offset = "0x1C68D78", VA = "0x1C68D78")]
	public static void SendObjectsIntoSectors(ref List<GameObject> parentsUndoList, List<GameObject> gameObjects, Vector3 parentLocation, string[] hierarchy, SECTR_Constants.ReparentingMode localizeBy = SECTR_Constants.ReparentingMode.Bounds, bool mergeSpawns = true, bool doGlobalParenting = false)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1C69F90", Offset = "0x1C69F90", VA = "0x1C69F90")]
	public static void AddObjToCandidateListByPosition(ref List<SECTR_SectorChildCandidate> sectorChildCandidates, Transform objectTransform)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1C69920", Offset = "0x1C69920", VA = "0x1C69920")]
	public static void AddObjToCandidateListByPosition(ref List<SECTR_SectorChildCandidate> sectorChildCandidates, Transform objectTransform, string[] ancestors)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1C69FF8", Offset = "0x1C69FF8", VA = "0x1C69FF8")]
	public static void AddObjToCandidateListByBounds(ref List<SECTR_SectorChildCandidate> sectorChildCandidates, Transform objectTransform)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1C69584", Offset = "0x1C69584", VA = "0x1C69584")]
	public static void AddObjToCandidateListByBounds(ref List<SECTR_SectorChildCandidate> sectorChildCandidates, Transform objectTransform, string[] ancestors)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1C69AA0", Offset = "0x1C69AA0", VA = "0x1C69AA0")]
	public static List<SECTR_Sector> GetTopLevelSectors()
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1C6A060", Offset = "0x1C6A060", VA = "0x1C6A060")]
	public static void Encapsulate(List<SECTR_SectorChildCandidate> sectorChildCandidates, string undoString)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1C6A10C", Offset = "0x1C6A10C", VA = "0x1C6A10C")]
	public static void Encapsulate(SECTR_Sector newSector, List<SECTR_SectorChildCandidate> sectorChildCandidates, string undoString)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1C6A4F0", Offset = "0x1C6A4F0", VA = "0x1C6A4F0")]
	public static Transform UndoParent(Transform parent, Transform child, string undoString)
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1C6A558", Offset = "0x1C6A558", VA = "0x1C6A558")]
	public static void UndoParent(GameObject parent, GameObject child, string undoString)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1C6A5AC", Offset = "0x1C6A5AC", VA = "0x1C6A5AC")]
	public static double GetUnixTimeStamp()
	{
		return default(double);
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1C69D14", Offset = "0x1C69D14", VA = "0x1C69D14")]
	private static Transform GetParent(ref List<GameObject> newParentList, Transform parentOfHierarchy, Vector3 parentLocation, List<string> hierarchy, bool mergeSpawns)
	{
		return null;
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1C6A65C", Offset = "0x1C6A65C", VA = "0x1C6A65C")]
	private static GameObject GetGlobalParent(ref List<GameObject> newParents, Vector3 parentLocation, string[] hierarchy, bool mergeSpawns)
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1C69450", Offset = "0x1C69450", VA = "0x1C69450")]
	private static void ParentObjectsGlobally(ref List<GameObject> newParents, List<GameObject> gameObjects, Vector3 parentLocation, string[] hierarchy, bool mergeSpawns)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1C6AA54", Offset = "0x1C6AA54", VA = "0x1C6AA54")]
	public SECTR_SectorUtils()
	{
	}
}
[Token(Token = "0x20000F6")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x109BA78", Offset = "0x109BA78")]
public class SECTR_ToolTip : Attribute
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string tipText;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string dependentProperty;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float min;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float max;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Type enumType;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasRange;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool devOnly;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool sceneObjectOverride;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool allowSceneObjects;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool treatAsLayer;

	[Token(Token = "0x170000C8")]
	public string TipText
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x18BC570", Offset = "0x18BC570", VA = "0x18BC570")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C9")]
	public string DependentProperty
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x18BC578", Offset = "0x18BC578", VA = "0x18BC578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CA")]
	public float Min
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x18BC580", Offset = "0x18BC580", VA = "0x18BC580")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CB")]
	public float Max
	{
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x18BC588", Offset = "0x18BC588", VA = "0x18BC588")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CC")]
	public Type EnumType
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x18BC590", Offset = "0x18BC590", VA = "0x18BC590")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public bool HasRange
	{
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x18BC598", Offset = "0x18BC598", VA = "0x18BC598")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CE")]
	public bool DevOnly
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x18BC5A0", Offset = "0x18BC5A0", VA = "0x18BC5A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CF")]
	public bool SceneObjectOverride
	{
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x18BC5A8", Offset = "0x18BC5A8", VA = "0x18BC5A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D0")]
	public bool AllowSceneObjects
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x18BC5B0", Offset = "0x18BC5B0", VA = "0x18BC5B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D1")]
	public bool TreatAsLayer
	{
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x18BC5B8", Offset = "0x18BC5B8", VA = "0x18BC5B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x18BC2B8", Offset = "0x18BC2B8", VA = "0x18BC2B8")]
	public SECTR_ToolTip(string tipText)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x18BC2EC", Offset = "0x18BC2EC", VA = "0x18BC2EC")]
	public SECTR_ToolTip(string tipText, float min, float max)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x18BC340", Offset = "0x18BC340", VA = "0x18BC340")]
	public SECTR_ToolTip(string tipText, string dependentProperty)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x18BC390", Offset = "0x18BC390", VA = "0x18BC390")]
	public SECTR_ToolTip(string tipText, string dependentProperty, float min, float max)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x18BC400", Offset = "0x18BC400", VA = "0x18BC400")]
	public SECTR_ToolTip(string tipText, bool devOnly)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x18BC44C", Offset = "0x18BC44C", VA = "0x18BC44C")]
	public SECTR_ToolTip(string tipText, bool devOnly, bool treatAsLayer)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x18BC4A4", Offset = "0x18BC4A4", VA = "0x18BC4A4")]
	public SECTR_ToolTip(string tipText, string dependentProperty, Type enumType)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x18BC508", Offset = "0x18BC508", VA = "0x18BC508")]
	public SECTR_ToolTip(string tipText, string dependentProperty, bool allowSceneObjects)
	{
	}
}
[Serializable]
[Token(Token = "0x20000F7")]
public class SECTR_ULong
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private int first;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private int second;

	[Token(Token = "0x170000D2")]
	public ulong value
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x18BD24C", Offset = "0x18BD24C", VA = "0x18BD24C")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x18BD25C", Offset = "0x18BD25C", VA = "0x18BD25C")]
		set
		{
		}
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x18BD268", Offset = "0x18BD268", VA = "0x18BD268")]
	public SECTR_ULong(ulong newValue)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x18BD298", Offset = "0x18BD298", VA = "0x18BD298")]
	public SECTR_ULong()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x18BD2C0", Offset = "0x18BD2C0", VA = "0x18BD2C0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x18BD3A4", Offset = "0x18BD3A4", VA = "0x18BD3A4")]
	public static bool operator >(SECTR_ULong a, ulong b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x18BD3CC", Offset = "0x18BD3CC", VA = "0x18BD3CC")]
	public static bool operator >(ulong a, SECTR_ULong b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x18BD3F4", Offset = "0x18BD3F4", VA = "0x18BD3F4")]
	public static bool operator <(SECTR_ULong a, ulong b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x18BD41C", Offset = "0x18BD41C", VA = "0x18BD41C")]
	public static bool operator <(ulong a, SECTR_ULong b)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109BA8C", Offset = "0x109BA8C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BA8C", Offset = "0x109BA8C")]
public class SECTR_Chunk : MonoBehaviour
{
	[Token(Token = "0x20000F9")]
	public enum LoadState
	{
		[Token(Token = "0x4000551")]
		Unloaded,
		[Token(Token = "0x4000552")]
		Loading,
		[Token(Token = "0x4000553")]
		Loaded,
		[Token(Token = "0x4000554")]
		Unloading,
		[Token(Token = "0x4000555")]
		Active
	}

	[Token(Token = "0x20000FA")]
	public delegate void LoadCallback(SECTR_Chunk source, LoadState loadState);

	[Token(Token = "0x20000FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109BB10", Offset = "0x109BB10")]
	private sealed class <_DeferredUnload>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Chunk <>4__this;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000595")]
			[Address(RVA = "0x228AC54", Offset = "0x228AC54", VA = "0x228AC54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0x228AC9C", Offset = "0x228AC9C", VA = "0x228AC9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x228AB4C", Offset = "0x228AB4C", VA = "0x228AB4C")]
		[DebuggerHidden]
		public <_DeferredUnload>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x228AB78", Offset = "0x228AB78", VA = "0x228AB78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x228AB7C", Offset = "0x228AB7C", VA = "0x228AB7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x228AC5C", Offset = "0x228AC5C", VA = "0x228AC5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109BB20", Offset = "0x109BB20")]
	private sealed class <_UnloadScene>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Chunk <>4__this;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0x228ADB4", Offset = "0x228ADB4", VA = "0x228ADB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x228ADFC", Offset = "0x228ADFC", VA = "0x228ADFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x228ACA4", Offset = "0x228ACA4", VA = "0x228ACA4")]
		[DebuggerHidden]
		public <_UnloadScene>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x228ACD0", Offset = "0x228ACD0", VA = "0x228ACD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x228ACD4", Offset = "0x228ACD4", VA = "0x228ACD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x228ADBC", Offset = "0x228ADBC", VA = "0x228ADBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AsyncOperation asyncLoadOp;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LoadState loadState;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int refCount;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject chunkRoot;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject chunkSector;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool recenterChunk;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SECTR_Sector cachedSector;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject proxy;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool quitting;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SECTR_Chunk chunkActivating;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LinkedList<SECTR_Chunk> activationQueue;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool requestedDeferredUnload;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1D58", Offset = "0x10A1D58")]
	public string ScenePath;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1D90", Offset = "0x10A1D90")]
	public string NodeName;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1DC8", Offset = "0x10A1DC8")]
	public bool ExportForReuse;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1E00", Offset = "0x10A1E00")]
	public Mesh ProxyMesh;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1E38", Offset = "0x10A1E38")]
	public Material[] ProxyMaterials;

	[Token(Token = "0x170000D3")]
	public SECTR_Sector Sector
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x1A4EBD8", Offset = "0x1A4EBD8", VA = "0x1A4EBD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000011")]
	public event LoadCallback Changed
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1A4EFF8", Offset = "0x1A4EFF8", VA = "0x1A4EFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5FB4", Offset = "0x10A5FB4")]
		add
		{
		}
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1A4F098", Offset = "0x1A4F098", VA = "0x1A4F098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5FC4", Offset = "0x10A5FC4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event LoadCallback ReferenceChange
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1A4F138", Offset = "0x1A4F138", VA = "0x1A4F138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5FD4", Offset = "0x10A5FD4")]
		add
		{
		}
		[Token(Token = "0x600057C")]
		[Address(RVA = "0x1A4F1D8", Offset = "0x1A4F1D8", VA = "0x1A4F1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A5FE4", Offset = "0x10A5FE4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1A4EBE0", Offset = "0x1A4EBE0", VA = "0x1A4EBE0")]
	public void AddReference()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1A4EDFC", Offset = "0x1A4EDFC", VA = "0x1A4EDFC")]
	public void RemoveReference()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1A4EF6C", Offset = "0x1A4EF6C", VA = "0x1A4EF6C")]
	public bool IsLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1A4EF7C", Offset = "0x1A4EF7C", VA = "0x1A4EF7C")]
	public bool IsUnloaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1A4EF8C", Offset = "0x1A4EF8C", VA = "0x1A4EF8C")]
	public float LoadProgress()
	{
		return default(float);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1A4F278", Offset = "0x1A4F278", VA = "0x1A4F278")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1A4F280", Offset = "0x1A4F280", VA = "0x1A4F280")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1A4F554", Offset = "0x1A4F554", VA = "0x1A4F554")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1A4FC80", Offset = "0x1A4FC80", VA = "0x1A4FC80")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1A4FC8C", Offset = "0x1A4FC8C", VA = "0x1A4FC8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1A4EC38", Offset = "0x1A4EC38", VA = "0x1A4EC38")]
	private void _Load()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1A4EE50", Offset = "0x1A4EE50", VA = "0x1A4EE50")]
	private void _Unload()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1A4F8BC", Offset = "0x1A4F8BC", VA = "0x1A4F8BC")]
	private void _DestroyChunk(bool createProxy, bool fromDisable)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1A4F65C", Offset = "0x1A4F65C", VA = "0x1A4F65C")]
	private void _FindChunkRoot()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1A5002C", Offset = "0x1A5002C", VA = "0x1A5002C")]
	private void _SetupChunk()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1A4F304", Offset = "0x1A4F304", VA = "0x1A4F304")]
	private void _CreateProxy()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1A4FE40", Offset = "0x1A4FE40", VA = "0x1A4FE40")]
	private void _TrySceneActivation()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1A505B0", Offset = "0x1A505B0", VA = "0x1A505B0")]
	private void _UnloadResources()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1A5074C", Offset = "0x1A5074C", VA = "0x1A5074C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A5FF4", Offset = "0x10A5FF4")]
	private IEnumerator _DeferredUnload()
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1A507C4", Offset = "0x1A507C4", VA = "0x1A507C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A6054", Offset = "0x10A6054")]
	private IEnumerator _UnloadScene(string scenePath)
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1A5083C", Offset = "0x1A5083C", VA = "0x1A5083C")]
	public SECTR_Chunk()
	{
	}
}
[Token(Token = "0x20000FD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BB30", Offset = "0x109BB30")]
public class SECTR_ChunkRef : MonoBehaviour
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_ChunkRef> allChunkRefs;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform RealSector;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Recentered;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1A5061C", Offset = "0x1A5061C", VA = "0x1A5061C")]
	public static SECTR_ChunkRef FindChunkRef(string chunkName)
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1A508F4", Offset = "0x1A508F4", VA = "0x1A508F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1A50980", Offset = "0x1A50980", VA = "0x1A50980")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1A50A0C", Offset = "0x1A50A0C", VA = "0x1A50A0C")]
	public SECTR_ChunkRef()
	{
	}
}
[Token(Token = "0x20000FE")]
public class SECTR_GroupLoader : SECTR_Loader
{
	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1E90", Offset = "0x10A1E90")]
	public List<SECTR_Sector> Sectors;

	[Token(Token = "0x170000D8")]
	public override bool Loaded
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x1C5BF98", Offset = "0x1C5BF98", VA = "0x1C5BF98", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1C5BF54", Offset = "0x1C5BF54", VA = "0x1C5BF54", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1C5C0F8", Offset = "0x1C5C0F8", VA = "0x1C5C0F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1C5C298", Offset = "0x1C5C298", VA = "0x1C5C298")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1C5C438", Offset = "0x1C5C438", VA = "0x1C5C438")]
	private void ChunkChanged(SECTR_Chunk source, SECTR_Chunk.LoadState loadState)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1C5C66C", Offset = "0x1C5C66C", VA = "0x1C5C66C")]
	public SECTR_GroupLoader()
	{
	}
}
[Token(Token = "0x20000FF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109BB68", Offset = "0x109BB68")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BB68", Offset = "0x109BB68")]
public class SECTR_Hibernator : MonoBehaviour
{
	[Token(Token = "0x2000100")]
	public delegate void HibernateCallback();

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hibernating;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<SECTR_Chunk, SECTR_Chunk> chunks;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numLoadedSectors;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1EC8", Offset = "0x10A1EC8")]
	public bool HibernateChildren;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1F00", Offset = "0x10A1F00")]
	public bool HibernateBehaviors;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1F38", Offset = "0x10A1F38")]
	public bool HibernateColliders;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1F70", Offset = "0x10A1F70")]
	public bool HibernateRigidBodies;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1FA8", Offset = "0x10A1FA8")]
	public bool HibernateRenderers;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A1FE0", Offset = "0x10A1FE0")]
	public GameObject HibernateTarget;

	[Token(Token = "0x14000013")]
	public event HibernateCallback Awoke
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x1C5C6F8", Offset = "0x1C5C6F8", VA = "0x1C5C6F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6154", Offset = "0x10A6154")]
		add
		{
		}
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x1C5C798", Offset = "0x1C5C798", VA = "0x1C5C798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6164", Offset = "0x10A6164")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event HibernateCallback Hibernated
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1C5C838", Offset = "0x1C5C838", VA = "0x1C5C838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6174", Offset = "0x10A6174")]
		add
		{
		}
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x1C5C8D8", Offset = "0x1C5C8D8", VA = "0x1C5C8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6184", Offset = "0x10A6184")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event HibernateCallback HibernateUpdate
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x1C5C978", Offset = "0x1C5C978", VA = "0x1C5C978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6194", Offset = "0x10A6194")]
		add
		{
		}
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x1C5CA18", Offset = "0x1C5CA18", VA = "0x1C5CA18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A61A4", Offset = "0x10A61A4")]
		remove
		{
		}
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1C5CAB8", Offset = "0x1C5CAB8", VA = "0x1C5CAB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1C5CC40", Offset = "0x1C5CC40", VA = "0x1C5CC40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1C5CDAC", Offset = "0x1C5CDAC", VA = "0x1C5CDAC")]
	private void _ChunkChanged(SECTR_Chunk source, SECTR_Chunk.LoadState loadState)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1C5CE54", Offset = "0x1C5CE54", VA = "0x1C5CE54")]
	private void _MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1C5CDD4", Offset = "0x1C5CDD4", VA = "0x1C5CDD4")]
	private void _HibernationChanged()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1C5D214", Offset = "0x1C5D214", VA = "0x1C5D214")]
	private void _WakeUp()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1C5D1D4", Offset = "0x1C5D1D4", VA = "0x1C5D1D4")]
	private void _Hibernate()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1C5D250", Offset = "0x1C5D250", VA = "0x1C5D250")]
	private void _UpdateComponents()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1C5D6E0", Offset = "0x1C5D6E0", VA = "0x1C5D6E0")]
	public SECTR_Hibernator()
	{
	}
}
[Token(Token = "0x2000101")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BBEC", Offset = "0x109BBEC")]
public class SECTR_LightmapRef : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000102")]
	public class RefData
	{
		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D FarLightmap;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D NearLightmap;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x228C6E4", Offset = "0x228C6E4", VA = "0x228C6E4")]
		public RefData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000103")]
	public class RenderData
	{
		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int rendererLightmapIndex;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 rendererLightmapScaleOffset;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Terrain terrain;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int terrainLightmapIndex;

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x228C6F4", Offset = "0x228C6F4", VA = "0x228C6F4")]
		public RenderData()
		{
		}
	}

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private List<RefData> lightmapRefs;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private List<RenderData> lightmapRenderRefs;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] globalLightmapRefCount;

	[Token(Token = "0x170000D9")]
	public List<RefData> LightmapRefs
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x1C5FB64", Offset = "0x1C5FB64", VA = "0x1C5FB64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DA")]
	public List<RenderData> LightmapRenderers
	{
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x1C5FB6C", Offset = "0x1C5FB6C", VA = "0x1C5FB6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1C5FB74", Offset = "0x1C5FB74", VA = "0x1C5FB74")]
	public static void InitRefCounts()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1C5FD3C", Offset = "0x1C5FD3C", VA = "0x1C5FD3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1C5FED0", Offset = "0x1C5FED0", VA = "0x1C5FED0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1C5FED4", Offset = "0x1C5FED4", VA = "0x1C5FED4")]
	public SECTR_LightmapRef()
	{
	}
}
[Token(Token = "0x2000104")]
public abstract class SECTR_Loader : MonoBehaviour
{
	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool locked;

	[Token(Token = "0x170000DB")]
	public abstract bool Loaded
	{
		[Token(Token = "0x60005C4")]
		get;
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1C5FFA4", Offset = "0x1C5FFA4", VA = "0x1C5FFA4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1C5FFE8", Offset = "0x1C5FFE8", VA = "0x1C5FFE8")]
	protected void LockSelf(bool lockSelf)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1C5C6F0", Offset = "0x1C5C6F0", VA = "0x1C5C6F0")]
	protected SECTR_Loader()
	{
	}
}
[Token(Token = "0x2000105")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BC24", Offset = "0x109BC24")]
public class SECTR_LoadingDoor : SECTR_Door
{
	[Token(Token = "0x2000106")]
	private enum FadeMode
	{
		[Token(Token = "0x4000581")]
		None,
		[Token(Token = "0x4000582")]
		FadeIn,
		[Token(Token = "0x4000583")]
		FadeOut,
		[Token(Token = "0x4000584")]
		Hold
	}

	[Token(Token = "0x2000107")]
	private class LoadRequest
	{
		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SECTR_Chunk chunkToLoad;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SECTR_Chunk chunkToUnload;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Chunk loadedChunk;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool enteredFront;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool enteredBack;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FadeMode fadeMode;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeAmount;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float holdStart;

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x228C734", Offset = "0x228C734", VA = "0x228C734")]
		public LoadRequest()
		{
		}
	}

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Texture2D fadeTexture;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<Collider, LoadRequest> loadRequests;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A20B8", Offset = "0x10A20B8")]
	public LayerMask LoadLayers;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A20F0", Offset = "0x10A20F0")]
	public bool FadeBeforeLoad;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2128", Offset = "0x10A2128")]
	public float FadeTime;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2174", Offset = "0x10A2174")]
	public float HoldTime;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A21C0", Offset = "0x10A21C0")]
	public Color FadeColor;

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1C60144", Offset = "0x1C60144", VA = "0x1C60144", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1C60210", Offset = "0x1C60210", VA = "0x1C60210", Slot = "5")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1C606BC", Offset = "0x1C606BC", VA = "0x1C606BC", Slot = "6")]
	protected override void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1C609D0", Offset = "0x1C609D0", VA = "0x1C609D0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x1C60D78", Offset = "0x1C60D78", VA = "0x1C60D78", Slot = "7")]
	protected override bool CanOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1C60F14", Offset = "0x1C60F14", VA = "0x1C60F14")]
	private void OnClose()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1C60E28", Offset = "0x1C60E28", VA = "0x1C60E28")]
	private bool _IsSectorLoaded(SECTR_Sector sector)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1C6054C", Offset = "0x1C6054C", VA = "0x1C6054C")]
	private SECTR_Chunk _GetOppositeChunk(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1C61070", Offset = "0x1C61070", VA = "0x1C61070")]
	public SECTR_LoadingDoor()
	{
	}
}
[Token(Token = "0x2000108")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BC5C", Offset = "0x109BC5C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109BC5C", Offset = "0x109BC5C")]
public class SECTR_NeighborLoader : SECTR_Loader
{
	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SECTR_Sector> currentSectors;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SECTR_Graph.Node> neighbors;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A220C", Offset = "0x10A220C")]
	public int MaxDepth;

	[Token(Token = "0x170000DC")]
	public override bool Loaded
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1C645FC", Offset = "0x1C645FC", VA = "0x1C645FC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1C645B8", Offset = "0x1C645B8", VA = "0x1C645B8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1C64730", Offset = "0x1C64730", VA = "0x1C64730")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1C647F0", Offset = "0x1C647F0", VA = "0x1C647F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1C64D44", Offset = "0x1C64D44", VA = "0x1C64D44")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1C64D4C", Offset = "0x1C64D4C", VA = "0x1C64D4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1C64910", Offset = "0x1C64910", VA = "0x1C64910")]
	private void _MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x1C64D94", Offset = "0x1C64D94", VA = "0x1C64D94")]
	public SECTR_NeighborLoader()
	{
	}
}
[Token(Token = "0x2000109")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BCE0", Offset = "0x109BCE0")]
public class SECTR_RegionLoader : SECTR_Loader
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SECTR_Sector> sectors;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SECTR_Sector> loadSectors;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SECTR_Sector> unloadSectors;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool updated;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2244", Offset = "0x10A2244")]
	public Vector3 LoadSize;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A227C", Offset = "0x10A227C")]
	public float UnloadBuffer;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A22BC", Offset = "0x10A22BC")]
	public LayerMask LayersToLoad;

	[Token(Token = "0x170000DD")]
	public override bool Loaded
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x1C67484", Offset = "0x1C67484", VA = "0x1C67484", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x1C67440", Offset = "0x1C67440", VA = "0x1C67440", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1C675E8", Offset = "0x1C675E8", VA = "0x1C675E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1C675F0", Offset = "0x1C675F0", VA = "0x1C675F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1C67754", Offset = "0x1C67754", VA = "0x1C67754")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1C67BD8", Offset = "0x1C67BD8", VA = "0x1C67BD8")]
	public SECTR_RegionLoader()
	{
	}
}
[Token(Token = "0x200010A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109BD18", Offset = "0x109BD18")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BD18", Offset = "0x109BD18")]
public class SECTR_StartLoader : SECTR_Loader
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D fadeTexture;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fadeAmount;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A22F4", Offset = "0x10A22F4")]
	public bool FadeIn;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A232C", Offset = "0x10A232C")]
	public float FadeTime;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2378", Offset = "0x10A2378")]
	public Color FadeColor;

	[NonSerialized]
	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool Paused;

	[Token(Token = "0x170000DE")]
	public override bool Loaded
	{
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x18BB8E8", Offset = "0x18BB8E8", VA = "0x18BB8E8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x18BB8A4", Offset = "0x18BB8A4", VA = "0x18BB8A4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x18BBA58", Offset = "0x18BBA58", VA = "0x18BBA58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x18BBB4C", Offset = "0x18BBB4C", VA = "0x18BBB4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x18BBB80", Offset = "0x18BBB80", VA = "0x18BBB80")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x18BBCCC", Offset = "0x18BBCCC", VA = "0x18BBCCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x18BBD70", Offset = "0x18BBD70", VA = "0x18BBD70")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x18BBEEC", Offset = "0x18BBEEC", VA = "0x18BBEEC")]
	public SECTR_StartLoader()
	{
	}
}
[Token(Token = "0x200010B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BD9C", Offset = "0x109BD9C")]
public class SECTR_TriggerLoader : SECTR_Loader
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int loadedCount;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool chunksReferenced;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A23C4", Offset = "0x10A23C4")]
	public List<SECTR_Sector> Sectors;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A23FC", Offset = "0x10A23FC")]
	public bool UnloadOnExit;

	[Token(Token = "0x170000DF")]
	public override bool Loaded
	{
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x18BC974", Offset = "0x18BC974", VA = "0x18BC974", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x18BC930", Offset = "0x18BC930", VA = "0x18BC930", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x18BCAA8", Offset = "0x18BCAA8", VA = "0x18BCAA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x18BCC20", Offset = "0x18BCC20", VA = "0x18BCC20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x18BCDB0", Offset = "0x18BCDB0", VA = "0x18BCDB0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x18BCC58", Offset = "0x18BCC58", VA = "0x18BCC58")]
	private void _RefChunks()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x18BCACC", Offset = "0x18BCACC", VA = "0x18BCACC")]
	private void _UnrefChunks()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x18BCDD4", Offset = "0x18BCDD4", VA = "0x18BCDD4")]
	public SECTR_TriggerLoader()
	{
	}
}
[Token(Token = "0x200010C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109BDD4", Offset = "0x109BDD4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BDD4", Offset = "0x109BDD4")]
[ExecuteInEditMode]
public class SECTR_Culler : MonoBehaviour
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2434", Offset = "0x10A2434")]
	public bool CullEachChild;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1A51C60", Offset = "0x1A51C60", VA = "0x1A51C60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1A51CE0", Offset = "0x1A51CE0", VA = "0x1A51CE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x1A51CE4", Offset = "0x1A51CE4", VA = "0x1A51CE4")]
	public SECTR_Culler()
	{
	}
}
[Token(Token = "0x200010D")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109BE68", Offset = "0x109BE68")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BE68", Offset = "0x109BE68")]
public class SECTR_CullingCamera : MonoBehaviour
{
	[Token(Token = "0x200010E")]
	private struct VisibilityNode
	{
		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SECTR_Sector sector;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SECTR_Portal portal;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Plane> frustumPlanes;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool forwardTraversal;

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x228B9E0", Offset = "0x228B9E0", VA = "0x228B9E0")]
		public VisibilityNode(SECTR_CullingCamera cullingCamera, SECTR_Sector sector, SECTR_Portal portal, Plane[] frustumPlanes, bool forwardTraversal)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x228BB4C", Offset = "0x228BB4C", VA = "0x228BB4C")]
		public VisibilityNode(SECTR_CullingCamera cullingCamera, SECTR_Sector sector, SECTR_Portal portal, List<Plane> frustumPlanes, bool forwardTraversal)
		{
		}
	}

	[Token(Token = "0x200010F")]
	private struct ClipVertex
	{
		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4 vertex;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float side;

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x228B444", Offset = "0x228B444", VA = "0x228B444")]
		public ClipVertex(Vector4 vertex, float side)
		{
		}
	}

	[Token(Token = "0x2000110")]
	private struct ThreadCullData
	{
		[Token(Token = "0x2000111")]
		public enum CullingModes
		{
			[Token(Token = "0x40005E1")]
			None,
			[Token(Token = "0x40005E2")]
			Graph,
			[Token(Token = "0x40005E3")]
			Shadow
		}

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SECTR_Sector sector;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 cameraPos;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Plane> cullingPlanes;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<List<Plane>> occluderFrustums;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int baseMask;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float shadowDistance;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullingSimpleCulling;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SECTR_Member.Child> sectorShadowLights;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CullingModes cullingMode;

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x228B454", Offset = "0x228B454", VA = "0x228B454")]
		public ThreadCullData(SECTR_Sector sector, SECTR_CullingCamera cullingCamera, Vector3 cameraPos, List<Plane> cullingPlanes, List<List<Plane>> occluderFrustums, int baseMask, float shadowDistance, bool cullingSimpleCulling)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x228B954", Offset = "0x228B954", VA = "0x228B954")]
		public ThreadCullData(SECTR_Sector sector, Vector3 cameraPos, List<SECTR_Member.Child> sectorShadowLights)
		{
		}
	}

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera myCamera;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SECTR_Member cullingMember;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, SECTR_Member.Child> hiddenRenderers;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, SECTR_Member.Child> hiddenLights;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, SECTR_Member.Child> hiddenTerrains;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int renderersCulled;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int lightsCulled;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int terrainsCulled;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool didCull;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool runOnce;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SECTR_Sector> initialSectors;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Stack<VisibilityNode> nodeStack;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ClipVertex> portalVertices;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Plane> newFrustum;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Plane> cullingPlanes;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<List<Plane>> occluderFrustums;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<SECTR_Occluder, SECTR_Occluder> activeOccluders;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<ClipVertex> occluderVerts;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<SECTR_Member.Child, int> shadowLights;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SECTR_Sector> shadowSectors;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<SECTR_Sector, List<SECTR_Member.Child>> shadowSectorTable;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<int, SECTR_Member.Child> visibleRenderers;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, SECTR_Member.Child> visibleLights;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<int, SECTR_Member.Child> visibleTerrains;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<SECTR_Member.Child> visibleClothRenderers;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Stack<List<Plane>> frustumPool;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Stack<List<SECTR_Member.Child>> shadowLightPool;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Stack<Dictionary<int, SECTR_Member.Child>> threadVisibleListPool;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Stack<Dictionary<SECTR_Member.Child, int>> threadShadowLightPool;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Stack<List<Plane>> threadFrustumPool;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Stack<List<List<Plane>>> threadOccluderPool;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Thread> workerThreads;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Queue<ThreadCullData> cullingWorkQueue;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int remainingThreadWork;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_CullingCamera> allCullingCameras;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A246C", Offset = "0x10A246C")]
	public bool MultiCameraCulling;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A24A4", Offset = "0x10A24A4")]
	public bool SimpleCulling;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A24DC", Offset = "0x10A24DC")]
	public float GizmoDistance;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2520", Offset = "0x10A2520")]
	public Material GizmoMaterial;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2558", Offset = "0x10A2558")]
	public bool CullInEditor;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2590", Offset = "0x10A2590")]
	public bool CullShadows;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A25CC", Offset = "0x10A25CC")]
	public Camera cullingProxy;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2608", Offset = "0x10A2608")]
	public int NumWorkerThreads;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2648", Offset = "0x10A2648")]
	public bool SRP_Fix;

	[Token(Token = "0x170000E0")]
	public static List<SECTR_CullingCamera> All
	{
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x1A51CEC", Offset = "0x1A51CEC", VA = "0x1A51CEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E1")]
	public int RenderersCulled
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x1A51D50", Offset = "0x1A51D50", VA = "0x1A51D50")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E2")]
	public int LightsCulled
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x1A51D58", Offset = "0x1A51D58", VA = "0x1A51D58")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E3")]
	public int TerrainsCulled
	{
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x1A51D60", Offset = "0x1A51D60", VA = "0x1A51D60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1A51D68", Offset = "0x1A51D68", VA = "0x1A51D68")]
	public void ResetStats()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x1A51D78", Offset = "0x1A51D78", VA = "0x1A51D78")]
	private void RenderPipeline_beginFrameRendering(ScriptableRenderContext ScriptableRenderContext, Camera[] obj)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1A54A14", Offset = "0x1A54A14", VA = "0x1A54A14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1A54CC0", Offset = "0x1A54CC0", VA = "0x1A54CC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x1A55148", Offset = "0x1A55148", VA = "0x1A55148")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1A51D7C", Offset = "0x1A51D7C", VA = "0x1A51D7C")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1A57770", Offset = "0x1A57770", VA = "0x1A57770")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x1A57780", Offset = "0x1A57780", VA = "0x1A57780")]
	private void _CullingWorker()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x1A56138", Offset = "0x1A56138", VA = "0x1A56138")]
	private void _FrustumCullSectorThread(ThreadCullData cullData)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1A57158", Offset = "0x1A57158", VA = "0x1A57158")]
	private void _ShadowCullSectorThread(ThreadCullData cullData)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x1A55F60", Offset = "0x1A55F60", VA = "0x1A55F60")]
	private static void _FrustumCullSector(SECTR_Sector sector, Vector3 cameraPos, List<Plane> cullingPlanes, List<List<Plane>> occluderFrustums, int baseMask, float shadowDistance, bool forceGroupCull, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleLights, ref Dictionary<int, SECTR_Member.Child> visibleTerrains, ref Dictionary<SECTR_Member.Child, int> shadowLights)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x1A57964", Offset = "0x1A57964", VA = "0x1A57964")]
	private static void _FrustumCull(SECTR_Member member, Vector3 cameraPos, List<Plane> frustumPlanes, List<List<Plane>> occluders, int baseMask, float shadowDistance, bool forceGroupCull, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleLights, ref Dictionary<int, SECTR_Member.Child> visibleTerrains, ref Dictionary<SECTR_Member.Child, int> shadowLights)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1A57000", Offset = "0x1A57000", VA = "0x1A57000")]
	private static void _ShadowCullSector(SECTR_Sector sector, List<SECTR_Member.Child> sectorShadowLights, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleTerrains)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1A580E0", Offset = "0x1A580E0", VA = "0x1A580E0")]
	private static void _ShadowCull(SECTR_Member member, List<SECTR_Member.Child> shadowLights, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleTerrains)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x1A57FB4", Offset = "0x1A57FB4", VA = "0x1A57FB4")]
	private static bool _IsVisible(Bounds childBounds, List<Plane> frustumPlanes, int parentMask, List<List<Plane>> occluders)
	{
		return default(bool);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1A55218", Offset = "0x1A55218", VA = "0x1A55218")]
	private void _HideAllMembers()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1A55788", Offset = "0x1A55788", VA = "0x1A55788")]
	private void _ApplyCulling(bool visible)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1A54E70", Offset = "0x1A54E70", VA = "0x1A54E70")]
	private void _UndoCulling()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1A55D1C", Offset = "0x1A55D1C", VA = "0x1A55D1C")]
	private void _BuildFrustumFromHull(Camera cullingCamera, bool forwardTraversal, List<ClipVertex> portalVertices, ref List<Plane> newFrustum)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1A5866C", Offset = "0x1A5866C", VA = "0x1A5866C")]
	public SECTR_CullingCamera()
	{
	}
}
[Token(Token = "0x2000112")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109BEFC", Offset = "0x109BEFC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BEFC", Offset = "0x109BEFC")]
public class SECTR_LOD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000113")]
	public class LODEntry
	{
		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer lightmapSource;

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x228C344", Offset = "0x228C344", VA = "0x228C344")]
		public LODEntry()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000114")]
	public class LODSet
	{
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<LODEntry> lodEntries;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float threshold;

		[Token(Token = "0x170000E5")]
		public List<LODEntry> LODEntries
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0x228C34C", Offset = "0x228C34C", VA = "0x228C34C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public float Threshold
		{
			[Token(Token = "0x600061C")]
			[Address(RVA = "0x228C354", Offset = "0x228C354", VA = "0x228C354")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600061D")]
			[Address(RVA = "0x228C35C", Offset = "0x228C35C", VA = "0x228C35C")]
			set
			{
			}
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x228C364", Offset = "0x228C364", VA = "0x228C364")]
		public LODEntry Add(GameObject gameObject, Renderer lightmapSource)
		{
			return null;
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x228C53C", Offset = "0x228C53C", VA = "0x228C53C")]
		public void Remove(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x228C438", Offset = "0x228C438", VA = "0x228C438")]
		public LODEntry GetEntry(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x228C65C", Offset = "0x228C65C", VA = "0x228C65C")]
		public LODSet()
		{
		}
	}

	[Token(Token = "0x2000115")]
	[Flags]
	public enum SiblinglFlags
	{
		[Token(Token = "0x40005F4")]
		Behaviors = 1,
		[Token(Token = "0x40005F5")]
		Renderers = 2,
		[Token(Token = "0x40005F6")]
		Lights = 4,
		[Token(Token = "0x40005F7")]
		Colliders = 8,
		[Token(Token = "0x40005F8")]
		RigidBodies = 0x10
	}

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Vector3 boundsOffset;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[HideInInspector]
	private float boundsRadius;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private bool boundsUpdated;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int activeLOD;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool siblingsDisabled;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> toHide;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LODEntry> toShow;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_LOD> allLODs;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<LODSet> LODs;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A2730", Offset = "0x10A2730")]
	public SiblinglFlags CullSiblings;

	[Token(Token = "0x170000E4")]
	public static List<SECTR_LOD> All
	{
		[Token(Token = "0x6000611")]
		[Address(RVA = "0x1C5E86C", Offset = "0x1C5E86C", VA = "0x1C5E86C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1C5E8D0", Offset = "0x1C5E8D0", VA = "0x1C5E8D0")]
	public void SelectLOD(Camera renderCamera)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1C5F604", Offset = "0x1C5F604", VA = "0x1C5F604")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1C5F85C", Offset = "0x1C5F85C", VA = "0x1C5F85C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1C5F8F8", Offset = "0x1C5F8F8", VA = "0x1C5F8F8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1C5EE18", Offset = "0x1C5EE18", VA = "0x1C5EE18")]
	private void _ActivateLOD(int lodIndex)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1C5EAE0", Offset = "0x1C5EAE0", VA = "0x1C5EAE0")]
	private void _CalculateBounds()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1C5F9B0", Offset = "0x1C5F9B0", VA = "0x1C5F9B0")]
	public SECTR_LOD()
	{
	}
}
[Token(Token = "0x2000116")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109BFA0", Offset = "0x109BFA0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109BFA0", Offset = "0x109BFA0")]
public class SECTR_Occluder : SECTR_Hull
{
	[Token(Token = "0x2000117")]
	public enum OrientationAxis
	{
		[Token(Token = "0x40005FF")]
		None,
		[Token(Token = "0x4000600")]
		XYZ,
		[Token(Token = "0x4000601")]
		XZ,
		[Token(Token = "0x4000602")]
		XY,
		[Token(Token = "0x4000603")]
		YZ
	}

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SECTR_Sector> currentSectors;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Occluder> allOccluders;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<SECTR_Sector, List<SECTR_Occluder>> occluderTable;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x10A27CC", Offset = "0x10A27CC")]
	public OrientationAxis AutoOrient;

	[Token(Token = "0x170000E7")]
	public static List<SECTR_Occluder> All
	{
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x1C64E74", Offset = "0x1C64E74", VA = "0x1C64E74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E8")]
	public SECTR_Member Member
	{
		[Token(Token = "0x6000624")]
		[Address(RVA = "0x1C64F7C", Offset = "0x1C64F7C", VA = "0x1C64F7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E9")]
	public Vector3 MeshNormal
	{
		[Token(Token = "0x6000625")]
		[Address(RVA = "0x1C64F84", Offset = "0x1C64F84", VA = "0x1C64F84")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1C64ED8", Offset = "0x1C64ED8", VA = "0x1C64ED8")]
	public static List<SECTR_Occluder> GetOccludersInSector(SECTR_Sector sector)
	{
		return null;
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1C64FAC", Offset = "0x1C64FAC", VA = "0x1C64FAC")]
	public Matrix4x4 GetCullingMatrix(Vector3 cameraPos)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1C6510C", Offset = "0x1C6510C", VA = "0x1C6510C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1C65228", Offset = "0x1C65228", VA = "0x1C65228")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1C65328", Offset = "0x1C65328", VA = "0x1C65328")]
	private void _MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1C65700", Offset = "0x1C65700", VA = "0x1C65700")]
	public SECTR_Occluder()
	{
	}
}
[Token(Token = "0x2000118")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x170000EA")]
	public static bool Initialized
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x18CB378", Offset = "0x18CB378", VA = "0x18CB378")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x18CB380", Offset = "0x18CB380", VA = "0x18CB380")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000119")]
public class SetLocalBoolIfIntOverZero : MonoBehaviour
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int value;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalBoolVariable localBool;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x18C1FAC", Offset = "0x18C1FAC", VA = "0x18C1FAC")]
	public void Add()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x18C1FF8", Offset = "0x18C1FF8", VA = "0x18C1FF8")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x18C1FBC", Offset = "0x18C1FBC", VA = "0x18C1FBC")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x18C2008", Offset = "0x18C2008", VA = "0x18C2008")]
	public SetLocalBoolIfIntOverZero()
	{
	}
}
[Token(Token = "0x200011A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109C034", Offset = "0x109C034")]
public class BuoyantObject : MonoBehaviour
{
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color red;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color green;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color blue;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color orange;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float steepness;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wavelength;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float speed;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] directions;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10A2804", Offset = "0x10A2804")]
	public StylizedWaterURP water;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10A283C", Offset = "0x10A283C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A283C", Offset = "0x10A283C")]
	public float strength;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A2890", Offset = "0x10A2890")]
	public float objectDepth;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float velocityDrag;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float angularDrag;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10A28AC", Offset = "0x10A28AC")]
	public Transform[] effectors;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rb;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] effectorProjections;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x1945334", Offset = "0x1945334", VA = "0x1945334")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x19454A8", Offset = "0x19454A8", VA = "0x19454A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x19454C8", Offset = "0x19454C8", VA = "0x19454C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1945768", Offset = "0x1945768", VA = "0x1945768")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x1945A24", Offset = "0x1945A24", VA = "0x1945A24")]
	public BuoyantObject()
	{
	}
}
[Token(Token = "0x200011B")]
public class FramerateMonitor : UserReportingMonitor
{
	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float duration;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MaximumDurationInSeconds;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MinimumFramerate;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1773608", Offset = "0x1773608", VA = "0x1773608")]
	public FramerateMonitor()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1773638", Offset = "0x1773638", VA = "0x1773638")]
	private void Update()
	{
	}
}
[Token(Token = "0x200011C")]
public class UserReportingConfigureOnly : MonoBehaviour
{
	[Token(Token = "0x6000639")]
	[Address(RVA = "0x13982C8", Offset = "0x13982C8", VA = "0x13982C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x13982E8", Offset = "0x13982E8", VA = "0x13982E8")]
	public UserReportingConfigureOnly()
	{
	}
}
[Token(Token = "0x200011D")]
public class UserReportingMonitor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C094", Offset = "0x109C094")]
	private sealed class <>c
	{
		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<UserReportScreenshot> <>9__7_0;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<UserReportScreenshot> <>9__7_1;

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x22902A4", Offset = "0x22902A4", VA = "0x22902A4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x22902AC", Offset = "0x22902AC", VA = "0x22902AC")]
		internal void <Trigger>b__7_0(UserReportScreenshot s)
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x22902B0", Offset = "0x22902B0", VA = "0x22902B0")]
		internal void <Trigger>b__7_1(UserReportScreenshot s)
		{
		}
	}

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsEnabled;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool IsEnabledAfterTrigger;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool IsHiddenWithoutDimension;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string MonitorName;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Summary;

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x13982F0", Offset = "0x13982F0", VA = "0x13982F0")]
	public UserReportingMonitor()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x139834C", Offset = "0x139834C", VA = "0x139834C")]
	private void Start()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x139836C", Offset = "0x139836C", VA = "0x139836C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x13985E8", Offset = "0x13985E8", VA = "0x13985E8", Slot = "4")]
	protected virtual void Triggered()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x13985EC", Offset = "0x13985EC", VA = "0x13985EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A61B4", Offset = "0x10A61B4")]
	private void <Trigger>b__7_2(UserReport br)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x13989DC", Offset = "0x13989DC", VA = "0x13989DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A61C4", Offset = "0x10A61C4")]
	private void <Trigger>b__7_3(bool success, UserReport br2)
	{
	}
}
[Serializable]
[Token(Token = "0x200011F")]
public enum UserReportingPlatformType
{
	[Token(Token = "0x4000622")]
	Default,
	[Token(Token = "0x4000623")]
	Async
}
[Token(Token = "0x2000120")]
public class UserReportingScript : MonoBehaviour
{
	[Token(Token = "0x2000121")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C0A4", Offset = "0x109C0A4")]
	private sealed class <ClearError>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UserReportingScript <>4__this;

		[Token(Token = "0x170000ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600065A")]
			[Address(RVA = "0x2290414", Offset = "0x2290414", VA = "0x2290414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600065C")]
			[Address(RVA = "0x229045C", Offset = "0x229045C", VA = "0x229045C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x2290330", Offset = "0x2290330", VA = "0x2290330")]
		[DebuggerHidden]
		public <ClearError>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x229035C", Offset = "0x229035C", VA = "0x229035C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x2290360", Offset = "0x2290360", VA = "0x2290360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x229041C", Offset = "0x229041C", VA = "0x229041C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C0B4", Offset = "0x109C0B4")]
	private sealed class <>c
	{
		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<UserReportScreenshot> <>9__29_0;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<UserReportScreenshot> <>9__29_1;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<float, float> <>9__33_0;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<bool, byte[]> <>9__33_1;

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x2290318", Offset = "0x2290318", VA = "0x2290318")]
		public <>c()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x2290320", Offset = "0x2290320", VA = "0x2290320")]
		internal void <CreateUserReport>b__29_0(UserReportScreenshot s)
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x2290324", Offset = "0x2290324", VA = "0x2290324")]
		internal void <CreateUserReport>b__29_1(UserReportScreenshot s)
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x2290328", Offset = "0x2290328", VA = "0x2290328")]
		internal void <Start>b__33_0(float upload, float download)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x229032C", Offset = "0x229032C", VA = "0x229032C")]
		internal void <Start>b__33_1(bool result, byte[] bytes)
		{
		}
	}

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A28E4", Offset = "0x10A28E4")]
	public Dropdown CategoryDropdown;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A291C", Offset = "0x10A291C")]
	public InputField DescriptionInput;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2954", Offset = "0x10A2954")]
	public Canvas ErrorPopup;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isCreatingUserReport;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A298C", Offset = "0x10A298C")]
	public bool IsHotkeyEnabled;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A29C4", Offset = "0x10A29C4")]
	public bool IsInSilentMode;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A29FC", Offset = "0x10A29FC")]
	public bool IsSelfReporting;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isShowingError;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isSubmitting;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2A34", Offset = "0x10A2A34")]
	public Text ProgressText;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2A6C", Offset = "0x10A2A6C")]
	public bool SendEventsToAnalytics;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2AA4", Offset = "0x10A2AA4")]
	public Canvas SubmittingPopup;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2ADC", Offset = "0x10A2ADC")]
	public InputField SummaryInput;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2B14", Offset = "0x10A2B14")]
	public Image ThumbnailViewer;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityUserReportingUpdater unityUserReportingUpdater;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2B4C", Offset = "0x10A2B4C")]
	public Button UserReportButton;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2B84", Offset = "0x10A2B84")]
	public Canvas UserReportForm;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2BBC", Offset = "0x10A2BBC")]
	public UserReportingPlatformType UserReportingPlatform;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A2BF4", Offset = "0x10A2BF4")]
	public UnityEvent UserReportSubmitting;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2C2C", Offset = "0x10A2C2C")]
	private UserReport <CurrentUserReport>k__BackingField;

	[Token(Token = "0x170000EB")]
	public UserReport CurrentUserReport
	{
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1398A8C", Offset = "0x1398A8C", VA = "0x1398A8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A61D4", Offset = "0x10A61D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1398A94", Offset = "0x1398A94", VA = "0x1398A94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A61E4", Offset = "0x10A61E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public UserReportingState State
	{
		[Token(Token = "0x6000648")]
		[Address(RVA = "0x1398A9C", Offset = "0x1398A9C", VA = "0x1398A9C")]
		get
		{
			return default(UserReportingState);
		}
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x13989E8", Offset = "0x13989E8", VA = "0x13989E8")]
	public UserReportingScript()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1398AD0", Offset = "0x1398AD0", VA = "0x1398AD0")]
	public void CancelUserReport()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1398B40", Offset = "0x1398B40", VA = "0x1398B40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A61F4", Offset = "0x10A61F4")]
	private IEnumerator ClearError()
	{
		return null;
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x1398AFC", Offset = "0x1398AFC", VA = "0x1398AFC")]
	private void ClearForm()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1398BB8", Offset = "0x1398BB8", VA = "0x1398BB8")]
	public void CreateUserReport()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1398E4C", Offset = "0x1398E4C", VA = "0x1398E4C")]
	private UserReportingClientConfiguration GetConfiguration()
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1398EB0", Offset = "0x1398EB0", VA = "0x1398EB0")]
	public bool IsSubmitting()
	{
		return default(bool);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1398EB8", Offset = "0x1398EB8", VA = "0x1398EB8")]
	private void SetThumbnail(UserReport userReport)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x139905C", Offset = "0x139905C", VA = "0x139905C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1399510", Offset = "0x1399510", VA = "0x1399510")]
	public void SubmitUserReport()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x13998A4", Offset = "0x13998A4", VA = "0x13998A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1399B14", Offset = "0x1399B14", VA = "0x1399B14", Slot = "4")]
	protected virtual void RaiseUserReportSubmitting()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x1399B28", Offset = "0x1399B28", VA = "0x1399B28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6254", Offset = "0x10A6254")]
	private void <CreateUserReport>b__29_2(UserReport br)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1399F40", Offset = "0x1399F40", VA = "0x1399F40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6264", Offset = "0x10A6264")]
	private void <SubmitUserReport>b__34_0(float uploadProgress, float downloadProgress)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x139A030", Offset = "0x139A030", VA = "0x139A030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6274", Offset = "0x10A6274")]
	private void <SubmitUserReport>b__34_1(bool success, UserReport br2)
	{
	}
}
[Token(Token = "0x2000123")]
public enum UserReportingState
{
	[Token(Token = "0x4000641")]
	Idle,
	[Token(Token = "0x4000642")]
	CreatingUserReport,
	[Token(Token = "0x4000643")]
	ShowingForm,
	[Token(Token = "0x4000644")]
	SubmittingForm
}
[Token(Token = "0x2000124")]
public class UserReportingXRExtensions : MonoBehaviour
{
	[Token(Token = "0x6000663")]
	[Address(RVA = "0x139A084", Offset = "0x139A084", VA = "0x139A084")]
	private static bool XRIsPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x139A248", Offset = "0x139A248", VA = "0x139A248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x139A2C0", Offset = "0x139A2C0", VA = "0x139A2C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x139A3BC", Offset = "0x139A3BC", VA = "0x139A3BC")]
	public UserReportingXRExtensions()
	{
	}
}
[Token(Token = "0x2000125")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x2000126")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x2290464", Offset = "0x2290464", VA = "0x2290464", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x22905D0", Offset = "0x22905D0", VA = "0x22905D0", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x22906AC", Offset = "0x22906AC", VA = "0x22906AC")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_ID;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string APP_KEY;

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x139D848", Offset = "0x139D848", VA = "0x139D848")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x139D920", Offset = "0x139D920", VA = "0x139D920")]
	private void Start()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x139DA04", Offset = "0x139DA04", VA = "0x139DA04")]
	private void Update()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x139DA08", Offset = "0x139DA08", VA = "0x139DA08")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x13A0848", Offset = "0x13A0848", VA = "0x13A0848")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x13A09B8", Offset = "0x13A09B8", VA = "0x13A09B8")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x13A0B1C", Offset = "0x13A0B1C", VA = "0x13A0B1C")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x13A0C74", Offset = "0x13A0C74", VA = "0x13A0C74")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x13A0D6C", Offset = "0x13A0D6C", VA = "0x13A0D6C")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x13A0EC4", Offset = "0x13A0EC4", VA = "0x13A0EC4")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x13A0FCC", Offset = "0x13A0FCC", VA = "0x13A0FCC")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x13A1130", Offset = "0x13A1130", VA = "0x13A1130")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x13A1274", Offset = "0x13A1274", VA = "0x13A1274")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x13A1374", Offset = "0x13A1374", VA = "0x13A1374")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x13A1474", Offset = "0x13A1474", VA = "0x13A1474")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x13A1574", Offset = "0x13A1574", VA = "0x13A1574")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x13A1674", Offset = "0x13A1674", VA = "0x13A1674")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x2000127")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x2932670", Offset = "0x2932670", VA = "0x2932670")]
	private void Start()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x2932758", Offset = "0x2932758", VA = "0x2932758")]
	private void Update()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x293275C", Offset = "0x293275C", VA = "0x293275C")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x2932870", Offset = "0x2932870", VA = "0x2932870")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x2000128")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x29328E8", Offset = "0x29328E8", VA = "0x29328E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x29329CC", Offset = "0x29329CC", VA = "0x29329CC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x2932E1C", Offset = "0x2932E1C", VA = "0x2932E1C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x2932E20", Offset = "0x2932E20", VA = "0x2932E20")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x2932E24", Offset = "0x2932E24", VA = "0x2932E24")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x2932E28", Offset = "0x2932E28", VA = "0x2932E28")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x2000129")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x200012A")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x200012B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C0C4", Offset = "0x109C0C4")]
		private sealed class <>c
		{
			[Token(Token = "0x400066C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400066D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6000696")]
			[Address(RVA = "0x2294278", Offset = "0x2294278", VA = "0x2294278")]
			public <>c()
			{
			}

			[Token(Token = "0x6000697")]
			[Address(RVA = "0x2294280", Offset = "0x2294280", VA = "0x2294280")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x200012C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C0D4", Offset = "0x109C0D4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400066E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x400066F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6000698")]
			[Address(RVA = "0x2290B5C", Offset = "0x2290B5C", VA = "0x2290B5C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000699")]
			[Address(RVA = "0x22942F4", Offset = "0x22942F4", VA = "0x22942F4")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x2290910", Offset = "0x2290910", VA = "0x2290910", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x2290A4C", Offset = "0x2290A4C", VA = "0x2290A4C", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x2290B64", Offset = "0x2290B64", VA = "0x2290B64")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x200012D")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x200012E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C0E4", Offset = "0x109C0E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x600069E")]
			[Address(RVA = "0x2294414", Offset = "0x2294414", VA = "0x2294414")]
			public <>c()
			{
			}

			[Token(Token = "0x600069F")]
			[Address(RVA = "0x229441C", Offset = "0x229441C", VA = "0x229441C")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x200012F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C0F4", Offset = "0x109C0F4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4000673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x60006A0")]
			[Address(RVA = "0x2290DB8", Offset = "0x2290DB8", VA = "0x2290DB8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60006A1")]
			[Address(RVA = "0x2294490", Offset = "0x2294490", VA = "0x2294490")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x2290B6C", Offset = "0x2290B6C", VA = "0x2290B6C", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x2290CA8", Offset = "0x2290CA8", VA = "0x2290CA8", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x2290DC0", Offset = "0x2290DC0", VA = "0x2290DC0")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000130")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x2000131")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C104", Offset = "0x109C104")]
		private sealed class <>c
		{
			[Token(Token = "0x4000674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x60006A6")]
			[Address(RVA = "0x22940DC", Offset = "0x22940DC", VA = "0x22940DC")]
			public <>c()
			{
			}

			[Token(Token = "0x60006A7")]
			[Address(RVA = "0x22940E4", Offset = "0x22940E4", VA = "0x22940E4")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000132")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C114", Offset = "0x109C114")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4000677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x60006A8")]
			[Address(RVA = "0x2290900", Offset = "0x2290900", VA = "0x2290900")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60006A9")]
			[Address(RVA = "0x2294158", Offset = "0x2294158", VA = "0x2294158")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x22906B4", Offset = "0x22906B4", VA = "0x22906B4", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x22907F0", Offset = "0x22907F0", VA = "0x22907F0", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x2290908", Offset = "0x2290908", VA = "0x2290908")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LaunchData;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string LaunchBranchName;

	[Token(Token = "0x400066A")]
	private const int SUCCESS = 0;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x2932EB4", Offset = "0x2932EB4", VA = "0x2932EB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x2932FB0", Offset = "0x2932FB0", VA = "0x2932FB0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x2933060", Offset = "0x2933060", VA = "0x2933060")]
	private void Start()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x2933144", Offset = "0x2933144", VA = "0x2933144")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x29331E8", Offset = "0x29331E8", VA = "0x29331E8")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x29332F4", Offset = "0x29332F4", VA = "0x29332F4")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x29333F0", Offset = "0x29333F0", VA = "0x29333F0")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x29333F4", Offset = "0x29333F4", VA = "0x29333F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x293369C", Offset = "0x293369C", VA = "0x293369C")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x2000133")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x2000134")]
	public class Item
	{
		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x2290DC8", Offset = "0x2290DC8", VA = "0x2290DC8")]
		public Item()
		{
		}
	}

	[Token(Token = "0x2000135")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x2290E48", Offset = "0x2290E48", VA = "0x2290E48", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x2290F14", Offset = "0x2290F14", VA = "0x2290F14", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x2290FEC", Offset = "0x2290FEC", VA = "0x2290FEC", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x22910F0", Offset = "0x22910F0", VA = "0x22910F0", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x22911A0", Offset = "0x22911A0", VA = "0x22911A0", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x2291998", Offset = "0x2291998", VA = "0x2291998", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x2291A28", Offset = "0x2291A28", VA = "0x2291A28", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x2291B00", Offset = "0x2291B00", VA = "0x2291B00", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x2291BD8", Offset = "0x2291BD8", VA = "0x2291BD8", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x2291CDC", Offset = "0x2291CDC", VA = "0x2291CDC", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x2292190", Offset = "0x2292190", VA = "0x2292190", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x2292644", Offset = "0x2292644", VA = "0x2292644", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x22926EC", Offset = "0x22926EC", VA = "0x22926EC", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x22927B8", Offset = "0x22927B8", VA = "0x22927B8")]
		public Result()
		{
		}
	}

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool bInit_Done;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool bIsReady_Done;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool bShutdown_Done;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text winText;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x29337EC", Offset = "0x29337EC", VA = "0x29337EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x2933A08", Offset = "0x2933A08", VA = "0x2933A08")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x2933A0C", Offset = "0x2933A0C", VA = "0x2933A0C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x2934834", Offset = "0x2934834", VA = "0x2934834")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x293491C", Offset = "0x293491C", VA = "0x293491C")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x2934A0C", Offset = "0x2934A0C", VA = "0x2934A0C")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x2000136")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x2000137")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x2292824", Offset = "0x2292824", VA = "0x2292824", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x22928CC", Offset = "0x22928CC", VA = "0x22928CC")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x2000138")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x2000139")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C124", Offset = "0x109C124")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400068C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x22929C8", Offset = "0x22929C8", VA = "0x22929C8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x229454C", Offset = "0x229454C", VA = "0x229454C")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x22928D4", Offset = "0x22928D4", VA = "0x22928D4", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x22929D0", Offset = "0x22929D0", VA = "0x22929D0")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x200013A")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x200013B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C134", Offset = "0x109C134")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400068D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400068E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400068F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pchCurrencyName;

			[Token(Token = "0x170000EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60006D0")]
				[Address(RVA = "0x22946E4", Offset = "0x22946E4", VA = "0x22946E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006D2")]
				[Address(RVA = "0x229472C", Offset = "0x229472C", VA = "0x229472C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x2292AD4", Offset = "0x2292AD4", VA = "0x2292AD4")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x22945F4", Offset = "0x22945F4", VA = "0x22945F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006CF")]
			[Address(RVA = "0x22945F8", Offset = "0x22945F8", VA = "0x22945F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006D1")]
			[Address(RVA = "0x22946EC", Offset = "0x22946EC", VA = "0x22946EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x22929D8", Offset = "0x22929D8", VA = "0x22929D8", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x2292A5C", Offset = "0x2292A5C", VA = "0x2292A5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A62D4", Offset = "0x10A62D4")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x2292B00", Offset = "0x2292B00", VA = "0x2292B00")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiText;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string appId;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string apiKey;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x2934AD4", Offset = "0x2934AD4", VA = "0x2934AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x2934BD8", Offset = "0x2934BD8", VA = "0x2934BD8")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x2934C80", Offset = "0x2934C80", VA = "0x2934C80")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x200013C")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_ID;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInit;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x2934D14", Offset = "0x2934D14", VA = "0x2934D14")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x2934DF8", Offset = "0x2934DF8", VA = "0x2934DF8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x293571C", Offset = "0x293571C", VA = "0x293571C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x293587C", Offset = "0x293587C", VA = "0x293587C")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x2935880", Offset = "0x2935880", VA = "0x2935880")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x29359D4", Offset = "0x29359D4", VA = "0x29359D4")]
	public ViveportDemo_Subscription()
	{
	}
}
[Token(Token = "0x200013D")]
public class ViveportPreviewDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool bIsReady;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	private static bool isDLCAvailable;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int dlcCount;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int dlcIndex;

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x2935A6C", Offset = "0x2935A6C", VA = "0x2935A6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x2935B50", Offset = "0x2935B50", VA = "0x2935B50")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x2935FA0", Offset = "0x2935FA0", VA = "0x2935FA0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x2936100", Offset = "0x2936100", VA = "0x2936100")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x2936240", Offset = "0x2936240", VA = "0x2936240")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x2936374", Offset = "0x2936374", VA = "0x2936374")]
	public ViveportPreviewDemo_DLC()
	{
	}
}
[Token(Token = "0x200013E")]
public class ViveportPreviewDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x200013F")]
	public class Item
	{
		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x2292B08", Offset = "0x2292B08", VA = "0x2292B08")]
		public Item()
		{
		}
	}

	[Token(Token = "0x2000140")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x2292B88", Offset = "0x2292B88", VA = "0x2292B88", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x2292C18", Offset = "0x2292C18", VA = "0x2292C18", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x2292CF0", Offset = "0x2292CF0", VA = "0x2292CF0", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x2292DF4", Offset = "0x2292DF4", VA = "0x2292DF4", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x2292EA4", Offset = "0x2292EA4", VA = "0x2292EA4", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x2292F34", Offset = "0x2292F34", VA = "0x2292F34", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x229300C", Offset = "0x229300C", VA = "0x229300C", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x22930E4", Offset = "0x22930E4", VA = "0x22930E4", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x22931E8", Offset = "0x22931E8", VA = "0x22931E8", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x229369C", Offset = "0x229369C", VA = "0x229369C", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x2293744", Offset = "0x2293744", VA = "0x2293744", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x2293810", Offset = "0x2293810", VA = "0x2293810")]
		public Result()
		{
		}
	}

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x293641C", Offset = "0x293641C", VA = "0x293641C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x293653C", Offset = "0x293653C", VA = "0x293653C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x2936540", Offset = "0x2936540", VA = "0x2936540")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x29371C4", Offset = "0x29371C4", VA = "0x29371C4")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x2937268", Offset = "0x2937268", VA = "0x2937268")]
	public ViveportPreviewDemo_IAP()
	{
	}
}
[Token(Token = "0x2000141")]
public class ViveportPreviewDemo_UserStats : MonoBehaviour
{
	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x2937318", Offset = "0x2937318", VA = "0x2937318")]
	public ViveportPreviewDemo_UserStats()
	{
	}
}
[Token(Token = "0x2000142")]
public class ViveportPreviewDemo_ViveportArcadeSession : MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x2937320", Offset = "0x2937320", VA = "0x2937320")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x2937404", Offset = "0x2937404", VA = "0x2937404")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x2937408", Offset = "0x2937408", VA = "0x2937408")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x29374AC", Offset = "0x29374AC", VA = "0x29374AC")]
	public ViveportPreviewDemo_ViveportArcadeSession()
	{
	}
}
[Token(Token = "0x2000143")]
public class ViveportSampleDRM : MonoBehaviour
{
	[Token(Token = "0x2000144")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x2000145")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C144", Offset = "0x109C144")]
		private sealed class <SuccessAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170000F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600070A")]
				[Address(RVA = "0x229484C", Offset = "0x229484C", VA = "0x229484C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600070C")]
				[Address(RVA = "0x2294894", Offset = "0x2294894", VA = "0x2294894", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000707")]
			[Address(RVA = "0x2293BA4", Offset = "0x2293BA4", VA = "0x2293BA4")]
			[DebuggerHidden]
			public <SuccessAction>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000708")]
			[Address(RVA = "0x22947EC", Offset = "0x22947EC", VA = "0x22947EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000709")]
			[Address(RVA = "0x22947F0", Offset = "0x22947F0", VA = "0x22947F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600070B")]
			[Address(RVA = "0x2294854", Offset = "0x2294854", VA = "0x2294854", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000146")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C154", Offset = "0x109C154")]
		private sealed class <FailAction>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170000F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000710")]
				[Address(RVA = "0x229479C", Offset = "0x229479C", VA = "0x229479C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000712")]
				[Address(RVA = "0x22947E4", Offset = "0x22947E4", VA = "0x22947E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600070D")]
			[Address(RVA = "0x2293BD0", Offset = "0x2293BD0", VA = "0x2293BD0")]
			[DebuggerHidden]
			public <FailAction>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600070E")]
			[Address(RVA = "0x2294734", Offset = "0x2294734", VA = "0x2294734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600070F")]
			[Address(RVA = "0x2294738", Offset = "0x2294738", VA = "0x2294738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000711")]
			[Address(RVA = "0x22947A4", Offset = "0x22947A4", VA = "0x22947A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x229387C", Offset = "0x229387C", VA = "0x229387C", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x2293A28", Offset = "0x2293A28", VA = "0x2293A28", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x22939CC", Offset = "0x22939CC", VA = "0x22939CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A6384", Offset = "0x10A6384")]
		private IEnumerator SuccessAction()
		{
			return null;
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x2293B48", Offset = "0x2293B48", VA = "0x2293B48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A63E4", Offset = "0x10A63E4")]
		private IEnumerator FailAction()
		{
			return null;
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x2293BFC", Offset = "0x2293BFC", VA = "0x2293BFC")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x40006B4")]
	private const int SUCCESS = 0;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x2937524", Offset = "0x2937524", VA = "0x2937524")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x29375E0", Offset = "0x29375E0", VA = "0x29375E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x29376F8", Offset = "0x29376F8", VA = "0x29376F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x293779C", Offset = "0x293779C", VA = "0x293779C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x293791C", Offset = "0x293791C", VA = "0x293791C")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x293792C", Offset = "0x293792C", VA = "0x293792C")]
	private void CheckInitStatus()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x2937A1C", Offset = "0x2937A1C", VA = "0x2937A1C")]
	public ViveportSampleDRM()
	{
	}
}
[Token(Token = "0x2000147")]
public class YVRManager : MonoBehaviour
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long appID;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x29397A8", Offset = "0x29397A8", VA = "0x29397A8")]
	public YVRManager()
	{
	}
}
[Token(Token = "0x2000148")]
public class VersionNumberToText : MonoBehaviour
{
	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI textMesh;

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x139D0DC", Offset = "0x139D0DC", VA = "0x139D0DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x139D158", Offset = "0x139D158", VA = "0x139D158")]
	public VersionNumberToText()
	{
	}
}
[Token(Token = "0x2000149")]
public class VarietySceneSelect : MonoBehaviour
{
	[Token(Token = "0x6000716")]
	[Address(RVA = "0x139CB44", Offset = "0x139CB44", VA = "0x139CB44")]
	public void LoadSceneDemo1()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x139CBB8", Offset = "0x139CBB8", VA = "0x139CBB8")]
	public void LoadSceneDemo2()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x139CC2C", Offset = "0x139CC2C", VA = "0x139CC2C")]
	public void LoadSceneDemo3()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x139CCA0", Offset = "0x139CCA0", VA = "0x139CCA0")]
	public void LoadSceneDemo4()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x139CD14", Offset = "0x139CD14", VA = "0x139CD14")]
	public void LoadSceneDemo5()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x139CD88", Offset = "0x139CD88", VA = "0x139CD88")]
	public void LoadSceneDemo6()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x139CDFC", Offset = "0x139CDFC", VA = "0x139CDFC")]
	public void LoadSceneDemo7()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x139CE70", Offset = "0x139CE70", VA = "0x139CE70")]
	public void LoadSceneDemo8()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x139CEE4", Offset = "0x139CEE4", VA = "0x139CEE4")]
	public void LoadSceneDemo9()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x139CF58", Offset = "0x139CF58", VA = "0x139CF58")]
	public void LoadSceneDemo10()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x139CFCC", Offset = "0x139CFCC", VA = "0x139CFCC")]
	public void LoadSceneDemo11()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x139D040", Offset = "0x139D040", VA = "0x139D040")]
	public VarietySceneSelect()
	{
	}
}
[Token(Token = "0x200014A")]
public class FlickerLight : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MinLightIntensity;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MaxLightIntensity;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AccelerateTime;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _targetIntensity;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _lastIntensity;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _timePassed;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light _lt;

	[Token(Token = "0x40006C3")]
	private const double Tolerance = 0.0001;

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x17734B0", Offset = "0x17734B0", VA = "0x17734B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x177352C", Offset = "0x177352C", VA = "0x177352C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x17735EC", Offset = "0x17735EC", VA = "0x17735EC")]
	public FlickerLight()
	{
	}
}
[Token(Token = "0x200014B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x109C164", Offset = "0x109C164")]
public class UVOffset : MonoBehaviour
{
	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool scrollY;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer renderer;

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x138EAD8", Offset = "0x138EAD8", VA = "0x138EAD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x138EB34", Offset = "0x138EB34", VA = "0x138EB34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x138EBC8", Offset = "0x138EBC8", VA = "0x138EBC8")]
	public UVOffset()
	{
	}
}
namespace DistantLands
{
	[Token(Token = "0x200014C")]
	public class Fish : MonoBehaviour
	{
		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float speed;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float averageSpeed;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 averageHeading;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 averagePosition;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float neighborDistance;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int performance;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public GlobalFlock flock;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool turning;

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1771764", Offset = "0x1771764", VA = "0x1771764")]
		private void Start()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x177179C", Offset = "0x177179C", VA = "0x177179C")]
		private void Update()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x17719C4", Offset = "0x17719C4", VA = "0x17719C4")]
		private void ApplyTankBoundary()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1771AAC", Offset = "0x1771AAC", VA = "0x1771AAC")]
		private void ApplyRules()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x1771A70", Offset = "0x1771A70", VA = "0x1771A70")]
		private float TurnSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x1771FD8", Offset = "0x1771FD8", VA = "0x1771FD8")]
		public Fish()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class GlobalFlock : MonoBehaviour
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] fishPrefabs;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject fishSchool;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float wanderSize;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject target;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int numFish;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public List<GameObject> allFish;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 goalPos;

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1774AA0", Offset = "0x1774AA0", VA = "0x1774AA0")]
		private void Start()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x1774D30", Offset = "0x1774D30", VA = "0x1774D30")]
		private void Update()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x1774D34", Offset = "0x1774D34", VA = "0x1774D34")]
		private void HandleGoalPos()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1774E04", Offset = "0x1774E04", VA = "0x1774E04")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1774E54", Offset = "0x1774E54", VA = "0x1774E54")]
		public GlobalFlock()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class MoveFishSchool : MonoBehaviour
	{
		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float moveRange;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveSpeed;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 positionChangeSpeed;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _time;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _originalPos;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _newPos;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform target;

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1C34A08", Offset = "0x1C34A08", VA = "0x1C34A08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1C34A6C", Offset = "0x1C34A6C", VA = "0x1C34A6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x1C34B8C", Offset = "0x1C34B8C", VA = "0x1C34B8C")]
		public MoveFishSchool()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class WaypointSystem : MonoBehaviour
	{
		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform objectToMove;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float moveSpeed;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float turnSpeed;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform target;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int progress;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Transform> waypoints;

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x2938864", Offset = "0x2938864", VA = "0x2938864")]
		private void Start()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x2938964", Offset = "0x2938964", VA = "0x2938964")]
		private void Update()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x2938B70", Offset = "0x2938B70", VA = "0x2938B70")]
		public void NextPoint()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x2938C14", Offset = "0x2938C14", VA = "0x2938C14")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x2938DE0", Offset = "0x2938DE0", VA = "0x2938DE0")]
		public WaypointSystem()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000150")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1E411F0", Offset = "0x1E411F0", VA = "0x1E411F0")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1E4126C", Offset = "0x1E4126C", VA = "0x1E4126C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1E41804", Offset = "0x1E41804", VA = "0x1E41804")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1E41920", Offset = "0x1E41920", VA = "0x1E41920")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000151")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000152")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C1C4", Offset = "0x109C1C4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40006E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x40006E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x6000752")]
			[Address(RVA = "0x29453FC", Offset = "0x29453FC", VA = "0x29453FC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000753")]
			[Address(RVA = "0x2945404", Offset = "0x2945404", VA = "0x2945404")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000153")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C1D4", Offset = "0x109C1D4")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x170000F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000757")]
				[Address(RVA = "0x29454C8", Offset = "0x29454C8", VA = "0x29454C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000759")]
				[Address(RVA = "0x2945510", Offset = "0x2945510", VA = "0x2945510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000754")]
			[Address(RVA = "0x2945428", Offset = "0x2945428", VA = "0x2945428")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000755")]
			[Address(RVA = "0x2945454", Offset = "0x2945454", VA = "0x2945454", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000756")]
			[Address(RVA = "0x2945458", Offset = "0x2945458", VA = "0x2945458", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000758")]
			[Address(RVA = "0x29454D0", Offset = "0x29454D0", VA = "0x29454D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C1E4", Offset = "0x109C1E4")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40006EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40006ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x40006EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x170000F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600075D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600075F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600075A")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600075B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600075C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600075E")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000155")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C1F4", Offset = "0x109C1F4")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40006F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40006F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x40006F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40006F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x170000F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000763")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000765")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000760")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000761")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000762")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000764")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000156")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C204", Offset = "0x109C204")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40006F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40006F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x40006F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40006F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x40006F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x170000FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000769")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600076B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000766")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000767")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000768")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600076A")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000157")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C214", Offset = "0x109C214")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40006FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40006FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x40006FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40006FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x40006FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4000700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x170000FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600076F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000771")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600076C")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600076D")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600076E")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000770")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1C3290C", Offset = "0x1C3290C", VA = "0x1C3290C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1C32A30", Offset = "0x1C32A30", VA = "0x1C32A30")]
		public void Update()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1C32BF0", Offset = "0x1C32BF0", VA = "0x1C32BF0")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1C32D04", Offset = "0x1C32D04", VA = "0x1C32D04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1C32D6C", Offset = "0x1C32D6C", VA = "0x1C32D6C")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1C32F60", Offset = "0x1C32F60", VA = "0x1C32F60")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6000747")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6000748")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6000749")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x600074A")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1C32F88", Offset = "0x1C32F88", VA = "0x1C32F88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A64E4", Offset = "0x10A64E4")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x600074C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A6544", Offset = "0x10A6544")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x600074D")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A65A4", Offset = "0x10A65A4")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x600074E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A6604", Offset = "0x10A6604")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x600074F")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A6664", Offset = "0x10A6664")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1C33000", Offset = "0x1C33000", VA = "0x1C33000")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public enum Locale
	{
		[Token(Token = "0x4000702")]
		US,
		[Token(Token = "0x4000703")]
		DE,
		[Token(Token = "0x4000704")]
		JP,
		[Token(Token = "0x4000705")]
		KR,
		[Token(Token = "0x4000706")]
		RU,
		[Token(Token = "0x4000707")]
		CN,
		[Token(Token = "0x4000708")]
		TW,
		[Token(Token = "0x4000709")]
		FR
	}
	[Token(Token = "0x2000159")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x200015A")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200015B")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x200015C")]
	public class Leaderboard
	{
		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2C5C", Offset = "0x10A2C5C")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2C6C", Offset = "0x10A2C6C")]
		private int <Score>k__BackingField;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2C7C", Offset = "0x10A2C7C")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x170000FF")]
		public int Rank
		{
			[Token(Token = "0x600077E")]
			[Address(RVA = "0x1C2C944", Offset = "0x1C2C944", VA = "0x1C2C944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6854", Offset = "0x10A6854")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600077F")]
			[Address(RVA = "0x1C2C94C", Offset = "0x1C2C94C", VA = "0x1C2C94C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6864", Offset = "0x10A6864")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public int Score
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0x1C2C954", Offset = "0x1C2C954", VA = "0x1C2C954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6874", Offset = "0x10A6874")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x1C2C95C", Offset = "0x1C2C95C", VA = "0x1C2C95C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6884", Offset = "0x10A6884")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public string UserName
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0x1C2C964", Offset = "0x1C2C964", VA = "0x1C2C964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A6894", Offset = "0x10A6894")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x1C2C96C", Offset = "0x1C2C96C", VA = "0x1C2C96C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A68A4", Offset = "0x10A68A4")]
			set
			{
			}
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x1C2C974", Offset = "0x1C2C974", VA = "0x1C2C974")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x200015E")]
		public enum Platform
		{
			[Token(Token = "0x4000710")]
			Windows,
			[Token(Token = "0x4000711")]
			Android
		}

		[Token(Token = "0x200015F")]
		public enum TransactionType
		{
			[Token(Token = "0x4000713")]
			Unknown,
			[Token(Token = "0x4000714")]
			Paid,
			[Token(Token = "0x4000715")]
			Redeem,
			[Token(Token = "0x4000716")]
			FreeTrial
		}

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2C8C", Offset = "0x10A2C8C")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2C9C", Offset = "0x10A2C9C")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x17000102")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0x18CC4F4", Offset = "0x18CC4F4", VA = "0x18CC4F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A68B4", Offset = "0x10A68B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000786")]
			[Address(RVA = "0x18CC4FC", Offset = "0x18CC4FC", VA = "0x18CC4FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A68C4", Offset = "0x10A68C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public TransactionType Type
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x18CC504", Offset = "0x18CC504", VA = "0x18CC504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A68D4", Offset = "0x10A68D4")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x6000788")]
			[Address(RVA = "0x18CC50C", Offset = "0x18CC50C", VA = "0x18CC50C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A68E4", Offset = "0x10A68E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x18CC048", Offset = "0x18CC048", VA = "0x18CC048")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class Api
	{
		[Token(Token = "0x2000161")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6000792")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6000793")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6000794")]
			[Address(RVA = "0x293A2A8", Offset = "0x293A2A8", VA = "0x293A2A8")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x193BF18", Offset = "0x193BF18", VA = "0x193BF18")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x193BE28", Offset = "0x193BE28", VA = "0x193BE28")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A68F4", Offset = "0x10A68F4")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x193C1E8", Offset = "0x193C1E8", VA = "0x193C1E8")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x193BEA0", Offset = "0x193BEA0", VA = "0x193BEA0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6954", Offset = "0x10A6954")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x193C530", Offset = "0x193C530", VA = "0x193C530")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x193C7E0", Offset = "0x193C7E0", VA = "0x193C7E0")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x193C9A4", Offset = "0x193C9A4", VA = "0x193C9A4")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class User
	{
		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x1394D70", Offset = "0x1394D70", VA = "0x1394D70")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A69B4", Offset = "0x10A69B4")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1394DD0", Offset = "0x1394DD0", VA = "0x1394DD0")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x13950D8", Offset = "0x13950D8", VA = "0x13950D8")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x13951FC", Offset = "0x13951FC", VA = "0x13951FC")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x1395320", Offset = "0x1395320", VA = "0x1395320")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x1395444", Offset = "0x1395444", VA = "0x1395444")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class UserStats
	{
		[Token(Token = "0x2000164")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4000729")]
			GlobalData,
			[Token(Token = "0x400072A")]
			GlobalDataAroundUser,
			[Token(Token = "0x400072B")]
			LocalData,
			[Token(Token = "0x400072C")]
			LocalDataAroundUser
		}

		[Token(Token = "0x2000165")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x400072E")]
			AllTime,
			[Token(Token = "0x400072F")]
			Daily,
			[Token(Token = "0x4000730")]
			Weekly,
			[Token(Token = "0x4000731")]
			Monthly
		}

		[Token(Token = "0x2000166")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4000733")]
			None,
			[Token(Token = "0x4000734")]
			Ascending,
			[Token(Token = "0x4000735")]
			Descending
		}

		[Token(Token = "0x2000167")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4000737")]
			None,
			[Token(Token = "0x4000738")]
			Numeric,
			[Token(Token = "0x4000739")]
			TimeSeconds,
			[Token(Token = "0x400073A")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000168")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x400073C")]
			None,
			[Token(Token = "0x400073D")]
			KeepBest,
			[Token(Token = "0x400073E")]
			ForceUpdate
		}

		[Token(Token = "0x2000169")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4000740")]
			Name,
			[Token(Token = "0x4000741")]
			Desc,
			[Token(Token = "0x4000742")]
			Hidden
		}

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x139A3C4", Offset = "0x139A3C4", VA = "0x139A3C4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6A14", Offset = "0x10A6A14")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x139A5A4", Offset = "0x139A5A4", VA = "0x139A5A4")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x139A424", Offset = "0x139A424", VA = "0x139A424")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6A74", Offset = "0x10A6A74")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x139A8AC", Offset = "0x139A8AC", VA = "0x139A8AC")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x139ABB4", Offset = "0x139ABB4", VA = "0x139ABB4")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x139AD1C", Offset = "0x139AD1C", VA = "0x139AD1C")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x139AE8C", Offset = "0x139AE8C", VA = "0x139AE8C")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x139AFF4", Offset = "0x139AFF4", VA = "0x139AFF4")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x139A484", Offset = "0x139A484", VA = "0x139A484")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6AD4", Offset = "0x10A6AD4")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x139B164", Offset = "0x139B164", VA = "0x139B164")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x139B46C", Offset = "0x139B46C", VA = "0x139B46C")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x139B568", Offset = "0x139B568", VA = "0x139B568")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x139B664", Offset = "0x139B664", VA = "0x139B664")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x139B760", Offset = "0x139B760", VA = "0x139B760")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x139B8C8", Offset = "0x139B8C8", VA = "0x139B8C8")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x139BA7C", Offset = "0x139BA7C", VA = "0x139BA7C")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x139BB78", Offset = "0x139BB78", VA = "0x139BB78")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x139A4E4", Offset = "0x139A4E4", VA = "0x139A4E4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6B34", Offset = "0x10A6B34")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x139BC74", Offset = "0x139BC74", VA = "0x139BC74")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x139A544", Offset = "0x139A544", VA = "0x139A544")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6B94", Offset = "0x10A6B94")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x139C15C", Offset = "0x139C15C", VA = "0x139C15C")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x139C528", Offset = "0x139C528", VA = "0x139C528")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x139C7EC", Offset = "0x139C7EC", VA = "0x139C7EC")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x139C904", Offset = "0x139C904", VA = "0x139C904")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x139CA1C", Offset = "0x139CA1C", VA = "0x139CA1C")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x139CB34", Offset = "0x139CB34", VA = "0x139CB34")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x193D6F8", Offset = "0x193D6F8", VA = "0x193D6F8")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class IAPurchase
	{
		[Token(Token = "0x200016C")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4000750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x60007D1")]
			[Address(RVA = "0x293CDB8", Offset = "0x293CDB8", VA = "0x293CDB8")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x293CE24", Offset = "0x293CE24", VA = "0x293CE24")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x293CE94", Offset = "0x293CE94", VA = "0x293CE94", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x293D3B0", Offset = "0x293D3B0", VA = "0x293D3B0")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x293D420", Offset = "0x293D420", VA = "0x293D420", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007D6")]
			[Address(RVA = "0x293D93C", Offset = "0x293D93C", VA = "0x293D93C")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x293D9AC", Offset = "0x293D9AC", VA = "0x293D9AC", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x293DF58", Offset = "0x293DF58", VA = "0x293DF58")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x293DFC8", Offset = "0x293DFC8", VA = "0x293DFC8", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x293EAA8", Offset = "0x293EAA8", VA = "0x293EAA8")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x293EB18", Offset = "0x293EB18", VA = "0x293EB18", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x293FB28", Offset = "0x293FB28", VA = "0x293FB28")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x293FB98", Offset = "0x293FB98", VA = "0x293FB98", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x2940150", Offset = "0x2940150", VA = "0x2940150")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x29401C0", Offset = "0x29401C0", VA = "0x29401C0", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x29406D0", Offset = "0x29406D0", VA = "0x29406D0")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x2940740", Offset = "0x2940740", VA = "0x2940740", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x2940C50", Offset = "0x2940C50", VA = "0x2940C50")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x2940CC0", Offset = "0x2940CC0", VA = "0x2940CC0", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x2941448", Offset = "0x2941448", VA = "0x2941448")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x29414B8", Offset = "0x29414B8", VA = "0x29414B8", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007E6")]
			[Address(RVA = "0x29419E8", Offset = "0x29419E8", VA = "0x29419E8")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x2941A58", Offset = "0x2941A58", VA = "0x2941A58", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x2941F88", Offset = "0x2941F88", VA = "0x2941F88")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x2941FF8", Offset = "0x2941FF8", VA = "0x2941FF8", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x200016D")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x60007EA")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x60007EB")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x60007EC")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x60007ED")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x60007EE")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x60007EF")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x60007F0")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x60007F1")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x60007F2")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x60007F3")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x60007F4")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x60007F5")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x293CDB0", Offset = "0x293CDB0", VA = "0x293CDB0")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x200016E")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x29423E8", Offset = "0x29423E8", VA = "0x29423E8", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x60007F8")]
			[Address(RVA = "0x29423EC", Offset = "0x29423EC", VA = "0x29423EC", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60007F9")]
			[Address(RVA = "0x29423F0", Offset = "0x29423F0", VA = "0x29423F0", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60007FA")]
			[Address(RVA = "0x29423F4", Offset = "0x29423F4", VA = "0x29423F4", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x29423F8", Offset = "0x29423F8", VA = "0x29423F8", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x29423FC", Offset = "0x29423FC", VA = "0x29423FC", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x2942400", Offset = "0x2942400", VA = "0x2942400", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x60007FE")]
			[Address(RVA = "0x2942404", Offset = "0x2942404", VA = "0x2942404", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x2942408", Offset = "0x2942408", VA = "0x2942408", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000800")]
			[Address(RVA = "0x294240C", Offset = "0x294240C", VA = "0x294240C", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000801")]
			[Address(RVA = "0x2942410", Offset = "0x2942410", VA = "0x2942410", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6000802")]
			[Address(RVA = "0x2942414", Offset = "0x2942414", VA = "0x2942414", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6000803")]
			[Address(RVA = "0x2942418", Offset = "0x2942418", VA = "0x2942418", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x6000804")]
			[Address(RVA = "0x294241C", Offset = "0x294241C", VA = "0x294241C")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x200016F")]
		public class QueryResponse
		{
			[Token(Token = "0x4000751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2CAC", Offset = "0x10A2CAC")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4000752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2CBC", Offset = "0x10A2CBC")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4000753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2CCC", Offset = "0x10A2CCC")]
			private string <status>k__BackingField;

			[Token(Token = "0x4000754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2CDC", Offset = "0x10A2CDC")]
			private string <price>k__BackingField;

			[Token(Token = "0x4000755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2CEC", Offset = "0x10A2CEC")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4000756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2CFC", Offset = "0x10A2CFC")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000104")]
			public string order_id
			{
				[Token(Token = "0x6000805")]
				[Address(RVA = "0x2942454", Offset = "0x2942454", VA = "0x2942454")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A70D4", Offset = "0x10A70D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000806")]
				[Address(RVA = "0x294245C", Offset = "0x294245C", VA = "0x294245C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A70E4", Offset = "0x10A70E4")]
				set
				{
				}
			}

			[Token(Token = "0x17000105")]
			public string purchase_id
			{
				[Token(Token = "0x6000807")]
				[Address(RVA = "0x2942464", Offset = "0x2942464", VA = "0x2942464")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A70F4", Offset = "0x10A70F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000808")]
				[Address(RVA = "0x294246C", Offset = "0x294246C", VA = "0x294246C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7104", Offset = "0x10A7104")]
				set
				{
				}
			}

			[Token(Token = "0x17000106")]
			public string status
			{
				[Token(Token = "0x6000809")]
				[Address(RVA = "0x2942474", Offset = "0x2942474", VA = "0x2942474")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7114", Offset = "0x10A7114")]
				get
				{
					return null;
				}
				[Token(Token = "0x600080A")]
				[Address(RVA = "0x294247C", Offset = "0x294247C", VA = "0x294247C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7124", Offset = "0x10A7124")]
				set
				{
				}
			}

			[Token(Token = "0x17000107")]
			public string price
			{
				[Token(Token = "0x600080B")]
				[Address(RVA = "0x2942484", Offset = "0x2942484", VA = "0x2942484")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7134", Offset = "0x10A7134")]
				get
				{
					return null;
				}
				[Token(Token = "0x600080C")]
				[Address(RVA = "0x294248C", Offset = "0x294248C", VA = "0x294248C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7144", Offset = "0x10A7144")]
				set
				{
				}
			}

			[Token(Token = "0x17000108")]
			public string currency
			{
				[Token(Token = "0x600080D")]
				[Address(RVA = "0x2942494", Offset = "0x2942494", VA = "0x2942494")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7154", Offset = "0x10A7154")]
				get
				{
					return null;
				}
				[Token(Token = "0x600080E")]
				[Address(RVA = "0x294249C", Offset = "0x294249C", VA = "0x294249C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7164", Offset = "0x10A7164")]
				set
				{
				}
			}

			[Token(Token = "0x17000109")]
			public long paid_timestamp
			{
				[Token(Token = "0x600080F")]
				[Address(RVA = "0x29424A4", Offset = "0x29424A4", VA = "0x29424A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7174", Offset = "0x10A7174")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000810")]
				[Address(RVA = "0x29424AC", Offset = "0x29424AC", VA = "0x29424AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7184", Offset = "0x10A7184")]
				set
				{
				}
			}

			[Token(Token = "0x6000811")]
			[Address(RVA = "0x293EAA0", Offset = "0x293EAA0", VA = "0x293EAA0")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x2000170")]
		public class QueryResponse2
		{
			[Token(Token = "0x4000757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D0C", Offset = "0x10A2D0C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4000758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D1C", Offset = "0x10A2D1C")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4000759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D2C", Offset = "0x10A2D2C")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x400075A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D3C", Offset = "0x10A2D3C")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x400075B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D4C", Offset = "0x10A2D4C")]
			private string <price>k__BackingField;

			[Token(Token = "0x400075C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D5C", Offset = "0x10A2D5C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x400075D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D6C", Offset = "0x10A2D6C")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x1700010A")]
			public string order_id
			{
				[Token(Token = "0x6000812")]
				[Address(RVA = "0x29424B4", Offset = "0x29424B4", VA = "0x29424B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7194", Offset = "0x10A7194")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000813")]
				[Address(RVA = "0x29424BC", Offset = "0x29424BC", VA = "0x29424BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A71A4", Offset = "0x10A71A4")]
				set
				{
				}
			}

			[Token(Token = "0x1700010B")]
			public string app_id
			{
				[Token(Token = "0x6000814")]
				[Address(RVA = "0x29424C4", Offset = "0x29424C4", VA = "0x29424C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A71B4", Offset = "0x10A71B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000815")]
				[Address(RVA = "0x29424CC", Offset = "0x29424CC", VA = "0x29424CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A71C4", Offset = "0x10A71C4")]
				set
				{
				}
			}

			[Token(Token = "0x1700010C")]
			public string purchase_id
			{
				[Token(Token = "0x6000816")]
				[Address(RVA = "0x29424D4", Offset = "0x29424D4", VA = "0x29424D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A71D4", Offset = "0x10A71D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000817")]
				[Address(RVA = "0x29424DC", Offset = "0x29424DC", VA = "0x29424DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A71E4", Offset = "0x10A71E4")]
				set
				{
				}
			}

			[Token(Token = "0x1700010D")]
			public string user_data
			{
				[Token(Token = "0x6000818")]
				[Address(RVA = "0x29424E4", Offset = "0x29424E4", VA = "0x29424E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A71F4", Offset = "0x10A71F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000819")]
				[Address(RVA = "0x29424EC", Offset = "0x29424EC", VA = "0x29424EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7204", Offset = "0x10A7204")]
				set
				{
				}
			}

			[Token(Token = "0x1700010E")]
			public string price
			{
				[Token(Token = "0x600081A")]
				[Address(RVA = "0x29424F4", Offset = "0x29424F4", VA = "0x29424F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7214", Offset = "0x10A7214")]
				get
				{
					return null;
				}
				[Token(Token = "0x600081B")]
				[Address(RVA = "0x29424FC", Offset = "0x29424FC", VA = "0x29424FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7224", Offset = "0x10A7224")]
				set
				{
				}
			}

			[Token(Token = "0x1700010F")]
			public string currency
			{
				[Token(Token = "0x600081C")]
				[Address(RVA = "0x2942504", Offset = "0x2942504", VA = "0x2942504")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7234", Offset = "0x10A7234")]
				get
				{
					return null;
				}
				[Token(Token = "0x600081D")]
				[Address(RVA = "0x294250C", Offset = "0x294250C", VA = "0x294250C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7244", Offset = "0x10A7244")]
				set
				{
				}
			}

			[Token(Token = "0x17000110")]
			public long paid_timestamp
			{
				[Token(Token = "0x600081E")]
				[Address(RVA = "0x2942514", Offset = "0x2942514", VA = "0x2942514")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7254", Offset = "0x10A7254")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600081F")]
				[Address(RVA = "0x294251C", Offset = "0x294251C", VA = "0x294251C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7264", Offset = "0x10A7264")]
				set
				{
				}
			}

			[Token(Token = "0x6000820")]
			[Address(RVA = "0x293FB18", Offset = "0x293FB18", VA = "0x293FB18")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x2000171")]
		public class QueryListResponse
		{
			[Token(Token = "0x400075E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D7C", Offset = "0x10A2D7C")]
			private int <total>k__BackingField;

			[Token(Token = "0x400075F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D8C", Offset = "0x10A2D8C")]
			private int <from>k__BackingField;

			[Token(Token = "0x4000760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2D9C", Offset = "0x10A2D9C")]
			private int <to>k__BackingField;

			[Token(Token = "0x4000761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x17000111")]
			public int total
			{
				[Token(Token = "0x6000821")]
				[Address(RVA = "0x2942424", Offset = "0x2942424", VA = "0x2942424")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7274", Offset = "0x10A7274")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000822")]
				[Address(RVA = "0x294242C", Offset = "0x294242C", VA = "0x294242C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7284", Offset = "0x10A7284")]
				set
				{
				}
			}

			[Token(Token = "0x17000112")]
			public int from
			{
				[Token(Token = "0x6000823")]
				[Address(RVA = "0x2942434", Offset = "0x2942434", VA = "0x2942434")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7294", Offset = "0x10A7294")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000824")]
				[Address(RVA = "0x294243C", Offset = "0x294243C", VA = "0x294243C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A72A4", Offset = "0x10A72A4")]
				set
				{
				}
			}

			[Token(Token = "0x17000113")]
			public int to
			{
				[Token(Token = "0x6000825")]
				[Address(RVA = "0x2942444", Offset = "0x2942444", VA = "0x2942444")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A72B4", Offset = "0x10A72B4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000826")]
				[Address(RVA = "0x294244C", Offset = "0x294244C", VA = "0x294244C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A72C4", Offset = "0x10A72C4")]
				set
				{
				}
			}

			[Token(Token = "0x6000827")]
			[Address(RVA = "0x293FB20", Offset = "0x293FB20", VA = "0x293FB20")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x2000172")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4000762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2DAC", Offset = "0x10A2DAC")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4000763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2DBC", Offset = "0x10A2DBC")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4000764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2DCC", Offset = "0x10A2DCC")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000114")]
			public long create_time
			{
				[Token(Token = "0x6000828")]
				[Address(RVA = "0x2942594", Offset = "0x2942594", VA = "0x2942594")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A72D4", Offset = "0x10A72D4")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000829")]
				[Address(RVA = "0x294259C", Offset = "0x294259C", VA = "0x294259C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A72E4", Offset = "0x10A72E4")]
				set
				{
				}
			}

			[Token(Token = "0x17000115")]
			public string payment_method
			{
				[Token(Token = "0x600082A")]
				[Address(RVA = "0x29425A4", Offset = "0x29425A4", VA = "0x29425A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A72F4", Offset = "0x10A72F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600082B")]
				[Address(RVA = "0x29425AC", Offset = "0x29425AC", VA = "0x29425AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7304", Offset = "0x10A7304")]
				set
				{
				}
			}

			[Token(Token = "0x17000116")]
			public string status
			{
				[Token(Token = "0x600082C")]
				[Address(RVA = "0x29425B4", Offset = "0x29425B4", VA = "0x29425B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7314", Offset = "0x10A7314")]
				get
				{
					return null;
				}
				[Token(Token = "0x600082D")]
				[Address(RVA = "0x29425BC", Offset = "0x29425BC", VA = "0x29425BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7324", Offset = "0x10A7324")]
				set
				{
				}
			}

			[Token(Token = "0x600082E")]
			[Address(RVA = "0x29425C4", Offset = "0x29425C4", VA = "0x29425C4")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000173")]
		public class StatusDetail
		{
			[Token(Token = "0x4000765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2DDC", Offset = "0x10A2DDC")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4000766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2DEC", Offset = "0x10A2DEC")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4000767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2DFC", Offset = "0x10A2DFC")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000117")]
			public long date_next_charge
			{
				[Token(Token = "0x600082F")]
				[Address(RVA = "0x294255C", Offset = "0x294255C", VA = "0x294255C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7334", Offset = "0x10A7334")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000830")]
				[Address(RVA = "0x2942564", Offset = "0x2942564", VA = "0x2942564")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7344", Offset = "0x10A7344")]
				set
				{
				}
			}

			[Token(Token = "0x17000118")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6000831")]
				[Address(RVA = "0x294256C", Offset = "0x294256C", VA = "0x294256C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7354", Offset = "0x10A7354")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000832")]
				[Address(RVA = "0x2942574", Offset = "0x2942574", VA = "0x2942574")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7364", Offset = "0x10A7364")]
				set
				{
				}
			}

			[Token(Token = "0x17000119")]
			public string cancel_reason
			{
				[Token(Token = "0x6000833")]
				[Address(RVA = "0x294257C", Offset = "0x294257C", VA = "0x294257C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7374", Offset = "0x10A7374")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000834")]
				[Address(RVA = "0x2942584", Offset = "0x2942584", VA = "0x2942584")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7384", Offset = "0x10A7384")]
				set
				{
				}
			}

			[Token(Token = "0x6000835")]
			[Address(RVA = "0x294258C", Offset = "0x294258C", VA = "0x294258C")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000174")]
		public class TimePeriod
		{
			[Token(Token = "0x4000768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E0C", Offset = "0x10A2E0C")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4000769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E1C", Offset = "0x10A2E1C")]
			private int <value>k__BackingField;

			[Token(Token = "0x1700011A")]
			public string time_type
			{
				[Token(Token = "0x6000836")]
				[Address(RVA = "0x29426A4", Offset = "0x29426A4", VA = "0x29426A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7394", Offset = "0x10A7394")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000837")]
				[Address(RVA = "0x29426AC", Offset = "0x29426AC", VA = "0x29426AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A73A4", Offset = "0x10A73A4")]
				set
				{
				}
			}

			[Token(Token = "0x1700011B")]
			public int value
			{
				[Token(Token = "0x6000838")]
				[Address(RVA = "0x29426B4", Offset = "0x29426B4", VA = "0x29426B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A73B4", Offset = "0x10A73B4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000839")]
				[Address(RVA = "0x29426BC", Offset = "0x29426BC", VA = "0x29426BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A73C4", Offset = "0x10A73C4")]
				set
				{
				}
			}

			[Token(Token = "0x600083A")]
			[Address(RVA = "0x29426C4", Offset = "0x29426C4", VA = "0x29426C4")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000175")]
		public class Subscription
		{
			[Token(Token = "0x400076A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E2C", Offset = "0x10A2E2C")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x400076B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E3C", Offset = "0x10A2E3C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x400076C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E4C", Offset = "0x10A2E4C")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x400076D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E5C", Offset = "0x10A2E5C")]
			private string <price>k__BackingField;

			[Token(Token = "0x400076E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E6C", Offset = "0x10A2E6C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x400076F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E7C", Offset = "0x10A2E7C")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4000770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E8C", Offset = "0x10A2E8C")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4000771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2E9C", Offset = "0x10A2E9C")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4000772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2EAC", Offset = "0x10A2EAC")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4000773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2EBC", Offset = "0x10A2EBC")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4000774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2ECC", Offset = "0x10A2ECC")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4000775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2EDC", Offset = "0x10A2EDC")]
			private string <status>k__BackingField;

			[Token(Token = "0x4000776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2EEC", Offset = "0x10A2EEC")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x1700011C")]
			public string app_id
			{
				[Token(Token = "0x600083B")]
				[Address(RVA = "0x29425CC", Offset = "0x29425CC", VA = "0x29425CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A73D4", Offset = "0x10A73D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600083C")]
				[Address(RVA = "0x29425D4", Offset = "0x29425D4", VA = "0x29425D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A73E4", Offset = "0x10A73E4")]
				set
				{
				}
			}

			[Token(Token = "0x1700011D")]
			public string order_id
			{
				[Token(Token = "0x600083D")]
				[Address(RVA = "0x29425DC", Offset = "0x29425DC", VA = "0x29425DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A73F4", Offset = "0x10A73F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600083E")]
				[Address(RVA = "0x29425E4", Offset = "0x29425E4", VA = "0x29425E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7404", Offset = "0x10A7404")]
				set
				{
				}
			}

			[Token(Token = "0x1700011E")]
			public string subscription_id
			{
				[Token(Token = "0x600083F")]
				[Address(RVA = "0x29425EC", Offset = "0x29425EC", VA = "0x29425EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7414", Offset = "0x10A7414")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000840")]
				[Address(RVA = "0x29425F4", Offset = "0x29425F4", VA = "0x29425F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7424", Offset = "0x10A7424")]
				set
				{
				}
			}

			[Token(Token = "0x1700011F")]
			public string price
			{
				[Token(Token = "0x6000841")]
				[Address(RVA = "0x29425FC", Offset = "0x29425FC", VA = "0x29425FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7434", Offset = "0x10A7434")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000842")]
				[Address(RVA = "0x2942604", Offset = "0x2942604", VA = "0x2942604")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7444", Offset = "0x10A7444")]
				set
				{
				}
			}

			[Token(Token = "0x17000120")]
			public string currency
			{
				[Token(Token = "0x6000843")]
				[Address(RVA = "0x294260C", Offset = "0x294260C", VA = "0x294260C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7454", Offset = "0x10A7454")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000844")]
				[Address(RVA = "0x2942614", Offset = "0x2942614", VA = "0x2942614")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7464", Offset = "0x10A7464")]
				set
				{
				}
			}

			[Token(Token = "0x17000121")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6000845")]
				[Address(RVA = "0x294261C", Offset = "0x294261C", VA = "0x294261C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7474", Offset = "0x10A7474")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000846")]
				[Address(RVA = "0x2942624", Offset = "0x2942624", VA = "0x2942624")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7484", Offset = "0x10A7484")]
				set
				{
				}
			}

			[Token(Token = "0x17000122")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6000847")]
				[Address(RVA = "0x294262C", Offset = "0x294262C", VA = "0x294262C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7494", Offset = "0x10A7494")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000848")]
				[Address(RVA = "0x2942634", Offset = "0x2942634", VA = "0x2942634")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A74A4", Offset = "0x10A74A4")]
				set
				{
				}
			}

			[Token(Token = "0x17000123")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6000849")]
				[Address(RVA = "0x294263C", Offset = "0x294263C", VA = "0x294263C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A74B4", Offset = "0x10A74B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600084A")]
				[Address(RVA = "0x2942644", Offset = "0x2942644", VA = "0x2942644")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A74C4", Offset = "0x10A74C4")]
				set
				{
				}
			}

			[Token(Token = "0x17000124")]
			public int number_of_charge_period
			{
				[Token(Token = "0x600084B")]
				[Address(RVA = "0x294264C", Offset = "0x294264C", VA = "0x294264C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A74D4", Offset = "0x10A74D4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600084C")]
				[Address(RVA = "0x2942654", Offset = "0x2942654", VA = "0x2942654")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A74E4", Offset = "0x10A74E4")]
				set
				{
				}
			}

			[Token(Token = "0x17000125")]
			public string plan_id
			{
				[Token(Token = "0x600084D")]
				[Address(RVA = "0x294265C", Offset = "0x294265C", VA = "0x294265C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A74F4", Offset = "0x10A74F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600084E")]
				[Address(RVA = "0x2942664", Offset = "0x2942664", VA = "0x2942664")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7504", Offset = "0x10A7504")]
				set
				{
				}
			}

			[Token(Token = "0x17000126")]
			public string plan_name
			{
				[Token(Token = "0x600084F")]
				[Address(RVA = "0x294266C", Offset = "0x294266C", VA = "0x294266C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7514", Offset = "0x10A7514")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000850")]
				[Address(RVA = "0x2942674", Offset = "0x2942674", VA = "0x2942674")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7524", Offset = "0x10A7524")]
				set
				{
				}
			}

			[Token(Token = "0x17000127")]
			public string status
			{
				[Token(Token = "0x6000851")]
				[Address(RVA = "0x294267C", Offset = "0x294267C", VA = "0x294267C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7534", Offset = "0x10A7534")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000852")]
				[Address(RVA = "0x2942684", Offset = "0x2942684", VA = "0x2942684")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7544", Offset = "0x10A7544")]
				set
				{
				}
			}

			[Token(Token = "0x17000128")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6000853")]
				[Address(RVA = "0x294268C", Offset = "0x294268C", VA = "0x294268C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7554", Offset = "0x10A7554")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000854")]
				[Address(RVA = "0x2942694", Offset = "0x2942694", VA = "0x2942694")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7564", Offset = "0x10A7564")]
				set
				{
				}
			}

			[Token(Token = "0x6000855")]
			[Address(RVA = "0x294269C", Offset = "0x294269C", VA = "0x294269C")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000176")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4000777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2EFC", Offset = "0x10A2EFC")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4000778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F0C", Offset = "0x10A2F0C")]
			private string <message>k__BackingField;

			[Token(Token = "0x4000779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F1C", Offset = "0x10A2F1C")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x17000129")]
			public int statusCode
			{
				[Token(Token = "0x6000856")]
				[Address(RVA = "0x2942524", Offset = "0x2942524", VA = "0x2942524")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7574", Offset = "0x10A7574")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000857")]
				[Address(RVA = "0x294252C", Offset = "0x294252C", VA = "0x294252C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7584", Offset = "0x10A7584")]
				set
				{
				}
			}

			[Token(Token = "0x1700012A")]
			public string message
			{
				[Token(Token = "0x6000858")]
				[Address(RVA = "0x2942534", Offset = "0x2942534", VA = "0x2942534")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7594", Offset = "0x10A7594")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000859")]
				[Address(RVA = "0x294253C", Offset = "0x294253C", VA = "0x294253C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A75A4", Offset = "0x10A75A4")]
				set
				{
				}
			}

			[Token(Token = "0x1700012B")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x600085A")]
				[Address(RVA = "0x2942544", Offset = "0x2942544", VA = "0x2942544")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A75B4", Offset = "0x10A75B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600085B")]
				[Address(RVA = "0x294254C", Offset = "0x294254C", VA = "0x294254C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A75C4", Offset = "0x10A75C4")]
				set
				{
				}
			}

			[Token(Token = "0x600085C")]
			[Address(RVA = "0x2942554", Offset = "0x2942554", VA = "0x2942554")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x1A5F8C8", Offset = "0x1A5F8C8", VA = "0x1A5F8C8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6BF4", Offset = "0x10A6BF4")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x1A60084", Offset = "0x1A60084", VA = "0x1A60084")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1A5F934", Offset = "0x1A5F934", VA = "0x1A5F934")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6C54", Offset = "0x10A6C54")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1A60328", Offset = "0x1A60328", VA = "0x1A60328")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1A5F9A0", Offset = "0x1A5F9A0", VA = "0x1A5F9A0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6CB4", Offset = "0x10A6CB4")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1A605B8", Offset = "0x1A605B8", VA = "0x1A605B8")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x1A5FA0C", Offset = "0x1A5FA0C", VA = "0x1A5FA0C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6D14", Offset = "0x10A6D14")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x1A60888", Offset = "0x1A60888", VA = "0x1A60888")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1A5FA78", Offset = "0x1A5FA78", VA = "0x1A5FA78")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6D74", Offset = "0x10A6D74")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x1A60B18", Offset = "0x1A60B18", VA = "0x1A60B18")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1A5FAE4", Offset = "0x1A5FAE4", VA = "0x1A5FAE4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6DD4", Offset = "0x10A6DD4")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1A60DA8", Offset = "0x1A60DA8", VA = "0x1A60DA8")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1A5FB50", Offset = "0x1A5FB50", VA = "0x1A5FB50")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6E34", Offset = "0x10A6E34")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x1A60FE8", Offset = "0x1A60FE8", VA = "0x1A60FE8")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1A5FBBC", Offset = "0x1A5FBBC", VA = "0x1A5FBBC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6E94", Offset = "0x10A6E94")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1A61228", Offset = "0x1A61228", VA = "0x1A61228")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1A5FC28", Offset = "0x1A5FC28", VA = "0x1A5FC28")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6EF4", Offset = "0x10A6EF4")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x1A616C0", Offset = "0x1A616C0", VA = "0x1A616C0")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x1A5FC94", Offset = "0x1A5FC94", VA = "0x1A5FC94")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6F54", Offset = "0x10A6F54")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x1A61950", Offset = "0x1A61950", VA = "0x1A61950")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x1A5FD00", Offset = "0x1A5FD00", VA = "0x1A5FD00")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A6FB4", Offset = "0x10A6FB4")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x1A61BE0", Offset = "0x1A61BE0", VA = "0x1A61BE0")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x1A5FD6C", Offset = "0x1A5FD6C", VA = "0x1A5FD6C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A7014", Offset = "0x10A7014")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x1A61E70", Offset = "0x1A61E70", VA = "0x1A61E70")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x1A5FDD8", Offset = "0x1A5FDD8", VA = "0x1A5FDD8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A7074", Offset = "0x10A7074")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x1A620B0", Offset = "0x1A620B0", VA = "0x1A620B0")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x1A62340", Offset = "0x1A62340", VA = "0x1A62340")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class DLC
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1765E9C", Offset = "0x1765E9C", VA = "0x1765E9C")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class Subscription
	{
		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x18CBBB4", Offset = "0x18CBBB4", VA = "0x18CBBB4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A75D4", Offset = "0x10A75D4")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x18CBC20", Offset = "0x18CBC20", VA = "0x18CBC20")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x18CBF40", Offset = "0x18CBF40", VA = "0x18CBF40")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x18CC4E4", Offset = "0x18CC4E4", VA = "0x18CC4E4")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class Deeplink
	{
		[Token(Token = "0x200017A")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x600086A")]
			public abstract void OnSuccess();

			[Token(Token = "0x600086B")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x600086C")]
			[Address(RVA = "0x293B6E8", Offset = "0x293B6E8", VA = "0x293B6E8")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x400077B")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1768EA4", Offset = "0x1768EA4", VA = "0x1768EA4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A7634", Offset = "0x10A7634")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1768F04", Offset = "0x1768F04", VA = "0x1768F04")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x17691BC", Offset = "0x17691BC", VA = "0x17691BC")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1769418", Offset = "0x1769418", VA = "0x1769418")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x17694AC", Offset = "0x17694AC", VA = "0x17694AC")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1769698", Offset = "0x1769698", VA = "0x1769698")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x17698F4", Offset = "0x17698F4", VA = "0x17698F4")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x17699F8", Offset = "0x17699F8", VA = "0x17699F8")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x200017B")]
	internal class Token
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback;

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x1389644", Offset = "0x1389644", VA = "0x1389644")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A7694", Offset = "0x10A7694")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x1389714", Offset = "0x1389714", VA = "0x1389714")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x13896A4", Offset = "0x13896A4", VA = "0x13896A4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x10A76F4", Offset = "0x10A76F4")]
		private static void GetSessionTokenIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1389A10", Offset = "0x1389A10", VA = "0x1389A10")]
		public static void GetSessionToken(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1389D0C", Offset = "0x1389D0C", VA = "0x1389D0C")]
		public Token()
		{
		}
	}
	[Token(Token = "0x200017C")]
	internal class Ads
	{
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1937BDC", Offset = "0x1937BDC", VA = "0x1937BDC")]
		public Ads()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x109C224", Offset = "0x109C224")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x109C238", Offset = "0x109C238")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x109C24C", Offset = "0x109C24C")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x109C260", Offset = "0x109C260")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x2000181")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4000784")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4000785")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4000786")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4000787")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x2000182")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4000789")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x400078A")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x400078B")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x400078C")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000183")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x400078E")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x400078F")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4000790")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000184")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4000792")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4000793")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4000794")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4000795")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x2000185")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4000797")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4000798")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4000799")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x2000186")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x400079B")]
		UNKNOWN,
		[Token(Token = "0x400079C")]
		PAID,
		[Token(Token = "0x400079D")]
		REDEEM,
		[Token(Token = "0x400079E")]
		FREEE_TRIAL
	}
	[Token(Token = "0x2000187")]
	internal enum ELocale
	{
		[Token(Token = "0x40007A0")]
		k_ELocaleUS,
		[Token(Token = "0x40007A1")]
		k_ELocaleDE,
		[Token(Token = "0x40007A2")]
		k_ELocaleJP,
		[Token(Token = "0x40007A3")]
		k_ELocaleKR,
		[Token(Token = "0x40007A4")]
		k_ELocaleRU,
		[Token(Token = "0x40007A5")]
		k_ELocaleCN,
		[Token(Token = "0x40007A6")]
		k_ELocaleTW,
		[Token(Token = "0x40007A7")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000188")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x40007A9")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x40007AA")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x40007AB")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000189")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x109C274", Offset = "0x109C274")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x200018B")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x200018C")]
	internal class Api
	{
		[Token(Token = "0x200018D")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x40007B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x600088C")]
			[Address(RVA = "0x293A2B0", Offset = "0x293A2B0", VA = "0x293A2B0")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x600088D")]
			[Address(RVA = "0x293A348", Offset = "0x293A348", VA = "0x293A348")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x600088E")]
			[Address(RVA = "0x293A460", Offset = "0x293A460", VA = "0x293A460")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x193C398", Offset = "0x193C398", VA = "0x193C398")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x193C6C0", Offset = "0x193C6C0", VA = "0x193C6C0")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x193C894", Offset = "0x193C894", VA = "0x193C894")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x193C028", Offset = "0x193C028", VA = "0x193C028")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x193CBDC", Offset = "0x193CBDC", VA = "0x193CBDC")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200018E")]
	internal class User
	{
		[Token(Token = "0x600088F")]
		[Address(RVA = "0x1394F74", Offset = "0x1394F74", VA = "0x1394F74")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x13950FC", Offset = "0x13950FC", VA = "0x13950FC")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1395220", Offset = "0x1395220", VA = "0x1395220")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1395344", Offset = "0x1395344", VA = "0x1395344")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x139544C", Offset = "0x139544C", VA = "0x139544C")]
		public User()
		{
		}
	}
	[Token(Token = "0x200018F")]
	internal class UserStats
	{
		[Token(Token = "0x6000894")]
		[Address(RVA = "0x139A748", Offset = "0x139A748", VA = "0x139A748")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x139AA50", Offset = "0x139AA50", VA = "0x139AA50")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x139B308", Offset = "0x139B308", VA = "0x139B308")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x139AE90", Offset = "0x139AE90", VA = "0x139AE90")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x139AFF8", Offset = "0x139AFF8", VA = "0x139AFF8")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x139ABB8", Offset = "0x139ABB8", VA = "0x139ABB8")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x139AD20", Offset = "0x139AD20", VA = "0x139AD20")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x139B470", Offset = "0x139B470", VA = "0x139B470")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x139B56C", Offset = "0x139B56C", VA = "0x139B56C")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x139BA80", Offset = "0x139BA80", VA = "0x139BA80")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x139BB7C", Offset = "0x139BB7C", VA = "0x139BB7C")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x139B764", Offset = "0x139B764", VA = "0x139B764")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x139B8CC", Offset = "0x139B8CC", VA = "0x139B8CC")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x139B668", Offset = "0x139B668", VA = "0x139B668")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x139BE58", Offset = "0x139BE58", VA = "0x139BE58")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x139C318", Offset = "0x139C318", VA = "0x139C318")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x139C52C", Offset = "0x139C52C", VA = "0x139C52C")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x139C7F0", Offset = "0x139C7F0", VA = "0x139C7F0")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x139C908", Offset = "0x139C908", VA = "0x139C908")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x139CA20", Offset = "0x139CA20", VA = "0x139CA20")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x139CB3C", Offset = "0x139CB3C", VA = "0x139CB3C")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000190")]
	internal class Deeplink
	{
		[Token(Token = "0x2000191")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x40007B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x293B6F0", Offset = "0x293B6F0", VA = "0x293B6F0")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x293B788", Offset = "0x293B788", VA = "0x293B788")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x293B820", Offset = "0x293B820", VA = "0x293B820")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x17690A8", Offset = "0x17690A8", VA = "0x17690A8")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1769250", Offset = "0x1769250", VA = "0x1769250")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1769508", Offset = "0x1769508", VA = "0x1769508")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x176972C", Offset = "0x176972C", VA = "0x176972C")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x17698F8", Offset = "0x17698F8", VA = "0x17698F8")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1769A00", Offset = "0x1769A00", VA = "0x1769A00")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000192")]
	internal class IAPurchase
	{
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1A60198", Offset = "0x1A60198", VA = "0x1A60198")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1A60428", Offset = "0x1A60428", VA = "0x1A60428")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1A606C0", Offset = "0x1A606C0", VA = "0x1A606C0")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1A60988", Offset = "0x1A60988", VA = "0x1A60988")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1A60C18", Offset = "0x1A60C18", VA = "0x1A60C18")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1A60E98", Offset = "0x1A60E98", VA = "0x1A60E98")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1A610D8", Offset = "0x1A610D8", VA = "0x1A610D8")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1A61370", Offset = "0x1A61370", VA = "0x1A61370")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1A617C0", Offset = "0x1A617C0", VA = "0x1A617C0")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1A61A50", Offset = "0x1A61A50", VA = "0x1A61A50")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1A61CE0", Offset = "0x1A61CE0", VA = "0x1A61CE0")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1A61F60", Offset = "0x1A61F60", VA = "0x1A61F60")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1A621B0", Offset = "0x1A621B0", VA = "0x1A621B0")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1A62348", Offset = "0x1A62348", VA = "0x1A62348")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000193")]
	internal class Subscription
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x18CBDE8", Offset = "0x18CBDE8", VA = "0x18CBDE8")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x18CC0D4", Offset = "0x18CC0D4", VA = "0x18CC0D4")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x18CC1E8", Offset = "0x18CC1E8", VA = "0x18CC1E8")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x18CC2FC", Offset = "0x18CC2FC", VA = "0x18CC2FC")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x18CC4EC", Offset = "0x18CC4EC", VA = "0x18CC4EC")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000194")]
	internal class Token
	{
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x13898B8", Offset = "0x13898B8", VA = "0x13898B8")]
		internal static int IsReady(StatusCallback IsReadyCallback)
		{
			return default(int);
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1389BB4", Offset = "0x1389BB4", VA = "0x1389BB4")]
		internal static int GetSessionToken(StatusCallback2 GetSessionTokenCallback)
		{
			return default(int);
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1389D14", Offset = "0x1389D14", VA = "0x1389D14")]
		public Token()
		{
		}
	}
	[Token(Token = "0x2000195")]
	internal class Android
	{
		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _sessionToken;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x1700012C")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x193B008", Offset = "0x193B008", VA = "0x193B008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x193B0B8", Offset = "0x193B0B8", VA = "0x193B0B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x193B120", Offset = "0x193B120", VA = "0x193B120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x193A6BC", Offset = "0x193A6BC", VA = "0x193A6BC")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x193A810", Offset = "0x193A810", VA = "0x193A810")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x193A964", Offset = "0x193A964", VA = "0x193A964")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x193AAB8", Offset = "0x193AAB8", VA = "0x193AAB8")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x193AC0C", Offset = "0x193AC0C", VA = "0x193AC0C")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x193AD60", Offset = "0x193AD60", VA = "0x193AD60")]
		internal static AndroidJavaObject GetJavaSessionToken()
		{
			return null;
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x193AEB4", Offset = "0x193AEB4", VA = "0x193AEB4")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x193B124", Offset = "0x193B124", VA = "0x193B124")]
		public Android()
		{
		}
	}
	[Token(Token = "0x2000196")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x193B12C", Offset = "0x193B12C", VA = "0x193B12C")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x193B1C4", Offset = "0x193B1C4", VA = "0x193B1C4")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x193B25C", Offset = "0x193B25C", VA = "0x193B25C")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x193B2F4", Offset = "0x193B2F4", VA = "0x193B2F4")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x2000197")]
	internal class Session
	{
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x18C1EF0", Offset = "0x18C1EF0", VA = "0x18C1EF0")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x2000198")]
	public class Logger
	{
		[Token(Token = "0x40007BE")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1C32214", Offset = "0x1C32214", VA = "0x1C32214")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1C326A8", Offset = "0x1C326A8", VA = "0x1C326A8")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1C322E0", Offset = "0x1C322E0", VA = "0x1C322E0")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1C3274C", Offset = "0x1C3274C", VA = "0x1C3274C")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1C328B4", Offset = "0x1C328B4", VA = "0x1C328B4")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x2000199")]
	public enum JsonType
	{
		[Token(Token = "0x40007C3")]
		None,
		[Token(Token = "0x40007C4")]
		Object,
		[Token(Token = "0x40007C5")]
		Array,
		[Token(Token = "0x40007C6")]
		String,
		[Token(Token = "0x40007C7")]
		Int,
		[Token(Token = "0x40007C8")]
		Long,
		[Token(Token = "0x40007C9")]
		Double,
		[Token(Token = "0x40007CA")]
		Boolean
	}
	[Token(Token = "0x200019A")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x1700012F")]
		bool IsArray
		{
			[Token(Token = "0x60008DE")]
			get;
		}

		[Token(Token = "0x17000130")]
		bool IsBoolean
		{
			[Token(Token = "0x60008DF")]
			get;
		}

		[Token(Token = "0x17000131")]
		bool IsDouble
		{
			[Token(Token = "0x60008E0")]
			get;
		}

		[Token(Token = "0x17000132")]
		bool IsInt
		{
			[Token(Token = "0x60008E1")]
			get;
		}

		[Token(Token = "0x17000133")]
		bool IsLong
		{
			[Token(Token = "0x60008E2")]
			get;
		}

		[Token(Token = "0x17000134")]
		bool IsObject
		{
			[Token(Token = "0x60008E3")]
			get;
		}

		[Token(Token = "0x17000135")]
		bool IsString
		{
			[Token(Token = "0x60008E4")]
			get;
		}

		[Token(Token = "0x60008E5")]
		bool GetBoolean();

		[Token(Token = "0x60008E6")]
		double GetDouble();

		[Token(Token = "0x60008E7")]
		int GetInt();

		[Token(Token = "0x60008E8")]
		JsonType GetJsonType();

		[Token(Token = "0x60008E9")]
		long GetLong();

		[Token(Token = "0x60008EA")]
		string GetString();

		[Token(Token = "0x60008EB")]
		void SetBoolean(bool val);

		[Token(Token = "0x60008EC")]
		void SetDouble(double val);

		[Token(Token = "0x60008ED")]
		void SetInt(int val);

		[Token(Token = "0x60008EE")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x60008EF")]
		void SetLong(long val);

		[Token(Token = "0x60008F0")]
		void SetString(string val);

		[Token(Token = "0x60008F1")]
		string ToJson();

		[Token(Token = "0x60008F2")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x109C288", Offset = "0x109C288")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x17000136")]
		public int Count
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x1A65788", Offset = "0x1A65788", VA = "0x1A65788")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000137")]
		public bool IsArray
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x1A65914", Offset = "0x1A65914", VA = "0x1A65914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000138")]
		public bool IsBoolean
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x1A65924", Offset = "0x1A65924", VA = "0x1A65924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000139")]
		public bool IsDouble
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x1A65934", Offset = "0x1A65934", VA = "0x1A65934")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013A")]
		public bool IsInt
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x1A65944", Offset = "0x1A65944", VA = "0x1A65944")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		public bool IsLong
		{
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x1A65954", Offset = "0x1A65954", VA = "0x1A65954")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013C")]
		public bool IsObject
		{
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0x1A65964", Offset = "0x1A65964", VA = "0x1A65964")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		public bool IsString
		{
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0x1A65974", Offset = "0x1A65974", VA = "0x1A65974")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013E")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0x1A65984", Offset = "0x1A65984", VA = "0x1A65984", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013F")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0x1A65988", Offset = "0x1A65988", VA = "0x1A65988", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x1A65A40", Offset = "0x1A65A40", VA = "0x1A65A40", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x1A65AF8", Offset = "0x1A65AF8", VA = "0x1A65AF8", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x1A65D18", Offset = "0x1A65D18", VA = "0x1A65D18", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6000900")]
			[Address(RVA = "0x1A65DD0", Offset = "0x1A65DD0", VA = "0x1A65DD0", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0x1A66198", Offset = "0x1A66198", VA = "0x1A66198", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x1A66560", Offset = "0x1A66560", VA = "0x1A66560", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0x1A66570", Offset = "0x1A66570", VA = "0x1A66570", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000147")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6000904")]
			[Address(RVA = "0x1A66580", Offset = "0x1A66580", VA = "0x1A66580", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000148")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0x1A66590", Offset = "0x1A66590", VA = "0x1A66590", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000149")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0x1A665A0", Offset = "0x1A665A0", VA = "0x1A665A0", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014A")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x1A665B0", Offset = "0x1A665B0", VA = "0x1A665B0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014B")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x1A665C0", Offset = "0x1A665C0", VA = "0x1A665C0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014C")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0x1A665D0", Offset = "0x1A665D0", VA = "0x1A665D0", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014D")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x1A667A4", Offset = "0x1A667A4", VA = "0x1A667A4", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x1A6685C", Offset = "0x1A6685C", VA = "0x1A6685C", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x1A66920", Offset = "0x1A66920", VA = "0x1A66920", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x1A66E68", Offset = "0x1A66E68", VA = "0x1A66E68", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x1A66F40", Offset = "0x1A66F40", VA = "0x1A66F40", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x1A67168", Offset = "0x1A67168", VA = "0x1A67168", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x1A6722C", Offset = "0x1A6722C", VA = "0x1A6722C", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public JsonData Item
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x1A6753C", Offset = "0x1A6753C", VA = "0x1A6753C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x1A66A94", Offset = "0x1A66A94", VA = "0x1A66A94")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public JsonData Item
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x1A67600", Offset = "0x1A67600", VA = "0x1A67600")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x1A67270", Offset = "0x1A67270", VA = "0x1A67270")]
			set
			{
			}
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1A67770", Offset = "0x1A67770", VA = "0x1A67770")]
		public JsonData()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1A67778", Offset = "0x1A67778", VA = "0x1A67778")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1A677B0", Offset = "0x1A677B0", VA = "0x1A677B0")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1A677EC", Offset = "0x1A677EC", VA = "0x1A677EC")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x1A67820", Offset = "0x1A67820", VA = "0x1A67820")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1A67854", Offset = "0x1A67854", VA = "0x1A67854")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x1A67A88", Offset = "0x1A67A88", VA = "0x1A67A88")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x1A67AC4", Offset = "0x1A67AC4", VA = "0x1A67AC4")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x1A67B30", Offset = "0x1A67B30", VA = "0x1A67B30")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1A67BA0", Offset = "0x1A67BA0", VA = "0x1A67BA0")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x1A67C08", Offset = "0x1A67C08", VA = "0x1A67C08")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1A67C70", Offset = "0x1A67C70", VA = "0x1A67C70")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x1A67CE4", Offset = "0x1A67CE4", VA = "0x1A67CE4")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x1A67D5C", Offset = "0x1A67D5C", VA = "0x1A67D5C")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x1A67DD4", Offset = "0x1A67DD4", VA = "0x1A67DD4")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x1A67E4C", Offset = "0x1A67E4C", VA = "0x1A67E4C")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x1A67EC4", Offset = "0x1A67EC4", VA = "0x1A67EC4")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x1A67F3C", Offset = "0x1A67F3C", VA = "0x1A67F3C", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x1A68008", Offset = "0x1A68008", VA = "0x1A68008", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x1A681E8", Offset = "0x1A681E8", VA = "0x1A681E8", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x1A68330", Offset = "0x1A68330", VA = "0x1A68330", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x1A683F8", Offset = "0x1A683F8", VA = "0x1A683F8", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1A6849C", Offset = "0x1A6849C", VA = "0x1A6849C", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x1A68754", Offset = "0x1A68754", VA = "0x1A68754", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x1A68808", Offset = "0x1A68808", VA = "0x1A68808", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1A68870", Offset = "0x1A68870", VA = "0x1A68870", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x1A688D8", Offset = "0x1A688D8", VA = "0x1A688D8", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1A68940", Offset = "0x1A68940", VA = "0x1A68940", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1A689A8", Offset = "0x1A689A8", VA = "0x1A689A8", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1A68A10", Offset = "0x1A68A10", VA = "0x1A68A10", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x1A68A2C", Offset = "0x1A68A2C", VA = "0x1A68A2C", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x1A68A44", Offset = "0x1A68A44", VA = "0x1A68A44", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x1A68A5C", Offset = "0x1A68A5C", VA = "0x1A68A5C", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x1A68A74", Offset = "0x1A68A74", VA = "0x1A68A74", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1A68AAC", Offset = "0x1A68AAC", VA = "0x1A68AAC", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1A68B84", Offset = "0x1A68B84", VA = "0x1A68B84", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x1A68BBC", Offset = "0x1A68BBC", VA = "0x1A68BBC", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1A68CA4", Offset = "0x1A68CA4", VA = "0x1A68CA4", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x1A68D6C", Offset = "0x1A68D6C", VA = "0x1A68D6C", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1A68E34", Offset = "0x1A68E34", VA = "0x1A68E34", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x1A68EFC", Offset = "0x1A68EFC", VA = "0x1A68EFC", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x1A68FDC", Offset = "0x1A68FDC", VA = "0x1A68FDC", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x1A690B4", Offset = "0x1A690B4", VA = "0x1A690B4", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x1A6918C", Offset = "0x1A6918C", VA = "0x1A6918C", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x1A6927C", Offset = "0x1A6927C", VA = "0x1A6927C", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x1A693DC", Offset = "0x1A693DC", VA = "0x1A693DC", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x1A65840", Offset = "0x1A65840", VA = "0x1A65840")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x1A65BB0", Offset = "0x1A65BB0", VA = "0x1A65BB0")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x1A66688", Offset = "0x1A66688", VA = "0x1A66688")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x1A669FC", Offset = "0x1A669FC", VA = "0x1A669FC")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x1A695AC", Offset = "0x1A695AC", VA = "0x1A695AC")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x1A68BC0", Offset = "0x1A68BC0", VA = "0x1A68BC0")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x1A6AA6C", Offset = "0x1A6AA6C", VA = "0x1A6AA6C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1A6AB90", Offset = "0x1A6AB90", VA = "0x1A6AB90", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x1A6AC7C", Offset = "0x1A6AC7C", VA = "0x1A6AC7C", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x1A6AC84", Offset = "0x1A6AC84", VA = "0x1A6AC84", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x1A68AB0", Offset = "0x1A68AB0", VA = "0x1A68AB0")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x1A68B88", Offset = "0x1A68B88", VA = "0x1A68B88")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1A6AE8C", Offset = "0x1A6AE8C", VA = "0x1A6AE8C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200019C")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000153")]
		public object Current
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x1E40B24", Offset = "0x1E40B24", VA = "0x1E40B24", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x1E40B8C", Offset = "0x1E40B8C", VA = "0x1E40B8C", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x17000155")]
		public object Key
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x1E40C80", Offset = "0x1E40C80", VA = "0x1E40C80", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		public object Value
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x1E40D38", Offset = "0x1E40D38", VA = "0x1E40D38", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x1E40DF8", Offset = "0x1E40DF8", VA = "0x1E40DF8")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x1E40E2C", Offset = "0x1E40E2C", VA = "0x1E40E2C", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1E40ED8", Offset = "0x1E40ED8", VA = "0x1E40ED8", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1A6AF80", Offset = "0x1A6AF80", VA = "0x1A6AF80")]
		public JsonException()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x1A6AF88", Offset = "0x1A6AF88", VA = "0x1A6AF88")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x1A6B020", Offset = "0x1A6B020", VA = "0x1A6B020")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x1A6B0C8", Offset = "0x1A6B0C8", VA = "0x1A6B0C8")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x1A6B160", Offset = "0x1A6B160", VA = "0x1A6B160")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x1A6B208", Offset = "0x1A6B208", VA = "0x1A6B208")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1A6B210", Offset = "0x1A6B210", VA = "0x1A6B210")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x200019E")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x200019F")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x17000157")]
		public Type ElementType
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x193D700", Offset = "0x193D700", VA = "0x193D700")]
			get
			{
				return null;
			}
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x193D7C8", Offset = "0x193D7C8", VA = "0x193D7C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public bool IsArray
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x193D7D0", Offset = "0x193D7D0", VA = "0x193D7D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x193D7D8", Offset = "0x193D7D8", VA = "0x193D7D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public bool IsList
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x193D7E4", Offset = "0x193D7E4", VA = "0x193D7E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x193D7EC", Offset = "0x193D7EC", VA = "0x193D7EC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001A0")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x1700015A")]
		public Type ElementType
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x1E40A30", Offset = "0x1E40A30", VA = "0x1E40A30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x1E40AF8", Offset = "0x1E40AF8", VA = "0x1E40AF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public bool IsDictionary
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x1E40B00", Offset = "0x1E40B00", VA = "0x1E40B00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x1E40B08", Offset = "0x1E40B08", VA = "0x1E40B08")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x1E40B14", Offset = "0x1E40B14", VA = "0x1E40B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x1E40B1C", Offset = "0x1E40B1C", VA = "0x1E40B1C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001A1")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x20001A2")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x20001A3")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x20001A4")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x20001A5")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x20001A6")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x20001A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C2C0", Offset = "0x109C2C0")]
		private sealed class <>c
		{
			[Token(Token = "0x40007EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40007F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x40007F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x40007F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x40007F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x40007F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x40007F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x40007F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x40007F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x40007F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x40007F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x40007FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x40007FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x40007FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x40007FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x40007FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x40007FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4000800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4000801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4000802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4000803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4000804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4000805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4000806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4000807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4000808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4000809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6000999")]
			[Address(RVA = "0x2942CE4", Offset = "0x2942CE4", VA = "0x2942CE4")]
			public <>c()
			{
			}

			[Token(Token = "0x600099A")]
			[Address(RVA = "0x2942CEC", Offset = "0x2942CEC", VA = "0x2942CEC")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600099B")]
			[Address(RVA = "0x2942DB0", Offset = "0x2942DB0", VA = "0x2942DB0")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600099C")]
			[Address(RVA = "0x2942E74", Offset = "0x2942E74", VA = "0x2942E74")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600099D")]
			[Address(RVA = "0x2942F78", Offset = "0x2942F78", VA = "0x2942F78")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600099E")]
			[Address(RVA = "0x2943004", Offset = "0x2943004", VA = "0x2943004")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600099F")]
			[Address(RVA = "0x29430C8", Offset = "0x29430C8", VA = "0x29430C8")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x294318C", Offset = "0x294318C", VA = "0x294318C")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x2943250", Offset = "0x2943250", VA = "0x2943250")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x2943314", Offset = "0x2943314", VA = "0x2943314")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x29433A0", Offset = "0x29433A0", VA = "0x29433A0")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x2943430", Offset = "0x2943430", VA = "0x2943430")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x2943508", Offset = "0x2943508", VA = "0x2943508")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x29435E0", Offset = "0x29435E0", VA = "0x29435E0")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x29436B8", Offset = "0x29436B8", VA = "0x29436B8")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x2943790", Offset = "0x2943790", VA = "0x2943790")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x2943868", Offset = "0x2943868", VA = "0x2943868")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x2943940", Offset = "0x2943940", VA = "0x2943940")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x2943A14", Offset = "0x2943A14", VA = "0x2943A14")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x2943AEC", Offset = "0x2943AEC", VA = "0x2943AEC")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x2943BC0", Offset = "0x2943BC0", VA = "0x2943BC0")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x2943C98", Offset = "0x2943C98", VA = "0x2943C98")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x2943D70", Offset = "0x2943D70", VA = "0x2943D70")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x2943E40", Offset = "0x2943E40", VA = "0x2943E40")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x2943F50", Offset = "0x2943F50", VA = "0x2943F50")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x2943FA8", Offset = "0x2943FA8", VA = "0x2943FA8")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x2944000", Offset = "0x2944000", VA = "0x2944000")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x20001A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C2D0", Offset = "0x109C2D0")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x400080A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x60009B4")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60009B5")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x20001A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C2E0", Offset = "0x109C2E0")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x400080B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x60009B6")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60009B7")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x1A6B218", Offset = "0x1A6B218", VA = "0x1A6B218")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x1A6D570", Offset = "0x1A6D570", VA = "0x1A6D570")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x1A6DA50", Offset = "0x1A6DA50", VA = "0x1A6DA50")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x1A6E230", Offset = "0x1A6E230", VA = "0x1A6E230")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x1A6E7E8", Offset = "0x1A6E7E8", VA = "0x1A6E7E8")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x1A6F178", Offset = "0x1A6F178", VA = "0x1A6F178")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x1A70644", Offset = "0x1A70644", VA = "0x1A70644")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x1A6B6C4", Offset = "0x1A6B6C4", VA = "0x1A6B6C4")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x1A6C5C4", Offset = "0x1A6C5C4", VA = "0x1A6C5C4")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x1A70D34", Offset = "0x1A70D34", VA = "0x1A70D34")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x1A70F98", Offset = "0x1A70F98", VA = "0x1A70F98")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x1A72614", Offset = "0x1A72614", VA = "0x1A72614")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x1A728A0", Offset = "0x1A728A0", VA = "0x1A728A0")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x1A72918", Offset = "0x1A72918", VA = "0x1A72918")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x1A72AF4", Offset = "0x1A72AF4", VA = "0x1A72AF4")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x1A72C94", Offset = "0x1A72C94", VA = "0x1A72C94")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x600098E")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x600098F")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000990")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x1A72A84", Offset = "0x1A72A84", VA = "0x1A72A84")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x1A72E00", Offset = "0x1A72E00", VA = "0x1A72E00")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6000993")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6000994")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x1A72F0C", Offset = "0x1A72F0C", VA = "0x1A72F0C")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x1A72FEC", Offset = "0x1A72FEC", VA = "0x1A72FEC")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x1A730CC", Offset = "0x1A730CC", VA = "0x1A730CC")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public enum JsonToken
	{
		[Token(Token = "0x400080D")]
		None,
		[Token(Token = "0x400080E")]
		ObjectStart,
		[Token(Token = "0x400080F")]
		PropertyName,
		[Token(Token = "0x4000810")]
		ObjectEnd,
		[Token(Token = "0x4000811")]
		ArrayStart,
		[Token(Token = "0x4000812")]
		ArrayEnd,
		[Token(Token = "0x4000813")]
		Int,
		[Token(Token = "0x4000814")]
		Long,
		[Token(Token = "0x4000815")]
		Double,
		[Token(Token = "0x4000816")]
		String,
		[Token(Token = "0x4000817")]
		Boolean,
		[Token(Token = "0x4000818")]
		Null
	}
	[Token(Token = "0x20001AB")]
	public class JsonReader
	{
		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x1700015D")]
		public bool AllowComments
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x1A73FC8", Offset = "0x1A73FC8", VA = "0x1A73FC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x1A73FE4", Offset = "0x1A73FE4", VA = "0x1A73FE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0x1A74004", Offset = "0x1A74004", VA = "0x1A74004")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x1A74020", Offset = "0x1A74020", VA = "0x1A74020")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public bool EndOfInput
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x1A74040", Offset = "0x1A74040", VA = "0x1A74040")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000160")]
		public bool EndOfJson
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x1A74048", Offset = "0x1A74048", VA = "0x1A74048")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000161")]
		public JsonToken Token
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x1A74050", Offset = "0x1A74050", VA = "0x1A74050")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x17000162")]
		public object Value
		{
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x1A74058", Offset = "0x1A74058", VA = "0x1A74058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1A74060", Offset = "0x1A74060", VA = "0x1A74060")]
		static JsonReader()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1A72E98", Offset = "0x1A72E98", VA = "0x1A72E98")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x1A72C8C", Offset = "0x1A72C8C", VA = "0x1A72C8C")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x1A74748", Offset = "0x1A74748", VA = "0x1A74748")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x1A74064", Offset = "0x1A74064", VA = "0x1A74064")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1A74A14", Offset = "0x1A74A14", VA = "0x1A74A14")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x1A748E4", Offset = "0x1A748E4", VA = "0x1A748E4")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1A74B90", Offset = "0x1A74B90", VA = "0x1A74B90")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x1A74D30", Offset = "0x1A74D30", VA = "0x1A74D30")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x1A74EF4", Offset = "0x1A74EF4", VA = "0x1A74EF4")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x1A74F58", Offset = "0x1A74F58", VA = "0x1A74F58")]
		public void Close()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x1A701B0", Offset = "0x1A701B0", VA = "0x1A701B0")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001AC")]
	internal enum Condition
	{
		[Token(Token = "0x4000828")]
		InArray,
		[Token(Token = "0x4000829")]
		InObject,
		[Token(Token = "0x400082A")]
		NotAProperty,
		[Token(Token = "0x400082B")]
		Property,
		[Token(Token = "0x400082C")]
		Value
	}
	[Token(Token = "0x20001AD")]
	internal class WriterContext
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x29397A0", Offset = "0x29397A0", VA = "0x29397A0")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class JsonWriter
	{
		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x17000163")]
		public int IndentValue
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x1A74FBC", Offset = "0x1A74FBC", VA = "0x1A74FBC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x1A74FC4", Offset = "0x1A74FC4", VA = "0x1A74FC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public bool PrettyPrint
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x1A74FD8", Offset = "0x1A74FD8", VA = "0x1A74FD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D0")]
			[Address(RVA = "0x1A74FE0", Offset = "0x1A74FE0", VA = "0x1A74FE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x1A74FEC", Offset = "0x1A74FEC", VA = "0x1A74FEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		public bool Validate
		{
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x1A74FF4", Offset = "0x1A74FF4", VA = "0x1A74FF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0x1A74FFC", Offset = "0x1A74FFC", VA = "0x1A74FFC")]
			set
			{
			}
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1A75008", Offset = "0x1A75008", VA = "0x1A75008")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x1A6B604", Offset = "0x1A6B604", VA = "0x1A6B604")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x1A75194", Offset = "0x1A75194", VA = "0x1A75194")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1A6AE04", Offset = "0x1A6AE04", VA = "0x1A6AE04")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x1A75204", Offset = "0x1A75204", VA = "0x1A75204")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x1A75064", Offset = "0x1A75064", VA = "0x1A75064")]
		private void Init()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x1A753C8", Offset = "0x1A753C8", VA = "0x1A753C8")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x1A75450", Offset = "0x1A75450", VA = "0x1A75450")]
		private void Indent()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x1A75468", Offset = "0x1A75468", VA = "0x1A75468")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x1A75500", Offset = "0x1A75500", VA = "0x1A75500")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x1A75508", Offset = "0x1A75508", VA = "0x1A75508")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x1A755A0", Offset = "0x1A755A0", VA = "0x1A755A0")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x1A758AC", Offset = "0x1A758AC", VA = "0x1A758AC")]
		private void Unindent()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x1A758C4", Offset = "0x1A758C4", VA = "0x1A758C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x1A727A4", Offset = "0x1A727A4", VA = "0x1A727A4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x1A6A180", Offset = "0x1A6A180", VA = "0x1A6A180")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1A75930", Offset = "0x1A75930", VA = "0x1A75930")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x1A6A224", Offset = "0x1A6A224", VA = "0x1A6A224")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1A6A374", Offset = "0x1A6A374", VA = "0x1A6A374")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x1A6A45C", Offset = "0x1A6A45C", VA = "0x1A6A45C")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x1A6A0E8", Offset = "0x1A6A0E8", VA = "0x1A6A0E8")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x1A7252C", Offset = "0x1A7252C", VA = "0x1A7252C")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1A6A63C", Offset = "0x1A6A63C", VA = "0x1A6A63C")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1A6A544", Offset = "0x1A6A544", VA = "0x1A6A544")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1A6A968", Offset = "0x1A6A968", VA = "0x1A6A968")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1A6A740", Offset = "0x1A6A740", VA = "0x1A6A740")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x1A6A838", Offset = "0x1A6A838", VA = "0x1A6A838")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x20001AF")]
	internal class FsmContext
	{
		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x17736A4", Offset = "0x17736A4", VA = "0x17736A4")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	internal class Lexer
	{
		[Token(Token = "0x20001B1")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x17000167")]
		public bool AllowComments
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x1C2C97C", Offset = "0x1C2C97C", VA = "0x1C2C97C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x1C2C984", Offset = "0x1C2C984", VA = "0x1C2C984")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x1C2C990", Offset = "0x1C2C990", VA = "0x1C2C990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x1C2C998", Offset = "0x1C2C998", VA = "0x1C2C998")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public bool EndOfInput
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x1C2C9A4", Offset = "0x1C2C9A4", VA = "0x1C2C9A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016A")]
		public int Token
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x1C2C9AC", Offset = "0x1C2C9AC", VA = "0x1C2C9AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016B")]
		public string StringValue
		{
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x1C2C9B4", Offset = "0x1C2C9B4", VA = "0x1C2C9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x1C2C9BC", Offset = "0x1C2C9BC", VA = "0x1C2C9BC")]
		static Lexer()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1C2D5D4", Offset = "0x1C2D5D4", VA = "0x1C2D5D4")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1C2D6D0", Offset = "0x1C2D6D0", VA = "0x1C2D6D0")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1C2C9C0", Offset = "0x1C2C9C0", VA = "0x1C2C9C0")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x1C2D74C", Offset = "0x1C2D74C", VA = "0x1C2D74C")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x1C2D848", Offset = "0x1C2D848", VA = "0x1C2D848")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x1C2DA58", Offset = "0x1C2DA58", VA = "0x1C2DA58")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1C2DB00", Offset = "0x1C2DB00", VA = "0x1C2DB00")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x1C2DC40", Offset = "0x1C2DC40", VA = "0x1C2DC40")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x1C2DD40", Offset = "0x1C2DD40", VA = "0x1C2DD40")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x1C2DDC4", Offset = "0x1C2DDC4", VA = "0x1C2DDC4")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x1C2DEC0", Offset = "0x1C2DEC0", VA = "0x1C2DEC0")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1C2DF58", Offset = "0x1C2DF58", VA = "0x1C2DF58")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1C2E018", Offset = "0x1C2E018", VA = "0x1C2E018")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1C2E088", Offset = "0x1C2E088", VA = "0x1C2E088")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1C2E0F8", Offset = "0x1C2E0F8", VA = "0x1C2E0F8")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x1C2E168", Offset = "0x1C2E168", VA = "0x1C2E168")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1C2E1D8", Offset = "0x1C2E1D8", VA = "0x1C2E1D8")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1C2E248", Offset = "0x1C2E248", VA = "0x1C2E248")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1C2E2B8", Offset = "0x1C2E2B8", VA = "0x1C2E2B8")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1C2E328", Offset = "0x1C2E328", VA = "0x1C2E328")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1C2E398", Offset = "0x1C2E398", VA = "0x1C2E398")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1C2E408", Offset = "0x1C2E408", VA = "0x1C2E408")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1C2E478", Offset = "0x1C2E478", VA = "0x1C2E478")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1C2E524", Offset = "0x1C2E524", VA = "0x1C2E524")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1C2E594", Offset = "0x1C2E594", VA = "0x1C2E594")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x1C2E6DC", Offset = "0x1C2E6DC", VA = "0x1C2E6DC")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1C2E868", Offset = "0x1C2E868", VA = "0x1C2E868")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1C2E914", Offset = "0x1C2E914", VA = "0x1C2E914")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1C2E98C", Offset = "0x1C2E98C", VA = "0x1C2E98C")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1C2EA0C", Offset = "0x1C2EA0C", VA = "0x1C2EA0C")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x1C2EA78", Offset = "0x1C2EA78", VA = "0x1C2EA78")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x1C2EAE4", Offset = "0x1C2EAE4", VA = "0x1C2EAE4")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1C2DA20", Offset = "0x1C2DA20", VA = "0x1C2DA20")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x1C2EB60", Offset = "0x1C2EB60", VA = "0x1C2EB60")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1C2EB94", Offset = "0x1C2EB94", VA = "0x1C2EB94")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1C2DC34", Offset = "0x1C2DC34", VA = "0x1C2DC34")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	internal enum ParserToken
	{
		[Token(Token = "0x4000850")]
		None = 65536,
		[Token(Token = "0x4000851")]
		Number,
		[Token(Token = "0x4000852")]
		True,
		[Token(Token = "0x4000853")]
		False,
		[Token(Token = "0x4000854")]
		Null,
		[Token(Token = "0x4000855")]
		CharSeq,
		[Token(Token = "0x4000856")]
		Char,
		[Token(Token = "0x4000857")]
		Text,
		[Token(Token = "0x4000858")]
		Object,
		[Token(Token = "0x4000859")]
		ObjectPrime,
		[Token(Token = "0x400085A")]
		Pair,
		[Token(Token = "0x400085B")]
		PairRest,
		[Token(Token = "0x400085C")]
		Array,
		[Token(Token = "0x400085D")]
		ArrayPrime,
		[Token(Token = "0x400085E")]
		Value,
		[Token(Token = "0x400085F")]
		ValueRest,
		[Token(Token = "0x4000860")]
		String,
		[Token(Token = "0x4000861")]
		End,
		[Token(Token = "0x4000862")]
		Epsilon
	}
}
namespace Assets.UserReporting.Scripts.Plugin
{
	[Token(Token = "0x20001B3")]
	public interface ILogListener
	{
		[Token(Token = "0x6000A20")]
		void ReceiveLogMessage(string logString, string stackTrace, LogType logType);
	}
	[Token(Token = "0x20001B4")]
	public static class LogDispatcher
	{
		[Serializable]
		[Token(Token = "0x20001B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C2F0", Offset = "0x109C2F0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x2945100", Offset = "0x2945100", VA = "0x2945100")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x2945108", Offset = "0x2945108", VA = "0x2945108")]
			internal void <.cctor>b__0_0(string logString, string stackTrace, LogType logType)
			{
			}
		}

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<WeakReference> listeners;

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1C31F78", Offset = "0x1C31F78", VA = "0x1C31F78")]
		static LogDispatcher()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1C3208C", Offset = "0x1C3208C", VA = "0x1C3208C")]
		public static void Register(ILogListener logListener)
		{
		}
	}
}
namespace StylizedWater
{
	[Token(Token = "0x20001B6")]
	public static class GerstnerWaveDisplacement
	{
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x177444C", Offset = "0x177444C", VA = "0x177444C")]
		private static Vector3 GerstnerWave(Vector3 position, float steepness, float wavelength, float speed, float direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x177453C", Offset = "0x177453C", VA = "0x177453C")]
		public static Vector3 GetWaveDisplacement(Vector3 position, float steepness, float wavelength, float speed, float[] directions)
		{
			return default(Vector3);
		}
	}
}
namespace Unity.Screenshots
{
	[Token(Token = "0x20001B7")]
	public static class Downsampler
	{
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x176FA54", Offset = "0x176FA54", VA = "0x176FA54")]
		public static byte[] Downsample(byte[] dataRgba, int stride, int maximumWidth, int maximumHeight, out int downsampledStride)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B8")]
	public static class PngEncoder
	{
		[Token(Token = "0x20001B9")]
		public class Crc32
		{
			[Serializable]
			[Token(Token = "0x20001BA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C310", Offset = "0x109C310")]
			private sealed class <>c
			{
				[Token(Token = "0x4000868")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4000869")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<int, uint> <>9__1_0;

				[Token(Token = "0x6000A3A")]
				[Address(RVA = "0x2293FE0", Offset = "0x2293FE0", VA = "0x2293FE0")]
				public <>c()
				{
				}

				[Token(Token = "0x6000A3B")]
				[Address(RVA = "0x2293FE8", Offset = "0x2293FE8", VA = "0x2293FE8")]
				internal uint <.ctor>b__1_0(int i)
				{
					return default(uint);
				}
			}

			[Token(Token = "0x4000866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static uint generator;

			[Token(Token = "0x4000867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly uint[] checksumTable;

			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x294676C", Offset = "0x294676C", VA = "0x294676C")]
			public Crc32()
			{
			}

			[Token(Token = "0x6000A36")]
			public uint Calculate<T>(IEnumerable<T> byteStream)
			{
				return default(uint);
			}

			[Token(Token = "0x6000A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A77A4", Offset = "0x10A77A4")]
			private uint <Calculate>b__3_0<T>(uint checksumRegister, T currentByte)
			{
				return default(uint);
			}
		}

		[Token(Token = "0x20001BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C320", Offset = "0x109C320")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400086A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] dataRgba;

			[Token(Token = "0x400086B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int stride;

			[Token(Token = "0x400086C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception, byte[]> callback;

			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x29465FC", Offset = "0x29465FC", VA = "0x29465FC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x2946604", Offset = "0x2946604", VA = "0x2946604")]
			internal void <EncodeAsync>b__0(object state)
			{
			}
		}

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Crc32 crc32;

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1E43B1C", Offset = "0x1E43B1C", VA = "0x1E43B1C")]
		static PngEncoder()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1E43B94", Offset = "0x1E43B94", VA = "0x1E43B94")]
		private static uint Adler32(byte[] bytes)
		{
			return default(uint);
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x1E43C34", Offset = "0x1E43C34", VA = "0x1E43C34")]
		private static void AppendByte(this byte[] data, ref int position, byte value)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x1E43C7C", Offset = "0x1E43C7C", VA = "0x1E43C7C")]
		private static void AppendBytes(this byte[] data, ref int position, byte[] value)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1E43D50", Offset = "0x1E43D50", VA = "0x1E43D50")]
		private static void AppendChunk(this byte[] data, ref int position, string chunkType, byte[] chunkData)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1E43F2C", Offset = "0x1E43F2C", VA = "0x1E43F2C")]
		private static void AppendInt(this byte[] data, ref int position, int value)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1E44100", Offset = "0x1E44100", VA = "0x1E44100")]
		private static void AppendUInt(this byte[] data, ref int position, uint value)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1E441D0", Offset = "0x1E441D0", VA = "0x1E441D0")]
		private static byte[] Compress(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x1E4453C", Offset = "0x1E4453C", VA = "0x1E4453C")]
		public static byte[] Encode(byte[] dataRgba, int stride)
		{
			return null;
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x1E44A24", Offset = "0x1E44A24", VA = "0x1E44A24")]
		public static void EncodeAsync(byte[] dataRgba, int stride, Action<Exception, byte[]> callback)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x1E43FFC", Offset = "0x1E43FFC", VA = "0x1E43FFC")]
		private static uint GetChunkCrc(byte[] chunkTypeBytes, byte[] chunkData)
		{
			return default(uint);
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1E43E54", Offset = "0x1E43E54", VA = "0x1E43E54")]
		private static byte[] GetChunkTypeBytes(string value)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BC")]
	public class ScreenshotManager
	{
		[Token(Token = "0x20001BD")]
		private class ScreenshotOperation
		{
			[Token(Token = "0x4000870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F2C", Offset = "0x10A2F2C")]
			private Action<int, byte[]> <Callback>k__BackingField;

			[Token(Token = "0x4000871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F3C", Offset = "0x10A2F3C")]
			private byte[] <Data>k__BackingField;

			[Token(Token = "0x4000872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F4C", Offset = "0x10A2F4C")]
			private int <FrameNumber>k__BackingField;

			[Token(Token = "0x4000873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F5C", Offset = "0x10A2F5C")]
			private bool <IsAwaiting>k__BackingField;

			[Token(Token = "0x4000874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F6C", Offset = "0x10A2F6C")]
			private bool <IsComplete>k__BackingField;

			[Token(Token = "0x4000875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F7C", Offset = "0x10A2F7C")]
			private bool <IsInUse>k__BackingField;

			[Token(Token = "0x4000876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F8C", Offset = "0x10A2F8C")]
			private int <MaximumHeight>k__BackingField;

			[Token(Token = "0x4000877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2F9C", Offset = "0x10A2F9C")]
			private int <MaximumWidth>k__BackingField;

			[Token(Token = "0x4000878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2FAC", Offset = "0x10A2FAC")]
			private object <Source>k__BackingField;

			[Token(Token = "0x1700016C")]
			public Action<int, byte[]> Callback
			{
				[Token(Token = "0x6000A43")]
				[Address(RVA = "0x228D620", Offset = "0x228D620", VA = "0x228D620")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A77B4", Offset = "0x10A77B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000A44")]
				[Address(RVA = "0x228D628", Offset = "0x228D628", VA = "0x228D628")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A77C4", Offset = "0x10A77C4")]
				set
				{
				}
			}

			[Token(Token = "0x1700016D")]
			public byte[] Data
			{
				[Token(Token = "0x6000A45")]
				[Address(RVA = "0x228D630", Offset = "0x228D630", VA = "0x228D630")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A77D4", Offset = "0x10A77D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000A46")]
				[Address(RVA = "0x228D638", Offset = "0x228D638", VA = "0x228D638")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A77E4", Offset = "0x10A77E4")]
				set
				{
				}
			}

			[Token(Token = "0x1700016E")]
			public int FrameNumber
			{
				[Token(Token = "0x6000A47")]
				[Address(RVA = "0x228D640", Offset = "0x228D640", VA = "0x228D640")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A77F4", Offset = "0x10A77F4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000A48")]
				[Address(RVA = "0x228D648", Offset = "0x228D648", VA = "0x228D648")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7804", Offset = "0x10A7804")]
				set
				{
				}
			}

			[Token(Token = "0x1700016F")]
			public bool IsAwaiting
			{
				[Token(Token = "0x6000A49")]
				[Address(RVA = "0x228D650", Offset = "0x228D650", VA = "0x228D650")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7814", Offset = "0x10A7814")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000A4A")]
				[Address(RVA = "0x228D658", Offset = "0x228D658", VA = "0x228D658")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7824", Offset = "0x10A7824")]
				set
				{
				}
			}

			[Token(Token = "0x17000170")]
			public bool IsComplete
			{
				[Token(Token = "0x6000A4B")]
				[Address(RVA = "0x228D664", Offset = "0x228D664", VA = "0x228D664")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7834", Offset = "0x10A7834")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000A4C")]
				[Address(RVA = "0x228D66C", Offset = "0x228D66C", VA = "0x228D66C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7844", Offset = "0x10A7844")]
				set
				{
				}
			}

			[Token(Token = "0x17000171")]
			public bool IsInUse
			{
				[Token(Token = "0x6000A4D")]
				[Address(RVA = "0x228D678", Offset = "0x228D678", VA = "0x228D678")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7854", Offset = "0x10A7854")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000A4E")]
				[Address(RVA = "0x228D680", Offset = "0x228D680", VA = "0x228D680")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7864", Offset = "0x10A7864")]
				set
				{
				}
			}

			[Token(Token = "0x17000172")]
			public int MaximumHeight
			{
				[Token(Token = "0x6000A4F")]
				[Address(RVA = "0x228D68C", Offset = "0x228D68C", VA = "0x228D68C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7874", Offset = "0x10A7874")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000A50")]
				[Address(RVA = "0x228D694", Offset = "0x228D694", VA = "0x228D694")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7884", Offset = "0x10A7884")]
				set
				{
				}
			}

			[Token(Token = "0x17000173")]
			public int MaximumWidth
			{
				[Token(Token = "0x6000A51")]
				[Address(RVA = "0x228D69C", Offset = "0x228D69C", VA = "0x228D69C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7894", Offset = "0x10A7894")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000A52")]
				[Address(RVA = "0x228D6A4", Offset = "0x228D6A4", VA = "0x228D6A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A78A4", Offset = "0x10A78A4")]
				set
				{
				}
			}

			[Token(Token = "0x17000174")]
			public object Source
			{
				[Token(Token = "0x6000A53")]
				[Address(RVA = "0x228D6AC", Offset = "0x228D6AC", VA = "0x228D6AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A78B4", Offset = "0x10A78B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000A54")]
				[Address(RVA = "0x228D6B4", Offset = "0x228D6B4", VA = "0x228D6B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A78C4", Offset = "0x10A78C4")]
				set
				{
				}
			}

			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x228D6BC", Offset = "0x228D6BC", VA = "0x228D6BC")]
			public void Use()
			{
			}

			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x228D714", Offset = "0x228D714", VA = "0x228D714")]
			public ScreenshotOperation()
			{
			}
		}

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<byte[], object> screenshotCallbackDelegate;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ScreenshotOperation> screenshotOperations;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ScreenshotRecorder screenshotRecorder;

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x18C01E8", Offset = "0x18C01E8", VA = "0x18C01E8")]
		public ScreenshotManager()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x18C038C", Offset = "0x18C038C", VA = "0x18C038C")]
		private ScreenshotOperation GetScreenshotOperation()
		{
			return null;
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x18C0530", Offset = "0x18C0530", VA = "0x18C0530")]
		public void OnEndOfFrame()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x18C0A40", Offset = "0x18C0A40", VA = "0x18C0A40")]
		private void ScreenshotCallback(byte[] data, object state)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x18C0AE4", Offset = "0x18C0AE4", VA = "0x18C0AE4")]
		public void TakeScreenshot(object source, int frameNumber, int maximumWidth, int maximumHeight, Action<int, byte[]> callback)
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class ScreenshotRecorder
	{
		[Token(Token = "0x20001BF")]
		private class ScreenshotOperation
		{
			[Token(Token = "0x400087B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WaitCallback EncodeCallbackDelegate;

			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<AsyncGPUReadbackRequest> ScreenshotCallbackDelegate;

			[Token(Token = "0x400087D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2FBC", Offset = "0x10A2FBC")]
			private Action<byte[], object> <Callback>k__BackingField;

			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2FCC", Offset = "0x10A2FCC")]
			private int <Height>k__BackingField;

			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2FDC", Offset = "0x10A2FDC")]
			private int <Identifier>k__BackingField;

			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2FEC", Offset = "0x10A2FEC")]
			private bool <IsInUse>k__BackingField;

			[Token(Token = "0x4000881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A2FFC", Offset = "0x10A2FFC")]
			private int <MaximumHeight>k__BackingField;

			[Token(Token = "0x4000882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A300C", Offset = "0x10A300C")]
			private int <MaximumWidth>k__BackingField;

			[Token(Token = "0x4000883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A301C", Offset = "0x10A301C")]
			private NativeArray<byte> <NativeData>k__BackingField;

			[Token(Token = "0x4000884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A302C", Offset = "0x10A302C")]
			private Texture <Source>k__BackingField;

			[Token(Token = "0x4000885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A303C", Offset = "0x10A303C")]
			private object <State>k__BackingField;

			[Token(Token = "0x4000886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A304C", Offset = "0x10A304C")]
			private ScreenshotType <Type>k__BackingField;

			[Token(Token = "0x4000887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A305C", Offset = "0x10A305C")]
			private int <Width>k__BackingField;

			[Token(Token = "0x17000175")]
			public Action<byte[], object> Callback
			{
				[Token(Token = "0x6000A5F")]
				[Address(RVA = "0x228D810", Offset = "0x228D810", VA = "0x228D810")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A78D4", Offset = "0x10A78D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000A60")]
				[Address(RVA = "0x228D818", Offset = "0x228D818", VA = "0x228D818")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A78E4", Offset = "0x10A78E4")]
				set
				{
				}
			}

			[Token(Token = "0x17000176")]
			public int Height
			{
				[Token(Token = "0x6000A61")]
				[Address(RVA = "0x228D820", Offset = "0x228D820", VA = "0x228D820")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A78F4", Offset = "0x10A78F4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000A62")]
				[Address(RVA = "0x228D828", Offset = "0x228D828", VA = "0x228D828")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7904", Offset = "0x10A7904")]
				set
				{
				}
			}

			[Token(Token = "0x17000177")]
			public int Identifier
			{
				[Token(Token = "0x6000A63")]
				[Address(RVA = "0x228D830", Offset = "0x228D830", VA = "0x228D830")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7914", Offset = "0x10A7914")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000A64")]
				[Address(RVA = "0x228D838", Offset = "0x228D838", VA = "0x228D838")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7924", Offset = "0x10A7924")]
				set
				{
				}
			}

			[Token(Token = "0x17000178")]
			public bool IsInUse
			{
				[Token(Token = "0x6000A65")]
				[Address(RVA = "0x228D840", Offset = "0x228D840", VA = "0x228D840")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7934", Offset = "0x10A7934")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000A66")]
				[Address(RVA = "0x228D848", Offset = "0x228D848", VA = "0x228D848")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7944", Offset = "0x10A7944")]
				set
				{
				}
			}

			[Token(Token = "0x17000179")]
			public int MaximumHeight
			{
				[Token(Token = "0x6000A67")]
				[Address(RVA = "0x228D854", Offset = "0x228D854", VA = "0x228D854")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7954", Offset = "0x10A7954")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000A68")]
				[Address(RVA = "0x228D85C", Offset = "0x228D85C", VA = "0x228D85C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7964", Offset = "0x10A7964")]
				set
				{
				}
			}

			[Token(Token = "0x1700017A")]
			public int MaximumWidth
			{
				[Token(Token = "0x6000A69")]
				[Address(RVA = "0x228D864", Offset = "0x228D864", VA = "0x228D864")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7974", Offset = "0x10A7974")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000A6A")]
				[Address(RVA = "0x228D86C", Offset = "0x228D86C", VA = "0x228D86C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7984", Offset = "0x10A7984")]
				set
				{
				}
			}

			[Token(Token = "0x1700017B")]
			public NativeArray<byte> NativeData
			{
				[Token(Token = "0x6000A6B")]
				[Address(RVA = "0x228D874", Offset = "0x228D874", VA = "0x228D874")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7994", Offset = "0x10A7994")]
				get
				{
					return default(NativeArray<byte>);
				}
				[Token(Token = "0x6000A6C")]
				[Address(RVA = "0x228D880", Offset = "0x228D880", VA = "0x228D880")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A79A4", Offset = "0x10A79A4")]
				set
				{
				}
			}

			[Token(Token = "0x1700017C")]
			public Texture Source
			{
				[Token(Token = "0x6000A6D")]
				[Address(RVA = "0x228D888", Offset = "0x228D888", VA = "0x228D888")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A79B4", Offset = "0x10A79B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000A6E")]
				[Address(RVA = "0x228D890", Offset = "0x228D890", VA = "0x228D890")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A79C4", Offset = "0x10A79C4")]
				set
				{
				}
			}

			[Token(Token = "0x1700017D")]
			public object State
			{
				[Token(Token = "0x6000A6F")]
				[Address(RVA = "0x228D898", Offset = "0x228D898", VA = "0x228D898")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A79D4", Offset = "0x10A79D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000A70")]
				[Address(RVA = "0x228D8A0", Offset = "0x228D8A0", VA = "0x228D8A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A79E4", Offset = "0x10A79E4")]
				set
				{
				}
			}

			[Token(Token = "0x1700017E")]
			public ScreenshotType Type
			{
				[Token(Token = "0x6000A71")]
				[Address(RVA = "0x228D8A8", Offset = "0x228D8A8", VA = "0x228D8A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A79F4", Offset = "0x10A79F4")]
				get
				{
					return default(ScreenshotType);
				}
				[Token(Token = "0x6000A72")]
				[Address(RVA = "0x228D8B0", Offset = "0x228D8B0", VA = "0x228D8B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A04", Offset = "0x10A7A04")]
				set
				{
				}
			}

			[Token(Token = "0x1700017F")]
			public int Width
			{
				[Token(Token = "0x6000A73")]
				[Address(RVA = "0x228D8B8", Offset = "0x228D8B8", VA = "0x228D8B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A14", Offset = "0x10A7A14")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000A74")]
				[Address(RVA = "0x228D8C0", Offset = "0x228D8C0", VA = "0x228D8C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A24", Offset = "0x10A7A24")]
				set
				{
				}
			}

			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x228D71C", Offset = "0x228D71C", VA = "0x228D71C")]
			public ScreenshotOperation()
			{
			}

			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x228D8C8", Offset = "0x228D8C8", VA = "0x228D8C8")]
			private void EncodeCallback(object state)
			{
			}

			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x228D9F8", Offset = "0x228D9F8", VA = "0x228D9F8")]
			private void SavePngToDisk(byte[] byteData)
			{
			}

			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x228DAE4", Offset = "0x228DAE4", VA = "0x228DAE4")]
			private void ScreenshotCallback(AsyncGPUReadbackRequest request)
			{
			}
		}

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int nextIdentifier;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<ScreenshotOperation> operationPool;

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x18C0308", Offset = "0x18C0308", VA = "0x18C0308")]
		public ScreenshotRecorder()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x18C0B50", Offset = "0x18C0B50", VA = "0x18C0B50")]
		private ScreenshotOperation GetOperation()
		{
			return null;
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x18C08D8", Offset = "0x18C08D8", VA = "0x18C08D8")]
		public void Screenshot(int maximumWidth, int maximumHeight, ScreenshotType type, Action<byte[], object> callback, object state)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x18C093C", Offset = "0x18C093C", VA = "0x18C093C")]
		public void Screenshot(Camera source, int maximumWidth, int maximumHeight, ScreenshotType type, Action<byte[], object> callback, object state)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x18C0A38", Offset = "0x18C0A38", VA = "0x18C0A38")]
		public void Screenshot(RenderTexture source, int maximumWidth, int maximumHeight, ScreenshotType type, Action<byte[], object> callback, object state)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x18C0A3C", Offset = "0x18C0A3C", VA = "0x18C0A3C")]
		public void Screenshot(Texture2D source, int maximumWidth, int maximumHeight, ScreenshotType type, Action<byte[], object> callback, object state)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x18C0CE8", Offset = "0x18C0CE8", VA = "0x18C0CE8")]
		private void ScreenshotInternal(Texture source, int maximumWidth, int maximumHeight, ScreenshotType type, Action<byte[], object> callback, object state)
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public enum ScreenshotType
	{
		[Token(Token = "0x4000889")]
		Raw,
		[Token(Token = "0x400088A")]
		Png
	}
}
namespace Unity.Cloud
{
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x109C330", Offset = "0x109C330")]
	public class CyclicalList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x20001C2")]
		private struct Enumerator : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400088E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int currentIndex;

			[Token(Token = "0x400088F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CyclicalList<T> list;

			[Token(Token = "0x17000184")]
			public T Current
			{
				[Token(Token = "0x6000A8B")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000185")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A8C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A8A")]
			public Enumerator(CyclicalList<T> list)
			{
			}

			[Token(Token = "0x6000A8D")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6000A8E")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A8F")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int count;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] items;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int nextPointer;

		[Token(Token = "0x17000180")]
		public int Capacity
		{
			[Token(Token = "0x6000A79")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000181")]
		public int Count
		{
			[Token(Token = "0x6000A7A")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000182")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000A7B")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000183")]
		public T Item
		{
			[Token(Token = "0x6000A7C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000A7D")]
			set
			{
			}
		}

		[Token(Token = "0x6000A78")]
		public CyclicalList(int capacity)
		{
		}

		[Token(Token = "0x6000A7E")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000A7F")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000A80")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A81")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000A82")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A83")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A84")]
		public T GetNextEviction()
		{
			return (T)null;
		}

		[Token(Token = "0x6000A85")]
		private int GetPointer(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000A86")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000A87")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000A88")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A89")]
		public void RemoveAt(int index)
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public static class Preconditions
	{
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x1E4BA10", Offset = "0x1E4BA10", VA = "0x1E4BA10")]
		public static void ArgumentIsLessThanOrEqualToLength(object value, int length, string argumentName)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1E4BAC8", Offset = "0x1E4BAC8", VA = "0x1E4BAC8")]
		public static void ArgumentNotNullOrWhitespace(object value, string argumentName)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class SerializableException
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A306C", Offset = "0x10A306C")]
		private string <DetailedProblemIdentifier>k__BackingField;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A307C", Offset = "0x10A307C")]
		private string <FullText>k__BackingField;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A308C", Offset = "0x10A308C")]
		private SerializableException <InnerException>k__BackingField;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A309C", Offset = "0x10A309C")]
		private string <Message>k__BackingField;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A30AC", Offset = "0x10A30AC")]
		private string <ProblemIdentifier>k__BackingField;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A30BC", Offset = "0x10A30BC")]
		private List<SerializableStackFrame> <StackTrace>k__BackingField;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A30CC", Offset = "0x10A30CC")]
		private string <Type>k__BackingField;

		[Token(Token = "0x17000186")]
		public string DetailedProblemIdentifier
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x18C1E18", Offset = "0x18C1E18", VA = "0x18C1E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A34", Offset = "0x10A7A34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x18C1E20", Offset = "0x18C1E20", VA = "0x18C1E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A44", Offset = "0x10A7A44")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public string FullText
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x18C1E28", Offset = "0x18C1E28", VA = "0x18C1E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A54", Offset = "0x10A7A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x18C1E30", Offset = "0x18C1E30", VA = "0x18C1E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A64", Offset = "0x10A7A64")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public SerializableException InnerException
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x18C1E38", Offset = "0x18C1E38", VA = "0x18C1E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A74", Offset = "0x10A7A74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x18C1E40", Offset = "0x18C1E40", VA = "0x18C1E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A84", Offset = "0x10A7A84")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public string Message
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0x18C1E48", Offset = "0x18C1E48", VA = "0x18C1E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7A94", Offset = "0x10A7A94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0x18C1E50", Offset = "0x18C1E50", VA = "0x18C1E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7AA4", Offset = "0x10A7AA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public string ProblemIdentifier
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x18C1E58", Offset = "0x18C1E58", VA = "0x18C1E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7AB4", Offset = "0x10A7AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0x18C1E60", Offset = "0x18C1E60", VA = "0x18C1E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7AC4", Offset = "0x10A7AC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public List<SerializableStackFrame> StackTrace
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x18C1E68", Offset = "0x18C1E68", VA = "0x18C1E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7AD4", Offset = "0x10A7AD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x18C1E70", Offset = "0x18C1E70", VA = "0x18C1E70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7AE4", Offset = "0x10A7AE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public string Type
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x18C1E78", Offset = "0x18C1E78", VA = "0x18C1E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7AF4", Offset = "0x10A7AF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x18C1E80", Offset = "0x18C1E80", VA = "0x18C1E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B04", Offset = "0x10A7B04")]
			set
			{
			}
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x18C17F0", Offset = "0x18C17F0", VA = "0x18C17F0")]
		public SerializableException()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x18C17F8", Offset = "0x18C17F8", VA = "0x18C17F8")]
		public SerializableException(Exception exception)
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class SerializableStackFrame
	{
		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A30DC", Offset = "0x10A30DC")]
		private string <DeclaringType>k__BackingField;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A30EC", Offset = "0x10A30EC")]
		private int <FileColumn>k__BackingField;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A30FC", Offset = "0x10A30FC")]
		private int <FileLine>k__BackingField;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A310C", Offset = "0x10A310C")]
		private string <FileName>k__BackingField;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A311C", Offset = "0x10A311C")]
		private string <Method>k__BackingField;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A312C", Offset = "0x10A312C")]
		private string <MethodName>k__BackingField;

		[Token(Token = "0x1700018D")]
		public string DeclaringType
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x18C1E90", Offset = "0x18C1E90", VA = "0x18C1E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B14", Offset = "0x10A7B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x18C1E98", Offset = "0x18C1E98", VA = "0x18C1E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B24", Offset = "0x10A7B24")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public int FileColumn
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x18C1EA0", Offset = "0x18C1EA0", VA = "0x18C1EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B34", Offset = "0x10A7B34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x18C1EA8", Offset = "0x18C1EA8", VA = "0x18C1EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B44", Offset = "0x10A7B44")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public int FileLine
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x18C1EB0", Offset = "0x18C1EB0", VA = "0x18C1EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B54", Offset = "0x10A7B54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x18C1EB8", Offset = "0x18C1EB8", VA = "0x18C1EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B64", Offset = "0x10A7B64")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public string FileName
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x18C1EC0", Offset = "0x18C1EC0", VA = "0x18C1EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B74", Offset = "0x10A7B74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x18C1EC8", Offset = "0x18C1EC8", VA = "0x18C1EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B84", Offset = "0x10A7B84")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public string Method
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x18C1ED0", Offset = "0x18C1ED0", VA = "0x18C1ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7B94", Offset = "0x10A7B94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x18C1ED8", Offset = "0x18C1ED8", VA = "0x18C1ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7BA4", Offset = "0x10A7BA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public string MethodName
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x18C1EE0", Offset = "0x18C1EE0", VA = "0x18C1EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7BB4", Offset = "0x10A7BB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x18C1EE8", Offset = "0x18C1EE8", VA = "0x18C1EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7BC4", Offset = "0x10A7BC4")]
			set
			{
			}
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x18C1E88", Offset = "0x18C1E88", VA = "0x18C1E88")]
		public SerializableStackFrame()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x18C1CA4", Offset = "0x18C1CA4", VA = "0x18C1CA4")]
		public SerializableStackFrame(StackFrame stackFrame)
		{
		}
	}
}
namespace Unity.Cloud.Authorization
{
	[Token(Token = "0x20001C6")]
	public enum LicenseLevel
	{
		[Token(Token = "0x400089E")]
		None = 0,
		[Token(Token = "0x400089F")]
		Personal = 10,
		[Token(Token = "0x40008A0")]
		Plus = 20,
		[Token(Token = "0x40008A1")]
		Pro = 30
	}
}
namespace Unity.Cloud.UserReporting
{
	[Token(Token = "0x20001C7")]
	public static class AttachmentExtensions
	{
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x193FB90", Offset = "0x193FB90", VA = "0x193FB90")]
		public static void AddJson(this List<UserReportAttachment> instance, string name, string fileName, string contents)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x193FC84", Offset = "0x193FC84", VA = "0x193FC84")]
		public static void AddText(this List<UserReportAttachment> instance, string name, string fileName, string contents)
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public static class PngHelper
	{
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1E44B08", Offset = "0x1E44B08", VA = "0x1E44B08")]
		public static int GetPngHeightFromBase64Data(string data)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x1E44CD4", Offset = "0x1E44CD4", VA = "0x1E44CD4")]
		public static int GetPngWidthFromBase64Data(string data)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x1E44BFC", Offset = "0x1E44BFC", VA = "0x1E44BFC")]
		private static byte[] Slice(byte[] source, int start, int end)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C9")]
	public class UserReport : UserReportPreview
	{
		[Token(Token = "0x20001CA")]
		private class UserReportMetricSorter : IComparer<UserReportMetric>
		{
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x228EF30", Offset = "0x228EF30", VA = "0x228EF30", Slot = "4")]
			public int Compare(UserReportMetric x, UserReportMetric y)
			{
				return default(int);
			}

			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x228EF44", Offset = "0x228EF44", VA = "0x228EF44")]
			public UserReportMetricSorter()
			{
			}
		}

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A313C", Offset = "0x10A313C")]
		private List<UserReportAttachment> <Attachments>k__BackingField;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A314C", Offset = "0x10A314C")]
		private List<UserReportMetric> <ClientMetrics>k__BackingField;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A315C", Offset = "0x10A315C")]
		private List<UserReportNamedValue> <DeviceMetadata>k__BackingField;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A316C", Offset = "0x10A316C")]
		private List<UserReportEvent> <Events>k__BackingField;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A317C", Offset = "0x10A317C")]
		private List<UserReportNamedValue> <Fields>k__BackingField;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A318C", Offset = "0x10A318C")]
		private List<UserReportMeasure> <Measures>k__BackingField;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A319C", Offset = "0x10A319C")]
		private List<UserReportScreenshot> <Screenshots>k__BackingField;

		[Token(Token = "0x17000193")]
		public List<UserReportAttachment> Attachments
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x1395724", Offset = "0x1395724", VA = "0x1395724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7BF4", Offset = "0x10A7BF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x139572C", Offset = "0x139572C", VA = "0x139572C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C04", Offset = "0x10A7C04")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public List<UserReportMetric> ClientMetrics
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x1395734", Offset = "0x1395734", VA = "0x1395734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C14", Offset = "0x10A7C14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x139573C", Offset = "0x139573C", VA = "0x139573C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C24", Offset = "0x10A7C24")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public List<UserReportNamedValue> DeviceMetadata
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x1395744", Offset = "0x1395744", VA = "0x1395744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C34", Offset = "0x10A7C34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x139574C", Offset = "0x139574C", VA = "0x139574C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C44", Offset = "0x10A7C44")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public List<UserReportEvent> Events
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x1395754", Offset = "0x1395754", VA = "0x1395754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C54", Offset = "0x10A7C54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x139575C", Offset = "0x139575C", VA = "0x139575C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C64", Offset = "0x10A7C64")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public List<UserReportNamedValue> Fields
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x1395764", Offset = "0x1395764", VA = "0x1395764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C74", Offset = "0x10A7C74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0x139576C", Offset = "0x139576C", VA = "0x139576C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C84", Offset = "0x10A7C84")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public List<UserReportMeasure> Measures
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x1395774", Offset = "0x1395774", VA = "0x1395774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7C94", Offset = "0x10A7C94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x139577C", Offset = "0x139577C", VA = "0x139577C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7CA4", Offset = "0x10A7CA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public List<UserReportScreenshot> Screenshots
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x1395784", Offset = "0x1395784", VA = "0x1395784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7CB4", Offset = "0x10A7CB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x139578C", Offset = "0x139578C", VA = "0x139578C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7CC4", Offset = "0x10A7CC4")]
			set
			{
			}
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1395454", Offset = "0x1395454", VA = "0x1395454")]
		public UserReport()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1395794", Offset = "0x1395794", VA = "0x1395794")]
		public UserReport Clone()
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1395A68", Offset = "0x1395A68", VA = "0x1395A68")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x1396234", Offset = "0x1396234", VA = "0x1396234")]
		public void Fix()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1396534", Offset = "0x1396534", VA = "0x1396534")]
		public string GetDimensionsString()
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x13966A0", Offset = "0x13966A0", VA = "0x13966A0")]
		public void RemoveScreenshots(int maximumWidth, int maximumHeight, int totalBytes, int ignoreCount)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1396808", Offset = "0x1396808", VA = "0x1396808")]
		public UserReportPreview ToPreview()
		{
			return null;
		}
	}
	[Token(Token = "0x20001CB")]
	public enum UserReportAppearanceHint
	{
		[Token(Token = "0x40008AA")]
		Normal,
		[Token(Token = "0x40008AB")]
		Landscape,
		[Token(Token = "0x40008AC")]
		Portrait,
		[Token(Token = "0x40008AD")]
		Large
	}
	[Token(Token = "0x20001CC")]
	public struct UserReportAttachment
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A31AC", Offset = "0x10A31AC")]
		private string <ContentType>k__BackingField;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A31BC", Offset = "0x10A31BC")]
		private string <DataBase64>k__BackingField;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A31CC", Offset = "0x10A31CC")]
		private string <DataIdentifier>k__BackingField;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A31DC", Offset = "0x10A31DC")]
		private string <FileName>k__BackingField;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A31EC", Offset = "0x10A31EC")]
		private string <Name>k__BackingField;

		[Token(Token = "0x1700019A")]
		public string ContentType
		{
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x1396A34", Offset = "0x1396A34", VA = "0x1396A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7CD4", Offset = "0x10A7CD4")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x1396A3C", Offset = "0x1396A3C", VA = "0x1396A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7D0C", Offset = "0x10A7D0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public string DataBase64
		{
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x1396A44", Offset = "0x1396A44", VA = "0x1396A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7D1C", Offset = "0x10A7D1C")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x1396A4C", Offset = "0x1396A4C", VA = "0x1396A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7D54", Offset = "0x10A7D54")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public string DataIdentifier
		{
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0x1396A54", Offset = "0x1396A54", VA = "0x1396A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7D64", Offset = "0x10A7D64")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x1396A5C", Offset = "0x1396A5C", VA = "0x1396A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7D9C", Offset = "0x10A7D9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public string FileName
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x1396A64", Offset = "0x1396A64", VA = "0x1396A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7DAC", Offset = "0x10A7DAC")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x1396A6C", Offset = "0x1396A6C", VA = "0x1396A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7DE4", Offset = "0x10A7DE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public string Name
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x1396A74", Offset = "0x1396A74", VA = "0x1396A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7DF4", Offset = "0x10A7DF4")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x1396A7C", Offset = "0x1396A7C", VA = "0x1396A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7E2C", Offset = "0x10A7E2C")]
			set
			{
			}
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1396960", Offset = "0x1396960", VA = "0x1396960")]
		public UserReportAttachment(string name, string fileName, string contentType, byte[] data)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public struct UserReportEvent
	{
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A31FC", Offset = "0x10A31FC")]
		private SerializableException <Exception>k__BackingField;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A320C", Offset = "0x10A320C")]
		private int <FrameNumber>k__BackingField;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A321C", Offset = "0x10A321C")]
		private UserReportEventLevel <Level>k__BackingField;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A322C", Offset = "0x10A322C")]
		private string <Message>k__BackingField;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A323C", Offset = "0x10A323C")]
		private string <StackTrace>k__BackingField;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A324C", Offset = "0x10A324C")]
		private DateTime <Timestamp>k__BackingField;

		[Token(Token = "0x1700019F")]
		public SerializableException Exception
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0x1396A84", Offset = "0x1396A84", VA = "0x1396A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7E3C", Offset = "0x10A7E3C")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0x1396A8C", Offset = "0x1396A8C", VA = "0x1396A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7E74", Offset = "0x10A7E74")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public int FrameNumber
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x1396A94", Offset = "0x1396A94", VA = "0x1396A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7E84", Offset = "0x10A7E84")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x1396A9C", Offset = "0x1396A9C", VA = "0x1396A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7EBC", Offset = "0x10A7EBC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public string FullMessage
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x1396AA4", Offset = "0x1396AA4", VA = "0x1396AA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public UserReportEventLevel Level
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x1396B0C", Offset = "0x1396B0C", VA = "0x1396B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7ECC", Offset = "0x10A7ECC")]
			readonly get
			{
				return default(UserReportEventLevel);
			}
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x1396B14", Offset = "0x1396B14", VA = "0x1396B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7F04", Offset = "0x10A7F04")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public string Message
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0x1396B1C", Offset = "0x1396B1C", VA = "0x1396B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7F14", Offset = "0x10A7F14")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x1396B24", Offset = "0x1396B24", VA = "0x1396B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7F4C", Offset = "0x10A7F4C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public string StackTrace
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0x1396B2C", Offset = "0x1396B2C", VA = "0x1396B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7F5C", Offset = "0x10A7F5C")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x1396B34", Offset = "0x1396B34", VA = "0x1396B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7F94", Offset = "0x10A7F94")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public DateTime Timestamp
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x1396B3C", Offset = "0x1396B3C", VA = "0x1396B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7FA4", Offset = "0x10A7FA4")]
			readonly get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x1396B44", Offset = "0x1396B44", VA = "0x1396B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7FDC", Offset = "0x10A7FDC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001CE")]
	public enum UserReportEventLevel
	{
		[Token(Token = "0x40008BA")]
		Info,
		[Token(Token = "0x40008BB")]
		Success,
		[Token(Token = "0x40008BC")]
		Warning,
		[Token(Token = "0x40008BD")]
		Error
	}
	[Token(Token = "0x20001CF")]
	public class UserReportList
	{
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A325C", Offset = "0x10A325C")]
		private string <ContinuationToken>k__BackingField;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A326C", Offset = "0x10A326C")]
		private string <Error>k__BackingField;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A327C", Offset = "0x10A327C")]
		private bool <HasMore>k__BackingField;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A328C", Offset = "0x10A328C")]
		private List<UserReportPreview> <UserReportPreviews>k__BackingField;

		[Token(Token = "0x170001A6")]
		public string ContinuationToken
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0x1396BD0", Offset = "0x1396BD0", VA = "0x1396BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7FEC", Offset = "0x10A7FEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x1396BD8", Offset = "0x1396BD8", VA = "0x1396BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A7FFC", Offset = "0x10A7FFC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public string Error
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x1396BE0", Offset = "0x1396BE0", VA = "0x1396BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A800C", Offset = "0x10A800C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x1396BE8", Offset = "0x1396BE8", VA = "0x1396BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A801C", Offset = "0x10A801C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public bool HasMore
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x1396BF0", Offset = "0x1396BF0", VA = "0x1396BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A802C", Offset = "0x10A802C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x1396BF8", Offset = "0x1396BF8", VA = "0x1396BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A803C", Offset = "0x10A803C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public List<UserReportPreview> UserReportPreviews
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x1396C04", Offset = "0x1396C04", VA = "0x1396C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A804C", Offset = "0x10A804C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x1396C0C", Offset = "0x1396C0C", VA = "0x1396C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A805C", Offset = "0x10A805C")]
			set
			{
			}
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1396B4C", Offset = "0x1396B4C", VA = "0x1396B4C")]
		public UserReportList()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1396C14", Offset = "0x1396C14", VA = "0x1396C14")]
		public void Complete(int originalLimit, string continuationToken)
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public struct UserReportMeasure
	{
		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A329C", Offset = "0x10A329C")]
		private int <EndFrameNumber>k__BackingField;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A32AC", Offset = "0x10A32AC")]
		private List<UserReportNamedValue> <Metadata>k__BackingField;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A32BC", Offset = "0x10A32BC")]
		private List<UserReportMetric> <Metrics>k__BackingField;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A32CC", Offset = "0x10A32CC")]
		private int <StartFrameNumber>k__BackingField;

		[Token(Token = "0x170001AA")]
		public int EndFrameNumber
		{
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x1396CCC", Offset = "0x1396CCC", VA = "0x1396CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A806C", Offset = "0x10A806C")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x1396CD4", Offset = "0x1396CD4", VA = "0x1396CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A80A4", Offset = "0x10A80A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public List<UserReportNamedValue> Metadata
		{
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x1396CDC", Offset = "0x1396CDC", VA = "0x1396CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A80B4", Offset = "0x10A80B4")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x1396CE4", Offset = "0x1396CE4", VA = "0x1396CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A80EC", Offset = "0x10A80EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public List<UserReportMetric> Metrics
		{
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x1396CEC", Offset = "0x1396CEC", VA = "0x1396CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A80FC", Offset = "0x10A80FC")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x1396CF4", Offset = "0x1396CF4", VA = "0x1396CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8134", Offset = "0x10A8134")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public int StartFrameNumber
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x1396CFC", Offset = "0x1396CFC", VA = "0x1396CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8144", Offset = "0x10A8144")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x1396D04", Offset = "0x1396D04", VA = "0x1396D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A817C", Offset = "0x10A817C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001D1")]
	public struct UserReportMetric
	{
		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A32DC", Offset = "0x10A32DC")]
		private int <Count>k__BackingField;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A32EC", Offset = "0x10A32EC")]
		private double <Maximum>k__BackingField;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A32FC", Offset = "0x10A32FC")]
		private double <Minimum>k__BackingField;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A330C", Offset = "0x10A330C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A331C", Offset = "0x10A331C")]
		private double <Sum>k__BackingField;

		[Token(Token = "0x170001AE")]
		public double Average
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x1396154", Offset = "0x1396154", VA = "0x1396154")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001AF")]
		public int Count
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x1396D0C", Offset = "0x1396D0C", VA = "0x1396D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A818C", Offset = "0x10A818C")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0x1396D14", Offset = "0x1396D14", VA = "0x1396D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A81C4", Offset = "0x10A81C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public double Maximum
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x1396D1C", Offset = "0x1396D1C", VA = "0x1396D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A81D4", Offset = "0x10A81D4")]
			readonly get
			{
				return default(double);
			}
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0x1396D24", Offset = "0x1396D24", VA = "0x1396D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A820C", Offset = "0x10A820C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public double Minimum
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x1396D2C", Offset = "0x1396D2C", VA = "0x1396D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A821C", Offset = "0x10A821C")]
			readonly get
			{
				return default(double);
			}
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0x1396D34", Offset = "0x1396D34", VA = "0x1396D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8254", Offset = "0x10A8254")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public string Name
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x1396D3C", Offset = "0x1396D3C", VA = "0x1396D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8264", Offset = "0x10A8264")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x1396D44", Offset = "0x1396D44", VA = "0x1396D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A829C", Offset = "0x10A829C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public double Sum
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x1396D4C", Offset = "0x1396D4C", VA = "0x1396D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A82AC", Offset = "0x10A82AC")]
			readonly get
			{
				return default(double);
			}
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0x1396D54", Offset = "0x1396D54", VA = "0x1396D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A82E4", Offset = "0x10A82E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1396168", Offset = "0x1396168", VA = "0x1396168")]
		public void Sample(double value)
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public struct UserReportNamedValue
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A332C", Offset = "0x10A332C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A333C", Offset = "0x10A333C")]
		private string <Value>k__BackingField;

		[Token(Token = "0x170001B4")]
		public string Name
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x1396D5C", Offset = "0x1396D5C", VA = "0x1396D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A82F4", Offset = "0x10A82F4")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x1396D64", Offset = "0x1396D64", VA = "0x1396D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A832C", Offset = "0x10A832C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public string Value
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x1396D6C", Offset = "0x1396D6C", VA = "0x1396D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A833C", Offset = "0x10A833C")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x1396D74", Offset = "0x1396D74", VA = "0x1396D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8374", Offset = "0x10A8374")]
			set
			{
			}
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1393EF8", Offset = "0x1393EF8", VA = "0x1393EF8")]
		public UserReportNamedValue(string name, string value)
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class UserReportPreview
	{
		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A334C", Offset = "0x10A334C")]
		private List<UserReportMetric> <AggregateMetrics>k__BackingField;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A335C", Offset = "0x10A335C")]
		private UserReportAppearanceHint <AppearanceHint>k__BackingField;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A336C", Offset = "0x10A336C")]
		private long <ContentLength>k__BackingField;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A337C", Offset = "0x10A337C")]
		private List<UserReportNamedValue> <Dimensions>k__BackingField;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A338C", Offset = "0x10A338C")]
		private DateTime <ExpiresOn>k__BackingField;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A339C", Offset = "0x10A339C")]
		private string <GeoCountry>k__BackingField;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A33AC", Offset = "0x10A33AC")]
		private string <Identifier>k__BackingField;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A33BC", Offset = "0x10A33BC")]
		private string <IPAddress>k__BackingField;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A33CC", Offset = "0x10A33CC")]
		private bool <IsHiddenWithoutDimension>k__BackingField;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A33DC", Offset = "0x10A33DC")]
		private bool <IsSilent>k__BackingField;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A33EC", Offset = "0x10A33EC")]
		private bool <IsTemporary>k__BackingField;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A33FC", Offset = "0x10A33FC")]
		private LicenseLevel <LicenseLevel>k__BackingField;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A340C", Offset = "0x10A340C")]
		private string <ProjectIdentifier>k__BackingField;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A341C", Offset = "0x10A341C")]
		private DateTime <ReceivedOn>k__BackingField;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A342C", Offset = "0x10A342C")]
		private string <Summary>k__BackingField;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A343C", Offset = "0x10A343C")]
		private UserReportScreenshot <Thumbnail>k__BackingField;

		[Token(Token = "0x170001B6")]
		public List<UserReportMetric> AggregateMetrics
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x1396D7C", Offset = "0x1396D7C", VA = "0x1396D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8384", Offset = "0x10A8384")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x1396D84", Offset = "0x1396D84", VA = "0x1396D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8394", Offset = "0x10A8394")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public UserReportAppearanceHint AppearanceHint
		{
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x1396D8C", Offset = "0x1396D8C", VA = "0x1396D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A83A4", Offset = "0x10A83A4")]
			get
			{
				return default(UserReportAppearanceHint);
			}
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x1396D94", Offset = "0x1396D94", VA = "0x1396D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A83B4", Offset = "0x10A83B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public long ContentLength
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x1396D9C", Offset = "0x1396D9C", VA = "0x1396D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A83C4", Offset = "0x10A83C4")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x1396DA4", Offset = "0x1396DA4", VA = "0x1396DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A83D4", Offset = "0x10A83D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public List<UserReportNamedValue> Dimensions
		{
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x1396DAC", Offset = "0x1396DAC", VA = "0x1396DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A83E4", Offset = "0x10A83E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x1396DB4", Offset = "0x1396DB4", VA = "0x1396DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A83F4", Offset = "0x10A83F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public DateTime ExpiresOn
		{
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x1396DBC", Offset = "0x1396DBC", VA = "0x1396DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8404", Offset = "0x10A8404")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x1396DC4", Offset = "0x1396DC4", VA = "0x1396DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8414", Offset = "0x10A8414")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public string GeoCountry
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x1396DCC", Offset = "0x1396DCC", VA = "0x1396DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8424", Offset = "0x10A8424")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x1396DD4", Offset = "0x1396DD4", VA = "0x1396DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8434", Offset = "0x10A8434")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public string Identifier
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x1396DDC", Offset = "0x1396DDC", VA = "0x1396DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8444", Offset = "0x10A8444")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x1396DE4", Offset = "0x1396DE4", VA = "0x1396DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8454", Offset = "0x10A8454")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public string IPAddress
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x1396DEC", Offset = "0x1396DEC", VA = "0x1396DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8464", Offset = "0x10A8464")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x1396DF4", Offset = "0x1396DF4", VA = "0x1396DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8474", Offset = "0x10A8474")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public bool IsHiddenWithoutDimension
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x1396DFC", Offset = "0x1396DFC", VA = "0x1396DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8484", Offset = "0x10A8484")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x1396E04", Offset = "0x1396E04", VA = "0x1396E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8494", Offset = "0x10A8494")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public bool IsSilent
		{
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0x1396E10", Offset = "0x1396E10", VA = "0x1396E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A84A4", Offset = "0x10A84A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0x1396E18", Offset = "0x1396E18", VA = "0x1396E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A84B4", Offset = "0x10A84B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public bool IsTemporary
		{
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0x1396E24", Offset = "0x1396E24", VA = "0x1396E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A84C4", Offset = "0x10A84C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x1396E2C", Offset = "0x1396E2C", VA = "0x1396E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A84D4", Offset = "0x10A84D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public LicenseLevel LicenseLevel
		{
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x1396E38", Offset = "0x1396E38", VA = "0x1396E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A84E4", Offset = "0x10A84E4")]
			get
			{
				return default(LicenseLevel);
			}
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0x1396E40", Offset = "0x1396E40", VA = "0x1396E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A84F4", Offset = "0x10A84F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public string ProjectIdentifier
		{
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x1396E48", Offset = "0x1396E48", VA = "0x1396E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8504", Offset = "0x10A8504")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x1396E50", Offset = "0x1396E50", VA = "0x1396E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8514", Offset = "0x10A8514")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public DateTime ReceivedOn
		{
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x1396E58", Offset = "0x1396E58", VA = "0x1396E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8524", Offset = "0x10A8524")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x1396E60", Offset = "0x1396E60", VA = "0x1396E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8534", Offset = "0x10A8534")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public string Summary
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x1396E68", Offset = "0x1396E68", VA = "0x1396E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8544", Offset = "0x10A8544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x1396E70", Offset = "0x1396E70", VA = "0x1396E70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8554", Offset = "0x10A8554")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public UserReportScreenshot Thumbnail
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x1396E78", Offset = "0x1396E78", VA = "0x1396E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8564", Offset = "0x10A8564")]
			get
			{
				return default(UserReportScreenshot);
			}
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x1396E8C", Offset = "0x1396E8C", VA = "0x1396E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8574", Offset = "0x10A8574")]
			set
			{
			}
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x13956A0", Offset = "0x13956A0", VA = "0x13956A0")]
		public UserReportPreview()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public struct UserReportScreenshot
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A344C", Offset = "0x10A344C")]
		private string <DataBase64>k__BackingField;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A345C", Offset = "0x10A345C")]
		private string <DataIdentifier>k__BackingField;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A346C", Offset = "0x10A346C")]
		private int <FrameNumber>k__BackingField;

		[Token(Token = "0x170001C6")]
		public string DataBase64
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x1396EAC", Offset = "0x1396EAC", VA = "0x1396EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8584", Offset = "0x10A8584")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x1396EB4", Offset = "0x1396EB4", VA = "0x1396EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A85BC", Offset = "0x10A85BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public string DataIdentifier
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x1396EBC", Offset = "0x1396EBC", VA = "0x1396EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A85CC", Offset = "0x10A85CC")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x1396EC4", Offset = "0x1396EC4", VA = "0x1396EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8604", Offset = "0x10A8604")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public int FrameNumber
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x1396ECC", Offset = "0x1396ECC", VA = "0x1396ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8614", Offset = "0x10A8614")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x1396ED4", Offset = "0x1396ED4", VA = "0x1396ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A864C", Offset = "0x10A864C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public int Height
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x13967FC", Offset = "0x13967FC", VA = "0x13967FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CA")]
		public int Width
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x13967F0", Offset = "0x13967F0", VA = "0x13967F0")]
			get
			{
				return default(int);
			}
		}
	}
}
namespace Unity.Cloud.UserReporting.Plugin
{
	[Token(Token = "0x20001D5")]
	public static class UnityUserReportParser
	{
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x138FFF8", Offset = "0x138FFF8", VA = "0x138FFF8")]
		public static UserReport ParseUserReport(string json)
		{
			return null;
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1390070", Offset = "0x1390070", VA = "0x1390070")]
		public static UserReportList ParseUserReportList(string json)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D6")]
	public static class UnityUserReporting
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UserReportingClient currentClient;

		[Token(Token = "0x170001CB")]
		public static UserReportingClient CurrentClient
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x13900E8", Offset = "0x13900E8", VA = "0x13900E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x13901EC", Offset = "0x13901EC", VA = "0x13901EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x1390240", Offset = "0x1390240", VA = "0x1390240")]
		public static void Configure(string endpoint, string projectIdentifier, IUserReportingPlatform platform, UserReportingClientConfiguration configuration)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x1390A10", Offset = "0x1390A10", VA = "0x1390A10")]
		public static void Configure(string endpoint, string projectIdentifier, UserReportingClientConfiguration configuration)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x1390B24", Offset = "0x1390B24", VA = "0x1390B24")]
		public static void Configure(string projectIdentifier, UserReportingClientConfiguration configuration)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x1390B8C", Offset = "0x1390B8C", VA = "0x1390B8C")]
		public static void Configure(string projectIdentifier)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x1390148", Offset = "0x1390148", VA = "0x1390148")]
		public static void Configure()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x1390C58", Offset = "0x1390C58", VA = "0x1390C58")]
		public static void Configure(UserReportingClientConfiguration configuration)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x1390CC0", Offset = "0x1390CC0", VA = "0x1390CC0")]
		public static void Configure(string projectIdentifier, IUserReportingPlatform platform, UserReportingClientConfiguration configuration)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x1390D24", Offset = "0x1390D24", VA = "0x1390D24")]
		public static void Configure(IUserReportingPlatform platform, UserReportingClientConfiguration configuration)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x1390D90", Offset = "0x1390D90", VA = "0x1390D90")]
		public static void Configure(IUserReportingPlatform platform)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x1390AD0", Offset = "0x1390AD0", VA = "0x1390AD0")]
		private static IUserReportingPlatform GetPlatform()
		{
			return null;
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x1391238", Offset = "0x1391238", VA = "0x1391238")]
		public static void Use(UserReportingClient client)
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class UnityUserReportingPlatform : IUserReportingPlatform, ILogListener
	{
		[Token(Token = "0x20001D8")]
		private struct LogMessage
		{
			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string LogString;

			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LogType LogType;

			[Token(Token = "0x40008E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string StackTrace;
		}

		[Token(Token = "0x20001D9")]
		private class PostOperation
		{
			[Token(Token = "0x40008EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A347C", Offset = "0x10A347C")]
			private Action<bool, byte[]> <Callback>k__BackingField;

			[Token(Token = "0x40008EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A348C", Offset = "0x10A348C")]
			private Action<float, float> <ProgressCallback>k__BackingField;

			[Token(Token = "0x40008EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A349C", Offset = "0x10A349C")]
			private UnityWebRequest <WebRequest>k__BackingField;

			[Token(Token = "0x170001CC")]
			public Action<bool, byte[]> Callback
			{
				[Token(Token = "0x6000B4D")]
				[Address(RVA = "0x228EE08", Offset = "0x228EE08", VA = "0x228EE08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A865C", Offset = "0x10A865C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B4E")]
				[Address(RVA = "0x228EE10", Offset = "0x228EE10", VA = "0x228EE10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A866C", Offset = "0x10A866C")]
				set
				{
				}
			}

			[Token(Token = "0x170001CD")]
			public Action<float, float> ProgressCallback
			{
				[Token(Token = "0x6000B4F")]
				[Address(RVA = "0x228EE18", Offset = "0x228EE18", VA = "0x228EE18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A867C", Offset = "0x10A867C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B50")]
				[Address(RVA = "0x228EE20", Offset = "0x228EE20", VA = "0x228EE20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A868C", Offset = "0x10A868C")]
				set
				{
				}
			}

			[Token(Token = "0x170001CE")]
			public UnityWebRequest WebRequest
			{
				[Token(Token = "0x6000B51")]
				[Address(RVA = "0x228EE28", Offset = "0x228EE28", VA = "0x228EE28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A869C", Offset = "0x10A869C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B52")]
				[Address(RVA = "0x228EE30", Offset = "0x228EE30", VA = "0x228EE30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A86AC", Offset = "0x10A86AC")]
				set
				{
				}
			}

			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x228EE38", Offset = "0x228EE38", VA = "0x228EE38")]
			public PostOperation()
			{
			}
		}

		[Token(Token = "0x20001DA")]
		private struct ProfilerSampler
		{
			[Token(Token = "0x40008ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x40008EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Recorder Recorder;

			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x228EE40", Offset = "0x228EE40", VA = "0x228EE40")]
			public double GetValue()
			{
				return default(double);
			}
		}

		[Token(Token = "0x20001DB")]
		private class ScreenshotOperation
		{
			[Token(Token = "0x40008EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A34AC", Offset = "0x10A34AC")]
			private Action<int, byte[]> <Callback>k__BackingField;

			[Token(Token = "0x40008F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A34BC", Offset = "0x10A34BC")]
			private int <FrameNumber>k__BackingField;

			[Token(Token = "0x40008F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A34CC", Offset = "0x10A34CC")]
			private int <MaximumHeight>k__BackingField;

			[Token(Token = "0x40008F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A34DC", Offset = "0x10A34DC")]
			private int <MaximumWidth>k__BackingField;

			[Token(Token = "0x40008F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A34EC", Offset = "0x10A34EC")]
			private byte[] <PngData>k__BackingField;

			[Token(Token = "0x40008F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A34FC", Offset = "0x10A34FC")]
			private object <Source>k__BackingField;

			[Token(Token = "0x40008F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A350C", Offset = "0x10A350C")]
			private ScreenshotStage <Stage>k__BackingField;

			[Token(Token = "0x40008F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A351C", Offset = "0x10A351C")]
			private Texture2D <Texture>k__BackingField;

			[Token(Token = "0x40008F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A352C", Offset = "0x10A352C")]
			private Texture2D <TextureResized>k__BackingField;

			[Token(Token = "0x40008F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A353C", Offset = "0x10A353C")]
			private int <UnityFrame>k__BackingField;

			[Token(Token = "0x40008F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A354C", Offset = "0x10A354C")]
			private int <WaitFrames>k__BackingField;

			[Token(Token = "0x170001CF")]
			public Action<int, byte[]> Callback
			{
				[Token(Token = "0x6000B55")]
				[Address(RVA = "0x228EE78", Offset = "0x228EE78", VA = "0x228EE78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A86BC", Offset = "0x10A86BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B56")]
				[Address(RVA = "0x228EE80", Offset = "0x228EE80", VA = "0x228EE80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A86CC", Offset = "0x10A86CC")]
				set
				{
				}
			}

			[Token(Token = "0x170001D0")]
			public int FrameNumber
			{
				[Token(Token = "0x6000B57")]
				[Address(RVA = "0x228EE88", Offset = "0x228EE88", VA = "0x228EE88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A86DC", Offset = "0x10A86DC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000B58")]
				[Address(RVA = "0x228EE90", Offset = "0x228EE90", VA = "0x228EE90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A86EC", Offset = "0x10A86EC")]
				set
				{
				}
			}

			[Token(Token = "0x170001D1")]
			public int MaximumHeight
			{
				[Token(Token = "0x6000B59")]
				[Address(RVA = "0x228EE98", Offset = "0x228EE98", VA = "0x228EE98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A86FC", Offset = "0x10A86FC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000B5A")]
				[Address(RVA = "0x228EEA0", Offset = "0x228EEA0", VA = "0x228EEA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A870C", Offset = "0x10A870C")]
				set
				{
				}
			}

			[Token(Token = "0x170001D2")]
			public int MaximumWidth
			{
				[Token(Token = "0x6000B5B")]
				[Address(RVA = "0x228EEA8", Offset = "0x228EEA8", VA = "0x228EEA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A871C", Offset = "0x10A871C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000B5C")]
				[Address(RVA = "0x228EEB0", Offset = "0x228EEB0", VA = "0x228EEB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A872C", Offset = "0x10A872C")]
				set
				{
				}
			}

			[Token(Token = "0x170001D3")]
			public byte[] PngData
			{
				[Token(Token = "0x6000B5D")]
				[Address(RVA = "0x228EEB8", Offset = "0x228EEB8", VA = "0x228EEB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A873C", Offset = "0x10A873C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B5E")]
				[Address(RVA = "0x228EEC0", Offset = "0x228EEC0", VA = "0x228EEC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A874C", Offset = "0x10A874C")]
				set
				{
				}
			}

			[Token(Token = "0x170001D4")]
			public object Source
			{
				[Token(Token = "0x6000B5F")]
				[Address(RVA = "0x228EEC8", Offset = "0x228EEC8", VA = "0x228EEC8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A875C", Offset = "0x10A875C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B60")]
				[Address(RVA = "0x228EED0", Offset = "0x228EED0", VA = "0x228EED0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A876C", Offset = "0x10A876C")]
				set
				{
				}
			}

			[Token(Token = "0x170001D5")]
			public ScreenshotStage Stage
			{
				[Token(Token = "0x6000B61")]
				[Address(RVA = "0x228EED8", Offset = "0x228EED8", VA = "0x228EED8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A877C", Offset = "0x10A877C")]
				get
				{
					return default(ScreenshotStage);
				}
				[Token(Token = "0x6000B62")]
				[Address(RVA = "0x228EEE0", Offset = "0x228EEE0", VA = "0x228EEE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A878C", Offset = "0x10A878C")]
				set
				{
				}
			}

			[Token(Token = "0x170001D6")]
			public Texture2D Texture
			{
				[Token(Token = "0x6000B63")]
				[Address(RVA = "0x228EEE8", Offset = "0x228EEE8", VA = "0x228EEE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A879C", Offset = "0x10A879C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B64")]
				[Address(RVA = "0x228EEF0", Offset = "0x228EEF0", VA = "0x228EEF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A87AC", Offset = "0x10A87AC")]
				set
				{
				}
			}

			[Token(Token = "0x170001D7")]
			public Texture2D TextureResized
			{
				[Token(Token = "0x6000B65")]
				[Address(RVA = "0x228EEF8", Offset = "0x228EEF8", VA = "0x228EEF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A87BC", Offset = "0x10A87BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B66")]
				[Address(RVA = "0x228EF00", Offset = "0x228EF00", VA = "0x228EF00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A87CC", Offset = "0x10A87CC")]
				set
				{
				}
			}

			[Token(Token = "0x170001D8")]
			public int UnityFrame
			{
				[Token(Token = "0x6000B67")]
				[Address(RVA = "0x228EF08", Offset = "0x228EF08", VA = "0x228EF08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A87DC", Offset = "0x10A87DC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000B68")]
				[Address(RVA = "0x228EF10", Offset = "0x228EF10", VA = "0x228EF10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A87EC", Offset = "0x10A87EC")]
				set
				{
				}
			}

			[Token(Token = "0x170001D9")]
			public int WaitFrames
			{
				[Token(Token = "0x6000B69")]
				[Address(RVA = "0x228EF18", Offset = "0x228EF18", VA = "0x228EF18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A87FC", Offset = "0x10A87FC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000B6A")]
				[Address(RVA = "0x228EF20", Offset = "0x228EF20", VA = "0x228EF20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A880C", Offset = "0x10A880C")]
				set
				{
				}
			}

			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x228EF28", Offset = "0x228EF28", VA = "0x228EF28")]
			public ScreenshotOperation()
			{
			}
		}

		[Token(Token = "0x20001DC")]
		private enum ScreenshotStage
		{
			[Token(Token = "0x40008FB")]
			Render,
			[Token(Token = "0x40008FC")]
			ReadPixels,
			[Token(Token = "0x40008FD")]
			GetPixels,
			[Token(Token = "0x40008FE")]
			EncodeToPNG,
			[Token(Token = "0x40008FF")]
			Done
		}

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LogMessage> logMessages;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<PostOperation> postOperations;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ProfilerSampler> profilerSamplers;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ScreenshotOperation> screenshotOperations;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch screenshotStopwatch;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<PostOperation> taskOperations;

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x1390E30", Offset = "0x1390E30", VA = "0x1390E30")]
		public UnityUserReportingPlatform()
		{
		}

		[Token(Token = "0x6000B40")]
		public T DeserializeJson<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1391294", Offset = "0x1391294", VA = "0x1391294", Slot = "7")]
		public void OnEndOfFrame(UserReportingClient client)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1391D24", Offset = "0x1391D24", VA = "0x1391D24", Slot = "8")]
		public void Post(string endpoint, string contentType, byte[] content, Action<float, float> progressCallback, Action<bool, byte[]> callback)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1391EF4", Offset = "0x1391EF4", VA = "0x1391EF4", Slot = "14")]
		public void ReceiveLogMessage(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1392064", Offset = "0x1392064", VA = "0x1392064", Slot = "9")]
		public void RunTask(Func<object> task, Action<object> callback)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x13920EC", Offset = "0x13920EC", VA = "0x13920EC", Slot = "10")]
		public void SendAnalyticsEvent(string eventName, Dictionary<string, object> eventData)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x13920FC", Offset = "0x13920FC", VA = "0x13920FC", Slot = "11")]
		public string SerializeJson(object instance)
		{
			return null;
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1392160", Offset = "0x1392160", VA = "0x1392160", Slot = "12")]
		public void TakeScreenshot(int frameNumber, int maximumWidth, int maximumHeight, object source, Action<int, byte[]> callback)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1392248", Offset = "0x1392248", VA = "0x1392248", Slot = "13")]
		public void Update(UserReportingClient client)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1392AE4", Offset = "0x1392AE4", VA = "0x1392AE4", Slot = "15")]
		public virtual IDictionary<string, string> GetDeviceMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x13934F0", Offset = "0x13934F0", VA = "0x13934F0", Slot = "16")]
		public virtual Dictionary<string, string> GetSamplerNames()
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1393A28", Offset = "0x1393A28", VA = "0x1393A28", Slot = "17")]
		public virtual void ModifyUserReport(UserReport userReport)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1393F2C", Offset = "0x1393F2C", VA = "0x1393F2C", Slot = "18")]
		public virtual void SampleAutomaticMetrics(UserReportingClient client)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class UnityUserReportingUpdater : IEnumerator
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int step;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaitForEndOfFrame waitForEndOfFrame;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A355C", Offset = "0x10A355C")]
		private object <Current>k__BackingField;

		[Token(Token = "0x170001DA")]
		public object Current
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x13940E0", Offset = "0x13940E0", VA = "0x13940E0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A881C", Offset = "0x10A881C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x13940E8", Offset = "0x13940E8", VA = "0x13940E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A882C", Offset = "0x10A882C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1394070", Offset = "0x1394070", VA = "0x1394070")]
		public UnityUserReportingUpdater()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x13940F0", Offset = "0x13940F0", VA = "0x13940F0", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1394D68", Offset = "0x1394D68", VA = "0x1394D68", Slot = "6")]
		public void Reset()
		{
		}
	}
}
namespace Unity.Cloud.UserReporting.Plugin.Version2018_3
{
	[Token(Token = "0x20001DE")]
	public class AsyncUnityUserReportingPlatform : IUserReportingPlatform, ILogListener
	{
		[Token(Token = "0x20001DF")]
		private struct LogMessage
		{
			[Token(Token = "0x4000908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string LogString;

			[Token(Token = "0x4000909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LogType LogType;

			[Token(Token = "0x400090A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string StackTrace;
		}

		[Token(Token = "0x20001E0")]
		private class PostOperation
		{
			[Token(Token = "0x400090B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A356C", Offset = "0x10A356C")]
			private Action<bool, byte[]> <Callback>k__BackingField;

			[Token(Token = "0x400090C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A357C", Offset = "0x10A357C")]
			private Action<float, float> <ProgressCallback>k__BackingField;

			[Token(Token = "0x400090D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A358C", Offset = "0x10A358C")]
			private UnityWebRequest <WebRequest>k__BackingField;

			[Token(Token = "0x170001DB")]
			public Action<bool, byte[]> Callback
			{
				[Token(Token = "0x6000B7F")]
				[Address(RVA = "0x293A54C", Offset = "0x293A54C", VA = "0x293A54C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A883C", Offset = "0x10A883C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B80")]
				[Address(RVA = "0x293A554", Offset = "0x293A554", VA = "0x293A554")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A884C", Offset = "0x10A884C")]
				set
				{
				}
			}

			[Token(Token = "0x170001DC")]
			public Action<float, float> ProgressCallback
			{
				[Token(Token = "0x6000B81")]
				[Address(RVA = "0x293A55C", Offset = "0x293A55C", VA = "0x293A55C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A885C", Offset = "0x10A885C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B82")]
				[Address(RVA = "0x293A564", Offset = "0x293A564", VA = "0x293A564")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A886C", Offset = "0x10A886C")]
				set
				{
				}
			}

			[Token(Token = "0x170001DD")]
			public UnityWebRequest WebRequest
			{
				[Token(Token = "0x6000B83")]
				[Address(RVA = "0x293A56C", Offset = "0x293A56C", VA = "0x293A56C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A887C", Offset = "0x10A887C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B84")]
				[Address(RVA = "0x293A574", Offset = "0x293A574", VA = "0x293A574")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A888C", Offset = "0x10A888C")]
				set
				{
				}
			}

			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x293A57C", Offset = "0x293A57C", VA = "0x293A57C")]
			public PostOperation()
			{
			}
		}

		[Token(Token = "0x20001E1")]
		private struct ProfilerSampler
		{
			[Token(Token = "0x400090E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x400090F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Recorder Recorder;

			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x293A584", Offset = "0x293A584", VA = "0x293A584")]
			public double GetValue()
			{
				return default(double);
			}
		}

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LogMessage> logMessages;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<PostOperation> postOperations;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ProfilerSampler> profilerSamplers;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScreenshotManager screenshotManager;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostOperation> taskOperations;

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x193D7F8", Offset = "0x193D7F8", VA = "0x193D7F8")]
		public AsyncUnityUserReportingPlatform()
		{
		}

		[Token(Token = "0x6000B72")]
		public T DeserializeJson<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x193DBB4", Offset = "0x193DBB4", VA = "0x193DBB4", Slot = "7")]
		public void OnEndOfFrame(UserReportingClient client)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x193DBD0", Offset = "0x193DBD0", VA = "0x193DBD0", Slot = "8")]
		public void Post(string endpoint, string contentType, byte[] content, Action<float, float> progressCallback, Action<bool, byte[]> callback)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x193DDA0", Offset = "0x193DDA0", VA = "0x193DDA0", Slot = "14")]
		public void ReceiveLogMessage(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x193DF10", Offset = "0x193DF10", VA = "0x193DF10", Slot = "9")]
		public void RunTask(Func<object> task, Action<object> callback)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x193DF98", Offset = "0x193DF98", VA = "0x193DF98", Slot = "10")]
		public void SendAnalyticsEvent(string eventName, Dictionary<string, object> eventData)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x193DFA8", Offset = "0x193DFA8", VA = "0x193DFA8", Slot = "11")]
		public string SerializeJson(object instance)
		{
			return null;
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x193E00C", Offset = "0x193E00C", VA = "0x193E00C", Slot = "12")]
		public void TakeScreenshot(int frameNumber, int maximumWidth, int maximumHeight, object source, Action<int, byte[]> callback)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x193E03C", Offset = "0x193E03C", VA = "0x193E03C", Slot = "13")]
		public void Update(UserReportingClient client)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x193E6B4", Offset = "0x193E6B4", VA = "0x193E6B4", Slot = "15")]
		public virtual IDictionary<string, string> GetDeviceMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x193F0C0", Offset = "0x193F0C0", VA = "0x193F0C0", Slot = "16")]
		public virtual Dictionary<string, string> GetSamplerNames()
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x193F5F8", Offset = "0x193F5F8", VA = "0x193F5F8", Slot = "17")]
		public virtual void ModifyUserReport(UserReport userReport)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x193FA34", Offset = "0x193FA34", VA = "0x193FA34", Slot = "18")]
		public virtual void SampleAutomaticMetrics(UserReportingClient client)
		{
		}
	}
}
namespace Unity.Cloud.UserReporting.Plugin.SimpleJson
{
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x109C378", Offset = "0x109C378")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x109C378", Offset = "0x109C378")]
	public class JsonArray : List<object>
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x1A655FC", Offset = "0x1A655FC", VA = "0x1A655FC")]
		public JsonArray()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x1A65674", Offset = "0x1A65674", VA = "0x1A65674")]
		public JsonArray(int capacity)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1A656FC", Offset = "0x1A656FC", VA = "0x1A656FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x109C3E4", Offset = "0x109C3E4")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x109C3E4", Offset = "0x109C3E4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x109C3E4", Offset = "0x109C3E4")]
	public class JsonObject : IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable
	{
		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, object> _members;

		[Token(Token = "0x170001DE")]
		public object Item
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x1A731EC", Offset = "0x1A731EC", VA = "0x1A731EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public ICollection<string> Keys
		{
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0x1A736AC", Offset = "0x1A736AC", VA = "0x1A736AC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public ICollection<object> Values
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x1A737D0", Offset = "0x1A737D0", VA = "0x1A737D0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public object Item
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x1A73824", Offset = "0x1A73824", VA = "0x1A73824", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x1A73888", Offset = "0x1A73888", VA = "0x1A73888", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public int Count
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x1A73D68", Offset = "0x1A73D68", VA = "0x1A73D68", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E3")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x1A73E54", Offset = "0x1A73E54", VA = "0x1A73E54", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1A730D4", Offset = "0x1A730D4", VA = "0x1A730D4")]
		public JsonObject()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1A73158", Offset = "0x1A73158", VA = "0x1A73158")]
		public JsonObject(IEqualityComparer<string> comparer)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x1A731F4", Offset = "0x1A731F4", VA = "0x1A731F4")]
		internal static object GetAtIndex(IDictionary<string, object> obj, int index)
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1A735DC", Offset = "0x1A735DC", VA = "0x1A735DC", Slot = "9")]
		public void Add(string key, object value)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1A73648", Offset = "0x1A73648", VA = "0x1A73648", Slot = "8")]
		public bool ContainsKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1A73700", Offset = "0x1A73700", VA = "0x1A73700", Slot = "10")]
		public bool Remove(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1A73764", Offset = "0x1A73764", VA = "0x1A73764", Slot = "11")]
		public bool TryGetValue(string key, out object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1A738F4", Offset = "0x1A738F4", VA = "0x1A738F4", Slot = "14")]
		public void Add(KeyValuePair<string, object> item)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1A73978", Offset = "0x1A73978", VA = "0x1A73978", Slot = "15")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1A739CC", Offset = "0x1A739CC", VA = "0x1A739CC", Slot = "16")]
		public bool Contains(KeyValuePair<string, object> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1A73A8C", Offset = "0x1A73A8C", VA = "0x1A73A8C", Slot = "17")]
		public void CopyTo(KeyValuePair<string, object>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1A73E5C", Offset = "0x1A73E5C", VA = "0x1A73E5C", Slot = "18")]
		public bool Remove(KeyValuePair<string, object> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1A73DBC", Offset = "0x1A73DBC", VA = "0x1A73DBC", Slot = "19")]
		public IEnumerator<KeyValuePair<string, object>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1A73ECC", Offset = "0x1A73ECC", VA = "0x1A73ECC", Slot = "20")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1A73F64", Offset = "0x1A73F64", VA = "0x1A73F64", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x109C474", Offset = "0x109C474")]
	public static class SimpleJson
	{
		[Token(Token = "0x4000911")]
		private const int TOKEN_NONE = 0;

		[Token(Token = "0x4000912")]
		private const int TOKEN_CURLY_OPEN = 1;

		[Token(Token = "0x4000913")]
		private const int TOKEN_CURLY_CLOSE = 2;

		[Token(Token = "0x4000914")]
		private const int TOKEN_SQUARED_OPEN = 3;

		[Token(Token = "0x4000915")]
		private const int TOKEN_SQUARED_CLOSE = 4;

		[Token(Token = "0x4000916")]
		private const int TOKEN_COLON = 5;

		[Token(Token = "0x4000917")]
		private const int TOKEN_COMMA = 6;

		[Token(Token = "0x4000918")]
		private const int TOKEN_STRING = 7;

		[Token(Token = "0x4000919")]
		private const int TOKEN_NUMBER = 8;

		[Token(Token = "0x400091A")]
		private const int TOKEN_TRUE = 9;

		[Token(Token = "0x400091B")]
		private const int TOKEN_FALSE = 10;

		[Token(Token = "0x400091C")]
		private const int TOKEN_NULL = 11;

		[Token(Token = "0x400091D")]
		private const int BUILDER_CAPACITY = 2000;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly char[] EscapeTable;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly char[] EscapeCharacters;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IJsonSerializerStrategy _currentJsonSerializerStrategy;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static PocoJsonSerializerStrategy _pocoJsonSerializerStrategy;

		[Token(Token = "0x170001E4")]
		public static IJsonSerializerStrategy CurrentJsonSerializerStrategy
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x18C3274", Offset = "0x18C3274", VA = "0x18C3274")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x18C5C70", Offset = "0x18C5C70", VA = "0x18C5C70")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10A957C", Offset = "0x10A957C")]
		public static PocoJsonSerializerStrategy PocoJsonSerializerStrategy
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x18C5BB0", Offset = "0x18C5BB0", VA = "0x18C5BB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x18C2B04", Offset = "0x18C2B04", VA = "0x18C2B04")]
		static SimpleJson()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x18C2CD4", Offset = "0x18C2CD4", VA = "0x18C2CD4")]
		public static object DeserializeObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x18C2D98", Offset = "0x18C2D98", VA = "0x18C2D98")]
		public static bool TryDeserializeObject(string json, out object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x18C3098", Offset = "0x18C3098", VA = "0x18C3098")]
		public static object DeserializeObject(string json, Type type, IJsonSerializerStrategy jsonSerializerStrategy)
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x18C3314", Offset = "0x18C3314", VA = "0x18C3314")]
		public static object DeserializeObject(string json, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BA5")]
		public static T DeserializeObject<T>(string json, IJsonSerializerStrategy jsonSerializerStrategy)
		{
			return (T)null;
		}

		[Token(Token = "0x6000BA6")]
		public static T DeserializeObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x18C3388", Offset = "0x18C3388", VA = "0x18C3388")]
		public static string SerializeObject(object json, IJsonSerializerStrategy jsonSerializerStrategy)
		{
			return null;
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x18C390C", Offset = "0x18C390C", VA = "0x18C390C")]
		public static string SerializeObject(object json)
		{
			return null;
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x18C3974", Offset = "0x18C3974", VA = "0x18C3974")]
		public static string EscapeToJavascriptString(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x18C3B44", Offset = "0x18C3B44", VA = "0x18C3B44")]
		private static IDictionary<string, object> ParseObject(char[] json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x18C4514", Offset = "0x18C4514", VA = "0x18C4514")]
		private static JsonArray ParseArray(char[] json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x18C2E6C", Offset = "0x18C2E6C", VA = "0x18C2E6C")]
		private static object ParseValue(char[] json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x18C40E8", Offset = "0x18C40E8", VA = "0x18C40E8")]
		private static string ParseString(char[] json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x18C49E8", Offset = "0x18C49E8", VA = "0x18C49E8")]
		private static string ConvertFromUtf32(int utf32)
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x18C46C4", Offset = "0x18C46C4", VA = "0x18C46C4")]
		private static object ParseNumber(char[] json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x18C4B44", Offset = "0x18C4B44", VA = "0x18C4B44")]
		private static int GetLastIndexOfNumber(char[] json, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x18C4934", Offset = "0x18C4934", VA = "0x18C4934")]
		private static void EatWhitespace(char[] json, ref int index)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x18C4070", Offset = "0x18C4070", VA = "0x18C4070")]
		private static int LookAhead(char[] json, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x18C3DAC", Offset = "0x18C3DAC", VA = "0x18C3DAC")]
		private static int NextToken(char[] json, ref int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x18C3458", Offset = "0x18C3458", VA = "0x18C3458")]
		private static bool SerializeValue(IJsonSerializerStrategy jsonSerializerStrategy, object value, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x18C4E3C", Offset = "0x18C4E3C", VA = "0x18C4E3C")]
		private static bool SerializeObject(IJsonSerializerStrategy jsonSerializerStrategy, IEnumerable keys, IEnumerable values, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x18C52A8", Offset = "0x18C52A8", VA = "0x18C52A8")]
		private static bool SerializeArray(IJsonSerializerStrategy jsonSerializerStrategy, IEnumerable anArray, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x18C4BF8", Offset = "0x18C4BF8", VA = "0x18C4BF8")]
		private static bool SerializeString(string aString, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x18C57EC", Offset = "0x18C57EC", VA = "0x18C57EC")]
		private static bool SerializeNumber(object number, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x18C5648", Offset = "0x18C5648", VA = "0x18C5648")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x109C4C0", Offset = "0x109C4C0")]
	public interface IJsonSerializerStrategy
	{
		[Token(Token = "0x6000BBD")]
		bool TrySerializeNonPrimitiveObject(object input, out object output);

		[Token(Token = "0x6000BBE")]
		object DeserializeObject(object value, Type type);
	}
	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x109C50C", Offset = "0x109C50C")]
	public class PocoJsonSerializerStrategy : IJsonSerializerStrategy
	{
		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal IDictionary<Type, ReflectionUtils.ConstructorDelegate> ConstructorCache;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal IDictionary<Type, IDictionary<string, ReflectionUtils.GetDelegate>> GetCache;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal IDictionary<Type, IDictionary<string, KeyValuePair<Type, ReflectionUtils.SetDelegate>>> SetCache;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly Type[] EmptyTypes;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly Type[] ArrayConstructorParameterTypes;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string[] Iso8601Format;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1E44DC8", Offset = "0x1E44DC8", VA = "0x1E44DC8")]
		public PocoJsonSerializerStrategy()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1E44FE4", Offset = "0x1E44FE4", VA = "0x1E44FE4", Slot = "6")]
		protected virtual string MapClrMemberNameToJsonFieldName(string clrPropertyName)
		{
			return null;
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x1E44FEC", Offset = "0x1E44FEC", VA = "0x1E44FEC", Slot = "7")]
		internal virtual ReflectionUtils.ConstructorDelegate ContructorDelegateFactory(Type key)
		{
			return null;
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1E45138", Offset = "0x1E45138", VA = "0x1E45138", Slot = "8")]
		internal virtual IDictionary<string, ReflectionUtils.GetDelegate> GetterValueFactory(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x1E45ABC", Offset = "0x1E45ABC", VA = "0x1E45ABC", Slot = "9")]
		internal virtual IDictionary<string, KeyValuePair<Type, ReflectionUtils.SetDelegate>> SetterValueFactory(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x1E464BC", Offset = "0x1E464BC", VA = "0x1E464BC", Slot = "10")]
		public virtual bool TrySerializeNonPrimitiveObject(object input, out object output)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1E46528", Offset = "0x1E46528", VA = "0x1E46528", Slot = "11")]
		public virtual object DeserializeObject(object value, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x1E49534", Offset = "0x1E49534", VA = "0x1E49534", Slot = "12")]
		protected virtual object SerializeEnum(Enum p)
		{
			return null;
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1E49608", Offset = "0x1E49608", VA = "0x1E49608", Slot = "13")]
		protected virtual bool TrySerializeKnownTypes(object input, out object output)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x1E4996C", Offset = "0x1E4996C", VA = "0x1E4996C", Slot = "14")]
		protected virtual bool TrySerializeUnknownTypes(object input, out object output)
		{
			return default(bool);
		}
	}
}
namespace Unity.Cloud.UserReporting.Plugin.SimpleJson.Reflection
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x109C558", Offset = "0x109C558")]
	internal class ReflectionUtils
	{
		[Token(Token = "0x20001E8")]
		public delegate object GetDelegate(object source);

		[Token(Token = "0x20001E9")]
		public delegate void SetDelegate(object source, object value);

		[Token(Token = "0x20001EA")]
		public delegate object ConstructorDelegate(params object[] args);

		[Token(Token = "0x20001EB")]
		public delegate TValue ThreadSafeDictionaryValueFactory<TKey, TValue>(TKey key);

		[Token(Token = "0x20001EC")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x109C5A4", Offset = "0x109C5A4")]
		public sealed class ThreadSafeDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable
		{
			[Token(Token = "0x4000929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Dictionary<TKey, TValue> _dictionary;

			[Token(Token = "0x400092A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object _lock;

			[Token(Token = "0x400092B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ThreadSafeDictionaryValueFactory<TKey, TValue> _valueFactory;

			[Token(Token = "0x170001E6")]
			public int Count
			{
				[Token(Token = "0x6000BFB")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001E7")]
			public bool IsReadOnly
			{
				[Token(Token = "0x6000BFC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001E8")]
			public TValue Item
			{
				[Token(Token = "0x6000BFD")]
				get
				{
					return (TValue)null;
				}
				[Token(Token = "0x6000BFE")]
				set
				{
				}
			}

			[Token(Token = "0x170001E9")]
			public ICollection<TKey> Keys
			{
				[Token(Token = "0x6000BFF")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EA")]
			public ICollection<TValue> Values
			{
				[Token(Token = "0x6000C00")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BFA")]
			public ThreadSafeDictionary(ThreadSafeDictionaryValueFactory<TKey, TValue> valueFactory)
			{
			}

			[Token(Token = "0x6000C01")]
			public void Add(TKey key, TValue value)
			{
			}

			[Token(Token = "0x6000C02")]
			public void Add(KeyValuePair<TKey, TValue> item)
			{
			}

			[Token(Token = "0x6000C03")]
			private TValue AddValue(TKey key)
			{
				return (TValue)null;
			}

			[Token(Token = "0x6000C04")]
			public void Clear()
			{
			}

			[Token(Token = "0x6000C05")]
			public bool Contains(KeyValuePair<TKey, TValue> item)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C06")]
			public bool ContainsKey(TKey key)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C07")]
			public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
			{
			}

			[Token(Token = "0x6000C08")]
			private TValue Get(TKey key)
			{
				return (TValue)null;
			}

			[Token(Token = "0x6000C09")]
			public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000C0A")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000C0B")]
			public bool Remove(TKey key)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C0C")]
			public bool Remove(KeyValuePair<TKey, TValue> item)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C0D")]
			public bool TryGetValue(TKey key, out TValue value)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C5DC", Offset = "0x109C5DC")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x400092C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ConstructorInfo constructorInfo;

			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x2946944", Offset = "0x2946944", VA = "0x2946944")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x294694C", Offset = "0x294694C", VA = "0x294694C")]
			internal object <GetConstructorByReflection>b__0(object[] args)
			{
				return null;
			}
		}

		[Token(Token = "0x20001EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C5EC", Offset = "0x109C5EC")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x400092D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MethodInfo methodInfo;

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x2946968", Offset = "0x2946968", VA = "0x2946968")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x2946970", Offset = "0x2946970", VA = "0x2946970")]
			internal object <GetGetMethodByReflection>b__0(object source)
			{
				return null;
			}
		}

		[Token(Token = "0x20001EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C5FC", Offset = "0x109C5FC")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x400092E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo fieldInfo;

			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x29469FC", Offset = "0x29469FC", VA = "0x29469FC")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x2946A04", Offset = "0x2946A04", VA = "0x2946A04")]
			internal object <GetGetMethodByReflection>b__0(object source)
			{
				return null;
			}
		}

		[Token(Token = "0x20001F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C60C", Offset = "0x109C60C")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x400092F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MethodInfo methodInfo;

			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x2946A28", Offset = "0x2946A28", VA = "0x2946A28")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x2946A30", Offset = "0x2946A30", VA = "0x2946A30")]
			internal void <GetSetMethodByReflection>b__0(object source, object value)
			{
			}
		}

		[Token(Token = "0x20001F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C61C", Offset = "0x109C61C")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4000930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo fieldInfo;

			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x2946AFC", Offset = "0x2946AFC", VA = "0x2946AFC")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x2946B04", Offset = "0x2946B04", VA = "0x2946B04")]
			internal void <GetSetMethodByReflection>b__0(object source, object value)
			{
			}
		}

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object[] EmptyObjects;

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1E4E598", Offset = "0x1E4E598", VA = "0x1E4E598")]
		public static Type GetTypeInfo(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1E4E59C", Offset = "0x1E4E59C", VA = "0x1E4E59C")]
		public static Attribute GetAttribute(MemberInfo info, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1E48FD4", Offset = "0x1E48FD4", VA = "0x1E48FD4")]
		public static Type GetGenericListElementType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1E4E6D4", Offset = "0x1E4E6D4", VA = "0x1E4E6D4")]
		public static Attribute GetAttribute(Type objectType, Type attributeType)
		{
			return null;
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1E48D84", Offset = "0x1E48D84", VA = "0x1E48D84")]
		public static Type[] GetGenericTypeArguments(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1E4E660", Offset = "0x1E4E660", VA = "0x1E4E660")]
		public static bool IsTypeGeneric(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1E48DA4", Offset = "0x1E48DA4", VA = "0x1E48DA4")]
		public static bool IsTypeGenericeCollectionInterface(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x1E48F50", Offset = "0x1E48F50", VA = "0x1E48F50")]
		public static bool IsAssignableFrom(Type type1, Type type2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1E48C14", Offset = "0x1E48C14", VA = "0x1E48C14")]
		public static bool IsTypeDictionary(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1E48B10", Offset = "0x1E48B10", VA = "0x1E48B10")]
		public static bool IsNullableType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1E49454", Offset = "0x1E49454", VA = "0x1E49454")]
		public static object ToNullableType(object obj, Type nullableType)
		{
			return null;
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1E4E7B0", Offset = "0x1E4E7B0", VA = "0x1E4E7B0")]
		public static bool IsValueType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1E4E81C", Offset = "0x1E4E81C", VA = "0x1E4E81C")]
		public static IEnumerable<ConstructorInfo> GetConstructors(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1E4E834", Offset = "0x1E4E834", VA = "0x1E4E834")]
		public static ConstructorInfo GetConstructorInfo(Type type, params Type[] argsType)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1E45990", Offset = "0x1E45990", VA = "0x1E45990")]
		public static IEnumerable<PropertyInfo> GetProperties(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1E45A38", Offset = "0x1E45A38", VA = "0x1E45A38")]
		public static IEnumerable<FieldInfo> GetFields(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1E459B4", Offset = "0x1E459B4", VA = "0x1E459B4")]
		public static MethodInfo GetGetterMethodInfo(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1E463D8", Offset = "0x1E463D8", VA = "0x1E463D8")]
		public static MethodInfo GetSetterMethodInfo(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1E4EC90", Offset = "0x1E4EC90", VA = "0x1E4EC90")]
		public static ConstructorDelegate GetContructor(ConstructorInfo constructorInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1E450C8", Offset = "0x1E450C8", VA = "0x1E450C8")]
		public static ConstructorDelegate GetContructor(Type type, params Type[] argsType)
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x1E4ECF0", Offset = "0x1E4ECF0", VA = "0x1E4ECF0")]
		public static ConstructorDelegate GetConstructorByReflection(ConstructorInfo constructorInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1E4EDA8", Offset = "0x1E4EDA8", VA = "0x1E4EDA8")]
		public static ConstructorDelegate GetConstructorByReflection(Type type, params Type[] argsType)
		{
			return null;
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x1E459D8", Offset = "0x1E459D8", VA = "0x1E459D8")]
		public static GetDelegate GetGetMethod(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x1E45A5C", Offset = "0x1E45A5C", VA = "0x1E45A5C")]
		public static GetDelegate GetGetMethod(FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1E4EE94", Offset = "0x1E4EE94", VA = "0x1E4EE94")]
		public static GetDelegate GetGetMethodByReflection(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1E4EF94", Offset = "0x1E4EF94", VA = "0x1E4EF94")]
		public static GetDelegate GetGetMethodByReflection(FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1E463FC", Offset = "0x1E463FC", VA = "0x1E463FC")]
		public static SetDelegate GetSetMethod(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1E4645C", Offset = "0x1E4645C", VA = "0x1E4645C")]
		public static SetDelegate GetSetMethod(FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1E4F04C", Offset = "0x1E4F04C", VA = "0x1E4F04C")]
		public static SetDelegate GetSetMethodByReflection(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1E4F14C", Offset = "0x1E4F14C", VA = "0x1E4F14C")]
		public static SetDelegate GetSetMethodByReflection(FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1E4F204", Offset = "0x1E4F204", VA = "0x1E4F204")]
		public ReflectionUtils()
		{
		}
	}
}
namespace Unity.Cloud.UserReporting.Client
{
	[Token(Token = "0x20001F2")]
	public interface IUserReportingPlatform
	{
		[Token(Token = "0x6000C18")]
		T DeserializeJson<T>(string json);

		[Token(Token = "0x6000C19")]
		IDictionary<string, string> GetDeviceMetadata();

		[Token(Token = "0x6000C1A")]
		void ModifyUserReport(UserReport userReport);

		[Token(Token = "0x6000C1B")]
		void OnEndOfFrame(UserReportingClient client);

		[Token(Token = "0x6000C1C")]
		void Post(string endpoint, string contentType, byte[] content, Action<float, float> progressCallback, Action<bool, byte[]> callback);

		[Token(Token = "0x6000C1D")]
		void RunTask(Func<object> task, Action<object> callback);

		[Token(Token = "0x6000C1E")]
		void SendAnalyticsEvent(string eventName, Dictionary<string, object> eventData);

		[Token(Token = "0x6000C1F")]
		string SerializeJson(object instance);

		[Token(Token = "0x6000C20")]
		void TakeScreenshot(int frameNumber, int maximumWidth, int maximumHeight, object source, Action<int, byte[]> callback);

		[Token(Token = "0x6000C21")]
		void Update(UserReportingClient client);
	}
	[Token(Token = "0x20001F3")]
	public enum MetricsGatheringMode
	{
		[Token(Token = "0x4000932")]
		Automatic,
		[Token(Token = "0x4000933")]
		Manual,
		[Token(Token = "0x4000934")]
		Disabled
	}
	[Token(Token = "0x20001F4")]
	public class NullUserReportingPlatform : IUserReportingPlatform
	{
		[Token(Token = "0x6000C22")]
		public T DeserializeJson<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1C39B00", Offset = "0x1C39B00", VA = "0x1C39B00", Slot = "5")]
		public IDictionary<string, string> GetDeviceMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x1C39B6C", Offset = "0x1C39B6C", VA = "0x1C39B6C", Slot = "6")]
		public void ModifyUserReport(UserReport userReport)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1C39B70", Offset = "0x1C39B70", VA = "0x1C39B70", Slot = "7")]
		public void OnEndOfFrame(UserReportingClient client)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x1C39B74", Offset = "0x1C39B74", VA = "0x1C39B74", Slot = "8")]
		public void Post(string endpoint, string contentType, byte[] content, Action<float, float> progressCallback, Action<bool, byte[]> callback)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x1C39C0C", Offset = "0x1C39C0C", VA = "0x1C39C0C", Slot = "9")]
		public void RunTask(Func<object> task, Action<object> callback)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x1C39C94", Offset = "0x1C39C94", VA = "0x1C39C94", Slot = "10")]
		public void SendAnalyticsEvent(string eventName, Dictionary<string, object> eventData)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1C39C98", Offset = "0x1C39C98", VA = "0x1C39C98", Slot = "11")]
		public string SerializeJson(object instance)
		{
			return null;
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1C39CE4", Offset = "0x1C39CE4", VA = "0x1C39CE4", Slot = "12")]
		public void TakeScreenshot(int frameNumber, int maximumWidth, int maximumHeight, object source, Action<int, byte[]> callback)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x1C39D6C", Offset = "0x1C39D6C", VA = "0x1C39D6C", Slot = "13")]
		public void Update(UserReportingClient client)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1C39D70", Offset = "0x1C39D70", VA = "0x1C39D70")]
		public NullUserReportingPlatform()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class UserReportingClient
	{
		[Token(Token = "0x20001F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C62C", Offset = "0x109C62C")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x400094B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserReportingClient <>4__this;

			[Token(Token = "0x400094C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<UserReport> callback;

			[Token(Token = "0x400094D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<object> <>9__1;

			[Token(Token = "0x400094E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<object> <>9__2;

			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x228EF4C", Offset = "0x228EF4C", VA = "0x228EF4C")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x228EF54", Offset = "0x228EF54", VA = "0x228EF54")]
			internal void <CreateUserReport>b__0()
			{
			}

			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x228F10C", Offset = "0x228F10C", VA = "0x228F10C")]
			internal object <CreateUserReport>b__1()
			{
				return null;
			}

			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x228F7EC", Offset = "0x228F7EC", VA = "0x228F7EC")]
			internal void <CreateUserReport>b__2(object result)
			{
			}
		}

		[Token(Token = "0x20001F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C63C", Offset = "0x109C63C")]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x400094F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<float, float> progressCallback;

			[Token(Token = "0x4000950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UserReportingClient <>4__this;

			[Token(Token = "0x4000951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserReport userReport;

			[Token(Token = "0x4000952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool, UserReport> callback;

			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x228F898", Offset = "0x228F898", VA = "0x228F898")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x228F8A0", Offset = "0x228F8A0", VA = "0x228F8A0")]
			internal void <SendUserReport>b__0(float uploadProgress, float downloadProgress)
			{
			}

			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x228F918", Offset = "0x228F918", VA = "0x228F918")]
			internal void <SendUserReport>b__1(bool success, byte[] result)
			{
			}
		}

		[Token(Token = "0x20001F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C64C", Offset = "0x109C64C")]
		private sealed class <>c__DisplayClass58_1
		{
			[Token(Token = "0x4000953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool success;

			[Token(Token = "0x4000954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] result;

			[Token(Token = "0x4000955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass58_0 CS$<>8__locals1;

			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x228FA08", Offset = "0x228FA08", VA = "0x228FA08")]
			public <>c__DisplayClass58_1()
			{
			}

			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x228FA10", Offset = "0x228FA10", VA = "0x228FA10")]
			internal void <SendUserReport>b__2()
			{
			}
		}

		[Token(Token = "0x20001F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C65C", Offset = "0x109C65C")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4000956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserReportingClient <>4__this;

			[Token(Token = "0x4000957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<UserReportScreenshot> callback;

			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x228FEC4", Offset = "0x228FEC4", VA = "0x228FEC4")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x228FECC", Offset = "0x228FECC", VA = "0x228FECC")]
			internal void <TakeScreenshotFromSource>b__0(int passedFrameNumber, byte[] data)
			{
			}
		}

		[Token(Token = "0x20001FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C66C", Offset = "0x109C66C")]
		private sealed class <>c__DisplayClass60_1
		{
			[Token(Token = "0x4000958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int passedFrameNumber;

			[Token(Token = "0x4000959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] data;

			[Token(Token = "0x400095A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass60_0 CS$<>8__locals1;

			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x228FFB8", Offset = "0x228FFB8", VA = "0x228FFB8")]
			public <>c__DisplayClass60_1()
			{
			}

			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x228FFC0", Offset = "0x228FFC0", VA = "0x228FFC0")]
			internal void <TakeScreenshotFromSource>b__1()
			{
			}
		}

		[Token(Token = "0x20001FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C67C", Offset = "0x109C67C")]
		private sealed class <>c__DisplayClass63_0
		{
			[Token(Token = "0x400095B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserReportingClient <>4__this;

			[Token(Token = "0x400095C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int currentScreenshotsTaken;

			[Token(Token = "0x400095D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callback;

			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x2290210", Offset = "0x2290210", VA = "0x2290210")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x2290218", Offset = "0x2290218", VA = "0x2290218")]
			internal void <WaitForPerforation>b__0()
			{
			}
		}

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, UserReportMetric> clientMetrics;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, string> currentMeasureMetadata;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, UserReportMetric> currentMetrics;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Action> currentSynchronizedActions;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UserReportNamedValue> deviceMetadata;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CyclicalList<UserReportEvent> events;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int frameNumber;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool isMeasureBoundary;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int measureFrames;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CyclicalList<UserReportMeasure> measures;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CyclicalList<UserReportScreenshot> screenshots;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int screenshotsSaved;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int screenshotsTaken;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Action> synchronizedActions;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Stopwatch updateStopwatch;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A359C", Offset = "0x10A359C")]
		private UserReportingClientConfiguration <Configuration>k__BackingField;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A35AC", Offset = "0x10A35AC")]
		private string <Endpoint>k__BackingField;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A35BC", Offset = "0x10A35BC")]
		private bool <IsConnectedToLogger>k__BackingField;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A35CC", Offset = "0x10A35CC")]
		private bool <IsSelfReporting>k__BackingField;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A35DC", Offset = "0x10A35DC")]
		private IUserReportingPlatform <Platform>k__BackingField;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A35EC", Offset = "0x10A35EC")]
		private string <ProjectIdentifier>k__BackingField;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A35FC", Offset = "0x10A35FC")]
		private bool <SendEventsToAnalytics>k__BackingField;

		[Token(Token = "0x170001EB")]
		public UserReportingClientConfiguration Configuration
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x139701C", Offset = "0x139701C", VA = "0x139701C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A889C", Offset = "0x10A889C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x1397024", Offset = "0x1397024", VA = "0x1397024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A88AC", Offset = "0x10A88AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public string Endpoint
		{
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0x139702C", Offset = "0x139702C", VA = "0x139702C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A88BC", Offset = "0x10A88BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x1397034", Offset = "0x1397034", VA = "0x1397034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A88CC", Offset = "0x10A88CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public bool IsConnectedToLogger
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x139703C", Offset = "0x139703C", VA = "0x139703C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A88DC", Offset = "0x10A88DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x1397044", Offset = "0x1397044", VA = "0x1397044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A88EC", Offset = "0x10A88EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public bool IsSelfReporting
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x1397050", Offset = "0x1397050", VA = "0x1397050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A88FC", Offset = "0x10A88FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x1397058", Offset = "0x1397058", VA = "0x1397058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A890C", Offset = "0x10A890C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public IUserReportingPlatform Platform
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x1397064", Offset = "0x1397064", VA = "0x1397064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A891C", Offset = "0x10A891C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x139706C", Offset = "0x139706C", VA = "0x139706C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A892C", Offset = "0x10A892C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public string ProjectIdentifier
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x1397074", Offset = "0x1397074", VA = "0x1397074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A893C", Offset = "0x10A893C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x139707C", Offset = "0x139707C", VA = "0x139707C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A894C", Offset = "0x10A894C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public bool SendEventsToAnalytics
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0x1397084", Offset = "0x1397084", VA = "0x1397084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A895C", Offset = "0x10A895C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x139708C", Offset = "0x139708C", VA = "0x139708C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A896C", Offset = "0x10A896C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x13902F8", Offset = "0x13902F8", VA = "0x13902F8")]
		public UserReportingClient(string endpoint, string projectIdentifier, IUserReportingPlatform platform, UserReportingClientConfiguration configuration)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1396EDC", Offset = "0x1396EDC", VA = "0x1396EDC")]
		public void AddDeviceMetadata(string name, string value)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1397098", Offset = "0x1397098", VA = "0x1397098")]
		public void AddMeasureMetadata(string name, string value)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1397168", Offset = "0x1397168", VA = "0x1397168")]
		private void AddSynchronizedAction(Action action)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x13972BC", Offset = "0x13972BC", VA = "0x13972BC")]
		public void ClearScreenshots()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x13973B8", Offset = "0x13973B8", VA = "0x13973B8")]
		public void CreateUserReport(Action<UserReport> callback)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x13975E8", Offset = "0x13975E8", VA = "0x13975E8")]
		public string GetEndpoint()
		{
			return null;
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1392AD8", Offset = "0x1392AD8", VA = "0x1392AD8")]
		public void LogEvent(UserReportEventLevel level, string message)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x13928C0", Offset = "0x13928C0", VA = "0x13928C0")]
		public void LogEvent(UserReportEventLevel level, string message, string stackTrace)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1397648", Offset = "0x1397648", VA = "0x1397648")]
		private void LogEvent(UserReportEventLevel level, string message, string stackTrace, Exception exception)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1397860", Offset = "0x1397860", VA = "0x1397860")]
		public void LogException(Exception exception)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1391B10", Offset = "0x1391B10", VA = "0x1391B10")]
		public void SampleClientMetric(string name, double value)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x13928C8", Offset = "0x13928C8", VA = "0x13928C8")]
		public void SampleMetric(string name, double value)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1397874", Offset = "0x1397874", VA = "0x1397874")]
		public void SaveUserReportToDisk(UserReport userReport)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1397988", Offset = "0x1397988", VA = "0x1397988")]
		public void SendUserReport(UserReport userReport, Action<bool, UserReport> callback)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1397994", Offset = "0x1397994", VA = "0x1397994")]
		public void SendUserReport(UserReport userReport, Action<float, float> progressCallback, Action<bool, UserReport> callback)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1398000", Offset = "0x1398000", VA = "0x1398000")]
		public void TakeScreenshot(int maximumWidth, int maximumHeight, Action<UserReportScreenshot> callback)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x139800C", Offset = "0x139800C", VA = "0x139800C")]
		public void TakeScreenshotFromSource(int maximumWidth, int maximumHeight, object source, Action<UserReportScreenshot> callback)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x139419C", Offset = "0x139419C", VA = "0x139419C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1394C50", Offset = "0x1394C50", VA = "0x1394C50")]
		public void UpdateOnEndOfFrame()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x13974C4", Offset = "0x13974C4", VA = "0x13974C4")]
		private void WaitForPerforation(int currentScreenshotsTaken, Action callback)
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class UserReportingClientConfiguration
	{
		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A360C", Offset = "0x10A360C")]
		private int <FramesPerMeasure>k__BackingField;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A361C", Offset = "0x10A361C")]
		private int <MaximumEventCount>k__BackingField;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A362C", Offset = "0x10A362C")]
		private int <MaximumMeasureCount>k__BackingField;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A363C", Offset = "0x10A363C")]
		private int <MaximumScreenshotCount>k__BackingField;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A364C", Offset = "0x10A364C")]
		private MetricsGatheringMode <MetricsGatheringMode>k__BackingField;

		[Token(Token = "0x170001F2")]
		public int FramesPerMeasure
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x1398278", Offset = "0x1398278", VA = "0x1398278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A897C", Offset = "0x10A897C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x1398280", Offset = "0x1398280", VA = "0x1398280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A898C", Offset = "0x10A898C")]
			internal set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public int MaximumEventCount
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x1398288", Offset = "0x1398288", VA = "0x1398288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A899C", Offset = "0x10A899C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x1398290", Offset = "0x1398290", VA = "0x1398290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A89AC", Offset = "0x10A89AC")]
			internal set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public int MaximumMeasureCount
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x1398298", Offset = "0x1398298", VA = "0x1398298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A89BC", Offset = "0x10A89BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x13982A0", Offset = "0x13982A0", VA = "0x13982A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A89CC", Offset = "0x10A89CC")]
			internal set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public int MaximumScreenshotCount
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x13982A8", Offset = "0x13982A8", VA = "0x13982A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A89DC", Offset = "0x10A89DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x13982B0", Offset = "0x13982B0", VA = "0x13982B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A89EC", Offset = "0x10A89EC")]
			internal set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public MetricsGatheringMode MetricsGatheringMode
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x13982B8", Offset = "0x13982B8", VA = "0x13982B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A89FC", Offset = "0x10A89FC")]
			get
			{
				return default(MetricsGatheringMode);
			}
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x13982C0", Offset = "0x13982C0", VA = "0x13982C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8A0C", Offset = "0x10A8A0C")]
			internal set
			{
			}
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1390C28", Offset = "0x1390C28", VA = "0x1390C28")]
		public UserReportingClientConfiguration()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x13981D8", Offset = "0x13981D8", VA = "0x13981D8")]
		public UserReportingClientConfiguration(int maximumEventCount, int maximumMeasureCount, int framesPerMeasure, int maximumScreenshotCount)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1398224", Offset = "0x1398224", VA = "0x1398224")]
		public UserReportingClientConfiguration(int maximumEventCount, MetricsGatheringMode metricsGatheringMode, int maximumMeasureCount, int framesPerMeasure, int maximumScreenshotCount)
		{
		}
	}
}
namespace Unity.Services.Analytics
{
	[Token(Token = "0x20001FD")]
	public class AnalyticsEventHandler : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20001FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C68C", Offset = "0x109C68C")]
		private struct <Start>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<List<string>> <>u__2;

			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x29397B0", Offset = "0x29397B0", VA = "0x29397B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x2939C6C", Offset = "0x2939C6C", VA = "0x2939C6C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text consoleOutput;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScrollRect consoleScrollRect;

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1938150", Offset = "0x1938150", VA = "0x1938150")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x19381CC", Offset = "0x19381CC", VA = "0x19381CC")]
		private void OnLogMessageReceived(string condition, string stacktrace, LogType type)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1938310", Offset = "0x1938310", VA = "0x1938310")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x193838C", Offset = "0x193838C", VA = "0x193838C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x10A8A1C", Offset = "0x10A8A1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1938454", Offset = "0x1938454", VA = "0x1938454")]
		public void RecordMinimalAdImpressionEvent()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x19384D0", Offset = "0x19384D0", VA = "0x19384D0")]
		public void RecordCompleteAdImpressionEvent()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x193854C", Offset = "0x193854C", VA = "0x193854C")]
		public void RecordSaleTransactionWithOnlyRequiredValues()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x19385C8", Offset = "0x19385C8", VA = "0x19385C8")]
		public void RecordSaleTransactionWithRealCurrency()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1938644", Offset = "0x1938644", VA = "0x1938644")]
		public void RecordSaleTransactionWithVirtualCurrency()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x19386C0", Offset = "0x19386C0", VA = "0x19386C0")]
		public void RecordSaleTransactionWithMultipleVirtualCurrencies()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x193873C", Offset = "0x193873C", VA = "0x193873C")]
		public void RecordSaleEventWithOneItem()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x19387B8", Offset = "0x19387B8", VA = "0x19387B8")]
		public void RecordSaleEventWithMultipleItems()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1938834", Offset = "0x1938834", VA = "0x1938834")]
		public void RecordSaleEventWithOptionalParameters()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x19388B0", Offset = "0x19388B0", VA = "0x19388B0")]
		public void RecordAcquisitionSourceEventWithOnlyRequiredValues()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x193892C", Offset = "0x193892C", VA = "0x193892C")]
		public void RecordAcquisitionSourceEventWithOptionalParameters()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x19389A8", Offset = "0x19389A8", VA = "0x19389A8")]
		public void RecordPurchaseEventWithOneItem()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1938A24", Offset = "0x1938A24", VA = "0x1938A24")]
		public void RecordPurchaseEventWithMultipleItems()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1938AA0", Offset = "0x1938AA0", VA = "0x1938AA0")]
		public void RecordPurchaseEventWithMultipleCurrencies()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1938B1C", Offset = "0x1938B1C", VA = "0x1938B1C")]
		public void RecordCustomEventWithNoParameters()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1938B98", Offset = "0x1938B98", VA = "0x1938B98")]
		public void RecordCustomEventWithParameters()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1938C14", Offset = "0x1938C14", VA = "0x1938C14")]
		public AnalyticsEventHandler()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public static class CustomEventSample
	{
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1765360", Offset = "0x1765360", VA = "0x1765360")]
		public static void RecordCustomEventWithNoParameters()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x17654DC", Offset = "0x17654DC", VA = "0x17654DC")]
		public static void RecordCustomEventWithParameters()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class StandardEventSample
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x18C7124", Offset = "0x18C7124", VA = "0x18C7124")]
		public static void RecordMinimalAdImpressionEvent()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x18C7310", Offset = "0x18C7310", VA = "0x18C7310")]
		public static void RecordCompleteAdImpressionEvent()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x18C76E4", Offset = "0x18C76E4", VA = "0x18C76E4")]
		public static void RecordSaleTransactionWithOnlyRequiredValues()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x18C78A0", Offset = "0x18C78A0", VA = "0x18C78A0")]
		public static void RecordSaleTransactionWithRealCurrency()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x18C7D04", Offset = "0x18C7D04", VA = "0x18C7D04")]
		public static void RecordSaleTransactionWithVirtualCurrency()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x18C8100", Offset = "0x18C8100", VA = "0x18C8100")]
		public static void RecordSaleTransactionWithMultipleVirtualCurrencies()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x18C8554", Offset = "0x18C8554", VA = "0x18C8554")]
		public static void RecordSaleEventWithOneItem()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x18C8930", Offset = "0x18C8930", VA = "0x18C8930")]
		public static void RecordSaleEventWithMultipleItems()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x18C8F20", Offset = "0x18C8F20", VA = "0x18C8F20")]
		public static void RecordSaleEventWithOptionalParameters()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x18C92C0", Offset = "0x18C92C0", VA = "0x18C92C0")]
		public static void RecordAcquisitionSourceEventWithOnlyRequiredValues()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x18C94C8", Offset = "0x18C94C8", VA = "0x18C94C8")]
		public static void RecordAcquisitionSourceEventWithOptionalParameters()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x18C9774", Offset = "0x18C9774", VA = "0x18C9774")]
		public static void RecordPurchaseEventWithOneItem()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x18C9BE0", Offset = "0x18C9BE0", VA = "0x18C9BE0")]
		public static void RecordPurchaseEventWithMultipleItems()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x18CA054", Offset = "0x18CA054", VA = "0x18CA054")]
		public static void RecordPurchaseEventWithMultipleCurrencies()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x18CA4A4", Offset = "0x18CA4A4", VA = "0x18CA4A4")]
		public StandardEventSample()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000201")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170001F7")]
		public bool Highlight
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x1762EE0", Offset = "0x1762EE0", VA = "0x1762EE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x1762EE8", Offset = "0x1762EE8", VA = "0x1762EE8")]
			set
			{
			}
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1762EF4", Offset = "0x1762EF4", VA = "0x1762EF4")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x17630BC", Offset = "0x17630BC", VA = "0x17630BC", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x17630E4", Offset = "0x17630E4", VA = "0x17630E4", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x176310C", Offset = "0x176310C", VA = "0x176310C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1762FBC", Offset = "0x1762FBC", VA = "0x1762FBC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x17633E0", Offset = "0x17633E0", VA = "0x17633E0")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170001F8")]
		public bool InRange
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x176DA74", Offset = "0x176DA74", VA = "0x176DA74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x176DA7C", Offset = "0x176DA7C", VA = "0x176DA7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public bool Targeted
		{
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x176DBF4", Offset = "0x176DBF4", VA = "0x176DBF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x176DBFC", Offset = "0x176DBFC", VA = "0x176DBFC")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x176DC08", Offset = "0x176DC08", VA = "0x176DC08", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x176DA88", Offset = "0x176DA88", VA = "0x176DA88")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x176DE10", Offset = "0x176DE10", VA = "0x176DE10")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109C69C", Offset = "0x109C69C")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170001FA")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x176DE18", Offset = "0x176DE18", VA = "0x176DE18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x176DE20", Offset = "0x176DE20", VA = "0x176DE20")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x176DE3C", Offset = "0x176DE3C", VA = "0x176DE3C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x176E07C", Offset = "0x176E07C", VA = "0x176E07C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x176E994", Offset = "0x176E994", VA = "0x176E994", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x176EE28", Offset = "0x176EE28", VA = "0x176EE28", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x176F0E8", Offset = "0x176F0E8", VA = "0x176F0E8")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x176E2F0", Offset = "0x176E2F0", VA = "0x176E2F0")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x176F1D8", Offset = "0x176F1D8", VA = "0x176F1D8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x176F634", Offset = "0x176F634", VA = "0x176F634", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x176F64C", Offset = "0x176F64C", VA = "0x176F64C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x176F654", Offset = "0x176F654", VA = "0x176F654")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1775564", Offset = "0x1775564", VA = "0x1775564")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x177561C", Offset = "0x177561C", VA = "0x177561C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x17756D0", Offset = "0x17756D0", VA = "0x17756D0")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000206")]
		public enum CrosshairState
		{
			[Token(Token = "0x400098B")]
			Disabled,
			[Token(Token = "0x400098C")]
			Enabled,
			[Token(Token = "0x400098D")]
			Targeted
		}

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1775790", Offset = "0x1775790", VA = "0x1775790")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x176DD74", Offset = "0x176DD74", VA = "0x176DD74")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x17757FC", Offset = "0x17757FC", VA = "0x17757FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1775844", Offset = "0x1775844", VA = "0x1775844")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1E436B0", Offset = "0x1E436B0", VA = "0x1E436B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1E4379C", Offset = "0x1E4379C", VA = "0x1E4379C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1E437A8", Offset = "0x1E437A8", VA = "0x1E437A8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1E437B4", Offset = "0x1E437B4", VA = "0x1E437B4")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1943D3C", Offset = "0x1943D3C", VA = "0x1943D3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1943D90", Offset = "0x1943D90", VA = "0x1943D90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x19440FC", Offset = "0x19440FC", VA = "0x19440FC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1944200", Offset = "0x1944200", VA = "0x1944200")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1943D94", Offset = "0x1943D94", VA = "0x1943D94")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1944304", Offset = "0x1944304", VA = "0x1944304")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200020A")]
		public enum ContactTest
		{
			[Token(Token = "0x40009A0")]
			PerpenTest,
			[Token(Token = "0x40009A1")]
			BackwardsPress
		}

		[Token(Token = "0x4000991")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000992")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A37AC", Offset = "0x10A37AC")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170001FB")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x1945B60", Offset = "0x1945B60", VA = "0x1945B60", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001FC")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x1945B68", Offset = "0x1945B68", VA = "0x1945B68")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001FD")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x1945B74", Offset = "0x1945B74", VA = "0x1945B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8A8C", Offset = "0x10A8A8C")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x1945B7C", Offset = "0x1945B7C", VA = "0x1945B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8A9C", Offset = "0x10A8A9C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1945B84", Offset = "0x1945B84", VA = "0x1945B84", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1945C98", Offset = "0x1945C98", VA = "0x1945C98")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1945EB0", Offset = "0x1945EB0", VA = "0x1945EB0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1946464", Offset = "0x1946464", VA = "0x1946464")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1946510", Offset = "0x1946510", VA = "0x1946510")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x194637C", Offset = "0x194637C", VA = "0x194637C")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1946618", Offset = "0x1946618", VA = "0x1946618")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x194669C", Offset = "0x194669C", VA = "0x194669C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1946728", Offset = "0x1946728", VA = "0x1946728")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A37CC", Offset = "0x10A37CC")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A37DC", Offset = "0x10A37DC")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170001FE")]
		public Collider Collider
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x1946974", Offset = "0x1946974", VA = "0x1946974", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8AAC", Offset = "0x10A8AAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x194697C", Offset = "0x194697C", VA = "0x194697C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8ABC", Offset = "0x10A8ABC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x1946984", Offset = "0x1946984", VA = "0x1946984", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8ACC", Offset = "0x10A8ACC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x194698C", Offset = "0x194698C", VA = "0x194698C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8ADC", Offset = "0x10A8ADC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x1946994", Offset = "0x1946994", VA = "0x1946994", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x19469E4", Offset = "0x19469E4", VA = "0x19469E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1946A78", Offset = "0x1946A78", VA = "0x1946A78")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000201")]
		Collider Collider
		{
			[Token(Token = "0x6000CD5")]
			get;
		}

		[Token(Token = "0x17000202")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000CD6")]
			get;
		}

		[Token(Token = "0x17000203")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000CD7")]
			get;
		}
	}
	[Token(Token = "0x200020D")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1945DF8", Offset = "0x1945DF8", VA = "0x1945DF8")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200020E")]
	public enum InteractionType
	{
		[Token(Token = "0x40009AA")]
		Enter,
		[Token(Token = "0x40009AB")]
		Stay,
		[Token(Token = "0x40009AC")]
		Exit
	}
	[Token(Token = "0x200020F")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000210")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40009BE")]
			Mesh,
			[Token(Token = "0x40009BF")]
			Skeleton,
			[Token(Token = "0x40009C0")]
			Both
		}

		[Token(Token = "0x2000211")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C6FC", Offset = "0x109C6FC")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700020F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CFA")]
				[Address(RVA = "0x293CD60", Offset = "0x293CD60", VA = "0x293CD60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000210")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CFC")]
				[Address(RVA = "0x293CDA8", Offset = "0x293CDA8", VA = "0x293CDA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x293CACC", Offset = "0x293CACC", VA = "0x293CACC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x293CAF8", Offset = "0x293CAF8", VA = "0x293CAF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x293CAFC", Offset = "0x293CAFC", VA = "0x293CAFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x293CD68", Offset = "0x293CD68", VA = "0x293CD68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009AD")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A380C", Offset = "0x10A380C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000204")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x1A5E584", Offset = "0x1A5E584", VA = "0x1A5E584")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x1A5E5BC", Offset = "0x1A5E5BC", VA = "0x1A5E5BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x1A5E62C", Offset = "0x1A5E62C", VA = "0x1A5E62C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x1A5E664", Offset = "0x1A5E664", VA = "0x1A5E664")]
			private set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x1A5E6D4", Offset = "0x1A5E6D4", VA = "0x1A5E6D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x1A5E70C", Offset = "0x1A5E70C", VA = "0x1A5E70C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x1A5E77C", Offset = "0x1A5E77C", VA = "0x1A5E77C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x1A5E7B4", Offset = "0x1A5E7B4", VA = "0x1A5E7B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x1A5E824", Offset = "0x1A5E824", VA = "0x1A5E824")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x1A5E85C", Offset = "0x1A5E85C", VA = "0x1A5E85C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x1A5E8CC", Offset = "0x1A5E8CC", VA = "0x1A5E8CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x1A5E900", Offset = "0x1A5E900", VA = "0x1A5E900")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x1A5E96C", Offset = "0x1A5E96C", VA = "0x1A5E96C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x1A5E9A0", Offset = "0x1A5E9A0", VA = "0x1A5E9A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x1A5EA0C", Offset = "0x1A5EA0C", VA = "0x1A5EA0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x1A5EA40", Offset = "0x1A5EA40", VA = "0x1A5EA40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x1A5EAAC", Offset = "0x1A5EAAC", VA = "0x1A5EAAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x1A5EAE0", Offset = "0x1A5EAE0", VA = "0x1A5EAE0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x1A5EB4C", Offset = "0x1A5EB4C", VA = "0x1A5EB4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x1A5EB80", Offset = "0x1A5EB80", VA = "0x1A5EB80")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x1A5EBEC", Offset = "0x1A5EBEC", VA = "0x1A5EBEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8AEC", Offset = "0x10A8AEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x1A5EC38", Offset = "0x1A5EC38", VA = "0x1A5EC38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8AFC", Offset = "0x10A8AFC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1A5EC8C", Offset = "0x1A5EC8C", VA = "0x1A5EC8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1A5F060", Offset = "0x1A5F060", VA = "0x1A5F060")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1A5EFE8", Offset = "0x1A5EFE8", VA = "0x1A5EFE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A8B0C", Offset = "0x10A8B0C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1A5F0E8", Offset = "0x1A5F0E8", VA = "0x1A5F0E8")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1A5F1CC", Offset = "0x1A5F1CC", VA = "0x1A5F1CC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1A5F3AC", Offset = "0x1A5F3AC", VA = "0x1A5F3AC")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1A5F5E8", Offset = "0x1A5F5E8", VA = "0x1A5F5E8")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1A5F774", Offset = "0x1A5F774", VA = "0x1A5F774")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000213")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x29426CC", Offset = "0x29426CC", VA = "0x29426CC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000211")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x1A632CC", Offset = "0x1A632CC", VA = "0x1A632CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x1A632D4", Offset = "0x1A632D4", VA = "0x1A632D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x1A632DC", Offset = "0x1A632DC", VA = "0x1A632DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x1A632E4", Offset = "0x1A632E4", VA = "0x1A632E4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x1A632EC", Offset = "0x1A632EC", VA = "0x1A632EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8BBC", Offset = "0x10A8BBC")]
			add
			{
			}
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x1A6338C", Offset = "0x1A6338C", VA = "0x1A6338C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8BCC", Offset = "0x10A8BCC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x1A6349C", Offset = "0x1A6349C", VA = "0x1A6349C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8BDC", Offset = "0x10A8BDC")]
			add
			{
			}
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x1A6353C", Offset = "0x1A6353C", VA = "0x1A6353C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8BEC", Offset = "0x10A8BEC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x1A6364C", Offset = "0x1A6364C", VA = "0x1A6364C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8BFC", Offset = "0x10A8BFC")]
			add
			{
			}
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x1A636EC", Offset = "0x1A636EC", VA = "0x1A636EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8C0C", Offset = "0x10A8C0C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1A6342C", Offset = "0x1A6342C", VA = "0x1A6342C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1A635DC", Offset = "0x1A635DC", VA = "0x1A635DC", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1A6378C", Offset = "0x1A6378C", VA = "0x1A6378C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000D0A")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1A637FC", Offset = "0x1A637FC", VA = "0x1A637FC", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1A63928", Offset = "0x1A63928", VA = "0x1A63928", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1A63A54", Offset = "0x1A63A54", VA = "0x1A63A54")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40009CC")]
		None,
		[Token(Token = "0x40009CD")]
		Proximity,
		[Token(Token = "0x40009CE")]
		Contact,
		[Token(Token = "0x40009CF")]
		Action
	}
	[Token(Token = "0x2000215")]
	public enum InteractableState
	{
		[Token(Token = "0x40009D1")]
		Default,
		[Token(Token = "0x40009D2")]
		ProximityState,
		[Token(Token = "0x40009D3")]
		ContactState,
		[Token(Token = "0x40009D4")]
		ActionState
	}
	[Token(Token = "0x2000216")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1A63BAC", Offset = "0x1A63BAC", VA = "0x1A63BAC")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000215")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x1A63AB4", Offset = "0x1A63AB4", VA = "0x1A63AB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1A6385C", Offset = "0x1A6385C", VA = "0x1A6385C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1A63988", Offset = "0x1A63988", VA = "0x1A63988")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1A63B18", Offset = "0x1A63B18", VA = "0x1A63B18")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000219")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C70C", Offset = "0x109C70C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000216")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D1D")]
				[Address(RVA = "0x2942C30", Offset = "0x2942C30", VA = "0x2942C30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000217")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D1F")]
				[Address(RVA = "0x2942C78", Offset = "0x2942C78", VA = "0x2942C78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x2942718", Offset = "0x2942718", VA = "0x2942718")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x2942744", Offset = "0x2942744", VA = "0x2942744", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x29427B4", Offset = "0x29427B4", VA = "0x29427B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x2942760", Offset = "0x2942760", VA = "0x2942760")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x2942C38", Offset = "0x2942C38", VA = "0x2942C38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1A64930", Offset = "0x1A64930", VA = "0x1A64930")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1A649AC", Offset = "0x1A649AC", VA = "0x1A649AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A8C1C", Offset = "0x10A8C1C")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1A64A4C", Offset = "0x1A64A4C", VA = "0x1A64A4C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1A64B34", Offset = "0x1A64B34", VA = "0x1A64B34")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000218")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x1A64B3C", Offset = "0x1A64B3C", VA = "0x1A64B3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1A64CBC", Offset = "0x1A64CBC", VA = "0x1A64CBC")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1A64D64", Offset = "0x1A64D64", VA = "0x1A64D64")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1A64E0C", Offset = "0x1A64E0C", VA = "0x1A64E0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1A650B8", Offset = "0x1A650B8", VA = "0x1A650B8")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x1A65100", Offset = "0x1A65100", VA = "0x1A65100")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x1A653B0", Offset = "0x1A653B0", VA = "0x1A653B0")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x1A654FC", Offset = "0x1A654FC", VA = "0x1A654FC")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200021C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C71C", Offset = "0x109C71C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700021D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D39")]
				[Address(RVA = "0x293BD40", Offset = "0x293BD40", VA = "0x293BD40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D3B")]
				[Address(RVA = "0x293BD88", Offset = "0x293BD88", VA = "0x293BD88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x293B90C", Offset = "0x293B90C", VA = "0x293B90C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x293B938", Offset = "0x293B938", VA = "0x293B938", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x293B93C", Offset = "0x293B93C", VA = "0x293B93C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x293BD48", Offset = "0x293BD48", VA = "0x293BD48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009ED")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000219")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x1770CB4", Offset = "0x1770CB4", VA = "0x1770CB4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700021A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x1770CBC", Offset = "0x1770CBC", VA = "0x1770CBC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700021B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x1770CC4", Offset = "0x1770CC4", VA = "0x1770CC4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021C")]
		public override bool EnableState
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x1770CCC", Offset = "0x1770CCC", VA = "0x1770CCC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x1770CF8", Offset = "0x1770CF8", VA = "0x1770CF8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x1770D34", Offset = "0x1770D34", VA = "0x1770D34", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1770DEC", Offset = "0x1770DEC", VA = "0x1770DEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A8CCC", Offset = "0x10A8CCC")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1770E64", Offset = "0x1770E64", VA = "0x1770E64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1771104", Offset = "0x1771104", VA = "0x1771104")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1771290", Offset = "0x1771290", VA = "0x1771290")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x1771388", Offset = "0x1771388", VA = "0x1771388", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x1771680", Offset = "0x1771680", VA = "0x1771680", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1771684", Offset = "0x1771684", VA = "0x1771684", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x1771688", Offset = "0x1771688", VA = "0x1771688")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A389C", Offset = "0x10A389C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A38AC", Offset = "0x10A38AC")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A38BC", Offset = "0x10A38BC")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700021F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x17716A0", Offset = "0x17716A0", VA = "0x17716A0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8D7C", Offset = "0x10A8D7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x17716A8", Offset = "0x17716A8", VA = "0x17716A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8D8C", Offset = "0x10A8D8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public bool EnableState
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x17716B0", Offset = "0x17716B0", VA = "0x17716B0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x17716CC", Offset = "0x17716CC", VA = "0x17716CC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x17716EC", Offset = "0x17716EC", VA = "0x17716EC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8D9C", Offset = "0x10A8D9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x17716F4", Offset = "0x17716F4", VA = "0x17716F4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8DAC", Offset = "0x10A8DAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public float SphereRadius
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x1771700", Offset = "0x1771700", VA = "0x1771700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8DBC", Offset = "0x10A8DBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x1771708", Offset = "0x1771708", VA = "0x1771708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8DCC", Offset = "0x10A8DCC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1771710", Offset = "0x1771710", VA = "0x1771710")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1771758", Offset = "0x1771758", VA = "0x1771758", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x177175C", Offset = "0x177175C", VA = "0x177175C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200021E")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000A00")]
		None = 0,
		[Token(Token = "0x4000A01")]
		Ray = 1,
		[Token(Token = "0x4000A02")]
		Poke = 4,
		[Token(Token = "0x4000A03")]
		All = -1
	}
	[Token(Token = "0x200021F")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000A05")]
		Inactive,
		[Token(Token = "0x4000A06")]
		PrimaryInputDown,
		[Token(Token = "0x4000A07")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000A08")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000220")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1A63A5C", Offset = "0x1A63A5C", VA = "0x1A63A5C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000221")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A38CC", Offset = "0x10A38CC")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A38DC", Offset = "0x10A38DC")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A38EC", Offset = "0x10A38EC")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000223")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x1A63C70", Offset = "0x1A63C70", VA = "0x1A63C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x1A63C78", Offset = "0x1A63C78", VA = "0x1A63C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8DDC", Offset = "0x10A8DDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x1A63C80", Offset = "0x1A63C80", VA = "0x1A63C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8DEC", Offset = "0x10A8DEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000D4B")]
			get;
		}

		[Token(Token = "0x17000226")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000D4C")]
			get;
		}

		[Token(Token = "0x17000227")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000D4D")]
			get;
		}

		[Token(Token = "0x17000228")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x1A63C8C", Offset = "0x1A63C8C", VA = "0x1A63C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8DFC", Offset = "0x10A8DFC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x1A63C98", Offset = "0x1A63C98", VA = "0x1A63C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8E0C", Offset = "0x10A8E0C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x1A63CA4", Offset = "0x1A63CA4", VA = "0x1A63CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8E1C", Offset = "0x10A8E1C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x1A63CB0", Offset = "0x1A63CB0", VA = "0x1A63CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8E2C", Offset = "0x10A8E2C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000D56")]
			get;
			[Token(Token = "0x6000D57")]
			set;
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1A63CBC", Offset = "0x1A63CBC", VA = "0x1A63CBC")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D53")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000D54")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000D55")]
		public abstract void DeFocus();

		[Token(Token = "0x6000D58")]
		public abstract void Initialize();

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x1A63CC4", Offset = "0x1A63CC4", VA = "0x1A63CC4")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1A63D10", Offset = "0x1A63D10", VA = "0x1A63D10")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1A63D64", Offset = "0x1A63D64", VA = "0x1A63D64", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1A64014", Offset = "0x1A64014", VA = "0x1A64014", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1A647A0", Offset = "0x1A647A0", VA = "0x1A647A0")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700022B")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000D5E")]
			get;
		}

		[Token(Token = "0x1700022C")]
		bool EnableState
		{
			[Token(Token = "0x6000D60")]
			get;
			[Token(Token = "0x6000D61")]
			set;
		}

		[Token(Token = "0x1700022D")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000D62")]
			get;
			[Token(Token = "0x6000D63")]
			set;
		}

		[Token(Token = "0x6000D5F")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000223")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000224")]
		private enum PinchState
		{
			[Token(Token = "0x4000A19")]
			None,
			[Token(Token = "0x4000A1A")]
			PinchDown,
			[Token(Token = "0x4000A1B")]
			PinchStay,
			[Token(Token = "0x4000A1C")]
			PinchUp
		}

		[Token(Token = "0x4000A15")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700022E")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x1E437BC", Offset = "0x1E437BC", VA = "0x1E437BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022F")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0x1E43844", Offset = "0x1E43844", VA = "0x1E43844")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000230")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x1E438CC", Offset = "0x1E438CC", VA = "0x1E438CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x1E43954", Offset = "0x1E43954", VA = "0x1E43954")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1E43988", Offset = "0x1E43988", VA = "0x1E43988")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000A1D")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000A1E")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000A1F")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000A20")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000A21")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A390C", Offset = "0x10A390C")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000231")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0x1E4CB14", Offset = "0x1E4CB14", VA = "0x1E4CB14", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000232")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x1E4CB1C", Offset = "0x1E4CB1C", VA = "0x1E4CB1C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000233")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0x1E4CB84", Offset = "0x1E4CB84", VA = "0x1E4CB84", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000234")]
		public override bool EnableState
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x1E4CB8C", Offset = "0x1E4CB8C", VA = "0x1E4CB8C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x1E4CBD0", Offset = "0x1E4CBD0", VA = "0x1E4CBD0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1E4CC44", Offset = "0x1E4CC44", VA = "0x1E4CC44", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1E4CCAC", Offset = "0x1E4CCAC", VA = "0x1E4CCAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1E4CD50", Offset = "0x1E4CD50", VA = "0x1E4CD50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1E4D008", Offset = "0x1E4D008", VA = "0x1E4D008")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1E4D090", Offset = "0x1E4D090", VA = "0x1E4D090", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1E4D460", Offset = "0x1E4D460", VA = "0x1E4D460")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1E4D570", Offset = "0x1E4D570", VA = "0x1E4D570")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1E4D694", Offset = "0x1E4D694", VA = "0x1E4D694")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1E4D998", Offset = "0x1E4D998", VA = "0x1E4D998")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1E4DD2C", Offset = "0x1E4DD2C", VA = "0x1E4DD2C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1E4DE14", Offset = "0x1E4DE14", VA = "0x1E4DE14", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x1E4DE50", Offset = "0x1E4DE50", VA = "0x1E4DE50")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000A2D")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000A2E")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A3980", Offset = "0x10A3980")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000235")]
		public bool EnableState
		{
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x1E4CBB4", Offset = "0x1E4CBB4", VA = "0x1E4CBB4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0x1E4CBEC", Offset = "0x1E4CBEC", VA = "0x1E4CBEC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x1E4DF5C", Offset = "0x1E4DF5C", VA = "0x1E4DF5C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x1E4CFCC", Offset = "0x1E4CFCC", VA = "0x1E4CFCC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x1E4E1BC", Offset = "0x1E4E1BC", VA = "0x1E4E1BC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8E3C", Offset = "0x10A8E3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x1E4E1C4", Offset = "0x1E4E1C4", VA = "0x1E4E1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8E4C", Offset = "0x10A8E4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1E4DF64", Offset = "0x1E4DF64", VA = "0x1E4DF64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1E4DD68", Offset = "0x1E4DD68", VA = "0x1E4DD68", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1E4E1CC", Offset = "0x1E4E1CC", VA = "0x1E4E1CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1E4E440", Offset = "0x1E4E440", VA = "0x1E4E440")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1E4E530", Offset = "0x1E4E530", VA = "0x1E4E530")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000238")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x176F674", Offset = "0x176F674", VA = "0x176F674")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x176F67C", Offset = "0x176F67C", VA = "0x176F67C")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x176F704", Offset = "0x176F704", VA = "0x176F704")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x176F70C", Offset = "0x176F70C", VA = "0x176F70C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x176F778", Offset = "0x176F778", VA = "0x176F778")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x176FA2C", Offset = "0x176FA2C", VA = "0x176FA2C")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x176FA3C", Offset = "0x176FA3C", VA = "0x176FA3C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x176FA4C", Offset = "0x176FA4C", VA = "0x176FA4C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x176470C", Offset = "0x176470C", VA = "0x176470C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1764710", Offset = "0x1764710", VA = "0x1764710")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1764748", Offset = "0x1764748", VA = "0x1764748")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1764780", Offset = "0x1764780", VA = "0x1764780")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x17647B8", Offset = "0x17647B8", VA = "0x17647B8")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x17647F0", Offset = "0x17647F0", VA = "0x17647F0")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1764828", Offset = "0x1764828", VA = "0x1764828")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1764860", Offset = "0x1764860", VA = "0x1764860")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x17648D4", Offset = "0x17648D4", VA = "0x17648D4")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x1764944", Offset = "0x1764944", VA = "0x1764944")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x176494C", Offset = "0x176494C", VA = "0x176494C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x1764950", Offset = "0x1764950", VA = "0x1764950")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1764908", Offset = "0x1764908", VA = "0x1764908")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1764990", Offset = "0x1764990", VA = "0x1764990")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200022B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C73C", Offset = "0x109C73C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700023A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DA3")]
				[Address(RVA = "0x2946164", Offset = "0x2946164", VA = "0x2946164", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA5")]
				[Address(RVA = "0x29461AC", Offset = "0x29461AC", VA = "0x29461AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x2945F78", Offset = "0x2945F78", VA = "0x2945F78")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x2945FA4", Offset = "0x2945FA4", VA = "0x2945FA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x2945FA8", Offset = "0x2945FA8", VA = "0x2945FA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x294616C", Offset = "0x294616C", VA = "0x294616C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A3E")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000A3F")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x1E419BC", Offset = "0x1E419BC", VA = "0x1E419BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1E41A68", Offset = "0x1E41A68", VA = "0x1E41A68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x1E41CB8", Offset = "0x1E41CB8", VA = "0x1E41CB8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1E41C40", Offset = "0x1E41C40", VA = "0x1E41C40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A8E5C", Offset = "0x10A8E5C")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1E41D04", Offset = "0x1E41D04", VA = "0x1E41D04")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200022D")]
		public enum SelectionState
		{
			[Token(Token = "0x4000A55")]
			Off,
			[Token(Token = "0x4000A56")]
			Selected,
			[Token(Token = "0x4000A57")]
			Highlighted
		}

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700023C")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x18C0DD8", Offset = "0x18C0DD8", VA = "0x18C0DD8")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x18C0DE0", Offset = "0x18C0DE0", VA = "0x18C0DE0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x18C0F64", Offset = "0x18C0F64", VA = "0x18C0F64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x18C1168", Offset = "0x18C1168", VA = "0x18C1168")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x18C0E68", Offset = "0x18C0E68", VA = "0x18C0E68")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x18C1254", Offset = "0x18C1254", VA = "0x18C1254")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200022F")]
		public enum SegmentType
		{
			[Token(Token = "0x4000A66")]
			Straight,
			[Token(Token = "0x4000A67")]
			LeftTurn,
			[Token(Token = "0x4000A68")]
			RightTurn,
			[Token(Token = "0x4000A69")]
			Switch
		}

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000A5E")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000A5F")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A3A60", Offset = "0x10A3A60")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700023D")]
		public float StartDistance
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x138B000", Offset = "0x138B000", VA = "0x138B000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8F0C", Offset = "0x10A8F0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x138B008", Offset = "0x138B008", VA = "0x138B008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8F1C", Offset = "0x10A8F1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public float GridSize
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x138B010", Offset = "0x138B010", VA = "0x138B010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x138B018", Offset = "0x138B018", VA = "0x138B018")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public int SubDivCount
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x138B020", Offset = "0x138B020", VA = "0x138B020")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x138B028", Offset = "0x138B028", VA = "0x138B028")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public SegmentType Type
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x138B030", Offset = "0x138B030", VA = "0x138B030")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000241")]
		public Pose EndPose
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x138B038", Offset = "0x138B038", VA = "0x138B038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		public float Radius
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x138B394", Offset = "0x138B394", VA = "0x138B394")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000243")]
		public float SegmentLength
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x138B0A0", Offset = "0x138B0A0", VA = "0x138B0A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x138B3A4", Offset = "0x138B3A4", VA = "0x138B3A4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x138B3BC", Offset = "0x138B3BC", VA = "0x138B3BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x138B0E0", Offset = "0x138B0E0", VA = "0x138B0E0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x138B3C0", Offset = "0x138B3C0", VA = "0x138B3C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x138B3C4", Offset = "0x138B3C4", VA = "0x138B3C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x138B42C", Offset = "0x138B42C", VA = "0x138B42C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x138BCF4", Offset = "0x138BCF4", VA = "0x138BCF4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x138BFA0", Offset = "0x138BFA0", VA = "0x138BFA0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000231")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C74C", Offset = "0x109C74C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000244")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DCD")]
				[Address(RVA = "0x228E80C", Offset = "0x228E80C", VA = "0x228E80C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000245")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DCF")]
				[Address(RVA = "0x228E854", Offset = "0x228E854", VA = "0x228E854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x228E668", Offset = "0x228E668", VA = "0x228E668")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x228E694", Offset = "0x228E694", VA = "0x228E694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x228E698", Offset = "0x228E698", VA = "0x228E698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x228E814", Offset = "0x228E814", VA = "0x228E814", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A6A")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000A6B")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x138C070", Offset = "0x138C070", VA = "0x138C070")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x138C12C", Offset = "0x138C12C", VA = "0x138C12C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x138C1DC", Offset = "0x138C1DC", VA = "0x138C1DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x138C354", Offset = "0x138C354", VA = "0x138C354")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x138C51C", Offset = "0x138C51C", VA = "0x138C51C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x138C604", Offset = "0x138C604", VA = "0x138C604")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x138C818", Offset = "0x138C818", VA = "0x138C818")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x138C718", Offset = "0x138C718", VA = "0x138C718")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x138C72C", Offset = "0x138C72C", VA = "0x138C72C")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x138C870", Offset = "0x138C870", VA = "0x138C870")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A8F2C", Offset = "0x10A8F2C")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x138C8E8", Offset = "0x138C8E8", VA = "0x138C8E8")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000246")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x138C998", Offset = "0x138C998", VA = "0x138C998")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x138C9A8", Offset = "0x138C9A8", VA = "0x138C9A8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x138C9B0", Offset = "0x138C9B0", VA = "0x138C9B0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x138CCF4", Offset = "0x138CCF4", VA = "0x138CCF4")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000A83")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000A84")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A3B60", Offset = "0x10A3B60")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000247")]
		public float Distance
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x138CE04", Offset = "0x138CE04", VA = "0x138CE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8FDC", Offset = "0x10A8FDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x138CE0C", Offset = "0x138CE0C", VA = "0x138CE0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A8FEC", Offset = "0x10A8FEC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public float Scale
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x138CE14", Offset = "0x138CE14", VA = "0x138CE14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x138CE1C", Offset = "0x138CE1C", VA = "0x138CE1C")]
			set
			{
			}
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x138C9AC", Offset = "0x138C9AC", VA = "0x138C9AC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x138CE24", Offset = "0x138CE24", VA = "0x138CE24")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x138C9F8", Offset = "0x138C9F8", VA = "0x138C9F8")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x138CC1C", Offset = "0x138CC1C", VA = "0x138CC1C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000DDC")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x138CD60", Offset = "0x138CD60", VA = "0x138CD60")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000235")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C75C", Offset = "0x109C75C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000249")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DEB")]
				[Address(RVA = "0x228EAF4", Offset = "0x228EAF4", VA = "0x228EAF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DED")]
				[Address(RVA = "0x228EB3C", Offset = "0x228EB3C", VA = "0x228EB3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x228E85C", Offset = "0x228E85C", VA = "0x228E85C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x228E888", Offset = "0x228E888", VA = "0x228E888", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x228E88C", Offset = "0x228E88C", VA = "0x228E88C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x228EAFC", Offset = "0x228EAFC", VA = "0x228EAFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x138CFC4", Offset = "0x138CFC4", VA = "0x138CFC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x138D024", Offset = "0x138D024", VA = "0x138D024")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x138D12C", Offset = "0x138D12C", VA = "0x138D12C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x138D29C", Offset = "0x138D29C", VA = "0x138D29C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x138D18C", Offset = "0x138D18C", VA = "0x138D18C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x138D378", Offset = "0x138D378", VA = "0x138D378")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A8FFC", Offset = "0x10A8FFC")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x138D400", Offset = "0x138D400", VA = "0x138D400")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x138D4AC", Offset = "0x138D4AC", VA = "0x138D4AC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x138D50C", Offset = "0x138D50C", VA = "0x138D50C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000237")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000AC1")]
			Start,
			[Token(Token = "0x4000AC2")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000AC3")]
			Stop
		}

		[Token(Token = "0x2000238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C76C", Offset = "0x109C76C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700024B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E00")]
				[Address(RVA = "0x228EDB8", Offset = "0x228EDB8", VA = "0x228EDB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E02")]
				[Address(RVA = "0x228EE00", Offset = "0x228EE00", VA = "0x228EE00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x228EB44", Offset = "0x228EB44", VA = "0x228EB44")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x228EB70", Offset = "0x228EB70", VA = "0x228EB70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x228EB74", Offset = "0x228EB74", VA = "0x228EB74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x228EDC0", Offset = "0x228EDC0", VA = "0x228EDC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA3")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000AA4")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000AA5")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000AA6")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A3BC0", Offset = "0x10A3BC0")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x138D568", Offset = "0x138D568", VA = "0x138D568")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x138D6D4", Offset = "0x138D6D4", VA = "0x138D6D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x138D6E0", Offset = "0x138D6E0", VA = "0x138D6E0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x138D830", Offset = "0x138D830", VA = "0x138D830")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x138D648", Offset = "0x138D648", VA = "0x138D648")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A90AC", Offset = "0x10A90AC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x138D890", Offset = "0x138D890", VA = "0x138D890")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x138D7CC", Offset = "0x138D7CC", VA = "0x138D7CC")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x138DAAC", Offset = "0x138DAAC", VA = "0x138DAAC")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x138DBE8", Offset = "0x138DBE8", VA = "0x138DBE8")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x138DB18", Offset = "0x138DB18", VA = "0x138DB18")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x138DC54", Offset = "0x138DC54", VA = "0x138DC54")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x138DC74", Offset = "0x138DC74", VA = "0x138DC74")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x138DD00", Offset = "0x138DD00", VA = "0x138DD00")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x138DDB8", Offset = "0x138DDB8", VA = "0x138DDB8")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x138DDC8", Offset = "0x138DDC8", VA = "0x138DDC8")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700024D")]
		public float TrackLength
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x138DE30", Offset = "0x138DE30", VA = "0x138DE30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x138DE38", Offset = "0x138DE38", VA = "0x138DE38")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x138DE40", Offset = "0x138DE40", VA = "0x138DE40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x138CEA4", Offset = "0x138CEA4", VA = "0x138CEA4")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x138DE44", Offset = "0x138DE44", VA = "0x138DE44")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x138E058", Offset = "0x138E058", VA = "0x138E058")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x138E154", Offset = "0x138E154", VA = "0x138E154")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class Pose
	{
		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x1E4A0C4", Offset = "0x1E4A0C4", VA = "0x1E4A0C4")]
		public Pose()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x1E4A108", Offset = "0x1E4A108", VA = "0x1E4A108")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200023C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C77C", Offset = "0x109C77C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700024F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E18")]
				[Address(RVA = "0x2293DD4", Offset = "0x2293DD4", VA = "0x2293DD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E1A")]
				[Address(RVA = "0x2293E1C", Offset = "0x2293E1C", VA = "0x2293E1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x2293C04", Offset = "0x2293C04", VA = "0x2293C04")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x2293C30", Offset = "0x2293C30", VA = "0x2293C30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x2293C34", Offset = "0x2293C34", VA = "0x2293C34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x2293DDC", Offset = "0x2293DDC", VA = "0x2293DDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200023D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C78C", Offset = "0x109C78C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000251")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E1E")]
				[Address(RVA = "0x2293F2C", Offset = "0x2293F2C", VA = "0x2293F2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000252")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E20")]
				[Address(RVA = "0x2293F74", Offset = "0x2293F74", VA = "0x2293F74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x2293E24", Offset = "0x2293E24", VA = "0x2293E24")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x2293E50", Offset = "0x2293E50", VA = "0x2293E50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x2293E54", Offset = "0x2293E54", VA = "0x2293E54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x2293F34", Offset = "0x2293F34", VA = "0x2293F34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AD6")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A3DA8", Offset = "0x10A3DA8")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700024E")]
		public bool IsMoving
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x2938DE8", Offset = "0x2938DE8", VA = "0x2938DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A915C", Offset = "0x10A915C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x2938DF0", Offset = "0x2938DF0", VA = "0x2938DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A916C", Offset = "0x10A916C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x2938DFC", Offset = "0x2938DFC", VA = "0x2938DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x2938E38", Offset = "0x2938E38", VA = "0x2938E38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x2938F1C", Offset = "0x2938F1C", VA = "0x2938F1C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x2938F90", Offset = "0x2938F90", VA = "0x2938F90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A917C", Offset = "0x10A917C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x2939018", Offset = "0x2939018", VA = "0x2939018")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A91DC", Offset = "0x10A91DC")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x29390D0", Offset = "0x29390D0", VA = "0x29390D0")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x293913C", Offset = "0x293913C", VA = "0x293913C")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x2939144", Offset = "0x2939144", VA = "0x2939144")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x29391B8", Offset = "0x29391B8", VA = "0x29391B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x293929C", Offset = "0x293929C", VA = "0x293929C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x29393D4", Offset = "0x29393D4", VA = "0x29393D4")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x2939454", Offset = "0x2939454", VA = "0x2939454")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x2939530", Offset = "0x2939530", VA = "0x2939530")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000AF3")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000AF4")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000AF5")]
		EUDT_None,
		[Token(Token = "0x4000AF6")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000240")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000241")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C79C", Offset = "0x109C79C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000253")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E3A")]
				[Address(RVA = "0x2945C08", Offset = "0x2945C08", VA = "0x2945C08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000254")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3C")]
				[Address(RVA = "0x2945C50", Offset = "0x2945C50", VA = "0x2945C50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x29459D8", Offset = "0x29459D8", VA = "0x29459D8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x2945A04", Offset = "0x2945A04", VA = "0x2945A04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x2945A08", Offset = "0x2945A08", VA = "0x2945A08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x2945C10", Offset = "0x2945C10", VA = "0x2945C10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000AF8")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000AF9")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000AFA")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10A3DE8", Offset = "0x10A3DE8")]
		public GameObject mainCamera;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10A3E20", Offset = "0x10A3E20")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1C3B520", Offset = "0x1C3B520", VA = "0x1C3B520")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x1C3BD7C", Offset = "0x1C3BD7C", VA = "0x1C3BD7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x1C3BEC4", Offset = "0x1C3BEC4", VA = "0x1C3BEC4")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x1C3C000", Offset = "0x1C3C000", VA = "0x1C3C000")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x1C3C13C", Offset = "0x1C3C13C", VA = "0x1C3C13C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x1C3BE98", Offset = "0x1C3BE98", VA = "0x1C3BE98")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x1C3C21C", Offset = "0x1C3C21C", VA = "0x1C3C21C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A92DC", Offset = "0x10A92DC")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1C3C294", Offset = "0x1C3C294", VA = "0x1C3C294")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x1C3B988", Offset = "0x1C3B988", VA = "0x1C3B988")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1C3C3E8", Offset = "0x1C3C3E8", VA = "0x1C3C3E8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x1C3C2C8", Offset = "0x1C3C2C8", VA = "0x1C3C2C8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x1C3C700", Offset = "0x1C3C700", VA = "0x1C3C700")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x1C3C7F0", Offset = "0x1C3C7F0", VA = "0x1C3C7F0")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x1C3C880", Offset = "0x1C3C880", VA = "0x1C3C880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A933C", Offset = "0x10A933C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x1C3C8D8", Offset = "0x1C3C8D8", VA = "0x1C3C8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A934C", Offset = "0x10A934C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1C3C930", Offset = "0x1C3C930", VA = "0x1C3C930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10A935C", Offset = "0x10A935C")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109C7AC", Offset = "0x109C7AC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000243")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C80C", Offset = "0x109C80C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x293C8CC", Offset = "0x293C8CC", VA = "0x293C8CC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x293C8D4", Offset = "0x293C8D4", VA = "0x293C8D4")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B12")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000B13")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000B14")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000B15")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000B16")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000B17")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000B18")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000B19")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000B1A")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000B1B")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000B1C")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x1775950", Offset = "0x1775950", VA = "0x1775950")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x17759AC", Offset = "0x17759AC", VA = "0x17759AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x1775E40", Offset = "0x1775E40", VA = "0x1775E40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x1775F2C", Offset = "0x1775F2C", VA = "0x1775F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x1776090", Offset = "0x1776090", VA = "0x1776090")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x1776398", Offset = "0x1776398", VA = "0x1776398")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x1776490", Offset = "0x1776490", VA = "0x1776490")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x17765F0", Offset = "0x17765F0", VA = "0x17765F0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x1776128", Offset = "0x1776128", VA = "0x1776128")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x177617C", Offset = "0x177617C", VA = "0x177617C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x1775CE4", Offset = "0x1775CE4", VA = "0x1775CE4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x177672C", Offset = "0x177672C", VA = "0x177672C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000B31")]
		Default,
		[Token(Token = "0x4000B32")]
		Generic,
		[Token(Token = "0x4000B33")]
		PingPongBall,
		[Token(Token = "0x4000B34")]
		Controller
	}
	[Token(Token = "0x2000245")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000255")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x1A5E25C", Offset = "0x1A5E25C", VA = "0x1A5E25C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000256")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x1A5E264", Offset = "0x1A5E264", VA = "0x1A5E264")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000257")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x1A5E26C", Offset = "0x1A5E26C", VA = "0x1A5E26C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x1A5E274", Offset = "0x1A5E274", VA = "0x1A5E274")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x138AC70", Offset = "0x138AC70", VA = "0x138AC70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x138AF58", Offset = "0x138AF58", VA = "0x138AF58")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x138AFB4", Offset = "0x138AFB4", VA = "0x138AFB4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x138AFF8", Offset = "0x138AFF8", VA = "0x138AFF8")]
		public TouchController()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000247")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4000B3C")]
		NONE = 0u,
		[Token(Token = "0x4000B3D")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x4000B3E")]
		STAGE = 2u,
		[Token(Token = "0x4000B3F")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4000B40")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x109C82C", Offset = "0x109C82C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109C82C", Offset = "0x109C82C")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x2000249")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x109C88C", Offset = "0x109C88C")]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E7E")]
				[Address(RVA = "0x2944168", Offset = "0x2944168", VA = "0x2944168", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E80")]
				[Address(RVA = "0x29441B0", Offset = "0x29441B0", VA = "0x29441B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x2944058", Offset = "0x2944058", VA = "0x2944058")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x2944084", Offset = "0x2944084", VA = "0x2944084", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x2944088", Offset = "0x2944088", VA = "0x2944088", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x2944170", Offset = "0x2944170", VA = "0x2944170", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A3ED8", Offset = "0x10A3ED8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10A3ED8", Offset = "0x10A3ED8")]
		private Transform _stage;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10A3F48", Offset = "0x10A3F48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A3F48", Offset = "0x10A3F48")]
		private Transform _stageTransform;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10A3FB8", Offset = "0x10A3FB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A3FB8", Offset = "0x10A3FB8")]
		private Camera _HMDCamera;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10A4028", Offset = "0x10A4028")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A4028", Offset = "0x10A4028")]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A4098", Offset = "0x10A4098")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10A4098", Offset = "0x10A4098")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10A4108", Offset = "0x10A4108")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A4108", Offset = "0x10A4108")]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10A4178", Offset = "0x10A4178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A4178", Offset = "0x10A4178")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A41E8", Offset = "0x10A41E8")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10A41E8", Offset = "0x10A41E8")]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x17000258")]
		public Transform stage
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x1A75A20", Offset = "0x1A75A20", VA = "0x1A75A20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x1A75ABC", Offset = "0x1A75ABC", VA = "0x1A75ABC")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x10A9590", Offset = "0x10A9590")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x1A75BDC", Offset = "0x1A75BDC", VA = "0x1A75BDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x1A75BE0", Offset = "0x1A75BE0", VA = "0x1A75BE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x1A75BE4", Offset = "0x1A75BE4", VA = "0x1A75BE4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700025B")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x1A75CB4", Offset = "0x1A75CB4", VA = "0x1A75CB4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700025C")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x1A75D84", Offset = "0x1A75D84", VA = "0x1A75D84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x1A75D8C", Offset = "0x1A75D8C", VA = "0x1A75D8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x1A75D94", Offset = "0x1A75D94", VA = "0x1A75D94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x1A75D9C", Offset = "0x1A75D9C", VA = "0x1A75D9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x1A75EBC", Offset = "0x1A75EBC", VA = "0x1A75EBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x1A75EC4", Offset = "0x1A75EC4", VA = "0x1A75EC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x1A75F6C", Offset = "0x1A75F6C", VA = "0x1A75F6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x1A75F74", Offset = "0x1A75F74", VA = "0x1A75F74")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x1A75F80", Offset = "0x1A75F80", VA = "0x1A75F80")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x1A75F88", Offset = "0x1A75F88", VA = "0x1A75F88")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x1A75F90", Offset = "0x1A75F90", VA = "0x1A75F90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x1A75F98", Offset = "0x1A75F98", VA = "0x1A75F98")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x1A75FE4", Offset = "0x1A75FE4", VA = "0x1A75FE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x1A75FEC", Offset = "0x1A75FEC", VA = "0x1A75FEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public bool isValid
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x1A75FF8", Offset = "0x1A75FF8", VA = "0x1A75FF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000264")]
		public bool isActive
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x1A76194", Offset = "0x1A76194", VA = "0x1A76194")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000265")]
		private bool _isReady
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x1A7619C", Offset = "0x1A7619C", VA = "0x1A7619C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000266")]
		public SDKRender render
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x1A76220", Offset = "0x1A76220", VA = "0x1A76220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x1A76228", Offset = "0x1A76228", VA = "0x1A76228")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x1A7628C", Offset = "0x1A7628C", VA = "0x1A7628C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x1A76420", Offset = "0x1A76420", VA = "0x1A76420")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x1A76428", Offset = "0x1A76428", VA = "0x1A76428")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10A93BC", Offset = "0x10A93BC")]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x1A76234", Offset = "0x1A76234", VA = "0x1A76234")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x1A764A0", Offset = "0x1A764A0", VA = "0x1A764A0")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x1A764AC", Offset = "0x1A764AC", VA = "0x1A764AC")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1A7655C", Offset = "0x1A7655C", VA = "0x1A7655C")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x1A7680C", Offset = "0x1A7680C", VA = "0x1A7680C")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x1A76908", Offset = "0x1A76908", VA = "0x1A76908")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x1A7687C", Offset = "0x1A7687C", VA = "0x1A7687C")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x1A768C0", Offset = "0x1A768C0", VA = "0x1A768C0")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x1A765FC", Offset = "0x1A765FC", VA = "0x1A765FC")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x1A762B0", Offset = "0x1A762B0", VA = "0x1A762B0")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x1A7694C", Offset = "0x1A7694C", VA = "0x1A7694C")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public static class SDKBridge
	{
		[Token(Token = "0x200024B")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x17000269")]
		public static bool IsActive
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x1E4FC3C", Offset = "0x1E4FC3C", VA = "0x1E4FC3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x1E4F7A4", Offset = "0x1E4F7A4", VA = "0x1E4F7A4")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x1E4F7AC", Offset = "0x1E4F7AC", VA = "0x1E4F7AC")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1E4F7B4", Offset = "0x1E4F7B4", VA = "0x1E4F7B4")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x1E4F7BC", Offset = "0x1E4F7BC", VA = "0x1E4F7BC")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1E4F7C4", Offset = "0x1E4F7C4", VA = "0x1E4F7C4")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1E4F7CC", Offset = "0x1E4F7CC", VA = "0x1E4F7CC")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x1E4F808", Offset = "0x1E4F808", VA = "0x1E4F808")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x1E4F844", Offset = "0x1E4F844", VA = "0x1E4F844")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x1E4F84C", Offset = "0x1E4F84C", VA = "0x1E4F84C")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x1E4F854", Offset = "0x1E4F854", VA = "0x1E4F854")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1E4F890", Offset = "0x1E4F890", VA = "0x1E4F890")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x1E4F8CC", Offset = "0x1E4F8CC", VA = "0x1E4F8CC")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x1E4F908", Offset = "0x1E4F908", VA = "0x1E4F908")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x1E4F910", Offset = "0x1E4F910", VA = "0x1E4F910")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x1E4F998", Offset = "0x1E4F998", VA = "0x1E4F998")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x1E4FAA8", Offset = "0x1E4FAA8", VA = "0x1E4FAA8")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x1E4FB6C", Offset = "0x1E4FB6C", VA = "0x1E4FB6C")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x1E4FBD4", Offset = "0x1E4FBD4", VA = "0x1E4FBD4")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x1E4FCF0", Offset = "0x1E4FCF0", VA = "0x1E4FCF0")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x1E4FDA4", Offset = "0x1E4FDA4", VA = "0x1E4FDA4")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x6000E96")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E97")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000E98")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E99")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000E9A")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1E4FFA8", Offset = "0x1E4FFA8", VA = "0x1E4FFA8")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x1E5038C", Offset = "0x1E5038C", VA = "0x1E5038C")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1E50554", Offset = "0x1E50554", VA = "0x1E50554")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1E50698", Offset = "0x1E50698", VA = "0x1E50698")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1E50814", Offset = "0x1E50814", VA = "0x1E50814")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1E508C0", Offset = "0x1E508C0", VA = "0x1E508C0")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200024C")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LIV _liv;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private SDKResolution _resolution;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Camera _cameraInstance;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private SDKPass _clipPlanePass;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private SDKPass _combineAlphaPass;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private SDKPass _captureTexturePass;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private SDKPass _applyTexturePass;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKPass _optimizedRenderingPass;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private RenderPassEvent _clipPlaneRenderPassEvent;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private RenderPassEvent _addAlphaRenderPassEvent;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private RenderPassEvent _captureTextureRenderPassEvent;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private RenderPassEvent _applyTextureRenderPassEvent;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private RenderPassEvent _optimizedRenderingPassEvent;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Material _writeMaterial;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private UniversalAdditionalCameraData _universalAdditionalCameraData;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private RenderTargetIdentifier _cameraColorTextureIdentifier;

		[Token(Token = "0x1700026A")]
		public LIV liv
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x1E52D88", Offset = "0x1E52D88", VA = "0x1E52D88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x1E52D90", Offset = "0x1E52D90", VA = "0x1E52D90")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x1700026C")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x1E52DA0", Offset = "0x1E52DA0", VA = "0x1E52DA0")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x1700026D")]
		public SDKResolution resolution
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x1E52DB0", Offset = "0x1E52DB0", VA = "0x1E52DB0")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x1700026E")]
		public Camera cameraInstance
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x1E52DB8", Offset = "0x1E52DB8", VA = "0x1E52DB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		public Camera cameraReference
		{
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x1E52DC0", Offset = "0x1E52DC0", VA = "0x1E52DC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		public Camera hmdCamera
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x1E52E58", Offset = "0x1E52E58", VA = "0x1E52E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		public Transform stage
		{
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x1E52E74", Offset = "0x1E52E74", VA = "0x1E52E74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x1E52E90", Offset = "0x1E52E90", VA = "0x1E52E90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x1E52EAC", Offset = "0x1E52EAC", VA = "0x1E52EAC")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000274")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x1E52F8C", Offset = "0x1E52F8C", VA = "0x1E52F8C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000275")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x1E5305C", Offset = "0x1E5305C", VA = "0x1E5305C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000276")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x1E5307C", Offset = "0x1E5307C", VA = "0x1E5307C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public bool canSetPose
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x1E53098", Offset = "0x1E53098", VA = "0x1E53098")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000278")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x1E5448C", Offset = "0x1E5448C", VA = "0x1E5448C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000279")]
		private bool interlacedRendering
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x1E544E4", Offset = "0x1E544E4", VA = "0x1E544E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027A")]
		private bool canRenderBackground
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x1E544F4", Offset = "0x1E544F4", VA = "0x1E544F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027B")]
		private bool canRenderForeground
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x1E545A4", Offset = "0x1E545A4", VA = "0x1E545A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027C")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x1E54668", Offset = "0x1E54668", VA = "0x1E54668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1E530B8", Offset = "0x1E530B8", VA = "0x1E530B8")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1E533AC", Offset = "0x1E533AC", VA = "0x1E533AC")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1E5357C", Offset = "0x1E5357C", VA = "0x1E5357C")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1E535F8", Offset = "0x1E535F8", VA = "0x1E535F8")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x1E53780", Offset = "0x1E53780", VA = "0x1E53780")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x1E537F0", Offset = "0x1E537F0", VA = "0x1E537F0")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x1E53854", Offset = "0x1E53854", VA = "0x1E53854")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x1E53994", Offset = "0x1E53994", VA = "0x1E53994")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1E53A00", Offset = "0x1E53A00", VA = "0x1E53A00")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1E53A6C", Offset = "0x1E53A6C", VA = "0x1E53A6C")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1E53AD8", Offset = "0x1E53AD8", VA = "0x1E53AD8")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x1E53B44", Offset = "0x1E53B44", VA = "0x1E53B44")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x1E53BB0", Offset = "0x1E53BB0", VA = "0x1E53BB0")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x1E53C1C", Offset = "0x1E53C1C", VA = "0x1E53C1C")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x1E53CC0", Offset = "0x1E53CC0", VA = "0x1E53CC0")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x1E53D64", Offset = "0x1E53D64", VA = "0x1E53D64")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1E53E08", Offset = "0x1E53E08", VA = "0x1E53E08")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x1E53EAC", Offset = "0x1E53EAC", VA = "0x1E53EAC")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x1E541A8", Offset = "0x1E541A8", VA = "0x1E541A8")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x1E542BC", Offset = "0x1E542BC", VA = "0x1E542BC")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x1E543E4", Offset = "0x1E543E4", VA = "0x1E543E4")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x1E546F8", Offset = "0x1E546F8", VA = "0x1E546F8")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1E55158", Offset = "0x1E55158", VA = "0x1E55158")]
		public void Render()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1E55230", Offset = "0x1E55230", VA = "0x1E55230")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1E555AC", Offset = "0x1E555AC", VA = "0x1E555AC")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1E56118", Offset = "0x1E56118", VA = "0x1E56118")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1E54858", Offset = "0x1E54858", VA = "0x1E54858")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x1E566B4", Offset = "0x1E566B4", VA = "0x1E566B4")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1E5688C", Offset = "0x1E5688C", VA = "0x1E5688C", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200024D")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4000B8B")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4000B8C")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4000B8D")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x4000B8E")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x4000B8F")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x4000B90")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4000B91")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4000B92")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4000B93")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4000B94")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4000B95")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1A43014", Offset = "0x1A43014", VA = "0x1A43014")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x1A4305C", Offset = "0x1A4305C", VA = "0x1A4305C")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1A430A4", Offset = "0x1A430A4", VA = "0x1A430A4")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x1A430EC", Offset = "0x1A430EC", VA = "0x1A430EC")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1A43134", Offset = "0x1A43134", VA = "0x1A43134")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1A4317C", Offset = "0x1A4317C", VA = "0x1A4317C")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public struct SDKConstants
	{
		[Token(Token = "0x4000B96")]
		public const string SDK_ID = "XHYEMXULL51BUMFOBOJOXXP9DAIQ37EL";

		[Token(Token = "0x4000B97")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4000B98")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x200024F")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4000B9A")]
		NONE = 0,
		[Token(Token = "0x4000B9B")]
		GAME = 63
	}
	[Token(Token = "0x2000250")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4000B9D")]
		NONE = 0uL,
		[Token(Token = "0x4000B9E")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x4000B9F")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x4000BA0")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4000BA1")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4000BA2")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4000BA3")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4000BA4")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4000BA5")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4000BA6")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4000BA7")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4000BA8")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x2000251")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4000BAA")]
		UNDEFINED = 0u,
		[Token(Token = "0x4000BAB")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4000BAC")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x4000BAD")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x2000252")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4000BAF")]
		UNDEFINED,
		[Token(Token = "0x4000BB0")]
		COLOR_BUFFER
	}
	[Token(Token = "0x2000253")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4000BB2")]
		UNDEFINED = 0u,
		[Token(Token = "0x4000BB3")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000254")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4000BB5")]
		UNDEFINED,
		[Token(Token = "0x4000BB6")]
		RAW,
		[Token(Token = "0x4000BB7")]
		DIRECTX,
		[Token(Token = "0x4000BB8")]
		OPENGL,
		[Token(Token = "0x4000BB9")]
		VULKAN,
		[Token(Token = "0x4000BBA")]
		METAL
	}
	[Token(Token = "0x2000255")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4000BBC")]
		UNDEFINED,
		[Token(Token = "0x4000BBD")]
		LINEAR,
		[Token(Token = "0x4000BBE")]
		SRGB
	}
	[Token(Token = "0x2000256")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4000BC0")]
		UNDEFINED,
		[Token(Token = "0x4000BC1")]
		FORWARD,
		[Token(Token = "0x4000BC2")]
		DEFERRED,
		[Token(Token = "0x4000BC3")]
		VERTEX_LIT,
		[Token(Token = "0x4000BC4")]
		UNIVERSAL,
		[Token(Token = "0x4000BC5")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x2000257")]
	public struct SDKResolution
	{
		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x1700027D")]
		public static SDKResolution zero
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x1A42F68", Offset = "0x1A42F68", VA = "0x1A42F68")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x1A42F70", Offset = "0x1A42F70", VA = "0x1A42F70", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000258")]
	public struct SDKVector3
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x1700027E")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x1A437EC", Offset = "0x1A437EC", VA = "0x1A437EC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700027F")]
		public static SDKVector3 one
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x1A43ACC", Offset = "0x1A43ACC", VA = "0x1A43ACC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000280")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x1A45670", Offset = "0x1A45670", VA = "0x1A45670")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000281")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x1A45680", Offset = "0x1A45680", VA = "0x1A45680")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000282")]
		public static SDKVector3 right
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x1A45690", Offset = "0x1A45690", VA = "0x1A45690")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1A44580", Offset = "0x1A44580", VA = "0x1A44580")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1A44D48", Offset = "0x1A44D48", VA = "0x1A44D48")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1A456A0", Offset = "0x1A456A0", VA = "0x1A456A0")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x1A456B0", Offset = "0x1A456B0", VA = "0x1A456B0")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1A456C0", Offset = "0x1A456C0", VA = "0x1A456C0")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1A456D0", Offset = "0x1A456D0", VA = "0x1A456D0")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x1A456E0", Offset = "0x1A456E0", VA = "0x1A456E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000259")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000283")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x1E50F1C", Offset = "0x1E50F1C", VA = "0x1E50F1C")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1E52990", Offset = "0x1E52990", VA = "0x1E52990")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x1E529C0", Offset = "0x1E529C0", VA = "0x1E529C0")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1E529C4", Offset = "0x1E529C4", VA = "0x1E529C4")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x1E52A88", Offset = "0x1E52A88", VA = "0x1E52A88")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1E52AFC", Offset = "0x1E52AFC", VA = "0x1E52AFC")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1E52BA0", Offset = "0x1E52BA0", VA = "0x1E52BA0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200025A")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x17000284")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x1E50BDC", Offset = "0x1E50BDC", VA = "0x1E50BDC")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1E51798", Offset = "0x1E51798", VA = "0x1E51798")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1E517DC", Offset = "0x1E517DC", VA = "0x1E517DC")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1E51820", Offset = "0x1E51820", VA = "0x1E51820")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1E518E0", Offset = "0x1E518E0", VA = "0x1E518E0")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x1E5198C", Offset = "0x1E5198C", VA = "0x1E5198C")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1E519E4", Offset = "0x1E519E4", VA = "0x1E519E4")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1E51A20", Offset = "0x1E51A20", VA = "0x1E51A20")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x1E51AB4", Offset = "0x1E51AB4", VA = "0x1E51AB4")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1E51AE0", Offset = "0x1E51AE0", VA = "0x1E51AE0")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1E51BCC", Offset = "0x1E51BCC", VA = "0x1E51BCC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200025B")]
	public struct SDKPlane
	{
		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x17000285")]
		public static SDKPlane empty
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x1E52304", Offset = "0x1E52304", VA = "0x1E52304")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1E5229C", Offset = "0x1E5229C", VA = "0x1E5229C")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1E52338", Offset = "0x1E52338", VA = "0x1E52338", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200025C")]
	public struct SDKPriority
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x17000286")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x1E513C0", Offset = "0x1E513C0", VA = "0x1E513C0")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1E526C4", Offset = "0x1E526C4", VA = "0x1E526C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200025D")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x17000287")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x1E4F3A4", Offset = "0x1E4F3A4", VA = "0x1E4F3A4")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1E4F4E8", Offset = "0x1E4F4E8", VA = "0x1E4F4E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200025E")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x17000288")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x1E50284", Offset = "0x1E50284", VA = "0x1E50284")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1E513CC", Offset = "0x1E513CC", VA = "0x1E513CC")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1E513DC", Offset = "0x1E513DC", VA = "0x1E513DC")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1E513F0", Offset = "0x1E513F0", VA = "0x1E513F0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200025F")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x17000289")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x1E52144", Offset = "0x1E52144", VA = "0x1E52144")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1E521A8", Offset = "0x1E521A8", VA = "0x1E521A8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000260")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x1700028A")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x1A436FC", Offset = "0x1A436FC", VA = "0x1A436FC")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1A437FC", Offset = "0x1A437FC", VA = "0x1A437FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000261")]
	public struct SDKTexture
	{
		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x1700028B")]
		public static SDKTexture empty
		{
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x1A43288", Offset = "0x1A43288", VA = "0x1A43288")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1A432D4", Offset = "0x1A432D4", VA = "0x1A432D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000262")]
	public struct SDKTransform
	{
		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x1700028C")]
		public static SDKTransform empty
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x1A43A88", Offset = "0x1A43A88", VA = "0x1A43A88")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1A43ADC", Offset = "0x1A43ADC", VA = "0x1A43ADC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000263")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x1700028D")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x1E50BA8", Offset = "0x1E50BA8", VA = "0x1E50BA8")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x1E50C08", Offset = "0x1E50C08", VA = "0x1E50C08", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000264")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x1700028E")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x1E50E20", Offset = "0x1E50E20", VA = "0x1E50E20")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x1E50F30", Offset = "0x1E50F30", VA = "0x1E50F30", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000265")]
	public struct SDKPose
	{
		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x1700028F")]
		public static SDKPose empty
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x1E51324", Offset = "0x1E51324", VA = "0x1E51324")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1E523F8", Offset = "0x1E523F8", VA = "0x1E523F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000266")]
	public class SDKPass : ScriptableRenderPass
	{
		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CommandBuffer commandBuffer;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1E52268", Offset = "0x1E52268", VA = "0x1E52268", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1E52294", Offset = "0x1E52294", VA = "0x1E52294")]
		public SDKPass()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class SDKUniversalRenderFeature : ScriptableRendererFeature
	{
		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SDKPass> passes;

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1A43BC8", Offset = "0x1A43BC8", VA = "0x1A43BC8")]
		public static void AddPass(SDKPass pass)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1A43C54", Offset = "0x1A43C54", VA = "0x1A43C54")]
		public static void ClearPasses()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x1A43CD8", Offset = "0x1A43CD8", VA = "0x1A43CD8", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1A43CDC", Offset = "0x1A43CDC", VA = "0x1A43CDC", Slot = "6")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1A43DF8", Offset = "0x1A43DF8", VA = "0x1A43DF8")]
		public SDKUniversalRenderFeature()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public static class SDKUtils
	{
		[Token(Token = "0x17000290")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x1A44390", Offset = "0x1A44390", VA = "0x1A44390")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x1A43E8C", Offset = "0x1A43E8C", VA = "0x1A43E8C")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x1A44378", Offset = "0x1A44378", VA = "0x1A44378")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x1A443C0", Offset = "0x1A443C0", VA = "0x1A443C0")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1A44458", Offset = "0x1A44458", VA = "0x1A44458")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1A44478", Offset = "0x1A44478", VA = "0x1A44478")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1A444DC", Offset = "0x1A444DC", VA = "0x1A444DC")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1A444E8", Offset = "0x1A444E8", VA = "0x1A444E8")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1A444FC", Offset = "0x1A444FC", VA = "0x1A444FC")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x1A44638", Offset = "0x1A44638", VA = "0x1A44638")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1A449A0", Offset = "0x1A449A0", VA = "0x1A449A0")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1A44584", Offset = "0x1A44584", VA = "0x1A44584")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1A44B20", Offset = "0x1A44B20", VA = "0x1A44B20")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x6000F27")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6000F28")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x1A44D4C", Offset = "0x1A44D4C", VA = "0x1A44D4C")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x1A44EE8", Offset = "0x1A44EE8", VA = "0x1A44EE8")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1A44F9C", Offset = "0x1A44F9C", VA = "0x1A44F9C")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x1A450B0", Offset = "0x1A450B0", VA = "0x1A450B0")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x1A451F8", Offset = "0x1A451F8", VA = "0x1A451F8")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x1A45204", Offset = "0x1A45204", VA = "0x1A45204")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x1A453B0", Offset = "0x1A453B0", VA = "0x1A453B0")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x1A4544C", Offset = "0x1A4544C", VA = "0x1A4544C")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x2000269")]
	public enum AAMode
	{
		[Token(Token = "0x4000C27")]
		FXAA2,
		[Token(Token = "0x4000C28")]
		FXAA3Console,
		[Token(Token = "0x4000C29")]
		FXAA1PresetA,
		[Token(Token = "0x4000C2A")]
		FXAA1PresetB,
		[Token(Token = "0x4000C2B")]
		NFAA,
		[Token(Token = "0x4000C2C")]
		SSAA,
		[Token(Token = "0x4000C2D")]
		DLAA
	}
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109C8AC", Offset = "0x109C8AC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109C8AC", Offset = "0x109C8AC")]
	[ExecuteInEditMode]
	public class Antialiasing : PostEffectsBase
	{
		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AAMode mode;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool showGeneratedNormals;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float offsetScale;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blurRadius;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float edgeThresholdMin;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float edgeThreshold;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float edgeSharpness;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool dlaaSharp;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader ssaaShader;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material ssaa;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader dlaaShader;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dlaa;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader nfaaShader;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material nfaa;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader shaderFXAAPreset2;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material materialFXAAPreset2;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Shader shaderFXAAPreset3;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material materialFXAAPreset3;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Shader shaderFXAAII;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material materialFXAAII;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Shader shaderFXAAIII;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material materialFXAAIII;

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x193B6A0", Offset = "0x193B6A0", VA = "0x193B6A0")]
		public Material CurrentAAMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x193B704", Offset = "0x193B704", VA = "0x193B704", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x193B878", Offset = "0x193B878", VA = "0x193B878")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x193BE04", Offset = "0x193BE04", VA = "0x193BE04")]
		public Antialiasing()
		{
		}
	}
	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109C940", Offset = "0x109C940")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109C940", Offset = "0x109C940")]
	[ExecuteInEditMode]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x200026C")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x4000C63")]
			Ghosting,
			[Token(Token = "0x4000C64")]
			Anamorphic,
			[Token(Token = "0x4000C65")]
			Combined
		}

		[Token(Token = "0x200026D")]
		public enum TweakMode
		{
			[Token(Token = "0x4000C67")]
			Basic,
			[Token(Token = "0x4000C68")]
			Complex
		}

		[Token(Token = "0x200026E")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x4000C6A")]
			Auto,
			[Token(Token = "0x4000C6B")]
			On,
			[Token(Token = "0x4000C6C")]
			Off
		}

		[Token(Token = "0x200026F")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x4000C6E")]
			Screen,
			[Token(Token = "0x4000C6F")]
			Add
		}

		[Token(Token = "0x2000270")]
		public enum BloomQuality
		{
			[Token(Token = "0x4000C71")]
			Cheap,
			[Token(Token = "0x4000C72")]
			High
		}

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweakMode tweakMode;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HDRBloomMode hdr;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool doHdr;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sepBlurSpread;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BloomQuality quality;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float bloomIntensity;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bloomThreshold;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color bloomThresholdColor;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int bloomBlurIterations;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float flareRotation;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float hollyStretchWidth;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float lensflareIntensity;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float lensflareThreshold;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lensFlareSaturation;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color flareColorA;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color flareColorB;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color flareColorC;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color flareColorD;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader lensFlareShader;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader screenBlendShader;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material screenBlend;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1940100", Offset = "0x1940100", VA = "0x1940100", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x19401F0", Offset = "0x19401F0", VA = "0x19401F0")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x19416A0", Offset = "0x19416A0", VA = "0x19416A0")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x1941420", Offset = "0x1941420", VA = "0x1941420")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x194110C", Offset = "0x194110C", VA = "0x194110C")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x1941020", Offset = "0x1941020", VA = "0x1941020")]
		private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1941200", Offset = "0x1941200", VA = "0x1941200")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1941770", Offset = "0x1941770", VA = "0x1941770")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public enum LensflareStyle34
	{
		[Token(Token = "0x4000C74")]
		Ghosting,
		[Token(Token = "0x4000C75")]
		Anamorphic,
		[Token(Token = "0x4000C76")]
		Combined
	}
	[Token(Token = "0x2000272")]
	public enum TweakMode34
	{
		[Token(Token = "0x4000C78")]
		Basic,
		[Token(Token = "0x4000C79")]
		Complex
	}
	[Token(Token = "0x2000273")]
	public enum HDRBloomMode
	{
		[Token(Token = "0x4000C7B")]
		Auto,
		[Token(Token = "0x4000C7C")]
		On,
		[Token(Token = "0x4000C7D")]
		Off
	}
	[Token(Token = "0x2000274")]
	public enum BloomScreenBlendMode
	{
		[Token(Token = "0x4000C7F")]
		Screen,
		[Token(Token = "0x4000C80")]
		Add
	}
	[Token(Token = "0x2000275")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109C9D4", Offset = "0x109C9D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109C9D4", Offset = "0x109C9D4")]
	public class BloomAndFlares : PostEffectsBase
	{
		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweakMode34 tweakMode;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HDRBloomMode hdr;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool doHdr;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sepBlurSpread;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float useSrcAlphaAsMask;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float bloomIntensity;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bloomThreshold;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int bloomBlurIterations;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool lensflares;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LensflareStyle34 lensflareMode;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float hollyStretchWidth;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float lensflareIntensity;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensflareThreshold;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Color flareColorA;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color flareColorB;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Color flareColorC;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color flareColorD;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Shader lensFlareShader;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader vignetteShader;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material vignetteMaterial;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader separableBlurShader;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader addBrightStuffOneOneShader;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material addBrightStuffBlendOneOneMaterial;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader screenBlendShader;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material screenBlend;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Shader hollywoodFlaresShader;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material hollywoodFlaresMaterial;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x19418B0", Offset = "0x19418B0", VA = "0x19418B0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x1941A10", Offset = "0x1941A10", VA = "0x1941A10")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x1942A7C", Offset = "0x1942A7C", VA = "0x1942A7C")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x194280C", Offset = "0x194280C", VA = "0x194280C")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x194255C", Offset = "0x194255C", VA = "0x194255C")]
		private void BrightFilter(float thresh, float useAlphaAsMask, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x1942698", Offset = "0x1942698", VA = "0x1942698")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x1942B38", Offset = "0x1942B38", VA = "0x1942B38")]
		public BloomAndFlares()
		{
		}
	}
	[Token(Token = "0x2000276")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109CA68", Offset = "0x109CA68")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CA68", Offset = "0x109CA68")]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000277")]
		public enum Resolution
		{
			[Token(Token = "0x4000CAC")]
			Low,
			[Token(Token = "0x4000CAD")]
			High
		}

		[Token(Token = "0x2000278")]
		public enum BlurType
		{
			[Token(Token = "0x4000CAF")]
			Standard,
			[Token(Token = "0x4000CB0")]
			Sgx
		}

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4258", Offset = "0x10A4258")]
		public float threshold;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4270", Offset = "0x10A4270")]
		public float intensity;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4288", Offset = "0x10A4288")]
		public float blurSize;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Resolution resolution;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A42A0", Offset = "0x10A42A0")]
		public int blurIterations;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BlurType blurType;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader fastBloomShader;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material fastBloomMaterial;

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1942C68", Offset = "0x1942C68", VA = "0x1942C68", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1942CE0", Offset = "0x1942CE0", VA = "0x1942CE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1942D8C", Offset = "0x1942D8C", VA = "0x1942D8C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x194316C", Offset = "0x194316C", VA = "0x194316C")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CAFC", Offset = "0x109CAFC")]
	[ExecuteInEditMode]
	public class Blur : MonoBehaviour
	{
		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A42B8", Offset = "0x10A42B8")]
		public int iterations;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A42D0", Offset = "0x10A42D0")]
		public float blurSpread;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader blurShader;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_Material;

		[Token(Token = "0x17000291")]
		protected Material material
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x1943190", Offset = "0x1943190", VA = "0x1943190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x19432E4", Offset = "0x19432E4", VA = "0x19432E4")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x19433E8", Offset = "0x19433E8", VA = "0x19433E8")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x1943498", Offset = "0x1943498", VA = "0x1943498")]
		public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x19435BC", Offset = "0x19435BC", VA = "0x19435BC")]
		private void DownSample4x(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x19436CC", Offset = "0x19436CC", VA = "0x19436CC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1943834", Offset = "0x1943834", VA = "0x1943834")]
		public Blur()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109CB48", Offset = "0x109CB48")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CB48", Offset = "0x109CB48")]
	public class BlurOptimized : PostEffectsBase
	{
		[Token(Token = "0x200027B")]
		public enum BlurType
		{
			[Token(Token = "0x4000CBC")]
			StandardGauss,
			[Token(Token = "0x4000CBD")]
			SgxGauss
		}

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A42E8", Offset = "0x10A42E8")]
		public int downsample;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4300", Offset = "0x10A4300")]
		public float blurSize;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4318", Offset = "0x10A4318")]
		public int blurIterations;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BlurType blurType;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader blurShader;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material blurMaterial;

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1943850", Offset = "0x1943850", VA = "0x1943850", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x19438C8", Offset = "0x19438C8", VA = "0x19438C8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x1943974", Offset = "0x1943974", VA = "0x1943974")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1943D20", Offset = "0x1943D20", VA = "0x1943D20")]
		public BlurOptimized()
		{
		}
	}
	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CBDC", Offset = "0x109CBDC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109CBDC", Offset = "0x109CBDC")]
	public class CameraMotionBlur : PostEffectsBase
	{
		[Token(Token = "0x200027D")]
		public enum MotionBlurFilter
		{
			[Token(Token = "0x4000CDF")]
			CameraMotion,
			[Token(Token = "0x4000CE0")]
			LocalBlur,
			[Token(Token = "0x4000CE1")]
			Reconstruction,
			[Token(Token = "0x4000CE2")]
			ReconstructionDX11,
			[Token(Token = "0x4000CE3")]
			ReconstructionDisc
		}

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_RADIUS;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MotionBlurFilter filterType;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool preview;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 previewScale;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float movementScale;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float rotationScale;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxVelocity;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minVelocity;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float velocityScale;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float softZDistance;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int velocityDownsample;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask excludeLayers;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject tmpCam;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shader;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dx11MotionBlurShader;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader replacementClear;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material motionBlurMaterial;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dx11MotionBlurMaterial;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float jitter;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool showVelocity;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float showVelocityScale;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Matrix4x4 currentViewProjMat;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Matrix4x4[] currentStereoViewProjMat;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Matrix4x4 prevViewProjMat;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Matrix4x4[] prevStereoViewProjMat;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int prevFrameCount;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool wasActive;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 prevFrameForward;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 prevFrameUp;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 prevFramePos;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Camera _camera;

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1946A80", Offset = "0x1946A80", VA = "0x1946A80")]
		private void CalculateViewProjection()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1946CDC", Offset = "0x1946CDC", VA = "0x1946CDC")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1946F74", Offset = "0x1946F74", VA = "0x1946F74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1947048", Offset = "0x1947048", VA = "0x1947048")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x19471E0", Offset = "0x19471E0", VA = "0x19471E0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1947298", Offset = "0x1947298", VA = "0x1947298")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1946E18", Offset = "0x1946E18", VA = "0x1946E18")]
		private void Remember()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1948C18", Offset = "0x1948C18", VA = "0x1948C18")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1948B88", Offset = "0x1948B88", VA = "0x1948B88")]
		private void StartFrame()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1948C08", Offset = "0x1948C08", VA = "0x1948C08")]
		private static int divRoundUp(int x, int d)
		{
			return default(int);
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1948FCC", Offset = "0x1948FCC", VA = "0x1948FCC")]
		public CameraMotionBlur()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CC70", Offset = "0x109CC70")]
	public class ColorCorrectionCurves : PostEffectsBase
	{
		[Token(Token = "0x200027F")]
		public enum ColorCorrectionMode
		{
			[Token(Token = "0x4000CFD")]
			Simple,
			[Token(Token = "0x4000CFE")]
			Advanced
		}

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve redChannel;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve greenChannel;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve blueChannel;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useDepthCorrection;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve zCurve;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve depthRedChannel;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve depthGreenChannel;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve depthBlueChannel;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material ccMaterial;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material ccDepthMaterial;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material selectiveCcMaterial;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D rgbChannelTex;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D rgbDepthChannelTex;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Texture2D zCurveTex;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float saturation;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool selectiveCc;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color selectiveFromColor;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Color selectiveToColor;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ColorCorrectionMode mode;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool updateTextures;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader colorCorrectionCurvesShader;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader simpleColorCorrectionCurvesShader;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Shader colorCorrectionSelectiveShader;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool updateTexturesOnStartup;

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x194A708", Offset = "0x194A708", VA = "0x194A708")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x194A734", Offset = "0x194A734", VA = "0x194A734")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x194A738", Offset = "0x194A738", VA = "0x194A738", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x194AA1C", Offset = "0x194AA1C", VA = "0x194AA1C")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x194ADDC", Offset = "0x194ADDC", VA = "0x194ADDC")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x194ADE0", Offset = "0x194ADE0", VA = "0x194ADE0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x194B12C", Offset = "0x194B12C", VA = "0x194B12C")]
		public ColorCorrectionCurves()
		{
		}
	}
	[Token(Token = "0x2000280")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CCBC", Offset = "0x109CCBC")]
	public class ColorCorrectionLookup : PostEffectsBase
	{
		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material material;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture3D converted3DLut;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string basedOnTempTex;

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x1762340", Offset = "0x1762340", VA = "0x1762340", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x17623B4", Offset = "0x17623B4", VA = "0x17623B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x1762470", Offset = "0x1762470", VA = "0x1762470")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x176251C", Offset = "0x176251C", VA = "0x176251C")]
		public void SetIdentityLut()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x1762750", Offset = "0x1762750", VA = "0x1762750")]
		public bool ValidDimensions(Texture2D tex2d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x1762818", Offset = "0x1762818", VA = "0x1762818")]
		public void Convert(Texture2D temp2DTex, string path)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x1762B9C", Offset = "0x1762B9C", VA = "0x1762B9C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x1762DB4", Offset = "0x1762DB4", VA = "0x1762DB4")]
		public ColorCorrectionLookup()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CD08", Offset = "0x109CD08")]
	public class ColorCorrectionRamp : ImageEffectBase
	{
		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x1762E10", Offset = "0x1762E10", VA = "0x1762E10")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x1762ED8", Offset = "0x1762ED8", VA = "0x1762ED8")]
		public ColorCorrectionRamp()
		{
		}
	}
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CD54", Offset = "0x109CD54")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109CD54", Offset = "0x109CD54")]
	[ExecuteInEditMode]
	public class ContrastEnhance : PostEffectsBase
	{
		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4330", Offset = "0x10A4330")]
		public float intensity;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4348", Offset = "0x10A4348")]
		public float threshold;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material contrastCompositeMaterial;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4364", Offset = "0x10A4364")]
		public float blurSpread;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader separableBlurShader;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader contrastCompositeShader;

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x176365C", Offset = "0x176365C", VA = "0x176365C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x17636FC", Offset = "0x17636FC", VA = "0x17636FC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1763A90", Offset = "0x1763A90", VA = "0x1763A90")]
		public ContrastEnhance()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CDE8", Offset = "0x109CDE8")]
	public class ContrastStretch : MonoBehaviour
	{
		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A437C", Offset = "0x10A437C")]
		public float adaptationSpeed;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4398", Offset = "0x10A4398")]
		public float limitMinimum;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A43B0", Offset = "0x10A43B0")]
		public float limitMaximum;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture[] adaptRenderTex;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int curAdaptIndex;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader shaderLum;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_materialLum;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderReduce;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_materialReduce;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shaderAdapt;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_materialAdapt;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shaderApply;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_materialApply;

		[Token(Token = "0x17000292")]
		protected Material materialLum
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x1763AA8", Offset = "0x1763AA8", VA = "0x1763AA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000293")]
		protected Material materialReduce
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x1763B84", Offset = "0x1763B84", VA = "0x1763B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		protected Material materialAdapt
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x1763C60", Offset = "0x1763C60", VA = "0x1763C60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		protected Material materialApply
		{
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x1763D3C", Offset = "0x1763D3C", VA = "0x1763D3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1763E18", Offset = "0x1763E18", VA = "0x1763E18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1763EA0", Offset = "0x1763EA0", VA = "0x1763EA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x1764000", Offset = "0x1764000", VA = "0x1764000")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x176422C", Offset = "0x176422C", VA = "0x176422C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1764490", Offset = "0x1764490", VA = "0x1764490")]
		private void CalculateAdaptation(Texture curTexture)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x176468C", Offset = "0x176468C", VA = "0x176468C")]
		public ContrastStretch()
		{
		}
	}
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109CE34", Offset = "0x109CE34")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CE34", Offset = "0x109CE34")]
	public class CreaseShading : PostEffectsBase
	{
		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float intensity;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int softness;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spread;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader blurShader;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material blurMaterial;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader depthFetchShader;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material depthFetchMaterial;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader creaseApplyShader;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material creaseApplyMaterial;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1764998", Offset = "0x1764998", VA = "0x1764998", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x1764A68", Offset = "0x1764A68", VA = "0x1764A68")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x1764E3C", Offset = "0x1764E3C", VA = "0x1764E3C")]
		public CreaseShading()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109CEC8", Offset = "0x109CEC8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CEC8", Offset = "0x109CEC8")]
	public class DepthOfField : PostEffectsBase
	{
		[Token(Token = "0x2000286")]
		public enum BlurType
		{
			[Token(Token = "0x4000D3B")]
			DiscBlur,
			[Token(Token = "0x4000D3C")]
			DX11
		}

		[Token(Token = "0x2000287")]
		public enum BlurSampleCount
		{
			[Token(Token = "0x4000D3E")]
			Low,
			[Token(Token = "0x4000D3F")]
			Medium,
			[Token(Token = "0x4000D40")]
			High
		}

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool visualizeFocus;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float focalLength;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float focalSize;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float aperture;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform focalTransform;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxBlurSize;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool highResolution;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BlurType blurType;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public BlurSampleCount blurSampleCount;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool nearBlur;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float foregroundOverlap;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader dofHdrShader;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dofHdrMaterial;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader dx11BokehShader;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material dx11bokehMaterial;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float dx11BokehThreshold;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float dx11SpawnHeuristic;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D dx11BokehTexture;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float dx11BokehScale;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float dx11BokehIntensity;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float focalDistance01;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ComputeBuffer cbDrawArgs;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ComputeBuffer cbPoints;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float internalBlurWidth;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera cachedCamera;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1769A08", Offset = "0x1769A08", VA = "0x1769A08", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x1769C18", Offset = "0x1769C18", VA = "0x1769C18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1769C9C", Offset = "0x1769C9C", VA = "0x1769C9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x1769DB8", Offset = "0x1769DB8", VA = "0x1769DB8")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1769AC4", Offset = "0x1769AC4", VA = "0x1769AC4")]
		private void CreateComputeResources()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1769E14", Offset = "0x1769E14", VA = "0x1769E14")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1769F04", Offset = "0x1769F04", VA = "0x1769F04")]
		private void WriteCoc(RenderTexture fromTo, bool fgDilate)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x176A238", Offset = "0x176A238", VA = "0x176A238")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x176B858", Offset = "0x176B858", VA = "0x176B858")]
		public DepthOfField()
		{
		}
	}
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CF5C", Offset = "0x109CF5C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109CF5C", Offset = "0x109CF5C")]
	public class DepthOfFieldDeprecated : PostEffectsBase
	{
		[Token(Token = "0x2000289")]
		public enum Dof34QualitySetting
		{
			[Token(Token = "0x4000D6D")]
			OnlyBackground = 1,
			[Token(Token = "0x4000D6E")]
			BackgroundAndForeground
		}

		[Token(Token = "0x200028A")]
		public enum DofResolution
		{
			[Token(Token = "0x4000D70")]
			High = 2,
			[Token(Token = "0x4000D71")]
			Medium,
			[Token(Token = "0x4000D72")]
			Low
		}

		[Token(Token = "0x200028B")]
		public enum DofBlurriness
		{
			[Token(Token = "0x4000D74")]
			Low = 1,
			[Token(Token = "0x4000D75")]
			High = 2,
			[Token(Token = "0x4000D76")]
			VeryHigh = 4
		}

		[Token(Token = "0x200028C")]
		public enum BokehDestination
		{
			[Token(Token = "0x4000D78")]
			Background = 1,
			[Token(Token = "0x4000D79")]
			Foreground,
			[Token(Token = "0x4000D7A")]
			BackgroundAndForeground
		}

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SMOOTH_DOWNSAMPLE_PASS;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float BOKEH_EXTRA_BLUR;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dof34QualitySetting quality;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public DofResolution resolution;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool simpleTweakMode;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float focalPoint;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float smoothness;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float focalZDistance;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float focalZStartCurve;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float focalZEndCurve;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float focalStartCurve;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float focalEndCurve;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float focalDistance01;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform objectFocus;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float focalSize;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public DofBlurriness bluriness;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float maxBlurSpread;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float foregroundBlurExtrude;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dofBlurShader;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dofBlurMaterial;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader dofShader;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dofMaterial;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool visualize;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public BokehDestination bokehDestination;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float widthOverHeight;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float oneOverBaseSize;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool bokeh;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool bokehSupport;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Shader bokehShader;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D bokehTexture;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float bokehScale;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float bokehIntensity;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float bokehThresholdContrast;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float bokehThresholdLuminance;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int bokehDownsample;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material bokehMaterial;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Camera _camera;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture foregroundTexture;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture mediumRezWorkTexture;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture finalDefocus;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTexture lowRezWorkTexture;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RenderTexture bokehSource;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture bokehSource2;

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x176B8B0", Offset = "0x176B8B0", VA = "0x176B8B0")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x176B9C8", Offset = "0x176B9C8", VA = "0x176B9C8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x176BB10", Offset = "0x176BB10", VA = "0x176BB10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x176BB6C", Offset = "0x176BB6C", VA = "0x176BB6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x176BBF0", Offset = "0x176BBF0", VA = "0x176BBF0")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x176BCE0", Offset = "0x176BCE0", VA = "0x176BCE0")]
		private int GetDividerBasedOnQuality()
		{
			return default(int);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x176BD04", Offset = "0x176BD04", VA = "0x176BD04")]
		private int GetLowResolutionDividerBasedOnQuality(int baseDivider)
		{
			return default(int);
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x176BD28", Offset = "0x176BD28", VA = "0x176BD28")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x176CC00", Offset = "0x176CC00", VA = "0x176CC00")]
		private void Blur(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x176D2F4", Offset = "0x176D2F4", VA = "0x176D2F4")]
		private void BlurFg(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x176D76C", Offset = "0x176D76C", VA = "0x176D76C")]
		private void BlurHex(RenderTexture from, RenderTexture to, int blurPass, float spread, RenderTexture tmp)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x176CAA0", Offset = "0x176CAA0", VA = "0x176CAA0")]
		private void Downsample(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x176CEA4", Offset = "0x176CEA4", VA = "0x176CEA4")]
		private void AddBokeh(RenderTexture bokehInfo, RenderTexture tempTex, RenderTexture finalTarget)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x176D5C4", Offset = "0x176D5C4", VA = "0x176D5C4")]
		private void ReleaseTextures()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x176C6D4", Offset = "0x176C6D4", VA = "0x176C6D4")]
		private void AllocateTextures(bool blurForeground, RenderTexture source, int divider, int lowTexDivider)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x176D99C", Offset = "0x176D99C", VA = "0x176D99C")]
		public DepthOfFieldDeprecated()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109CFF0", Offset = "0x109CFF0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109CFF0", Offset = "0x109CFF0")]
	public class EdgeDetection : PostEffectsBase
	{
		[Token(Token = "0x200028E")]
		public enum EdgeDetectMode
		{
			[Token(Token = "0x4000D87")]
			TriangleDepthNormals,
			[Token(Token = "0x4000D88")]
			RobertsCrossDepthNormals,
			[Token(Token = "0x4000D89")]
			SobelDepth,
			[Token(Token = "0x4000D8A")]
			SobelDepthThin,
			[Token(Token = "0x4000D8B")]
			TriangleLuminance
		}

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EdgeDetectMode mode;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sensitivityDepth;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float sensitivityNormals;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lumThreshold;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float edgeExp;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sampleDist;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float edgesOnly;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color edgesOnlyBgColor;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader edgeDetectShader;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material edgeDetectMaterial;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EdgeDetectMode oldMode;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x1770484", Offset = "0x1770484", VA = "0x1770484", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x17705D8", Offset = "0x17705D8", VA = "0x17705D8")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x177051C", Offset = "0x177051C", VA = "0x177051C")]
		private void SetCameraFlag()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x17705E4", Offset = "0x17705E4", VA = "0x17705E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x17705E8", Offset = "0x17705E8", VA = "0x17705E8")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x1770810", Offset = "0x1770810", VA = "0x1770810")]
		public EdgeDetection()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D084", Offset = "0x109D084")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D084", Offset = "0x109D084")]
	public class Fisheye : PostEffectsBase
	{
		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A43C8", Offset = "0x10A43C8")]
		public float strengthX;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A43E0", Offset = "0x10A43E0")]
		public float strengthY;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader fishEyeShader;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material fisheyeMaterial;

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1771FE8", Offset = "0x1771FE8", VA = "0x1771FE8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x1772060", Offset = "0x1772060", VA = "0x1772060")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x17721D8", Offset = "0x17721D8", VA = "0x17721D8")]
		public Fisheye()
		{
		}
	}
	[Token(Token = "0x2000290")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D118", Offset = "0x109D118")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D118", Offset = "0x109D118")]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A43F8", Offset = "0x10A43F8")]
		public bool distanceFog;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A4430", Offset = "0x10A4430")]
		public bool excludeFarPixels;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A4468", Offset = "0x10A4468")]
		public bool useRadialDistance;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A44A0", Offset = "0x10A44A0")]
		public bool heightFog;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A44D8", Offset = "0x10A44D8")]
		public float height;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4510", Offset = "0x10A4510")]
		public float heightDensity;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10A452C", Offset = "0x10A452C")]
		public float startDistance;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader fogShader;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fogMaterial;

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1774EC4", Offset = "0x1774EC4", VA = "0x1774EC4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x1774F44", Offset = "0x1774F44", VA = "0x1774F44")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x1775540", Offset = "0x1775540", VA = "0x1775540")]
		public GlobalFog()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D1AC", Offset = "0x109D1AC")]
	[ExecuteInEditMode]
	public class Grayscale : ImageEffectBase
	{
		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4564", Offset = "0x10A4564")]
		public float rampOffset;

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x177584C", Offset = "0x177584C", VA = "0x177584C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1775948", Offset = "0x1775948", VA = "0x1775948")]
		public Grayscale()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D1F8", Offset = "0x109D1F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D1F8", Offset = "0x109D1F8")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x17000296")]
		protected Material material
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x1A62A38", Offset = "0x1A62A38", VA = "0x1A62A38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x1A62998", Offset = "0x1A62998", VA = "0x1A62998", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1A62B14", Offset = "0x1A62B14", VA = "0x1A62B14", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1A62BC0", Offset = "0x1A62BC0", VA = "0x1A62BC0")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D27C", Offset = "0x109D27C")]
	public class ImageEffects
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1A62BC8", Offset = "0x1A62BC8", VA = "0x1A62BC8")]
		public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1A62E14", Offset = "0x1A62E14", VA = "0x1A62E14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x10A948C", Offset = "0x10A948C")]
		public static void Blit(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1A62E88", Offset = "0x1A62E88", VA = "0x1A62E88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x10A94C4", Offset = "0x10A94C4")]
		public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1A62F04", Offset = "0x1A62F04", VA = "0x1A62F04")]
		public ImageEffects()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D2B4", Offset = "0x109D2B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D2B4", Offset = "0x109D2B4")]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A457C", Offset = "0x10A457C")]
		public float blurAmount;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool extraBlur;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture accumTexture;

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1C345D0", Offset = "0x1C345D0", VA = "0x1C345D0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1C345D8", Offset = "0x1C345D8", VA = "0x1C345D8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1C3464C", Offset = "0x1C3464C", VA = "0x1C3464C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1C349F4", Offset = "0x1C349F4", VA = "0x1C349F4")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D348", Offset = "0x109D348")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D348", Offset = "0x109D348")]
	public class NoiseAndGrain : PostEffectsBase
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float intensityMultiplier;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float generalIntensity;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blackIntensity;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float whiteIntensity;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float midGrey;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool dx11Grain;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float softness;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool monochrome;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 intensities;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 tiling;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float monochromeTiling;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode filterMode;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader noiseShader;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material noiseMaterial;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader dx11NoiseShader;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dx11NoiseMaterial;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float TILE_AMOUNT;

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1C385FC", Offset = "0x1C385FC", VA = "0x1C385FC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1C386AC", Offset = "0x1C386AC", VA = "0x1C386AC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1C38EB0", Offset = "0x1C38EB0", VA = "0x1C38EB0")]
		private static void DrawNoiseQuadGrid(RenderTexture source, RenderTexture dest, Material fxMaterial, Texture2D noise, int passNr)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1C39204", Offset = "0x1C39204", VA = "0x1C39204")]
		public NoiseAndGrain()
		{
		}
	}
	[Token(Token = "0x2000296")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D3DC", Offset = "0x109D3DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D3DC", Offset = "0x109D3DC")]
	public class NoiseAndScratches : MonoBehaviour
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool monochrome;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool rgbFallback;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4598", Offset = "0x10A4598")]
		public float grainIntensityMin;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A45B0", Offset = "0x10A45B0")]
		public float grainIntensityMax;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A45C8", Offset = "0x10A45C8")]
		public float grainSize;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A45E8", Offset = "0x10A45E8")]
		public float scratchIntensityMin;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4600", Offset = "0x10A4600")]
		public float scratchIntensityMax;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4618", Offset = "0x10A4618")]
		public float scratchFPS;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4630", Offset = "0x10A4630")]
		public float scratchJitter;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture grainTexture;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture scratchTexture;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderRGB;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader shaderYUV;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_MaterialRGB;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_MaterialYUV;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float scratchTimeLeft;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float scratchX;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float scratchY;

		[Token(Token = "0x17000297")]
		protected Material material
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x1C393DC", Offset = "0x1C393DC", VA = "0x1C393DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1C39294", Offset = "0x1C39294", VA = "0x1C39294")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1C39558", Offset = "0x1C39558", VA = "0x1C39558")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1C39658", Offset = "0x1C39658", VA = "0x1C39658")]
		private void SanitizeParameters()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1C3974C", Offset = "0x1C3974C", VA = "0x1C3974C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1C39ACC", Offset = "0x1C39ACC", VA = "0x1C39ACC")]
		public NoiseAndScratches()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D470", Offset = "0x109D470")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Material> createdMaterials;

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1E4A178", Offset = "0x1E4A178", VA = "0x1E4A178")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1E4A5C4", Offset = "0x1E4A5C4", VA = "0x1E4A5C4")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1E4A7CC", Offset = "0x1E4A7CC", VA = "0x1E4A7CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1E4A7D8", Offset = "0x1E4A7D8", VA = "0x1E4A7D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1E4A7DC", Offset = "0x1E4A7DC", VA = "0x1E4A7DC")]
		private void RemoveCreatedMaterials()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1E4A8AC", Offset = "0x1E4A8AC", VA = "0x1E4A8AC")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1E4A9AC", Offset = "0x1E4A9AC", VA = "0x1E4A9AC", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1E4AA70", Offset = "0x1E4AA70", VA = "0x1E4AA70")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1E4A8B4", Offset = "0x1E4A8B4", VA = "0x1E4A8B4")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1E4AA7C", Offset = "0x1E4AA7C", VA = "0x1E4AA7C")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1E4AAD8", Offset = "0x1E4AAD8", VA = "0x1E4AAD8")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1E4AAE0", Offset = "0x1E4AAE0", VA = "0x1E4AAE0")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1E4AB9C", Offset = "0x1E4AB9C", VA = "0x1E4AB9C")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1E4A598", Offset = "0x1E4A598", VA = "0x1E4A598")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1E4AE10", Offset = "0x1E4AE10", VA = "0x1E4AE10")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1E4B18C", Offset = "0x1E4B18C", VA = "0x1E4B18C")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D4E0", Offset = "0x109D4E0")]
	[ExecuteInEditMode]
	internal class PostEffectsHelper : MonoBehaviour
	{
		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1E4B21C", Offset = "0x1E4B21C", VA = "0x1E4B21C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1E4B290", Offset = "0x1E4B290", VA = "0x1E4B290")]
		private static void DrawLowLevelPlaneAlignedWithCamera(float dist, RenderTexture source, RenderTexture dest, Material material, Camera cameraForProjectionMatrix)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1E4B4E8", Offset = "0x1E4B4E8", VA = "0x1E4B4E8")]
		private static void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1E4B860", Offset = "0x1E4B860", VA = "0x1E4B860")]
		private static void DrawLowLevelQuad(float x1, float x2, float y1, float y2, RenderTexture source, RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1E4BA08", Offset = "0x1E4BA08", VA = "0x1E4BA08")]
		public PostEffectsHelper()
		{
		}
	}
	[Token(Token = "0x2000299")]
	internal class Quads
	{
		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentQuads;

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1E4BB90", Offset = "0x1E4BB90", VA = "0x1E4BB90")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1E4BCBC", Offset = "0x1E4BCBC", VA = "0x1E4BCBC")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x1E4BEB4", Offset = "0x1E4BEB4", VA = "0x1E4BEB4")]
		public static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1E4C150", Offset = "0x1E4C150", VA = "0x1E4C150")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1E4C510", Offset = "0x1E4C510", VA = "0x1E4C510")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x200029A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D550", Offset = "0x109D550")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D550", Offset = "0x109D550")]
	public class ScreenOverlay : PostEffectsBase
	{
		[Token(Token = "0x200029B")]
		public enum OverlayBlendMode
		{
			[Token(Token = "0x4000DD0")]
			Additive,
			[Token(Token = "0x4000DD1")]
			ScreenBlend,
			[Token(Token = "0x4000DD2")]
			Multiply,
			[Token(Token = "0x4000DD3")]
			Overlay,
			[Token(Token = "0x4000DD4")]
			AlphaBlend
		}

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OverlayBlendMode blendMode;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float intensity;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D texture;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader overlayShader;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material overlayMaterial;

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x18BEC28", Offset = "0x18BEC28", VA = "0x18BEC28", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x18BECA0", Offset = "0x18BECA0", VA = "0x18BECA0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x18BEE28", Offset = "0x18BEE28", VA = "0x18BEE28")]
		public ScreenOverlay()
		{
		}
	}
	[Token(Token = "0x200029C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D5E4", Offset = "0x109D5E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D5E4", Offset = "0x109D5E4")]
	internal class ScreenSpaceAmbientObscurance : PostEffectsBase
	{
		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4648", Offset = "0x10A4648")]
		public float intensity;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4660", Offset = "0x10A4660")]
		public float radius;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A467C", Offset = "0x10A467C")]
		public int blurIterations;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4694", Offset = "0x10A4694")]
		public float blurFilterDistance;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A46AC", Offset = "0x10A46AC")]
		public int downsample;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D rand;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader aoShader;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material aoMaterial;

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x18BEE3C", Offset = "0x18BEE3C", VA = "0x18BEE3C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x18BEEBC", Offset = "0x18BEEBC", VA = "0x18BEEBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x18BEF68", Offset = "0x18BEF68", VA = "0x18BEF68")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x18BF7A8", Offset = "0x18BF7A8", VA = "0x18BF7A8")]
		public ScreenSpaceAmbientObscurance()
		{
		}
	}
	[Token(Token = "0x200029D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D678", Offset = "0x109D678")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D678", Offset = "0x109D678")]
	public class ScreenSpaceAmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x200029E")]
		public enum SSAOSamples
		{
			[Token(Token = "0x4000DE9")]
			Low,
			[Token(Token = "0x4000DEA")]
			Medium,
			[Token(Token = "0x4000DEB")]
			High
		}

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A46C4", Offset = "0x10A46C4")]
		public float m_Radius;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SSAOSamples m_SampleCount;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A46E0", Offset = "0x10A46E0")]
		public float m_OcclusionIntensity;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A46F8", Offset = "0x10A46F8")]
		public int m_Blur;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4710", Offset = "0x10A4710")]
		public int m_Downsampling;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4728", Offset = "0x10A4728")]
		public float m_OcclusionAttenuation;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4744", Offset = "0x10A4744")]
		public float m_MinZ;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader m_SSAOShader;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_SSAOMaterial;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_RandomTexture;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_Supported;

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x18BF7C8", Offset = "0x18BF7C8", VA = "0x18BF7C8")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x18BF880", Offset = "0x18BF880", VA = "0x18BF880")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x18BF918", Offset = "0x18BF918", VA = "0x18BF918")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x18BF920", Offset = "0x18BF920", VA = "0x18BF920")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x18BFACC", Offset = "0x18BFACC", VA = "0x18BFACC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x18BF9E8", Offset = "0x18BF9E8", VA = "0x18BF9E8")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x18BFB3C", Offset = "0x18BFB3C", VA = "0x18BFB3C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x18C01B4", Offset = "0x18C01B4", VA = "0x18C01B4")]
		public ScreenSpaceAmbientOcclusion()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D70C", Offset = "0x109D70C")]
	public class SepiaTone : ImageEffectBase
	{
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x18C1758", Offset = "0x18C1758", VA = "0x18C1758")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x18C17E8", Offset = "0x18C17E8", VA = "0x18C17E8")]
		public SepiaTone()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D758", Offset = "0x109D758")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D758", Offset = "0x109D758")]
	[ExecuteInEditMode]
	public class SunShafts : PostEffectsBase
	{
		[Token(Token = "0x20002A1")]
		public enum SunShaftsResolution
		{
			[Token(Token = "0x4000DFB")]
			Low,
			[Token(Token = "0x4000DFC")]
			Normal,
			[Token(Token = "0x4000DFD")]
			High
		}

		[Token(Token = "0x20002A2")]
		public enum ShaftsScreenBlendMode
		{
			[Token(Token = "0x4000DFF")]
			Screen,
			[Token(Token = "0x4000E00")]
			Add
		}

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SunShaftsResolution resolution;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ShaftsScreenBlendMode screenBlendMode;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform sunTransform;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int radialBlurIterations;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color sunColor;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color sunThreshold;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float sunShaftBlurRadius;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float sunShaftIntensity;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float maxRadius;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useDepthTexture;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader sunShaftsShader;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material sunShaftsMaterial;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader simpleClearShader;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material simpleClearMaterial;

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x18CC514", Offset = "0x18CC514", VA = "0x18CC514", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x18CC5B4", Offset = "0x18CC5B4", VA = "0x18CC5B4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x18CCD9C", Offset = "0x18CCD9C", VA = "0x18CCD9C")]
		public SunShafts()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D7EC", Offset = "0x109D7EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D7EC", Offset = "0x109D7EC")]
	internal class TiltShift : PostEffectsBase
	{
		[Token(Token = "0x20002A4")]
		public enum TiltShiftMode
		{
			[Token(Token = "0x4000E09")]
			TiltShiftMode,
			[Token(Token = "0x4000E0A")]
			IrisMode
		}

		[Token(Token = "0x20002A5")]
		public enum TiltShiftQuality
		{
			[Token(Token = "0x4000E0C")]
			Preview,
			[Token(Token = "0x4000E0D")]
			Low,
			[Token(Token = "0x4000E0E")]
			Normal,
			[Token(Token = "0x4000E0F")]
			High
		}

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TiltShiftMode mode;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TiltShiftQuality quality;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4760", Offset = "0x10A4760")]
		public float blurArea;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4778", Offset = "0x10A4778")]
		public float maxBlurSize;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A4790", Offset = "0x10A4790")]
		public int downsample;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader tiltShiftShader;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material tiltShiftMaterial;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x13892F4", Offset = "0x13892F4", VA = "0x13892F4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x138936C", Offset = "0x138936C", VA = "0x138936C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1389628", Offset = "0x1389628", VA = "0x1389628")]
		public TiltShift()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D870", Offset = "0x109D870")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D870", Offset = "0x109D870")]
	[ExecuteInEditMode]
	public class Tonemapping : PostEffectsBase
	{
		[Token(Token = "0x20002A7")]
		public enum TonemapperType
		{
			[Token(Token = "0x4000E1E")]
			SimpleReinhard,
			[Token(Token = "0x4000E1F")]
			UserCurve,
			[Token(Token = "0x4000E20")]
			Hable,
			[Token(Token = "0x4000E21")]
			Photographic,
			[Token(Token = "0x4000E22")]
			OptimizedHejiDawson,
			[Token(Token = "0x4000E23")]
			AdaptiveReinhard,
			[Token(Token = "0x4000E24")]
			AdaptiveReinhardAutoWhite
		}

		[Token(Token = "0x20002A8")]
		public enum AdaptiveTexSize
		{
			[Token(Token = "0x4000E26")]
			Square16 = 0x10,
			[Token(Token = "0x4000E27")]
			Square32 = 0x20,
			[Token(Token = "0x4000E28")]
			Square64 = 0x40,
			[Token(Token = "0x4000E29")]
			Square128 = 0x80,
			[Token(Token = "0x4000E2A")]
			Square256 = 0x100,
			[Token(Token = "0x4000E2B")]
			Square512 = 0x200,
			[Token(Token = "0x4000E2C")]
			Square1024 = 0x400
		}

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TonemapperType type;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AdaptiveTexSize adaptiveTextureSize;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve remapCurve;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D curveTex;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float exposureAdjustment;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float middleGrey;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float white;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float adaptionSpeed;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader tonemapper;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool validRenderTextureFormat;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material tonemapMaterial;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture rt;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x1389D1C", Offset = "0x1389D1C", VA = "0x1389D1C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1389E94", Offset = "0x1389E94", VA = "0x1389E94")]
		public float UpdateCurve()
		{
			return default(float);
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x138A148", Offset = "0x138A148", VA = "0x138A148")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x138A2D4", Offset = "0x138A2D4", VA = "0x138A2D4")]
		private bool CreateInternalRenderTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x138A3DC", Offset = "0x138A3DC", VA = "0x138A3DC")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x138AC40", Offset = "0x138AC40", VA = "0x138AC40")]
		public Tonemapping()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	internal class Triangles
	{
		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentTris;

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x138E170", Offset = "0x138E170", VA = "0x138E170")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x138E2B4", Offset = "0x138E2B4", VA = "0x138E2B4")]
		private static void Cleanup()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x138E4AC", Offset = "0x138E4AC", VA = "0x138E4AC")]
		private static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x138E748", Offset = "0x138E748", VA = "0x138E748")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x138EA64", Offset = "0x138EA64", VA = "0x138EA64")]
		public Triangles()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D904", Offset = "0x109D904")]
	[ExecuteInEditMode]
	public class Twirl : ImageEffectBase
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10A47A8", Offset = "0x10A47A8")]
		public float angle;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x138EA70", Offset = "0x138EA70", VA = "0x138EA70")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x138EABC", Offset = "0x138EABC", VA = "0x138EABC")]
		public Twirl()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D950", Offset = "0x109D950")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x109D950", Offset = "0x109D950")]
	[ExecuteInEditMode]
	public class VignetteAndChromaticAberration : PostEffectsBase
	{
		[Token(Token = "0x20002AC")]
		public enum AberrationMode
		{
			[Token(Token = "0x4000E41")]
			Simple,
			[Token(Token = "0x4000E42")]
			Advanced
		}

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AberrationMode mode;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float intensity;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float chromaticAberration;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float axialAberration;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blur;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float blurSpread;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float luminanceDependency;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float blurDistance;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader vignetteShader;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader separableBlurShader;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader chromAberrationShader;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_VignetteMaterial;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_SeparableBlurMaterial;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_ChromAberrationMaterial;

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x139D160", Offset = "0x139D160", VA = "0x139D160", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x139D228", Offset = "0x139D228", VA = "0x139D228")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x139D818", Offset = "0x139D818", VA = "0x139D818")]
		public VignetteAndChromaticAberration()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x109D9E4", Offset = "0x109D9E4")]
	public class Vortex : ImageEffectBase
	{
		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x29387FC", Offset = "0x29387FC", VA = "0x29387FC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x2938848", Offset = "0x2938848", VA = "0x2938848")]
		public Vortex()
		{
		}
	}
}
