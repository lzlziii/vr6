using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using PathCreation;
using RootMotion.FinalIK;
using TMPro;
using Unity.Collections;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.GlobalIllumination;
using UnityEngine.Playables;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using VRTK;
using VRTK.Controllables;
using VRTK.GrabAttachMechanics;
using VRTK.Highlighters;
using VRTK.SecondaryControllerGrabActions;
using Valve.VR;

[assembly: AssemblyVersion("3.7.1.6")]
[Token(Token = "0x2000002")]
public class ClairvoyanceViz : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002FD")]
	public class ClairvoyanceTrailSettings
	{
		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Affiliation affiliation;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6650CC", Offset = "0x6650CC")]
		public int numberOfParticleSystems;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6650E4", Offset = "0x6650E4")]
		public ParticleSystem trailPrefab;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66511C", Offset = "0x66511C")]
		public float trailMoveSpeed;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x665138", Offset = "0x665138")]
		public ParticleSystem markerPrefab;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x665170", Offset = "0x665170")]
		public float markerDuration;

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x84D390", Offset = "0x84D390", VA = "0x84D390")]
		public ClairvoyanceTrailSettings()
		{
		}
	}

	[Token(Token = "0x20002FE")]
	public class ChargeUpEffect
	{
		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665188", Offset = "0x665188")]
		private readonly ParticleSystem <effect>k__BackingField;

		[Token(Token = "0x17000111")]
		public ParticleSystem effect
		{
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x84D388", Offset = "0x84D388", VA = "0x84D388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670958", Offset = "0x670958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x84B7F0", Offset = "0x84B7F0", VA = "0x84B7F0")]
		public ChargeUpEffect(ParticleSystem chargeUpEffectPrefab, Transform parent)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x84BE48", Offset = "0x84BE48", VA = "0x84BE48")]
		public void Emit(bool isEmitting)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x84BB6C", Offset = "0x84BB6C", VA = "0x84BB6C")]
		public void SetPosition(Transform target)
		{
		}
	}

	[Token(Token = "0x20002FF")]
	public class TrailGroup
	{
		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer target;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Coroutine markerCoro;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Coroutine trailCoro;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665198", Offset = "0x665198")]
		private readonly ParticleSystem <trail>k__BackingField;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6651A8", Offset = "0x6651A8")]
		private readonly ParticleSystem <marker>k__BackingField;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6651B8", Offset = "0x6651B8")]
		private readonly Affiliation <affiliation>k__BackingField;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6651C8", Offset = "0x6651C8")]
		private readonly float <moveSpeed>k__BackingField;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6651D8", Offset = "0x6651D8")]
		private readonly float <markerDuration>k__BackingField;

		[Token(Token = "0x17000112")]
		public ParticleSystem trail
		{
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x84C1B0", Offset = "0x84C1B0", VA = "0x84C1B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670968", Offset = "0x670968")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public ParticleSystem marker
		{
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x84C1A8", Offset = "0x84C1A8", VA = "0x84C1A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670978", Offset = "0x670978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public Affiliation affiliation
		{
			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x84C83C", Offset = "0x84C83C", VA = "0x84C83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670988", Offset = "0x670988")]
			get
			{
				return default(Affiliation);
			}
		}

		[Token(Token = "0x17000115")]
		public float moveSpeed
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x84CF18", Offset = "0x84CF18", VA = "0x84CF18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670998", Offset = "0x670998")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000116")]
		public float markerDuration
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0x84CF20", Offset = "0x84CF20", VA = "0x84CF20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6709A8", Offset = "0x6709A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x84C5E8", Offset = "0x84C5E8", VA = "0x84C5E8")]
		public TrailGroup(Transform parent, ClairvoyanceTrailSettings settings)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x84D3B0", Offset = "0x84D3B0", VA = "0x84D3B0")]
		private ParticleSystem GenerateEffect(ParticleSystem psPrefab, Transform transform, Affiliation affiliation, string name)
		{
			return null;
		}
	}

	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C788", Offset = "0x64C788")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ClairvoyanceTrailSettings settings;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClairvoyanceViz <>4__this;

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x84C4A4", Offset = "0x84C4A4", VA = "0x84C4A4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x84C554", Offset = "0x84C554", VA = "0x84C554")]
		internal TrailGroup <GenerateTrailGroupsFromTrailSettings>b__2(int i)
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C798", Offset = "0x64C798")]
	private sealed class <>c
	{
		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<List<TrailGroup>, IEnumerable<TrailGroup>> <>9__15_1;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<TrailGroup, bool> <>9__16_1;

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x84C510", Offset = "0x84C510", VA = "0x84C510")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x84C518", Offset = "0x84C518", VA = "0x84C518")]
		internal IEnumerable<TrailGroup> <GenerateTrailGroupsFromTrailSettings>b__15_1(List<TrailGroup> trails)
		{
			return null;
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x84C520", Offset = "0x84C520", VA = "0x84C520")]
		internal bool <TryFindingValidTrailGroup>b__16_1(TrailGroup t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C7A8", Offset = "0x64C7A8")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ActivationEventArgs e;

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x84C1B8", Offset = "0x84C1B8", VA = "0x84C1B8")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x84C7F0", Offset = "0x84C7F0", VA = "0x84C7F0")]
		internal bool <TryFindingValidTrailGroup>b__0(TrailGroup t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C7B8", Offset = "0x64C7B8")]
	private sealed class <MoveTrailToTarget>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrailGroup trailGroup;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer target;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform castPoint;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ClairvoyanceViz <>4__this;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem <trail>5__2;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <moveSpeed>5__3;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <boundsCenter>5__4;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x84CF28", Offset = "0x84CF28", VA = "0x84CF28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0x84CF98", Offset = "0x84CF98", VA = "0x84CF98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x84C28C", Offset = "0x84C28C", VA = "0x84C28C")]
		[DebuggerHidden]
		public <MoveTrailToTarget>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x84C844", Offset = "0x84C844", VA = "0x84C844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x84C848", Offset = "0x84C848", VA = "0x84C848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x84CF30", Offset = "0x84CF30", VA = "0x84CF30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C7C8", Offset = "0x64C7C8")]
	private sealed class <PlaceMarker>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrailGroup trailGroup;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem <marker>5__3;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer <target>5__4;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <offset>5__5;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x84D310", Offset = "0x84D310", VA = "0x84D310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x84D380", Offset = "0x84D380", VA = "0x84D380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x84C350", Offset = "0x84C350", VA = "0x84C350")]
		[DebuggerHidden]
		public <PlaceMarker>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x84CFA0", Offset = "0x84CFA0", VA = "0x84CFA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x84CFA4", Offset = "0x84CFA4", VA = "0x84CFA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x84D318", Offset = "0x84D318", VA = "0x84D318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected ParticleSystem chargeUpEffectPrefab;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected RandomizedAudioClip armedClip;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected RandomizedAudioClip firedClip;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected List<ClairvoyanceTrailSettings> trailSettings;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<TrailGroup> trailGroups;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ChargeUpEffect chargeUpEffect;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform castPoint;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x84B5F4", Offset = "0x84B5F4", VA = "0x84B5F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x84B8A8", Offset = "0x84B8A8", VA = "0x84B8A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x84B974", Offset = "0x84B974", VA = "0x84B974")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x84BA40", Offset = "0x84BA40", VA = "0x84BA40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x84BC78", Offset = "0x84BC78", VA = "0x84BC78")]
	private void Clairvoyance_ActivationBegin(object sender, ActivationEventArgs e)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x84BEA4", Offset = "0x84BEA4", VA = "0x84BEA4")]
	private void Clairvoyance_ActivationEnd(object sender, ActivationEventArgs e)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x84BD0C", Offset = "0x84BD0C", VA = "0x84BD0C")]
	private void ClearTrailGroups()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x84B698", Offset = "0x84B698", VA = "0x84B698")]
	private List<TrailGroup> GenerateTrailGroupsFromTrailSettings(List<ClairvoyanceTrailSettings> clairvoyanceTrailSettings)
	{
		return null;
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x84BFBC", Offset = "0x84BFBC", VA = "0x84BFBC")]
	private TrailGroup TryFindingValidTrailGroup(List<TrailGroup> trailGroups, ActivationEventArgs e)
	{
		return null;
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x84C138", Offset = "0x84C138", VA = "0x84C138")]
	private Coroutine StartMoveTrailCoroutine(TrailGroup validTrailGroup, ActivationEventArgs e)
	{
		return null;
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x84C1C0", Offset = "0x84C1C0", VA = "0x84C1C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665500", Offset = "0x665500")]
	private IEnumerator MoveTrailToTarget(TrailGroup trailGroup, Renderer target, Transform castPoint)
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x84C2B8", Offset = "0x84C2B8", VA = "0x84C2B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665564", Offset = "0x665564")]
	private IEnumerator PlaceMarker(TrailGroup trailGroup, float duration)
	{
		return null;
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x84C37C", Offset = "0x84C37C", VA = "0x84C37C")]
	public ClairvoyanceViz()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x84C384", Offset = "0x84C384", VA = "0x84C384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6655C8", Offset = "0x6655C8")]
	private List<TrailGroup> <GenerateTrailGroupsFromTrailSettings>b__15_0(ClairvoyanceTrailSettings settings)
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public class LoopableParticleSystem : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isPlaying;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected ParticleSystem.EmissionModule[] emission;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected ParticleSystem[] ps;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x158C60C", Offset = "0x158C60C", VA = "0x158C60C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x158C744", Offset = "0x158C744", VA = "0x158C744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x158C7E4", Offset = "0x158C7E4", VA = "0x158C7E4")]
	public LoopableParticleSystem()
	{
	}
}
[Token(Token = "0x2000004")]
public class ClumpParticles : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float force;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem ps;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxDistance;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float particleRadius;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool gizmos;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int particlesLength;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x84E4B8", Offset = "0x84E4B8", VA = "0x84E4B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x84E510", Offset = "0x84E510", VA = "0x84E510")]
	public void SetParticles()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x84E5C8", Offset = "0x84E5C8", VA = "0x84E5C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x84EC70", Offset = "0x84EC70", VA = "0x84EC70")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x84EE54", Offset = "0x84EE54", VA = "0x84EE54")]
	public ClumpParticles()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x647AF4", Offset = "0x647AF4")]
public class PlayParticleAnimOnce : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.TextureSheetAnimationModule textureSheetAnimation;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int texAnimCycleCount;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeToPlay;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startTime;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool hasSetStartTime;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1594648", Offset = "0x1594648", VA = "0x1594648")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1594700", Offset = "0x1594700", VA = "0x1594700")]
	private void Update()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x15947C4", Offset = "0x15947C4", VA = "0x15947C4")]
	public PlayParticleAnimOnce()
	{
	}
}
[Token(Token = "0x2000006")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647B04", Offset = "0x647B04")]
public class PseudoLiquid : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxDistance;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 nth;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool clump;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float particleRadius;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool collide;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool gizmos;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem ps;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.Particle p2;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int particlesLength;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1597A70", Offset = "0x1597A70", VA = "0x1597A70")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1597AC8", Offset = "0x1597AC8", VA = "0x1597AC8")]
	private void InitializeIfNeeded()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1597BEC", Offset = "0x1597BEC", VA = "0x1597BEC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1598188", Offset = "0x1598188", VA = "0x1598188")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x159836C", Offset = "0x159836C", VA = "0x159836C")]
	public PseudoLiquid()
	{
	}
}
[Token(Token = "0x2000007")]
public class tempgeysertimer : MonoBehaviour
{
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C7D8", Offset = "0x64C7D8")]
	private sealed class <TimerLogic>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public tempgeysertimer <>4__this;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x953020", Offset = "0x953020", VA = "0x953020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x953090", Offset = "0x953090", VA = "0x953090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x952BD4", Offset = "0x952BD4", VA = "0x952BD4")]
		[DebuggerHidden]
		public <TimerLogic>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x952EBC", Offset = "0x952EBC", VA = "0x952EBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x952EC0", Offset = "0x952EC0", VA = "0x952EC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x953028", Offset = "0x953028", VA = "0x953028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C7E8", Offset = "0x64C7E8")]
	private sealed class <StartParticleSystem>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem _particleSystem;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _duration;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <starttime>5__2;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x952E44", Offset = "0x952E44", VA = "0x952E44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x952EB4", Offset = "0x952EB4", VA = "0x952EB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x952C98", Offset = "0x952C98", VA = "0x952C98")]
		[DebuggerHidden]
		public <StartParticleSystem>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x952D74", Offset = "0x952D74", VA = "0x952D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x952D78", Offset = "0x952D78", VA = "0x952D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x952E4C", Offset = "0x952E4C", VA = "0x952E4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] particleSystems;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeBetweenActivations;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float duration;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool toggle;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine timerCoro;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x952B60", Offset = "0x952B60", VA = "0x952B60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6655D8", Offset = "0x6655D8")]
	private IEnumerator TimerLogic()
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x952C00", Offset = "0x952C00", VA = "0x952C00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66563C", Offset = "0x66563C")]
	private IEnumerator StartParticleSystem(ParticleSystem _particleSystem, float _duration)
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x952CC4", Offset = "0x952CC4", VA = "0x952CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x952D0C", Offset = "0x952D0C", VA = "0x952D0C")]
	public void StartTimerCoro()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x952D58", Offset = "0x952D58", VA = "0x952D58")]
	public tempgeysertimer()
	{
	}
}
[Token(Token = "0x2000008")]
public class HealthPointViz : MonoBehaviour
{
	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer fillRenderer;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer outlineRenderer;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color fillColor;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color outlineColor;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float scale;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x9AE838", Offset = "0x9AE838", VA = "0x9AE838")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x9AEA60", Offset = "0x9AEA60", VA = "0x9AEA60")]
	public void ToggleHealthPoint(bool toggle)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x9AEA98", Offset = "0x9AEA98", VA = "0x9AEA98")]
	public HealthPointViz()
	{
	}
}
[Token(Token = "0x2000009")]
public class PlayerHealthViz : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C7F8", Offset = "0x64C7F8")]
	private sealed class <>c
	{
		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GameObject> <>9__10_1;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<GameObject> <>9__10_2;

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x1596130", Offset = "0x1596130", VA = "0x1596130")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x1596138", Offset = "0x1596138", VA = "0x1596138")]
		internal void <PlayerHealth_Changed>b__10_1(GameObject hp)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x15961B8", Offset = "0x15961B8", VA = "0x15961B8")]
		internal void <PlayerHealth_Changed>b__10_2(GameObject hp)
		{
		}
	}

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject healthPointReference;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F2F8", Offset = "0x64F2F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F2F8", Offset = "0x64F2F8")]
	[SerializeField]
	protected float angle;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F360", Offset = "0x64F360")]
	[SerializeField]
	protected float radius;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F3A0", Offset = "0x64F3A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F3A0", Offset = "0x64F3A0")]
	public int testStartingHealth;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F3F4", Offset = "0x64F3F4")]
	public int testCurrentHealth;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F40C", Offset = "0x64F40C")]
	public int testAmountChanged;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> healthPoints;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1595708", Offset = "0x1595708", VA = "0x1595708")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1595780", Offset = "0x1595780", VA = "0x1595780")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x15957F8", Offset = "0x15957F8", VA = "0x15957F8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1595924", Offset = "0x1595924", VA = "0x1595924")]
	public void PlayerHealth_Changed(object _sender, Player.ChangedEventArgs _e)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1595FC0", Offset = "0x1595FC0", VA = "0x1595FC0")]
	public PlayerHealthViz()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x159603C", Offset = "0x159603C", VA = "0x159603C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6656A0", Offset = "0x6656A0")]
	private GameObject <PlayerHealth_Changed>b__10_0(int i)
	{
		return null;
	}
}
[Token(Token = "0x200000A")]
public class SlingViz : MonoBehaviour
{
	[Token(Token = "0x2000308")]
	private class Cord
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform chainTarget;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float slackLength;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int segmentCount;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Transform chainStart;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Transform chainEnd;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Transform chainPole;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly FABRIK ik;

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x8C866C", Offset = "0x8C866C", VA = "0x8C866C")]
		public Cord(Transform chainStart, Transform chainPole, Transform chainTarget, float slackLength = -1f)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x8C92A4", Offset = "0x8C92A4", VA = "0x8C92A4")]
		public void SetChainTarget(Transform target, bool fixTransforms = true)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x8C9A40", Offset = "0x8C9A40", VA = "0x8C9A40")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x8C9894", Offset = "0x8C9894", VA = "0x8C9894")]
		private void SetLength(float chainSegmentLength, bool slack)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x8C9D64", Offset = "0x8C9D64", VA = "0x8C9D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670AF8", Offset = "0x670AF8")]
		private void <.ctor>b__7_0()
		{
		}
	}

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F424", Offset = "0x64F424")]
	[SerializeField]
	protected Transform pouch;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform pouchTarget;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected float pouchRotateTensionThreshold;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F490", Offset = "0x64F490")]
	[SerializeField]
	protected Transform cordKnotStart;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Transform cordKnotTarget;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Transform cordKnotPole;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected float cordKnotSlackLength;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Rigidbody cordKnotReleaseRigidbody;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F51C", Offset = "0x64F51C")]
	[SerializeField]
	protected Transform cordLoopStart;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Transform cordLoopTarget;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected Transform cordLoopPole;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected float cordLoopSlackLength;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x64F598", Offset = "0x64F598")]
	[SerializeField]
	protected float timeActiveAfterFire;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WeaponSling sling;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Animator anim;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Cord cordLoop;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Cord cordKnot;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Renderer[] rends;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly int firedHash;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x8C8564", Offset = "0x8C8564", VA = "0x8C8564")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x8C8A5C", Offset = "0x8C8A5C", VA = "0x8C8A5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x8C8CB8", Offset = "0x8C8CB8", VA = "0x8C8CB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x8C8DF0", Offset = "0x8C8DF0", VA = "0x8C8DF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x8C8B94", Offset = "0x8C8B94", VA = "0x8C8B94")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x8C933C", Offset = "0x8C933C", VA = "0x8C933C")]
	private void Show()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x8C93DC", Offset = "0x8C93DC", VA = "0x8C93DC")]
	private void Sling_Armed(object sender, Weapon.ArmedEventArgs e)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x8C9484", Offset = "0x8C9484", VA = "0x8C9484")]
	private void Sling_Fired(object sender, Weapon.FiredEventArgs e)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x8C9818", Offset = "0x8C9818", VA = "0x8C9818")]
	public SlingViz()
	{
	}
}
[Token(Token = "0x200000B")]
public class ProjectileTrailViz : MonoBehaviour
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F5D0", Offset = "0x64F5D0")]
	[SerializeField]
	protected Color hitColor;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Color missColor;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool emitWhileKinematic;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F63C", Offset = "0x64F63C")]
	[SerializeField]
	protected LayerMask hitMask;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected LayerMask blockerMask;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected int framesAhead;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected float radius;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F6B8", Offset = "0x64F6B8")]
	[SerializeField]
	protected Projectile projectile;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Rigidbody rb;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected SphereCollider col;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected TrailRenderer trailRenderer;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int colorID;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x15975F8", Offset = "0x15975F8", VA = "0x15975F8")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1597634", Offset = "0x1597634", VA = "0x1597634")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1597694", Offset = "0x1597694", VA = "0x1597694")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1597770", Offset = "0x1597770", VA = "0x1597770")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1597808", Offset = "0x1597808", VA = "0x1597808")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x15976D8", Offset = "0x15976D8", VA = "0x15976D8")]
	private void SetTrailColor(Color color)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x15979E4", Offset = "0x15979E4", VA = "0x15979E4")]
	public ProjectileTrailViz()
	{
	}
}
[Token(Token = "0x200000C")]
public class SlingshotViz : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected WeaponSlingshot slingshot;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform sight;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Transform endTargetLeft;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform endTargetRight;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x64F774", Offset = "0x64F774")]
	[SerializeField]
	protected float limpDist;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x64F7AC", Offset = "0x64F7AC")]
	[SerializeField]
	protected Cloth cloth;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Transform pouchRoot;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Transform endPointLeft;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Transform endPointRight;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected Transform startPointLeft;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected Transform startPointRight;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool limp;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool isFading;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x8CA344", Offset = "0x8CA344", VA = "0x8CA344")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x8CA378", Offset = "0x8CA378", VA = "0x8CA378")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x8CA520", Offset = "0x8CA520", VA = "0x8CA520")]
	private void AlignBand(Transform start, Transform end, Transform target)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x8CA63C", Offset = "0x8CA63C", VA = "0x8CA63C")]
	public SlingshotViz()
	{
	}
}
[Token(Token = "0x200000D")]
public class AnimatedProjector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000309")]
	public enum axis
	{
		[Token(Token = "0x40019DC")]
		X,
		[Token(Token = "0x40019DD")]
		Y,
		[Token(Token = "0x40019DE")]
		Z
	}

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Projector projector;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F844", Offset = "0x64F844")]
	[SerializeField]
	protected Gradient colors;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F890", Offset = "0x64F890")]
	[SerializeField]
	protected AnimationCurve scaleCurve;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F8DC", Offset = "0x64F8DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F8DC", Offset = "0x64F8DC")]
	[SerializeField]
	protected float rotationSpeed;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected axis rotationAxis;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F95C", Offset = "0x64F95C")]
	[SerializeField]
	protected float animationLength;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected bool loop;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F9B8", Offset = "0x64F9B8")]
	[SerializeField]
	protected float lifeTime;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float pct;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float animStartTime;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float projectorOrthoSize;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xAE1B08", Offset = "0xAE1B08", VA = "0xAE1B08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xAE1BE0", Offset = "0xAE1BE0", VA = "0xAE1BE0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xAE1CF0", Offset = "0xAE1CF0", VA = "0xAE1CF0")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xAE1DC4", Offset = "0xAE1DC4", VA = "0xAE1DC4")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xAE1E2C", Offset = "0xAE1E2C", VA = "0xAE1E2C")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xAE1FA4", Offset = "0xAE1FA4", VA = "0xAE1FA4")]
	public AnimatedProjector()
	{
	}
}
[Token(Token = "0x200000E")]
public class AnimationAudioEvents : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64FA04", Offset = "0x64FA04")]
	[SerializeField]
	protected AudioSource[] audioSources;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xAE1FB8", Offset = "0xAE1FB8", VA = "0xAE1FB8")]
	private void AudioEvent(AnimationEvent e)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xAE2360", Offset = "0xAE2360", VA = "0xAE2360")]
	private void NewEvent(AnimationEvent e)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xAE2624", Offset = "0xAE2624", VA = "0xAE2624")]
	public AnimationAudioEvents()
	{
	}
}
[Token(Token = "0x200000F")]
public class AudioSpline : MonoBehaviour
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] splinePoint;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int splineCount;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool debug_drawspline;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xAE2A2C", Offset = "0xAE2A2C", VA = "0xAE2A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xAE2B84", Offset = "0xAE2B84", VA = "0xAE2B84")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xAE2CFC", Offset = "0xAE2CFC", VA = "0xAE2CFC")]
	public AudioSpline()
	{
	}
}
[Token(Token = "0x2000010")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x647B68", Offset = "0x647B68")]
public class CrossFadeSettings : ScriptableObject
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64FA50", Offset = "0x64FA50")]
	protected float fadeTime;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected AnimationCurve fadeCurve;

	[Token(Token = "0x17000001")]
	public float FadeTime
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x851B54", Offset = "0x851B54", VA = "0x851B54")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000002")]
	public AnimationCurve FadeCurve
	{
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x851B5C", Offset = "0x851B5C", VA = "0x851B5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x851B64", Offset = "0x851B64", VA = "0x851B64")]
	public CrossFadeSettings()
	{
	}
}
[Token(Token = "0x2000011")]
public class EventAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200030A")]
	protected class Dangalang
	{
		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x6651E8", Offset = "0x6651E8")]
		public string name;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClassField dealer;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClassField sender;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool interrupts;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] audioClips;

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x994044", Offset = "0x994044", VA = "0x994044")]
		public Dangalang()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C808", Offset = "0x64C808")]
	private struct <PlayRandomClip>d__16 : IAsyncStateMachine
	{
		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] audioClips;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EventAudio <>4__this;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float delay;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x6E979C", Offset = "0x6E979C", VA = "0x6E979C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x6E97A4", Offset = "0x6E97A4", VA = "0x6E97A4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64FAB0", Offset = "0x64FAB0")]
	[SerializeField]
	protected AudioClip[] levelStart;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected float nextPhaseAudioDelay;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AudioClip[] levelNextPhase;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected AudioClip[] levelFailed;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected AudioClip[] levelCleared;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64FB3C", Offset = "0x64FB3C")]
	[SerializeField]
	protected Dangalang[] damageEvents;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<AudioClip[], int> lastPlayedDict;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x9931BC", Offset = "0x9931BC", VA = "0x9931BC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x9935C8", Offset = "0x9935C8", VA = "0x9935C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x993654", Offset = "0x993654", VA = "0x993654")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x993790", Offset = "0x993790", VA = "0x993790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x9938CC", Offset = "0x9938CC", VA = "0x9938CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x9939AC", Offset = "0x9939AC", VA = "0x9939AC")]
	private void LevelObjective_PhaseChanged(object sender, PhaseChangedEventArgs e)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x9939B8", Offset = "0x9939B8", VA = "0x9939B8")]
	private void LevelObjective_LevelEnded(object sender, LevelEndedEventArgs e)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x993A14", Offset = "0x993A14", VA = "0x993A14")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x9938D8", Offset = "0x9938D8", VA = "0x9938D8")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x6656B0", Offset = "0x6656B0")]
	private void PlayRandomClip(AudioClip[] audioClips, float delay = 0f)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x993C18", Offset = "0x993C18", VA = "0x993C18")]
	public EventAudio()
	{
	}
}
[Token(Token = "0x2000012")]
public class LevelAudio : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	[Flags]
	private enum Sources
	{
		[Token(Token = "0x40019EB")]
		None = 0,
		[Token(Token = "0x40019EC")]
		Music = 1,
		[Token(Token = "0x40019ED")]
		Ambient = 2
	}

	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C828", Offset = "0x64C828")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelAudio <>4__this;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sources sources;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip nextClip;

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xC69618", Offset = "0xC69618", VA = "0xC69618")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xC69620", Offset = "0xC69620", VA = "0xC69620")]
		internal bool <FadeAudioCoro>b__0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xC696D0", Offset = "0xC696D0", VA = "0xC696D0")]
		internal bool <FadeAudioCoro>b__1()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C838", Offset = "0x64C838")]
	private sealed class <FadeAudioCoro>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelAudio <>4__this;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sources sources;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip nextClip;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass29_0 <>8__1;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float targetVolume;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource <activeSource>5__2;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource <standbySource>5__3;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <lastVolume>5__4;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <pct>5__5;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xC69E84", Offset = "0xC69E84", VA = "0xC69E84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xC69EF4", Offset = "0xC69EF4", VA = "0xC69EF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xC695E4", Offset = "0xC695E4", VA = "0xC695E4")]
		[DebuggerHidden]
		public <FadeAudioCoro>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xC6970C", Offset = "0xC6970C", VA = "0xC6970C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xC69710", Offset = "0xC69710", VA = "0xC69710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xC69E8C", Offset = "0xC69E8C", VA = "0xC69E8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioSource musicAudioSource;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected AudioSource ambientAudioSource;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x64FBA8", Offset = "0x64FBA8")]
	[SerializeField]
	protected LevelAudioClips defaultClips;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x64FBE4", Offset = "0x64FBE4")]
	protected SceneField[] sceneNames;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x64FC1C", Offset = "0x64FC1C")]
	protected LevelAudioClips[] levelAudioClips;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, LevelAudioClips> dict;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected LevelAudioClips clips;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource activeMusicSource;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource activeAmbientSource;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource standbyMusicSource;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource standbyAmbientSource;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool damageTriggerFired;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelAudio instance;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Sources fading;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FC54", Offset = "0x64FC54")]
	private CrossFadeSettings <CrossFadeSettings>k__BackingField;

	[Token(Token = "0x17000003")]
	public CrossFadeSettings CrossFadeSettings
	{
		[Token(Token = "0x600005A")]
		[Address(RVA = "0xC6867C", Offset = "0xC6867C", VA = "0xC6867C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665714", Offset = "0x665714")]
		get
		{
			return null;
		}
		[Token(Token = "0x600005B")]
		[Address(RVA = "0xC68684", Offset = "0xC68684", VA = "0xC68684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665724", Offset = "0x665724")]
		private set
		{
		}
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xC6868C", Offset = "0xC6868C", VA = "0xC6868C")]
	public void Initialize(CrossFadeSettings crossFadeSettings)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xC68D70", Offset = "0xC68D70", VA = "0xC68D70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xC69100", Offset = "0xC69100", VA = "0xC69100")]
	public void ClearTriggers()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xC69108", Offset = "0xC69108", VA = "0xC69108")]
	public void TransitionToScene(string scene)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xC69210", Offset = "0xC69210", VA = "0xC69210")]
	public void TransitionToScene(LevelAudioClips levelAudioClips)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xC69344", Offset = "0xC69344", VA = "0xC69344")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xC693D0", Offset = "0xC693D0", VA = "0xC693D0")]
	private void LevelObjective_LevelEnded(object sender, LevelEndedEventArgs e)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xC69454", Offset = "0xC69454", VA = "0xC69454")]
	private void LevelObjective_PhaseChanged(object sender, PhaseChangedEventArgs e)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xC692C4", Offset = "0xC692C4", VA = "0xC692C4")]
	private void FadeMusic(AudioClip clip, float volume)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xC6930C", Offset = "0xC6930C", VA = "0xC6930C")]
	private void FadeAmbient(AudioClip clip, float volume)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xC69514", Offset = "0xC69514", VA = "0xC69514")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665734", Offset = "0x665734")]
	private IEnumerator FadeAudioCoro(Sources sources, AudioClip nextClip, float targetVolume)
	{
		return null;
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xC69610", Offset = "0xC69610", VA = "0xC69610")]
	public LevelAudio()
	{
	}
}
[Token(Token = "0x2000013")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x647BAC", Offset = "0x647BAC")]
public class LevelAudioClips : ScriptableObject
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64FC64", Offset = "0x64FC64")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64FC64", Offset = "0x64FC64")]
	protected float musicBaseVolume;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64FCC8", Offset = "0x64FCC8")]
	protected float musicCombatVolume;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64FD08", Offset = "0x64FD08")]
	protected float musicPhaseVolume;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64FD48", Offset = "0x64FD48")]
	protected float ambientVolume;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64FD88", Offset = "0x64FD88")]
	[SerializeField]
	protected AudioClip musicBase;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AudioClip musicCombat;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected AudioClip musicPhase;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected AudioClip ambience;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected int triggerPhase;

	[Token(Token = "0x17000004")]
	public float MusicBaseVolume
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0xC692BC", Offset = "0xC692BC", VA = "0xC692BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000005")]
	public float MusicCombatVolume
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0xC693C8", Offset = "0xC693C8", VA = "0xC693C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000006")]
	public float MusicPhaseVolume
	{
		[Token(Token = "0x600006A")]
		[Address(RVA = "0xC6950C", Offset = "0xC6950C", VA = "0xC6950C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000007")]
	public float AmbientVolume
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0xC69304", Offset = "0xC69304", VA = "0xC69304")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public AudioClip MusicBase
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0xC692B4", Offset = "0xC692B4", VA = "0xC692B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public AudioClip MusicCombat
	{
		[Token(Token = "0x600006D")]
		[Address(RVA = "0xC693C0", Offset = "0xC693C0", VA = "0xC693C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	public AudioClip MusicPhase
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xC69504", Offset = "0xC69504", VA = "0xC69504")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public AudioClip Ambient
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0xC692FC", Offset = "0xC692FC", VA = "0xC692FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public int TriggerPhase
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0xC694FC", Offset = "0xC694FC", VA = "0xC694FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xC69EFC", Offset = "0xC69EFC", VA = "0xC69EFC")]
	public LevelAudioClips()
	{
	}
}
[Token(Token = "0x2000014")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647BF0", Offset = "0x647BF0")]
public class PlayerVoice : MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerVoice instance;

	[Token(Token = "0x1700000D")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0x1596238", Offset = "0x1596238", VA = "0x1596238")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1596348", Offset = "0x1596348", VA = "0x1596348")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x15963A0", Offset = "0x15963A0", VA = "0x15963A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x159647C", Offset = "0x159647C", VA = "0x159647C")]
	public PlayerVoice()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647C54", Offset = "0x647C54")]
public class PlayRandomizedAudioClipOnAwake : MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected RandomizedAudioClip audioClip;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x15947CC", Offset = "0x15947CC", VA = "0x15947CC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1594824", Offset = "0x1594824", VA = "0x1594824")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1594B7C", Offset = "0x1594B7C", VA = "0x1594B7C")]
	public PlayRandomizedAudioClipOnAwake()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x647CB8", Offset = "0x647CB8")]
public class RandomizedAudioClip : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C848", Offset = "0x64C848")]
	private sealed class <>c
	{
		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<AudioClip, bool> <>9__5_0;

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x1599090", Offset = "0x1599090", VA = "0x1599090")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x1599098", Offset = "0x1599098", VA = "0x1599098")]
		internal bool <OnValidate>b__5_0(AudioClip n)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool uninterruptable;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64FE54", Offset = "0x64FE54")]
	protected float volume;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected bool modifyPitch;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxSliderAttribute", RVA = "0x64FEA4", Offset = "0x64FEA4")]
	protected Vector2 pitchRange;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AudioClip[] audioClips;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x15989D4", Offset = "0x15989D4", VA = "0x15989D4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1598B34", Offset = "0x1598B34", VA = "0x1598B34")]
	public static implicit operator AudioClip(RandomizedAudioClip obj)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1598BC4", Offset = "0x1598BC4", VA = "0x1598BC4")]
	public AudioClip GetRandomAudioClip()
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1598D44", Offset = "0x1598D44", VA = "0x1598D44")]
	public float GetVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1598D4C", Offset = "0x1598D4C", VA = "0x1598D4C")]
	public float GetRandomPitch()
	{
		return default(float);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x15949CC", Offset = "0x15949CC", VA = "0x15949CC")]
	public void PlayOnAudioSource(AudioSource source)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1598D64", Offset = "0x1598D64", VA = "0x1598D64")]
	public void PreloadClips()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1598E78", Offset = "0x1598E78", VA = "0x1598E78")]
	public void UnloadClips()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1598F90", Offset = "0x1598F90", VA = "0x1598F90")]
	public RandomizedAudioClip()
	{
	}
}
[Token(Token = "0x2000017")]
public class CrossPlatformUtilities
{
	[Token(Token = "0x400009E")]
	public const string kOculusQuestDemoPackageName = "com.Immersive.DvG";

	[Token(Token = "0x400009F")]
	public const string kOculusQuestFullPackageName = "com.Immersive.DvGQ";

	[Token(Token = "0x40000A0")]
	public const string _oculusQuestDemoAppId = "3812055872187966";

	[Token(Token = "0x40000A1")]
	public const string _oculusQuestFullAppId = "4138862582825089";

	[Token(Token = "0x40000A2")]
	public const string _oculusStandaloneFullAppId = "3719399408110547";

	[Token(Token = "0x40000A3")]
	public const string kOculusAppId = "4138862582825089";

	[Token(Token = "0x40000A4")]
	public const uint _steamVrFullAppId = 1462540u;

	[Token(Token = "0x40000A5")]
	public const uint _steamVrDemoAppId = 1498370u;

	[Token(Token = "0x40000A6")]
	public const uint SteamAppId = 1462540u;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x854374", Offset = "0x854374", VA = "0x854374")]
	public static bool IsDemoVersion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x85437C", Offset = "0x85437C", VA = "0x85437C")]
	public CrossPlatformUtilities()
	{
	}
}
[Token(Token = "0x2000018")]
public class Actor : DamageDealer
{
	[Token(Token = "0x2000310")]
	public class DamagedEventArgs : EventArgs
	{
		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Object dealer;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int damage;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hitbox hitbox;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 hitPoint;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 hitNormal;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xAE168C", Offset = "0xAE168C", VA = "0xAE168C")]
		public DamagedEventArgs()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C858", Offset = "0x64C858")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static EventHandler<DamagedEventArgs> <>9__14_0;

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xAE1900", Offset = "0xAE1900", VA = "0xAE1900")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xAE1908", Offset = "0xAE1908", VA = "0xAE1908")]
		internal void <.ctor>b__14_0(object <p0>, DamagedEventArgs <p1>)
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xAE190C", Offset = "0xAE190C", VA = "0xAE190C")]
		internal void <.cctor>b__15_0(object <p0>, DamagedEventArgs <p1>)
		{
		}
	}

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Hitbox[] hitboxes;

	[Token(Token = "0x14000001")]
	public static event EventHandler<DamagedEventArgs> AnyDamaged
	{
		[Token(Token = "0x6000084")]
		[Address(RVA = "0xAE0E90", Offset = "0xAE0E90", VA = "0xAE0E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665798", Offset = "0x665798")]
		add
		{
		}
		[Token(Token = "0x6000085")]
		[Address(RVA = "0xAE0FBC", Offset = "0xAE0FBC", VA = "0xAE0FBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6657A8", Offset = "0x6657A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event EventHandler<DamagedEventArgs> Damaged
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0xAE10E8", Offset = "0xAE10E8", VA = "0xAE10E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6657B8", Offset = "0x6657B8")]
		add
		{
		}
		[Token(Token = "0x6000087")]
		[Address(RVA = "0xAE11D4", Offset = "0xAE11D4", VA = "0xAE11D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6657C8", Offset = "0x6657C8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xAE12C0", Offset = "0xAE12C0", VA = "0xAE12C0", Slot = "4")]
	public virtual void Activate()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xAE12C4", Offset = "0xAE12C4", VA = "0xAE12C4", Slot = "5")]
	protected virtual void Reset()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xAE1324", Offset = "0xAE1324", VA = "0xAE1324", Slot = "6")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xAE13CC", Offset = "0xAE13CC", VA = "0xAE13CC", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xAE1474", Offset = "0xAE1474", VA = "0xAE1474", Slot = "8")]
	protected virtual void Hitbox_AnyDamaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xAE12C8", Offset = "0xAE12C8", VA = "0xAE12C8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6657D8", Offset = "0x6657D8")]
	protected void UpdateHitboxesFromChildren()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xAE16F4", Offset = "0xAE16F4", VA = "0xAE16F4")]
	public Actor()
	{
	}
}
[Token(Token = "0x2000019")]
public class DamageDealer : MonoBehaviour
{
	[Token(Token = "0x2000312")]
	public class DamageDealtEventArgs : EventArgs
	{
		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int damage;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider hitCollider;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 hitPoint;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 hitNormal;

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x856194", Offset = "0x856194", VA = "0x856194")]
		public DamageDealtEventArgs()
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event EventHandler<DamageDealtEventArgs> DamageDealt
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0x855F9C", Offset = "0x855F9C", VA = "0x855F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665810", Offset = "0x665810")]
		add
		{
		}
		[Token(Token = "0x6000091")]
		[Address(RVA = "0x856098", Offset = "0x856098", VA = "0x856098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665820", Offset = "0x665820")]
		remove
		{
		}
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x843194", Offset = "0x843194", VA = "0x843194")]
	protected void DealDamage(DamageDealer dealer, Collider collider, int damage, Vector3 hitPoint, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x8561FC", Offset = "0x8561FC", VA = "0x8561FC")]
	public DamageDealer()
	{
	}
}
[Token(Token = "0x200001A")]
public class DebugDamageEvents : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool logDamageDealerEvents;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool logHitboxEvents;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool logActorEvents;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool logWeaponEvents;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x856268", Offset = "0x856268", VA = "0x856268")]
	public DebugDamageEvents()
	{
	}
}
[Token(Token = "0x200001B")]
public class DebugDamager : DamageDealer
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int maxDist;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected LayerMask layerMask;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x85627C", Offset = "0x85627C", VA = "0x85627C")]
	public DebugDamager()
	{
	}
}
[Token(Token = "0x200001C")]
public class DummyActor : Actor
{
	[Token(Token = "0x6000096")]
	[Address(RVA = "0x858D0C", Offset = "0x858D0C", VA = "0x858D0C")]
	public DummyActor()
	{
	}
}
[Token(Token = "0x200001D")]
public class FXSpawner : MonoBehaviour
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioSource fxAudio;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected int poolSizes;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected HitboxMaterial[] hitboxMaterialsToPool;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform fxContainer;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x999BDC", Offset = "0x999BDC", VA = "0x999BDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x999E64", Offset = "0x999E64", VA = "0x999E64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x999EE0", Offset = "0x999EE0", VA = "0x999EE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x999F5C", Offset = "0x999F5C", VA = "0x999F5C")]
	private void DamageDealer_DamageDealt(object sender, DamageDealer.DamageDealtEventArgs e)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x99A1D0", Offset = "0x99A1D0", VA = "0x99A1D0")]
	private void PlayFXAudio(HitboxMaterial hitboxMaterial, Vector3 position)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x99A300", Offset = "0x99A300", VA = "0x99A300")]
	public FXSpawner()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647CFC", Offset = "0x647CFC")]
public class Hitbox : MonoBehaviour
{
	[Token(Token = "0x2000313")]
	public class DamagedEventArgs : EventArgs
	{
		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int damage;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitboxMaterial materialType;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 hitPoint;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 hitNormal;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DamageDealer dealer;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Collider hitCollider;

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xFCAB24", Offset = "0xFCAB24", VA = "0xFCAB24")]
		public DamagedEventArgs()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C868", Offset = "0x64C868")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static EventHandler<DamagedEventArgs> <>9__14_0;

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xFCAB14", Offset = "0xFCAB14", VA = "0xFCAB14")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xFCAB1C", Offset = "0xFCAB1C", VA = "0xFCAB1C")]
		internal void <.ctor>b__14_0(object <p0>, DamagedEventArgs <p1>)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xFCAB20", Offset = "0xFCAB20", VA = "0xFCAB20")]
		internal void <.cctor>b__15_0(object <p0>, DamagedEventArgs <p1>)
		{
		}
	}

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected HitboxMaterial hitboxMaterial;

	[Token(Token = "0x1700000E")]
	public HitboxMaterial HitboxMaterial
	{
		[Token(Token = "0x600009D")]
		[Address(RVA = "0x99A148", Offset = "0x99A148", VA = "0x99A148")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000004")]
	public static event EventHandler<DamagedEventArgs> AnyDamaged
	{
		[Token(Token = "0x600009E")]
		[Address(RVA = "0x9AF304", Offset = "0x9AF304", VA = "0x9AF304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665830", Offset = "0x665830")]
		add
		{
		}
		[Token(Token = "0x600009F")]
		[Address(RVA = "0x9AF430", Offset = "0x9AF430", VA = "0x9AF430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665840", Offset = "0x665840")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event EventHandler<DamagedEventArgs> Damaged
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x9A4B70", Offset = "0x9A4B70", VA = "0x9A4B70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665850", Offset = "0x665850")]
		add
		{
		}
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x9A5070", Offset = "0x9A5070", VA = "0x9A5070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665860", Offset = "0x665860")]
		remove
		{
		}
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x9AF55C", Offset = "0x9AF55C", VA = "0x9AF55C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x9AF5D8", Offset = "0x9AF5D8", VA = "0x9AF5D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x9AF654", Offset = "0x9AF654", VA = "0x9AF654")]
	private void DamageDealer_DamageDealt(object sender, DamageDealer.DamageDealtEventArgs e)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x9AF870", Offset = "0x9AF870", VA = "0x9AF870")]
	private void OnDamaged(object sender, DamagedEventArgs args)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x9AF934", Offset = "0x9AF934", VA = "0x9AF934")]
	public Hitbox()
	{
	}
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x647D60", Offset = "0x647D60")]
public class HitboxMaterial : ScriptableObject
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject impactPrefab;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected RandomizedAudioClip impactAudio;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HitboxMaterial defaultMaterial;

	[Token(Token = "0x1700000F")]
	public GameObject ImpactPrefab
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xFCAB8C", Offset = "0xFCAB8C", VA = "0xFCAB8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	public RandomizedAudioClip ImpactAudio
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xFCAB94", Offset = "0xFCAB94", VA = "0xFCAB94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xFCAB9C", Offset = "0xFCAB9C", VA = "0xFCAB9C")]
	public static HitboxMaterial GetDefault()
	{
		return null;
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xFCAC54", Offset = "0xFCAC54", VA = "0xFCAC54")]
	public HitboxMaterial()
	{
	}
}
[Token(Token = "0x2000020")]
public class ReactiveElementCoordinator : MonoBehaviour
{
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C878", Offset = "0x64C878")]
	private sealed class <Recharge>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReactiveElementCoordinator <>4__this;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject[] <>7__wrap1;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x1599A78", Offset = "0x1599A78", VA = "0x1599A78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x1599AE8", Offset = "0x1599AE8", VA = "0x1599AE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x1599450", Offset = "0x1599450", VA = "0x1599450")]
		[DebuggerHidden]
		public <Recharge>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x15996A0", Offset = "0x15996A0", VA = "0x15996A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x15996A4", Offset = "0x15996A4", VA = "0x15996A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x1599A80", Offset = "0x1599A80", VA = "0x1599A80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64FFDC", Offset = "0x64FFDC")]
	public float rechargeTime;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] targets;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool waitForElements;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650024", Offset = "0x650024")]
	public GameObject[] reactiveElements;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65005C", Offset = "0x65005C")]
	public bool simulateHitTargets;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x650094", Offset = "0x650094")]
	public bool safeToRecharge;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool recharging;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] cachedTargetHitboxObjects;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSecondsRealtime cachedLongWait;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSecondsRealtime cachedShortWait;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1599104", Offset = "0x1599104", VA = "0x1599104")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x159927C", Offset = "0x159927C", VA = "0x159927C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x15993DC", Offset = "0x15993DC", VA = "0x15993DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665870", Offset = "0x665870")]
	private IEnumerator Recharge()
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x159947C", Offset = "0x159947C", VA = "0x159947C")]
	private void SetActiveArrayToggle(GameObject[] array)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1599534", Offset = "0x1599534", VA = "0x1599534")]
	private void ResetArray(GameObject[] array)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x159934C", Offset = "0x159934C", VA = "0x159934C")]
	private bool AreAnyActive(GameObject[] element)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x15995FC", Offset = "0x15995FC", VA = "0x15995FC")]
	public ReactiveElementCoordinator()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647DC0", Offset = "0x647DC0")]
public class RechargeableTarget : MonoBehaviour
{
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C888", Offset = "0x64C888")]
	private sealed class <Recharge>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RechargeableTarget <>4__this;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x1599ED8", Offset = "0x1599ED8", VA = "0x1599ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x1599F48", Offset = "0x1599F48", VA = "0x1599F48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x1599CAC", Offset = "0x1599CAC", VA = "0x1599CAC")]
		[DebuggerHidden]
		public <Recharge>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x1599D58", Offset = "0x1599D58", VA = "0x1599D58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x1599D5C", Offset = "0x1599D5C", VA = "0x1599D5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x1599EE0", Offset = "0x1599EE0", VA = "0x1599EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6500A4", Offset = "0x6500A4")]
	public float rechargeTime;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x6500DC", Offset = "0x6500DC")]
	public bool safeToRecharge;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool recharging;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Hitbox hitbox;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwapChildrenOnHit swapChildren;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds cachedWait;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1599AF0", Offset = "0x1599AF0", VA = "0x1599AF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1599B60", Offset = "0x1599B60", VA = "0x1599B60")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1599C38", Offset = "0x1599C38", VA = "0x1599C38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6658D4", Offset = "0x6658D4")]
	private IEnumerator Recharge()
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1599CD8", Offset = "0x1599CD8", VA = "0x1599CD8")]
	public RechargeableTarget()
	{
	}
}
[Token(Token = "0x2000022")]
public class SwapChildrenOnHit : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject undestroyedModel;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject destroyedModel;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hitbox hitbox;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x8954CC", Offset = "0x8954CC", VA = "0x8954CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x895524", Offset = "0x895524", VA = "0x895524")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x8955FC", Offset = "0x8955FC", VA = "0x8955FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x895694", Offset = "0x895694", VA = "0x895694")]
	public void Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x895724", Offset = "0x895724", VA = "0x895724")]
	public void Reset()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x895788", Offset = "0x895788", VA = "0x895788")]
	public SwapChildrenOnHit()
	{
	}
}
[Token(Token = "0x2000023")]
public class DebugDrawBuildVersion : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string unityVersion;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string dvgVersion;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string buildType;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x85628C", Offset = "0x85628C", VA = "0x85628C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x85639C", Offset = "0x85639C", VA = "0x85639C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x8564B4", Offset = "0x8564B4", VA = "0x8564B4")]
	public DebugDrawBuildVersion()
	{
	}
}
[Token(Token = "0x2000024")]
public class DebugFXLookDev : MonoBehaviour
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float interval;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x8564BC", Offset = "0x8564BC", VA = "0x8564BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x8564C0", Offset = "0x8564C0", VA = "0x8564C0")]
	private void ToggleChildren()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x856818", Offset = "0x856818", VA = "0x856818")]
	public DebugFXLookDev()
	{
	}
}
[Token(Token = "0x2000025")]
public class DebugLevelObjective : MonoBehaviour
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool enableControls;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x856828", Offset = "0x856828", VA = "0x856828")]
	public DebugLevelObjective()
	{
	}
}
[Token(Token = "0x2000026")]
public class DebugLookDevAnim : MonoBehaviour
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float nextRate;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float turnRate;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float slideFrequency;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slideAmplitude;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator[] anims;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float nextTime;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly int nextParam;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x856838", Offset = "0x856838", VA = "0x856838")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x856890", Offset = "0x856890", VA = "0x856890")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x856BF8", Offset = "0x856BF8", VA = "0x856BF8")]
	public DebugLookDevAnim()
	{
	}
}
[Token(Token = "0x2000027")]
public class DebugMissionStats : Menu
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GUIStyle timerStyle;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int height;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x856C60", Offset = "0x856C60", VA = "0x856C60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x856D48", Offset = "0x856D48", VA = "0x856D48")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x856EBC", Offset = "0x856EBC", VA = "0x856EBC")]
	public DebugMissionStats()
	{
	}
}
[Token(Token = "0x2000028")]
public class DebugSmoothedCam : MonoBehaviour
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera smoothedCam;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x856ECC", Offset = "0x856ECC", VA = "0x856ECC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x856F80", Offset = "0x856F80", VA = "0x856F80")]
	public DebugSmoothedCam()
	{
	}
}
[Token(Token = "0x2000029")]
public class DebugTrajectory : Weapon
{
	[Token(Token = "0x2000317")]
	public enum FireMoment
	{
		[Token(Token = "0x4001A1A")]
		SameFrame,
		[Token(Token = "0x4001A1B")]
		PreviousFrame,
		[Token(Token = "0x4001A1C")]
		Both
	}

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool sweepCast;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float power;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FireMoment fireMoment;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 lastTrajectoryOffsetPos;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 lastTrajectoryOffsetRot;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float projectileLethalVelocity;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65010C", Offset = "0x65010C")]
	public LayerMask hitMask;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LayerMask blockerMask;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int framesAhead;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int subdivisions;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float magPrecog;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector2 rotPrecog;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float projectileRadius;

	[Token(Token = "0x17000011")]
	private Matrix4x4 LastTrajOffset
	{
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x856F88", Offset = "0x856F88", VA = "0x856F88")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x857134", Offset = "0x857134", VA = "0x857134")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x8578A8", Offset = "0x8578A8", VA = "0x8578A8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x857A08", Offset = "0x857A08", VA = "0x857A08")]
	public DebugTrajectory()
	{
	}
}
[Token(Token = "0x200002A")]
public static class BootStrap
{
	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xAF1CF8", Offset = "0xAF1CF8", VA = "0xAF1CF8")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x665938", Offset = "0x665938")]
	private static void Init()
	{
	}
}
[Token(Token = "0x200002B")]
public class CrossPlatformSceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C898", Offset = "0x64C898")]
	private sealed class <LoadLevelCoro>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string levelName;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AsyncOperation asyncOp;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x8542FC", Offset = "0x8542FC", VA = "0x8542FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x85436C", Offset = "0x85436C", VA = "0x85436C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x85405C", Offset = "0x85405C", VA = "0x85405C")]
		[DebuggerHidden]
		public <LoadLevelCoro>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x8540E4", Offset = "0x8540E4", VA = "0x8540E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x8540E8", Offset = "0x8540E8", VA = "0x8540E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x854304", Offset = "0x854304", VA = "0x854304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool loadAdditive;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool loadAsync;

	[Token(Token = "0x17000012")]
	public static bool loading
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x853CC0", Offset = "0x853CC0", VA = "0x853CC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000013")]
	public static float progress
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x853D20", Offset = "0x853D20", VA = "0x853D20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x853D80", Offset = "0x853D80", VA = "0x853D80")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x853F44", Offset = "0x853F44", VA = "0x853F44")]
	public static void QuitGame()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x853FC4", Offset = "0x853FC4", VA = "0x853FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66594C", Offset = "0x66594C")]
	private static IEnumerator LoadLevelCoro(string levelName, AsyncOperation asyncOp)
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x854088", Offset = "0x854088", VA = "0x854088")]
	public CrossPlatformSceneLoader()
	{
	}
}
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647E24", Offset = "0x647E24")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647E24", Offset = "0x647E24")]
public class FailObjectiveOnTriggerExit : MonoBehaviour
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LevelObjective levelObjective;

	[Token(Token = "0x40000ED")]
	private const string playerTriggerLayerName = "Player Only Collision";

	[Token(Token = "0x40000EE")]
	private const string playerHitboxLayerName = "Player Hitbox";

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x99A310", Offset = "0x99A310", VA = "0x99A310")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x99A510", Offset = "0x99A510", VA = "0x99A510")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x99A568", Offset = "0x99A568", VA = "0x99A568")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x99A644", Offset = "0x99A644", VA = "0x99A644")]
	public FailObjectiveOnTriggerExit()
	{
	}
}
[Token(Token = "0x200002D")]
public class GameManager : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C8A8", Offset = "0x64C8A8")]
	private struct <Awake>d__65 : IAsyncStateMachine
	{
		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoPlayer <vid>5__2;

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x6E97C4", Offset = "0x6E97C4", VA = "0x6E97C4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x6E97CC", Offset = "0x6E97CC", VA = "0x6E97CC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C8B8", Offset = "0x64C8B8")]
	private struct <SpawnPlayer>d__87 : IAsyncStateMachine
	{
		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x6E9800", Offset = "0x6E9800", VA = "0x6E9800", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x6E9808", Offset = "0x6E9808", VA = "0x6E9808", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C8C8", Offset = "0x64C8C8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<LevelCollection.Level, bool> <>9__89_0;

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x9A0D10", Offset = "0x9A0D10", VA = "0x9A0D10")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x9A0D18", Offset = "0x9A0D18", VA = "0x9A0D18")]
		internal bool <GetGameplayLevelCount>b__89_0(LevelCollection.Level n)
		{
			return default(bool);
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C8D8", Offset = "0x64C8D8")]
	private struct <OnLevelEndedAsync>d__92 : IAsyncStateMachine
	{
		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool failed;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float delay;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <currentMission>5__2;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LeaderboardDataDefinition <leaderboardDef>5__3;

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x6E97EC", Offset = "0x6E97EC", VA = "0x6E97EC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x6E97F4", Offset = "0x6E97F4", VA = "0x6E97F4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C8E8", Offset = "0x64C8E8")]
	private struct <GameSettings_Changed_Async>d__99 : IAsyncStateMachine
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameSettings.SettingKey key;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int val;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <rightHandAlias>5__2;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject <leftHandAlias>5__3;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x6E97D8", Offset = "0x6E97D8", VA = "0x6E97D8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x6E97E0", Offset = "0x6E97E0", VA = "0x6E97E0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C8F8", Offset = "0x64C8F8")]
	private struct <<OnLevelEndedAsync>g__DelayLevelLoad|92_0>d : IAsyncStateMachine
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float seconds;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <delayEnd>5__2;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x6E97B0", Offset = "0x6E97B0", VA = "0x6E97B0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x6E97B8", Offset = "0x6E97B8", VA = "0x6E97B8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Player playerPrefab;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Menu pausePrefab;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject debugPrefab;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AudioMixer audioMixer;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LevelAudio levelAudio;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MissionStatsTracker statsTracker;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject playerRoot;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Menu pauseMenu;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject debugObject;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject dominantScriptAlias;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject nondominantScriptAlias;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AsyncOperation asyncOp;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool delayedLevelLoad;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int cameraCullingMask;

	[Token(Token = "0x40000FD")]
	private const int GRASS_DISABLED_LEVEL = -1;

	[Token(Token = "0x40000FE")]
	private const int LOW_QUALITY_GRASS_LEVEL = 0;

	[Token(Token = "0x40000FF")]
	private const float LOW_QUALITY_GRASS_DENSITY = 0.15f;

	[Token(Token = "0x4000100")]
	private const int SPLASH_INDEX = 0;

	[Token(Token = "0x4000101")]
	private const int MAINMENU_INDEX = 1;

	[Token(Token = "0x4000102")]
	private const int FAILMENU_INDEX = 2;

	[Token(Token = "0x4000103")]
	private const int CLEARMENU_INDEX = 3;

	[Token(Token = "0x4000104")]
	private const int TUTORIAL_INDEX = 5;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650184", Offset = "0x650184")]
	private LevelCollection <CurrentCampaign>k__BackingField;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650194", Offset = "0x650194")]
	private static int <CurrentLevel>k__BackingField;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6501A4", Offset = "0x6501A4")]
	private static PerformanceMonitor <PerfMonitor>k__BackingField;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6501B4", Offset = "0x6501B4")]
	private static bool <HasAppFocus>k__BackingField;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6501C4", Offset = "0x6501C4")]
	private static LevelCollection.PlayerType <CurrentPlayerConfig>k__BackingField;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6501D4", Offset = "0x6501D4")]
	private LevelCollection.PlayerType <CurrentLevelPlayerConfig>k__BackingField;

	[Token(Token = "0x17000014")]
	public LevelCollection CurrentCampaign
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x99D41C", Offset = "0x99D41C", VA = "0x99D41C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6659B0", Offset = "0x6659B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x99D424", Offset = "0x99D424", VA = "0x99D424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6659C0", Offset = "0x6659C0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public static int CurrentLevel
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x99D42C", Offset = "0x99D42C", VA = "0x99D42C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6659D0", Offset = "0x6659D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x99D494", Offset = "0x99D494", VA = "0x99D494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6659E0", Offset = "0x6659E0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public static PerformanceMonitor PerfMonitor
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x99D500", Offset = "0x99D500", VA = "0x99D500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6659F0", Offset = "0x6659F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x99D568", Offset = "0x99D568", VA = "0x99D568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665A00", Offset = "0x665A00")]
		private set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public static bool IsGamePaused
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x99D5D4", Offset = "0x99D5D4", VA = "0x99D5D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public static bool HasAppFocus
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x99D5F4", Offset = "0x99D5F4", VA = "0x99D5F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665A10", Offset = "0x665A10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x99D65C", Offset = "0x99D65C", VA = "0x99D65C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665A20", Offset = "0x665A20")]
		private set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public static LevelCollection.PlayerType CurrentPlayerConfig
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x99D6CC", Offset = "0x99D6CC", VA = "0x99D6CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665A30", Offset = "0x665A30")]
		get
		{
			return default(LevelCollection.PlayerType);
		}
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x99D734", Offset = "0x99D734", VA = "0x99D734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665A40", Offset = "0x665A40")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public bool IsSceneSkippable
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x99D7A0", Offset = "0x99D7A0", VA = "0x99D7A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001B")]
	private Transform PlayerMovementsRoot
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x99DAC8", Offset = "0x99DAC8", VA = "0x99DAC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001C")]
	private Transform PlayerWeaponsRoot
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x99DB80", Offset = "0x99DB80", VA = "0x99DB80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001D")]
	private Transform PlayerUIInteractionsRoot
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x99DC38", Offset = "0x99DC38", VA = "0x99DC38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	private bool IsHeadsetUserPresent
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x99DCF0", Offset = "0x99DCF0", VA = "0x99DCF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001F")]
	private bool IsInCinematic
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x99D7C8", Offset = "0x99D7C8", VA = "0x99D7C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000020")]
	private bool IsLevelLoading
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x99DD84", Offset = "0x99DD84", VA = "0x99DD84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000021")]
	private LevelCollection.PlayerType CurrentLevelPlayerConfig
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x99DE00", Offset = "0x99DE00", VA = "0x99DE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665A50", Offset = "0x665A50")]
		get
		{
			return default(LevelCollection.PlayerType);
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x99DE08", Offset = "0x99DE08", VA = "0x99DE08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665A60", Offset = "0x665A60")]
		set
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event Action PauseStateChanged
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x99DE10", Offset = "0x99DE10", VA = "0x99DE10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665A70", Offset = "0x665A70")]
		add
		{
		}
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x99DF40", Offset = "0x99DF40", VA = "0x99DF40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665A80", Offset = "0x665A80")]
		remove
		{
		}
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x99E070", Offset = "0x99E070", VA = "0x99E070")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x665A90", Offset = "0x665A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x99E12C", Offset = "0x99E12C", VA = "0x99E12C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x99E428", Offset = "0x99E428", VA = "0x99E428")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x99E824", Offset = "0x99E824", VA = "0x99E824")]
	public LevelCollection GetDefaultCampaign()
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x99E878", Offset = "0x99E878", VA = "0x99E878")]
	public static CrossFadeSettings GetCrossFadeSettings()
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x99E8CC", Offset = "0x99E8CC", VA = "0x99E8CC")]
	public void LoadCampaignMission(LevelCollection campaign, int mission)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x99ED38", Offset = "0x99ED38", VA = "0x99ED38")]
	public void ContinueCampaign()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x99EE40", Offset = "0x99EE40", VA = "0x99EE40")]
	public void LoadMainMenu()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x99EF60", Offset = "0x99EF60", VA = "0x99EF60")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x99EFC0", Offset = "0x99EFC0", VA = "0x99EFC0")]
	public void ReloadCurrentLevel()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x99F19C", Offset = "0x99F19C", VA = "0x99F19C")]
	public void RestartCurrentMission()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x99F294", Offset = "0x99F294", VA = "0x99F294")]
	public void SkipScene()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x99F858", Offset = "0x99F858", VA = "0x99F858")]
	public void MovePlayer(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x99FACC", Offset = "0x99FACC", VA = "0x99FACC")]
	public void OverrideCurrentLevelPlayerConfig(LevelCollection.PlayerType playerType)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x99FB68", Offset = "0x99FB68", VA = "0x99FB68")]
	public MissionStats GetMissionStats()
	{
		return default(MissionStats);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x99E76C", Offset = "0x99E76C", VA = "0x99E76C")]
	public void TogglePauseMenu()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x99F334", Offset = "0x99F334", VA = "0x99F334")]
	private void TogglePauseMenu(bool toggle)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x99FB88", Offset = "0x99FB88", VA = "0x99FB88")]
	private void TogglePauseGame(bool toggle)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x99E660", Offset = "0x99E660", VA = "0x99E660")]
	private void UpdateAppFocus(bool v)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x99FAD0", Offset = "0x99FAD0", VA = "0x99FAD0")]
	private void SetCurrentLevelPlayerConfig(LevelCollection.PlayerType playerType)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x99FCC0", Offset = "0x99FCC0", VA = "0x99FCC0")]
	private void SetPlayerConfig(LevelCollection.PlayerType playerType)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x99FF70", Offset = "0x99FF70", VA = "0x99FF70")]
	private LevelCollection.PlayerType GetCurrentLevelPlayerConfig()
	{
		return default(LevelCollection.PlayerType);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x9A0148", Offset = "0x9A0148", VA = "0x9A0148")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x665AF4", Offset = "0x665AF4")]
	private void SpawnPlayer()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x99DA3C", Offset = "0x99DA3C", VA = "0x99DA3C")]
	private bool IsLoaded(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x99EAE4", Offset = "0x99EAE4", VA = "0x99EAE4")]
	private int GetGameplayLevelCount(LevelCollection.Mission mission)
	{
		return default(int);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x99EBF4", Offset = "0x99EBF4", VA = "0x99EBF4")]
	private void LoadLevel(string sceneName)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x99EECC", Offset = "0x99EECC", VA = "0x99EECC")]
	private void LoadLevel(int index)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x99F778", Offset = "0x99F778", VA = "0x99F778")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x665B58", Offset = "0x665B58")]
	private void OnLevelEndedAsync(bool failed, float delay = 0f)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x9A0210", Offset = "0x9A0210", VA = "0x9A0210")]
	private void SceneManager_sceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x9A0298", Offset = "0x9A0298", VA = "0x9A0298")]
	private void SceneManager_sceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x9A05C8", Offset = "0x9A05C8", VA = "0x9A05C8")]
	private static void ApplyTerrainQuality()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x9A06A0", Offset = "0x9A06A0", VA = "0x9A06A0")]
	private void SetMixerChannel(string mixerParam, int val)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x9A0768", Offset = "0x9A0768", VA = "0x9A0768")]
	private void LevelObjective_LevelEnded(object sender, LevelEndedEventArgs e)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x9A07C4", Offset = "0x9A07C4", VA = "0x9A07C4")]
	private void Player_Died(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x9A07D0", Offset = "0x9A07D0", VA = "0x9A07D0")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x665BBC", Offset = "0x665BBC")]
	private void GameSettings_Changed_Async(GameSettings.SettingKey key, int val)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x9A08A0", Offset = "0x9A08A0", VA = "0x9A08A0")]
	public GameManager()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x9A08FC", Offset = "0x9A08FC", VA = "0x9A08FC")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x665C20", Offset = "0x665C20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665C20", Offset = "0x665C20")]
	private Task <OnLevelEndedAsync>g__DelayLevelLoad|92_0(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x9A0A1C", Offset = "0x9A0A1C", VA = "0x9A0A1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665C94", Offset = "0x665C94")]
	private void <GameSettings_Changed_Async>b__99_0(object s, ControllerInteractionEventArgs e)
	{
	}
}
[Token(Token = "0x200002E")]
public class InGameCinematic : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C908", Offset = "0x64C908")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__3_0;

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xFCAE8C", Offset = "0xFCAE8C", VA = "0xFCAE8C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xFCAE94", Offset = "0xFCAE94", VA = "0xFCAE94")]
		internal bool <Start>b__3_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C918", Offset = "0x64C918")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InGameCinematic <>4__this;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xFCB094", Offset = "0xFCB094", VA = "0xFCB094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0xFCB104", Offset = "0xFCB104", VA = "0xFCB104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xFCAD24", Offset = "0xFCAD24", VA = "0xFCAD24")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xFCAF28", Offset = "0xFCAF28", VA = "0xFCAF28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xFCAF2C", Offset = "0xFCAF2C", VA = "0xFCAF2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xFCB09C", Offset = "0xFCB09C", VA = "0xFCB09C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToEnableControls;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xFCAC5C", Offset = "0xFCAC5C", VA = "0xFCAC5C")]
	public static void SetGameManager(GameManager gm)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xFCACB0", Offset = "0xFCACB0", VA = "0xFCACB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665CA4", Offset = "0x665CA4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xFCAD50", Offset = "0xFCAD50", VA = "0xFCAD50")]
	private void DisablePlayerControls()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xFCADB8", Offset = "0xFCADB8", VA = "0xFCADB8")]
	private void EnablePlayerControls()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xFCAE20", Offset = "0xFCAE20", VA = "0xFCAE20")]
	public InGameCinematic()
	{
	}
}
[Token(Token = "0x200002F")]
public class InGameMenu : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C928", Offset = "0x64C928")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__2_0;

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xFCB33C", Offset = "0xFCB33C", VA = "0xFCB33C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xFCB344", Offset = "0xFCB344", VA = "0xFCB344")]
		internal bool <Start>b__2_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C938", Offset = "0x64C938")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InGameMenu <>4__this;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xFCB51C", Offset = "0xFCB51C", VA = "0xFCB51C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xFCB58C", Offset = "0xFCB58C", VA = "0xFCB58C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xFCB1D4", Offset = "0xFCB1D4", VA = "0xFCB1D4")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xFCB3D8", Offset = "0xFCB3D8", VA = "0xFCB3D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xFCB3DC", Offset = "0xFCB3DC", VA = "0xFCB3DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xFCB524", Offset = "0xFCB524", VA = "0xFCB524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xFCB10C", Offset = "0xFCB10C", VA = "0xFCB10C")]
	public static void SetGameManager(GameManager gm)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xFCB160", Offset = "0xFCB160", VA = "0xFCB160")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665D08", Offset = "0x665D08")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xFCB200", Offset = "0xFCB200", VA = "0xFCB200")]
	private void EnableMenuControls()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xFCB268", Offset = "0xFCB268", VA = "0xFCB268")]
	public void EnablePlayerControls()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xFCB2D0", Offset = "0xFCB2D0", VA = "0xFCB2D0")]
	public InGameMenu()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x647EB0", Offset = "0x647EB0")]
public class LevelCollection : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000323")]
	public class Mission
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected string name;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected LeaderboardDataDefinition leaderboardDefinition;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Texture previewImage;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Level[] levels;

		[Token(Token = "0x1700012B")]
		public string Name
		{
			[Token(Token = "0x6001D24")]
			[Address(RVA = "0xC69F94", Offset = "0xC69F94", VA = "0xC69F94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public Texture PreviewImage
		{
			[Token(Token = "0x6001D25")]
			[Address(RVA = "0xC69F9C", Offset = "0xC69F9C", VA = "0xC69F9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public LeaderboardDataDefinition LeaderboardDefinition
		{
			[Token(Token = "0x6001D26")]
			[Address(RVA = "0xC4E550", Offset = "0xC4E550", VA = "0xC4E550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		public Level[] Levels
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xC69FA4", Offset = "0xC69FA4", VA = "0xC69FA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xC69FAC", Offset = "0xC69FAC", VA = "0xC69FAC")]
		public Mission()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000324")]
	public class Level
	{
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected SceneField scene;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected VideoClip cinematic;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected PlayerType playerType;

		[Token(Token = "0x1700012F")]
		public SceneField Scene
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xC69F74", Offset = "0xC69F74", VA = "0xC69F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		public VideoClip Cinematic
		{
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xC69F7C", Offset = "0xC69F7C", VA = "0xC69F7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		public PlayerType PlayerType
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xC69F84", Offset = "0xC69F84", VA = "0xC69F84")]
			get
			{
				return default(PlayerType);
			}
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xC69F8C", Offset = "0xC69F8C", VA = "0xC69F8C")]
		public Level()
		{
		}
	}

	[Token(Token = "0x2000325")]
	public enum PlayerType
	{
		[Token(Token = "0x4001A54")]
		Gameplay,
		[Token(Token = "0x4001A55")]
		Cinematic,
		[Token(Token = "0x4001A56")]
		Menu,
		[Token(Token = "0x4001A57")]
		MovementOnly
	}

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int demoBuildCount;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Mission[] missions;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mission[] usedMissions;

	[Token(Token = "0x17000022")]
	public Mission[] Missions
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xC4E440", Offset = "0xC4E440", VA = "0xC4E440")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC69F14", Offset = "0xC69F14", VA = "0xC69F14")]
	public LevelCollection()
	{
	}
}
[Token(Token = "0x2000031")]
public abstract class LevelObjective : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C948", Offset = "0x64C948")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x15851B0", Offset = "0x15851B0", VA = "0x15851B0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x15851B8", Offset = "0x15851B8", VA = "0x15851B8")]
		internal void <.cctor>b__16_0(object <p0>, LevelEndedEventArgs <p1>)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x15851BC", Offset = "0x15851BC", VA = "0x15851BC")]
		internal void <.cctor>b__16_1(object <p0>, PhaseChangedEventArgs <p1>)
		{
		}
	}

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool fired;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650234", Offset = "0x650234")]
	private static int <CurrentPhase>k__BackingField;

	[Token(Token = "0x17000023")]
	public static int CurrentPhase
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0xC6A044", Offset = "0xC6A044", VA = "0xC6A044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665DAC", Offset = "0x665DAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600012A")]
		[Address(RVA = "0xC6A0AC", Offset = "0xC6A0AC", VA = "0xC6A0AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665DBC", Offset = "0x665DBC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event EventHandler<LevelEndedEventArgs> LevelEnded
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0xC68B14", Offset = "0xC68B14", VA = "0xC68B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665D6C", Offset = "0x665D6C")]
		add
		{
		}
		[Token(Token = "0x6000126")]
		[Address(RVA = "0xC68EA4", Offset = "0xC68EA4", VA = "0xC68EA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665D7C", Offset = "0x665D7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event EventHandler<PhaseChangedEventArgs> PhaseChanged
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0xC68C40", Offset = "0xC68C40", VA = "0xC68C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665D8C", Offset = "0x665D8C")]
		add
		{
		}
		[Token(Token = "0x6000128")]
		[Address(RVA = "0xC68FD0", Offset = "0xC68FD0", VA = "0xC68FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665D9C", Offset = "0x665D9C")]
		remove
		{
		}
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xC6A118", Offset = "0xC6A118", VA = "0xC6A118", Slot = "4")]
	public virtual void CompleteLevel()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xC6A128", Offset = "0xC6A128", VA = "0xC6A128", Slot = "5")]
	public virtual void CompleteLevel(float loadDelay)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xC6A200", Offset = "0xC6A200", VA = "0xC6A200", Slot = "6")]
	public virtual void FailLevel()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xC6A2CC", Offset = "0xC6A2CC", VA = "0xC6A2CC", Slot = "7")]
	public virtual void ChangePhase(int phase)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xC6A390", Offset = "0xC6A390", VA = "0xC6A390")]
	protected LevelObjective()
	{
	}
}
[Token(Token = "0x2000032")]
public class LevelEndedEventArgs : EventArgs
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly bool failed;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly float delay;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xC69FB4", Offset = "0xC69FB4", VA = "0xC69FB4")]
	public LevelEndedEventArgs(bool failed, float delay = 0f)
	{
	}
}
[Token(Token = "0x2000033")]
public class PhaseChangedEventArgs : EventArgs
{
	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly int phase;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x15945CC", Offset = "0x15945CC", VA = "0x15945CC")]
	public PhaseChangedEventArgs(int phase)
	{
	}
}
[Token(Token = "0x2000034")]
public class LevelTransition : MonoBehaviour
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelObjective levelObjective;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x15851C0", Offset = "0x15851C0", VA = "0x15851C0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x15851F4", Offset = "0x15851F4", VA = "0x15851F4")]
	public LevelTransition()
	{
	}
}
[Token(Token = "0x2000035")]
public class MissionStatsTracker
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool tracking;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MissionStats stats;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650244", Offset = "0x650244")]
	private bool <IsTimerPaused>k__BackingField;

	[Token(Token = "0x17000024")]
	public bool IsTimerPaused
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x15903F4", Offset = "0x15903F4", VA = "0x15903F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665DCC", Offset = "0x665DCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x15903FC", Offset = "0x15903FC", VA = "0x15903FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665DDC", Offset = "0x665DDC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1590408", Offset = "0x1590408", VA = "0x1590408")]
	public MissionStatsTracker(int missionIndex, int levelCount)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x15904AC", Offset = "0x15904AC", VA = "0x15904AC", Slot = "1")]
	~MissionStatsTracker()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1590700", Offset = "0x1590700", VA = "0x1590700")]
	public void BeginTracking()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1590520", Offset = "0x1590520", VA = "0x1590520")]
	public void StopTracking()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1590AE4", Offset = "0x1590AE4", VA = "0x1590AE4")]
	public void PauseTimer(bool toggle)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1590AF0", Offset = "0x1590AF0", VA = "0x1590AF0")]
	public MissionStats GetStats()
	{
		return default(MissionStats);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1590B04", Offset = "0x1590B04", VA = "0x1590B04")]
	private void Application_onBeforeRender()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1590B44", Offset = "0x1590B44", VA = "0x1590B44")]
	private void GameSettings_Changed(GameSettings.SettingKey key, int val)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1590B60", Offset = "0x1590B60", VA = "0x1590B60")]
	private void Weapon_AnyFired(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1590C54", Offset = "0x1590C54", VA = "0x1590C54")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1590CF4", Offset = "0x1590CF4", VA = "0x1590CF4")]
	private void Player_Changed(object sender, Player.ChangedEventArgs e)
	{
	}
}
[Token(Token = "0x2000036")]
public struct MissionStats
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int missionIndex;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float timeElapsed;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int shotsHit;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int shotsFired;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int damageTaken;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int levelCount;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int weaponIndex;

	[Token(Token = "0x4000124")]
	private const int HEALTH_PER_LEVEL = 4;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x786C80", Offset = "0x786C80", VA = "0x786C80")]
	public float CalculateAccuracyPercent()
	{
		return default(float);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x786C88", Offset = "0x786C88", VA = "0x786C88")]
	public int CalculateHealthMax()
	{
		return default(int);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x786C94", Offset = "0x786C94", VA = "0x786C94")]
	public float CalculateHealthPercent()
	{
		return default(float);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x786C9C", Offset = "0x786C9C", VA = "0x786C9C")]
	public float CalculateWeaponMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x786CC0", Offset = "0x786CC0", VA = "0x786CC0")]
	public int CalculateTotalScore()
	{
		return default(int);
	}
}
[Token(Token = "0x2000037")]
public class Oculus_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C958", Offset = "0x64C958")]
	private sealed class <LoadLevel>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Oculus_LoadLevel <>4__this;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x159236C", Offset = "0x159236C", VA = "0x159236C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x15923DC", Offset = "0x15923DC", VA = "0x15923DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x1591E88", Offset = "0x1591E88", VA = "0x1591E88")]
		[DebuggerHidden]
		public <LoadLevel>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x1591F00", Offset = "0x1591F00", VA = "0x1591F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x1591F04", Offset = "0x1591F04", VA = "0x1591F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x1592374", Offset = "0x1592374", VA = "0x1592374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Oculus_LoadLevel _active;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color backgroundColor;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeOutTime;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fadeInTime;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float postLoadSettleTime;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AsyncOperation async;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	internal bool showGrid;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal Func<string, AsyncOperation, IEnumerator> loadSceneCoro;

	[Token(Token = "0x17000025")]
	public static bool loading
	{
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x1591A54", Offset = "0x1591A54", VA = "0x1591A54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000026")]
	public static float progress
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0x1591AEC", Offset = "0x1591AEC", VA = "0x1591AEC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1591C1C", Offset = "0x1591C1C", VA = "0x1591C1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1591C2C", Offset = "0x1591C2C", VA = "0x1591C2C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1591D38", Offset = "0x1591D38", VA = "0x1591D38")]
	public static void Begin(string levelName, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1591CC4", Offset = "0x1591CC4", VA = "0x1591CC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665DEC", Offset = "0x665DEC")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1591EB4", Offset = "0x1591EB4", VA = "0x1591EB4")]
	public Oculus_LoadLevel()
	{
	}
}
[Token(Token = "0x2000038")]
public class PerformanceMonitor : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float updateInterval;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected float minSecondsBeforeLog;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected bool debugLog;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawCounter;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int targetFps;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fps;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lowTime;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float accum;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int frames;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeleft;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650284", Offset = "0x650284")]
	private bool <LowPerformance>k__BackingField;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650294", Offset = "0x650294")]
	private float <LongestLowTime>k__BackingField;

	[Token(Token = "0x17000027")]
	public bool LowPerformance
	{
		[Token(Token = "0x600014F")]
		[Address(RVA = "0x1593DC4", Offset = "0x1593DC4", VA = "0x1593DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665E50", Offset = "0x665E50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000150")]
		[Address(RVA = "0x1593DCC", Offset = "0x1593DCC", VA = "0x1593DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665E60", Offset = "0x665E60")]
		private set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public float LongestLowTime
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x1593DD8", Offset = "0x1593DD8", VA = "0x1593DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665E70", Offset = "0x665E70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x1593DE0", Offset = "0x1593DE0", VA = "0x1593DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665E80", Offset = "0x665E80")]
		private set
		{
		}
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1593DE8", Offset = "0x1593DE8", VA = "0x1593DE8")]
	public void RestartMonitoring()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1593E24", Offset = "0x1593E24", VA = "0x1593E24")]
	private int GetTargetFps()
	{
		return default(int);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1593EE4", Offset = "0x1593EE4", VA = "0x1593EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1593F20", Offset = "0x1593F20", VA = "0x1593F20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1594114", Offset = "0x1594114", VA = "0x1594114")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1594350", Offset = "0x1594350", VA = "0x1594350")]
	public PerformanceMonitor()
	{
	}
}
[Token(Token = "0x2000039")]
public class PerformanceWarning : Menu
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected TextMeshProUGUI text;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected bool inPauseMenu;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Canvas canvas;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6502C4", Offset = "0x6502C4")]
	[SerializeField]
	protected string warningString;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1594364", Offset = "0x1594364", VA = "0x1594364", Slot = "6")]
	public override void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1594548", Offset = "0x1594548", VA = "0x1594548")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x15945A0", Offset = "0x15945A0", VA = "0x15945A0", Slot = "4")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1594368", Offset = "0x1594368", VA = "0x1594368")]
	public void ToggleBasedOnPerformance()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x15945C4", Offset = "0x15945C4", VA = "0x15945C4")]
	public PerformanceWarning()
	{
	}
}
[Token(Token = "0x200003A")]
public static class SaveData
{
	[Serializable]
	[Token(Token = "0x2000328")]
	public class Data : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, int> unlocked;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, int> progress;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] uk;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] pk;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] uv;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] pv;

		[Token(Token = "0x17000134")]
		public Dictionary<string, int> Unlocked
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x159ACD0", Offset = "0x159ACD0", VA = "0x159ACD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public Dictionary<string, int> Progress
		{
			[Token(Token = "0x6001D38")]
			[Address(RVA = "0x159ACD8", Offset = "0x159ACD8", VA = "0x159ACD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x159B110", Offset = "0x159B110", VA = "0x159B110", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x159B220", Offset = "0x159B220", VA = "0x159B220", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x159AF64", Offset = "0x159AF64", VA = "0x159AF64")]
		public Data()
		{
		}
	}

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Data data;

	[Token(Token = "0x4000141")]
	private const string SAVEDATA_KEY = "dvg_save";

	[Token(Token = "0x14000009")]
	public static event Action Changed
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0x158DFA0", Offset = "0x158DFA0", VA = "0x158DFA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665E90", Offset = "0x665E90")]
		add
		{
		}
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x158E1C8", Offset = "0x158E1C8", VA = "0x158E1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665EA0", Offset = "0x665EA0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x158D794", Offset = "0x158D794", VA = "0x158D794")]
	public static int GetUnlocked(LevelCollection levelCollection)
	{
		return default(int);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x158D374", Offset = "0x158D374", VA = "0x158D374")]
	public static int GetProgress(LevelCollection levelCollection)
	{
		return default(int);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x159ACE0", Offset = "0x159ACE0", VA = "0x159ACE0")]
	public static void SetUnlocked(LevelCollection levelCollection, int val)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x159AE58", Offset = "0x159AE58", VA = "0x159AE58")]
	public static void SetProgress(LevelCollection levelCollection, int val)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x159AEB8", Offset = "0x159AEB8", VA = "0x159AEB8")]
	public static void ClearAllSaveData()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x158D948", Offset = "0x158D948", VA = "0x158D948")]
	public static void ClearSaveData(LevelCollection levelCollection)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x159AFF4", Offset = "0x159AFF4", VA = "0x159AFF4")]
	public static void Save()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x159B05C", Offset = "0x159B05C", VA = "0x159B05C")]
	public static void Load()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x159AC6C", Offset = "0x159AC6C", VA = "0x159AC6C")]
	private static Data GetData()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x159AD40", Offset = "0x159AD40", VA = "0x159AD40")]
	private static void SetData(Dictionary<string, int> dict, string key, int val)
	{
	}
}
[Token(Token = "0x200003B")]
public class SDKEnforcer : MonoBehaviour
{
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C968", Offset = "0x64C968")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool includeSimulator;

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x159A980", Offset = "0x159A980", VA = "0x159A980")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x159AB8C", Offset = "0x159AB8C", VA = "0x159AB8C")]
		internal bool <GetValidSetups>b__2(VRTK_SDKSetup n)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C978", Offset = "0x64C978")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<VRTK_SDKSetup, bool> <>9__7_0;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<VRTK_SDKSetup, bool> <>9__7_1;

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x159A9F4", Offset = "0x159A9F4", VA = "0x159A9F4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x159A9FC", Offset = "0x159A9FC", VA = "0x159A9FC")]
		internal bool <GetValidSetups>b__7_0(VRTK_SDKSetup n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x159AAC4", Offset = "0x159AAC4", VA = "0x159AAC4")]
		internal bool <GetValidSetups>b__7_1(VRTK_SDKSetup n)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRTK_SDKManager sdkManager;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRTK_SDKSetup[] allSetups;

	[Token(Token = "0x17000029")]
	private VRTK_SDKManager SdkManager
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0x159A37C", Offset = "0x159A37C", VA = "0x159A37C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x159A410", Offset = "0x159A410", VA = "0x159A410")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x159A4A8", Offset = "0x159A4A8", VA = "0x159A4A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x159A83C", Offset = "0x159A83C", VA = "0x159A83C")]
	private void Update()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x159A5F0", Offset = "0x159A5F0", VA = "0x159A5F0")]
	private VRTK_SDKSetup[] GetValidSetups(bool includeSimulator = false)
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x159A988", Offset = "0x159A988", VA = "0x159A988")]
	public SDKEnforcer()
	{
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647EF4", Offset = "0x647EF4")]
public class Bear : Actor
{
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C988", Offset = "0x64C988")]
	private sealed class <MainCoro>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <roarTime>5__2;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0xAEC408", Offset = "0xAEC408", VA = "0xAEC408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xAEC478", Offset = "0xAEC478", VA = "0xAEC478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xAE6114", Offset = "0xAE6114", VA = "0xAE6114")]
		[DebuggerHidden]
		public <MainCoro>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xAEBA14", Offset = "0xAEBA14", VA = "0xAEBA14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xAEBA18", Offset = "0xAEBA18", VA = "0xAEBA18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xAEC410", Offset = "0xAEC410", VA = "0xAEC410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C998", Offset = "0x64C998")]
	private sealed class <ChargeCoro>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaycastHit <hitInfo>5__2;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xAE9B84", Offset = "0xAE9B84", VA = "0xAE9B84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xAE9BF4", Offset = "0xAE9BF4", VA = "0xAE9BF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xAE6330", Offset = "0xAE6330", VA = "0xAE6330")]
		[DebuggerHidden]
		public <ChargeCoro>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xAE90D8", Offset = "0xAE90D8", VA = "0xAE90D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xAE90DC", Offset = "0xAE90DC", VA = "0xAE90DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xAE9B8C", Offset = "0xAE9B8C", VA = "0xAE9B8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9A8", Offset = "0x64C9A8")]
	private sealed class <>c__DisplayClass81_0
	{
		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bear <>4__this;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 dir;

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xAE8CF0", Offset = "0xAE8CF0", VA = "0xAE8CF0")]
		public <>c__DisplayClass81_0()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xAE8CF8", Offset = "0xAE8CF8", VA = "0xAE8CF8")]
		internal bool <FrenzyCoro>b__0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xAE8DB0", Offset = "0xAE8DB0", VA = "0xAE8DB0")]
		internal bool <FrenzyCoro>b__1()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xAE8EB0", Offset = "0xAE8EB0", VA = "0xAE8EB0")]
		internal bool <FrenzyCoro>b__2()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xAE8F68", Offset = "0xAE8F68", VA = "0xAE8F68")]
		internal bool <FrenzyCoro>b__3()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xAE9020", Offset = "0xAE9020", VA = "0xAE9020")]
		internal bool <FrenzyCoro>b__4()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9B8", Offset = "0x64C9B8")]
	private sealed class <FrenzyCoro>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass81_0 <>8__1;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector3> <pathList>5__2;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <listIndex>5__3;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <lastTurnTime>5__4;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xAEB6E4", Offset = "0xAEB6E4", VA = "0xAEB6E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xAEB754", Offset = "0xAEB754", VA = "0xAEB754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xAE63D0", Offset = "0xAE63D0", VA = "0xAE63D0")]
		[DebuggerHidden]
		public <FrenzyCoro>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xAE9BFC", Offset = "0xAE9BFC", VA = "0xAE9BFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xAE9C00", Offset = "0xAE9C00", VA = "0xAE9C00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xAEB6EC", Offset = "0xAEB6EC", VA = "0xAEB6EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9C8", Offset = "0x64C9C8")]
	private sealed class <MultiThrowcoro>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0xAED030", Offset = "0xAED030", VA = "0xAED030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0xAED0A0", Offset = "0xAED0A0", VA = "0xAED0A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xAE6470", Offset = "0xAE6470", VA = "0xAE6470")]
		[DebuggerHidden]
		public <MultiThrowcoro>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xAECA3C", Offset = "0xAECA3C", VA = "0xAECA3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xAECA40", Offset = "0xAECA40", VA = "0xAECA40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xAED038", Offset = "0xAED038", VA = "0xAED038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9D8", Offset = "0x64C9D8")]
	private sealed class <ThrowCoro>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool right;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem <dust>5__2;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <originPos>5__3;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <targetPos>5__4;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <attack>5__5;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xAEF274", Offset = "0xAEF274", VA = "0xAEF274", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xAEF2E4", Offset = "0xAEF2E4", VA = "0xAEF2E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xAE6538", Offset = "0xAE6538", VA = "0xAE6538")]
		[DebuggerHidden]
		public <ThrowCoro>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xAEE69C", Offset = "0xAEE69C", VA = "0xAEE69C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xAEE6A0", Offset = "0xAEE6A0", VA = "0xAEE6A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xAEF27C", Offset = "0xAEF27C", VA = "0xAEF27C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9E8", Offset = "0x64C9E8")]
	private sealed class <MeleeCoro>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xAEC9C4", Offset = "0xAEC9C4", VA = "0xAEC9C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xAECA34", Offset = "0xAECA34", VA = "0xAECA34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xAE65D8", Offset = "0xAE65D8", VA = "0xAE65D8")]
		[DebuggerHidden]
		public <MeleeCoro>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xAEC480", Offset = "0xAEC480", VA = "0xAEC480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xAEC484", Offset = "0xAEC484", VA = "0xAEC484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xAEC9CC", Offset = "0xAEC9CC", VA = "0xAEC9CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9F8", Offset = "0x64C9F8")]
	private sealed class <RoarCoro>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0xAED99C", Offset = "0xAED99C", VA = "0xAED99C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xAEDA0C", Offset = "0xAEDA0C", VA = "0xAEDA0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xAE6678", Offset = "0xAE6678", VA = "0xAE6678")]
		[DebuggerHidden]
		public <RoarCoro>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xAED7B0", Offset = "0xAED7B0", VA = "0xAED7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xAED7B4", Offset = "0xAED7B4", VA = "0xAED7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xAED9A4", Offset = "0xAED9A4", VA = "0xAED9A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA08", Offset = "0x64CA08")]
	private sealed class <RotateTowards>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotTarget;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <targetDir>5__2;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xAEDFC8", Offset = "0xAEDFC8", VA = "0xAEDFC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0xAEE038", Offset = "0xAEE038", VA = "0xAEE038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xAE6750", Offset = "0xAE6750", VA = "0xAE6750")]
		[DebuggerHidden]
		public <RotateTowards>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xAEDA14", Offset = "0xAEDA14", VA = "0xAEDA14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xAEDA18", Offset = "0xAEDA18", VA = "0xAEDA18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xAEDFD0", Offset = "0xAEDFD0", VA = "0xAEDFD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA18", Offset = "0x64CA18")]
	private sealed class <SnapToPoint>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <foundPos>5__2;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xAEE624", Offset = "0xAEE624", VA = "0xAEE624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xAEE694", Offset = "0xAEE694", VA = "0xAEE694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xAE67F0", Offset = "0xAE67F0", VA = "0xAE67F0")]
		[DebuggerHidden]
		public <SnapToPoint>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xAEE040", Offset = "0xAEE040", VA = "0xAEE040", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xAEE044", Offset = "0xAEE044", VA = "0xAEE044", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xAEE62C", Offset = "0xAEE62C", VA = "0xAEE62C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA28", Offset = "0x64CA28")]
	private sealed class <NextPosCoro>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NavMeshPath <path>5__2;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0xAED738", Offset = "0xAED738", VA = "0xAED738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0xAED7A8", Offset = "0xAED7A8", VA = "0xAED7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xAE6890", Offset = "0xAE6890", VA = "0xAE6890")]
		[DebuggerHidden]
		public <NextPosCoro>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xAED0A8", Offset = "0xAED0A8", VA = "0xAED0A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xAED0AC", Offset = "0xAED0AC", VA = "0xAED0AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xAED740", Offset = "0xAED740", VA = "0xAED740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA38", Offset = "0x64CA38")]
	private sealed class <HitCoro>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bear <>4__this;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xAEB99C", Offset = "0xAEB99C", VA = "0xAEB99C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xAEBA0C", Offset = "0xAEBA0C", VA = "0xAEBA0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xAE7074", Offset = "0xAE7074", VA = "0xAE7074")]
		[DebuggerHidden]
		public <HitCoro>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xAEB75C", Offset = "0xAEB75C", VA = "0xAEB75C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xAEB760", Offset = "0xAEB760", VA = "0xAEB760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xAEB9A4", Offset = "0xAEB9A4", VA = "0xAEB9A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65030C", Offset = "0x65030C")]
	[SerializeField]
	protected Rigidbody[] projectilePrefabs;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected BeehiveSpawner[] beehiveSpawners;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected BearLevelManager levelManager;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected ParticleSystem dustRight;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected ParticleSystem dustLeft;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650398", Offset = "0x650398")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650398", Offset = "0x650398")]
	[SerializeField]
	protected float lickStart;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6503FC", Offset = "0x6503FC")]
	[SerializeField]
	protected float lickEnd;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65043C", Offset = "0x65043C")]
	[SerializeField]
	protected float meleeRadius;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650488", Offset = "0x650488")]
	[SerializeField]
	protected float dmgTime;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected LayerMask damageMask;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6504D8", Offset = "0x6504D8")]
	[SerializeField]
	protected Transform throwRTrans;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650524", Offset = "0x650524")]
	[SerializeField]
	protected float throwRNormalizedTime;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected Transform throwLTrans;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650574", Offset = "0x650574")]
	[SerializeField]
	protected float throwLNormalizedTime;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	protected float throwRange;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected float throwPower;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	protected float headAimOffset;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6505E4", Offset = "0x6505E4")]
	[SerializeField]
	protected float[] throwCDByPhase;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650630", Offset = "0x650630")]
	[SerializeField]
	protected float[] multiThrowPauseDurationByPhase;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected float[] animSpeedByPhase;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65068C", Offset = "0x65068C")]
	[SerializeField]
	protected float snapDist;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	protected float minFollowDist;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected LayerMask chargeHitMask;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	protected LayerMask frenzyHitMask;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected Transform dmgOrigin;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650718", Offset = "0x650718")]
	[SerializeField]
	protected bool aggro;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	protected int phase;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Animator anim;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float throwPauseDur;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform playAreaTransform;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform headsetTransform;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isCharging;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x650774", Offset = "0x650774")]
	public bool isFrenzying;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	private bool isThrowing;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	private bool isMelee;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool interrupted;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool invulnerable;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float lastBiteAttempt;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private readonly int meleeHash;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly int throwRHash;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private readonly int throwLHash;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly int frenzyHash;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private readonly int hitReactHash;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly int chargeHash;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private readonly int walkHash;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private readonly int standHash;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private readonly int aggroHash;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool dead;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 chargeTarget;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 frenzyTargetPos;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 nextPos;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 snapPos;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private FrenzyTarget frenzyTarget;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool throwInProgress;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool turnlock;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	private bool shouldFrenzy;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	private bool shouldThrow;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool shouldWalk;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	private bool goNext;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float chargeEnd;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool hasSheep;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform sheep;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector2 smoothDeltaPosition;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector2 velocity;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private IEnumerator currentCoro;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private IEnumerator mainCoro;

	[Token(Token = "0x4000187")]
	private const int MAX_LOOPS_PER_FRAME_FAILSAFE = 1000;

	[Token(Token = "0x1700002A")]
	private float DistFromPlayer
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0xAE5288", Offset = "0xAE5288", VA = "0xAE5288")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002B")]
	private Vector3 PlayerRootPos
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0xAE5360", Offset = "0xAE5360", VA = "0xAE5360")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700002C")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x6000172")]
		[Address(RVA = "0xAE54EC", Offset = "0xAE54EC", VA = "0xAE54EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0xAE5594", Offset = "0xAE5594", VA = "0xAE5594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xAE563C", Offset = "0xAE563C", VA = "0xAE563C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xAE57EC", Offset = "0xAE57EC", VA = "0xAE57EC", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xAE58A8", Offset = "0xAE58A8", VA = "0xAE58A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xAE5834", Offset = "0xAE5834", VA = "0xAE5834")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665EB0", Offset = "0x665EB0")]
	private IEnumerator MainCoro()
	{
		return null;
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xAE6140", Offset = "0xAE6140", VA = "0xAE6140")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xAE62BC", Offset = "0xAE62BC", VA = "0xAE62BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665F14", Offset = "0x665F14")]
	private IEnumerator ChargeCoro()
	{
		return null;
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xAE635C", Offset = "0xAE635C", VA = "0xAE635C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665F78", Offset = "0x665F78")]
	private IEnumerator FrenzyCoro()
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xAE63FC", Offset = "0xAE63FC", VA = "0xAE63FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x665FDC", Offset = "0x665FDC")]
	private IEnumerator MultiThrowcoro()
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xAE649C", Offset = "0xAE649C", VA = "0xAE649C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667040", Offset = "0x667040")]
	private IEnumerator ThrowCoro(bool right)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xAE6564", Offset = "0xAE6564", VA = "0xAE6564")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6670A4", Offset = "0x6670A4")]
	private IEnumerator MeleeCoro()
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xAE6604", Offset = "0xAE6604", VA = "0xAE6604")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667108", Offset = "0x667108")]
	private IEnumerator RoarCoro()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xAE66A4", Offset = "0xAE66A4", VA = "0xAE66A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66716C", Offset = "0x66716C")]
	private IEnumerator RotateTowards(Vector3 rotTarget)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xAE677C", Offset = "0xAE677C", VA = "0xAE677C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6671D0", Offset = "0x6671D0")]
	private IEnumerator SnapToPoint()
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xAE681C", Offset = "0xAE681C", VA = "0xAE681C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667234", Offset = "0x667234")]
	private IEnumerator NextPosCoro()
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xAE68BC", Offset = "0xAE68BC", VA = "0xAE68BC")]
	private Coroutine HandleMove(IEnumerator attackCoroutine)
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xAE68C8", Offset = "0xAE68C8", VA = "0xAE68C8")]
	public void InterruptCurrentMove()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xAE6AEC", Offset = "0xAE6AEC", VA = "0xAE6AEC")]
	private void Actor_Damaged(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xAE7000", Offset = "0xAE7000", VA = "0xAE7000")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667298", Offset = "0x667298")]
	private IEnumerator HitCoro()
	{
		return null;
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xAE70A0", Offset = "0xAE70A0", VA = "0xAE70A0")]
	private void DealDamage(float damageRadius, LayerMask damageMask)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xAE730C", Offset = "0xAE730C", VA = "0xAE730C")]
	public void Die()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xAE737C", Offset = "0xAE737C", VA = "0xAE737C")]
	private void SpawnProjectile(Vector3 targetPos, Vector3 originPos, int projectileIndex)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xAE772C", Offset = "0xAE772C", VA = "0xAE772C")]
	private bool IsDoingSomething()
	{
		return default(bool);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xAE6C80", Offset = "0xAE6C80", VA = "0xAE6C80")]
	public void IncrementPhase()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xAE775C", Offset = "0xAE775C", VA = "0xAE775C")]
	public void NextPosition(Transform location)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xAE7800", Offset = "0xAE7800", VA = "0xAE7800")]
	public void GrabSheep(Transform sheepIn)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xAE7950", Offset = "0xAE7950", VA = "0xAE7950")]
	private void DropSheep()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xAE79EC", Offset = "0xAE79EC", VA = "0xAE79EC")]
	public Bear()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xAE7B94", Offset = "0xAE7B94", VA = "0xAE7B94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6672FC", Offset = "0x6672FC")]
	private bool <MainCoro>b__78_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xAE7CA4", Offset = "0xAE7CA4", VA = "0xAE7CA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66730C", Offset = "0x66730C")]
	private bool <MainCoro>b__78_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xAE7D34", Offset = "0xAE7D34", VA = "0xAE7D34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66731C", Offset = "0x66731C")]
	private bool <ChargeCoro>b__80_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xAE7DE0", Offset = "0xAE7DE0", VA = "0xAE7DE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66732C", Offset = "0x66732C")]
	private bool <MultiThrowcoro>b__82_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xAE7E9C", Offset = "0xAE7E9C", VA = "0xAE7E9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66733C", Offset = "0x66733C")]
	private bool <MultiThrowcoro>b__82_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xAE7F58", Offset = "0xAE7F58", VA = "0xAE7F58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66734C", Offset = "0x66734C")]
	private bool <MultiThrowcoro>b__82_2()
	{
		return default(bool);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xAE8014", Offset = "0xAE8014", VA = "0xAE8014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66735C", Offset = "0x66735C")]
	private bool <MultiThrowcoro>b__82_3()
	{
		return default(bool);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xAE80D0", Offset = "0xAE80D0", VA = "0xAE80D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66736C", Offset = "0x66736C")]
	private bool <ThrowCoro>b__83_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xAE818C", Offset = "0xAE818C", VA = "0xAE818C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66737C", Offset = "0x66737C")]
	private bool <ThrowCoro>b__83_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xAE8220", Offset = "0xAE8220", VA = "0xAE8220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66738C", Offset = "0x66738C")]
	private bool <ThrowCoro>b__83_2()
	{
		return default(bool);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xAE82DC", Offset = "0xAE82DC", VA = "0xAE82DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66739C", Offset = "0x66739C")]
	private bool <ThrowCoro>b__83_3()
	{
		return default(bool);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xAE8370", Offset = "0xAE8370", VA = "0xAE8370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6673AC", Offset = "0x6673AC")]
	private bool <MeleeCoro>b__84_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xAE8428", Offset = "0xAE8428", VA = "0xAE8428")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6673BC", Offset = "0x6673BC")]
	private bool <MeleeCoro>b__84_1()
	{
		return default(bool);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xAE8534", Offset = "0xAE8534", VA = "0xAE8534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6673CC", Offset = "0x6673CC")]
	private bool <RoarCoro>b__85_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xAE85EC", Offset = "0xAE85EC", VA = "0xAE85EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6673DC", Offset = "0x6673DC")]
	private bool <RoarCoro>b__85_1()
	{
		return default(bool);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xAE86B0", Offset = "0xAE86B0", VA = "0xAE86B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6673EC", Offset = "0x6673EC")]
	private bool <RotateTowards>b__86_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xAE87C0", Offset = "0xAE87C0", VA = "0xAE87C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6673FC", Offset = "0x6673FC")]
	private bool <RotateTowards>b__86_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xAE88D0", Offset = "0xAE88D0", VA = "0xAE88D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66740C", Offset = "0x66740C")]
	private bool <RotateTowards>b__86_2()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xAE89E0", Offset = "0xAE89E0", VA = "0xAE89E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66741C", Offset = "0x66741C")]
	private bool <RotateTowards>b__86_3()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xAE8AF0", Offset = "0xAE8AF0", VA = "0xAE8AF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66742C", Offset = "0x66742C")]
	private bool <HitCoro>b__93_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xAE8C48", Offset = "0xAE8C48", VA = "0xAE8C48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66743C", Offset = "0x66743C")]
	private bool <HitCoro>b__93_1()
	{
		return default(bool);
	}
}
[Token(Token = "0x200003D")]
public class BearLevelManager : LevelObjective
{
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA48", Offset = "0x64CA48")]
	private sealed class <StartPuzzle>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject firePuzzle;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BearLevelManager <>4__this;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 basePos;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Fire[] <fireList>5__2;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0xAF04A4", Offset = "0xAF04A4", VA = "0xAF04A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0xAF0514", Offset = "0xAF0514", VA = "0xAF0514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xAEFDA4", Offset = "0xAEFDA4", VA = "0xAEFDA4")]
		[DebuggerHidden]
		public <StartPuzzle>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xAEFE50", Offset = "0xAEFE50", VA = "0xAEFE50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xAEFE54", Offset = "0xAEFE54", VA = "0xAEFE54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xAF04AC", Offset = "0xAF04AC", VA = "0xAF04AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EmberPrefab;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] firePuzzleList;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int puzzleIndex;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xAEFA94", Offset = "0xAEFA94", VA = "0xAEFA94")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xAEFA9C", Offset = "0xAEFA9C", VA = "0xAEFA9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xAEFB94", Offset = "0xAEFB94", VA = "0xAEFB94")]
	public void NextPuzzle(int index, Vector3 basePos)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xAEFCDC", Offset = "0xAEFCDC", VA = "0xAEFCDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66744C", Offset = "0x66744C")]
	private IEnumerator StartPuzzle(GameObject firePuzzle, Vector3 basePos)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xAEB5BC", Offset = "0xAEB5BC", VA = "0xAEB5BC")]
	public void TurnOffNavObstacles()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xAEFDD0", Offset = "0xAEFDD0", VA = "0xAEFDD0")]
	public BearLevelManager()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647F58", Offset = "0x647F58")]
public class Beehive : Actor
{
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA58", Offset = "0x64CA58")]
	private sealed class <Break>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Beehive <>4__this;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0xAF1A7C", Offset = "0xAF1A7C", VA = "0xAF1A7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xAF1AEC", Offset = "0xAF1AEC", VA = "0xAF1AEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xAF1338", Offset = "0xAF1338", VA = "0xAF1338")]
		[DebuggerHidden]
		public <Break>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xAF17E8", Offset = "0xAF17E8", VA = "0xAF17E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xAF17EC", Offset = "0xAF17EC", VA = "0xAF17EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xAF1A84", Offset = "0xAF1A84", VA = "0xAF1A84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] fragments;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject mainMesh;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem fx;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform stickyEffect;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float respawnRate;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FrenzyTarget frenzyTarget;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<FrenzyTarget> frenzyTargets;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Monolith monolith;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool useTargetList;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BeehiveSpawner spawn;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody rb;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool falling;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float fallStart;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 startPos;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion startRot;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3[] fragStartPos;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion[] fragStartRot;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool hitBear;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool broken;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool respawned;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xAF0714", Offset = "0xAF0714", VA = "0xAF0714")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xAF09E0", Offset = "0xAF09E0", VA = "0xAF09E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xAF0A5C", Offset = "0xAF0A5C", VA = "0xAF0A5C")]
	public void Initialize(BeehiveSpawner beehiveSpawner, FrenzyTarget frenzyPoint, List<FrenzyTarget> frenzyList, Monolith monolithIn, bool useList)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xAF0B8C", Offset = "0xAF0B8C", VA = "0xAF0B8C")]
	private void TargetDestroyed()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xAF0CA8", Offset = "0xAF0CA8", VA = "0xAF0CA8")]
	private void Fall(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xAE6D7C", Offset = "0xAE6D7C", VA = "0xAE6D7C")]
	public FrenzyTarget GetFrenzyTarget()
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xAF0D44", Offset = "0xAF0D44", VA = "0xAF0D44")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xAF111C", Offset = "0xAF111C", VA = "0xAF111C")]
	private void PlayHitFX(Vector3 hitPos)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xAF12C4", Offset = "0xAF12C4", VA = "0xAF12C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6674B0", Offset = "0x6674B0")]
	private IEnumerator Break()
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xAF1364", Offset = "0xAF1364", VA = "0xAF1364")]
	public void Revert()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xAF174C", Offset = "0xAF174C", VA = "0xAF174C")]
	public Beehive()
	{
	}
}
[Token(Token = "0x200003F")]
public class BeehiveSpawner : MonoBehaviour
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Beehive beehive;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FrenzyTarget frenzyTarget;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform snapPoint;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<FrenzyTarget> frenzyTargets;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Monolith monolith;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useTargetList;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xAF1AF4", Offset = "0xAF1AF4", VA = "0xAF1AF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xAEE5F4", Offset = "0xAEE5F4", VA = "0xAEE5F4")]
	public Vector3 GetSnapPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xAF1B54", Offset = "0xAF1B54", VA = "0xAF1B54")]
	public BeehiveSpawner()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x647FBC", Offset = "0x647FBC")]
public class ChallengeBear : Actor
{
	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA68", Offset = "0x64CA68")]
	private sealed class <MainCoro>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeBear <>4__this;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0xAF5E14", Offset = "0xAF5E14", VA = "0xAF5E14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xAF5E84", Offset = "0xAF5E84", VA = "0xAF5E84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xAF2C4C", Offset = "0xAF2C4C", VA = "0xAF2C4C")]
		[DebuggerHidden]
		public <MainCoro>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xAF5B4C", Offset = "0xAF5B4C", VA = "0xAF5B4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xAF5B50", Offset = "0xAF5B50", VA = "0xAF5B50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xAF5E1C", Offset = "0xAF5E1C", VA = "0xAF5E1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA78", Offset = "0x64CA78")]
	private sealed class <ChargeCoro>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeBear <>4__this;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaycastHit <hitInfo>5__2;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0xAF5738", Offset = "0xAF5738", VA = "0xAF5738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0xAF57A8", Offset = "0xAF57A8", VA = "0xAF57A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xAF2E68", Offset = "0xAF2E68", VA = "0xAF2E68")]
		[DebuggerHidden]
		public <ChargeCoro>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xAF4D20", Offset = "0xAF4D20", VA = "0xAF4D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xAF4D24", Offset = "0xAF4D24", VA = "0xAF4D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xAF5740", Offset = "0xAF5740", VA = "0xAF5740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA88", Offset = "0x64CA88")]
	private sealed class <MultiThrowcoro>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeBear <>4__this;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0xAF6A18", Offset = "0xAF6A18", VA = "0xAF6A18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0xAF6A88", Offset = "0xAF6A88", VA = "0xAF6A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xAF2F08", Offset = "0xAF2F08", VA = "0xAF2F08")]
		[DebuggerHidden]
		public <MultiThrowcoro>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xAF6448", Offset = "0xAF6448", VA = "0xAF6448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xAF644C", Offset = "0xAF644C", VA = "0xAF644C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xAF6A20", Offset = "0xAF6A20", VA = "0xAF6A20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CA98", Offset = "0x64CA98")]
	private sealed class <ThrowCoro>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeBear <>4__this;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool right;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem <dust>5__2;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <originPos>5__3;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <targetPos>5__4;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <attack>5__5;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0xAF7EA0", Offset = "0xAF7EA0", VA = "0xAF7EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0xAF7F10", Offset = "0xAF7F10", VA = "0xAF7F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xAF2FD0", Offset = "0xAF2FD0", VA = "0xAF2FD0")]
		[DebuggerHidden]
		public <ThrowCoro>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xAF72C8", Offset = "0xAF72C8", VA = "0xAF72C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xAF72CC", Offset = "0xAF72CC", VA = "0xAF72CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xAF7EA8", Offset = "0xAF7EA8", VA = "0xAF7EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CAA8", Offset = "0x64CAA8")]
	private sealed class <MeleeCoro>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeBear <>4__this;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0xAF63D0", Offset = "0xAF63D0", VA = "0xAF63D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0xAF6440", Offset = "0xAF6440", VA = "0xAF6440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xAF3070", Offset = "0xAF3070", VA = "0xAF3070")]
		[DebuggerHidden]
		public <MeleeCoro>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xAF5E8C", Offset = "0xAF5E8C", VA = "0xAF5E8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xAF5E90", Offset = "0xAF5E90", VA = "0xAF5E90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xAF63D8", Offset = "0xAF63D8", VA = "0xAF63D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CAB8", Offset = "0x64CAB8")]
	private sealed class <RoarCoro>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeBear <>4__this;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0xAF6C24", Offset = "0xAF6C24", VA = "0xAF6C24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0xAF6C94", Offset = "0xAF6C94", VA = "0xAF6C94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xAF3110", Offset = "0xAF3110", VA = "0xAF3110")]
		[DebuggerHidden]
		public <RoarCoro>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xAF6A90", Offset = "0xAF6A90", VA = "0xAF6A90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xAF6A94", Offset = "0xAF6A94", VA = "0xAF6A94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xAF6C2C", Offset = "0xAF6C2C", VA = "0xAF6C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CAC8", Offset = "0x64CAC8")]
	private sealed class <RotateTowards>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeBear <>4__this;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotTarget;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <targetDir>5__2;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0xAF7250", Offset = "0xAF7250", VA = "0xAF7250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0xAF72C0", Offset = "0xAF72C0", VA = "0xAF72C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xAF31E8", Offset = "0xAF31E8", VA = "0xAF31E8")]
		[DebuggerHidden]
		public <RotateTowards>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xAF6C9C", Offset = "0xAF6C9C", VA = "0xAF6C9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xAF6CA0", Offset = "0xAF6CA0", VA = "0xAF6CA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xAF7258", Offset = "0xAF7258", VA = "0xAF7258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CAD8", Offset = "0x64CAD8")]
	private sealed class <HitCoro>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeBear <>4__this;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xAF5AD4", Offset = "0xAF5AD4", VA = "0xAF5AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0xAF5B44", Offset = "0xAF5B44", VA = "0xAF5B44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xAF34FC", Offset = "0xAF34FC", VA = "0xAF34FC")]
		[DebuggerHidden]
		public <HitCoro>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xAF5930", Offset = "0xAF5930", VA = "0xAF5930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xAF5934", Offset = "0xAF5934", VA = "0xAF5934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xAF5ADC", Offset = "0xAF5ADC", VA = "0xAF5ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CAE8", Offset = "0x64CAE8")]
	private sealed class <DieCoro>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeBear <>4__this;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0xAF58B8", Offset = "0xAF58B8", VA = "0xAF58B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xAF5928", Offset = "0xAF5928", VA = "0xAF5928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xAF38B8", Offset = "0xAF38B8", VA = "0xAF38B8")]
		[DebuggerHidden]
		public <DieCoro>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xAF57B0", Offset = "0xAF57B0", VA = "0xAF57B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xAF57B4", Offset = "0xAF57B4", VA = "0xAF57B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xAF58C0", Offset = "0xAF58C0", VA = "0xAF58C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650784", Offset = "0x650784")]
	[SerializeField]
	protected Rigidbody[] projectilePrefabs;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected ParticleSystem dustRight;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected ParticleSystem dustLeft;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6507F0", Offset = "0x6507F0")]
	[SerializeField]
	protected int maxHealth;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65083C", Offset = "0x65083C")]
	[SerializeField]
	protected float meleeRadius;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650888", Offset = "0x650888")]
	[SerializeField]
	protected float dmgTime;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected LayerMask damageMask;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6508D8", Offset = "0x6508D8")]
	[SerializeField]
	protected Transform throwRTrans;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650924", Offset = "0x650924")]
	[SerializeField]
	protected float throwRNormalizedTime;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Transform throwLTrans;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650974", Offset = "0x650974")]
	[SerializeField]
	protected float throwLNormalizedTime;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	protected float throwRange;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected float throwPower;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	protected float headAimOffset;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected float multiThrowPauseDuration;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6509F4", Offset = "0x6509F4")]
	[SerializeField]
	protected float minFollowDist;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	protected LayerMask chargeHitMask;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	protected LayerMask frenzyHitMask;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected Transform dmgOrigin;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator anim;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private NavMeshAgent agent;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int health;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform playAreaTransform;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform headsetTransform;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool isCharging;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool isThrowing;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool isMelee;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	private bool interrupted;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool invulnerable;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float lastBiteAttempt;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private readonly int meleeHash;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly int throwRHash;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private readonly int throwLHash;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly int frenzyHash;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private readonly int hitReactHash;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly int chargeHash;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private readonly int walkHash;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private readonly int standHash;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private readonly int aggroHash;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool dead;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 chargeTarget;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool throwInProgress;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool turnlock;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	private bool shouldThrow;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	private bool shouldWalk;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float chargeEnd;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector2 smoothDeltaPosition;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector2 velocity;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private IEnumerator currentCoro;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private IEnumerator mainCoro;

	[Token(Token = "0x40001D7")]
	private const int MAX_LOOPS_PER_FRAME_FAILSAFE = 1000;

	[Token(Token = "0x1700002E")]
	private float DistFromPlayer
	{
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xAF1F3C", Offset = "0xAF1F3C", VA = "0xAF1F3C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002F")]
	private Vector3 PlayerRootPos
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xAF2014", Offset = "0xAF2014", VA = "0xAF2014")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000030")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xAF21A0", Offset = "0xAF21A0", VA = "0xAF21A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xAF2248", Offset = "0xAF2248", VA = "0xAF2248")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xAF22F0", Offset = "0xAF22F0", VA = "0xAF22F0", Slot = "4")]
	public override void Activate()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xAF2398", Offset = "0xAF2398", VA = "0xAF2398")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xAF2408", Offset = "0xAF2408", VA = "0xAF2408", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xAF24B8", Offset = "0xAF24B8", VA = "0xAF24B8", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xAF253C", Offset = "0xAF253C", VA = "0xAF253C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xAF2324", Offset = "0xAF2324", VA = "0xAF2324")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667514", Offset = "0x667514")]
	private IEnumerator MainCoro()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xAF2C78", Offset = "0xAF2C78", VA = "0xAF2C78")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xAF2DF4", Offset = "0xAF2DF4", VA = "0xAF2DF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667578", Offset = "0x667578")]
	private IEnumerator ChargeCoro()
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xAF2E94", Offset = "0xAF2E94", VA = "0xAF2E94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6675DC", Offset = "0x6675DC")]
	private IEnumerator MultiThrowcoro()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xAF2F34", Offset = "0xAF2F34", VA = "0xAF2F34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667640", Offset = "0x667640")]
	private IEnumerator ThrowCoro(bool right)
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xAF2FFC", Offset = "0xAF2FFC", VA = "0xAF2FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6676A4", Offset = "0x6676A4")]
	private IEnumerator MeleeCoro()
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xAF309C", Offset = "0xAF309C", VA = "0xAF309C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667708", Offset = "0x667708")]
	private IEnumerator RoarCoro()
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xAF313C", Offset = "0xAF313C", VA = "0xAF313C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66776C", Offset = "0x66776C")]
	private IEnumerator RotateTowards(Vector3 rotTarget)
	{
		return null;
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xAF3214", Offset = "0xAF3214", VA = "0xAF3214")]
	private Coroutine HandleMove(IEnumerator attackCoroutine)
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xAF3220", Offset = "0xAF3220", VA = "0xAF3220")]
	public void InterruptCurrentMove()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xAF3444", Offset = "0xAF3444", VA = "0xAF3444")]
	private void Actor_Damaged(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xAF3488", Offset = "0xAF3488", VA = "0xAF3488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6677D0", Offset = "0x6677D0")]
	private IEnumerator HitCoro()
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xAF3528", Offset = "0xAF3528", VA = "0xAF3528")]
	private void DealDamage(float damageRadius, LayerMask damageMask)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xAF3794", Offset = "0xAF3794", VA = "0xAF3794")]
	public void Die()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xAF3844", Offset = "0xAF3844", VA = "0xAF3844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667834", Offset = "0x667834")]
	private IEnumerator DieCoro()
	{
		return null;
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xAF38E4", Offset = "0xAF38E4", VA = "0xAF38E4")]
	private void SpawnProjectile(Vector3 targetPos, Vector3 originPos, int projectileIndex)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xAF3C48", Offset = "0xAF3C48", VA = "0xAF3C48")]
	private bool IsDoingSomething()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xAF3C70", Offset = "0xAF3C70", VA = "0xAF3C70")]
	public ChallengeBear()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xAF3E0C", Offset = "0xAF3E0C", VA = "0xAF3E0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667898", Offset = "0x667898")]
	private bool <ChargeCoro>b__65_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xAF3EB8", Offset = "0xAF3EB8", VA = "0xAF3EB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6678A8", Offset = "0x6678A8")]
	private bool <MultiThrowcoro>b__66_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xAF3F74", Offset = "0xAF3F74", VA = "0xAF3F74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6678B8", Offset = "0x6678B8")]
	private bool <MultiThrowcoro>b__66_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xAF4030", Offset = "0xAF4030", VA = "0xAF4030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6678C8", Offset = "0x6678C8")]
	private bool <MultiThrowcoro>b__66_2()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xAF40EC", Offset = "0xAF40EC", VA = "0xAF40EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6678D8", Offset = "0x6678D8")]
	private bool <MultiThrowcoro>b__66_3()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xAF41A8", Offset = "0xAF41A8", VA = "0xAF41A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6678E8", Offset = "0x6678E8")]
	private bool <ThrowCoro>b__67_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xAF4264", Offset = "0xAF4264", VA = "0xAF4264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6678F8", Offset = "0x6678F8")]
	private bool <ThrowCoro>b__67_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xAF42F8", Offset = "0xAF42F8", VA = "0xAF42F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667908", Offset = "0x667908")]
	private bool <ThrowCoro>b__67_2()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xAF43B4", Offset = "0xAF43B4", VA = "0xAF43B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667918", Offset = "0x667918")]
	private bool <ThrowCoro>b__67_3()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xAF4448", Offset = "0xAF4448", VA = "0xAF4448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667928", Offset = "0x667928")]
	private bool <MeleeCoro>b__68_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xAF4500", Offset = "0xAF4500", VA = "0xAF4500")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667938", Offset = "0x667938")]
	private bool <MeleeCoro>b__68_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xAF460C", Offset = "0xAF460C", VA = "0xAF460C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667948", Offset = "0x667948")]
	private bool <RoarCoro>b__69_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xAF46C4", Offset = "0xAF46C4", VA = "0xAF46C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667958", Offset = "0x667958")]
	private bool <RoarCoro>b__69_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xAF4788", Offset = "0xAF4788", VA = "0xAF4788")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667968", Offset = "0x667968")]
	private bool <RotateTowards>b__70_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xAF4898", Offset = "0xAF4898", VA = "0xAF4898")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667978", Offset = "0x667978")]
	private bool <RotateTowards>b__70_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xAF49A8", Offset = "0xAF49A8", VA = "0xAF49A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667988", Offset = "0x667988")]
	private bool <RotateTowards>b__70_2()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xAF4AB8", Offset = "0xAF4AB8", VA = "0xAF4AB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667998", Offset = "0x667998")]
	private bool <RotateTowards>b__70_3()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xAF4BC8", Offset = "0xAF4BC8", VA = "0xAF4BC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6679A8", Offset = "0x6679A8")]
	private bool <HitCoro>b__75_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000041")]
public class FallingTree : FrenzyTarget
{
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CAF8", Offset = "0x64CAF8")]
	private sealed class <FallCoro>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FallingTree <>4__this;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x99BBBC", Offset = "0x99BBBC", VA = "0x99BBBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0x99BC2C", Offset = "0x99BC2C", VA = "0x99BC2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x99B9A0", Offset = "0x99B9A0", VA = "0x99B9A0")]
		[DebuggerHidden]
		public <FallCoro>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x99BAC0", Offset = "0x99BAC0", VA = "0x99BAC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x99BAC4", Offset = "0x99BAC4", VA = "0x99BAC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x99BBC4", Offset = "0x99BBC4", VA = "0x99BBC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected BearLevelManager levelManager;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x99B8A8", Offset = "0x99B8A8", VA = "0x99B8A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x99B900", Offset = "0x99B900", VA = "0x99B900", Slot = "4")]
	public override void HitByFrenzy(Bear bear)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x99B92C", Offset = "0x99B92C", VA = "0x99B92C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6679B8", Offset = "0x6679B8")]
	private IEnumerator FallCoro()
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x99B9CC", Offset = "0x99B9CC", VA = "0x99B9CC")]
	public FallingTree()
	{
	}
}
[Token(Token = "0x2000042")]
public class Fire : DamageDealer
{
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB08", Offset = "0x64CB08")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fire <>4__this;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x99C738", Offset = "0x99C738", VA = "0x99C738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x99C7A8", Offset = "0x99C7A8", VA = "0x99C7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x99BCA8", Offset = "0x99BCA8", VA = "0x99BCA8")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x99C3D4", Offset = "0x99C3D4", VA = "0x99C3D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x99C3D8", Offset = "0x99C3D8", VA = "0x99C3D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x99C740", Offset = "0x99C740", VA = "0x99C740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask damageLayers;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Collider> collidingObjs;

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x99BC34", Offset = "0x99BC34", VA = "0x99BC34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667A1C", Offset = "0x667A1C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x99BCD4", Offset = "0x99BCD4", VA = "0x99BCD4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x99BFE8", Offset = "0x99BFE8", VA = "0x99BFE8")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x99C074", Offset = "0x99C074", VA = "0x99C074")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x99C2E0", Offset = "0x99C2E0", VA = "0x99C2E0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x99C350", Offset = "0x99C350", VA = "0x99C350")]
	public Fire()
	{
	}
}
[Token(Token = "0x2000043")]
public class FlyingEmber : MonoBehaviour
{
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB18", Offset = "0x64CB18")]
	private sealed class <Fly>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlyingEmber <>4__this;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 start;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 end;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffset;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float flightTime;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <pct>5__2;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x99CDAC", Offset = "0x99CDAC", VA = "0x99CDAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x99CE1C", Offset = "0x99CE1C", VA = "0x99CE1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x99C9EC", Offset = "0x99C9EC", VA = "0x99C9EC")]
		[DebuggerHidden]
		public <Fly>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x99CA20", Offset = "0x99CA20", VA = "0x99CA20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x99CA24", Offset = "0x99CA24", VA = "0x99CA24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x99CDB4", Offset = "0x99CDB4", VA = "0x99CDB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve yCurve;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x99C7B0", Offset = "0x99C7B0", VA = "0x99C7B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x99C81C", Offset = "0x99C81C", VA = "0x99C81C")]
	public void Activate(Vector3 start, Vector3 end, float yOffset, float flightTime)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x99C8D8", Offset = "0x99C8D8", VA = "0x99C8D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667A80", Offset = "0x667A80")]
	private IEnumerator Fly(Vector3 start, Vector3 end, float yOffset, float flightTime)
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x99CA18", Offset = "0x99CA18", VA = "0x99CA18")]
	public FlyingEmber()
	{
	}
}
[Token(Token = "0x2000044")]
public class FrenzyBreak : FrenzyTarget
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject undestroyedModel;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject destroyedModel;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform nextPosition;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Wolf[] optionalWolves;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x99CE24", Offset = "0x99CE24", VA = "0x99CE24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x99CE7C", Offset = "0x99CE7C", VA = "0x99CE7C", Slot = "4")]
	public override void HitByFrenzy(Bear bear)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x99D004", Offset = "0x99D004", VA = "0x99D004")]
	public FrenzyBreak()
	{
	}
}
[Token(Token = "0x2000045")]
public class FrenzyTarget : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB28", Offset = "0x64CB28")]
	private sealed class <>c
	{
		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction <>9__7_0;

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x99D410", Offset = "0x99D410", VA = "0x99D410")]
		public <>c()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x99D418", Offset = "0x99D418", VA = "0x99D418")]
		internal void <.ctor>b__7_0()
		{
		}
	}

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] frenzyPos;

	[Token(Token = "0x1400000A")]
	public event UnityAction FrenzyTargetDestroyed
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x99D008", Offset = "0x99D008", VA = "0x99D008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667AE4", Offset = "0x667AE4")]
		add
		{
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x99D0F4", Offset = "0x99D0F4", VA = "0x99D0F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667AF4", Offset = "0x667AF4")]
		remove
		{
		}
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x99D1E0", Offset = "0x99D1E0", VA = "0x99D1E0", Slot = "4")]
	public virtual void HitByFrenzy(Bear bear)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x99D1E4", Offset = "0x99D1E4", VA = "0x99D1E4", Slot = "5")]
	public virtual Transform GetClosestFrenzyPosition(Vector3 bearPos)
	{
		return null;
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x99D37C", Offset = "0x99D37C", VA = "0x99D37C")]
	protected void Broken()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x99B9D0", Offset = "0x99B9D0", VA = "0x99B9D0")]
	public FrenzyTarget()
	{
	}
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648020", Offset = "0x648020")]
public class LogProjectile : DamageDealer
{
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB38", Offset = "0x64CB38")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LogProjectile <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x158C594", Offset = "0x158C594", VA = "0x158C594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x158C604", Offset = "0x158C604", VA = "0x158C604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x158C308", Offset = "0x158C308", VA = "0x158C308")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x158C498", Offset = "0x158C498", VA = "0x158C498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x158C49C", Offset = "0x158C49C", VA = "0x158C49C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x158C59C", Offset = "0x158C59C", VA = "0x158C59C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool active;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 spin;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x158C294", Offset = "0x158C294", VA = "0x158C294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667B04", Offset = "0x667B04")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x158C334", Offset = "0x158C334", VA = "0x158C334")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x158C490", Offset = "0x158C490", VA = "0x158C490")]
	public LogProjectile()
	{
	}
}
[Token(Token = "0x2000047")]
public class Monolith : FrenzyTarget
{
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB48", Offset = "0x64CB48")]
	private sealed class <Break>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Monolith <>4__this;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int point;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x15911B0", Offset = "0x15911B0", VA = "0x15911B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x1591220", Offset = "0x1591220", VA = "0x1591220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x1590FA8", Offset = "0x1590FA8", VA = "0x1590FA8")]
		[DebuggerHidden]
		public <Break>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x1590FDC", Offset = "0x1590FDC", VA = "0x1590FDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x1590FE0", Offset = "0x1590FE0", VA = "0x1590FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x15911B8", Offset = "0x15911B8", VA = "0x15911B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject finalBarrier;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bear bear;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator anim;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1590D34", Offset = "0x1590D34", VA = "0x1590D34", Slot = "4")]
	public override void HitByFrenzy(Bear bear)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1590F10", Offset = "0x1590F10", VA = "0x1590F10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667B68", Offset = "0x667B68")]
	private IEnumerator Break(int point)
	{
		return null;
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1590FD4", Offset = "0x1590FD4", VA = "0x1590FD4")]
	public Monolith()
	{
	}
}
[Token(Token = "0x2000048")]
public class MonolithBase : FrenzyTarget
{
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB58", Offset = "0x64CB58")]
	private sealed class <Break>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonolithBase <>4__this;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x1591584", Offset = "0x1591584", VA = "0x1591584", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x15915F4", Offset = "0x15915F4", VA = "0x15915F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x15912C8", Offset = "0x15912C8", VA = "0x15912C8")]
		[DebuggerHidden]
		public <Break>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x15912FC", Offset = "0x15912FC", VA = "0x15912FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x1591300", Offset = "0x1591300", VA = "0x1591300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x159158C", Offset = "0x159158C", VA = "0x159158C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BearLevelManager levelManager;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int firePuzzleIndex;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int baseNumber;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1591228", Offset = "0x1591228", VA = "0x1591228", Slot = "4")]
	public override void HitByFrenzy(Bear bear)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1591254", Offset = "0x1591254", VA = "0x1591254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667BCC", Offset = "0x667BCC")]
	private IEnumerator Break()
	{
		return null;
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x15912F4", Offset = "0x15912F4", VA = "0x15912F4")]
	public MonolithBase()
	{
	}
}
[Token(Token = "0x2000049")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648084", Offset = "0x648084")]
public class RockProjectile : DamageDealer
{
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB68", Offset = "0x64CB68")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RockProjectile <>4__this;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x159A304", Offset = "0x159A304", VA = "0x159A304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x159A374", Offset = "0x159A374", VA = "0x159A374", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x1599FC4", Offset = "0x1599FC4", VA = "0x1599FC4")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x159A1B4", Offset = "0x159A1B4", VA = "0x159A1B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x159A1B8", Offset = "0x159A1B8", VA = "0x159A1B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x159A30C", Offset = "0x159A30C", VA = "0x159A30C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool active;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 spin;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1599F50", Offset = "0x1599F50", VA = "0x1599F50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667C30", Offset = "0x667C30")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1599FF0", Offset = "0x1599FF0", VA = "0x1599FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x159A04C", Offset = "0x159A04C", VA = "0x159A04C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x159A1AC", Offset = "0x159A1AC", VA = "0x159A1AC")]
	public RockProjectile()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6480E8", Offset = "0x6480E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6480E8", Offset = "0x6480E8")]
public class ChallengeGoliath : Actor
{
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB78", Offset = "0x64CB78")]
	private sealed class <MainCoro>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xAFEEDC", Offset = "0xAFEEDC", VA = "0xAFEEDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0xAFEF4C", Offset = "0xAFEF4C", VA = "0xAFEF4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xAF96A0", Offset = "0xAF96A0", VA = "0xAF96A0")]
		[DebuggerHidden]
		public <MainCoro>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xAFDB58", Offset = "0xAFDB58", VA = "0xAFDB58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xAFDB5C", Offset = "0xAFDB5C", VA = "0xAFDB5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xAFEEE4", Offset = "0xAFEEE4", VA = "0xAFEEE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB88", Offset = "0x64CB88")]
	private sealed class <RotateTowardsTarget>d__104 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 playerOverride;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <targetDir>5__2;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <angle>5__3;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0x83FCD0", Offset = "0x83FCD0", VA = "0x83FCD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x83FD40", Offset = "0x83FD40", VA = "0x83FD40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x83F650", Offset = "0x83F650", VA = "0x83F650")]
		[DebuggerHidden]
		public <RotateTowardsTarget>d__104(int <>1__state)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x83F67C", Offset = "0x83F67C", VA = "0x83F67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x83F680", Offset = "0x83F680", VA = "0x83F680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x83FCD8", Offset = "0x83FCD8", VA = "0x83FCD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CB98", Offset = "0x64CB98")]
	private sealed class <ChargeAttack>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startDir>5__2;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <currentDir>5__3;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastHit[] <hits>5__4;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__5;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xAFCE18", Offset = "0xAFCE18", VA = "0xAFCE18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xAFCE88", Offset = "0xAFCE88", VA = "0xAFCE88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xAF9A14", Offset = "0xAF9A14", VA = "0xAF9A14")]
		[DebuggerHidden]
		public <ChargeAttack>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xAFBC94", Offset = "0xAFBC94", VA = "0xAFBC94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xAFBC98", Offset = "0xAFBC98", VA = "0xAFBC98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xAFCE20", Offset = "0xAFCE20", VA = "0xAFCE20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CBA8", Offset = "0x64CBA8")]
	private sealed class <MeleeAttack>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x83E8CC", Offset = "0x83E8CC", VA = "0x83E8CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x83E93C", Offset = "0x83E93C", VA = "0x83E93C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x83E5DC", Offset = "0x83E5DC", VA = "0x83E5DC")]
		[DebuggerHidden]
		public <MeleeAttack>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x83E608", Offset = "0x83E608", VA = "0x83E608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x83E60C", Offset = "0x83E60C", VA = "0x83E60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x83E8D4", Offset = "0x83E8D4", VA = "0x83E8D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CBB8", Offset = "0x64CBB8")]
	private sealed class <ThrowAttack>d__107 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x17000178")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x841770", Offset = "0x841770", VA = "0x841770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E16")]
			[Address(RVA = "0x8417E0", Offset = "0x8417E0", VA = "0x8417E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x840EA4", Offset = "0x840EA4", VA = "0x840EA4")]
		[DebuggerHidden]
		public <ThrowAttack>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x840ED0", Offset = "0x840ED0", VA = "0x840ED0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x840ED4", Offset = "0x840ED4", VA = "0x840ED4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x841778", Offset = "0x841778", VA = "0x841778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CBC8", Offset = "0x64CBC8")]
	private sealed class <JumpAttack>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <start>5__2;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <pct>5__3;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <position>5__4;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0xAFDAE0", Offset = "0xAFDAE0", VA = "0xAFDAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0xAFDB50", Offset = "0xAFDB50", VA = "0xAFDB50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xAF9B9C", Offset = "0xAF9B9C", VA = "0xAF9B9C")]
		[DebuggerHidden]
		public <JumpAttack>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xAFD36C", Offset = "0xAFD36C", VA = "0xAFD36C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xAFD370", Offset = "0xAFD370", VA = "0xAFD370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xAFDAE8", Offset = "0xAFDAE8", VA = "0xAFDAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CBD8", Offset = "0x64CBD8")]
	private sealed class <SpearDiveAttack>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <position>5__2;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <start>5__3;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <pct>5__4;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <thrown>5__5;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x840654", Offset = "0x840654", VA = "0x840654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x8406C4", Offset = "0x8406C4", VA = "0x8406C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x83FD48", Offset = "0x83FD48", VA = "0x83FD48")]
		[DebuggerHidden]
		public <SpearDiveAttack>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x83FD74", Offset = "0x83FD74", VA = "0x83FD74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x83FD78", Offset = "0x83FD78", VA = "0x83FD78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x84065C", Offset = "0x84065C", VA = "0x84065C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CBE8", Offset = "0x64CBE8")]
	private sealed class <VolleyAttack>d__110 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x841A84", Offset = "0x841A84", VA = "0x841A84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x841AF4", Offset = "0x841AF4", VA = "0x841AF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x8417E8", Offset = "0x8417E8", VA = "0x8417E8")]
		[DebuggerHidden]
		public <VolleyAttack>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x841814", Offset = "0x841814", VA = "0x841814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x841818", Offset = "0x841818", VA = "0x841818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x841A8C", Offset = "0x841A8C", VA = "0x841A8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CBF8", Offset = "0x64CBF8")]
	private sealed class <SpreadThrowAttack>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x840E2C", Offset = "0x840E2C", VA = "0x840E2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x840E9C", Offset = "0x840E9C", VA = "0x840E9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x8406CC", Offset = "0x8406CC", VA = "0x8406CC")]
		[DebuggerHidden]
		public <SpreadThrowAttack>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x8406F8", Offset = "0x8406F8", VA = "0x8406F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x8406FC", Offset = "0x8406FC", VA = "0x8406FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x840E34", Offset = "0x840E34", VA = "0x840E34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC08", Offset = "0x64CC08")]
	private sealed class <HitReactCoro>d__114 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float flightTime;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <trigger>5__2;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xAFD2F4", Offset = "0xAFD2F4", VA = "0xAFD2F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0xAFD364", Offset = "0xAFD364", VA = "0xAFD364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xAFA0CC", Offset = "0xAFA0CC", VA = "0xAFA0CC")]
		[DebuggerHidden]
		public <HitReactCoro>d__114(int <>1__state)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xAFD02C", Offset = "0xAFD02C", VA = "0xAFD02C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xAFD030", Offset = "0xAFD030", VA = "0xAFD030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xAFD2FC", Offset = "0xAFD2FC", VA = "0xAFD2FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC18", Offset = "0x64CC18")]
	private sealed class <DieCoro>d__121 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xAFCFB4", Offset = "0xAFCFB4", VA = "0xAFCFB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xAFD024", Offset = "0xAFD024", VA = "0xAFD024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xAFA79C", Offset = "0xAFA79C", VA = "0xAFA79C")]
		[DebuggerHidden]
		public <DieCoro>d__121(int <>1__state)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xAFCE90", Offset = "0xAFCE90", VA = "0xAFCE90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xAFCE94", Offset = "0xAFCE94", VA = "0xAFCE94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xAFCFBC", Offset = "0xAFCFBC", VA = "0xAFCFBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC28", Offset = "0x64CC28")]
	private sealed class <PopHelmet>d__123 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeGoliath <>4__this;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <pct>5__3;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startRotX>5__4;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <startRotY>5__5;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startRotZ>5__6;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x83F5D8", Offset = "0x83F5D8", VA = "0x83F5D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x83F648", Offset = "0x83F648", VA = "0x83F648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x83E944", Offset = "0x83E944", VA = "0x83E944")]
		[DebuggerHidden]
		public <PopHelmet>d__123(int <>1__state)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x83E970", Offset = "0x83E970", VA = "0x83E970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x83E974", Offset = "0x83E974", VA = "0x83E974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x83F5E0", Offset = "0x83F5E0", VA = "0x83F5E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650A90", Offset = "0x650A90")]
	[SerializeField]
	protected GameObject model;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Hitbox bodyAimAssistHitbox;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Hitbox foreheadWeakspot;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected GameObject sword;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject helmet;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Hitbox shieldHitbox;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650B2C", Offset = "0x650B2C")]
	[SerializeField]
	protected Renderer[] shieldPieces;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected int aimAssistLayer;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	protected int defaultLayer;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650B98", Offset = "0x650B98")]
	[SerializeField]
	protected Transform spearOrigin;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected Renderer spearModel;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected Rigidbody spearPrefab;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	protected float throwPower;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	protected float headAimOffset;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650C24", Offset = "0x650C24")]
	[SerializeField]
	protected float spearGrabTime;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650C64", Offset = "0x650C64")]
	[SerializeField]
	protected float throwNormalizedTime;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected float[] phaseSpearCooldown;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650CB4", Offset = "0x650CB4")]
	[SerializeField]
	protected ParticleSystem impactFX;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected LayerMask defaultDamageMask;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	protected float diveDamageRadius;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650D20", Offset = "0x650D20")]
	[SerializeField]
	protected float airbornStart;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650D60", Offset = "0x650D60")]
	[SerializeField]
	protected float airbornEnd;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected float flightTimeMul;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	protected float diveHeight;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected AnimationCurve diveHeightCurve;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	protected float[] phaseJumpCooldown;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected int numCircleSpears;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	protected float spearCircleRadius;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650E00", Offset = "0x650E00")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650E00", Offset = "0x650E00")]
	[SerializeField]
	protected float helmetPopStart;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650E64", Offset = "0x650E64")]
	[SerializeField]
	protected float helmetPopEnd;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	protected AnimationCurve helmetWobbleCurveX;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	protected AnimationCurve helmetWobbleCurveY;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected AnimationCurve helmetWobbleCurveZ;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	protected float[] phaseAnimSpeed;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	protected float[] phaseVolleyCooldown;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	protected LayerMask chargeHitMask;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[SerializeField]
	protected float chargeDamageRadius;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	protected float meleeRange;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[SerializeField]
	protected float meleeDamageRadius;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	protected SpearVolley volley;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	protected AnimationCurve projectileFlightTimeCurve;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650F54", Offset = "0x650F54")]
	[SerializeField]
	protected bool chargeInFinalPhase;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Animator anim;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private NavMeshPath walkPath;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform playAreaTransform;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Transform headsetTransform;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private VRTK_BodyPhysics playerBodyPhysics;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private VRTK_VelocityEstimator velocityEstimator;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private readonly int hitReactParam;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private readonly int chargingParam;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private readonly int chargeEndParam;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private readonly int meleeAttackParam;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private readonly int jumpParam;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private readonly int throwAttackParam;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private readonly int volleyAttackParam;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private readonly int walkParam;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private readonly int deadParam;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected List<Hitbox> bodyHitboxes;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Hitbox helmetHitbox;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private WaitUntil waitUntilIdle;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private IEnumerator currentAttack;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private IEnumerator mainCoro;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float lastVolleyTime;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float lastJumpTime;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float lastSpear;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float lastSpread;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool interrupted;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	private bool invincible;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private MeshRenderer helmetRend;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private MeshRenderer bodyRend;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool aggrod;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	private bool helmetGone;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	private bool dead;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
	private bool turnlock;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x650FA0", Offset = "0x650FA0")]
	public bool forcedAway;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DD")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x650FB0", Offset = "0x650FB0")]
	public bool isCharging;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DE")]
	private bool forceDive;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int phase;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int shieldHits;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float origSpeed;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private bool shouldWalk;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
	private bool activated;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Vector2 smoothDeltaPosition;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Vector2 velocity;

	[Token(Token = "0x4000242")]
	private const int MAX_LOOPS_PER_FRAME_FAILSAFE = 1000;

	[Token(Token = "0x17000032")]
	private float DistFromPlayer
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xAF7F18", Offset = "0xAF7F18", VA = "0xAF7F18")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000033")]
	private Vector3 PlayerRootPos
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0xAF7FF0", Offset = "0xAF7FF0", VA = "0xAF7FF0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000034")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xAF817C", Offset = "0xAF817C", VA = "0xAF817C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xAF8224", Offset = "0xAF8224", VA = "0xAF8224")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	private VRTK_BodyPhysics PlayerBodyPhysics
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xAF82CC", Offset = "0xAF82CC", VA = "0xAF82CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xAF83BC", Offset = "0xAF83BC", VA = "0xAF83BC", Slot = "4")]
	public override void Activate()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xAF8CAC", Offset = "0xAF8CAC", VA = "0xAF8CAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xAF901C", Offset = "0xAF901C", VA = "0xAF901C", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xAF9044", Offset = "0xAF9044", VA = "0xAF9044")]
	private void Update()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xAF952C", Offset = "0xAF952C", VA = "0xAF952C")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xAF8C38", Offset = "0xAF8C38", VA = "0xAF8C38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667C94", Offset = "0x667C94")]
	public IEnumerator MainCoro()
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xAF96CC", Offset = "0xAF96CC", VA = "0xAF96CC")]
	private Coroutine HandleMove(IEnumerator attackCoroutine)
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xAF96D8", Offset = "0xAF96D8", VA = "0xAF96D8")]
	public void InterruptCurrentMove()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xAF98F4", Offset = "0xAF98F4", VA = "0xAF98F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667CF8", Offset = "0x667CF8")]
	private IEnumerator RotateTowardsTarget([Optional] Vector3 playerOverride)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xAF99A0", Offset = "0xAF99A0", VA = "0xAF99A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667D5C", Offset = "0x667D5C")]
	private IEnumerator ChargeAttack()
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xAF9A40", Offset = "0xAF9A40", VA = "0xAF9A40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667DC0", Offset = "0x667DC0")]
	private IEnumerator MeleeAttack()
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xAF9AB4", Offset = "0xAF9AB4", VA = "0xAF9AB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667E24", Offset = "0x667E24")]
	private IEnumerator ThrowAttack()
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xAF9B28", Offset = "0xAF9B28", VA = "0xAF9B28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667E88", Offset = "0x667E88")]
	private IEnumerator JumpAttack()
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xAF9BC8", Offset = "0xAF9BC8", VA = "0xAF9BC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667EEC", Offset = "0x667EEC")]
	private IEnumerator SpearDiveAttack()
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xAF9C3C", Offset = "0xAF9C3C", VA = "0xAF9C3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667F50", Offset = "0x667F50")]
	private IEnumerator VolleyAttack()
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xAF9CB0", Offset = "0xAF9CB0", VA = "0xAF9CB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x667FB4", Offset = "0x667FB4")]
	private IEnumerator SpreadThrowAttack()
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xAF9D24", Offset = "0xAF9D24", VA = "0xAF9D24")]
	private void DealDamage(float damageRadius, LayerMask damageMask)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xAF9F90", Offset = "0xAF9F90", VA = "0xAF9F90")]
	private void Weapon_PrecogHit(object sender, Weapon.PrecogHitArgs e)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xAFA034", Offset = "0xAFA034", VA = "0xAFA034")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668018", Offset = "0x668018")]
	private IEnumerator HitReactCoro(float flightTime, Vector3 hitPos)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xAFA0F8", Offset = "0xAFA0F8", VA = "0xAFA0F8")]
	public void TakeShieldDamage()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xAFA1AC", Offset = "0xAFA1AC", VA = "0xAFA1AC")]
	public void BodyHitbox_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xAFA258", Offset = "0xAFA258", VA = "0xAFA258")]
	public void Shield_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xAFA304", Offset = "0xAFA304", VA = "0xAFA304")]
	public void ForeheadWeakspot_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xAFA5F8", Offset = "0xAFA5F8", VA = "0xAFA5F8")]
	public void HelmetHitbox_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xAFA328", Offset = "0xAFA328", VA = "0xAFA328")]
	private void Die()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xAFA728", Offset = "0xAFA728", VA = "0xAFA728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66807C", Offset = "0x66807C")]
	private IEnumerator DieCoro()
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xAFA7C8", Offset = "0xAFA7C8", VA = "0xAFA7C8")]
	private void SpawnSpear(Vector3 targetPos, Vector3 originPos)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xAFA6B4", Offset = "0xAFA6B4", VA = "0xAFA6B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6680E0", Offset = "0x6680E0")]
	private IEnumerator PopHelmet()
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xAFA19C", Offset = "0xAFA19C", VA = "0xAFA19C")]
	public void IncrementPhase()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xAFAAF0", Offset = "0xAFAAF0", VA = "0xAFAAF0")]
	private void ActivateHelmet()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xAF8A38", Offset = "0xAF8A38", VA = "0xAF8A38")]
	private void DeactivateHelmet()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xAFAD78", Offset = "0xAFAD78", VA = "0xAFAD78")]
	public void SetPlayerVelocityEstimator(VRTK_VelocityEstimator estimator)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xAFAD80", Offset = "0xAFAD80", VA = "0xAFAD80")]
	public ChallengeGoliath()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xAFAF60", Offset = "0xAFAF60", VA = "0xAFAF60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668144", Offset = "0x668144")]
	private bool <Activate>b__95_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xAFB088", Offset = "0xAFB088", VA = "0xAFB088")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668154", Offset = "0x668154")]
	private bool <RotateTowardsTarget>b__104_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xAFB130", Offset = "0xAFB130", VA = "0xAFB130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668164", Offset = "0x668164")]
	private bool <RotateTowardsTarget>b__104_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xAFB1D8", Offset = "0xAFB1D8", VA = "0xAFB1D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668174", Offset = "0x668174")]
	private bool <ChargeAttack>b__105_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xAFB280", Offset = "0xAFB280", VA = "0xAFB280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668184", Offset = "0x668184")]
	private bool <ChargeAttack>b__105_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xAFB384", Offset = "0xAFB384", VA = "0xAFB384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668194", Offset = "0x668194")]
	private bool <MeleeAttack>b__106_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xAFB44C", Offset = "0xAFB44C", VA = "0xAFB44C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681A4", Offset = "0x6681A4")]
	private bool <MeleeAttack>b__106_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xAFB4EC", Offset = "0xAFB4EC", VA = "0xAFB4EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681B4", Offset = "0x6681B4")]
	private bool <ThrowAttack>b__107_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xAFB604", Offset = "0xAFB604", VA = "0xAFB604")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681C4", Offset = "0x6681C4")]
	private bool <ThrowAttack>b__107_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xAFB71C", Offset = "0xAFB71C", VA = "0xAFB71C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681D4", Offset = "0x6681D4")]
	private bool <JumpAttack>b__108_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xAFB82C", Offset = "0xAFB82C", VA = "0xAFB82C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681E4", Offset = "0x6681E4")]
	private bool <SpearDiveAttack>b__109_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xAFB92C", Offset = "0xAFB92C", VA = "0xAFB92C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681F4", Offset = "0x6681F4")]
	private bool <SpreadThrowAttack>b__111_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xAFB9F4", Offset = "0xAFB9F4", VA = "0xAFB9F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668204", Offset = "0x668204")]
	private bool <SpreadThrowAttack>b__111_1()
	{
		return default(bool);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xAFBA90", Offset = "0xAFBA90", VA = "0xAFBA90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668214", Offset = "0x668214")]
	private bool <DieCoro>b__121_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xAFBB94", Offset = "0xAFBB94", VA = "0xAFBB94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668224", Offset = "0x668224")]
	private bool <PopHelmet>b__123_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x200004B")]
public class ChallengeLion : Actor
{
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC38", Offset = "0x64CC38")]
	private sealed class <MainCoro>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeLion <>4__this;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0x845104", Offset = "0x845104", VA = "0x845104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0x845174", Offset = "0x845174", VA = "0x845174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x842AB0", Offset = "0x842AB0", VA = "0x842AB0")]
		[DebuggerHidden]
		public <MainCoro>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x844F48", Offset = "0x844F48", VA = "0x844F48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x844F4C", Offset = "0x844F4C", VA = "0x844F4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x84510C", Offset = "0x84510C", VA = "0x84510C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC48", Offset = "0x64CC48")]
	private sealed class <RotateTowards>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeLion <>4__this;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 targetPos;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <targetDir>5__2;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x845AE0", Offset = "0x845AE0", VA = "0x845AE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x845B50", Offset = "0x845B50", VA = "0x845B50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x842DB0", Offset = "0x842DB0", VA = "0x842DB0")]
		[DebuggerHidden]
		public <RotateTowards>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x8454C4", Offset = "0x8454C4", VA = "0x8454C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x8454C8", Offset = "0x8454C8", VA = "0x8454C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x845AE8", Offset = "0x845AE8", VA = "0x845AE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC58", Offset = "0x64CC58")]
	private sealed class <JumpAttackCoro>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeLion <>4__this;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <direction>5__2;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <destination>5__3;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <dmgDone>5__4;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x844ED0", Offset = "0x844ED0", VA = "0x844ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x844F40", Offset = "0x844F40", VA = "0x844F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x842E50", Offset = "0x842E50", VA = "0x842E50")]
		[DebuggerHidden]
		public <JumpAttackCoro>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x8445E0", Offset = "0x8445E0", VA = "0x8445E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x8445E4", Offset = "0x8445E4", VA = "0x8445E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x844ED8", Offset = "0x844ED8", VA = "0x844ED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC68", Offset = "0x64CC68")]
	private sealed class <MeleeAttack>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeLion <>4__this;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x84544C", Offset = "0x84544C", VA = "0x84544C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x8454BC", Offset = "0x8454BC", VA = "0x8454BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x842EF0", Offset = "0x842EF0", VA = "0x842EF0")]
		[DebuggerHidden]
		public <MeleeAttack>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x84517C", Offset = "0x84517C", VA = "0x84517C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x845180", Offset = "0x845180", VA = "0x845180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x845454", Offset = "0x845454", VA = "0x845454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC78", Offset = "0x64CC78")]
	private sealed class <DamageCoro>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeLion <>4__this;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0x8442B4", Offset = "0x8442B4", VA = "0x8442B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x844324", Offset = "0x844324", VA = "0x844324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x8433D4", Offset = "0x8433D4", VA = "0x8433D4")]
		[DebuggerHidden]
		public <DamageCoro>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x844014", Offset = "0x844014", VA = "0x844014", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x844018", Offset = "0x844018", VA = "0x844018", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x8442BC", Offset = "0x8442BC", VA = "0x8442BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC88", Offset = "0x64CC88")]
	private sealed class <Die>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeLion <>4__this;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0x844568", Offset = "0x844568", VA = "0x844568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x8445D8", Offset = "0x8445D8", VA = "0x8445D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x843474", Offset = "0x843474", VA = "0x843474")]
		[DebuggerHidden]
		public <Die>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x84432C", Offset = "0x84432C", VA = "0x84432C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x844330", Offset = "0x844330", VA = "0x844330", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x844570", Offset = "0x844570", VA = "0x844570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650FC0", Offset = "0x650FC0")]
	[SerializeField]
	protected Transform sightOrigin;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected VFXColorLerp angerFX;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65101C", Offset = "0x65101C")]
	[SerializeField]
	protected int maxHealth;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651068", Offset = "0x651068")]
	[SerializeField]
	protected float roarNormalizedTime;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected LayerMask damageMask;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6510B8", Offset = "0x6510B8")]
	[SerializeField]
	protected float meleeRange;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected float meleeDmgRadius;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651114", Offset = "0x651114")]
	[SerializeField]
	protected float meleeDmgTime;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651154", Offset = "0x651154")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651154", Offset = "0x651154")]
	[SerializeField]
	protected float airbornStart;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6511B8", Offset = "0x6511B8")]
	[SerializeField]
	protected float airbornEnd;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6511F8", Offset = "0x6511F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6511F8", Offset = "0x6511F8")]
	[SerializeField]
	protected float upAirbornStart;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65125C", Offset = "0x65125C")]
	[SerializeField]
	protected float upAirbornEnd;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65129C", Offset = "0x65129C")]
	[SerializeField]
	protected float jumpDamageRadius;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	protected float jumpAttackRange;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6512F8", Offset = "0x6512F8")]
	[SerializeField]
	protected float attackAirbornStart;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651338", Offset = "0x651338")]
	[SerializeField]
	protected float attackAirbornEnd;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651378", Offset = "0x651378")]
	[SerializeField]
	protected float jumpDmgTime;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	protected float pounceLandDist;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform playAreaTransform;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform headsetTransform;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaitUntil waitUntilIdle;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IEnumerator currentAttack;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IEnumerator mainCoro;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool interrupted;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool invulnerable;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool isJumping;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	private bool shouldJumpAttack;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator anim;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly int hitReactParam;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private readonly int jumpParam;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly int jumpUpParam;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private readonly int pounceParam;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly int meleeParam;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private readonly int speedParam;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly int deadParam;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool turnlock;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float turnStart;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int health;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector2 smoothDeltaPosition;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector2 velocity;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool jumpAttackHit;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool dead;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	private bool initialized;

	[Token(Token = "0x400026F")]
	private const int MAX_LOOPS_PER_FRAME_FAILSAFE = 1000;

	[Token(Token = "0x17000037")]
	private float DistFromPlayer
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x841AFC", Offset = "0x841AFC", VA = "0x841AFC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000038")]
	private Vector3 PlayerRootPos
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x841BD4", Offset = "0x841BD4", VA = "0x841BD4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000039")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x841D60", Offset = "0x841D60", VA = "0x841D60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x841E08", Offset = "0x841E08", VA = "0x841E08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x841EB0", Offset = "0x841EB0", VA = "0x841EB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x841F08", Offset = "0x841F08", VA = "0x841F08", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x842118", Offset = "0x842118", VA = "0x842118", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x841F9C", Offset = "0x841F9C", VA = "0x841F9C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x8422D4", Offset = "0x8422D4", VA = "0x8422D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x8428F4", Offset = "0x8428F4", VA = "0x8428F4")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x842260", Offset = "0x842260", VA = "0x842260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668234", Offset = "0x668234")]
	public IEnumerator MainCoro()
	{
		return null;
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x842ADC", Offset = "0x842ADC", VA = "0x842ADC")]
	private Coroutine HandleMove(IEnumerator attackCoroutine)
	{
		return null;
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x842AE8", Offset = "0x842AE8", VA = "0x842AE8")]
	public void InterruptCurrentMove()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x842D04", Offset = "0x842D04", VA = "0x842D04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668298", Offset = "0x668298")]
	private IEnumerator RotateTowards(Vector3 targetPos)
	{
		return null;
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x842DDC", Offset = "0x842DDC", VA = "0x842DDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6682FC", Offset = "0x6682FC")]
	private IEnumerator JumpAttackCoro()
	{
		return null;
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x842E7C", Offset = "0x842E7C", VA = "0x842E7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668360", Offset = "0x668360")]
	private IEnumerator MeleeAttack()
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x842F1C", Offset = "0x842F1C", VA = "0x842F1C")]
	private void DealDamage(float damageRadius, LayerMask damageMask, Vector3 origin, bool jumpAttack)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x843334", Offset = "0x843334", VA = "0x843334")]
	public void Actor_Damaged(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x843360", Offset = "0x843360", VA = "0x843360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6683C4", Offset = "0x6683C4")]
	private IEnumerator DamageCoro()
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x843400", Offset = "0x843400", VA = "0x843400")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668428", Offset = "0x668428")]
	private IEnumerator Die()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x8434A0", Offset = "0x8434A0", VA = "0x8434A0")]
	private bool CanSeePlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x84364C", Offset = "0x84364C", VA = "0x84364C")]
	private void StartInvulnerablitiy()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x8421A4", Offset = "0x8421A4", VA = "0x8421A4")]
	private void EndInvulnerability()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x84370C", Offset = "0x84370C", VA = "0x84370C")]
	public ChallengeLion()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x843890", Offset = "0x843890", VA = "0x843890")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66848C", Offset = "0x66848C")]
	private bool <Initialize>b__55_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x843964", Offset = "0x843964", VA = "0x843964")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66849C", Offset = "0x66849C")]
	private bool <RotateTowards>b__62_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x843A20", Offset = "0x843A20", VA = "0x843A20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684AC", Offset = "0x6684AC")]
	private bool <RotateTowards>b__62_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x843ADC", Offset = "0x843ADC", VA = "0x843ADC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684BC", Offset = "0x6684BC")]
	private bool <RotateTowards>b__62_2()
	{
		return default(bool);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x843B98", Offset = "0x843B98", VA = "0x843B98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684CC", Offset = "0x6684CC")]
	private bool <RotateTowards>b__62_3()
	{
		return default(bool);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x843C54", Offset = "0x843C54", VA = "0x843C54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684DC", Offset = "0x6684DC")]
	private bool <JumpAttackCoro>b__63_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x843D0C", Offset = "0x843D0C", VA = "0x843D0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684EC", Offset = "0x6684EC")]
	private bool <MeleeAttack>b__64_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x843E18", Offset = "0x843E18", VA = "0x843E18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684FC", Offset = "0x6684FC")]
	private bool <DamageCoro>b__67_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x843EC0", Offset = "0x843EC0", VA = "0x843EC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66850C", Offset = "0x66850C")]
	private bool <DamageCoro>b__67_1()
	{
		return default(bool);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x843F6C", Offset = "0x843F6C", VA = "0x843F6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66851C", Offset = "0x66851C")]
	private bool <Die>b__68_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x200004C")]
public class ChallengeWaveLevelObjective : LevelObjective
{
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CC98", Offset = "0x64CC98")]
	private sealed class <Start>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeWaveLevelObjective <>4__this;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ChallengeWaveSpawner <waveSpawner>5__2;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x846270", Offset = "0x846270", VA = "0x846270", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x8462E0", Offset = "0x8462E0", VA = "0x8462E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x845D34", Offset = "0x845D34", VA = "0x845D34")]
		[DebuggerHidden]
		public <Start>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x845E48", Offset = "0x845E48", VA = "0x845E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x845E4C", Offset = "0x845E4C", VA = "0x845E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x846278", Offset = "0x846278", VA = "0x846278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6513C8", Offset = "0x6513C8")]
	public int numOfSpawns;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spawnRadius;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int numberOfWaves;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxEnemiesAlive;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float delayBeforeWaves;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float secondsBetweenWaves;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 secondsBetweenSpawns;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ChallengeWaveSpawner.WaveGrowth waveGrowth;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x651400", Offset = "0x651400")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651400", Offset = "0x651400")]
	public GameObject enemyPrefab;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool gameStart;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Sheep> sheepList;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ChallengeWaveLevelObjective instance;

	[Token(Token = "0x1700003B")]
	public static ChallengeWaveLevelObjective Instance
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x845B58", Offset = "0x845B58", VA = "0x845B58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x845BA8", Offset = "0x845BA8", VA = "0x845BA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x845CC0", Offset = "0x845CC0", VA = "0x845CC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66852C", Offset = "0x66852C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x845D60", Offset = "0x845D60", VA = "0x845D60")]
	public ChallengeWaveLevelObjective()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x845E34", Offset = "0x845E34", VA = "0x845E34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668590", Offset = "0x668590")]
	private void <Start>b__15_0(int i)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x845E40", Offset = "0x845E40", VA = "0x845E40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6685A0", Offset = "0x6685A0")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x200004D")]
public class ChallengeWaveSpawner : MonoBehaviour
{
	[Token(Token = "0x200035D")]
	public enum WaveGrowth
	{
		[Token(Token = "0x4001B3A")]
		CurrentWave,
		[Token(Token = "0x4001B3B")]
		Exponential,
		[Token(Token = "0x4001B3C")]
		ZombLike,
		[Token(Token = "0x4001B3D")]
		ZombLikeHalved
	}

	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CCA8", Offset = "0x64CCA8")]
	private sealed class <StartWave>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeWaveSpawner <>4__this;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <waveDead>5__2;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <numSpawnedInWave>5__3;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0x846F0C", Offset = "0x846F0C", VA = "0x846F0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E70")]
			[Address(RVA = "0x846F7C", Offset = "0x846F7C", VA = "0x846F7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x8465A8", Offset = "0x8465A8", VA = "0x8465A8")]
		[DebuggerHidden]
		public <StartWave>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x846920", Offset = "0x846920", VA = "0x846920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x846924", Offset = "0x846924", VA = "0x846924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x846F14", Offset = "0x846F14", VA = "0x846F14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x651450", Offset = "0x651450")]
	public int numOfSpawns;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radius;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int enemiesInWave;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int maxEnemiesAlive;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int currentWave;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x651464", Offset = "0x651464")]
	public bool debug;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x651478", Offset = "0x651478")]
	public List<Vector3> spawnPositions;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine startWaveCoro;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int randomNumIndex;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject enemyPrefab;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeBetweenWaves;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 timeBetweenSpawns;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public WaveGrowth waveGrowth;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<int> onWaveEnd;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject enemies;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject lions;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject bears;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int currentEnemies;

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x846108", Offset = "0x846108", VA = "0x846108")]
	public void Initialize(GameObject _waveEnemy, int _maxUnitsAlive, float _timeBetweenWaves, Vector2 _timeBetweenSpawns, WaveGrowth _waveGrowth, Action<int> _onWaveEnd, int _numSpawns, float _spawnRadius)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x8464C4", Offset = "0x8464C4", VA = "0x8464C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x846530", Offset = "0x846530", VA = "0x846530")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x846534", Offset = "0x846534", VA = "0x846534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6685D8", Offset = "0x6685D8")]
	public IEnumerator StartWave()
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x846224", Offset = "0x846224", VA = "0x846224")]
	public void StartWaveCoro()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x8462E8", Offset = "0x8462E8", VA = "0x8462E8")]
	public void GenerateSpawns()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x8465D4", Offset = "0x8465D4", VA = "0x8465D4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x8466B8", Offset = "0x8466B8", VA = "0x8466B8")]
	public void DestroySpawns()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x846718", Offset = "0x846718", VA = "0x846718")]
	private int CalculateNumberOfUnits(int _currentWave)
	{
		return default(int);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x846848", Offset = "0x846848", VA = "0x846848")]
	public ChallengeWaveSpawner()
	{
	}
}
[Token(Token = "0x200004E")]
public class SetEnemiesChallengeLevelObjective : LevelObjective
{
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CCB8", Offset = "0x64CCB8")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetEnemiesChallengeLevelObjective <>4__this;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x15A09C0", Offset = "0x15A09C0", VA = "0x15A09C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x15A0A30", Offset = "0x15A0A30", VA = "0x15A0A30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x15A075C", Offset = "0x15A075C", VA = "0x15A075C")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x15A085C", Offset = "0x15A085C", VA = "0x15A085C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x15A0860", Offset = "0x15A0860", VA = "0x15A0860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x15A09C8", Offset = "0x15A09C8", VA = "0x15A09C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651488", Offset = "0x651488")]
	[SerializeField]
	protected float delayBeforeStart;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected float delayAtEnd;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6514E4", Offset = "0x6514E4")]
	[SerializeField]
	protected Transform enemyParent;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool gameStart;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x15A06E8", Offset = "0x15A06E8", VA = "0x15A06E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66863C", Offset = "0x66863C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x15A0788", Offset = "0x15A0788", VA = "0x15A0788")]
	private void Update()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x15A07E8", Offset = "0x15A07E8", VA = "0x15A07E8")]
	public SetEnemiesChallengeLevelObjective()
	{
	}
}
[Token(Token = "0x200004F")]
public class CinematicObjective : LevelObjective
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected float minTime;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x651540", Offset = "0x651540")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected VideoPlayer videoPlayer;

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x847C18", Offset = "0x847C18", VA = "0x847C18")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x847CF0", Offset = "0x847CF0", VA = "0x847CF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x847E24", Offset = "0x847E24", VA = "0x847E24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x847F58", Offset = "0x847F58", VA = "0x847F58")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x848090", Offset = "0x848090", VA = "0x848090")]
	public void PlayCinematic(VideoClip videoClip)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x848234", Offset = "0x848234", VA = "0x848234")]
	private void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x8482D4", Offset = "0x8482D4", VA = "0x8482D4")]
	private void VideoPlayer_loopPointReached(VideoPlayer source)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x8482E0", Offset = "0x8482E0", VA = "0x8482E0")]
	private void VideoPlayer_errorReceived(VideoPlayer source, string message)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x848368", Offset = "0x848368", VA = "0x848368")]
	public CinematicObjective()
	{
	}
}
[Token(Token = "0x2000050")]
public class BattlefieldFloor : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CCC8", Offset = "0x64CCC8")]
	private struct <LevelObjective_PhaseChanged_Async>d__9 : IAsyncStateMachine
	{
		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhaseChangedEventArgs e;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BattlefieldFloor <>4__this;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator <anim>5__2;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x6EF914", Offset = "0x6EF914", VA = "0x6EF914", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x6EF91C", Offset = "0x6EF91C", VA = "0x6EF91C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Animator[] animators;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected NavMeshSurface navMeshSurface;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int phaseChangedID;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool updateNavmesh;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xAE3E1C", Offset = "0xAE3E1C", VA = "0xAE3E1C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xAE3E74", Offset = "0xAE3E74", VA = "0xAE3E74")]
	private void Start()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xAE3EA4", Offset = "0xAE3EA4", VA = "0xAE3EA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xAE3F40", Offset = "0xAE3F40", VA = "0xAE3F40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xAE3FDC", Offset = "0xAE3FDC", VA = "0xAE3FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xAE4058", Offset = "0xAE4058", VA = "0xAE4058")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x6686A0", Offset = "0x6686A0")]
	private void LevelObjective_PhaseChanged_Async(object sender, PhaseChangedEventArgs e)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xAE411C", Offset = "0xAE411C", VA = "0xAE411C")]
	public BattlefieldFloor()
	{
	}
}
[Token(Token = "0x2000051")]
public class BattlefieldPhaseChange : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CCD8", Offset = "0x64CCD8")]
	private struct <LevelObjective_PhaseChanged_Async>d__16 : IAsyncStateMachine
	{
		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhaseChangedEventArgs e;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BattlefieldPhaseChange <>4__this;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayableDirector <director>5__2;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x6EF93C", Offset = "0x6EF93C", VA = "0x6EF93C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x6EF944", Offset = "0x6EF944", VA = "0x6EF944", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CCE8", Offset = "0x64CCE8")]
	private struct <FlashSkyboxAsync>d__17 : IAsyncStateMachine
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BattlefieldPhaseChange <>4__this;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material <skybox>5__2;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <pct>5__3;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x6EF928", Offset = "0x6EF928", VA = "0x6EF928", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x6EF930", Offset = "0x6EF930", VA = "0x6EF930", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject boulderDestructionFx;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected PlayableDirector[] directors;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected float navmeshUpdateDelay;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6515D8", Offset = "0x6515D8")]
	[SerializeField]
	protected Color flashColor;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected float flashFadeTime;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected NavMeshSurface navMeshSurface;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color startingColor;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool updateNavmesh;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly int tintID;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly int phaseChangedID;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xAE450C", Offset = "0xAE450C", VA = "0xAE450C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xAE4568", Offset = "0xAE4568", VA = "0xAE4568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xAE4680", Offset = "0xAE4680", VA = "0xAE4680")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xAE4778", Offset = "0xAE4778", VA = "0xAE4778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xAE47A8", Offset = "0xAE47A8", VA = "0xAE47A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xAE4824", Offset = "0xAE4824", VA = "0xAE4824")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xAE4A04", Offset = "0xAE4A04", VA = "0xAE4A04")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x668704", Offset = "0x668704")]
	private void LevelObjective_PhaseChanged_Async(object sender, PhaseChangedEventArgs e)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xAE4948", Offset = "0xAE4948", VA = "0xAE4948")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x668768", Offset = "0x668768")]
	private void FlashSkyboxAsync()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xAE4AC8", Offset = "0xAE4AC8", VA = "0xAE4AC8")]
	public BattlefieldPhaseChange()
	{
	}
}
[Token(Token = "0x2000052")]
public class CliffEncampment : MonoBehaviour
{
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CCF8", Offset = "0x64CCF8")]
	private sealed class <CollapseCoro>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CliffEncampment <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x84E440", Offset = "0x84E440", VA = "0x84E440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x84E4B0", Offset = "0x84E4B0", VA = "0x84E4B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x84E16C", Offset = "0x84E16C", VA = "0x84E16C")]
		[DebuggerHidden]
		public <CollapseCoro>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x84E2A0", Offset = "0x84E2A0", VA = "0x84E2A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x84E2A4", Offset = "0x84E2A4", VA = "0x84E2A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x84E448", Offset = "0x84E448", VA = "0x84E448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651638", Offset = "0x651638")]
	public Soldier[] soldiers;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hitbox triggerHitbox;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DestructibleBoulder spawningBoulder;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651670", Offset = "0x651670")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651670", Offset = "0x651670")]
	[SerializeField]
	protected float impactNormalizedTime;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Goliath goliath;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool destroyed;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly int collapseParam;

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x84DEE0", Offset = "0x84DEE0", VA = "0x84DEE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x84DF38", Offset = "0x84DF38", VA = "0x84DF38")]
	public void Activate(Goliath goliathRef)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x84E054", Offset = "0x84E054", VA = "0x84E054")]
	private void Trigger_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x84E0F8", Offset = "0x84E0F8", VA = "0x84E0F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6687CC", Offset = "0x6687CC")]
	private IEnumerator CollapseCoro()
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x84E198", Offset = "0x84E198", VA = "0x84E198")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x84E230", Offset = "0x84E230", VA = "0x84E230")]
	public bool IsDestroyed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x84E238", Offset = "0x84E238", VA = "0x84E238")]
	public CliffEncampment()
	{
	}
}
[Token(Token = "0x2000053")]
public class DestructibleBoulder : Actor
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject undestroyedModel;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject destroyedModel;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fxRoot;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x8581E4", Offset = "0x8581E4", VA = "0x8581E4", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x8582B0", Offset = "0x8582B0", VA = "0x8582B0", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x85833C", Offset = "0x85833C", VA = "0x85833C")]
	public void OnDamaged(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x85850C", Offset = "0x85850C", VA = "0x85850C")]
	public void Stun()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x858574", Offset = "0x858574", VA = "0x858574")]
	public DestructibleBoulder()
	{
	}
}
[Token(Token = "0x2000054")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648174", Offset = "0x648174")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648174", Offset = "0x648174")]
public class Goliath : Actor
{
	[Token(Token = "0x2000364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD08", Offset = "0x64CD08")]
	private sealed class <MainCoro>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Goliath <>4__this;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x9AB110", Offset = "0x9AB110", VA = "0x9AB110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x9AB180", Offset = "0x9AB180", VA = "0x9AB180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x9A5B08", Offset = "0x9A5B08", VA = "0x9A5B08")]
		[DebuggerHidden]
		public <MainCoro>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x9A9F1C", Offset = "0x9A9F1C", VA = "0x9A9F1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x9A9F20", Offset = "0x9A9F20", VA = "0x9A9F20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x9AB118", Offset = "0x9AB118", VA = "0x9AB118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000365")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD18", Offset = "0x64CD18")]
	private sealed class <RotateTowardsTarget>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 playerOverride;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Goliath <>4__this;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <targetDir>5__2;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <angle>5__3;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0x9AC67C", Offset = "0x9AC67C", VA = "0x9AC67C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x9AC6EC", Offset = "0x9AC6EC", VA = "0x9AC6EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x9A5E08", Offset = "0x9A5E08", VA = "0x9A5E08")]
		[DebuggerHidden]
		public <RotateTowardsTarget>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x9AC02C", Offset = "0x9AC02C", VA = "0x9AC02C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x9AC030", Offset = "0x9AC030", VA = "0x9AC030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x9AC684", Offset = "0x9AC684", VA = "0x9AC684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000366")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD28", Offset = "0x64CD28")]
	private sealed class <ChargeAttack>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Goliath <>4__this;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startDir>5__2;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <currentDir>5__3;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastHit[] <hits>5__4;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__5;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x9A9378", Offset = "0x9A9378", VA = "0x9A9378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x9A93E8", Offset = "0x9A93E8", VA = "0x9A93E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x9A5EA8", Offset = "0x9A5EA8", VA = "0x9A5EA8")]
		[DebuggerHidden]
		public <ChargeAttack>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x9A81F4", Offset = "0x9A81F4", VA = "0x9A81F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x9A81F8", Offset = "0x9A81F8", VA = "0x9A81F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x9A9380", Offset = "0x9A9380", VA = "0x9A9380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD38", Offset = "0x64CD38")]
	private sealed class <MeleeAttack>d__107 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Goliath <>4__this;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x9AB440", Offset = "0x9AB440", VA = "0x9AB440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x9AB4B0", Offset = "0x9AB4B0", VA = "0x9AB4B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x9A5F48", Offset = "0x9A5F48", VA = "0x9A5F48")]
		[DebuggerHidden]
		public <MeleeAttack>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x9AB188", Offset = "0x9AB188", VA = "0x9AB188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x9AB18C", Offset = "0x9AB18C", VA = "0x9AB18C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x9AB448", Offset = "0x9AB448", VA = "0x9AB448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD48", Offset = "0x64CD48")]
	private sealed class <ThrowAttack>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Goliath <>4__this;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x9AE0C8", Offset = "0x9AE0C8", VA = "0x9AE0C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x9AE138", Offset = "0x9AE138", VA = "0x9AE138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x9A5FE8", Offset = "0x9A5FE8", VA = "0x9A5FE8")]
		[DebuggerHidden]
		public <ThrowAttack>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x9AD7B0", Offset = "0x9AD7B0", VA = "0x9AD7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x9AD7B4", Offset = "0x9AD7B4", VA = "0x9AD7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x9AE0D0", Offset = "0x9AE0D0", VA = "0x9AE0D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD58", Offset = "0x64CD58")]
	private sealed class <JumpAttack>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Goliath <>4__this;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <start>5__2;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <pct>5__3;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <position>5__4;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x9A9EA4", Offset = "0x9A9EA4", VA = "0x9A9EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x9A9F14", Offset = "0x9A9F14", VA = "0x9A9F14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x9A6088", Offset = "0x9A6088", VA = "0x9A6088")]
		[DebuggerHidden]
		public <JumpAttack>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x9A9730", Offset = "0x9A9730", VA = "0x9A9730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x9A9734", Offset = "0x9A9734", VA = "0x9A9734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x9A9EAC", Offset = "0x9A9EAC", VA = "0x9A9EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD68", Offset = "0x64CD68")]
	private sealed class <SpearDiveAttack>d__110 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Goliath <>4__this;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <position>5__2;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <start>5__3;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <pct>5__4;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <thrown>5__5;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x9ACFB0", Offset = "0x9ACFB0", VA = "0x9ACFB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x9AD020", Offset = "0x9AD020", VA = "0x9AD020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x9A6128", Offset = "0x9A6128", VA = "0x9A6128")]
		[DebuggerHidden]
		public <SpearDiveAttack>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x9AC6F4", Offset = "0x9AC6F4", VA = "0x9AC6F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x9AC6F8", Offset = "0x9AC6F8", VA = "0x9AC6F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x9ACFB8", Offset = "0x9ACFB8", VA = "0x9ACFB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD78", Offset = "0x64CD78")]
	private sealed class <VolleyAttack>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Goliath <>4__this;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x9AE3A8", Offset = "0x9AE3A8", VA = "0x9AE3A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x9AE418", Offset = "0x9AE418", VA = "0x9AE418", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x9A61C8", Offset = "0x9A61C8", VA = "0x9A61C8")]
		[DebuggerHidden]
		public <VolleyAttack>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x9AE140", Offset = "0x9AE140", VA = "0x9AE140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x9AE144", Offset = "0x9AE144", VA = "0x9AE144", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x9AE3B0", Offset = "0x9AE3B0", VA = "0x9AE3B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD88", Offset = "0x64CD88")]
	private sealed class <SpreadThrowAttack>d__112 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Goliath <>4__this;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x9AD738", Offset = "0x9AD738", VA = "0x9AD738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x9AD7A8", Offset = "0x9AD7A8", VA = "0x9AD7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x9A6268", Offset = "0x9A6268", VA = "0x9A6268")]
		[DebuggerHidden]
		public <SpreadThrowAttack>d__112(int <>1__state)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x9AD028", Offset = "0x9AD028", VA = "0x9AD028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x9AD02C", Offset = "0x9AD02C", VA = "0x9AD02C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x9AD740", Offset = "0x9AD740", VA = "0x9AD740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD98", Offset = "0x64CD98")]
	private sealed class <HitReactCoro>d__115 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float flightTime;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Goliath <>4__this;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <trigger>5__2;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x9A96B8", Offset = "0x9A96B8", VA = "0x9A96B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x9A9728", Offset = "0x9A9728", VA = "0x9A9728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x9A663C", Offset = "0x9A663C", VA = "0x9A663C")]
		[DebuggerHidden]
		public <HitReactCoro>d__115(int <>1__state)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x9A93F0", Offset = "0x9A93F0", VA = "0x9A93F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x9A93F4", Offset = "0x9A93F4", VA = "0x9A93F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x9A96C0", Offset = "0x9A96C0", VA = "0x9A96C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CDA8", Offset = "0x64CDA8")]
	private sealed class <PopHelmet>d__123 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Goliath <>4__this;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <pct>5__3;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startRotX>5__4;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <startRotY>5__5;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startRotZ>5__6;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x9ABFB4", Offset = "0x9ABFB4", VA = "0x9ABFB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x9AC024", Offset = "0x9AC024", VA = "0x9AC024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x9A700C", Offset = "0x9A700C", VA = "0x9A700C")]
		[DebuggerHidden]
		public <PopHelmet>d__123(int <>1__state)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x9AB4B8", Offset = "0x9AB4B8", VA = "0x9AB4B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x9AB4BC", Offset = "0x9AB4BC", VA = "0x9AB4BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x9ABFBC", Offset = "0x9ABFBC", VA = "0x9ABFBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6516D4", Offset = "0x6516D4")]
	[SerializeField]
	protected GameObject model;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Hitbox bodyAimAssistHitbox;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Hitbox foreheadWeakspot;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected GameObject sword;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject helmet;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Hitbox shieldHitbox;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651770", Offset = "0x651770")]
	[SerializeField]
	protected Renderer[] shieldPieces;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected int aimAssistLayer;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	protected int defaultLayer;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected GoliathLevelObjective levelObjective;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6517EC", Offset = "0x6517EC")]
	[SerializeField]
	protected Transform spearOrigin;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected Renderer spearModel;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	protected Rigidbody spearPrefab;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected float throwPower;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	protected float headAimOffset;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651878", Offset = "0x651878")]
	[SerializeField]
	protected float spearGrabTime;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6518B8", Offset = "0x6518B8")]
	[SerializeField]
	protected float throwNormalizedTime;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected float[] phaseSpearCooldown;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651908", Offset = "0x651908")]
	[SerializeField]
	protected ParticleSystem impactFX;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected LayerMask defaultDamageMask;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	protected float diveDamageRadius;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651974", Offset = "0x651974")]
	[SerializeField]
	protected float airbornStart;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6519B4", Offset = "0x6519B4")]
	[SerializeField]
	protected float airbornEnd;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected float flightTimeMul;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	protected float diveHeight;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	protected AnimationCurve diveHeightCurve;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected float[] phaseJumpCooldown;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	protected int numCircleSpears;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	protected float spearCircleRadius;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651A54", Offset = "0x651A54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651A54", Offset = "0x651A54")]
	[SerializeField]
	protected float helmetPopStart;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651AB8", Offset = "0x651AB8")]
	[SerializeField]
	protected float helmetPopEnd;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	protected AnimationCurve helmetWobbleCurveX;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected AnimationCurve helmetWobbleCurveY;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	protected AnimationCurve helmetWobbleCurveZ;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	protected float[] phaseAnimSpeed;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	protected float[] phaseVolleyCooldown;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	protected LayerMask chargeHitMask;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[SerializeField]
	protected float chargeDamageRadius;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	protected float meleeRange;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	protected float meleeDamageRadius;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	protected SpearVolley volley;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	protected AnimationCurve projectileFlightTimeCurve;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Animator anim;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private NavMeshAgent agent;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private NavMeshPath walkPath;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform playAreaTransform;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Transform headsetTransform;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private VRTK_BodyPhysics playerBodyPhysics;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private VRTK_VelocityEstimator velocityEstimator;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private readonly int hitReactParam;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private readonly int chargingParam;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private readonly int chargeEndParam;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private readonly int meleeAttackParam;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private readonly int jumpParam;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private readonly int throwAttackParam;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private readonly int volleyAttackParam;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private readonly int walkParam;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private readonly int deadParam;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected List<Hitbox> bodyHitboxes;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Hitbox helmetHitbox;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private WaitUntil waitUntilIdle;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private IEnumerator currentAttack;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private IEnumerator mainCoro;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Color originalColor;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float lastVolleyTime;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float lastJumpTime;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float lastSpear;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float lastSpread;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool interrupted;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	private bool invincible;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private MeshRenderer helmetRend;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private MeshRenderer bodyRend;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool aggrod;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	private bool helmetGone;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
	private bool dead;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EB")]
	private bool turnlock;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x651BA8", Offset = "0x651BA8")]
	public bool forcedAway;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x651BB8", Offset = "0x651BB8")]
	public bool isCharging;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EE")]
	private bool forceDive;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public int phase;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int shieldHits;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float origSpeed;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private bool shouldWalk;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector2 smoothDeltaPosition;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Vector2 velocity;

	[Token(Token = "0x4000303")]
	private const int MAX_LOOPS_PER_FRAME_FAILSAFE = 1000;

	[Token(Token = "0x1700003C")]
	private float DistFromPlayer
	{
		[Token(Token = "0x6000299")]
		[Address(RVA = "0x9A40E4", Offset = "0x9A40E4", VA = "0x9A40E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700003D")]
	private Vector3 PlayerRootPos
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0x9A41BC", Offset = "0x9A41BC", VA = "0x9A41BC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700003E")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x9A4348", Offset = "0x9A4348", VA = "0x9A4348")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x9A43F0", Offset = "0x9A43F0", VA = "0x9A43F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	private VRTK_BodyPhysics PlayerBodyPhysics
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x9A4498", Offset = "0x9A4498", VA = "0x9A4498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x9A4588", Offset = "0x9A4588", VA = "0x9A4588")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x9A4D9C", Offset = "0x9A4D9C", VA = "0x9A4D9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x9A515C", Offset = "0x9A515C", VA = "0x9A515C", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x9A521C", Offset = "0x9A521C", VA = "0x9A521C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x9A54BC", Offset = "0x9A54BC", VA = "0x9A54BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x9A5994", Offset = "0x9A5994", VA = "0x9A5994")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x9A51A8", Offset = "0x9A51A8", VA = "0x9A51A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668830", Offset = "0x668830")]
	public IEnumerator MainCoro()
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x9A5B34", Offset = "0x9A5B34", VA = "0x9A5B34")]
	private Coroutine HandleMove(IEnumerator attackCoroutine)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x9A5B40", Offset = "0x9A5B40", VA = "0x9A5B40")]
	public void InterruptCurrentMove()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x9A5D5C", Offset = "0x9A5D5C", VA = "0x9A5D5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668894", Offset = "0x668894")]
	private IEnumerator RotateTowardsTarget([Optional] Vector3 playerOverride)
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x9A5E34", Offset = "0x9A5E34", VA = "0x9A5E34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6688F8", Offset = "0x6688F8")]
	private IEnumerator ChargeAttack()
	{
		return null;
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x9A5ED4", Offset = "0x9A5ED4", VA = "0x9A5ED4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66895C", Offset = "0x66895C")]
	private IEnumerator MeleeAttack()
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x9A5F74", Offset = "0x9A5F74", VA = "0x9A5F74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6689C0", Offset = "0x6689C0")]
	private IEnumerator ThrowAttack()
	{
		return null;
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x9A6014", Offset = "0x9A6014", VA = "0x9A6014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668A24", Offset = "0x668A24")]
	private IEnumerator JumpAttack()
	{
		return null;
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x9A60B4", Offset = "0x9A60B4", VA = "0x9A60B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668A88", Offset = "0x668A88")]
	private IEnumerator SpearDiveAttack()
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x9A6154", Offset = "0x9A6154", VA = "0x9A6154")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668AEC", Offset = "0x668AEC")]
	private IEnumerator VolleyAttack()
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x9A61F4", Offset = "0x9A61F4", VA = "0x9A61F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668B50", Offset = "0x668B50")]
	private IEnumerator SpreadThrowAttack()
	{
		return null;
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x9A6294", Offset = "0x9A6294", VA = "0x9A6294")]
	private void DealDamage(float damageRadius, LayerMask damageMask)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x9A6500", Offset = "0x9A6500", VA = "0x9A6500")]
	private void Weapon_PrecogHit(object sender, Weapon.PrecogHitArgs e)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x9A65A4", Offset = "0x9A65A4", VA = "0x9A65A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668BB4", Offset = "0x668BB4")]
	private IEnumerator HitReactCoro(float flightTime, Vector3 hitPos)
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x9A6668", Offset = "0x9A6668", VA = "0x9A6668")]
	public void TakeShieldDamage()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x9A6758", Offset = "0x9A6758", VA = "0x9A6758")]
	public void BodyHitbox_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x9A6804", Offset = "0x9A6804", VA = "0x9A6804")]
	public void Shield_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x9A68B0", Offset = "0x9A68B0", VA = "0x9A68B0")]
	public void ForeheadWeakspot_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x9A6BAC", Offset = "0x9A6BAC", VA = "0x9A6BAC")]
	public void HelmetHitbox_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x9A68D4", Offset = "0x9A68D4", VA = "0x9A68D4")]
	private void Die()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x9A6CE4", Offset = "0x9A6CE4", VA = "0x9A6CE4")]
	private void SpawnSpear(Vector3 targetPos, Vector3 originPos)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x9A6C70", Offset = "0x9A6C70", VA = "0x9A6C70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668C18", Offset = "0x668C18")]
	private IEnumerator PopHelmet()
	{
		return null;
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x9A6714", Offset = "0x9A6714", VA = "0x9A6714")]
	public void IncrementPhase()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x9A7038", Offset = "0x9A7038", VA = "0x9A7038")]
	private void ActivateHelmet()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x9A4C5C", Offset = "0x9A4C5C", VA = "0x9A4C5C")]
	private void DeactivateHelmet()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x9A72B4", Offset = "0x9A72B4", VA = "0x9A72B4")]
	public void SetPlayerVelocityEstimator(VRTK_VelocityEstimator estimator)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x9A72BC", Offset = "0x9A72BC", VA = "0x9A72BC")]
	public Goliath()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x9A74A0", Offset = "0x9A74A0", VA = "0x9A74A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668C7C", Offset = "0x668C7C")]
	private bool <Awake>b__95_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x9A75C8", Offset = "0x9A75C8", VA = "0x9A75C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668C8C", Offset = "0x668C8C")]
	private bool <RotateTowardsTarget>b__105_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x9A7670", Offset = "0x9A7670", VA = "0x9A7670")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668C9C", Offset = "0x668C9C")]
	private bool <RotateTowardsTarget>b__105_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x9A7718", Offset = "0x9A7718", VA = "0x9A7718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668CAC", Offset = "0x668CAC")]
	private bool <ChargeAttack>b__106_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x9A77C0", Offset = "0x9A77C0", VA = "0x9A77C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668CBC", Offset = "0x668CBC")]
	private bool <ChargeAttack>b__106_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x9A78C4", Offset = "0x9A78C4", VA = "0x9A78C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668CCC", Offset = "0x668CCC")]
	private bool <MeleeAttack>b__107_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x9A798C", Offset = "0x9A798C", VA = "0x9A798C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668CDC", Offset = "0x668CDC")]
	private bool <MeleeAttack>b__107_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x9A7A2C", Offset = "0x9A7A2C", VA = "0x9A7A2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668CEC", Offset = "0x668CEC")]
	private bool <ThrowAttack>b__108_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x9A7B44", Offset = "0x9A7B44", VA = "0x9A7B44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668CFC", Offset = "0x668CFC")]
	private bool <ThrowAttack>b__108_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x9A7C68", Offset = "0x9A7C68", VA = "0x9A7C68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D0C", Offset = "0x668D0C")]
	private bool <ThrowAttack>b__108_2()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x9A7D80", Offset = "0x9A7D80", VA = "0x9A7D80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D1C", Offset = "0x668D1C")]
	private bool <JumpAttack>b__109_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x9A7E90", Offset = "0x9A7E90", VA = "0x9A7E90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D2C", Offset = "0x668D2C")]
	private bool <SpearDiveAttack>b__110_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x9A7F90", Offset = "0x9A7F90", VA = "0x9A7F90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D3C", Offset = "0x668D3C")]
	private bool <SpreadThrowAttack>b__112_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x9A8058", Offset = "0x9A8058", VA = "0x9A8058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D4C", Offset = "0x668D4C")]
	private bool <SpreadThrowAttack>b__112_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x9A80F4", Offset = "0x9A80F4", VA = "0x9A80F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D5C", Offset = "0x668D5C")]
	private bool <PopHelmet>b__123_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000055")]
public class GoliathLevelObjective : LevelObjective
{
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CDB8", Offset = "0x64CDB8")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GoliathLevelObjective <>4__this;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x9AE7C0", Offset = "0x9AE7C0", VA = "0x9AE7C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x9AE830", Offset = "0x9AE830", VA = "0x9AE830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x9AE53C", Offset = "0x9AE53C", VA = "0x9AE53C")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x9AE5D0", Offset = "0x9AE5D0", VA = "0x9AE5D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x9AE5D4", Offset = "0x9AE5D4", VA = "0x9AE5D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x9AE7C8", Offset = "0x9AE7C8", VA = "0x9AE7C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Goliath goliath;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform playAreaTransform;

	[Token(Token = "0x17000041")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x9AE420", Offset = "0x9AE420", VA = "0x9AE420")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x9AE4C8", Offset = "0x9AE4C8", VA = "0x9AE4C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668D6C", Offset = "0x668D6C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x9AE568", Offset = "0x9AE568", VA = "0x9AE568")]
	public GoliathLevelObjective()
	{
	}
}
[Token(Token = "0x2000056")]
public class LavaGeyser : DamageDealer
{
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CDC8", Offset = "0x64CDC8")]
	private sealed class <Erupt>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LavaGeyser <>4__this;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xC4E1D8", Offset = "0xC4E1D8", VA = "0xC4E1D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0xC4E248", Offset = "0xC4E248", VA = "0xC4E248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xC4E028", Offset = "0xC4E028", VA = "0xC4E028")]
		[DebuggerHidden]
		public <Erupt>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xC4E05C", Offset = "0xC4E05C", VA = "0xC4E05C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xC4E060", Offset = "0xC4E060", VA = "0xC4E060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xC4E1E0", Offset = "0xC4E1E0", VA = "0xC4E1E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem lavaFX;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 cooldownRange;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float damageRadius;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask damageMask;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Goliath goliath;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lastEruptionTime;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float cooldown;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool erupting;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool test;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xC4DB80", Offset = "0xC4DB80", VA = "0xC4DB80")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xC4DFFC", Offset = "0xC4DFFC", VA = "0xC4DFFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xC4DD1C", Offset = "0xC4DD1C", VA = "0xC4DD1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668DD0", Offset = "0x668DD0")]
	private IEnumerator Erupt()
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xC4DD90", Offset = "0xC4DD90", VA = "0xC4DD90")]
	private void DealDamage(float damageRadius, LayerMask damageMask)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xC4E054", Offset = "0xC4E054", VA = "0xC4E054")]
	public LavaGeyser()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648200", Offset = "0x648200")]
public class Soldier : Actor
{
	[Token(Token = "0x2000371")]
	public class DiedEventArgs : EventArgs
	{
		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Soldier soldier;

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x8CAD80", Offset = "0x8CAD80", VA = "0x8CAD80")]
		public DiedEventArgs()
		{
		}
	}

	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CDD8", Offset = "0x64CDD8")]
	private sealed class <ThrowAttack>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Soldier <>4__this;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x8CC1A4", Offset = "0x8CC1A4", VA = "0x8CC1A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x8CC214", Offset = "0x8CC214", VA = "0x8CC214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x8CAC7C", Offset = "0x8CAC7C", VA = "0x8CAC7C")]
		[DebuggerHidden]
		public <ThrowAttack>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x8CBA10", Offset = "0x8CBA10", VA = "0x8CBA10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x8CBA14", Offset = "0x8CBA14", VA = "0x8CBA14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x8CC1AC", Offset = "0x8CC1AC", VA = "0x8CC1AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CDE8", Offset = "0x64CDE8")]
	private sealed class <RotateTowardsTarget>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 playerOverride;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Soldier <>4__this;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__2;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x8CB998", Offset = "0x8CB998", VA = "0x8CB998", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x8CBA08", Offset = "0x8CBA08", VA = "0x8CBA08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x8CAD54", Offset = "0x8CAD54", VA = "0x8CAD54")]
		[DebuggerHidden]
		public <RotateTowardsTarget>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x8CB4DC", Offset = "0x8CB4DC", VA = "0x8CB4DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x8CB4E0", Offset = "0x8CB4E0", VA = "0x8CB4E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x8CB9A0", Offset = "0x8CB9A0", VA = "0x8CB9A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CDF8", Offset = "0x64CDF8")]
	private sealed class <DieCoro>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Soldier <>4__this;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x8CB464", Offset = "0x8CB464", VA = "0x8CB464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x8CB4D4", Offset = "0x8CB4D4", VA = "0x8CB4D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x8CAE5C", Offset = "0x8CAE5C", VA = "0x8CAE5C")]
		[DebuggerHidden]
		public <DieCoro>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x8CB2AC", Offset = "0x8CB2AC", VA = "0x8CB2AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x8CB2B0", Offset = "0x8CB2B0", VA = "0x8CB2B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x8CB46C", Offset = "0x8CB46C", VA = "0x8CB46C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE08", Offset = "0x64CE08")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static EventHandler<DiedEventArgs> <>9__34_0;

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x8CB2A0", Offset = "0x8CB2A0", VA = "0x8CB2A0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x8CB2A8", Offset = "0x8CB2A8", VA = "0x8CB2A8")]
		internal void <.ctor>b__34_0(object <p0>, DiedEventArgs <p1>)
		{
		}
	}

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651BC8", Offset = "0x651BC8")]
	[SerializeField]
	protected Rigidbody spearPrefab;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform throwTrans;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651C24", Offset = "0x651C24")]
	[SerializeField]
	protected float throwPower;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected float headAimOffset;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected float minThrowCD;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected float maxThrowCD;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651CA0", Offset = "0x651CA0")]
	[SerializeField]
	protected float throwNormalizedTime;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator anim;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool dead;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly int throwParam;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly int dieParam;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform headsetTransform;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool active;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lastThrowTime;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float localThrowCD;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool toTheRight;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Collider[] colliders;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool test;

	[Token(Token = "0x17000042")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x8CA650", Offset = "0x8CA650", VA = "0x8CA650")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400000B")]
	public event EventHandler<DiedEventArgs> Died
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x8CA6F8", Offset = "0x8CA6F8", VA = "0x8CA6F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E34", Offset = "0x668E34")]
		add
		{
		}
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x8CA7E4", Offset = "0x8CA7E4", VA = "0x8CA7E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E44", Offset = "0x668E44")]
		remove
		{
		}
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x8CA8D0", Offset = "0x8CA8D0", VA = "0x8CA8D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x8CA9C8", Offset = "0x8CA9C8", VA = "0x8CA9C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x8CAA48", Offset = "0x8CAA48", VA = "0x8CAA48")]
	private void On_Damaged(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x8CAB84", Offset = "0x8CAB84", VA = "0x8CAB84")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x8CABA0", Offset = "0x8CABA0", VA = "0x8CABA0", Slot = "4")]
	public override void Activate()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x8CAC08", Offset = "0x8CAC08", VA = "0x8CAC08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668E54", Offset = "0x668E54")]
	private IEnumerator ThrowAttack()
	{
		return null;
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x8CACA8", Offset = "0x8CACA8", VA = "0x8CACA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668EB8", Offset = "0x668EB8")]
	private IEnumerator RotateTowardsTarget([Optional] Vector3 playerOverride)
	{
		return null;
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x8CAA4C", Offset = "0x8CAA4C", VA = "0x8CAA4C")]
	public void Die()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x8CADE8", Offset = "0x8CADE8", VA = "0x8CADE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668F1C", Offset = "0x668F1C")]
	public IEnumerator DieCoro()
	{
		return null;
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x8CAE88", Offset = "0x8CAE88", VA = "0x8CAE88")]
	public void SetTargetPosition(Transform target)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x8CAF04", Offset = "0x8CAF04", VA = "0x8CAF04")]
	public Soldier()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x8CB04C", Offset = "0x8CB04C", VA = "0x8CB04C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F80", Offset = "0x668F80")]
	private bool <ThrowAttack>b__28_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x8CB104", Offset = "0x8CB104", VA = "0x8CB104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F90", Offset = "0x668F90")]
	private bool <ThrowAttack>b__28_1()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x8CB194", Offset = "0x8CB194", VA = "0x8CB194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668FA0", Offset = "0x668FA0")]
	private bool <DieCoro>b__31_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000058")]
public class Spear : DamageDealer
{
	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Collider pointCollider;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Collider centerCollider;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Collider blockingCollider;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected float impaleVelocity;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected float alignWithVelocityRate;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected LayerMask stickLayerMask;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Collider> damagedColliders;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool spent;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rb;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x8CC21C", Offset = "0x8CC21C", VA = "0x8CC21C")]
	private bool MovingFastAndStraight(Vector3 x)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x8CC354", Offset = "0x8CC354", VA = "0x8CC354")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x8CC3AC", Offset = "0x8CC3AC", VA = "0x8CC3AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x8CC494", Offset = "0x8CC494", VA = "0x8CC494")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x8CC68C", Offset = "0x8CC68C", VA = "0x8CC68C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x8CCBCC", Offset = "0x8CCBCC", VA = "0x8CCBCC")]
	public Spear()
	{
	}
}
[Token(Token = "0x2000059")]
public class SpearVolley : DamageDealer
{
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE18", Offset = "0x64CE18")]
	private sealed class <HideSpears>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpearVolley <>4__this;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0x8CE670", Offset = "0x8CE670", VA = "0x8CE670", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x8CE6E0", Offset = "0x8CE6E0", VA = "0x8CE6E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x8CDE80", Offset = "0x8CDE80", VA = "0x8CDE80")]
		[DebuggerHidden]
		public <HideSpears>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x8CE4F4", Offset = "0x8CE4F4", VA = "0x8CE4F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x8CE4F8", Offset = "0x8CE4F8", VA = "0x8CE4F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x8CE678", Offset = "0x8CE678", VA = "0x8CE678", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE28", Offset = "0x64CE28")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__22_0;

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x8CDF50", Offset = "0x8CDF50", VA = "0x8CDF50")]
		public <>c()
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x8CDF58", Offset = "0x8CDF58", VA = "0x8CDF58")]
		internal bool <GenerateTargets>b__22_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE38", Offset = "0x64CE38")]
	private sealed class <GenerateTargets>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpearVolley <>4__this;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <direction>5__2;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <right>5__3;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <spearIndex>5__4;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <i>5__5;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <j>5__6;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x8CE47C", Offset = "0x8CE47C", VA = "0x8CE47C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x8CE4EC", Offset = "0x8CE4EC", VA = "0x8CE4EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x8CDEAC", Offset = "0x8CDEAC", VA = "0x8CDEAC")]
		[DebuggerHidden]
		public <GenerateTargets>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x8CDFF8", Offset = "0x8CDFF8", VA = "0x8CDFF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x8CDFFC", Offset = "0x8CDFFC", VA = "0x8CDFFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x8CE484", Offset = "0x8CE484", VA = "0x8CE484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject projectileModel;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject indicatorModel;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float arenaRadius;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spearHalfLength;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask damageMask;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask floorMask;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform goliath;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool test;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform[] spears;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform[] indicators;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] velocities;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int spearCount;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float fixedDeltaTime;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 gravity;

	[Token(Token = "0x400033A")]
	private const float initialAngle = 45f;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x8CCC54", Offset = "0x8CCC54", VA = "0x8CCC54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x8CD120", Offset = "0x8CD120", VA = "0x8CD120")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x8CD174", Offset = "0x8CD174", VA = "0x8CD174")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x8CD138", Offset = "0x8CD138", VA = "0x8CD138")]
	public void Launch(Transform goliath)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x8CD178", Offset = "0x8CD178", VA = "0x8CD178")]
	private void FixedUpdateSpears()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x8CD83C", Offset = "0x8CD83C", VA = "0x8CD83C")]
	private void LaunchSpear(int spearIndex, Vector3 startPos, Vector3 targetPos)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x8CDDE8", Offset = "0x8CDDE8", VA = "0x8CDDE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668FB0", Offset = "0x668FB0")]
	private IEnumerator HideSpears(float delay)
	{
		return null;
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x8CD7C8", Offset = "0x8CD7C8", VA = "0x8CD7C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669014", Offset = "0x669014")]
	private IEnumerator GenerateTargets()
	{
		return null;
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x8CDD60", Offset = "0x8CDD60", VA = "0x8CDD60")]
	private float ProjectileFlightTime(float initialVel)
	{
		return default(float);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x8CDED8", Offset = "0x8CDED8", VA = "0x8CDED8")]
	public SpearVolley()
	{
	}
}
[Token(Token = "0x200005A")]
public class WaspCarryingSheep : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE48", Offset = "0x64CE48")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction <>9__21_0;

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x9440A4", Offset = "0x9440A4", VA = "0x9440A4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x9440AC", Offset = "0x9440AC", VA = "0x9440AC")]
		internal void <.ctor>b__21_0()
		{
		}
	}

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651D50", Offset = "0x651D50")]
	[SerializeField]
	protected float spawnDelay;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected bool canTimeOut;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected float timeoutAfter;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject waspPrefab;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform waspAttachPoint;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Transform waspParent;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 origin;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform targetTransform;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool goToPoint;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool returningToOrigin;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float temp;

	[Token(Token = "0x1400000C")]
	public event UnityAction NestDropped
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x9437E0", Offset = "0x9437E0", VA = "0x9437E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669078", Offset = "0x669078")]
		add
		{
		}
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x9438CC", Offset = "0x9438CC", VA = "0x9438CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669088", Offset = "0x669088")]
		remove
		{
		}
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x9439B8", Offset = "0x9439B8", VA = "0x9439B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x9439FC", Offset = "0x9439FC", VA = "0x9439FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x943C20", Offset = "0x943C20", VA = "0x943C20")]
	private void SpawnWaspNest()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x943E94", Offset = "0x943E94", VA = "0x943E94")]
	private void WaspNest_Dropped()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x943ED0", Offset = "0x943ED0", VA = "0x943ED0")]
	private void ReturnToOrigin()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x943F44", Offset = "0x943F44", VA = "0x943F44")]
	public void SetNewPointAndMove(Transform newPoint)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x943B34", Offset = "0x943B34", VA = "0x943B34")]
	private void MoveToTarget()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x943F54", Offset = "0x943F54", VA = "0x943F54")]
	public WaspCarryingSheep()
	{
	}
}
[Token(Token = "0x200005B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648264", Offset = "0x648264")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648264", Offset = "0x648264")]
public class WaspNest : DamageDealer
{
	[Serializable]
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE58", Offset = "0x64CE58")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction <>9__10_0;

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x944718", Offset = "0x944718", VA = "0x944718")]
		public <>c()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x944720", Offset = "0x944720", VA = "0x944720")]
		internal void <.ctor>b__10_0()
		{
		}
	}

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Hitbox hitbox;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool falling;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fallStart;

	[Token(Token = "0x1400000D")]
	public event UnityAction Dropped
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x943DA8", Offset = "0x943DA8", VA = "0x943DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669098", Offset = "0x669098")]
		add
		{
		}
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x9440B0", Offset = "0x9440B0", VA = "0x9440B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6690A8", Offset = "0x6690A8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x94419C", Offset = "0x94419C", VA = "0x94419C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x944264", Offset = "0x944264", VA = "0x944264")]
	private void Hitbox_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x944318", Offset = "0x944318", VA = "0x944318")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x9445C4", Offset = "0x9445C4", VA = "0x9445C4")]
	public WaspNest()
	{
	}
}
[Token(Token = "0x200005C")]
public class BlockTrigger : MonoBehaviour
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fx;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool triggerEntered;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xAF1B5C", Offset = "0xAF1B5C", VA = "0xAF1B5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xAF1BF8", Offset = "0xAF1BF8", VA = "0xAF1BF8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xAF1CF0", Offset = "0xAF1CF0", VA = "0xAF1CF0")]
	public BlockTrigger()
	{
	}
}
[Token(Token = "0x200005D")]
public class Crack : MonoBehaviour
{
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE68", Offset = "0x64CE68")]
	private sealed class <TurnOffDelay>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Crack <>4__this;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0x851ADC", Offset = "0x851ADC", VA = "0x851ADC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0x851B4C", Offset = "0x851B4C", VA = "0x851B4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x851970", Offset = "0x851970", VA = "0x851970")]
		[DebuggerHidden]
		public <TurnOffDelay>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x8519B4", Offset = "0x8519B4", VA = "0x8519B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x8519B8", Offset = "0x8519B8", VA = "0x8519B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x851AE4", Offset = "0x851AE4", VA = "0x851AE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected ParticleSystem gasParticles;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected GameObject collidersGameObj;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject modelGameObj;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected float gasOffDelay;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool active;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool on;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool firstSideActive;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x8516D8", Offset = "0x8516D8", VA = "0x8516D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x851780", Offset = "0x851780", VA = "0x851780")]
	public void Activate()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x8517EC", Offset = "0x8517EC", VA = "0x8517EC")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x8518B4", Offset = "0x8518B4", VA = "0x8518B4")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x8518FC", Offset = "0x8518FC", VA = "0x8518FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6690B8", Offset = "0x6690B8")]
	private IEnumerator TurnOffDelay()
	{
		return null;
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x85199C", Offset = "0x85199C", VA = "0x85199C")]
	public void SetDelay(float delayIn)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x8519A4", Offset = "0x8519A4", VA = "0x8519A4")]
	public Crack()
	{
	}
}
[Token(Token = "0x200005E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6482F0", Offset = "0x6482F0")]
public class FallingPlatform : MonoBehaviour
{
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE78", Offset = "0x64CE78")]
	private sealed class <Fall>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FallingPlatform <>4__this;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0x99AD04", Offset = "0x99AD04", VA = "0x99AD04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0x99AD74", Offset = "0x99AD74", VA = "0x99AD74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x99AAB0", Offset = "0x99AAB0", VA = "0x99AAB0")]
		[DebuggerHidden]
		public <Fall>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x99AAE4", Offset = "0x99AAE4", VA = "0x99AAE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x99AAE8", Offset = "0x99AAE8", VA = "0x99AAE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x99AD0C", Offset = "0x99AD0C", VA = "0x99AD0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fallToHeight;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int fallPhase;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject indicator;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform fx;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider meshCollider;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool fallTriggered;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private JumpPoint jumpPoint;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x99A64C", Offset = "0x99A64C", VA = "0x99A64C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x99A770", Offset = "0x99A770", VA = "0x99A770")]
	private void Update()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x99A9F4", Offset = "0x99A9F4", VA = "0x99A9F4")]
	public void TriggerFall(int phase)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x99AA3C", Offset = "0x99AA3C", VA = "0x99AA3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66911C", Offset = "0x66911C")]
	private IEnumerator Fall()
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x99A7D4", Offset = "0x99A7D4", VA = "0x99A7D4")]
	private void EndFall()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x99AADC", Offset = "0x99AADC", VA = "0x99AADC")]
	public FallingPlatform()
	{
	}
}
[Token(Token = "0x200005F")]
public class FallingRock : DamageDealer
{
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE88", Offset = "0x64CE88")]
	private sealed class <Break>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FallingRock <>4__this;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0x99B830", Offset = "0x99B830", VA = "0x99B830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x99B8A0", Offset = "0x99B8A0", VA = "0x99B8A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x99B4B8", Offset = "0x99B4B8", VA = "0x99B4B8")]
		[DebuggerHidden]
		public <Break>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x99B4F4", Offset = "0x99B4F4", VA = "0x99B4F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x99B4F8", Offset = "0x99B4F8", VA = "0x99B4F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x99B838", Offset = "0x99B838", VA = "0x99B838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask damageMask;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float turnOnColliderHeight;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject indicator;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem fx;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider rockCollider;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer thisRenderer;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool broke;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x99AD7C", Offset = "0x99AD7C", VA = "0x99AD7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x99AFA8", Offset = "0x99AFA8", VA = "0x99AFA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x99B03C", Offset = "0x99B03C", VA = "0x99B03C")]
	public void StartFall()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x99B0A0", Offset = "0x99B0A0", VA = "0x99B0A0")]
	private void Fall()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x99B270", Offset = "0x99B270", VA = "0x99B270")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x99B444", Offset = "0x99B444", VA = "0x99B444")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669180", Offset = "0x669180")]
	private IEnumerator Break()
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x99B4E4", Offset = "0x99B4E4", VA = "0x99B4E4")]
	public FallingRock()
	{
	}
}
[Token(Token = "0x2000060")]
public class GasBarrier : MonoBehaviour
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider gasCollider;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem gas;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool test;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x9A3FDC", Offset = "0x9A3FDC", VA = "0x9A3FDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x9A4034", Offset = "0x9A4034", VA = "0x9A4034")]
	private void Update()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x9A4048", Offset = "0x9A4048", VA = "0x9A4048")]
	public void DropRock()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x9A40AC", Offset = "0x9A40AC", VA = "0x9A40AC")]
	public void StopGas()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x9A40DC", Offset = "0x9A40DC", VA = "0x9A40DC")]
	public GasBarrier()
	{
	}
}
[Token(Token = "0x2000061")]
public class JumpPoint : MonoBehaviour
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651E4C", Offset = "0x651E4C")]
	[SerializeField]
	protected Crack[] conntectedCracks;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public JumpPoint[] conntectedJumpPoints;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Transform runToPoint;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool active;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xFCF0C0", Offset = "0xFCF0C0", VA = "0xFCF0C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xFCF164", Offset = "0xFCF164", VA = "0xFCF164")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xFCF208", Offset = "0xFCF208", VA = "0xFCF208")]
	public void On()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xFCF2A4", Offset = "0xFCF2A4", VA = "0xFCF2A4")]
	public void Off()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xFCF340", Offset = "0xFCF340", VA = "0xFCF340")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xFCF348", Offset = "0xFCF348", VA = "0xFCF348")]
	public Transform GetRunToPoint()
	{
		return null;
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xFCF350", Offset = "0xFCF350", VA = "0xFCF350")]
	public JumpPoint()
	{
	}
}
[Token(Token = "0x2000062")]
public class Lion : Actor
{
	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CE98", Offset = "0x64CE98")]
	private sealed class <MainCoro>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lion <>4__this;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <lastRoar>5__2;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <targetDir>5__3;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x158AF40", Offset = "0x158AF40", VA = "0x158AF40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x158AFB0", Offset = "0x158AFB0", VA = "0x158AFB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x1585FCC", Offset = "0x1585FCC", VA = "0x1585FCC")]
		[DebuggerHidden]
		public <MainCoro>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x158A0B8", Offset = "0x158A0B8", VA = "0x158A0B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x158A0BC", Offset = "0x158A0BC", VA = "0x158A0BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x158AF48", Offset = "0x158AF48", VA = "0x158AF48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CEA8", Offset = "0x64CEA8")]
	private sealed class <RotateTowards>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lion <>4__this;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rotTarget;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <targetDir>5__2;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x158C04C", Offset = "0x158C04C", VA = "0x158C04C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x158C0BC", Offset = "0x158C0BC", VA = "0x158C0BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x15862B8", Offset = "0x15862B8", VA = "0x15862B8")]
		[DebuggerHidden]
		public <RotateTowards>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x158B9EC", Offset = "0x158B9EC", VA = "0x158B9EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x158B9F0", Offset = "0x158B9F0", VA = "0x158B9F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x158C054", Offset = "0x158C054", VA = "0x158C054", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000380")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CEB8", Offset = "0x64CEB8")]
	private sealed class <JumpToPoint>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lion <>4__this;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool towardsTarget;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private JumpPoint <point>5__2;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <targetDir>5__3;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <interruptedBeforeJump>5__4;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x158A040", Offset = "0x158A040", VA = "0x158A040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x158A0B0", Offset = "0x158A0B0", VA = "0x158A0B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x1586380", Offset = "0x1586380", VA = "0x1586380")]
		[DebuggerHidden]
		public <JumpToPoint>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x1589404", Offset = "0x1589404", VA = "0x1589404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x1589408", Offset = "0x1589408", VA = "0x1589408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x158A048", Offset = "0x158A048", VA = "0x158A048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CEC8", Offset = "0x64CEC8")]
	private sealed class <JumpToCenter>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lion <>4__this;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <targetDir>5__2;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x158938C", Offset = "0x158938C", VA = "0x158938C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x15893FC", Offset = "0x15893FC", VA = "0x15893FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x1586420", Offset = "0x1586420", VA = "0x1586420")]
		[DebuggerHidden]
		public <JumpToCenter>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x1588DA0", Offset = "0x1588DA0", VA = "0x1588DA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x1588DA4", Offset = "0x1588DA4", VA = "0x1588DA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x1589394", Offset = "0x1589394", VA = "0x1589394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CED8", Offset = "0x64CED8")]
	private sealed class <JumpAttackCoro>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lion <>4__this;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <direction>5__2;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <destination>5__3;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <dmgDone>5__4;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x1588D28", Offset = "0x1588D28", VA = "0x1588D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x1588D98", Offset = "0x1588D98", VA = "0x1588D98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x15864C0", Offset = "0x15864C0", VA = "0x15864C0")]
		[DebuggerHidden]
		public <JumpAttackCoro>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x1588410", Offset = "0x1588410", VA = "0x1588410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x1588414", Offset = "0x1588414", VA = "0x1588414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x1588D30", Offset = "0x1588D30", VA = "0x1588D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CEE8", Offset = "0x64CEE8")]
	private sealed class <MeleeAttack>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lion <>4__this;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x158B280", Offset = "0x158B280", VA = "0x158B280", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x158B2F0", Offset = "0x158B2F0", VA = "0x158B2F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x1586560", Offset = "0x1586560", VA = "0x1586560")]
		[DebuggerHidden]
		public <MeleeAttack>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x158AFB8", Offset = "0x158AFB8", VA = "0x158AFB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x158AFBC", Offset = "0x158AFBC", VA = "0x158AFBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x158B288", Offset = "0x158B288", VA = "0x158B288", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CEF8", Offset = "0x64CEF8")]
	private sealed class <RoarAttack>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lion <>4__this;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool incrementPhase;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0x158B974", Offset = "0x158B974", VA = "0x158B974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0x158B9E4", Offset = "0x158B9E4", VA = "0x158B9E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x1586628", Offset = "0x1586628", VA = "0x1586628")]
		[DebuggerHidden]
		public <RoarAttack>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x158B2F8", Offset = "0x158B2F8", VA = "0x158B2F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x158B2FC", Offset = "0x158B2FC", VA = "0x158B2FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x158B97C", Offset = "0x158B97C", VA = "0x158B97C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF08", Offset = "0x64CF08")]
	private sealed class <DamageCoro>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lion <>4__this;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0x1588178", Offset = "0x1588178", VA = "0x1588178", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0x15881E8", Offset = "0x15881E8", VA = "0x15881E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x1586974", Offset = "0x1586974", VA = "0x1586974")]
		[DebuggerHidden]
		public <DamageCoro>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x1587D14", Offset = "0x1587D14", VA = "0x1587D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x1587D18", Offset = "0x1587D18", VA = "0x1587D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x1588180", Offset = "0x1588180", VA = "0x1588180", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF18", Offset = "0x64CF18")]
	private sealed class <Die>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lion <>4__this;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x1588398", Offset = "0x1588398", VA = "0x1588398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x1588408", Offset = "0x1588408", VA = "0x1588408", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x1586A14", Offset = "0x1586A14", VA = "0x1586A14")]
		[DebuggerHidden]
		public <Die>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x15881F0", Offset = "0x15881F0", VA = "0x15881F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x15881F4", Offset = "0x15881F4", VA = "0x15881F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x15883A0", Offset = "0x15883A0", VA = "0x15883A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651EC8", Offset = "0x651EC8")]
	[SerializeField]
	protected JumpPoint[] jumpPoints;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform sheep;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected LionLevelManager levelManager;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Transform sightOrigin;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected JumpPoint centerPlatform;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected VFXColorLerp angerFX;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected JumpPoint sheepJumpPoint;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651F74", Offset = "0x651F74")]
	[SerializeField]
	protected int health;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651FC0", Offset = "0x651FC0")]
	[SerializeField]
	protected float roarNormalizedTime;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected LayerMask damageMask;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652010", Offset = "0x652010")]
	[SerializeField]
	protected float meleeRange;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected float meleeDmgRadius;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65206C", Offset = "0x65206C")]
	[SerializeField]
	protected float meleeDmgTime;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6520AC", Offset = "0x6520AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6520AC", Offset = "0x6520AC")]
	[SerializeField]
	protected float airbornStart;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652110", Offset = "0x652110")]
	[SerializeField]
	protected float airbornEnd;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652150", Offset = "0x652150")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652150", Offset = "0x652150")]
	[SerializeField]
	protected float upAirbornStart;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6521B4", Offset = "0x6521B4")]
	[SerializeField]
	protected float upAirbornEnd;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6521F4", Offset = "0x6521F4")]
	[SerializeField]
	protected int maxJumpsBeforeAttack;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652240", Offset = "0x652240")]
	[SerializeField]
	protected float[] animSpeedByPhase;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65228C", Offset = "0x65228C")]
	[SerializeField]
	protected float jumpDamageRadius;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6522D8", Offset = "0x6522D8")]
	[SerializeField]
	protected float attackAirbornStart;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652318", Offset = "0x652318")]
	[SerializeField]
	protected float attackAirbornEnd;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652358", Offset = "0x652358")]
	[SerializeField]
	protected float jumpDmgTime;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected float pounceLandDist;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform playAreaTransform;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform headsetTransform;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WaitUntil waitUntilIdle;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IEnumerator currentAttack;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private IEnumerator mainCoro;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool interrupted;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool invulnerable;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool movingToJumpPoint;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
	private bool nextPhase;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool isJumping;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool shouldJumpAttack;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int phase;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform target;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform lookTarget;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private JumpPoint currentJumpPoint;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int jumpsBeforeAttack;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Animator anim;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private readonly int hitReactParam;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private readonly int jumpParam;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly int jumpUpParam;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private readonly int pounceParam;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly int meleeParam;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private readonly int speedParam;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly int deadParam;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool turnlock;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float turnStart;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector2 smoothDeltaPosition;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector2 velocity;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 moveTarget;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool shouldJumpToPoint;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool towardsTarget;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	private bool targetingSheep;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private JumpPoint previousPoint;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool jumpAttackHit;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool started;

	[Token(Token = "0x40003A9")]
	private const int MAX_LOOPS_PER_FRAME_FAILSAFE = 1000;

	[Token(Token = "0x17000043")]
	private float DistFromPlayer
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x15851FC", Offset = "0x15851FC", VA = "0x15851FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000044")]
	private Vector3 PlayerRootPos
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x15852D4", Offset = "0x15852D4", VA = "0x15852D4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000045")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0x1585460", Offset = "0x1585460", VA = "0x1585460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0x1585508", Offset = "0x1585508", VA = "0x1585508")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x15855B0", Offset = "0x15855B0", VA = "0x15855B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x15856E0", Offset = "0x15856E0", VA = "0x15856E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1585794", Offset = "0x1585794", VA = "0x1585794")]
	private void Update()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1585E10", Offset = "0x1585E10", VA = "0x1585E10")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1585720", Offset = "0x1585720", VA = "0x1585720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6691E4", Offset = "0x6691E4")]
	public IEnumerator MainCoro()
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1585FF8", Offset = "0x1585FF8", VA = "0x1585FF8")]
	private Coroutine HandleMove(IEnumerator attackCoroutine)
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1586004", Offset = "0x1586004", VA = "0x1586004")]
	public void InterruptCurrentMove()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1586220", Offset = "0x1586220", VA = "0x1586220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669248", Offset = "0x669248")]
	private IEnumerator RotateTowards(Transform rotTarget)
	{
		return null;
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x15862E4", Offset = "0x15862E4", VA = "0x15862E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6692AC", Offset = "0x6692AC")]
	private IEnumerator JumpToPoint(bool towardsTarget)
	{
		return null;
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x15863AC", Offset = "0x15863AC", VA = "0x15863AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669310", Offset = "0x669310")]
	private IEnumerator JumpToCenter()
	{
		return null;
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x158644C", Offset = "0x158644C", VA = "0x158644C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669374", Offset = "0x669374")]
	private IEnumerator JumpAttackCoro()
	{
		return null;
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x15864EC", Offset = "0x15864EC", VA = "0x15864EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6693D8", Offset = "0x6693D8")]
	private IEnumerator MeleeAttack()
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x158658C", Offset = "0x158658C", VA = "0x158658C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66943C", Offset = "0x66943C")]
	private IEnumerator RoarAttack(bool incrementPhase)
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1586654", Offset = "0x1586654", VA = "0x1586654")]
	private void DealDamage(float damageRadius, LayerMask damageMask, Vector3 origin, bool jumpAttack)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x15868D4", Offset = "0x15868D4", VA = "0x15868D4")]
	public void Actor_Damaged(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1586900", Offset = "0x1586900", VA = "0x1586900")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6694A0", Offset = "0x6694A0")]
	private IEnumerator DamageCoro()
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x15869A0", Offset = "0x15869A0", VA = "0x15869A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669504", Offset = "0x669504")]
	private IEnumerator Die()
	{
		return null;
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1586A40", Offset = "0x1586A40", VA = "0x1586A40")]
	private JumpPoint GetJumpPointClosestTo(Transform obj)
	{
		return null;
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1586CD0", Offset = "0x1586CD0", VA = "0x1586CD0")]
	private bool CanSeePlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1586E7C", Offset = "0x1586E7C", VA = "0x1586E7C")]
	private void StartInvulnerablitiy()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1586F3C", Offset = "0x1586F3C", VA = "0x1586F3C")]
	private void EndInvulnerability()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1586FF8", Offset = "0x1586FF8", VA = "0x1586FF8")]
	public Lion()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x158719C", Offset = "0x158719C", VA = "0x158719C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669568", Offset = "0x669568")]
	private bool <Awake>b__68_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1587270", Offset = "0x1587270", VA = "0x1587270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669578", Offset = "0x669578")]
	private bool <MainCoro>b__72_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x158737C", Offset = "0x158737C", VA = "0x158737C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669588", Offset = "0x669588")]
	private bool <RotateTowards>b__76_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1587438", Offset = "0x1587438", VA = "0x1587438")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669598", Offset = "0x669598")]
	private bool <RotateTowards>b__76_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x15874F4", Offset = "0x15874F4", VA = "0x15874F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695A8", Offset = "0x6695A8")]
	private bool <RotateTowards>b__76_2()
	{
		return default(bool);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x15875B0", Offset = "0x15875B0", VA = "0x15875B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695B8", Offset = "0x6695B8")]
	private bool <RotateTowards>b__76_3()
	{
		return default(bool);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x158766C", Offset = "0x158766C", VA = "0x158766C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695C8", Offset = "0x6695C8")]
	private bool <JumpToPoint>b__77_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1587778", Offset = "0x1587778", VA = "0x1587778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695D8", Offset = "0x6695D8")]
	private bool <JumpToPoint>b__77_1()
	{
		return default(bool);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1587884", Offset = "0x1587884", VA = "0x1587884")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695E8", Offset = "0x6695E8")]
	private bool <JumpToCenter>b__78_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1587990", Offset = "0x1587990", VA = "0x1587990")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695F8", Offset = "0x6695F8")]
	private bool <JumpAttackCoro>b__79_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1587A48", Offset = "0x1587A48", VA = "0x1587A48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669608", Offset = "0x669608")]
	private bool <MeleeAttack>b__80_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1587B5C", Offset = "0x1587B5C", VA = "0x1587B5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669618", Offset = "0x669618")]
	private bool <RoarAttack>b__81_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1587C5C", Offset = "0x1587C5C", VA = "0x1587C5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669628", Offset = "0x669628")]
	private bool <DamageCoro>b__84_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1587C6C", Offset = "0x1587C6C", VA = "0x1587C6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669638", Offset = "0x669638")]
	private bool <DamageCoro>b__84_1()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000063")]
public class LionLevelManager : LevelObjective
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6523A8", Offset = "0x6523A8")]
	[SerializeField]
	protected GameObject[] fallingRockPrefabs;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6523F4", Offset = "0x6523F4")]
	[SerializeField]
	protected FallingPlatform[] fallingPlatforms;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected GasBarrier[] gasBarriers;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652450", Offset = "0x652450")]
	[SerializeField]
	protected int numRocks;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool test;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int phase;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform playAreaTransform;

	[Token(Token = "0x17000047")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x158C0C4", Offset = "0x158C0C4", VA = "0x158C0C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x158C16C", Offset = "0x158C16C", VA = "0x158C16C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x158B5F4", Offset = "0x158B5F4", VA = "0x158B5F4")]
	public void IncrementPhase()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x158B630", Offset = "0x158B630", VA = "0x158B630")]
	public void SpawnRocks()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x158C180", Offset = "0x158C180", VA = "0x158C180")]
	private void DropPlatforms()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x158C224", Offset = "0x158C224", VA = "0x158C224")]
	public LionLevelManager()
	{
	}
}
[Token(Token = "0x2000064")]
public class MountainPassLevelObjective : LevelObjective
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected WolfSpawner[] wolfSpawners;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected bool shouldSpawnImmediately;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	protected bool shouldSpawnAtTime;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected float spawnTime;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected GameObject blockingCollider;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool startingHowl;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int activeSpawners;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool active;

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x15915FC", Offset = "0x15915FC", VA = "0x15915FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1591680", Offset = "0x1591680", VA = "0x1591680")]
	public void ActivateSpawners()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1591808", Offset = "0x1591808", VA = "0x1591808")]
	private void SpawnerDestroyed(object sender, WolfSpawner.DestroyedEventArgs e)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x15919E4", Offset = "0x15919E4", VA = "0x15919E4")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x15919EC", Offset = "0x15919EC", VA = "0x15919EC")]
	public MountainPassLevelObjective()
	{
	}
}
[Token(Token = "0x2000065")]
public class ScriptedLion : MonoBehaviour
{
	[Token(Token = "0x2000387")]
	public enum ScriptedSequence
	{
		[Token(Token = "0x4001BEA")]
		mountain_0,
		[Token(Token = "0x4001BEB")]
		mountain_1,
		[Token(Token = "0x4001BEC")]
		mountain_2,
		[Token(Token = "0x4001BED")]
		forest_0,
		[Token(Token = "0x4001BEE")]
		forest_1,
		[Token(Token = "0x4001BEF")]
		forest_2
	}

	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF28", Offset = "0x64CF28")]
	private sealed class <Mountain0Coro>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedLion <>4__this;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x159E2EC", Offset = "0x159E2EC", VA = "0x159E2EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x159E35C", Offset = "0x159E35C", VA = "0x159E35C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x159CD5C", Offset = "0x159CD5C", VA = "0x159CD5C")]
		[DebuggerHidden]
		public <Mountain0Coro>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x159E020", Offset = "0x159E020", VA = "0x159E020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x159E024", Offset = "0x159E024", VA = "0x159E024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x159E2F4", Offset = "0x159E2F4", VA = "0x159E2F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF38", Offset = "0x64CF38")]
	private sealed class <Mountain1Coro>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedLion <>4__this;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x159E6AC", Offset = "0x159E6AC", VA = "0x159E6AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x159E71C", Offset = "0x159E71C", VA = "0x159E71C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x159CD88", Offset = "0x159CD88", VA = "0x159CD88")]
		[DebuggerHidden]
		public <Mountain1Coro>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x159E364", Offset = "0x159E364", VA = "0x159E364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x159E368", Offset = "0x159E368", VA = "0x159E368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x159E6B4", Offset = "0x159E6B4", VA = "0x159E6B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF48", Offset = "0x64CF48")]
	private sealed class <JumpCoro>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScriptedLion <>4__this;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <direction>5__2;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <destination>5__3;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x159DFA8", Offset = "0x159DFA8", VA = "0x159DFA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x159E018", Offset = "0x159E018", VA = "0x159E018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x159CE4C", Offset = "0x159CE4C", VA = "0x159CE4C")]
		[DebuggerHidden]
		public <JumpCoro>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x159DA64", Offset = "0x159DA64", VA = "0x159DA64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x159DA68", Offset = "0x159DA68", VA = "0x159DA68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x159DFB0", Offset = "0x159DFB0", VA = "0x159DFB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF58", Offset = "0x64CF58")]
	private sealed class <JumpAttackCoro>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScriptedLion <>4__this;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <direction>5__2;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <destination>5__3;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x159D9EC", Offset = "0x159D9EC", VA = "0x159D9EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x159DA5C", Offset = "0x159DA5C", VA = "0x159DA5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x159CF10", Offset = "0x159CF10", VA = "0x159CF10")]
		[DebuggerHidden]
		public <JumpAttackCoro>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x159D538", Offset = "0x159D538", VA = "0x159D538", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x159D53C", Offset = "0x159D53C", VA = "0x159D53C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x159D9F4", Offset = "0x159D9F4", VA = "0x159D9F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF68", Offset = "0x64CF68")]
	private sealed class <RoarCoro>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedLion <>4__this;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x159E810", Offset = "0x159E810", VA = "0x159E810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x159E880", Offset = "0x159E880", VA = "0x159E880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x159CFB0", Offset = "0x159CFB0", VA = "0x159CFB0")]
		[DebuggerHidden]
		public <RoarCoro>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x159E724", Offset = "0x159E724", VA = "0x159E724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x159E728", Offset = "0x159E728", VA = "0x159E728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x159E818", Offset = "0x159E818", VA = "0x159E818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform playAreaTransform;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform headsetTransform;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6524FC", Offset = "0x6524FC")]
	[SerializeField]
	protected LevelObjective levelObjective;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652548", Offset = "0x652548")]
	[SerializeField]
	protected ScriptedSequence sequence;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652594", Offset = "0x652594")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652594", Offset = "0x652594")]
	[SerializeField]
	protected float attackAirbornEnd;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6525F8", Offset = "0x6525F8")]
	[SerializeField]
	protected float jumpStart;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652638", Offset = "0x652638")]
	[SerializeField]
	protected float jumpEnd;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652678", Offset = "0x652678")]
	[SerializeField]
	protected Transform goal1;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Transform goal2;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Transform goal3;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator anim;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NavMeshAgent agent;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 smoothDeltaPosition;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 velocity;

	[Token(Token = "0x17000048")]
	private float DistFromPlayer
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x159C02C", Offset = "0x159C02C", VA = "0x159C02C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000049")]
	private Vector3 PlayerRootPos
	{
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x159C104", Offset = "0x159C104", VA = "0x159C104")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004A")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x159C290", Offset = "0x159C290", VA = "0x159C290")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x159C338", Offset = "0x159C338", VA = "0x159C338")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x159C3E0", Offset = "0x159C3E0", VA = "0x159C3E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x159C468", Offset = "0x159C468", VA = "0x159C468")]
	private void Update()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x159CA78", Offset = "0x159CA78", VA = "0x159CA78")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x159CC34", Offset = "0x159CC34", VA = "0x159CC34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x159CC74", Offset = "0x159CC74", VA = "0x159CC74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669648", Offset = "0x669648")]
	private IEnumerator Mountain0Coro()
	{
		return null;
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x159CCE8", Offset = "0x159CCE8", VA = "0x159CCE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6696AC", Offset = "0x6696AC")]
	private IEnumerator Mountain1Coro()
	{
		return null;
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x159CDB4", Offset = "0x159CDB4", VA = "0x159CDB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669710", Offset = "0x669710")]
	private IEnumerator JumpCoro(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x159CE78", Offset = "0x159CE78", VA = "0x159CE78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669774", Offset = "0x669774")]
	private IEnumerator JumpAttackCoro(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x159CF3C", Offset = "0x159CF3C", VA = "0x159CF3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6697D8", Offset = "0x6697D8")]
	private IEnumerator RoarCoro()
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x159CFDC", Offset = "0x159CFDC", VA = "0x159CFDC")]
	public ScriptedLion()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x159D07C", Offset = "0x159D07C", VA = "0x159D07C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66983C", Offset = "0x66983C")]
	private bool <Mountain0Coro>b__27_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x159D178", Offset = "0x159D178", VA = "0x159D178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66984C", Offset = "0x66984C")]
	private bool <Mountain1Coro>b__28_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x159D19C", Offset = "0x159D19C", VA = "0x159D19C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66985C", Offset = "0x66985C")]
	private bool <Mountain1Coro>b__28_1()
	{
		return default(bool);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x159D298", Offset = "0x159D298", VA = "0x159D298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66986C", Offset = "0x66986C")]
	private bool <JumpCoro>b__29_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x159D340", Offset = "0x159D340", VA = "0x159D340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66987C", Offset = "0x66987C")]
	private bool <JumpCoro>b__29_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x159D3E8", Offset = "0x159D3E8", VA = "0x159D3E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66988C", Offset = "0x66988C")]
	private bool <JumpAttackCoro>b__30_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x159D490", Offset = "0x159D490", VA = "0x159D490")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66989C", Offset = "0x66989C")]
	private bool <JumpAttackCoro>b__30_1()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000066")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648354", Offset = "0x648354")]
public class WolfAggroAlert : MonoBehaviour
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MountainPassLevelObjective levelObjective;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Wolf wolf;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x950EA8", Offset = "0x950EA8", VA = "0x950EA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x950F58", Offset = "0x950F58", VA = "0x950F58")]
	private void Wolf_Damaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x950F88", Offset = "0x950F88", VA = "0x950F88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x950FE0", Offset = "0x950FE0", VA = "0x950FE0")]
	public WolfAggroAlert()
	{
	}
}
[Token(Token = "0x2000067")]
public class WolfSpawner : MonoBehaviour
{
	[Token(Token = "0x200038D")]
	public class DestroyedEventArgs : EventArgs
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WolfSpawner spawner;

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x951EC0", Offset = "0x951EC0", VA = "0x951EC0")]
		public DestroyedEventArgs()
		{
		}
	}

	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF78", Offset = "0x64CF78")]
	private sealed class <ActiveCoro>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WolfSpawner <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x952198", Offset = "0x952198", VA = "0x952198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x952208", Offset = "0x952208", VA = "0x952208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x951AE4", Offset = "0x951AE4", VA = "0x951AE4")]
		[DebuggerHidden]
		public <ActiveCoro>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x952084", Offset = "0x952084", VA = "0x952084", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x952088", Offset = "0x952088", VA = "0x952088", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x9521A0", Offset = "0x9521A0", VA = "0x9521A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF88", Offset = "0x64CF88")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static EventHandler<DestroyedEventArgs> <>9__20_0;

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x952078", Offset = "0x952078", VA = "0x952078")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x952080", Offset = "0x952080", VA = "0x952080")]
		internal void <.ctor>b__20_0(object <p0>, DestroyedEventArgs <p1>)
		{
		}
	}

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject wolfPrefab;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected int numUnitsToSpawn;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected int maxUnitsOnField;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected float timeBetweenSpawns;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected float wolfAggroRange;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected bool spawnOnTrigger;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int activeUnits;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool active;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool destroyed;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastSpawnTime;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int totalUnitsSpawned;

	[Token(Token = "0x1400000E")]
	public event EventHandler<DestroyedEventArgs> Destroyed
	{
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x95186C", Offset = "0x95186C", VA = "0x95186C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6698AC", Offset = "0x6698AC")]
		add
		{
		}
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x951958", Offset = "0x951958", VA = "0x951958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6698BC", Offset = "0x6698BC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x951A44", Offset = "0x951A44", VA = "0x951A44")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x951A70", Offset = "0x951A70", VA = "0x951A70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6698CC", Offset = "0x6698CC")]
	private IEnumerator ActiveCoro()
	{
		return null;
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x951B10", Offset = "0x951B10", VA = "0x951B10")]
	public void SpawnUnit()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x951D08", Offset = "0x951D08", VA = "0x951D08")]
	private void RemoveUnit(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x951E18", Offset = "0x951E18", VA = "0x951E18")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x951F28", Offset = "0x951F28", VA = "0x951F28")]
	public WolfSpawner()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "ExecuteAlways", RVA = "0x6483B8", Offset = "0x6483B8")]
public class ProgressionTrophies : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelCollection levelCollection;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int progressToLodOffset;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LODGroup lodGroup;

	[Token(Token = "0x1700004C")]
	private LODGroup LODGroup
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x1596484", Offset = "0x1596484", VA = "0x1596484")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1596518", Offset = "0x1596518", VA = "0x1596518")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x159651C", Offset = "0x159651C", VA = "0x159651C")]
	private void UpdateProgressionTrophyLevel()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x15967A8", Offset = "0x15967A8", VA = "0x15967A8")]
	public ProgressionTrophies()
	{
	}
}
[Token(Token = "0x2000069")]
public class ShootingRangeObjective : LevelObjective
{
	[Serializable]
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CF98", Offset = "0x64CF98")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Actor, bool> <>9__2_0;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Actor, bool> <>9__2_1;

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x8C6DF0", Offset = "0x8C6DF0", VA = "0x8C6DF0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x8C6DF8", Offset = "0x8C6DF8", VA = "0x8C6DF8")]
		internal bool <Awake>b__2_0(Actor n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x8C6E64", Offset = "0x8C6E64", VA = "0x8C6E64")]
		internal bool <Awake>b__2_1(Actor n)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Actor> rangeTargets;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8C6878", Offset = "0x8C6878", VA = "0x8C6878")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x8C68E4", Offset = "0x8C68E4", VA = "0x8C68E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x8C6B30", Offset = "0x8C6B30", VA = "0x8C6B30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x8C6BCC", Offset = "0x8C6BCC", VA = "0x8C6BCC")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x8C6D24", Offset = "0x8C6D24", VA = "0x8C6D24")]
	public ShootingRangeObjective()
	{
	}
}
[Token(Token = "0x200006A")]
public class SettingSelectionMenu : Menu
{
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CFA8", Offset = "0x64CFA8")]
	private sealed class <CloseMenuCoro>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingSelectionMenu <>4__this;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x15A1678", Offset = "0x15A1678", VA = "0x15A1678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x15A16E8", Offset = "0x15A16E8", VA = "0x15A16E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x15A1188", Offset = "0x15A1188", VA = "0x15A1188")]
		[DebuggerHidden]
		public <CloseMenuCoro>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x15A14F0", Offset = "0x15A14F0", VA = "0x15A14F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x15A14F4", Offset = "0x15A14F4", VA = "0x15A14F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x15A1680", Offset = "0x15A1680", VA = "0x15A1680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameSettings.SettingKey settingType;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652754", Offset = "0x652754")]
	public Button leftButton;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftOutline;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652764", Offset = "0x652764")]
	public Button rightButton;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightOutline;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x652774", Offset = "0x652774")]
	public bool closed;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LevelCollection.PlayerType playerTypeStart;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LevelCollection.PlayerType playerTypeEnd;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float animationTime;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator animator;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Canvas canvas;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x15A0A38", Offset = "0x15A0A38", VA = "0x15A0A38")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x15A0B4C", Offset = "0x15A0B4C", VA = "0x15A0B4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x15A0BE8", Offset = "0x15A0BE8", VA = "0x15A0BE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x15A0C84", Offset = "0x15A0C84", VA = "0x15A0C84")]
	private void SettingsChanged(GameSettings.SettingKey arg1, int arg2)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x15A0C88", Offset = "0x15A0C88", VA = "0x15A0C88")]
	private void UpdateButtons()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x15A0E60", Offset = "0x15A0E60", VA = "0x15A0E60")]
	public void SetPlayerPosition(Transform _transform)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x15A0F50", Offset = "0x15A0F50", VA = "0x15A0F50")]
	public void Open()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x15A1084", Offset = "0x15A1084", VA = "0x15A1084")]
	public void Close()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x15A1114", Offset = "0x15A1114", VA = "0x15A1114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669930", Offset = "0x669930")]
	private IEnumerator CloseMenuCoro()
	{
		return null;
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x15A11B4", Offset = "0x15A11B4", VA = "0x15A11B4", Slot = "4")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x15A12D8", Offset = "0x15A12D8", VA = "0x15A12D8", Slot = "5")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x15A135C", Offset = "0x15A135C", VA = "0x15A135C", Slot = "6")]
	public override void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x15A1400", Offset = "0x15A1400", VA = "0x15A1400")]
	public SettingSelectionMenu()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x15A1410", Offset = "0x15A1410", VA = "0x15A1410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669994", Offset = "0x669994")]
	private void <OnEnable>b__20_0()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x15A1480", Offset = "0x15A1480", VA = "0x15A1480")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6699A4", Offset = "0x6699A4")]
	private void <OnEnable>b__20_1()
	{
	}
}
[Token(Token = "0x200006B")]
public class TutorialManager : LevelObjective
{
	[Serializable]
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CFB8", Offset = "0x64CFB8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__38_0;

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x89C110", Offset = "0x89C110", VA = "0x89C110")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x89C118", Offset = "0x89C118", VA = "0x89C118")]
		internal bool <Start>b__38_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CFC8", Offset = "0x64CFC8")]
	private sealed class <Start>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialManager <>4__this;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x89C610", Offset = "0x89C610", VA = "0x89C610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x89C680", Offset = "0x89C680", VA = "0x89C680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x89BDDC", Offset = "0x89BDDC", VA = "0x89BDDC")]
		[DebuggerHidden]
		public <Start>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x89C2C4", Offset = "0x89C2C4", VA = "0x89C2C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x89C2C8", Offset = "0x89C2C8", VA = "0x89C2C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x89C618", Offset = "0x89C618", VA = "0x89C618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CFD8", Offset = "0x64CFD8")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform _targetParentSight;

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x89BEC8", Offset = "0x89BEC8", VA = "0x89BEC8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x89C1B0", Offset = "0x89C1B0", VA = "0x89C1B0")]
		internal GameObject <GetClairvoyanceTargets>b__0(int i)
		{
			return null;
		}
	}

	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CFE8", Offset = "0x64CFE8")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform _transform;

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x89BED0", Offset = "0x89BED0", VA = "0x89BED0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x89C200", Offset = "0x89C200", VA = "0x89C200")]
		internal GameObject <GetChildGameObjectsWithHitbox>b__0(int i)
		{
			return null;
		}
	}

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialObjectives tutorialObjectives;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652794", Offset = "0x652794")]
	public TutorialNPC tutorialNPC;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSourcePlayer;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoxCollider walkTriggerCollider;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6527A4", Offset = "0x6527A4")]
	public Transform playerSpawn;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform forwardSpawnLocation;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform backSpawnLocation;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x6527B4", Offset = "0x6527B4")]
	public Transform headsetTransform;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x6527C4", Offset = "0x6527C4")]
	public TutorialMenuVideo videoMenu;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6527D4", Offset = "0x6527D4")]
	public Transform targetParentWood;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform targetParentFruit;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform targetParentSight;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject weaponSelection;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject dominantHandSelection;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ControllerLayoutMenu controllerLayoutMenu;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65280C", Offset = "0x65280C")]
	public GameObject movementSelection;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject rollingSheepPrefab;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int numberOfSheep;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<PathCreator> rollingSheepPaths;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip slingAudio;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip slingshotAudio;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x652844", Offset = "0x652844")]
	public List<TutorialSheepRolling> rollingSheep;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int sheepPathIndex;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x652854", Offset = "0x652854")]
	public bool playerDamaged;

	[Token(Token = "0x1700004D")]
	public bool playerIsSpeaking
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x89B7C0", Offset = "0x89B7C0", VA = "0x89B7C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004E")]
	public bool hasWalked
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0x89B7F0", Offset = "0x89B7F0", VA = "0x89B7F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004F")]
	public List<GameObject> shootingRangeTargetsWood
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0x89B878", Offset = "0x89B878", VA = "0x89B878")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000050")]
	public List<GameObject> shootingRangeTargetsFruit
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x89B9E0", Offset = "0x89B9E0", VA = "0x89B9E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public List<GameObject> shootingRangeTargetsSight
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x89B9E8", Offset = "0x89B9E8", VA = "0x89B9E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x89BB50", Offset = "0x89BB50", VA = "0x89BB50")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x89BBE0", Offset = "0x89BBE0", VA = "0x89BBE0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x89BC74", Offset = "0x89BC74", VA = "0x89BC74")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x89BD08", Offset = "0x89BD08", VA = "0x89BD08")]
	private void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x89BD68", Offset = "0x89BD68", VA = "0x89BD68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6699B4", Offset = "0x6699B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x89BE08", Offset = "0x89BE08", VA = "0x89BE08")]
	public PathCreator GetAlternateSheepPath()
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x89B9F0", Offset = "0x89B9F0", VA = "0x89B9F0")]
	private static List<GameObject> GetClairvoyanceTargets(Transform _targetParentSight)
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x89B880", Offset = "0x89B880", VA = "0x89B880")]
	private static List<GameObject> GetChildGameObjectsWithHitbox(Transform _transform)
	{
		return null;
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x89BED8", Offset = "0x89BED8", VA = "0x89BED8")]
	public void PlayerSpeak(AudioClip clip)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x89BF38", Offset = "0x89BF38", VA = "0x89BF38")]
	public TutorialManager()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x89BFA0", Offset = "0x89BFA0", VA = "0x89BFA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669A18", Offset = "0x669A18")]
	private TutorialSheepRolling <Start>b__38_1(int i)
	{
		return null;
	}
}
[Token(Token = "0x200006C")]
public class TutorialMenuVideo : Menu
{
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CFF8", Offset = "0x64CFF8")]
	private sealed class <CloseMenuCoro>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialMenuVideo <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x89CA54", Offset = "0x89CA54", VA = "0x89CA54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x89CAC4", Offset = "0x89CAC4", VA = "0x89CAC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x89C868", Offset = "0x89C868", VA = "0x89C868")]
		[DebuggerHidden]
		public <CloseMenuCoro>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x89C94C", Offset = "0x89C94C", VA = "0x89C94C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x89C950", Offset = "0x89C950", VA = "0x89C950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x89CA5C", Offset = "0x89CA5C", VA = "0x89CA5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer gestureVideoPlayer;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoPlayer gameplayVideoPlayer;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI titleText;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI descriptionText;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image descriptionBackground;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VerticalLayoutGroup verticalLayoutGroup;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Animator animator;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Canvas canvas;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x89C688", Offset = "0x89C688", VA = "0x89C688")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x89C6F8", Offset = "0x89C6F8", VA = "0x89C6F8")]
	public void Open()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x89C788", Offset = "0x89C788", VA = "0x89C788")]
	public void Close()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x89C7F4", Offset = "0x89C7F4", VA = "0x89C7F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669A28", Offset = "0x669A28")]
	private IEnumerator CloseMenuCoro()
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x89C894", Offset = "0x89C894", VA = "0x89C894", Slot = "6")]
	public override void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x89C944", Offset = "0x89C944", VA = "0x89C944")]
	public TutorialMenuVideo()
	{
	}
}
[Token(Token = "0x200006D")]
public class TutorialNPC : Actor
{
	[Token(Token = "0x2000397")]
	public enum AnimationType
	{
		[Token(Token = "0x4001C1C")]
		Idle,
		[Token(Token = "0x4001C1D")]
		Throw,
		[Token(Token = "0x4001C1E")]
		Shrug,
		[Token(Token = "0x4001C1F")]
		Point,
		[Token(Token = "0x4001C20")]
		HeadScratch,
		[Token(Token = "0x4001C21")]
		FingerWag,
		[Token(Token = "0x4001C22")]
		Worried,
		[Token(Token = "0x4001C23")]
		ArmPump
	}

	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D008", Offset = "0x64D008")]
	private sealed class <Throw>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialNPC <>4__this;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform _target;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _delay;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject projectilePrefab;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float _throwPower;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x89DFD4", Offset = "0x89DFD4", VA = "0x89DFD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x89E044", Offset = "0x89E044", VA = "0x89E044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x89CEAC", Offset = "0x89CEAC", VA = "0x89CEAC")]
		[DebuggerHidden]
		public <Throw>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x89DD80", Offset = "0x89DD80", VA = "0x89DD80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x89DD84", Offset = "0x89DD84", VA = "0x89DD84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x89DFDC", Offset = "0x89DFDC", VA = "0x89DFDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D018", Offset = "0x64D018")]
	private sealed class <FaceTargetCoro>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialNPC <>4__this;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationSpeed;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <progress>5__2;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <targetRot>5__3;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x89DD08", Offset = "0x89DD08", VA = "0x89DD08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x89DD78", Offset = "0x89DD78", VA = "0x89DD78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x89D898", Offset = "0x89D898", VA = "0x89D898")]
		[DebuggerHidden]
		public <FaceTargetCoro>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x89D9CC", Offset = "0x89D9CC", VA = "0x89D9CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x89D9D0", Offset = "0x89D9D0", VA = "0x89D9D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x89DD10", Offset = "0x89DD10", VA = "0x89DD10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652864", Offset = "0x652864")]
	public PathCreator pathCreator;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65289C", Offset = "0x65289C")]
	public Transform hand;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6528D4", Offset = "0x6528D4")]
	public AudioSource audioSource;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Animator animator;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VertexPath path;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float distanceTraveled;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Projectile projectileInstance;

	[Token(Token = "0x17000052")]
	public bool doneMoving
	{
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x89CACC", Offset = "0x89CACC", VA = "0x89CACC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000053")]
	public bool isSpeaking
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x89CB0C", Offset = "0x89CB0C", VA = "0x89CB0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x89CB3C", Offset = "0x89CB3C", VA = "0x89CB3C")]
	private void PlayAnimation(Animator _animator, AnimationType _animationType)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x89CBF4", Offset = "0x89CBF4", VA = "0x89CBF4")]
	public void Speak([Optional] AudioClip clip, AnimationType _npcAnimationType = AnimationType.Idle, bool supressAnimation = false)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x89CCE4", Offset = "0x89CCE4", VA = "0x89CCE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x89CDC8", Offset = "0x89CDC8", VA = "0x89CDC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669A8C", Offset = "0x669A8C")]
	public IEnumerator Throw(GameObject projectilePrefab, float _throwPower, Transform _target, float _delay)
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x89CED8", Offset = "0x89CED8", VA = "0x89CED8")]
	public void StopThrowing(Transform target)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x89CFEC", Offset = "0x89CFEC", VA = "0x89CFEC")]
	private static Projectile ThrowProjectileAtTarget(GameObject _projectilePrefab, Actor _actor, float _throwPower, Vector3 _originPosition, Vector3 _targetPosition)
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x89D4CC", Offset = "0x89D4CC", VA = "0x89D4CC")]
	public void StartMoving()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x89D534", Offset = "0x89D534", VA = "0x89D534")]
	public void MoveThroughPath(float moveSpeed)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x89D6D8", Offset = "0x89D6D8", VA = "0x89D6D8")]
	public void DoneMoving()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x89CFC0", Offset = "0x89CFC0", VA = "0x89CFC0")]
	public void FaceTarget(Transform target, float rotationSpeed)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x89D7E4", Offset = "0x89D7E4", VA = "0x89D7E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669AF0", Offset = "0x669AF0")]
	private IEnumerator FaceTargetCoro(Transform target, float rotationSpeed)
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x89D8C4", Offset = "0x89D8C4", VA = "0x89D8C4")]
	public TutorialNPC()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x89D2E0", Offset = "0x89D2E0", VA = "0x89D2E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B54", Offset = "0x669B54")]
	internal static Quaternion <ThrowProjectileAtTarget>g__GetTrajectoryRotation|17_0(Vector3 direction, float power)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x89D238", Offset = "0x89D238", VA = "0x89D238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B64", Offset = "0x669B64")]
	internal static Vector3 <ThrowProjectileAtTarget>g__GetDirectionToTarget|17_1(Vector3 originPosition, Vector3 targetPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x89D3DC", Offset = "0x89D3DC", VA = "0x89D3DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B74", Offset = "0x669B74")]
	internal static Vector3 <ThrowProjectileAtTarget>g__GetForwardVelocity|17_2(Quaternion rotation, float power)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x89D92C", Offset = "0x89D92C", VA = "0x89D92C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B84", Offset = "0x669B84")]
	internal static float <ThrowProjectileAtTarget>g__GetTrajectoryAngle|17_3(Vector3 direction, float power)
	{
		return default(float);
	}
}
[Token(Token = "0x200006E")]
public abstract class TutorialObjective : ScriptableObject
{
	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x89E04C", Offset = "0x89E04C", VA = "0x89E04C", Slot = "4")]
	public virtual Coroutine StartCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback)
	{
		return null;
	}

	[Token(Token = "0x60003BF")]
	public abstract IEnumerator ObjectiveCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback);

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x89E090", Offset = "0x89E090", VA = "0x89E090")]
	protected TutorialObjective()
	{
	}
}
[Token(Token = "0x200006F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6483C8", Offset = "0x6483C8")]
public class TutorialObjectiveCombined : TutorialObjective
{
	[Token(Token = "0x200039A")]
	public enum WaitType
	{
		[Token(Token = "0x4001C33")]
		Async,
		[Token(Token = "0x4001C34")]
		Sync,
		[Token(Token = "0x4001C35")]
		AsyncFirstWait
	}

	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D028", Offset = "0x64D028")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x89E178", Offset = "0x89E178", VA = "0x89E178")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x89E180", Offset = "0x89E180", VA = "0x89E180")]
		internal Coroutine <ObjectiveCoro>b__0(TutorialObjective objective)
		{
			return null;
		}
	}

	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D038", Offset = "0x64D038")]
	private sealed class <ObjectiveCoro>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialObjectiveCombined <>4__this;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass3_0 <>8__1;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Coroutine coroutineCallback;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Coroutine>.Enumerator <>7__wrap1;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<TutorialObjective>.Enumerator <>7__wrap2;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x89E754", Offset = "0x89E754", VA = "0x89E754", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x89E7C4", Offset = "0x89E7C4", VA = "0x89E7C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x89E144", Offset = "0x89E144", VA = "0x89E144")]
		[DebuggerHidden]
		public <ObjectiveCoro>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x89E1C0", Offset = "0x89E1C0", VA = "0x89E1C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x89E2A0", Offset = "0x89E2A0", VA = "0x89E2A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x89E1F0", Offset = "0x89E1F0", VA = "0x89E1F0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x89E248", Offset = "0x89E248", VA = "0x89E248")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x89E75C", Offset = "0x89E75C", VA = "0x89E75C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65290C", Offset = "0x65290C")]
	public WaitType waitType;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TutorialObjective> objectives;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x89E098", Offset = "0x89E098", VA = "0x89E098", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669B94", Offset = "0x669B94")]
	public override IEnumerator ObjectiveCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback)
	{
		return null;
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x89E170", Offset = "0x89E170", VA = "0x89E170")]
	public TutorialObjectiveCombined()
	{
	}
}
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x648438", Offset = "0x648438")]
public class TutorialObjectiveDash : TutorialObjective
{
	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D048", Offset = "0x64D048")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialObjectiveDash <>4__this;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<TutorialSheepRolling, float> <>9__1;

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x89E96C", Offset = "0x89E96C", VA = "0x89E96C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x89E974", Offset = "0x89E974", VA = "0x89E974")]
		internal float <ObjectiveCoro>b__1(TutorialSheepRolling i)
		{
			return default(float);
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x89E9C0", Offset = "0x89E9C0", VA = "0x89E9C0")]
		internal bool <ObjectiveCoro>b__0()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D058", Offset = "0x64D058")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<TutorialSheepRolling, bool> <>9__2_2;

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x89E910", Offset = "0x89E910", VA = "0x89E910")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x89E918", Offset = "0x89E918", VA = "0x89E918")]
		internal bool <ObjectiveCoro>b__2_2(TutorialSheepRolling sheep)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D068", Offset = "0x64D068")]
	private sealed class <ObjectiveCoro>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialObjectiveDash <>4__this;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass2_0 <>8__1;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Coroutine coroutineCallback;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<float> <rands>5__2;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__3;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x89EEFC", Offset = "0x89EEFC", VA = "0x89EEFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x89EF6C", Offset = "0x89EF6C", VA = "0x89EF6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x89E878", Offset = "0x89E878", VA = "0x89E878")]
		[DebuggerHidden]
		public <ObjectiveCoro>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x89EAC0", Offset = "0x89EAC0", VA = "0x89EAC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x89EAC4", Offset = "0x89EAC4", VA = "0x89EAC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x89EF04", Offset = "0x89EF04", VA = "0x89EF04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Vector2 timeBetweenActivations;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected float delay;

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x89E7CC", Offset = "0x89E7CC", VA = "0x89E7CC", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669BF8", Offset = "0x669BF8")]
	public override IEnumerator ObjectiveCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback)
	{
		return null;
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x89E8A4", Offset = "0x89E8A4", VA = "0x89E8A4")]
	public TutorialObjectiveDash()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6484A8", Offset = "0x6484A8")]
public class TutorialObjectiveDialogue : TutorialObjective
{
	[Token(Token = "0x20003A0")]
	public enum AudioSourceType
	{
		[Token(Token = "0x4001C4D")]
		Player,
		[Token(Token = "0x4001C4E")]
		NPC
	}

	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D078", Offset = "0x64D078")]
	private sealed class <ObjectiveCoro>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialObjectiveDialogue <>4__this;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Coroutine coroutineCallback;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x89F2CC", Offset = "0x89F2CC", VA = "0x89F2CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x89F33C", Offset = "0x89F33C", VA = "0x89F33C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x89F078", Offset = "0x89F078", VA = "0x89F078")]
		[DebuggerHidden]
		public <ObjectiveCoro>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x89F0AC", Offset = "0x89F0AC", VA = "0x89F0AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x89F0B0", Offset = "0x89F0B0", VA = "0x89F0B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x89F2D4", Offset = "0x89F2D4", VA = "0x89F2D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSourceType audioSourceType;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip dialogueAudioClip;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float audioStartDelay;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float audioEndDelay;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TutorialNPC.AnimationType npcAnimationType;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool supressAnimation;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x89EF74", Offset = "0x89EF74", VA = "0x89EF74")]
	private bool isSpeaking(TutorialManager _tutorialManager)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x89EFCC", Offset = "0x89EFCC", VA = "0x89EFCC", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669C5C", Offset = "0x669C5C")]
	public override IEnumerator ObjectiveCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback)
	{
		return null;
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x89F0A4", Offset = "0x89F0A4", VA = "0x89F0A4")]
	public TutorialObjectiveDialogue()
	{
	}
}
[Token(Token = "0x2000072")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x648518", Offset = "0x648518")]
public class TutorialObjectiveNPCAction : TutorialObjective
{
	[Token(Token = "0x20003A2")]
	public enum NPCAction
	{
		[Token(Token = "0x4001C55")]
		Move,
		[Token(Token = "0x4001C56")]
		ThrowAmount,
		[Token(Token = "0x4001C57")]
		ThrowLoop
	}

	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D088", Offset = "0x64D088")]
	private sealed class <ObjectiveCoro>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialObjectiveNPCAction <>4__this;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Coroutine coroutineCallback;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x89FA90", Offset = "0x89FA90", VA = "0x89FA90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x89FB00", Offset = "0x89FB00", VA = "0x89FB00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x89F3F0", Offset = "0x89F3F0", VA = "0x89F3F0")]
		[DebuggerHidden]
		public <ObjectiveCoro>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x89F43C", Offset = "0x89F43C", VA = "0x89F43C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x89F440", Offset = "0x89F440", VA = "0x89F440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x89FA98", Offset = "0x89FA98", VA = "0x89FA98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NPCAction actionType;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652964", Offset = "0x652964")]
	public float moveSpeed;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65299C", Offset = "0x65299C")]
	public GameObject projectilePrefab;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float throwPower;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6529D4", Offset = "0x6529D4")]
	public int numberOfProjectiles;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float totalThrowTime;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delay;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TutorialNPC tutorialNPCJesse;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform playerTransform;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int throwCount;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float t;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool playerDamaged;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x89F344", Offset = "0x89F344", VA = "0x89F344", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669CC0", Offset = "0x669CC0")]
	public override IEnumerator ObjectiveCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback)
	{
		return null;
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x89F41C", Offset = "0x89F41C", VA = "0x89F41C")]
	public TutorialObjectiveNPCAction()
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x648588", Offset = "0x648588")]
public class TutorialObjectives : ScriptableObject
{
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D098", Offset = "0x64D098")]
	private sealed class <ObjectiveUpdateCoro>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialObjectives <>4__this;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action onComplete;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <currentObjectiveIndex>5__2;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<TutorialObjective> <objectives>5__3;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x8A1700", Offset = "0x8A1700", VA = "0x8A1700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x8A1770", Offset = "0x8A1770", VA = "0x8A1770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x8A1470", Offset = "0x8A1470", VA = "0x8A1470")]
		[DebuggerHidden]
		public <ObjectiveUpdateCoro>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x8A14A4", Offset = "0x8A14A4", VA = "0x8A14A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x8A14A8", Offset = "0x8A14A8", VA = "0x8A14A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x8A1708", Offset = "0x8A1708", VA = "0x8A1708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6529EC", Offset = "0x6529EC")]
	[SerializeField]
	protected List<TutorialObjective> movement;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected List<TutorialObjective> weapon;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected List<TutorialObjective> targets;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected List<TutorialObjective> lean;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected List<TutorialObjective> dodge;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected List<TutorialObjective> sight;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x89C5D4", Offset = "0x89C5D4", VA = "0x89C5D4")]
	public void Init(TutorialManager _tutorialManager, [Optional] Action onComplete)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x8A13C4", Offset = "0x8A13C4", VA = "0x8A13C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669D24", Offset = "0x669D24")]
	private IEnumerator ObjectiveUpdateCoro(TutorialManager _tutorialManager, [Optional] Action onComplete)
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x8A149C", Offset = "0x8A149C", VA = "0x8A149C")]
	public TutorialObjectives()
	{
	}
}
[Token(Token = "0x2000074")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6485F8", Offset = "0x6485F8")]
public class TutorialObjectiveSettingSelection : TutorialObjective
{
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D0A8", Offset = "0x64D0A8")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SettingSelectionMenu menu;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x89FD34", Offset = "0x89FD34", VA = "0x89FD34")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x89FD3C", Offset = "0x89FD3C", VA = "0x89FD3C")]
		internal bool <ObjectiveCoro>b__0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x89FD84", Offset = "0x89FD84", VA = "0x89FD84")]
		internal bool <ObjectiveCoro>b__1()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D0B8", Offset = "0x64D0B8")]
	private sealed class <ObjectiveCoro>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialObjectiveSettingSelection <>4__this;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass2_0 <>8__1;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Coroutine coroutineCallback;

		[Token(Token = "0x170001F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x8A022C", Offset = "0x8A022C", VA = "0x8A022C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x8A029C", Offset = "0x8A029C", VA = "0x8A029C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x89FD00", Offset = "0x89FD00", VA = "0x89FD00")]
		[DebuggerHidden]
		public <ObjectiveCoro>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x89FDCC", Offset = "0x89FDCC", VA = "0x89FDCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x89FDD0", Offset = "0x89FDD0", VA = "0x89FDD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x8A0234", Offset = "0x8A0234", VA = "0x8A0234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameSettings.SettingKey settingKey;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x89FB08", Offset = "0x89FB08", VA = "0x89FB08")]
	private GameObject GetSelectionMenu(TutorialManager _tutorialManager)
	{
		return null;
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x89FC54", Offset = "0x89FC54", VA = "0x89FC54", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669D88", Offset = "0x669D88")]
	public override IEnumerator ObjectiveCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback)
	{
		return null;
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x89FD2C", Offset = "0x89FD2C", VA = "0x89FD2C")]
	public TutorialObjectiveSettingSelection()
	{
	}
}
[Token(Token = "0x2000075")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x648668", Offset = "0x648668")]
public class TutorialObjectiveShootTargets : TutorialObjective
{
	[Token(Token = "0x20003A7")]
	public enum TargetType
	{
		[Token(Token = "0x4001C6D")]
		Wood,
		[Token(Token = "0x4001C6E")]
		Fruit,
		[Token(Token = "0x4001C6F")]
		Clairvoyance
	}

	[Serializable]
	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D0C8", Offset = "0x64D0C8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, bool> <>9__9_2;

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x8A055C", Offset = "0x8A055C", VA = "0x8A055C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x8A0564", Offset = "0x8A0564", VA = "0x8A0564")]
		internal bool <ObjectiveCoro>b__9_2(GameObject target)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D0D8", Offset = "0x64D0D8")]
	private sealed class <ObjectiveCoro>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialObjectiveShootTargets <>4__this;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Coroutine coroutineCallback;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x8A0A58", Offset = "0x8A0A58", VA = "0x8A0A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x8A0AC8", Offset = "0x8A0AC8", VA = "0x8A0AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x8A03C4", Offset = "0x8A03C4", VA = "0x8A03C4")]
		[DebuggerHidden]
		public <ObjectiveCoro>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x8A05A0", Offset = "0x8A05A0", VA = "0x8A05A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x8A05A4", Offset = "0x8A05A4", VA = "0x8A05A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x8A0A60", Offset = "0x8A0A60", VA = "0x8A0A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TargetType targetType;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sightPhaseTimeAfterTrigger;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> targets;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int numOfTargets;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool clairvoyanceTriggered;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x8A02A4", Offset = "0x8A02A4", VA = "0x8A02A4")]
	private void Clairvoyance_ActivationEnd(object sender, ActivationEventArgs e)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x8A02B0", Offset = "0x8A02B0", VA = "0x8A02B0")]
	private void Clairvoyance_ActivationBegin(object sender, ActivationEventArgs e)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x8A02B8", Offset = "0x8A02B8", VA = "0x8A02B8")]
	private List<GameObject> GetTargets(TutorialManager _tutorialManager)
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x8A0318", Offset = "0x8A0318", VA = "0x8A0318", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669DEC", Offset = "0x669DEC")]
	public override IEnumerator ObjectiveCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback)
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x8A03F0", Offset = "0x8A03F0", VA = "0x8A03F0")]
	public TutorialObjectiveShootTargets()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x8A0400", Offset = "0x8A0400", VA = "0x8A0400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669E50", Offset = "0x669E50")]
	private bool <ObjectiveCoro>b__9_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x8A04F0", Offset = "0x8A04F0", VA = "0x8A04F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669E60", Offset = "0x669E60")]
	private bool <ObjectiveCoro>b__9_1()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6486D8", Offset = "0x6486D8")]
public class TutorialObjectiveVideo : TutorialObjective
{
	[Serializable]
	[Token(Token = "0x20003AA")]
	public class TutorialVideoGroup
	{
		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x665268", Offset = "0x665268")]
		public string description;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VideoClip gestureVideo;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VideoClip gameplayVideo;

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x8A1164", Offset = "0x8A1164", VA = "0x8A1164")]
		public TutorialVideoGroup()
		{
		}
	}

	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D0E8", Offset = "0x64D0E8")]
	private sealed class <ObjectiveCoro>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialObjectiveVideo <>4__this;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Coroutine coroutineCallback;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x8A10EC", Offset = "0x8A10EC", VA = "0x8A10EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x8A115C", Offset = "0x8A115C", VA = "0x8A115C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x8A0D30", Offset = "0x8A0D30", VA = "0x8A0D30")]
		[DebuggerHidden]
		public <ObjectiveCoro>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x8A0D64", Offset = "0x8A0D64", VA = "0x8A0D64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x8A0D68", Offset = "0x8A0D68", VA = "0x8A0D68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x8A10F4", Offset = "0x8A10F4", VA = "0x8A10F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TutorialVideoGroup> videoGroups;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameSettings.SettingKey settingKey;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool changeWithSettings;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	protected bool toggle;

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x8A0AD0", Offset = "0x8A0AD0", VA = "0x8A0AD0")]
	public void SetVideoClip(TutorialManager _tutorialManager, TutorialVideoGroup _videoGroup)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x8A0C84", Offset = "0x8A0C84", VA = "0x8A0C84", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669E70", Offset = "0x669E70")]
	public override IEnumerator ObjectiveCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback)
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x8A0D5C", Offset = "0x8A0D5C", VA = "0x8A0D5C")]
	public TutorialObjectiveVideo()
	{
	}
}
[Token(Token = "0x2000077")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x648748", Offset = "0x648748")]
public class TutorialObjectiveWalk : TutorialObjective
{
	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D0F8", Offset = "0x64D0F8")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x8A1214", Offset = "0x8A1214", VA = "0x8A1214")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x8A121C", Offset = "0x8A121C", VA = "0x8A121C")]
		internal bool <ObjectiveCoro>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D108", Offset = "0x64D108")]
	private sealed class <ObjectiveCoro>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialManager _tutorialManager;

		[Token(Token = "0x170001FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x8A134C", Offset = "0x8A134C", VA = "0x8A134C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0x8A13BC", Offset = "0x8A13BC", VA = "0x8A13BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x8A11E0", Offset = "0x8A11E0", VA = "0x8A11E0")]
		[DebuggerHidden]
		public <ObjectiveCoro>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x8A1248", Offset = "0x8A1248", VA = "0x8A1248", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x8A124C", Offset = "0x8A124C", VA = "0x8A124C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x8A1354", Offset = "0x8A1354", VA = "0x8A1354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x8A116C", Offset = "0x8A116C", VA = "0x8A116C", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669ED4", Offset = "0x669ED4")]
	public override IEnumerator ObjectiveCoro(TutorialManager _tutorialManager, [Optional] Coroutine coroutineCallback)
	{
		return null;
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x8A120C", Offset = "0x8A120C", VA = "0x8A120C")]
	public TutorialObjectiveWalk()
	{
	}
}
[Token(Token = "0x2000078")]
public class TutorialProjectile : DamageDealer
{
	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destroyOnCollision;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x8A1778", Offset = "0x8A1778", VA = "0x8A1778")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x8A18D4", Offset = "0x8A18D4", VA = "0x8A18D4")]
	public TutorialProjectile()
	{
	}
}
[Token(Token = "0x2000079")]
public class TutorialSheepRolling : MonoBehaviour
{
	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PathCreator path;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationSpeed;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float moveSpeed;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform sheepTransfrom;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float pathProgress;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool inverted;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x8A18E4", Offset = "0x8A18E4", VA = "0x8A18E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x8A1AF0", Offset = "0x8A1AF0", VA = "0x8A1AF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x8A1AF8", Offset = "0x8A1AF8", VA = "0x8A1AF8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x8A1DEC", Offset = "0x8A1DEC", VA = "0x8A1DEC")]
	public TutorialSheepRolling()
	{
	}
}
[Token(Token = "0x200007A")]
public class CustomWolfWavesLevelObjective : LevelObjective
{
	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D118", Offset = "0x64D118")]
	private sealed class <BeginWavesCoro>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomWolfWavesLevelObjective <>4__this;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaveSpawner <waveSpawner>5__2;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <minSheep>5__3;

		[Token(Token = "0x17000200")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0x855F24", Offset = "0x855F24", VA = "0x855F24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0x855F94", Offset = "0x855F94", VA = "0x855F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x8559C0", Offset = "0x8559C0", VA = "0x8559C0")]
		[DebuggerHidden]
		public <BeginWavesCoro>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x855B44", Offset = "0x855B44", VA = "0x855B44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x855B48", Offset = "0x855B48", VA = "0x855B48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x855F2C", Offset = "0x855F2C", VA = "0x855F2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652A88", Offset = "0x652A88")]
	public int numberHitsToWin;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numberOfWaves;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int startingSheep;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int acceptableSheepLoss;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxWolvesAlive;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delayBeforeWaves;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float secondsBetweenWaves;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 secondsBetweenSpawns;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WaveSpawner.WaveGrowth waveGrowth;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int waveToStartAggroWolves;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652AC0", Offset = "0x652AC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652AC0", Offset = "0x652AC0")]
	public GameObject wolfPrefab;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sheepPrefab;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652B10", Offset = "0x652B10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652B10", Offset = "0x652B10")]
	public Transform[] bushes;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool gameStart;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Sheep> sheepList;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int hitCount;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x855724", Offset = "0x855724", VA = "0x855724")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x8557C0", Offset = "0x8557C0", VA = "0x8557C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x85585C", Offset = "0x85585C", VA = "0x85585C")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x855920", Offset = "0x855920", VA = "0x855920")]
	public void BeginWaves()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x85594C", Offset = "0x85594C", VA = "0x85594C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669F38", Offset = "0x669F38")]
	private IEnumerator BeginWavesCoro()
	{
		return null;
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x8559EC", Offset = "0x8559EC", VA = "0x8559EC")]
	public void SheepDeath(Sheep sheep)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x855A5C", Offset = "0x855A5C", VA = "0x855A5C")]
	public CustomWolfWavesLevelObjective()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x855B30", Offset = "0x855B30", VA = "0x855B30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669F9C", Offset = "0x669F9C")]
	private void <BeginWavesCoro>b__20_0(int i)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x855B3C", Offset = "0x855B3C", VA = "0x855B3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669FAC", Offset = "0x669FAC")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x200007B")]
public class EndlessWaveSpawner : MonoBehaviour
{
	[Token(Token = "0x20003AF")]
	public enum WaveGrowth
	{
		[Token(Token = "0x4001C8A")]
		CurrentWave,
		[Token(Token = "0x4001C8B")]
		Exponential,
		[Token(Token = "0x4001C8C")]
		ZombLike,
		[Token(Token = "0x4001C8D")]
		ZombLikeHalved
	}

	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D128", Offset = "0x64D128")]
	private sealed class <StartWave>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndlessWaveSpawner <>4__this;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Sheep> sheep;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] bushes;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <waveDead>5__2;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <numSpawnedInWave>5__3;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x85A0AC", Offset = "0x85A0AC", VA = "0x85A0AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x85A11C", Offset = "0x85A11C", VA = "0x85A11C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x8594E4", Offset = "0x8594E4", VA = "0x8594E4")]
		[DebuggerHidden]
		public <StartWave>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x8598D4", Offset = "0x8598D4", VA = "0x8598D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x8598D8", Offset = "0x8598D8", VA = "0x8598D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x85A0B4", Offset = "0x85A0B4", VA = "0x85A0B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652B60", Offset = "0x652B60")]
	public int numOfSpawns;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radius;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int wolvesInWave;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int lionsInWave;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int bearsInWave;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int maxWolvesAlive;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int currentWave;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652B74", Offset = "0x652B74")]
	public bool debug;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x652B88", Offset = "0x652B88")]
	public List<Vector3> spawnPositions;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine startWaveCoro;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int randomNumIndex;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject wolfPrefab;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject lionPrefab;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject bearPrefab;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeBetweenWaves;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 timeBetweenSpawns;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public WaveGrowth waveGrowth;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<int> onWaveEnd;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int waveToStartAggoWolves;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int waveToStartLions;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int waveToStartBears;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject wolves;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject lions;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject bears;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int currentWolvesAlive;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int currentLionsAlive;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int currentBearsAlive;

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x859060", Offset = "0x859060", VA = "0x859060")]
	public void Initialize(GameObject _waveEnemy, int _maxUnitsAlive, float _timeBetweenWaves, Vector2 _timeBetweenSpawns, WaveGrowth _waveGrowth, Action<int> _onWaveEnd, int _aggroWolfStart)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x8593C8", Offset = "0x8593C8", VA = "0x8593C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x859434", Offset = "0x859434", VA = "0x859434")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x859438", Offset = "0x859438", VA = "0x859438")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669FE4", Offset = "0x669FE4")]
	public IEnumerator StartWave(List<Sheep> sheep, Transform[] bushes)
	{
		return null;
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x859510", Offset = "0x859510", VA = "0x859510")]
	public void StartWaveCoro(List<Sheep> sheep, Transform[] bushes)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x8591EC", Offset = "0x8591EC", VA = "0x8591EC")]
	public void GenerateSpawns()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x859578", Offset = "0x859578", VA = "0x859578")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x85965C", Offset = "0x85965C", VA = "0x85965C")]
	public void DestroySpawns()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x8596BC", Offset = "0x8596BC", VA = "0x8596BC")]
	private int CalculateNumberOfUnits(int _currentWave)
	{
		return default(int);
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x8597EC", Offset = "0x8597EC", VA = "0x8597EC")]
	public EndlessWaveSpawner()
	{
	}
}
[Token(Token = "0x200007C")]
public class EndlessWolvesLevelObjective : LevelObjective
{
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D138", Offset = "0x64D138")]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndlessWolvesLevelObjective <>4__this;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EndlessWaveSpawner <waveSpawner>5__2;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <minSheep>5__3;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x993144", Offset = "0x993144", VA = "0x993144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x9931B4", Offset = "0x9931B4", VA = "0x9931B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x992CF4", Offset = "0x992CF4", VA = "0x992CF4")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x992E70", Offset = "0x992E70", VA = "0x992E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x992E74", Offset = "0x992E74", VA = "0x992E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x99314C", Offset = "0x99314C", VA = "0x99314C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652B98", Offset = "0x652B98")]
	public int startingSheep;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int acceptableSheepLoss;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxWolvesAlive;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delayBeforeWaves;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float secondsBetweenWaves;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 secondsBetweenSpawns;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EndlessWaveSpawner.WaveGrowth waveGrowth;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int waveToStartAggroWolves;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652BD0", Offset = "0x652BD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652BD0", Offset = "0x652BD0")]
	public GameObject wolfPrefab;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sheepPrefab;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652C20", Offset = "0x652C20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652C20", Offset = "0x652C20")]
	public Transform[] bushes;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool gameStart;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Sheep> sheepList;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EndlessWolvesLevelObjective instance;

	[Token(Token = "0x17000054")]
	public static EndlessWolvesLevelObjective Instance
	{
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x9929A0", Offset = "0x9929A0", VA = "0x9929A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x9929F0", Offset = "0x9929F0", VA = "0x9929F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x992C80", Offset = "0x992C80", VA = "0x992C80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A048", Offset = "0x66A048")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x992D20", Offset = "0x992D20", VA = "0x992D20")]
	public void SheepDeath(Sheep sheep)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x992D90", Offset = "0x992D90", VA = "0x992D90")]
	public EndlessWolvesLevelObjective()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x992E5C", Offset = "0x992E5C", VA = "0x992E5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A0AC", Offset = "0x66A0AC")]
	private void <Start>b__17_0(int i)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x992E68", Offset = "0x992E68", VA = "0x992E68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A0BC", Offset = "0x66A0BC")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x200007D")]
public class ScriptedJesse : MonoBehaviour
{
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D148", Offset = "0x64D148")]
	private sealed class <PastureCoro>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedJesse <>4__this;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x159BFB4", Offset = "0x159BFB4", VA = "0x159BFB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x159C024", Offset = "0x159C024", VA = "0x159C024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x159B80C", Offset = "0x159B80C", VA = "0x159B80C")]
		[DebuggerHidden]
		public <PastureCoro>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x159BA10", Offset = "0x159BA10", VA = "0x159BA10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x159BA14", Offset = "0x159BA14", VA = "0x159BA14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x159BFBC", Offset = "0x159BFBC", VA = "0x159BFBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652C70", Offset = "0x652C70")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Animator animator;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected NavMeshAgent agent;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652CDC", Offset = "0x652CDC")]
	[SerializeField]
	protected AudioClip audioClip1;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652D28", Offset = "0x652D28")]
	[SerializeField]
	protected Transform exitLocation;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform headsetTransform;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitUntil waitUntilIdle;

	[Token(Token = "0x17000055")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x159B63C", Offset = "0x159B63C", VA = "0x159B63C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x159B6E4", Offset = "0x159B6E4", VA = "0x159B6E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x159B798", Offset = "0x159B798", VA = "0x159B798")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A0F4", Offset = "0x66A0F4")]
	private IEnumerator PastureCoro()
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x159B838", Offset = "0x159B838", VA = "0x159B838")]
	public ScriptedJesse()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x159B840", Offset = "0x159B840", VA = "0x159B840")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A158", Offset = "0x66A158")]
	private bool <Start>b__9_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x159B914", Offset = "0x159B914", VA = "0x159B914")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A168", Offset = "0x66A168")]
	private bool <PastureCoro>b__10_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x200007E")]
public class Sheep : Actor
{
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D158", Offset = "0x64D158")]
	private sealed class <MainCoro>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sheep <>4__this;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x8C4A24", Offset = "0x8C4A24", VA = "0x8C4A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x8C4A94", Offset = "0x8C4A94", VA = "0x8C4A94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x8C2DDC", Offset = "0x8C2DDC", VA = "0x8C2DDC")]
		[DebuggerHidden]
		public <MainCoro>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x8C48D8", Offset = "0x8C48D8", VA = "0x8C48D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x8C48DC", Offset = "0x8C48DC", VA = "0x8C48DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x8C4A2C", Offset = "0x8C4A2C", VA = "0x8C4A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D168", Offset = "0x64D168")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sheep <>4__this;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 destination;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float startTime;

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x8C3A7C", Offset = "0x8C3A7C", VA = "0x8C3A7C")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x8C3A84", Offset = "0x8C3A84", VA = "0x8C3A84")]
		internal bool <WanderCoro>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D178", Offset = "0x64D178")]
	private sealed class <WanderCoro>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sheep <>4__this;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002001")]
			[Address(RVA = "0x8C4D58", Offset = "0x8C4D58", VA = "0x8C4D58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002003")]
			[Address(RVA = "0x8C4DC8", Offset = "0x8C4DC8", VA = "0x8C4DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x8C30A4", Offset = "0x8C30A4", VA = "0x8C30A4")]
		[DebuggerHidden]
		public <WanderCoro>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x8C4A9C", Offset = "0x8C4A9C", VA = "0x8C4A9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x8C4AA0", Offset = "0x8C4AA0", VA = "0x8C4AA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x8C4D60", Offset = "0x8C4D60", VA = "0x8C4D60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D188", Offset = "0x64D188")]
	private sealed class <IdleCoro>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sheep <>4__this;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002007")]
			[Address(RVA = "0x8C4860", Offset = "0x8C4860", VA = "0x8C4860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002009")]
			[Address(RVA = "0x8C48D0", Offset = "0x8C48D0", VA = "0x8C48D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x8C3144", Offset = "0x8C3144", VA = "0x8C3144")]
		[DebuggerHidden]
		public <IdleCoro>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x8C4658", Offset = "0x8C4658", VA = "0x8C4658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x8C465C", Offset = "0x8C465C", VA = "0x8C465C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x8C4868", Offset = "0x8C4868", VA = "0x8C4868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D198", Offset = "0x64D198")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sheep <>4__this;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 targetPos;

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x8C3BC8", Offset = "0x8C3BC8", VA = "0x8C3BC8")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x8C3BD0", Offset = "0x8C3BD0", VA = "0x8C3BD0")]
		internal bool <FleeCoro>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D1A8", Offset = "0x64D1A8")]
	private sealed class <FleeCoro>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sheep <>4__this;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x8C45E0", Offset = "0x8C45E0", VA = "0x8C45E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x8C4650", Offset = "0x8C4650", VA = "0x8C4650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x8C31E4", Offset = "0x8C31E4", VA = "0x8C31E4")]
		[DebuggerHidden]
		public <FleeCoro>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x8C4198", Offset = "0x8C4198", VA = "0x8C4198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x8C419C", Offset = "0x8C419C", VA = "0x8C419C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x8C45E8", Offset = "0x8C45E8", VA = "0x8C45E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D1B8", Offset = "0x64D1B8")]
	private sealed class <DropCoro>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sheep <>4__this;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion <rot>5__2;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <pct>5__3;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <start>5__4;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x8C4120", Offset = "0x8C4120", VA = "0x8C4120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x8C4190", Offset = "0x8C4190", VA = "0x8C4190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x8C349C", Offset = "0x8C349C", VA = "0x8C349C")]
		[DebuggerHidden]
		public <DropCoro>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x8C3CF8", Offset = "0x8C3CF8", VA = "0x8C3CF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x8C3CFC", Offset = "0x8C3CFC", VA = "0x8C3CFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x8C4128", Offset = "0x8C4128", VA = "0x8C4128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D1C8", Offset = "0x64D1C8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction <>9__40_0;

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x8C3A70", Offset = "0x8C3A70", VA = "0x8C3A70")]
		public <>c()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x8C3A78", Offset = "0x8C3A78", VA = "0x8C3A78")]
		internal void <.ctor>b__40_0()
		{
		}
	}

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652D74", Offset = "0x652D74")]
	public float wanderRadius;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x652DAC", Offset = "0x652DAC")]
	public Rigidbody rb;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NavMeshAgent agent;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float wanderCD;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 wanderOrigin;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lastWanderTime;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool grabbed;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastBaaTime;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float BaaCD;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IEnumerator currentAction;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private IEnumerator mainCoro;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool interrupted;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x652DCC", Offset = "0x652DCC")]
	public List<Transform> nearbyWolves;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WaitUntil waitUntilIdle;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private VRTK_InteractableObject interactableObject;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VRTK_ChildOfControllerGrabAttach grabAttach;

	[Token(Token = "0x400048A")]
	private const int MAX_LOOPS_PER_FRAME_FAILSAFE = 1000;

	[Token(Token = "0x1400000F")]
	public event UnityAction OnGrabbed
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x8C29D4", Offset = "0x8C29D4", VA = "0x8C29D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A178", Offset = "0x66A178")]
		add
		{
		}
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x8C2AC0", Offset = "0x8C2AC0", VA = "0x8C2AC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A188", Offset = "0x66A188")]
		remove
		{
		}
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x8C2BAC", Offset = "0x8C2BAC", VA = "0x8C2BAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x8C2D28", Offset = "0x8C2D28", VA = "0x8C2D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x8C2D68", Offset = "0x8C2D68", VA = "0x8C2D68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A198", Offset = "0x66A198")]
	private IEnumerator MainCoro()
	{
		return null;
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x8C2E08", Offset = "0x8C2E08", VA = "0x8C2E08")]
	private Coroutine HandleMove(IEnumerator attackCoroutine)
	{
		return null;
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x8C2E14", Offset = "0x8C2E14", VA = "0x8C2E14")]
	public void InterruptCurrentMove()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x8C3030", Offset = "0x8C3030", VA = "0x8C3030")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A1FC", Offset = "0x66A1FC")]
	private IEnumerator WanderCoro()
	{
		return null;
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x8C30D0", Offset = "0x8C30D0", VA = "0x8C30D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A260", Offset = "0x66A260")]
	private IEnumerator IdleCoro()
	{
		return null;
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x8C3170", Offset = "0x8C3170", VA = "0x8C3170")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A2C4", Offset = "0x66A2C4")]
	private IEnumerator FleeCoro()
	{
		return null;
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x8C3210", Offset = "0x8C3210", VA = "0x8C3210")]
	private Vector3 GetRandomPosOnNavMesh(Vector3 center, float radius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x8C3348", Offset = "0x8C3348", VA = "0x8C3348")]
	public void GetGrabbed()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x8C33FC", Offset = "0x8C33FC", VA = "0x8C33FC")]
	public void GetDropped()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x8C3428", Offset = "0x8C3428", VA = "0x8C3428")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A328", Offset = "0x66A328")]
	private IEnumerator DropCoro()
	{
		return null;
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x8C34C8", Offset = "0x8C34C8", VA = "0x8C34C8")]
	public bool IsGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x8C34D0", Offset = "0x8C34D0", VA = "0x8C34D0")]
	public float LastWanderTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x8C34D8", Offset = "0x8C34D8", VA = "0x8C34D8")]
	public float GetWanderCD()
	{
		return default(float);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x8C34E0", Offset = "0x8C34E0", VA = "0x8C34E0")]
	public void AddChasingWolf(Transform wolf)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x8C3550", Offset = "0x8C3550", VA = "0x8C3550")]
	public void RemoveChasingWolf(Transform wolf)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x8C35C0", Offset = "0x8C35C0", VA = "0x8C35C0")]
	public bool FarFromHome()
	{
		return default(bool);
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x8C369C", Offset = "0x8C369C", VA = "0x8C369C")]
	public void Die()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x8C373C", Offset = "0x8C373C", VA = "0x8C373C")]
	public Sheep()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x8C3868", Offset = "0x8C3868", VA = "0x8C3868")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A38C", Offset = "0x66A38C")]
	private bool <Awake>b__20_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x8C394C", Offset = "0x8C394C", VA = "0x8C394C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A39C", Offset = "0x66A39C")]
	private bool <IdleCoro>b__27_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x200007F")]
public class WaveSpawner : MonoBehaviour
{
	[Token(Token = "0x20003BB")]
	public enum WaveGrowth
	{
		[Token(Token = "0x4001CB7")]
		CurrentWave,
		[Token(Token = "0x4001CB8")]
		Exponential,
		[Token(Token = "0x4001CB9")]
		ZombLike,
		[Token(Token = "0x4001CBA")]
		ZombLikeHalved
	}

	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D1D8", Offset = "0x64D1D8")]
	private sealed class <StartWave>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveSpawner <>4__this;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Sheep> sheep;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] bushes;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <waveDead>5__2;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <numSpawnedInWave>5__3;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600201E")]
			[Address(RVA = "0x945BFC", Offset = "0x945BFC", VA = "0x945BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002020")]
			[Address(RVA = "0x945C6C", Offset = "0x945C6C", VA = "0x945C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x944B3C", Offset = "0x944B3C", VA = "0x944B3C")]
		[DebuggerHidden]
		public <StartWave>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x945118", Offset = "0x945118", VA = "0x945118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x94511C", Offset = "0x94511C", VA = "0x94511C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x945C04", Offset = "0x945C04", VA = "0x945C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652DDC", Offset = "0x652DDC")]
	public int numOfSpawns;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radius;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int unitsInWave;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int maxUnitsAlive;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int currentWave;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x652DF0", Offset = "0x652DF0")]
	public bool debug;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x652E04", Offset = "0x652E04")]
	public Vector3[] spawnPositions;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine startWaveCoro;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int randomNumIndex;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject unitPrefab;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numberOfWaves;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float timeBetweenWaves;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2 timeBetweenSpawns;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WaveGrowth waveGrowth;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<int> onWaveEnd;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int waveToStartAggoWolves;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject units;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x944724", Offset = "0x944724", VA = "0x944724")]
	public void Initialize(GameObject _waveEnemy, int _numberOfWaves, int _maxUnitsAlive, float _timeBetweenWaves, Vector2 _timeBetweenSpawns, WaveGrowth _waveGrowth, Action<int> _onWaveEnd, int _aggroWolfStart)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x944A20", Offset = "0x944A20", VA = "0x944A20")]
	private void Start()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x944A8C", Offset = "0x944A8C", VA = "0x944A8C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x944A90", Offset = "0x944A90", VA = "0x944A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A3AC", Offset = "0x66A3AC")]
	public IEnumerator StartWave(List<Sheep> sheep, Transform[] bushes)
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x944B68", Offset = "0x944B68", VA = "0x944B68")]
	public void StartWaveCoro(List<Sheep> sheep, Transform[] bushes)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x944840", Offset = "0x944840", VA = "0x944840")]
	public void GenerateSpawns()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x944BD0", Offset = "0x944BD0", VA = "0x944BD0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x944C98", Offset = "0x944C98", VA = "0x944C98")]
	private int CalculateNumberOfUnits(int _currentWave)
	{
		return default(int);
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x944DC8", Offset = "0x944DC8", VA = "0x944DC8")]
	private string WaveCountsToString()
	{
		return null;
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x9450A0", Offset = "0x9450A0", VA = "0x9450A0")]
	public WaveSpawner()
	{
	}
}
[Token(Token = "0x2000080")]
public class Wolf : Actor
{
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D1E8", Offset = "0x64D1E8")]
	private sealed class <MainCoro>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wolf <>4__this;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002024")]
			[Address(RVA = "0x9503C0", Offset = "0x9503C0", VA = "0x9503C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002026")]
			[Address(RVA = "0x950430", Offset = "0x950430", VA = "0x950430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x94BDB4", Offset = "0x94BDB4", VA = "0x94BDB4")]
		[DebuggerHidden]
		public <MainCoro>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x94FEA0", Offset = "0x94FEA0", VA = "0x94FEA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x94FEA4", Offset = "0x94FEA4", VA = "0x94FEA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x9503C8", Offset = "0x9503C8", VA = "0x9503C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D1F8", Offset = "0x64D1F8")]
	private sealed class <AttackCoro>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wolf <>4__this;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <reachedPlayer>5__2;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] <hits>5__3;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600202A")]
			[Address(RVA = "0x94ECE8", Offset = "0x94ECE8", VA = "0x94ECE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600202C")]
			[Address(RVA = "0x94ED58", Offset = "0x94ED58", VA = "0x94ED58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x94C0B0", Offset = "0x94C0B0", VA = "0x94C0B0")]
		[DebuggerHidden]
		public <AttackCoro>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x94E250", Offset = "0x94E250", VA = "0x94E250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x94E254", Offset = "0x94E254", VA = "0x94E254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x94ECF0", Offset = "0x94ECF0", VA = "0x94ECF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D208", Offset = "0x64D208")]
	private sealed class <GrabSheepCoro>d__92 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wolf <>4__this;

		[Token(Token = "0x17000218")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002030")]
			[Address(RVA = "0x94F934", Offset = "0x94F934", VA = "0x94F934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002032")]
			[Address(RVA = "0x94F9A4", Offset = "0x94F9A4", VA = "0x94F9A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x94C150", Offset = "0x94C150", VA = "0x94C150")]
		[DebuggerHidden]
		public <GrabSheepCoro>d__92(int <>1__state)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x94F3E4", Offset = "0x94F3E4", VA = "0x94F3E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x94F3E8", Offset = "0x94F3E8", VA = "0x94F3E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x94F93C", Offset = "0x94F93C", VA = "0x94F93C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D218", Offset = "0x64D218")]
	private sealed class <SneakToBushCoro>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wolf <>4__this;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002036")]
			[Address(RVA = "0x950E30", Offset = "0x950E30", VA = "0x950E30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0x950EA0", Offset = "0x950EA0", VA = "0x950EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x94C1F0", Offset = "0x94C1F0", VA = "0x94C1F0")]
		[DebuggerHidden]
		public <SneakToBushCoro>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x950A48", Offset = "0x950A48", VA = "0x950A48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x950A4C", Offset = "0x950A4C", VA = "0x950A4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x950E38", Offset = "0x950E38", VA = "0x950E38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D228", Offset = "0x64D228")]
	private sealed class <EscapeCoro>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wolf <>4__this;

		[Token(Token = "0x1700021C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0x94F36C", Offset = "0x94F36C", VA = "0x94F36C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0x94F3DC", Offset = "0x94F3DC", VA = "0x94F3DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x94C290", Offset = "0x94C290", VA = "0x94C290")]
		[DebuggerHidden]
		public <EscapeCoro>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x94F120", Offset = "0x94F120", VA = "0x94F120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x94F124", Offset = "0x94F124", VA = "0x94F124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x94F374", Offset = "0x94F374", VA = "0x94F374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D238", Offset = "0x64D238")]
	private sealed class <RotateTowards>d__95 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wolf <>4__this;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotTarget;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <targetDir>5__2;

		[Token(Token = "0x1700021E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002042")]
			[Address(RVA = "0x9509D0", Offset = "0x9509D0", VA = "0x9509D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0x950A40", Offset = "0x950A40", VA = "0x950A40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x94C368", Offset = "0x94C368", VA = "0x94C368")]
		[DebuggerHidden]
		public <RotateTowards>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x950438", Offset = "0x950438", VA = "0x950438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x95043C", Offset = "0x95043C", VA = "0x95043C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x9509D8", Offset = "0x9509D8", VA = "0x9509D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D248", Offset = "0x64D248")]
	private sealed class <Jump>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wolf <>4__this;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <endPos>5__2;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <dest>5__3;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <dir>5__4;

		[Token(Token = "0x17000220")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002048")]
			[Address(RVA = "0x94FE28", Offset = "0x94FE28", VA = "0x94FE28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600204A")]
			[Address(RVA = "0x94FE98", Offset = "0x94FE98", VA = "0x94FE98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x94D218", Offset = "0x94D218", VA = "0x94D218")]
		[DebuggerHidden]
		public <Jump>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x94F9AC", Offset = "0x94F9AC", VA = "0x94F9AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x94F9B0", Offset = "0x94F9B0", VA = "0x94F9B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x94FE30", Offset = "0x94FE30", VA = "0x94FE30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D258", Offset = "0x64D258")]
	private sealed class <Die>d__110 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wolf <>4__this;

		[Token(Token = "0x17000222")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600204E")]
			[Address(RVA = "0x94F0A8", Offset = "0x94F0A8", VA = "0x94F0A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002050")]
			[Address(RVA = "0x94F118", Offset = "0x94F118", VA = "0x94F118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x94D3C4", Offset = "0x94D3C4", VA = "0x94D3C4")]
		[DebuggerHidden]
		public <Die>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x94ED60", Offset = "0x94ED60", VA = "0x94ED60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x94ED64", Offset = "0x94ED64", VA = "0x94ED64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x94F0B0", Offset = "0x94F0B0", VA = "0x94F0B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652E14", Offset = "0x652E14")]
	[SerializeField]
	protected Transform[] bushes;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Vector3[] exits;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Renderer rendererRef;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652E80", Offset = "0x652E80")]
	[SerializeField]
	protected bool placedInWorld;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected float sneakSpeed;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected float runWithSheepSpeed;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected float runSpeed;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected float sprintSpeed;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	protected float minWaitTime;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected float maxWaitTime;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public AnimationCurve grabPrioCurve;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected LayerMask sightLayerMask;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652F4C", Offset = "0x652F4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652F4C", Offset = "0x652F4C")]
	[SerializeField]
	public float aggression;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public float aggroRange;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652FC0", Offset = "0x652FC0")]
	public List<Sheep> sheepList;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	protected Transform grabSpot;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected float sheepGrabRange;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653018", Offset = "0x653018")]
	[SerializeField]
	protected float grabNormalizedTime;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653058", Offset = "0x653058")]
	[SerializeField]
	protected Transform attackOrigin;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected float pounceRange;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	protected float distanceToLandFromPlayer;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected float pounceDamageRadius;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6530D4", Offset = "0x6530D4")]
	[SerializeField]
	protected float dmgTime;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653114", Offset = "0x653114")]
	[SerializeField]
	protected float airbornStart;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653154", Offset = "0x653154")]
	[SerializeField]
	protected float airbornEnd;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected float flightTimeMul;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	protected float pounceHeight;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected AnimationCurve pounceHeightCurve;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	protected LayerMask defaultDamageMask;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6531D4", Offset = "0x6531D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6531D4", Offset = "0x6531D4")]
	[SerializeField]
	protected float jumpStart;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653238", Offset = "0x653238")]
	[SerializeField]
	protected float jumpEnd;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform playAreaTransform;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform headsetTransform;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private NavMeshAgent agent;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Sheep targetSheep;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform closestBush;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int bushIndex;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Animator anim;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool attemptGrabSheep;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool hasSheep;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	private bool attemptAttackPlayer;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	private bool isFleeing;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x653278", Offset = "0x653278")]
	public bool aggro;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool interrupted;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
	private bool waitStarted;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float waitStartTime;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float waitDuration;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool shouldAlertActionDone;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool chasingSheep;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	private bool isAttacking;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform target;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool facePlayer;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<Transform> bushPath;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 sheepStartPos;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool jumpStarted;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private WaitUntil waitUntilIdle;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 chosenExit;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool turnlock;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float turnStart;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool trot;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	private bool dead;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	private bool initialized;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private IEnumerator currentAction;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private IEnumerator mainCoro;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector2 smoothDeltaPosition;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector2 velocity;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private readonly int pounceAttackParam;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private readonly int grabParam;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private readonly int deadParam;

	[Token(Token = "0x40004E1")]
	private const int MAX_LOOPS_PER_FRAME_FAILSAFE = 1000;

	[Token(Token = "0x17000056")]
	private float DistFromPlayer
	{
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x94A424", Offset = "0x94A424", VA = "0x94A424")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000057")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x674F54", Offset = "0x674F54")]
	public Vector3 PlayerRootPos
	{
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x94A4FC", Offset = "0x94A4FC", VA = "0x94A4FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000058")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x674F64", Offset = "0x674F64")]
	public Transform PlayAreaTransform
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x94A688", Offset = "0x94A688", VA = "0x94A688")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x674F74", Offset = "0x674F74")]
	public Transform HeadsetTransform
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x94A730", Offset = "0x94A730", VA = "0x94A730")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x94A7D8", Offset = "0x94A7D8", VA = "0x94A7D8", Slot = "4")]
	public override void Activate()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x945858", Offset = "0x945858", VA = "0x945858")]
	public void Initialize(float aggressionIn, float aggroRangeIn, List<Sheep> sheepListIn, Transform[] bushesIn, Vector3[] exitsIn)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x94AE98", Offset = "0x94AE98", VA = "0x94AE98")]
	private void Start()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x94AF34", Offset = "0x94AF34", VA = "0x94AF34", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x94AFC0", Offset = "0x94AFC0", VA = "0x94AFC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x94BB9C", Offset = "0x94BB9C", VA = "0x94BB9C")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x94AE24", Offset = "0x94AE24", VA = "0x94AE24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A410", Offset = "0x66A410")]
	private IEnumerator MainCoro()
	{
		return null;
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x94BDE0", Offset = "0x94BDE0", VA = "0x94BDE0")]
	private Coroutine HandleMove(IEnumerator attackCoroutine)
	{
		return null;
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x94B980", Offset = "0x94B980", VA = "0x94B980")]
	public void InterruptCurrentMove()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x94BDEC", Offset = "0x94BDEC", VA = "0x94BDEC")]
	public void Sneak()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x94BE80", Offset = "0x94BE80", VA = "0x94BE80")]
	public void EndSneak()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x94BF14", Offset = "0x94BF14", VA = "0x94BF14")]
	public void Sprint()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x94BFA8", Offset = "0x94BFA8", VA = "0x94BFA8")]
	public void EndSprint()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x94C03C", Offset = "0x94C03C", VA = "0x94C03C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A474", Offset = "0x66A474")]
	private IEnumerator AttackCoro()
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x94C0DC", Offset = "0x94C0DC", VA = "0x94C0DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A4D8", Offset = "0x66A4D8")]
	private IEnumerator GrabSheepCoro()
	{
		return null;
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x94C17C", Offset = "0x94C17C", VA = "0x94C17C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A53C", Offset = "0x66A53C")]
	private IEnumerator SneakToBushCoro()
	{
		return null;
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x94C21C", Offset = "0x94C21C", VA = "0x94C21C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A5A0", Offset = "0x66A5A0")]
	private IEnumerator EscapeCoro()
	{
		return null;
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x94C2BC", Offset = "0x94C2BC", VA = "0x94C2BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A604", Offset = "0x66A604")]
	private IEnumerator RotateTowards(Vector3 rotTarget)
	{
		return null;
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x94C394", Offset = "0x94C394", VA = "0x94C394")]
	public float GetDistToTargetSheep()
	{
		return default(float);
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x94C4E8", Offset = "0x94C4E8", VA = "0x94C4E8")]
	public float GetPlayerDistToSheep()
	{
		return default(float);
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x94A7F4", Offset = "0x94A7F4", VA = "0x94A7F4")]
	public void ChooseTargetSheep()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x94C5E8", Offset = "0x94C5E8", VA = "0x94C5E8")]
	public Sheep GetClosestSheep()
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x94C7EC", Offset = "0x94C7EC", VA = "0x94C7EC")]
	public bool HasSheep()
	{
		return default(bool);
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x94C7F4", Offset = "0x94C7F4", VA = "0x94C7F4")]
	public float GetClosestBush()
	{
		return default(float);
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x94CC18", Offset = "0x94CC18", VA = "0x94CC18")]
	public Transform GetClosestBushToObjInDirection(Transform objTrans, Vector3 mainDirection, Transform finalObj)
	{
		return null;
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x94AB6C", Offset = "0x94AB6C", VA = "0x94AB6C")]
	public List<Transform> FindBushPath()
	{
		return null;
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x94D038", Offset = "0x94D038", VA = "0x94D038")]
	public Vector3 GetClosestExit()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x94B90C", Offset = "0x94B90C", VA = "0x94B90C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A668", Offset = "0x66A668")]
	private IEnumerator Jump()
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x94D244", Offset = "0x94D244", VA = "0x94D244")]
	public void Actor_Damaged(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x94D2F8", Offset = "0x94D2F8", VA = "0x94D2F8")]
	public void Stun()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x94D338", Offset = "0x94D338", VA = "0x94D338")]
	public void StopMovement()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x94D39C", Offset = "0x94D39C", VA = "0x94D39C")]
	public void InterruptActions()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x94D284", Offset = "0x94D284", VA = "0x94D284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A6CC", Offset = "0x66A6CC")]
	public IEnumerator Die()
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x94D3F0", Offset = "0x94D3F0", VA = "0x94D3F0")]
	private Vector3 FindGoodPosAroundPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x94D86C", Offset = "0x94D86C", VA = "0x94D86C")]
	public Wolf()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x94D9C4", Offset = "0x94D9C4", VA = "0x94D9C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A730", Offset = "0x66A730")]
	private bool <Initialize>b__78_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x94DA98", Offset = "0x94DA98", VA = "0x94DA98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A740", Offset = "0x66A740")]
	private bool <AttackCoro>b__91_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x94DB58", Offset = "0x94DB58", VA = "0x94DB58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A750", Offset = "0x66A750")]
	private bool <AttackCoro>b__91_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x94DC70", Offset = "0x94DC70", VA = "0x94DC70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A760", Offset = "0x66A760")]
	private bool <GrabSheepCoro>b__92_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x94DC98", Offset = "0x94DC98", VA = "0x94DC98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A770", Offset = "0x66A770")]
	private bool <EscapeCoro>b__94_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x94DDB8", Offset = "0x94DDB8", VA = "0x94DDB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A780", Offset = "0x66A780")]
	private bool <RotateTowards>b__95_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x94DE74", Offset = "0x94DE74", VA = "0x94DE74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A790", Offset = "0x66A790")]
	private bool <RotateTowards>b__95_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x94DF30", Offset = "0x94DF30", VA = "0x94DF30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A7A0", Offset = "0x66A7A0")]
	private bool <RotateTowards>b__95_2()
	{
		return default(bool);
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x94DFEC", Offset = "0x94DFEC", VA = "0x94DFEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A7B0", Offset = "0x66A7B0")]
	private bool <RotateTowards>b__95_3()
	{
		return default(bool);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x94E0A8", Offset = "0x94E0A8", VA = "0x94E0A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A7C0", Offset = "0x66A7C0")]
	private bool <Jump>b__105_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x94E150", Offset = "0x94E150", VA = "0x94E150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A7D0", Offset = "0x66A7D0")]
	private bool <Die>b__110_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000081")]
public class WolfLevelGameManager : LevelObjective
{
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D268", Offset = "0x64D268")]
	private sealed class <Start>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WolfLevelGameManager <>4__this;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaveSpawner <waveSpawner>5__2;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <minSheep>5__3;

		[Token(Token = "0x17000224")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002054")]
			[Address(RVA = "0x9517F4", Offset = "0x9517F4", VA = "0x9517F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002056")]
			[Address(RVA = "0x951864", Offset = "0x951864", VA = "0x951864", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x95133C", Offset = "0x95133C", VA = "0x95133C")]
		[DebuggerHidden]
		public <Start>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x9514C0", Offset = "0x9514C0", VA = "0x9514C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x9514C4", Offset = "0x9514C4", VA = "0x9514C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x9517FC", Offset = "0x9517FC", VA = "0x9517FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653288", Offset = "0x653288")]
	public int numberOfWaves;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int startingSheep;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int acceptableSheepLoss;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxWolvesAlive;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float delayBeforeWaves;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float secondsBetweenWaves;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 secondsBetweenSpawns;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public WaveSpawner.WaveGrowth waveGrowth;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int waveToStartAggroWolves;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6532C0", Offset = "0x6532C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6532C0", Offset = "0x6532C0")]
	public GameObject wolfPrefab;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sheepPrefab;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x653310", Offset = "0x653310")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653310", Offset = "0x653310")]
	public Transform[] bushes;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool gameStart;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Sheep> sheepList;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WolfLevelGameManager instance;

	[Token(Token = "0x1700005A")]
	public static WolfLevelGameManager Instance
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x950FE8", Offset = "0x950FE8", VA = "0x950FE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x951038", Offset = "0x951038", VA = "0x951038")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x9512C8", Offset = "0x9512C8", VA = "0x9512C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A7E0", Offset = "0x66A7E0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x951368", Offset = "0x951368", VA = "0x951368")]
	public void SheepDeath(Sheep sheep)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x9513D8", Offset = "0x9513D8", VA = "0x9513D8")]
	public WolfLevelGameManager()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x9514A4", Offset = "0x9514A4", VA = "0x9514A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A844", Offset = "0x66A844")]
	private void <Start>b__18_0(int i)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x9514B0", Offset = "0x9514B0", VA = "0x9514B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A854", Offset = "0x66A854")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x9514B8", Offset = "0x9514B8", VA = "0x9514B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A88C", Offset = "0x66A88C")]
	[DebuggerHidden]
	private void <>n__1()
	{
	}
}
[Token(Token = "0x2000082")]
public class ChallengesMenu : Menu
{
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D278", Offset = "0x64D278")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int j;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChallengesMenu <>4__this;

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x847494", Offset = "0x847494", VA = "0x847494")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x847B18", Offset = "0x847B18", VA = "0x847B18")]
		internal void <Awake>b__4()
		{
		}
	}

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelCollection challenges;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scrollSpeed;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653360", Offset = "0x653360")]
	public GameObject buttonPrefab;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button upButton;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button downButton;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform buttonParent;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform content;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ScrollRect scrollRect;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image upOutline;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image downOutline;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected List<Button> challengeButtons;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float directionValue;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected float height;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x846F84", Offset = "0x846F84", VA = "0x846F84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x8475A4", Offset = "0x8475A4", VA = "0x8475A4", Slot = "4")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x8475CC", Offset = "0x8475CC", VA = "0x8475CC", Slot = "8")]
	public override void SaveData_Changed()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x84749C", Offset = "0x84749C", VA = "0x84749C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x8475F4", Offset = "0x8475F4", VA = "0x8475F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x8477C8", Offset = "0x8477C8", VA = "0x8477C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x847878", Offset = "0x847878", VA = "0x847878")]
	public void MoveEnter(bool isUp)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x847904", Offset = "0x847904", VA = "0x847904")]
	public void MoveExit()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x847960", Offset = "0x847960", VA = "0x847960")]
	public ChallengesMenu()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x847974", Offset = "0x847974", VA = "0x847974")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A8C4", Offset = "0x66A8C4")]
	private Button <Awake>b__13_0(LevelCollection.Mission mission)
	{
		return null;
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x847B04", Offset = "0x847B04", VA = "0x847B04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A8D4", Offset = "0x66A8D4")]
	private void <Awake>b__13_1(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x847B0C", Offset = "0x847B0C", VA = "0x847B0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A8E4", Offset = "0x66A8E4")]
	private void <Awake>b__13_2(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x847B14", Offset = "0x847B14", VA = "0x847B14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A8F4", Offset = "0x66A8F4")]
	private void <Awake>b__13_3(BaseEventData eventData)
	{
	}
}
[Token(Token = "0x2000083")]
public class ControllerLayout : MonoBehaviour
{
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D288", Offset = "0x64D288")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32 _lineColor;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color32 _outlineColor;

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x84F1E4", Offset = "0x84F1E4", VA = "0x84F1E4")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x84FE6C", Offset = "0x84FE6C", VA = "0x84FE6C")]
		internal void <Load>b__0(LabelGroup labelGroup)
		{
		}
	}

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas canvas;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SDK_BaseController.ControllerType controllerType;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653398", Offset = "0x653398")]
	public string reloadModifierText;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string dashText;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string snapTurnText;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string walkText;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string rightMenuButtonText;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string leftMenuButtonText;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string fireText;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string clairvoyanceText;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string pauseText;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6533D0", Offset = "0x6533D0")]
	public LabelGroup trigger;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LabelGroup grip;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LabelGroup buttonOne;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LabelGroup buttonTwo;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LabelGroup analogStick;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LabelGroup menu;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color32 lineColor;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Color32 outlineColor;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected List<LabelGroup> labelGroups;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ControllerLayoutPSVR controllerLayoutPSVR;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x84EE5C", Offset = "0x84EE5C", VA = "0x84EE5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x84EFB8", Offset = "0x84EFB8", VA = "0x84EFB8")]
	public void Unload()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x84EFF0", Offset = "0x84EFF0", VA = "0x84EFF0")]
	public void Load()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x84F0C4", Offset = "0x84F0C4", VA = "0x84F0C4")]
	public void Load(Color32 _lineColor, Color32 _outlineColor)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x84EE80", Offset = "0x84EE80", VA = "0x84EE80")]
	private List<LabelGroup> GetLabelGroups()
	{
		return null;
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x84F1EC", Offset = "0x84F1EC", VA = "0x84F1EC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x84F2C0", Offset = "0x84F2C0", VA = "0x84F2C0")]
	public void UpdateLabels(bool _usingSlingshot, bool _isCasual, bool _isLeftHanded)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x84FD5C", Offset = "0x84FD5C", VA = "0x84FD5C")]
	public ControllerLayout()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x84FE28", Offset = "0x84FE28", VA = "0x84FE28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A904", Offset = "0x66A904")]
	private void <Load>b__23_0(LabelGroup labelGroup)
	{
	}
}
[Serializable]
[Token(Token = "0x2000084")]
public class LabelGroup
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x6533E0", Offset = "0x6533E0")]
	public (Label, Label) labelPair;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653468", Offset = "0x653468")]
	public Transform buttonLeft;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform buttonRight;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6534A0", Offset = "0x6534A0")]
	public Transform labelLeft;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform labelRight;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6534D8", Offset = "0x6534D8")]
	public bool mergeLabels;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xC4D8C8", Offset = "0xC4D8C8", VA = "0xC4D8C8")]
	public void UpdateLineRenderers()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xC4DA18", Offset = "0xC4DA18", VA = "0xC4DA18")]
	public void SetColor(Color32 _lineColor, Color32 _outlineColor)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xC4DA88", Offset = "0xC4DA88", VA = "0xC4DA88")]
	public void Initialize(Color32 _lineColor, Color32 _outlineColor)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xC4DB78", Offset = "0xC4DB78", VA = "0xC4DB78")]
	public LabelGroup()
	{
	}
}
[Token(Token = "0x2000085")]
public class Label
{
	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly LineRenderer lineRenderer;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly Transform endTransform;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly Outline outline;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly TextMeshProUGUI textMeshProUGUI;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly Transform startTransform;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public readonly Image image;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly Transform transform;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 startPos;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xC4D328", Offset = "0xC4D328", VA = "0xC4D328")]
	public void SetText(string _text)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xC4D434", Offset = "0xC4D434", VA = "0xC4D434")]
	public void SetColor(Color32 _lineColor, Color32 _outlineColor)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xC4D544", Offset = "0xC4D544", VA = "0xC4D544")]
	public void UpdateLineRenderer([Optional] Label merger)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xC4D3AC", Offset = "0xC4D3AC", VA = "0xC4D3AC")]
	public void ToggleLabel(bool _enabled)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xC4D708", Offset = "0xC4D708", VA = "0xC4D708")]
	public Label(Transform _labelTransform, Transform _buttonTransform)
	{
	}
}
[Token(Token = "0x2000086")]
public class ControllerLayoutMenu : Menu
{
	[Serializable]
	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D298", Offset = "0x64D298")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__11_0;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<ControllerLayout> <>9__14_0;

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x850860", Offset = "0x850860", VA = "0x850860")]
		public <>c()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x850868", Offset = "0x850868", VA = "0x850868")]
		internal bool <Start>b__11_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x8508FC", Offset = "0x8508FC", VA = "0x8508FC")]
		internal void <LoadLayout>b__14_0(ControllerLayout l)
		{
		}
	}

	[Token(Token = "0x20003C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D2A8", Offset = "0x64D2A8")]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerLayoutMenu <>4__this;

		[Token(Token = "0x17000226")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002062")]
			[Address(RVA = "0x850B04", Offset = "0x850B04", VA = "0x850B04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x850B74", Offset = "0x850B74", VA = "0x850B74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x850494", Offset = "0x850494", VA = "0x850494")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x850964", Offset = "0x850964", VA = "0x850964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x850968", Offset = "0x850968", VA = "0x850968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x850B0C", Offset = "0x850B0C", VA = "0x850B0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D2B8", Offset = "0x64D2B8")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SDK_BaseController.ControllerType type;

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x850784", Offset = "0x850784", VA = "0x850784")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x850928", Offset = "0x850928", VA = "0x850928")]
		internal bool <LoadLayout>b__1(ControllerLayout l)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inPauseMenu;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6534E8", Offset = "0x6534E8")]
	public Canvas descriptionCanvas;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI descriptionText;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6534F8", Offset = "0x6534F8")]
	public List<ControllerLayout> controllerLayouts;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected ControllerLayout currentControllerLayout;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Canvas controllerLayoutCanvas;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653508", Offset = "0x653508")]
	public SDK_BaseController.ControllerType controllerType;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool debug;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x84FEB0", Offset = "0x84FEB0", VA = "0x84FEB0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x85013C", Offset = "0x85013C", VA = "0x85013C", Slot = "7")]
	public override void GameSettings_Changed(GameSettings.SettingKey arg1, int arg2)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x8502A4", Offset = "0x8502A4", VA = "0x8502A4", Slot = "6")]
	public override void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x850420", Offset = "0x850420", VA = "0x850420")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A914", Offset = "0x66A914")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x8504C0", Offset = "0x8504C0", VA = "0x8504C0")]
	private void UpdateDescription(bool _usingSlingshot, bool _isCasual, bool _isLeftHanded)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x850164", Offset = "0x850164", VA = "0x850164")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x84FEF4", Offset = "0x84FEF4", VA = "0x84FEF4")]
	public void LoadLayout(SDK_BaseController.ControllerType type)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x85078C", Offset = "0x85078C", VA = "0x85078C")]
	public ControllerLayoutMenu()
	{
	}
}
[Token(Token = "0x2000087")]
public class ControllerLayoutPSVR : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003CB")]
	public class LabelGroup
	{
		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x665278", Offset = "0x665278")]
		public (Label, Label) labelPair;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x665300", Offset = "0x665300")]
		public Transform buttonLeft;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform buttonRight;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x665338", Offset = "0x665338")]
		public Transform labelLeft;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform labelRight;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x665370", Offset = "0x665370")]
		public bool mergeLabels;

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x850DA8", Offset = "0x850DA8", VA = "0x850DA8")]
		public void UpdateLineRenderers()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x851660", Offset = "0x851660", VA = "0x851660")]
		public void SetColor(Color32 _lineColor, Color32 _outlineColor)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x851054", Offset = "0x851054", VA = "0x851054")]
		public void Initialize(Color32 _lineColor, Color32 _outlineColor)
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x8516D0", Offset = "0x8516D0", VA = "0x8516D0")]
		public LabelGroup()
		{
		}
	}

	[Token(Token = "0x20003CC")]
	public class Label
	{
		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LineRenderer lineRenderer;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Transform endTransform;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly Outline outline;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly TextMeshProUGUI textMeshProUGUI;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Transform startTransform;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Image image;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly Transform transform;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 startPos;

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x850D24", Offset = "0x850D24", VA = "0x850D24")]
		public void SetText(string _text)
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x8511CC", Offset = "0x8511CC", VA = "0x8511CC")]
		public void SetColor(Color32 _lineColor, Color32 _outlineColor)
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x8512DC", Offset = "0x8512DC", VA = "0x8512DC")]
		public void UpdateLineRenderer([Optional] Label merger)
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x851144", Offset = "0x851144", VA = "0x851144")]
		public void ToggleLabel(bool _enabled)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x8514A0", Offset = "0x8514A0", VA = "0x8514A0")]
		public Label(Transform _labelTransform, Transform _buttonTransform)
		{
		}
	}

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string snapLeftText;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string snapRightText;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string snapBackText;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string pauseText;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string clairvoyanceText;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LabelGroup square;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LabelGroup triangle;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LabelGroup x;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LabelGroup o;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LabelGroup start;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color32 lineColor;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color32 outlineColor;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected List<LabelGroup> labelGroups;

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x850B7C", Offset = "0x850B7C", VA = "0x850B7C")]
	private List<LabelGroup> GetLabelGroups()
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x850C94", Offset = "0x850C94", VA = "0x850C94")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x84F8C8", Offset = "0x84F8C8", VA = "0x84F8C8")]
	public void UpdateLabels(bool _usingSlingshot, bool _isCasual, bool _isLeftHanded)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x84F81C", Offset = "0x84F81C", VA = "0x84F81C")]
	public void Init()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x850EF8", Offset = "0x850EF8", VA = "0x850EF8")]
	public ControllerLayoutPSVR()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x851014", Offset = "0x851014", VA = "0x851014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A978", Offset = "0x66A978")]
	private void <Init>b__16_0(LabelGroup labelGroup)
	{
	}
}
[Token(Token = "0x2000088")]
public static class GameSettings
{
	[Token(Token = "0x20003CD")]
	public enum SettingKey
	{
		[Token(Token = "0x4001D01")]
		Weapon = 0,
		[Token(Token = "0x4001D02")]
		Movement = 1,
		[Token(Token = "0x4001D03")]
		LeftHanded = 2,
		[Token(Token = "0x4001D04")]
		Tutorials = 3,
		[Token(Token = "0x4001D05")]
		NotFirstLaunch = 4,
		[Token(Token = "0x4001D06")]
		VolumeMaster = 7,
		[Token(Token = "0x4001D07")]
		VolumeMusic = 8,
		[Token(Token = "0x4001D08")]
		VolumeSFX = 9,
		[Token(Token = "0x4001D09")]
		Quality = 10
	}

	[Serializable]
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D2C8", Offset = "0x64D2C8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x9A3FD0", Offset = "0x9A3FD0", VA = "0x9A3FD0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x9A3FD8", Offset = "0x9A3FD8", VA = "0x9A3FD8")]
		internal void <.cctor>b__9_0(SettingKey <p0>, int <p1>)
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event Action<SettingKey, int> Changed
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0x9A1628", Offset = "0x9A1628", VA = "0x9A1628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A988", Offset = "0x66A988")]
		add
		{
		}
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x99E2FC", Offset = "0x99E2FC", VA = "0x99E2FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A998", Offset = "0x66A998")]
		remove
		{
		}
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x9A3D38", Offset = "0x9A3D38", VA = "0x9A3D38")]
	private static string EnumToKey(SettingKey settingKey)
	{
		return null;
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x9A1754", Offset = "0x9A1754", VA = "0x9A1754")]
	public static int GetValue(SettingKey settingKey)
	{
		return default(int);
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x9A19C0", Offset = "0x9A19C0", VA = "0x9A19C0")]
	public static void SetValue(SettingKey settingKey, int val)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x9A3DE8", Offset = "0x9A3DE8", VA = "0x9A3DE8")]
	private static int GetDefaultValue(SettingKey settingKey)
	{
		return default(int);
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x9A17D4", Offset = "0x9A17D4", VA = "0x9A17D4")]
	public static void SetDefaults(bool force = false)
	{
	}
}
[Token(Token = "0x2000089")]
public class CrossPlatformLeaderboards : MonoBehaviour
{
	[Token(Token = "0x20003CF")]
	public struct SLeaderboardEntry
	{
		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int rank;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string userName;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong userId;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float score;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int weaponType;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int totalTimeTenthsOfSeconds;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int accuracyPercentage;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int remainingHealth;
	}

	[Token(Token = "0x20003D0")]
	public enum EVirtualRealityPlatform
	{
		[Token(Token = "0x4001D14")]
		SteamVr,
		[Token(Token = "0x4001D15")]
		OculusPc,
		[Token(Token = "0x4001D16")]
		OculusAndroid,
		[Token(Token = "0x4001D17")]
		Playstation4,
		[Token(Token = "0x4001D18")]
		Unknown
	}

	[Token(Token = "0x20003D1")]
	private enum ELeaderboardRequestType
	{
		[Token(Token = "0x4001D1A")]
		GetHighScores,
		[Token(Token = "0x4001D1B")]
		PostHighScore,
		[Token(Token = "0x4001D1C")]
		FetchUserName,
		[Token(Token = "0x4001D1D")]
		SteamVR_FindLeaderboardHandle
	}

	[Token(Token = "0x20003D2")]
	private struct SLeaderboardRequest
	{
		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ELeaderboardRequestType requestType;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LeaderboardDataDefinition leaderboard;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int score;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong userId;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int weaponType;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int totalTimeTenthsOfSeconds;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int accuracyPercentage;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<LeaderboardDataDefinition, List<SLeaderboardEntry>> getLeaderboardEntriesListCallback;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<ulong, string> fetchUsernameCallback;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int remainingHealth;
	}

	[Serializable]
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D2D8", Offset = "0x64D2D8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Message.Callback <>9__24_0;

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x853BD8", Offset = "0x853BD8", VA = "0x853BD8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x853BE0", Offset = "0x853BE0", VA = "0x853BE0")]
		internal void <GetCurrentPlatform>b__24_0(Message msg)
		{
		}
	}

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EVirtualRealityPlatform currentVirtualRealityPlatform;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CrossPlatformLeaderboards instance;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnNetworkError;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SLeaderboardRequest? currentLeaderboardRequest;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int currentLeaderboardRequestStateFlag;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Queue<SLeaderboardRequest> queuedLeaderboardRequests;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static Request<PlatformInitialize> oculusPlatformInitializeFunction;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static LeaderboardEntryList oculus_currentLeaderboardEntryQuery;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static bool logDebug;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private static bool hasLoggedPlatformDequeueNotImplemented;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private static bool hasLoggedGetCurrentPlatformNotImplemented;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	private static bool hasLoggedPlatformUpdateRequestsNotImplemented;

	[PreserveSig]
	[Token(Token = "0x6000495")]
	[Address(RVA = "0x851BAC", Offset = "0x851BAC", VA = "0x851BAC")]
	public static extern OVRPlugin.Result ovrp_GetAdaptiveGpuPerformanceScale2(ref float adaptiveGpuPerformanceScale);

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x851C4C", Offset = "0x851C4C", VA = "0x851C4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x851D5C", Offset = "0x851D5C", VA = "0x851D5C")]
	private static void Update_DequeueNextRequest()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x85210C", Offset = "0x85210C", VA = "0x85210C")]
	private static void Update_OnUpdateProcessCurrentRequest()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x85300C", Offset = "0x85300C", VA = "0x85300C")]
	public static void InitializeLeaderboards()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x853194", Offset = "0x853194", VA = "0x853194")]
	public static void FetchTopScoresAsync(LeaderboardDataDefinition leaderboard, Action<LeaderboardDataDefinition, List<SLeaderboardEntry>> finishedCallback)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x8532EC", Offset = "0x8532EC", VA = "0x8532EC")]
	public static void PostHighScore(LeaderboardDataDefinition leaderboard, int score, int weaponType, int accuracyPercent, int timeElapsedTenthsOfSeconds, int remainingHealth)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x853478", Offset = "0x853478", VA = "0x853478")]
	public static void FetchUsernameForUserId(ulong userIdToFetch, Action<ulong, string> onReceiveUserNameFromServer)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x852A94", Offset = "0x852A94", VA = "0x852A94")]
	private static EVirtualRealityPlatform GetCurrentPlatform()
	{
		return default(EVirtualRealityPlatform);
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x8535F4", Offset = "0x8535F4", VA = "0x8535F4")]
	private static void Oculus_CoreInitialize(Message<PlatformInitialize> message)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x853794", Offset = "0x853794", VA = "0x853794")]
	private static void Oculus_GetLeaderboardHighScoresResult(Message<LeaderboardEntryList> message)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x853A88", Offset = "0x853A88", VA = "0x853A88")]
	public CrossPlatformLeaderboards()
	{
	}
}
[Token(Token = "0x200008A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6487B8", Offset = "0x6487B8")]
public class LeaderboardDataDefinition : ScriptableObject
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string steamApiName;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusApiName;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint playstationLeaderboardId;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string friendlyUserFacingName;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xC4E250", Offset = "0xC4E250", VA = "0xC4E250")]
	public LeaderboardDataDefinition()
	{
	}
}
[Token(Token = "0x200008B")]
public class LeaderboardRoot : Menu
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelCollection[] levelCollections;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI currentBoardLabel;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeaderboardUiEntry[] scoreEntries;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leaderboardIsDisplayingScoresRoot;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject leaderboardTitles;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leaderboardIsLoadingRoot;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject leaderboardIsShowingErrorRoot;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x653550", Offset = "0x653550")]
	[SerializeField]
	protected Sprite invalidWeaponSprite;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Sprite[] weaponSprites;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<LeaderboardDataDefinition> leaderboardDefinitions;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentBoardIndex;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LeaderboardDataDefinition currentLeaderboardDefinition;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<LeaderboardDataDefinition, List<CrossPlatformLeaderboards.SLeaderboardEntry>> cachedLeaderboardPages;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<ulong, string> cachedUserNames;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool refreshDisplayNextFrame;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool shouldShowErrorNextFrame;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xC4E258", Offset = "0xC4E258", VA = "0xC4E258")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xC4E558", Offset = "0xC4E558", VA = "0xC4E558", Slot = "4")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xC4E7A4", Offset = "0xC4E7A4", VA = "0xC4E7A4", Slot = "5")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xC4E8D0", Offset = "0xC4E8D0", VA = "0xC4E8D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC4E984", Offset = "0xC4E984", VA = "0xC4E984")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC4E690", Offset = "0xC4E690", VA = "0xC4E690")]
	protected void SetCurrentBoard(int boardIndex)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xC4F758", Offset = "0xC4F758", VA = "0xC4F758")]
	protected void SetCurrentBoard(LeaderboardDataDefinition leaderboardDefinition)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xC4F84C", Offset = "0xC4F84C", VA = "0xC4F84C")]
	private void OnReceiveLeaderboardDataFromServer(LeaderboardDataDefinition leaderboard, List<CrossPlatformLeaderboards.SLeaderboardEntry> leaderboardData)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xC4FB8C", Offset = "0xC4FB8C", VA = "0xC4FB8C")]
	private void OnReceiveUserNameFromServer(ulong userId, string userName)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xC4FC48", Offset = "0xC4FC48", VA = "0xC4FC48")]
	public void ShowError()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xC4FC54", Offset = "0xC4FC54", VA = "0xC4FC54")]
	public void GUI_SwitchLeaderboardPage(bool next)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xC4FC6C", Offset = "0xC4FC6C", VA = "0xC4FC6C")]
	public LeaderboardRoot()
	{
	}
}
[Token(Token = "0x200008C")]
public class LeaderboardUiEntry : MonoBehaviour
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI rankField;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI nameField;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI scoreField;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image weaponField;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI timeField;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI accuracyField;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image healthField;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xC4FD78", Offset = "0xC4FD78", VA = "0xC4FD78")]
	public LeaderboardUiEntry()
	{
	}
}
[Token(Token = "0x200008D")]
public class MissionClearedLeaderboard : LeaderboardRoot
{
	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Canvas canvas;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x158E984", Offset = "0x158E984", VA = "0x158E984")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x158EBF4", Offset = "0x158EBF4", VA = "0x158EBF4")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x158EC88", Offset = "0x158EC88", VA = "0x158EC88")]
	private new void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x158ED14", Offset = "0x158ED14", VA = "0x158ED14")]
	public MissionClearedLeaderboard()
	{
	}
}
[Token(Token = "0x200008E")]
public class MainMenu : Menu
{
	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D2E8", Offset = "0x64D2E8")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int j;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenu <>4__this;

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x158DB48", Offset = "0x158DB48", VA = "0x158DB48")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x158DD90", Offset = "0x158DD90", VA = "0x158DD90")]
		internal void <Initialize>b__6()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D2F8", Offset = "0x64D2F8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction <>9__14_3;

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x158DD24", Offset = "0x158DD24", VA = "0x158DD24")]
		public <>c()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x158DD2C", Offset = "0x158DD2C", VA = "0x158DD2C")]
		internal void <Initialize>b__14_3()
		{
		}
	}

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button continueCampaignButton;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button resetCampaignProgressButton;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button resetChallengesProgressButton;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button quitButton;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject missionButtonPrefab;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform missionButtonsParent;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x653598", Offset = "0x653598")]
	public SettingsMenuData gameSettings;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LevelCollection challengeLevelCollection;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected List<Button> missionButtons;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected LevelCollection campaignLevelCollection;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected SettingsMenu settingsMenu;

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x158C7F4", Offset = "0x158C7F4", VA = "0x158C7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x158CFA4", Offset = "0x158CFA4", VA = "0x158CFA4", Slot = "8")]
	public override void SaveData_Changed()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x158D2EC", Offset = "0x158D2EC", VA = "0x158D2EC")]
	public void LoadCampaign()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x158C8BC", Offset = "0x158C8BC", VA = "0x158C8BC")]
	public void Initialize(LevelCollection _levelCollection)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x158CFE4", Offset = "0x158CFE4", VA = "0x158CFE4")]
	public void UpdateMissionButtons()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x158D0C8", Offset = "0x158D0C8", VA = "0x158D0C8")]
	public void UpdateContinueButtonText()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x158D8C8", Offset = "0x158D8C8", VA = "0x158D8C8")]
	public MainMenu()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x158D940", Offset = "0x158D940", VA = "0x158D940")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A9A8", Offset = "0x66A9A8")]
	private void <Initialize>b__14_0()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x158DAB8", Offset = "0x158DAB8", VA = "0x158DAB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A9B8", Offset = "0x66A9B8")]
	private void <Initialize>b__14_1()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x158DAC0", Offset = "0x158DAC0", VA = "0x158DAC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A9C8", Offset = "0x66A9C8")]
	private void <Initialize>b__14_2()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x158D4A8", Offset = "0x158D4A8", VA = "0x158D4A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A9D8", Offset = "0x66A9D8")]
	private void <Initialize>g__PopulateMissionButtons|14_4()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x158DB50", Offset = "0x158DB50", VA = "0x158DB50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A9E8", Offset = "0x66A9E8")]
	private Button <Initialize>b__14_5(LevelCollection.Mission mission)
	{
		return null;
	}
}
[Token(Token = "0x200008F")]
public class Menu : MonoBehaviour
{
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D308", Offset = "0x64D308")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<GameSettings.SettingKey, bool> _action;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameSettings.SettingKey _setting;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool _isUp;

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x158E424", Offset = "0x158E424", VA = "0x158E424")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x158E54C", Offset = "0x158E54C", VA = "0x158E54C")]
		internal void <CreateEventTrigger>b__0(BaseEventData eventData)
		{
		}
	}

	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D318", Offset = "0x64D318")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action _action;

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x158E544", Offset = "0x158E544", VA = "0x158E544")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x158E5C8", Offset = "0x158E5C8", VA = "0x158E5C8")]
		internal void <CreateEventTrigger>b__0(BaseEventData eventData)
		{
		}
	}

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameManager gameManager;

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x158DE20", Offset = "0x158DE20", VA = "0x158DE20")]
	public static void SetGameManager(GameManager gm)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x158DE74", Offset = "0x158DE74", VA = "0x158DE74", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x158E09C", Offset = "0x158E09C", VA = "0x158E09C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x158E2C4", Offset = "0x158E2C4", VA = "0x158E2C4", Slot = "6")]
	public virtual void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x158E2C8", Offset = "0x158E2C8", VA = "0x158E2C8", Slot = "7")]
	public virtual void GameSettings_Changed(GameSettings.SettingKey arg1, int arg2)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x158CFE0", Offset = "0x158CFE0", VA = "0x158CFE0", Slot = "8")]
	public virtual void SaveData_Changed()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x158E2CC", Offset = "0x158E2CC", VA = "0x158E2CC")]
	public EventTrigger.Entry CreateEventTrigger(EventTriggerType _eventType, Action<GameSettings.SettingKey, bool> _action, GameSettings.SettingKey _setting, bool _isUp)
	{
		return null;
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x158E42C", Offset = "0x158E42C", VA = "0x158E42C")]
	public EventTrigger.Entry CreateEventTrigger(EventTriggerType _eventType, Action _action)
	{
		return null;
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x158D938", Offset = "0x158D938", VA = "0x158D938")]
	public Menu()
	{
	}
}
[Token(Token = "0x2000090")]
public class MissionStatsMenu : Menu
{
	[Serializable]
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D328", Offset = "0x64D328")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, GameObject> <>9__29_0;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<GameObject, GameObject> <>9__29_1;

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x1590324", Offset = "0x1590324", VA = "0x1590324")]
		public <>c()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x159032C", Offset = "0x159032C", VA = "0x159032C")]
		internal GameObject <InitStars>b__29_0(GameObject star)
		{
			return null;
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x1590390", Offset = "0x1590390", VA = "0x1590390")]
		internal GameObject <InitStars>b__29_1(GameObject star)
		{
			return null;
		}
	}

	[Token(Token = "0x400056B")]
	private const int MAX_SCORE = 79000;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI missionText;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6535A8", Offset = "0x6535A8")]
	public TextMeshProUGUI timeText;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6535B8", Offset = "0x6535B8")]
	public TextMeshProUGUI accuracyText;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI accuracyRatioText;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6535C8", Offset = "0x6535C8")]
	public TextMeshProUGUI multiplierText;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI totalScoreText;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6535D8", Offset = "0x6535D8")]
	public Image weaponImage;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6535E8", Offset = "0x6535E8")]
	public Sprite slingSprite;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite slingshotSprite;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite invalidWeaponSprite;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6535F8", Offset = "0x6535F8")]
	public List<GameObject> totalScoreStars;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x653630", Offset = "0x653630")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653630", Offset = "0x653630")]
	public int totalScoreOffset;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x653674", Offset = "0x653674")]
	public bool isDefeat;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool inPauseMenu;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653684", Offset = "0x653684")]
	public List<GameObject> hearts;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6536BC", Offset = "0x6536BC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6536BC", Offset = "0x6536BC")]
	public int testScore;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Canvas canvas;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x158EF70", Offset = "0x158EF70", VA = "0x158EF70")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x158F4E4", Offset = "0x158F4E4", VA = "0x158F4E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x158F53C", Offset = "0x158F53C", VA = "0x158F53C", Slot = "6")]
	public override void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x158FA28", Offset = "0x158FA28", VA = "0x158FA28")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x158FEEC", Offset = "0x158FEEC", VA = "0x158FEEC", Slot = "7")]
	public override void GameSettings_Changed(GameSettings.SettingKey arg1, int arg2)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x158FF80", Offset = "0x158FF80", VA = "0x158FF80")]
	public void RestartCurrentMission()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x158FFE4", Offset = "0x158FFE4", VA = "0x158FFE4")]
	public void ReloadCurrentLevel()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1590048", Offset = "0x1590048", VA = "0x1590048")]
	public void ContinueCampaign()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x15900AC", Offset = "0x15900AC", VA = "0x15900AC")]
	public void LoadMainMenu()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x158FABC", Offset = "0x158FABC", VA = "0x158FABC")]
	public void Init(MissionStats _stats)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x158F654", Offset = "0x158F654", VA = "0x158F654")]
	public void InitHearts(MissionStats _stats)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x158F040", Offset = "0x158F040", VA = "0x158F040")]
	private void InitStars(int _score, int _maxScore)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1590110", Offset = "0x1590110", VA = "0x1590110")]
	private static string GetParsedTimeFromSeconds(float _seconds)
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1590244", Offset = "0x1590244", VA = "0x1590244")]
	private string GetWeaponName(int _weaponIndex)
	{
		return null;
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x15902AC", Offset = "0x15902AC", VA = "0x15902AC")]
	public MissionStatsMenu()
	{
	}
}
[Token(Token = "0x2000091")]
public class PauseMenu : Menu
{
	[Serializable]
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D338", Offset = "0x64D338")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction <>9__12_1;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityAction <>9__12_2;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static UnityAction <>9__12_3;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static UnityAction <>9__12_4;

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x1593BF0", Offset = "0x1593BF0", VA = "0x1593BF0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x1593BF8", Offset = "0x1593BF8", VA = "0x1593BF8")]
		internal void <Awake>b__12_1()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x1593C5C", Offset = "0x1593C5C", VA = "0x1593C5C")]
		internal void <Awake>b__12_2()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x1593CC0", Offset = "0x1593CC0", VA = "0x1593CC0")]
		internal void <Awake>b__12_3()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x1593D24", Offset = "0x1593D24", VA = "0x1593D24")]
		internal void <Awake>b__12_4()
		{
		}
	}

	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D348", Offset = "0x64D348")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x1593904", Offset = "0x1593904", VA = "0x1593904")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x1593D88", Offset = "0x1593D88", VA = "0x1593D88")]
		internal void <ToggleWeaponWarning>b__0(GameObject child)
		{
		}
	}

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button skipCinematicButton;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject skipCinematicSpace;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button restartLevelButton;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button mainMenuButton;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button backButton;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x653714", Offset = "0x653714")]
	public Button slingButton;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button slingshotButton;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI weaponWarningText;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x653724", Offset = "0x653724")]
	public SettingsMenuData gameSettings;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected SettingsMenu settingsMenu;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected List<GameObject> children;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected List<GameObject> weaponWarningChildren;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x15930DC", Offset = "0x15930DC", VA = "0x15930DC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x15936D8", Offset = "0x15936D8", VA = "0x15936D8")]
	private void WeaponButtonSetup(Button _weaponButton)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1593830", Offset = "0x1593830", VA = "0x1593830")]
	private void ToggleWeaponWarning(bool enabled)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x159390C", Offset = "0x159390C", VA = "0x159390C", Slot = "6")]
	public override void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1593A0C", Offset = "0x1593A0C", VA = "0x1593A0C", Slot = "8")]
	public override void SaveData_Changed()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x1593A38", Offset = "0x1593A38", VA = "0x1593A38")]
	public PauseMenu()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1593AA8", Offset = "0x1593AA8", VA = "0x1593AA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A9F8", Offset = "0x66A9F8")]
	private GameObject <Awake>b__12_0(int i)
	{
		return null;
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1593AFC", Offset = "0x1593AFC", VA = "0x1593AFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA08", Offset = "0x66AA08")]
	private GameObject <Awake>b__12_5(int i)
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1593B7C", Offset = "0x1593B7C", VA = "0x1593B7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA18", Offset = "0x66AA18")]
	private void <WeaponButtonSetup>b__13_0()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1593B84", Offset = "0x1593B84", VA = "0x1593B84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA28", Offset = "0x66AA28")]
	private void <WeaponButtonSetup>b__13_1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000092")]
public class SettingsMenuData
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653734", Offset = "0x653734")]
	public Transform dominantHandButtonsParent;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform weaponButtonsParent;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform movementButtonsParent;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button resetSettingsButton;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65376C", Offset = "0x65376C")]
	public Image masterOutlineLeft;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image masterOutlineRight;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6537A4", Offset = "0x6537A4")]
	public Image musicOutlineLeft;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image musicOutlineRight;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6537B4", Offset = "0x6537B4")]
	public Image sfxOutlineLeft;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image sfxOutlineRight;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6537C4", Offset = "0x6537C4")]
	public Button masterButtonDown;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button masterButtonUp;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6537FC", Offset = "0x6537FC")]
	public Button musicButtonDown;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button musicButtonUp;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x65380C", Offset = "0x65380C")]
	public Button sfxButtonDown;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button sfxButtonUp;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65381C", Offset = "0x65381C")]
	public TextMeshProUGUI masterVolumeText;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI musicVolumeText;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI sfxVolumeText;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653854", Offset = "0x653854")]
	public GameObject qualityButtonPrefab;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform qualityButtonsParent;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x65388C", Offset = "0x65388C")]
	public List<Button> dominantHandButtons;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x65389C", Offset = "0x65389C")]
	public List<Button> weaponButtons;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x6538AC", Offset = "0x6538AC")]
	public List<Button> movementButtons;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x6538BC", Offset = "0x6538BC")]
	public List<Button> qualityButtons;

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x8C29CC", Offset = "0x8C29CC", VA = "0x8C29CC")]
	public SettingsMenuData()
	{
	}
}
[Token(Token = "0x2000093")]
public class SettingsMenu : Menu
{
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D358", Offset = "0x64D358")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SettingsMenu <>4__this;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Button> buttons;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameSettings.SettingKey settingKey;

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x8C28C4", Offset = "0x8C28C4", VA = "0x8C28C4")]
		public <>c__DisplayClass6_0()
		{
		}
	}

	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D368", Offset = "0x64D368")]
	private sealed class <>c__DisplayClass6_1
	{
		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int j;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass6_0 CS$<>8__locals1;

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x8C28CC", Offset = "0x8C28CC", VA = "0x8C28CC")]
		public <>c__DisplayClass6_1()
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x8C28D4", Offset = "0x8C28D4", VA = "0x8C28D4")]
		internal void <SettingSwitchSetup>b__0()
		{
		}
	}

	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D378", Offset = "0x64D378")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int j;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SettingsMenu <>4__this;

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x8C296C", Offset = "0x8C296C", VA = "0x8C296C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x8C2974", Offset = "0x8C2974", VA = "0x8C2974")]
		internal void <PopulateQualityButtons>b__1()
		{
		}
	}

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SettingsMenuData data;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x158CB18", Offset = "0x158CB18", VA = "0x158CB18")]
	public void Initialize(SettingsMenuData _data, Menu menu)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x15A1F30", Offset = "0x15A1F30", VA = "0x15A1F30")]
	public void ToggleOutline(GameSettings.SettingKey _outlineSettingKey, bool _isUp, bool _isEnter)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x15A2040", Offset = "0x15A2040", VA = "0x15A2040")]
	private void VolumeClick(GameSettings.SettingKey _clickSettingKey, bool _isUp)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x15A1CE8", Offset = "0x15A1CE8", VA = "0x15A1CE8")]
	private void SetTextToValue(TextMeshProUGUI text, int value)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x15A1D3C", Offset = "0x15A1D3C", VA = "0x15A1D3C")]
	private void VolumeButtonSetup(Button _volumeButton, GameSettings.SettingKey _buttonSettingKey, bool _isUp)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x15A1A90", Offset = "0x15A1A90", VA = "0x15A1A90")]
	private void SettingSwitchSetup(Transform settingParent, GameSettings.SettingKey settingKey)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x15A16F0", Offset = "0x15A16F0", VA = "0x15A16F0")]
	private void PopulateQualityButtons()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x15A2178", Offset = "0x15A2178", VA = "0x15A2178")]
	private void ToggleRadioButton(List<Button> radioButtons, GameSettings.SettingKey settingKey, int value)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x15A22B0", Offset = "0x15A22B0", VA = "0x15A22B0")]
	private void ResetSettings()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x15A2320", Offset = "0x15A2320", VA = "0x15A2320")]
	private void UpdateRadioButtons(List<Button> _buttons, GameSettings.SettingKey key)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x158D188", Offset = "0x158D188", VA = "0x158D188")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x15A2428", Offset = "0x15A2428", VA = "0x15A2428")]
	public SettingsMenu()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x15A2430", Offset = "0x15A2430", VA = "0x15A2430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA38", Offset = "0x66AA38")]
	private void <Initialize>b__1_0()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x15A2434", Offset = "0x15A2434", VA = "0x15A2434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA48", Offset = "0x66AA48")]
	private void <VolumeButtonSetup>b__5_0(GameSettings.SettingKey _settingKeyEnter, bool _isUpEnter)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x15A2440", Offset = "0x15A2440", VA = "0x15A2440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA58", Offset = "0x66AA58")]
	private void <VolumeButtonSetup>b__5_1(GameSettings.SettingKey _settingKeyExit, bool _isUpExit)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x15A244C", Offset = "0x15A244C", VA = "0x15A244C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA68", Offset = "0x66AA68")]
	private void <VolumeButtonSetup>b__5_2(GameSettings.SettingKey _settingKeyClick, bool _isUpClick)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x15A2454", Offset = "0x15A2454", VA = "0x15A2454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA78", Offset = "0x66AA78")]
	private Button <PopulateQualityButtons>b__7_0(string name)
	{
		return null;
	}
}
[Token(Token = "0x2000094")]
public class ToggleGameObjectForPlatform : MonoBehaviour
{
	[Token(Token = "0x20003DE")]
	[Flags]
	protected enum Platform
	{
		[Token(Token = "0x4001D43")]
		All = 0,
		[Token(Token = "0x4001D44")]
		Quest = 1,
		[Token(Token = "0x4001D45")]
		PS4 = 2,
		[Token(Token = "0x4001D46")]
		Standalone = 4
	}

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool stateForPlatform;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected Platform platform;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected bool demoOnly;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x896148", Offset = "0x896148", VA = "0x896148")]
	private Platform GetPlatform()
	{
		return default(Platform);
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x896150", Offset = "0x896150", VA = "0x896150")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x8961C8", Offset = "0x8961C8", VA = "0x8961C8")]
	public ToggleGameObjectForPlatform()
	{
	}
}
[Token(Token = "0x2000095")]
public class VersionInfoText : MonoBehaviour
{
	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x9431CC", Offset = "0x9431CC", VA = "0x9431CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x943264", Offset = "0x943264", VA = "0x943264")]
	public VersionInfoText()
	{
	}
}
[Token(Token = "0x2000096")]
public class WolfWaveSettingsMenu : MonoBehaviour
{
	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI wavesText;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI sheepText;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI sheepLossText;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI waveGrowthText;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CustomWolfWavesLevelObjective levelObjective;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int waves;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int maxWaves;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int sheep;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxSheep;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int sheepLoss;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int growth;

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x9523DC", Offset = "0x9523DC", VA = "0x9523DC")]
	public void IncrementWaves()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x95249C", Offset = "0x95249C", VA = "0x95249C")]
	public void DecrementWaves()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x95255C", Offset = "0x95255C", VA = "0x95255C")]
	public void IncrementSheep()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x9526DC", Offset = "0x9526DC", VA = "0x9526DC")]
	public void DecrementSheep()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x9527A4", Offset = "0x9527A4", VA = "0x9527A4")]
	public void IncrementSheepLoss()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x952864", Offset = "0x952864", VA = "0x952864")]
	public void DecrementSheepLoss()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x952624", Offset = "0x952624", VA = "0x952624")]
	private void UpdateSheepLoss()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x952924", Offset = "0x952924", VA = "0x952924")]
	public void IncrementGrowth()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x9529F8", Offset = "0x9529F8", VA = "0x9529F8")]
	public void DecrementGrowth()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x952974", Offset = "0x952974", VA = "0x952974")]
	private string GetGrowthString()
	{
		return null;
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x952A4C", Offset = "0x952A4C", VA = "0x952A4C")]
	public void StartWaves()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x952B4C", Offset = "0x952B4C", VA = "0x952B4C")]
	public WolfWaveSettingsMenu()
	{
	}
}
[Token(Token = "0x2000097")]
public class Clairvoyance : MonoBehaviour
{
	[Token(Token = "0x20003DF")]
	private class RegisterEventArgs
	{
		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool unregisteredEvent;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer renderer;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Affiliation affiliation;

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x84A6F0", Offset = "0x84A6F0", VA = "0x84A6F0")]
		public RegisterEventArgs()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D398", Offset = "0x64D398")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static EventHandler<RegisterEventArgs> <>9__31_0;

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x84B3F0", Offset = "0x84B3F0", VA = "0x84B3F0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x84B3F8", Offset = "0x84B3F8", VA = "0x84B3F8")]
		internal void <.ctor>b__31_0(object <p0>, RegisterEventArgs <p1>)
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x84B3FC", Offset = "0x84B3FC", VA = "0x84B3FC")]
		internal void <.cctor>b__32_0(object <p0>, ActivationEventArgs <p1>)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x84B400", Offset = "0x84B400", VA = "0x84B400")]
		internal void <.cctor>b__32_1(object <p0>, ActivationEventArgs <p1>)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x84B404", Offset = "0x84B404", VA = "0x84B404")]
		internal void <.cctor>b__32_2(object <p0>, RegisterEventArgs <p1>)
		{
		}
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected VRTK_ControllerEvents.ButtonAlias activationButton;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Transform customCastPoint;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65395C", Offset = "0x65395C")]
	private static bool <Active>k__BackingField;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<Renderer, Affiliation> registeredRends;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventHandler<RegisterEventArgs> OnRegistered;

	[Token(Token = "0x1700005B")]
	public static bool Active
	{
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x84A0BC", Offset = "0x84A0BC", VA = "0x84A0BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AAE8", Offset = "0x66AAE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x84A124", Offset = "0x84A124", VA = "0x84A124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AAF8", Offset = "0x66AAF8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event EventHandler<ActivationEventArgs> ActivationBegin
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x8499A4", Offset = "0x8499A4", VA = "0x8499A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA88", Offset = "0x66AA88")]
		add
		{
		}
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x849AD0", Offset = "0x849AD0", VA = "0x849AD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AA98", Offset = "0x66AA98")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event EventHandler<ActivationEventArgs> ActivationEnd
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x849BFC", Offset = "0x849BFC", VA = "0x849BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AAA8", Offset = "0x66AAA8")]
		add
		{
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x849D2C", Offset = "0x849D2C", VA = "0x849D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AAB8", Offset = "0x66AAB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	private static event EventHandler<RegisterEventArgs> Registered
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x849E5C", Offset = "0x849E5C", VA = "0x849E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AAC8", Offset = "0x66AAC8")]
		add
		{
		}
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x849F8C", Offset = "0x849F8C", VA = "0x849F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AAD8", Offset = "0x66AAD8")]
		remove
		{
		}
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x84A194", Offset = "0x84A194", VA = "0x84A194")]
	private void Reset()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x84A1EC", Offset = "0x84A1EC", VA = "0x84A1EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x84A384", Offset = "0x84A384", VA = "0x84A384")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x84A4E8", Offset = "0x84A4E8", VA = "0x84A4E8")]
	public static void Register(Renderer rend, Affiliation affiliation)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x84A6F8", Offset = "0x84A6F8", VA = "0x84A6F8")]
	public static void Unregister(Renderer rend)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x84A8D4", Offset = "0x84A8D4", VA = "0x84A8D4")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x84A958", Offset = "0x84A958", VA = "0x84A958")]
	private void ActivationButtonDown(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x84ABA8", Offset = "0x84ABA8", VA = "0x84ABA8")]
	private void ActivationButtonUp(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x84A95C", Offset = "0x84A95C", VA = "0x84A95C")]
	protected void ActivateAll()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x84ABAC", Offset = "0x84ABAC", VA = "0x84ABAC")]
	protected void DeactivateAll()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x84ADF8", Offset = "0x84ADF8", VA = "0x84ADF8")]
	private void OnActivate(Renderer renderer, Affiliation affiliation)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x84AF14", Offset = "0x84AF14", VA = "0x84AF14")]
	private void OnDeactivate(Renderer renderer, Affiliation affiliation)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x84B030", Offset = "0x84B030", VA = "0x84B030")]
	public Clairvoyance()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x84B2A0", Offset = "0x84B2A0", VA = "0x84B2A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AB08", Offset = "0x66AB08")]
	private void <OnEnable>b__19_0(object s, RegisterEventArgs e)
	{
	}
}
[Token(Token = "0x2000098")]
public class ActivationEventArgs : EventArgs
{
	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer target;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Affiliation affiliation;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform castPoint;

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xAE0DFC", Offset = "0xAE0DFC", VA = "0xAE0DFC")]
	public ActivationEventArgs(Renderer target, [Optional] Transform castPoint, Affiliation affiliation = Affiliation.Neutral)
	{
	}
}
[Token(Token = "0x2000099")]
public enum Affiliation
{
	[Token(Token = "0x40005BE")]
	Neutral,
	[Token(Token = "0x40005BF")]
	Friendly,
	[Token(Token = "0x40005C0")]
	Hostile
}
[Token(Token = "0x200009A")]
public class ClairvoyanceTarget : MonoBehaviour
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer renderer;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Affiliation affiliation;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x84B408", Offset = "0x84B408", VA = "0x84B408")]
	private void Reset()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x84B460", Offset = "0x84B460", VA = "0x84B460")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x84B544", Offset = "0x84B544", VA = "0x84B544")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x84B5EC", Offset = "0x84B5EC", VA = "0x84B5EC")]
	public ClairvoyanceTarget()
	{
	}
}
[Token(Token = "0x200009B")]
public class ClairvoyanceVizMaterialSwap : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003E1")]
	public class AffiliationSettings
	{
		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Affiliation affiliation;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material materialSwap;

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x84DE24", Offset = "0x84DE24", VA = "0x84DE24")]
		public AffiliationSettings()
		{
		}
	}

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AffiliationSettings[] affiliationSettings;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Affiliation, Material> affiliationMats;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<Renderer, Material> originalMats;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x84D68C", Offset = "0x84D68C", VA = "0x84D68C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x84D8F0", Offset = "0x84D8F0", VA = "0x84D8F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x84D9BC", Offset = "0x84D9BC", VA = "0x84D9BC")]
	private void Clairvoyance_ActivationBegin(object sender, ActivationEventArgs e)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x84DCFC", Offset = "0x84DCFC", VA = "0x84DCFC")]
	private void Clairvoyance_ActivationEnd(object sender, ActivationEventArgs e)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x84DA50", Offset = "0x84DA50", VA = "0x84DA50")]
	private static void HighlightRend(bool toggle, Renderer rend, Affiliation affiliation = Affiliation.Neutral)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x84DD78", Offset = "0x84DD78", VA = "0x84DD78")]
	public ClairvoyanceVizMaterialSwap()
	{
	}
}
[Token(Token = "0x200009C")]
public class DebugClairvoyance : Clairvoyance
{
	[Token(Token = "0x6000529")]
	[Address(RVA = "0x856204", Offset = "0x856204", VA = "0x856204")]
	public DebugClairvoyance()
	{
	}
}
[Token(Token = "0x200009D")]
public class FW_VRTK_4WayMoveInPlace : VRTK_MoveInPlace
{
	[Token(Token = "0x20003E2")]
	[Flags]
	private enum EngagedControllers
	{
		[Token(Token = "0x4001D4F")]
		None = 0,
		[Token(Token = "0x4001D50")]
		Left = 1,
		[Token(Token = "0x4001D51")]
		Right = 2
	}

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	[SerializeField]
	protected bool leftRightButtonControl;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	protected float strafeSpeedMultiplier;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected Vector3 controllerDirOffset;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	protected bool fixedUnscaledTime;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private EngagedControllers engagedControllers;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Dictionary<Transform, Vector3> previousPositions;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x994070", Offset = "0x994070", VA = "0x994070")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x994080", Offset = "0x994080", VA = "0x994080", Slot = "8")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x994200", Offset = "0x994200", VA = "0x994200", Slot = "17")]
	protected override Vector3 SetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x994B04", Offset = "0x994B04", VA = "0x994B04", Slot = "26")]
	protected override Quaternion DetermineAverageControllerRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x99451C", Offset = "0x99451C", VA = "0x99451C")]
	private Vector3 HeadsetDirFlattened()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x994884", Offset = "0x994884", VA = "0x994884")]
	private Vector3 SnappedButtonStrafeDirection(Quaternion controllerRotation, Vector3 headsetDirection)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x99456C", Offset = "0x99456C", VA = "0x99456C")]
	private Vector3 SnapControllerDirectionToHeadset(Quaternion controllerRotation, Vector3 headsetForward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x994DEC", Offset = "0x994DEC", VA = "0x994DEC", Slot = "15")]
	protected override float CalculateListAverage()
	{
		return default(float);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x995104", Offset = "0x995104", VA = "0x995104", Slot = "20")]
	protected override void SetDeltaTransformData()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x99520C", Offset = "0x99520C", VA = "0x99520C", Slot = "24")]
	protected override void EngageButtonPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x9952A0", Offset = "0x9952A0", VA = "0x9952A0", Slot = "25")]
	protected override void EngageButtonReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x9954D4", Offset = "0x9954D4", VA = "0x9954D4", Slot = "21")]
	protected override void MovePlayArea(Vector3 moveDirection, float moveSpeed)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x9956DC", Offset = "0x9956DC", VA = "0x9956DC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x995B40", Offset = "0x995B40", VA = "0x995B40")]
	public FW_VRTK_4WayMoveInPlace()
	{
	}
}
[Token(Token = "0x200009E")]
public class FW_VRTK_CustomSnapTurn : MonoBehaviour
{
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6539AC", Offset = "0x6539AC")]
	public float anglePerSnapXAxis;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6539E4", Offset = "0x6539E4")]
	public float anglePerSnapYAxis;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653A1C", Offset = "0x653A1C")]
	public float blinkTransitionSpeed;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653A54", Offset = "0x653A54")]
	public float deadzone;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inDeadzoneLastFrame;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform playArea;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected VRTK_BodyPhysics internalBodyPhysics;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform headsetTransform;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool validPlayerObject;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 playerHeadPositionBeforeRotation;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private object centerCollider;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform controlledTransform;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 colliderCenter;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float colliderRadius;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float colliderHeight;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x995BF4", Offset = "0x995BF4", VA = "0x995BF4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x995C5C", Offset = "0x995C5C", VA = "0x995C5C", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x995CC4", Offset = "0x995CC4", VA = "0x995CC4")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x995E08", Offset = "0x995E08", VA = "0x995E08")]
	private void AxisChanged(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x995FB4", Offset = "0x995FB4", VA = "0x995FB4")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x995E5C", Offset = "0x995E5C", VA = "0x995E5C")]
	protected void Process(GameObject controlledGameObject, Vector2 rawAxis, float deadzone)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x996088", Offset = "0x996088", VA = "0x996088")]
	protected float Rotate(float axis, bool isX)
	{
		return default(float);
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x9960D8", Offset = "0x9960D8", VA = "0x9960D8", Slot = "6")]
	protected virtual void Blink(float blinkSpeed)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x9961BC", Offset = "0x9961BC", VA = "0x9961BC", Slot = "7")]
	protected virtual void ReleaseBlink(float blinkSpeed)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x996268", Offset = "0x996268", VA = "0x996268", Slot = "8")]
	protected virtual void RotateAroundPlayer(GameObject controlledGameObject, float angle)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x9964AC", Offset = "0x9964AC", VA = "0x9964AC", Slot = "9")]
	protected virtual Vector3 GetObjectCenter(Transform checkObject)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x9969DC", Offset = "0x9969DC", VA = "0x9969DC", Slot = "10")]
	protected virtual void CheckForPlayerBeforeRotation(GameObject controlledGameObject)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x996B5C", Offset = "0x996B5C", VA = "0x996B5C", Slot = "11")]
	protected virtual void CheckForPlayerAfterRotation(GameObject controlledGameObject)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x996CD0", Offset = "0x996CD0", VA = "0x996CD0", Slot = "12")]
	protected virtual int GetAxisDirection(float axis)
	{
		return default(int);
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x996CE8", Offset = "0x996CE8", VA = "0x996CE8")]
	public FW_VRTK_CustomSnapTurn()
	{
	}
}
[Token(Token = "0x200009F")]
public class FW_VRTK_PlayerDash : MonoBehaviour
{
	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D3B8", Offset = "0x64D3B8")]
	private sealed class <lerpToPositionVector3>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FW_VRTK_PlayerDash <>4__this;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 targetPosition;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 startPosition;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <gameObjectInTheWay>5__2;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <currentLerpedTime>5__4;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForEndOfFrame <delayInstruction>5__5;

		[Token(Token = "0x17000228")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x997AFC", Offset = "0x997AFC", VA = "0x997AFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x997B6C", Offset = "0x997B6C", VA = "0x997B6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x997088", Offset = "0x997088", VA = "0x997088")]
		[DebuggerHidden]
		public <lerpToPositionVector3>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x99731C", Offset = "0x99731C", VA = "0x99731C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x997320", Offset = "0x997320", VA = "0x997320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x997B04", Offset = "0x997B04", VA = "0x997B04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653A6C", Offset = "0x653A6C")]
	public LayerMask layerMask;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653AA4", Offset = "0x653AA4")]
	public float normalLerpTime;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653ADC", Offset = "0x653ADC")]
	public float minSpeedMps;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653B14", Offset = "0x653B14")]
	public float capsuleTopOffset;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653B4C", Offset = "0x653B4C")]
	public float capsuleBottomOffset;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653B84", Offset = "0x653B84")]
	public float capsuleRadius;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653BBC", Offset = "0x653BBC")]
	public float dashDist;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float lerpTime;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float snapDelayTimer;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float minDistanceForNormalLerp;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool enableDash;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform playArea;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform headset;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x996CFC", Offset = "0x996CFC", VA = "0x996CFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x996D64", Offset = "0x996D64", VA = "0x996D64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x996DCC", Offset = "0x996DCC", VA = "0x996DCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x996E44", Offset = "0x996E44", VA = "0x996E44")]
	public void Dash(Vector3 direction)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x996FB4", Offset = "0x996FB4", VA = "0x996FB4", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AB18", Offset = "0x66AB18")]
	protected virtual IEnumerator lerpToPositionVector3(Vector3 startPosition, Vector3 targetPosition)
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x9970B4", Offset = "0x9970B4", VA = "0x9970B4")]
	private Vector3 GetClosestHit(RaycastHit[] allHits)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x9972E8", Offset = "0x9972E8", VA = "0x9972E8")]
	public FW_VRTK_PlayerDash()
	{
	}
}
[Token(Token = "0x20000A0")]
public class FW_VRTK_PlayerDashInput : MonoBehaviour
{
	[Token(Token = "0x20003E4")]
	public enum InputStyle
	{
		[Token(Token = "0x4001D5C")]
		NondominantJoystickDirection,
		[Token(Token = "0x4001D5D")]
		DominantJoystickDirection,
		[Token(Token = "0x4001D5E")]
		GripAndWhip
	}

	[Serializable]
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D3C8", Offset = "0x64D3C8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x998A9C", Offset = "0x998A9C", VA = "0x998A9C")]
		public <>c()
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x998AA4", Offset = "0x998AA4", VA = "0x998AA4")]
		internal void <.cctor>b__32_0(object <p0>, EventArgs <p1>)
		{
		}
	}

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653BF4", Offset = "0x653BF4")]
	public InputStyle inputStyle;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float whipActivateVelocity;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653C2C", Offset = "0x653C2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653C2C", Offset = "0x653C2C")]
	public float cooldown;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653C8C", Offset = "0x653C8C")]
	public VRTK_ControllerEvents primaryControllerEvents;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRTK_ControllerEvents secondaryControllerEvents;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FW_VRTK_PlayerDash dash;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float lerpTime;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float snapDelayTimer;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float minDistanceForNormalLerp;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float lastDash;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform playArea;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform headset;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 controllerDelta;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 lastControllerDelta;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x653CC4", Offset = "0x653CC4")]
	private static bool <IsCooled>k__BackingField;

	[Token(Token = "0x1700005C")]
	private float SqrActivateVel
	{
		[Token(Token = "0x600054E")]
		[Address(RVA = "0x997B74", Offset = "0x997B74", VA = "0x997B74")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005D")]
	public static bool IsCooled
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0x997B80", Offset = "0x997B80", VA = "0x997B80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AB7C", Offset = "0x66AB7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000550")]
		[Address(RVA = "0x997BE8", Offset = "0x997BE8", VA = "0x997BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AB8C", Offset = "0x66AB8C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event EventHandler Cooled
	{
		[Token(Token = "0x6000551")]
		[Address(RVA = "0x997C58", Offset = "0x997C58", VA = "0x997C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AB9C", Offset = "0x66AB9C")]
		add
		{
		}
		[Token(Token = "0x6000552")]
		[Address(RVA = "0x997D88", Offset = "0x997D88", VA = "0x997D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ABAC", Offset = "0x66ABAC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x997EB8", Offset = "0x997EB8", VA = "0x997EB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x997F20", Offset = "0x997F20", VA = "0x997F20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x997F88", Offset = "0x997F88", VA = "0x997F88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x99807C", Offset = "0x99807C", VA = "0x99807C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x9981C8", Offset = "0x9981C8", VA = "0x9981C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x998700", Offset = "0x998700", VA = "0x998700")]
	private void OnTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x998610", Offset = "0x998610", VA = "0x998610")]
	private void Dash(Vector3 direction)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x99896C", Offset = "0x99896C", VA = "0x99896C")]
	public FW_VRTK_PlayerDashInput()
	{
	}
}
[Token(Token = "0x20000A1")]
public class FW_VRTK_TimeSmoothedMoveInPlace : VRTK_MoveInPlace
{
	[Token(Token = "0x20003E6")]
	[Flags]
	private enum EngagedControllers
	{
		[Token(Token = "0x4001D61")]
		None = 0,
		[Token(Token = "0x4001D62")]
		Left = 1,
		[Token(Token = "0x4001D63")]
		Right = 2
	}

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	protected int samples;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected bool fixedUnscaledTime;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private EngagedControllers engagedControllers;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<Quaternion> trackedRotationHistory;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<Transform, Vector3> previousPositions;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x998AA8", Offset = "0x998AA8", VA = "0x998AA8", Slot = "8")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x998C28", Offset = "0x998C28", VA = "0x998C28", Slot = "12")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x998DCC", Offset = "0x998DCC", VA = "0x998DCC", Slot = "24")]
	protected override void EngageButtonPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x998F28", Offset = "0x998F28", VA = "0x998F28", Slot = "25")]
	protected override void EngageButtonReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x9990E8", Offset = "0x9990E8", VA = "0x9990E8", Slot = "20")]
	protected override void SetDeltaTransformData()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x9991F0", Offset = "0x9991F0", VA = "0x9991F0", Slot = "15")]
	protected override float CalculateListAverage()
	{
		return default(float);
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x999508", Offset = "0x999508", VA = "0x999508", Slot = "26")]
	protected override Quaternion DetermineAverageControllerRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x999740", Offset = "0x999740", VA = "0x999740", Slot = "21")]
	protected override void MovePlayArea(Vector3 moveDirection, float moveSpeed)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x999948", Offset = "0x999948", VA = "0x999948")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x999B3C", Offset = "0x999B3C", VA = "0x999B3C")]
	public FW_VRTK_TimeSmoothedMoveInPlace()
	{
	}
}
[Token(Token = "0x20000A2")]
public class Player : Actor
{
	[Token(Token = "0x20003E7")]
	public class ChangedEventArgs : EventArgs
	{
		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int startingHealth;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int currentHealth;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int amountChanged;

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x159501C", Offset = "0x159501C", VA = "0x159501C")]
		public ChangedEventArgs(int startingHealth, int currentHealth, int amountChanged)
		{
		}
	}

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected int startingHealth;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected float invulnerableSeconds;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentHealth;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastDamaged;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dead;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool invincible;

	[Token(Token = "0x1700005E")]
	public static bool Invincible
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x1594B84", Offset = "0x1594B84", VA = "0x1594B84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x1594BD4", Offset = "0x1594BD4", VA = "0x1594BD4")]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event EventHandler Died
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x1594C60", Offset = "0x1594C60", VA = "0x1594C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ABBC", Offset = "0x66ABBC")]
		add
		{
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x1594D60", Offset = "0x1594D60", VA = "0x1594D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ABCC", Offset = "0x66ABCC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event EventHandler<ChangedEventArgs> Changed
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x15908E4", Offset = "0x15908E4", VA = "0x15908E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ABDC", Offset = "0x66ABDC")]
		add
		{
		}
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x15909E4", Offset = "0x15909E4", VA = "0x15909E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ABEC", Offset = "0x66ABEC")]
		remove
		{
		}
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x1594E60", Offset = "0x1594E60", VA = "0x1594E60")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1594EE8", Offset = "0x1594EE8", VA = "0x1594EE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1594F68", Offset = "0x1594F68", VA = "0x1594F68")]
	private void Start()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x15950AC", Offset = "0x15950AC", VA = "0x15950AC")]
	private void Actor_Damaged(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x15951B4", Offset = "0x15951B4", VA = "0x15951B4")]
	private void ChangeHealth(int amount)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x15952D8", Offset = "0x15952D8", VA = "0x15952D8")]
	public Player()
	{
	}
}
[Token(Token = "0x20000A3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6487FC", Offset = "0x6487FC")]
public class PlayerDamageViz : MonoBehaviour
{
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AnimationCurve ppWeightCurve;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected AnimationCurve hapticWeightCurve;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected float effectTime;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected VignetteEffect vignetteEffect;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float pct;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x159534C", Offset = "0x159534C", VA = "0x159534C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x15953D8", Offset = "0x15953D8", VA = "0x15953D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1595464", Offset = "0x1595464", VA = "0x1595464")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x15954DC", Offset = "0x15954DC", VA = "0x15954DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x159565C", Offset = "0x159565C", VA = "0x159565C")]
	private void Player_Damaged(object sender, Player.ChangedEventArgs e)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1595694", Offset = "0x1595694", VA = "0x1595694")]
	public PlayerDamageViz()
	{
	}
}
[Token(Token = "0x20000A4")]
public class CameraEffect : MonoBehaviour
{
	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material effectMaterial;

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xAF1E30", Offset = "0xAF1E30", VA = "0xAF1E30")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xAF1F34", Offset = "0xAF1F34", VA = "0xAF1F34")]
	public CameraEffect()
	{
	}
}
[Token(Token = "0x20000A5")]
public class VignetteEffect : MonoBehaviour
{
	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x653D84", Offset = "0x653D84")]
	public Color color;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653D98", Offset = "0x653D98")]
	public float weight;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653DB0", Offset = "0x653DB0")]
	public float intensity;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653DC8", Offset = "0x653DC8")]
	public float smoothness;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653DE0", Offset = "0x653DE0")]
	public float roundness;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool rounded;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int colorID;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly int intensityID;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int smoothnessID;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int roundnessID;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly int roundedID;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material effectMat;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CameraEffect camEffect;

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x94326C", Offset = "0x94326C", VA = "0x94326C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x94331C", Offset = "0x94331C", VA = "0x94331C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x943384", Offset = "0x943384", VA = "0x943384")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x943628", Offset = "0x943628", VA = "0x943628")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x943700", Offset = "0x943700", VA = "0x943700")]
	public VignetteEffect()
	{
	}
}
[Token(Token = "0x20000A6")]
public class AimAssistTarget : MonoBehaviour
{
	[Token(Token = "0x4000619")]
	private const string aimAssistLayerName = "Aim Assist Hitbox";

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xAE1910", Offset = "0xAE1910", VA = "0xAE1910")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xAE1B00", Offset = "0xAE1B00", VA = "0xAE1B00")]
	public AimAssistTarget()
	{
	}
}
[Token(Token = "0x20000A7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648860", Offset = "0x648860")]
public class Projectile : DamageDealer
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653DF8", Offset = "0x653DF8")]
	public Rigidbody rigidbody;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask preferedDamage;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x653E30", Offset = "0x653E30")]
	public Actor owner;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x653E40", Offset = "0x653E40")]
	public int damage;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x653E50", Offset = "0x653E50")]
	public float lethalVelocity;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x653E60", Offset = "0x653E60")]
	private bool <Spent>k__BackingField;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x653E70", Offset = "0x653E70")]
	private bool <IsLethalVelocity>k__BackingField;

	[Token(Token = "0x1700005F")]
	public bool Spent
	{
		[Token(Token = "0x6000581")]
		[Address(RVA = "0x15967B8", Offset = "0x15967B8", VA = "0x15967B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ABFC", Offset = "0x66ABFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000582")]
		[Address(RVA = "0x15967C0", Offset = "0x15967C0", VA = "0x15967C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC0C", Offset = "0x66AC0C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public bool IsLethalVelocity
	{
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x15967CC", Offset = "0x15967CC", VA = "0x15967CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC1C", Offset = "0x66AC1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000584")]
		[Address(RVA = "0x15967D4", Offset = "0x15967D4", VA = "0x15967D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC2C", Offset = "0x66AC2C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x15967E0", Offset = "0x15967E0", VA = "0x15967E0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1596838", Offset = "0x1596838", VA = "0x1596838")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1596844", Offset = "0x1596844", VA = "0x1596844")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x15968E8", Offset = "0x15968E8", VA = "0x15968E8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1596D1C", Offset = "0x1596D1C", VA = "0x1596D1C")]
	public Projectile()
	{
	}
}
[Token(Token = "0x20000A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6488C4", Offset = "0x6488C4")]
public class ProjectileSpawner : MonoBehaviour
{
	[Token(Token = "0x20003E8")]
	protected enum SpawnMoment
	{
		[Token(Token = "0x4001D68")]
		OnArmed,
		[Token(Token = "0x4001D69")]
		OnCooled
	}

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Projectile projectilePrefab;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected float projectileLifetime;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected SpawnMoment spawnMoment;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Weapon weapon;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Projectile armedProjectile;

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1596D30", Offset = "0x1596D30", VA = "0x1596D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1596D88", Offset = "0x1596D88", VA = "0x1596D88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1596EC0", Offset = "0x1596EC0", VA = "0x1596EC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1596FF8", Offset = "0x1596FF8", VA = "0x1596FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x159718C", Offset = "0x159718C", VA = "0x159718C")]
	private void SpawnProjectile(Weapon.ArmedEventArgs e)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x15973B4", Offset = "0x15973B4", VA = "0x15973B4")]
	private void Weapon_Cooled(object sender, Weapon.ArmedEventArgs e)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x15973CC", Offset = "0x15973CC", VA = "0x15973CC")]
	private void Weapon_Armed(object sender, Weapon.ArmedEventArgs e)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x15973E0", Offset = "0x15973E0", VA = "0x15973E0")]
	private void Weapon_Fired(object sender, Weapon.FiredEventArgs e)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x15975E8", Offset = "0x15975E8", VA = "0x15975E8")]
	public ProjectileSpawner()
	{
	}
}
[Token(Token = "0x20000A9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648928", Offset = "0x648928")]
public class SlingHaptics : MonoBehaviour
{
	[Token(Token = "0x20003E9")]
	public enum HapticCue
	{
		[Token(Token = "0x4001D6B")]
		None,
		[Token(Token = "0x4001D6C")]
		Tension,
		[Token(Token = "0x4001D6D")]
		Angle
	}

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653EB0", Offset = "0x653EB0")]
	public HapticCue hapticCue;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "MinMaxSliderAttribute", RVA = "0x653EE8", Offset = "0x653EE8")]
	public Vector2 tensionThreshhold;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "MinMaxSliderAttribute", RVA = "0x653F10", Offset = "0x653F10")]
	public Vector2 horzontalCueRange;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WeaponSling weapon;

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x8C8300", Offset = "0x8C8300", VA = "0x8C8300")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x8C8358", Offset = "0x8C8358", VA = "0x8C8358")]
	private void Update()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x8C8398", Offset = "0x8C8398", VA = "0x8C8398")]
	protected void VibrateCue(bool armed)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x8C855C", Offset = "0x8C855C", VA = "0x8C855C")]
	public SlingHaptics()
	{
	}
}
[Token(Token = "0x20000AA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x64898C", Offset = "0x64898C")]
public class SlingshotHaptics : MonoBehaviour
{
	[Token(Token = "0x20003EA")]
	public enum Controllers
	{
		[Token(Token = "0x4001D6F")]
		None,
		[Token(Token = "0x4001D70")]
		Dom,
		[Token(Token = "0x4001D71")]
		Nondom,
		[Token(Token = "0x4001D72")]
		Both
	}

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653F38", Offset = "0x653F38")]
	public Controllers tension;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Controllers predictedHit;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool cooldownPulse;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool releasePulse;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653F70", Offset = "0x653F70")]
	public float pulseLength;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pulseStrength;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "MinMaxSliderAttribute", RVA = "0x653FA8", Offset = "0x653FA8")]
	public Vector2 tensionThreshhold;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x653FD0", Offset = "0x653FD0")]
	public float predictedHitStrength;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WeaponSlingshot weapon;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRTK_ControllerReference controllerRefDom;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRTK_ControllerReference controllerRefNondom;

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x8C9D68", Offset = "0x8C9D68", VA = "0x8C9D68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x8C9DC0", Offset = "0x8C9DC0", VA = "0x8C9DC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x8C9EAC", Offset = "0x8C9EAC", VA = "0x8C9EAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x8C9F98", Offset = "0x8C9F98", VA = "0x8C9F98")]
	private void Update()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x8CA120", Offset = "0x8CA120", VA = "0x8CA120")]
	protected void VibrateCue()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x8CA2D0", Offset = "0x8CA2D0", VA = "0x8CA2D0")]
	private void Weapon_Cooled(object sender, Weapon.ArmedEventArgs e)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x8CA2F8", Offset = "0x8CA2F8", VA = "0x8CA2F8")]
	private void Weapon_Fired(object sender, Weapon.FiredEventArgs e)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x8CA320", Offset = "0x8CA320", VA = "0x8CA320")]
	public SlingshotHaptics()
	{
	}
}
[Token(Token = "0x20000AB")]
public class Weapon : MonoBehaviour
{
	[Token(Token = "0x20003EB")]
	public class FiredEventArgs : EventArgs
	{
		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Actor owner;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VectorRay trajectory;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lethalVelocity;

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x947BB4", Offset = "0x947BB4", VA = "0x947BB4")]
		public FiredEventArgs(Actor owner, VectorRay trajectory, float lethalVelocity = 0f)
		{
		}
	}

	[Token(Token = "0x20003EC")]
	public class ArmedEventArgs : EventArgs
	{
		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform projectileParent;

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x947B38", Offset = "0x947B38", VA = "0x947B38")]
		public ArmedEventArgs(Transform projectileParent)
		{
		}
	}

	[Token(Token = "0x20003ED")]
	public class PrecogHitArgs
	{
		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float accuracy;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float flightTime;

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x947C54", Offset = "0x947C54", VA = "0x947C54")]
		public PrecogHitArgs(RaycastHit raycastHit, float accuracy, float flightTime)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D3E8", Offset = "0x64D3E8")]
	private struct <OnDisable>d__31 : IAsyncStateMachine
	{
		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Weapon <>4__this;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x6E9340", Offset = "0x6E9340", VA = "0x6E9340", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x6E9348", Offset = "0x6E9348", VA = "0x6E9348", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D3F8", Offset = "0x64D3F8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static EventHandler<ArmedEventArgs> <>9__39_0;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EventHandler<ArmedEventArgs> <>9__39_1;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static EventHandler<FiredEventArgs> <>9__39_2;

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x94778C", Offset = "0x94778C", VA = "0x94778C")]
		public <>c()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x947794", Offset = "0x947794", VA = "0x947794")]
		internal void <.ctor>b__39_0(object <p0>, ArmedEventArgs <p1>)
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x947798", Offset = "0x947798", VA = "0x947798")]
		internal void <.ctor>b__39_1(object <p0>, ArmedEventArgs <p1>)
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x94779C", Offset = "0x94779C", VA = "0x94779C")]
		internal void <.ctor>b__39_2(object <p0>, FiredEventArgs <p1>)
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x9477A0", Offset = "0x9477A0", VA = "0x9477A0")]
		internal void <.cctor>b__40_0(object <p0>, EventArgs <p1>)
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x9477A4", Offset = "0x9477A4", VA = "0x9477A4")]
		internal void <.cctor>b__40_1(object <p0>, EventArgs <p1>)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x9477A8", Offset = "0x9477A8", VA = "0x9477A8")]
		internal void <.cctor>b__40_2(object <p0>, EventArgs <p1>)
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x9477AC", Offset = "0x9477AC", VA = "0x9477AC")]
		internal void <.cctor>b__40_3(object <p0>, PrecogHitArgs <p1>)
		{
		}
	}

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653FE8", Offset = "0x653FE8")]
	public Actor owner;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRTK_ControllerEvents domControllerEvents;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRTK_ControllerEvents nondomControllerEvents;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform domMount;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform nondomMount;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654090", Offset = "0x654090")]
	private bool <IsArmed>k__BackingField;

	[Token(Token = "0x17000061")]
	public bool IsArmed
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x946B74", Offset = "0x946B74", VA = "0x946B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AD1C", Offset = "0x66AD1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x946B7C", Offset = "0x946B7C", VA = "0x946B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AD2C", Offset = "0x66AD2C")]
		protected set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event EventHandler<ArmedEventArgs> Cooled
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x945C74", Offset = "0x945C74", VA = "0x945C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC3C", Offset = "0x66AC3C")]
		add
		{
		}
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x945D60", Offset = "0x945D60", VA = "0x945D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC4C", Offset = "0x66AC4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event EventHandler<ArmedEventArgs> Armed
	{
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x945E4C", Offset = "0x945E4C", VA = "0x945E4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC5C", Offset = "0x66AC5C")]
		add
		{
		}
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x945F38", Offset = "0x945F38", VA = "0x945F38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC6C", Offset = "0x66AC6C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event EventHandler<FiredEventArgs> Fired
	{
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x946024", Offset = "0x946024", VA = "0x946024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC7C", Offset = "0x66AC7C")]
		add
		{
		}
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x946110", Offset = "0x946110", VA = "0x946110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC8C", Offset = "0x66AC8C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event EventHandler Equipped
	{
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x9461FC", Offset = "0x9461FC", VA = "0x9461FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AC9C", Offset = "0x66AC9C")]
		add
		{
		}
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x946328", Offset = "0x946328", VA = "0x946328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ACAC", Offset = "0x66ACAC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event EventHandler Unequipped
	{
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x946454", Offset = "0x946454", VA = "0x946454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ACBC", Offset = "0x66ACBC")]
		add
		{
		}
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x946584", Offset = "0x946584", VA = "0x946584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ACCC", Offset = "0x66ACCC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event EventHandler AnyFired
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x9466B4", Offset = "0x9466B4", VA = "0x9466B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ACDC", Offset = "0x66ACDC")]
		add
		{
		}
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x9467E4", Offset = "0x9467E4", VA = "0x9467E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ACEC", Offset = "0x66ACEC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event EventHandler<PrecogHitArgs> PrecogHit
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x946914", Offset = "0x946914", VA = "0x946914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ACFC", Offset = "0x66ACFC")]
		add
		{
		}
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x946A44", Offset = "0x946A44", VA = "0x946A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AD0C", Offset = "0x66AD0C")]
		remove
		{
		}
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x946B88", Offset = "0x946B88", VA = "0x946B88", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x947094", Offset = "0x947094", VA = "0x947094", Slot = "5")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x66AD3C", Offset = "0x66AD3C")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x94715C", Offset = "0x94715C", VA = "0x94715C", Slot = "6")]
	protected virtual void OnCooled(ArmedEventArgs args)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x9471D0", Offset = "0x9471D0", VA = "0x9471D0", Slot = "7")]
	protected virtual void OnArmed(ArmedEventArgs args)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x947244", Offset = "0x947244", VA = "0x947244", Slot = "8")]
	protected virtual void OnFired(FiredEventArgs args)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x947304", Offset = "0x947304", VA = "0x947304", Slot = "9")]
	protected virtual void OnPrecogHit(PrecogHitArgs args)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x9473A0", Offset = "0x9473A0", VA = "0x9473A0")]
	public Weapon()
	{
	}
}
[Token(Token = "0x20000AC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6489F0", Offset = "0x6489F0")]
public class WeaponAudio : MonoBehaviour
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RandomizedAudioClip cooledAudio;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RandomizedAudioClip armedAudio;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RandomizedAudioClip firedAudio;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RandomizedAudioClip wooshAudio;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float velocityThreshold;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Weapon weapon;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRTK_VelocityEstimator velEst;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lastDot;

	[Token(Token = "0x17000062")]
	private bool VelocityThresholdMet
	{
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x947CA8", Offset = "0x947CA8", VA = "0x947CA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x947D2C", Offset = "0x947D2C", VA = "0x947D2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x947DC4", Offset = "0x947DC4", VA = "0x947DC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x94808C", Offset = "0x94808C", VA = "0x94808C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x948218", Offset = "0x948218", VA = "0x948218")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x94837C", Offset = "0x94837C", VA = "0x94837C")]
	private void PlayAudio(RandomizedAudioClip clip)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x948424", Offset = "0x948424", VA = "0x948424")]
	private void Weapon_Fired(object sender, Weapon.FiredEventArgs e)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x94845C", Offset = "0x94845C", VA = "0x94845C")]
	private void Weapon_Armed(object sender, Weapon.ArmedEventArgs e)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x948464", Offset = "0x948464", VA = "0x948464")]
	private void Weapon_Cooled(object sender, Weapon.ArmedEventArgs e)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x94846C", Offset = "0x94846C", VA = "0x94846C")]
	private void GameSettings_Changed(GameSettings.SettingKey key, int weaponIndex)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x948620", Offset = "0x948620", VA = "0x948620")]
	public WeaponAudio()
	{
	}
}
[Token(Token = "0x20000AD")]
public class WeaponSling : Weapon
{
	[Token(Token = "0x20003F0")]
	public enum ResetStyle
	{
		[Token(Token = "0x4001D83")]
		ExtendedDown,
		[Token(Token = "0x4001D84")]
		ExtendedForward,
		[Token(Token = "0x4001D85")]
		MountPoint,
		[Token(Token = "0x4001D86")]
		OffHand,
		[Token(Token = "0x4001D87")]
		OffHandFixedDistance
	}

	[Token(Token = "0x20003F1")]
	[Flags]
	public enum FireMoment
	{
		[Token(Token = "0x4001D89")]
		SameFrame = 1,
		[Token(Token = "0x4001D8A")]
		PreviousFrame = 2,
		[Token(Token = "0x4001D8B")]
		Lerp = 4,
		[Token(Token = "0x4001D8C")]
		BothFrames = 3,
		[Token(Token = "0x4001D8D")]
		BothAndLerp = 7
	}

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6540A0", Offset = "0x6540A0")]
	public Rigidbody slingTipRb;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SpringJoint spring;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6540D8", Offset = "0x6540D8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6540D8", Offset = "0x6540D8")]
	public float slingRadius;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public ResetStyle resetStyle;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float projectileLethalVelocity;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float velocityCap;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654130", Offset = "0x654130")]
	public LayerMask hitMask;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LayerMask blockerMask;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int fixedTimeStepsAhead;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int subdivisions;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float magPrecog;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector2 rotPrecog;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float projectileRadius;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float questVerticalMod;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public FireMoment fireMoments;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x654168", Offset = "0x654168")]
	public float springTension;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x654178", Offset = "0x654178")]
	public Vector3 slingTipVelocity;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 mountPointLastPos;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 mountPointVelocity;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 reloadPointLastPosition;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 reloadPointVelocity;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private VectorRay lastTrajectory;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private VectorRay currentTrajectory;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float triggerPullMax;

	[Token(Token = "0x17000063")]
	private bool IsQuest
	{
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x948630", Offset = "0x948630", VA = "0x948630")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x948638", Offset = "0x948638", VA = "0x948638")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x9486E4", Offset = "0x9486E4", VA = "0x9486E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x948798", Offset = "0x948798", VA = "0x948798", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x9487C8", Offset = "0x9487C8", VA = "0x9487C8", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x948E80", Offset = "0x948E80", VA = "0x948E80")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x949024", Offset = "0x949024", VA = "0x949024")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x949188", Offset = "0x949188", VA = "0x949188")]
	private void HandleInput()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x949284", Offset = "0x949284", VA = "0x949284")]
	private void Arm()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x9487F8", Offset = "0x9487F8", VA = "0x9487F8")]
	private void Fire()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x9487C0", Offset = "0x9487C0", VA = "0x9487C0")]
	protected void ResetSlingPos()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x949394", Offset = "0x949394", VA = "0x949394")]
	protected void ResetSlingPos(ResetStyle _resetStyle)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x949904", Offset = "0x949904", VA = "0x949904")]
	public WeaponSling()
	{
	}
}
[Token(Token = "0x20000AE")]
public class WeaponSlingshot : Weapon
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654188", Offset = "0x654188")]
	public Transform slingshotRoot;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform slingshotSight;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform projectileMount;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform unarmedTransform;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float projectileLethalVelocity;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float powerMult;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float velocityCap;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float coolDown;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6541C0", Offset = "0x6541C0")]
	public int predictionSteps;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public LayerMask hitMask;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LayerMask blockerMask;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float triggerPullMax;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float lastFired;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PrecogHitArgs precogHitArgs;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6541F8", Offset = "0x6541F8")]
	private bool <IsCooled>k__BackingField;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654208", Offset = "0x654208")]
	private VectorRay <CurrentTrajectory>k__BackingField;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654218", Offset = "0x654218")]
	private bool <PredictedHit>k__BackingField;

	[Token(Token = "0x17000064")]
	public bool IsCooled
	{
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x9499B0", Offset = "0x9499B0", VA = "0x9499B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ADA0", Offset = "0x66ADA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x9499B8", Offset = "0x9499B8", VA = "0x9499B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ADB0", Offset = "0x66ADB0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public VectorRay CurrentTrajectory
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x9499C4", Offset = "0x9499C4", VA = "0x9499C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ADC0", Offset = "0x66ADC0")]
		get
		{
			return default(VectorRay);
		}
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x9499D8", Offset = "0x9499D8", VA = "0x9499D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ADD0", Offset = "0x66ADD0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public bool PredictedHit
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x9499EC", Offset = "0x9499EC", VA = "0x9499EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ADE0", Offset = "0x66ADE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x9499F4", Offset = "0x9499F4", VA = "0x9499F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ADF0", Offset = "0x66ADF0")]
		private set
		{
		}
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x949A00", Offset = "0x949A00", VA = "0x949A00", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x949A38", Offset = "0x949A38", VA = "0x949A38")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x94A08C", Offset = "0x94A08C", VA = "0x94A08C")]
	private void HandleInput()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x949FE8", Offset = "0x949FE8", VA = "0x949FE8")]
	private void Cool()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x94A188", Offset = "0x94A188", VA = "0x94A188")]
	private void Arm()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x94A240", Offset = "0x94A240", VA = "0x94A240")]
	private void Fire()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x94A370", Offset = "0x94A370", VA = "0x94A370")]
	public WeaponSlingshot()
	{
	}
}
[Token(Token = "0x20000AF")]
public class Quest_FFR : MonoBehaviour
{
	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1598374", Offset = "0x1598374", VA = "0x1598374")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x15983F0", Offset = "0x15983F0", VA = "0x15983F0")]
	public Quest_FFR()
	{
	}
}
[Token(Token = "0x20000B0")]
public class RandomLineFromText : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D418", Offset = "0x64D418")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, bool> <>9__4_0;

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x15989A8", Offset = "0x15989A8", VA = "0x15989A8")]
		public <>c()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x15989B0", Offset = "0x15989B0", VA = "0x15989B0")]
		internal bool <OnEnable>b__4_0(string n)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected TextMeshProUGUI text;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TextAsset textAsset;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] facts;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<TextAsset, bool[]> visitedDict;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x15983F8", Offset = "0x15983F8", VA = "0x15983F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x15988C4", Offset = "0x15988C4", VA = "0x15988C4")]
	public RandomLineFromText()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ScriptedSheep : MonoBehaviour
{
	[Token(Token = "0x20003F3")]
	public enum ScriptedSequence
	{
		[Token(Token = "0x4001D91")]
		mountain_0,
		[Token(Token = "0x4001D92")]
		moutain_1,
		[Token(Token = "0x4001D93")]
		mountain_2,
		[Token(Token = "0x4001D94")]
		forest_0,
		[Token(Token = "0x4001D95")]
		forest_1,
		[Token(Token = "0x4001D96")]
		forest_2
	}

	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D428", Offset = "0x64D428")]
	private sealed class <IdleCoro>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedSheep <>4__this;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <lastBaa>5__2;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <randWait>5__3;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x159FF80", Offset = "0x159FF80", VA = "0x159FF80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x159FFF0", Offset = "0x159FFF0", VA = "0x159FFF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x159EFA0", Offset = "0x159EFA0", VA = "0x159EFA0")]
		[DebuggerHidden]
		public <IdleCoro>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x159FE58", Offset = "0x159FE58", VA = "0x159FE58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x159FE5C", Offset = "0x159FE5C", VA = "0x159FE5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x159FF88", Offset = "0x159FF88", VA = "0x159FF88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D438", Offset = "0x64D438")]
	private sealed class <Mountain0>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedSheep <>4__this;

		[Token(Token = "0x1700022C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x15A0124", Offset = "0x15A0124", VA = "0x15A0124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x15A0194", Offset = "0x15A0194", VA = "0x15A0194", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x159EFCC", Offset = "0x159EFCC", VA = "0x159EFCC")]
		[DebuggerHidden]
		public <Mountain0>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x159FFF8", Offset = "0x159FFF8", VA = "0x159FFF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x159FFFC", Offset = "0x159FFFC", VA = "0x159FFFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x15A012C", Offset = "0x15A012C", VA = "0x15A012C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D448", Offset = "0x64D448")]
	private sealed class <Mountain2>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedSheep <>4__this;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <lastBaa>5__2;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <randWait>5__3;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x15A03D0", Offset = "0x15A03D0", VA = "0x15A03D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x15A0440", Offset = "0x15A0440", VA = "0x15A0440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x159EFF8", Offset = "0x159EFF8", VA = "0x159EFF8")]
		[DebuggerHidden]
		public <Mountain2>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x15A019C", Offset = "0x15A019C", VA = "0x15A019C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x15A01A0", Offset = "0x15A01A0", VA = "0x15A01A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x15A03D8", Offset = "0x15A03D8", VA = "0x15A03D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D458", Offset = "0x64D458")]
	private sealed class <Forest0>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedSheep <>4__this;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pct>5__2;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <lastBaa>5__4;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <randWait>5__5;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x159F95C", Offset = "0x159F95C", VA = "0x159F95C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x159F9CC", Offset = "0x159F9CC", VA = "0x159F9CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x159F024", Offset = "0x159F024", VA = "0x159F024")]
		[DebuggerHidden]
		public <Forest0>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x159F294", Offset = "0x159F294", VA = "0x159F294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x159F298", Offset = "0x159F298", VA = "0x159F298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x159F964", Offset = "0x159F964", VA = "0x159F964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D468", Offset = "0x64D468")]
	private sealed class <Forest1>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedSheep <>4__this;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pct>5__2;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020CE")]
			[Address(RVA = "0x159FDE0", Offset = "0x159FDE0", VA = "0x159FDE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x159FE50", Offset = "0x159FE50", VA = "0x159FE50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x159F050", Offset = "0x159F050", VA = "0x159F050")]
		[DebuggerHidden]
		public <Forest1>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x159F9D4", Offset = "0x159F9D4", VA = "0x159F9D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x159F9D8", Offset = "0x159F9D8", VA = "0x159F9D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x159FDE8", Offset = "0x159FDE8", VA = "0x159FDE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D478", Offset = "0x64D478")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScriptedSheep <>4__this;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 destination;

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x159F19C", Offset = "0x159F19C", VA = "0x159F19C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x159F1A4", Offset = "0x159F1A4", VA = "0x159F1A4")]
		internal bool <WalkTo>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D488", Offset = "0x64D488")]
	private sealed class <WalkTo>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScriptedSheep <>4__this;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 destination;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0x15A0670", Offset = "0x15A0670", VA = "0x15A0670", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0x15A06E0", Offset = "0x15A06E0", VA = "0x15A06E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x159F128", Offset = "0x159F128", VA = "0x159F128")]
		[DebuggerHidden]
		public <WalkTo>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x15A0448", Offset = "0x15A0448", VA = "0x15A0448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x15A044C", Offset = "0x15A044C", VA = "0x15A044C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x15A0678", Offset = "0x15A0678", VA = "0x15A0678", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654248", Offset = "0x654248")]
	[SerializeField]
	protected ScriptedSequence sequence;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654294", Offset = "0x654294")]
	[SerializeField]
	protected GameObject pack;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected bool showPack;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6542F0", Offset = "0x6542F0")]
	[SerializeField]
	protected Transform goal1;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Transform goal2;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Transform goal3;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Transform enemy;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65436C", Offset = "0x65436C")]
	[SerializeField]
	protected Bear bear;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected GameObject fern;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected AnimationCurve thrownCurve;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected float thrownHeight;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	protected float thrownTime;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator anim;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool grabbed;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform playAreaTransform;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform headsetTransform;

	[Token(Token = "0x17000067")]
	private float DistFromPlayer
	{
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x159E888", Offset = "0x159E888", VA = "0x159E888")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000068")]
	private Vector3 PlayerRootPos
	{
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x159E960", Offset = "0x159E960", VA = "0x159E960")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000069")]
	private Transform PlayAreaTransform
	{
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x159EAEC", Offset = "0x159EAEC", VA = "0x159EAEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	private Transform HeadsetTransform
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x159EB94", Offset = "0x159EB94", VA = "0x159EB94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x159EC3C", Offset = "0x159EC3C", VA = "0x159EC3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x159ECDC", Offset = "0x159ECDC", VA = "0x159ECDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x159EF2C", Offset = "0x159EF2C", VA = "0x159EF2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AE00", Offset = "0x66AE00")]
	private IEnumerator IdleCoro()
	{
		return null;
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x159ED5C", Offset = "0x159ED5C", VA = "0x159ED5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AE64", Offset = "0x66AE64")]
	private IEnumerator Mountain0()
	{
		return null;
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x159EDD0", Offset = "0x159EDD0", VA = "0x159EDD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AEC8", Offset = "0x66AEC8")]
	private IEnumerator Mountain2()
	{
		return null;
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x159EE44", Offset = "0x159EE44", VA = "0x159EE44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AF2C", Offset = "0x66AF2C")]
	private IEnumerator Forest0()
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x159EEB8", Offset = "0x159EEB8", VA = "0x159EEB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AF90", Offset = "0x66AF90")]
	private IEnumerator Forest1()
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x159F07C", Offset = "0x159F07C", VA = "0x159F07C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AFF4", Offset = "0x66AFF4")]
	private IEnumerator WalkTo(Vector3 destination)
	{
		return null;
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x159F154", Offset = "0x159F154", VA = "0x159F154")]
	public void Dropped()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x159F15C", Offset = "0x159F15C", VA = "0x159F15C")]
	public ScriptedSheep()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x159F16C", Offset = "0x159F16C", VA = "0x159F16C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B058", Offset = "0x66B058")]
	private bool <Forest0>b__31_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x159F17C", Offset = "0x159F17C", VA = "0x159F17C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B068", Offset = "0x66B068")]
	private bool <Forest1>b__32_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000B2")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648A54", Offset = "0x648A54")]
public class BakedLightFalloff : MonoBehaviour
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6543F8", Offset = "0x6543F8")]
	[SerializeField]
	protected FalloffType falloffType;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xAE3B28", Offset = "0xAE3B28", VA = "0xAE3B28")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xAE3BBC", Offset = "0xAE3BBC", VA = "0xAE3BBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xAE3C1C", Offset = "0xAE3C1C", VA = "0xAE3C1C")]
	public BakedLightFalloff()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xAE3C24", Offset = "0xAE3C24", VA = "0xAE3C24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B078", Offset = "0x66B078")]
	private void <OnEnable>b__1_0(Light[] requests, NativeArray<LightDataGI> lightsOutput)
	{
	}
}
[Serializable]
[Token(Token = "0x20000B3")]
public class ClassField
{
	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private UnityEngine.Object m_ClassAsset;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string m_ClassType;

	[Token(Token = "0x1700006B")]
	public Type ClassType
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x84DE2C", Offset = "0x84DE2C", VA = "0x84DE2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x84DECC", Offset = "0x84DECC", VA = "0x84DECC")]
	public static implicit operator Type(ClassField classField)
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x84DED8", Offset = "0x84DED8", VA = "0x84DED8")]
	public ClassField()
	{
	}
}
[Token(Token = "0x20000B4")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648A64", Offset = "0x648A64")]
public class CustomIK : MonoBehaviour
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rootBone;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform elbowBone;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endBone;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetIK;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform elbowIK;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool debugLines;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool handRotation;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool isEnabled;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x854384", Offset = "0x854384", VA = "0x854384")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x8544E0", Offset = "0x8544E0", VA = "0x8544E0")]
	private void CalculateIK()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x855224", Offset = "0x855224", VA = "0x855224")]
	private Vector3 CalculateElbowAdjacent()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x855168", Offset = "0x855168", VA = "0x855168")]
	private float CalculateTriangleHeight(float side1, float side2, float side3)
	{
		return default(float);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x85571C", Offset = "0x85571C", VA = "0x85571C")]
	public CustomIK()
	{
	}
}
[Token(Token = "0x20000B5")]
public class MinMaxSliderAttribute : PropertyAttribute
{
	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float minDefaultVal;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxDefaultVal;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float min;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float max;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x158E928", Offset = "0x158E928", VA = "0x158E928")]
	public MinMaxSliderAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
	{
	}
}
[Serializable]
[Token(Token = "0x20000B6")]
public class SceneField
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private UnityEngine.Object m_SceneAsset;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string m_SceneName;

	[Token(Token = "0x1700006C")]
	public string SceneName
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x159B4F4", Offset = "0x159B4F4", VA = "0x159B4F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006D")]
	public string ScenePath
	{
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x159B4FC", Offset = "0x159B4FC", VA = "0x159B4FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x159B580", Offset = "0x159B580", VA = "0x159B580")]
	public static implicit operator string(SceneField sceneField)
	{
		return null;
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x159B5E4", Offset = "0x159B5E4", VA = "0x159B5E4")]
	public SceneField()
	{
	}
}
[Token(Token = "0x20000B7")]
public struct VectorRay : IEquatable<VectorRay>
{
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 origin;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 vector;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x6E92A0", Offset = "0x6E92A0", VA = "0x6E92A0")]
	public VectorRay(Vector3 origin, Vector3 vector)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x942B50", Offset = "0x942B50", VA = "0x942B50")]
	public static VectorRay Lerp(VectorRay a, VectorRay b, float t)
	{
		return default(VectorRay);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x942C30", Offset = "0x942C30", VA = "0x942C30")]
	public static VectorRay LerpUnclamped(VectorRay a, VectorRay b, float t)
	{
		return default(VectorRay);
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x6E92B0", Offset = "0x6E92B0", VA = "0x6E92B0", Slot = "4")]
	private bool System.IEquatable<VectorRay>.Equals(VectorRay other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x942FA0", Offset = "0x942FA0", VA = "0x942FA0")]
	public static bool operator ==(VectorRay c1, VectorRay c2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x9430F4", Offset = "0x9430F4", VA = "0x9430F4")]
	public static bool operator !=(VectorRay c1, VectorRay c2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x6E92E8", Offset = "0x6E92E8", VA = "0x6E92E8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x6E92F0", Offset = "0x6E92F0", VA = "0x6E92F0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B8")]
public static class Trajectory
{
	[Token(Token = "0x20003FB")]
	private struct TrajSim
	{
		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly VectorRay origin;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 curPos;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 lastPos;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 velocity;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly float fixedDeltaTime;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Vector3 gravity;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int currentStep;

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x6E7F44", Offset = "0x6E7F44", VA = "0x6E7F44")]
		public TrajSim(VectorRay origin)
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x6E7F78", Offset = "0x6E7F78", VA = "0x6E7F78")]
		public void Clear()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x6E7FA4", Offset = "0x6E7FA4", VA = "0x6E7FA4")]
		public void AdvanceToStep(int step)
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x6E7FAC", Offset = "0x6E7FAC", VA = "0x6E7FAC")]
		public void Advance(int steps)
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x6E7FE4", Offset = "0x6E7FE4", VA = "0x6E7FE4")]
		public void Advance()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D498", Offset = "0x64D498")]
	private struct <>c__DisplayClass13_0
	{
		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float projectileRadius;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public LayerMask blockerMask;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LayerMask hitMask;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int steps;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float magOffset;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 rotOffset;
	}

	[Token(Token = "0x400069C")]
	private const float DEBUG_DURATION = 5f;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Collider[] hits;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<Transform> foundTargets;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Tuple<int, Collider, Vector2, float>[] possibleTargets;

	[Token(Token = "0x40006A0")]
	private const int CHECK_RESOLUTION = 1;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x8961D0", Offset = "0x8961D0", VA = "0x8961D0")]
	public static VectorRay LerpCast(VectorRay from, VectorRay to, float radius, int subdivisions, int samples, LayerMask hitMask, [Optional] LayerMask blockerMask)
	{
		return default(VectorRay);
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x896518", Offset = "0x896518", VA = "0x896518")]
	public static VectorRay ShotgunCast(VectorRay original, float magOffset, Vector2 rotOffset, float projectileRadius, int subdivisions, int steps, out RaycastHit raycastHit, out float accuracy, out float flightTime, LayerMask hitMask, [Optional] LayerMask blockerMask)
	{
		return default(VectorRay);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x896DF4", Offset = "0x896DF4", VA = "0x896DF4")]
	public static VectorRay ShotgunCast(VectorRay original, float magOffset, Vector2 rotOffset, float projectileRadius, int subdivisions, int steps, out float accuracy, LayerMask hitMask, [Optional] LayerMask blockerMask)
	{
		return default(VectorRay);
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x8969B8", Offset = "0x8969B8", VA = "0x8969B8")]
	public static bool TrajectoryCast(VectorRay vectorRay, Color color, float radius, int steps, LayerMask hitMask, out RaycastHit hitInfo, out float flightTime, [Optional] LayerMask blockerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x896430", Offset = "0x896430", VA = "0x896430")]
	public static bool TrajectoryCast(VectorRay vectorRay, Color color, float radius, int steps, LayerMask hitMask, [Optional] LayerMask blockerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x897008", Offset = "0x897008", VA = "0x897008")]
	public static float CalculateInitialAngle(float TargetDistance, float ProjectileVelocity)
	{
		return default(float);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x8970C8", Offset = "0x8970C8", VA = "0x8970C8")]
	public static float CalculateInitialVelocity(float targetDistance, float initialAngle)
	{
		return default(float);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x897188", Offset = "0x897188", VA = "0x897188")]
	public static VectorRay SweepCast(VectorRay original, float magOffset, Vector2 rotOffset, float projectileRadius, int subdivisions, int steps, out RaycastHit raycastHit, out float accuracy, out float flightTime, LayerMask hitMask, [Optional] LayerMask blockerMask)
	{
		return default(VectorRay);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x898738", Offset = "0x898738", VA = "0x898738")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B088", Offset = "0x66B088")]
	internal static bool <SweepCast>g__CastFromStep|13_0(VectorRay origin, int startingStep, ref <>c__DisplayClass13_0 P_2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x898510", Offset = "0x898510", VA = "0x898510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B098", Offset = "0x66B098")]
	internal static VectorRay <SweepCast>g__ModifyRay|13_1(VectorRay ray, float xLerp, float yLerp, ref <>c__DisplayClass13_0 P_3)
	{
		return default(VectorRay);
	}
}
[Token(Token = "0x20000B9")]
public class VRTK_TransformFollowLossyScale : VRTK_TransformFollow
{
	[Token(Token = "0x6000615")]
	[Address(RVA = "0x812540", Offset = "0x812540", VA = "0x812540", Slot = "11")]
	protected override Vector3 GetScaleToFollow()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x812618", Offset = "0x812618", VA = "0x812618")]
	public VRTK_TransformFollowLossyScale()
	{
	}
}
[Token(Token = "0x20000BA")]
public class AvatarHandController : MonoBehaviour
{
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool dominant;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform handModel;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LevelCollection.PlayerType currentPlayerType;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int resetHash;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly int dominantHash;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int weaponHash;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int triggerHash;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly int gripHash;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly int armedHash;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly int firedHash;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6544B4", Offset = "0x6544B4")]
	private int <CurrentWeapon>k__BackingField;

	[Token(Token = "0x1700006E")]
	private int CurrentWeapon
	{
		[Token(Token = "0x6000617")]
		[Address(RVA = "0xAE2D0C", Offset = "0xAE2D0C", VA = "0xAE2D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B0A8", Offset = "0x66B0A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000618")]
		[Address(RVA = "0xAE2D14", Offset = "0xAE2D14", VA = "0xAE2D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B0B8", Offset = "0x66B0B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xAE2D1C", Offset = "0xAE2D1C", VA = "0xAE2D1C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xAE2E60", Offset = "0xAE2E60", VA = "0xAE2E60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xAE2F8C", Offset = "0xAE2F8C", VA = "0xAE2F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xAE32BC", Offset = "0xAE32BC", VA = "0xAE32BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xAE3538", Offset = "0xAE3538", VA = "0xAE3538")]
	private void UpdateLayerWeights()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xAE3084", Offset = "0xAE3084", VA = "0xAE3084")]
	private void MirrorModel(bool v)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xAE3214", Offset = "0xAE3214", VA = "0xAE3214")]
	private void ReinitAnimator()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xAE36A8", Offset = "0xAE36A8", VA = "0xAE36A8")]
	private void GameSettings_Changed(GameSettings.SettingKey key, int val)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xAE3710", Offset = "0xAE3710", VA = "0xAE3710")]
	private void Weapon_Equipped(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xAE3838", Offset = "0xAE3838", VA = "0xAE3838")]
	private void Weapon_Unequipped(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xAE3960", Offset = "0xAE3960", VA = "0xAE3960")]
	private void Weapon_Armed(object sender, Weapon.ArmedEventArgs e)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xAE39CC", Offset = "0xAE39CC", VA = "0xAE39CC")]
	private void Weapon_Fired(object sender, Weapon.FiredEventArgs e)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xAE3A38", Offset = "0xAE3A38", VA = "0xAE3A38")]
	public AvatarHandController()
	{
	}
}
[Token(Token = "0x20000BB")]
public class DeflectOnTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D4A8", Offset = "0x64D4A8")]
	private sealed class <DeflectCoro>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeflectOnTriggerEnter <>4__this;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 deflectDir;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <targetRot>5__2;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <pct>5__3;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020E1")]
			[Address(RVA = "0x858164", Offset = "0x858164", VA = "0x858164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020E3")]
			[Address(RVA = "0x8581D4", Offset = "0x8581D4", VA = "0x8581D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x857CE4", Offset = "0x857CE4", VA = "0x857CE4")]
		[DebuggerHidden]
		public <DeflectCoro>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x857D20", Offset = "0x857D20", VA = "0x857D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x857D24", Offset = "0x857D24", VA = "0x857D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x85816C", Offset = "0x85816C", VA = "0x85816C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float deflectTime;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RandomizedAudioClip audioClip;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion startRot;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isDeflecting;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x857AAC", Offset = "0x857AAC", VA = "0x857AAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x857AF0", Offset = "0x857AF0", VA = "0x857AF0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x857C38", Offset = "0x857C38", VA = "0x857C38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B0C8", Offset = "0x66B0C8")]
	private IEnumerator DeflectCoro(Vector3 deflectDir)
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x857D10", Offset = "0x857D10", VA = "0x857D10")]
	public DeflectOnTriggerEnter()
	{
	}
}
[Token(Token = "0x20000BC")]
public class EffectOnHitboxHit : MonoBehaviour
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject destructionPrefab;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hitbox hitbox;

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x858D74", Offset = "0x858D74", VA = "0x858D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x858DE4", Offset = "0x858DE4", VA = "0x858DE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x858E7C", Offset = "0x858E7C", VA = "0x858E7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x858F14", Offset = "0x858F14", VA = "0x858F14")]
	private void Hitbox_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x859058", Offset = "0x859058", VA = "0x859058")]
	public EffectOnHitboxHit()
	{
	}
}
[Token(Token = "0x20000BD")]
public class InstanceEmissiveColor : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Renderer rend;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6544E4", Offset = "0x6544E4")]
	[SerializeField]
	protected Color color;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int colorPropID;

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xFCB594", Offset = "0xFCB594", VA = "0xFCB594")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xFCB714", Offset = "0xFCB714", VA = "0xFCB714")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xFCB598", Offset = "0xFCB598", VA = "0xFCB598")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xFCB718", Offset = "0xFCB718", VA = "0xFCB718")]
	public InstanceEmissiveColor()
	{
	}
}
[Token(Token = "0x20000BE")]
public class VFXColorLerp : MonoBehaviour
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] particleList;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient colorGradient;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x8A1DF4", Offset = "0x8A1DF4", VA = "0x8A1DF4")]
	public void ShowFX(float percent)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x8A1F50", Offset = "0x8A1F50", VA = "0x8A1F50")]
	public VFXColorLerp()
	{
	}
}
[Token(Token = "0x20000BF")]
public class WolfTrigger : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WolfSpawner[] wolfSpawners;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelObjective levelObjective;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x952210", Offset = "0x952210", VA = "0x952210")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x9522B8", Offset = "0x9522B8", VA = "0x9522B8")]
	private void TriggerSpawners()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x9523D4", Offset = "0x9523D4", VA = "0x9523D4")]
	public WolfTrigger()
	{
	}
}
[Token(Token = "0x20000C0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x648A74", Offset = "0x648A74")]
public class CharacterDialogue : ScriptableObject
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> clips;

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x847BA8", Offset = "0x847BA8", VA = "0x847BA8")]
	public CharacterDialogue()
	{
	}
}
[Token(Token = "0x20000C1")]
public class Dialogue : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003FE")]
	public class CharacterRef
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterDialogue dialogue;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x665380", Offset = "0x665380")]
		public bool play;

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x858D04", Offset = "0x858D04", VA = "0x858D04")]
		public CharacterRef()
		{
		}
	}

	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D4B8", Offset = "0x64D4B8")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterRef characterRef;

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x8588DC", Offset = "0x8588DC", VA = "0x8588DC")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x8588E4", Offset = "0x8588E4", VA = "0x8588E4")]
		internal bool <DialogueEnumerator>b__0()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x858920", Offset = "0x858920", VA = "0x858920")]
		internal bool <DialogueEnumerator>b__1()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D4C8", Offset = "0x64D4C8")]
	private sealed class <DialogueEnumerator>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterRef characterRef;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass7_0 <>8__1;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioClip[] <clips>5__2;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitUntil <waitUntilAudioSourceIsDonePlaying>5__3;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitUntil <waitUntilPlay>5__4;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <index>5__5;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <clipCount>5__6;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020EB")]
			[Address(RVA = "0x858C8C", Offset = "0x858C8C", VA = "0x858C8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020ED")]
			[Address(RVA = "0x858CFC", Offset = "0x858CFC", VA = "0x858CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x858838", Offset = "0x858838", VA = "0x858838")]
		[DebuggerHidden]
		public <DialogueEnumerator>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x85894C", Offset = "0x85894C", VA = "0x85894C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x858950", Offset = "0x858950", VA = "0x858950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x858C94", Offset = "0x858C94", VA = "0x858C94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterRef[] dialogues;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected IEnumerator[] enumerators;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int[] indexes;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected int length;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x8585DC", Offset = "0x8585DC", VA = "0x8585DC")]
	public void PlayCharacterDialogue(int characterDialogueIndex)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x858644", Offset = "0x858644", VA = "0x858644")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x858734", Offset = "0x858734", VA = "0x858734")]
	private void Start()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x8587C4", Offset = "0x8587C4", VA = "0x8587C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B12C", Offset = "0x66B12C")]
	private IEnumerator DialogueEnumerator(CharacterRef characterRef)
	{
		return null;
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x858864", Offset = "0x858864", VA = "0x858864")]
	public Dialogue()
	{
	}
}
[Token(Token = "0x20000C2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648AE4", Offset = "0x648AE4")]
public class EventOnTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action action;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x99404C", Offset = "0x99404C", VA = "0x99404C")]
	public void SetEvent(Action action)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x994054", Offset = "0x994054", VA = "0x994054")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x994068", Offset = "0x994068", VA = "0x994068")]
	public EventOnTriggerEnter()
	{
	}
}
[Token(Token = "0x20000C3")]
public class Jesse : Actor
{
	[Token(Token = "0x2000401")]
	public enum Animations
	{
		[Token(Token = "0x4001DD8")]
		Idle,
		[Token(Token = "0x4001DD9")]
		Throw,
		[Token(Token = "0x4001DDA")]
		Shrug,
		[Token(Token = "0x4001DDB")]
		Point,
		[Token(Token = "0x4001DDC")]
		HeadScratch,
		[Token(Token = "0x4001DDD")]
		FingerWag,
		[Token(Token = "0x4001DDE")]
		Worried,
		[Token(Token = "0x4001DDF")]
		ArmPump
	}

	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D4D8", Offset = "0x64D4D8")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x200062A")]
		private sealed class <<WalkCoro>g__WalkEnumerator|0>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass16_0 <>4__this;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForFixedUpdate <fixedUpdate>5__2;

			[Token(Token = "0x170002E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002893")]
				[Address(RVA = "0xFCCC2C", Offset = "0xFCCC2C", VA = "0xFCCC2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002895")]
				[Address(RVA = "0xFCCC9C", Offset = "0xFCCC9C", VA = "0xFCCC9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002890")]
			[Address(RVA = "0xFCC8B4", Offset = "0xFCC8B4", VA = "0xFCC8B4")]
			[DebuggerHidden]
			public <<WalkCoro>g__WalkEnumerator|0>d(int <>1__state)
			{
			}

			[Token(Token = "0x6002891")]
			[Address(RVA = "0xFCC8E0", Offset = "0xFCC8E0", VA = "0xFCC8E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002892")]
			[Address(RVA = "0xFCC8E4", Offset = "0xFCC8E4", VA = "0xFCC8E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002894")]
			[Address(RVA = "0xFCCC34", Offset = "0xFCCC34", VA = "0xFCCC34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Jesse <>4__this;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string walk;

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xFCB958", Offset = "0xFCB958", VA = "0xFCB958")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xFCB960", Offset = "0xFCB960", VA = "0xFCB960")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673678", Offset = "0x673678")]
		internal IEnumerator <WalkCoro>g__WalkEnumerator|0()
		{
			return null;
		}
	}

	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D4E8", Offset = "0x64D4E8")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x200062B")]
		private sealed class <<ThrowCoro>g__ThrowEnumerator|0>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass17_0 <>4__this;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass17_1 <>8__1;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <progress>5__2;

			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <targetRot>5__3;

			[Token(Token = "0x170002E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002899")]
				[Address(RVA = "0xFCD170", Offset = "0xFCD170", VA = "0xFCD170", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600289B")]
				[Address(RVA = "0xFCD1E0", Offset = "0xFCD1E0", VA = "0xFCD1E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002896")]
			[Address(RVA = "0xFCCCA4", Offset = "0xFCCCA4", VA = "0xFCCCA4")]
			[DebuggerHidden]
			public <<ThrowCoro>g__ThrowEnumerator|0>d(int <>1__state)
			{
			}

			[Token(Token = "0x6002897")]
			[Address(RVA = "0xFCCCD0", Offset = "0xFCCCD0", VA = "0xFCCCD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002898")]
			[Address(RVA = "0xFCCCD4", Offset = "0xFCCCD4", VA = "0xFCCCD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600289A")]
			[Address(RVA = "0xFCD178", Offset = "0xFCD178", VA = "0xFCD178", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Jesse <>4__this;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaitForSeconds startwait;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaitForSeconds wait;

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xFCBAD0", Offset = "0xFCBAD0", VA = "0xFCBAD0")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xFCBAD8", Offset = "0xFCBAD8", VA = "0xFCBAD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6736DC", Offset = "0x6736DC")]
		internal IEnumerator <ThrowCoro>g__ThrowEnumerator|0()
		{
			return null;
		}
	}

	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D4F8", Offset = "0x64D4F8")]
	private sealed class <>c__DisplayClass17_1
	{
		[Token(Token = "0x200062C")]
		private sealed class <<ThrowCoro>g__Throw|1>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass17_1 <>4__this;

			[Token(Token = "0x170002E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600289F")]
				[Address(RVA = "0xFCD73C", Offset = "0xFCD73C", VA = "0xFCD73C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028A1")]
				[Address(RVA = "0xFCD7AC", Offset = "0xFCD7AC", VA = "0xFCD7AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600289C")]
			[Address(RVA = "0xFCD1E8", Offset = "0xFCD1E8", VA = "0xFCD1E8")]
			[DebuggerHidden]
			public <<ThrowCoro>g__Throw|1>d(int <>1__state)
			{
			}

			[Token(Token = "0x600289D")]
			[Address(RVA = "0xFCD214", Offset = "0xFCD214", VA = "0xFCD214", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600289E")]
			[Address(RVA = "0xFCD218", Offset = "0xFCD218", VA = "0xFCD218", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xFCD744", Offset = "0xFCD744", VA = "0xFCD744", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int count;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass17_0 CS$<>8__locals1;

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xFCD0F4", Offset = "0xFCD0F4", VA = "0xFCD0F4")]
		public <>c__DisplayClass17_1()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xFCD0FC", Offset = "0xFCD0FC", VA = "0xFCD0FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673740", Offset = "0x673740")]
		internal IEnumerator <ThrowCoro>g__Throw|1()
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D508", Offset = "0x64D508")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__22_0;

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xFCC814", Offset = "0xFCC814", VA = "0xFCC814")]
		public <>c()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xFCC81C", Offset = "0xFCC81C", VA = "0xFCC81C")]
		internal bool <Start>b__22_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D518", Offset = "0x64D518")]
	private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Jesse <>4__this;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020FA")]
			[Address(RVA = "0xFCD940", Offset = "0xFCD940", VA = "0xFCD940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020FC")]
			[Address(RVA = "0xFCD9B0", Offset = "0xFCD9B0", VA = "0xFCD9B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xFCBF30", Offset = "0xFCBF30", VA = "0xFCBF30")]
		[DebuggerHidden]
		public <Start>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xFCD7B4", Offset = "0xFCD7B4", VA = "0xFCD7B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xFCD7B8", Offset = "0xFCD7B8", VA = "0xFCD7B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xFCD948", Offset = "0xFCD948", VA = "0xFCD948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PathCreator pathCreator;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform handTransform;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject projectilePrefab;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x654524", Offset = "0x654524")]
	public float moveSpeed;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rotationSpeed;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float throwPower;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x654534", Offset = "0x654534")]
	public Transform target;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Animator animator;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected VertexPath path;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Projectile[] projectiles;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool playerDamaged;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected float distanceTraveled;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector3 projectileStartPosition;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool lookAtTarget;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xFCB788", Offset = "0xFCB788", VA = "0xFCB788")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xFCB84C", Offset = "0xFCB84C", VA = "0xFCB84C")]
	public Coroutine WalkCoro()
	{
		return null;
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xFCB9D4", Offset = "0xFCB9D4", VA = "0xFCB9D4")]
	public Coroutine ThrowCoro()
	{
		return null;
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xFCBB4C", Offset = "0xFCBB4C", VA = "0xFCBB4C")]
	public void PlayAnimation(Animations animationType)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xFCBC08", Offset = "0xFCBC08", VA = "0xFCBC08")]
	private void Actor_AnyDamaged(object sender, DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xFCBC98", Offset = "0xFCBC98", VA = "0xFCBC98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xFCBD34", Offset = "0xFCBD34", VA = "0xFCBD34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xFCBEBC", Offset = "0xFCBEBC", VA = "0xFCBEBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B190", Offset = "0x66B190")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xFCBF5C", Offset = "0xFCBF5C", VA = "0xFCBF5C")]
	private Quaternion GetTrajectoryRotation(Vector3 direction, float power)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xFCC0FC", Offset = "0xFCC0FC", VA = "0xFCC0FC")]
	private Vector3 GetDirectionToTarget(Vector3 originPosition, Vector3 targetPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xFCC1A4", Offset = "0xFCC1A4", VA = "0xFCC1A4")]
	private Vector3 GetForwardVelocity(Quaternion rotation, float power)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xFCC058", Offset = "0xFCC058", VA = "0xFCC058")]
	private float GetTrajectoryAngle(Vector3 direction, float power)
	{
		return default(float);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xFCC294", Offset = "0xFCC294", VA = "0xFCC294")]
	private Projectile GetProjectileFromPool()
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xFCC524", Offset = "0xFCC524", VA = "0xFCC524")]
	private void PopulateProjectiles()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xFCC748", Offset = "0xFCC748", VA = "0xFCC748")]
	public Jesse()
	{
	}
}
[Token(Token = "0x20000C4")]
public class SheepRolling : MonoBehaviour
{
	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PathCreator path;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationSpeed;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float moveSpeed;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform sheepTransfrom;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float pathProgress;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool inverted;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x8C4DD0", Offset = "0x8C4DD0", VA = "0x8C4DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x8C4FDC", Offset = "0x8C4FDC", VA = "0x8C4FDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x8C4FE4", Offset = "0x8C4FE4", VA = "0x8C4FE4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x8C52D8", Offset = "0x8C52D8", VA = "0x8C52D8")]
	public SheepRolling()
	{
	}
}
[Token(Token = "0x20000C5")]
public class Tutorial : LevelObjective
{
	[Serializable]
	[Token(Token = "0x2000407")]
	public class MenuVideoGroup
	{
		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuVideo[] menus;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useSettings;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameSettings.SettingKey setting;

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x89B7B0", Offset = "0x89B7B0", VA = "0x89B7B0")]
		public MenuVideoGroup()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000408")]
	public class MenuVideoPlatform
	{
		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MenuVideoGroup[] groups;

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x89B7B8", Offset = "0x89B7B8", VA = "0x89B7B8")]
		public MenuVideoPlatform()
		{
		}
	}

	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D528", Offset = "0x64D528")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tutorial <>4__this;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sheepLength;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x89948C", Offset = "0x89948C", VA = "0x89948C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x899494", Offset = "0x899494", VA = "0x899494")]
		internal bool <Start>b__1()
		{
			return default(bool);
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x8995E4", Offset = "0x8995E4", VA = "0x8995E4")]
		internal bool <Start>b__2()
		{
			return default(bool);
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x899738", Offset = "0x899738", VA = "0x899738")]
		internal bool <Start>b__3()
		{
			return default(bool);
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x899764", Offset = "0x899764", VA = "0x899764")]
		internal bool <Start>b__4()
		{
			return default(bool);
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x8997A0", Offset = "0x8997A0", VA = "0x8997A0")]
		internal bool <Start>b__5()
		{
			return default(bool);
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x8997DC", Offset = "0x8997DC", VA = "0x8997DC")]
		internal bool <Start>b__6()
		{
			return default(bool);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x899818", Offset = "0x899818", VA = "0x899818")]
		internal bool <Start>b__7()
		{
			return default(bool);
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x8998A4", Offset = "0x8998A4", VA = "0x8998A4")]
		internal bool <Start>b__9()
		{
			return default(bool);
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x8998E0", Offset = "0x8998E0", VA = "0x8998E0")]
		internal bool <Start>b__10()
		{
			return default(bool);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x89990C", Offset = "0x89990C", VA = "0x89990C")]
		internal bool <Start>b__11()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200040A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D538", Offset = "0x64D538")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__37_0;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__37_8;

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x899358", Offset = "0x899358", VA = "0x899358")]
		public <>c()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x899360", Offset = "0x899360", VA = "0x899360")]
		internal bool <Start>b__37_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x8993F8", Offset = "0x8993F8", VA = "0x8993F8")]
		internal bool <Start>b__37_8()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200040B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D548", Offset = "0x64D548")]
	private sealed class <Start>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass37_0 <>8__1;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitUntil <waitForJesseDialogue>5__2;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitUntil <waitForDavidDialogue>5__3;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitUntil <waitForWalkTrigger>5__4;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitUntil <waitForMenuMovement>5__5;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitUntil <waitForMenuWeapon>5__6;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WaitUntil <waitForMenuDomninantHand>5__7;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WaitForSeconds[] <randomWaits>5__8;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WaitUntil <waitUntilLastSheepIsDisabled>5__9;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine <walkCoro>5__10;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine <throwCoro>5__11;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int <i>5__12;

		[Token(Token = "0x1700023C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002111")]
			[Address(RVA = "0x89B598", Offset = "0x89B598", VA = "0x89B598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002113")]
			[Address(RVA = "0x89B608", Offset = "0x89B608", VA = "0x89B608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x898F20", Offset = "0x898F20", VA = "0x898F20")]
		[DebuggerHidden]
		public <Start>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x899D98", Offset = "0x899D98", VA = "0x899D98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x899D9C", Offset = "0x899D9C", VA = "0x899D9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x89B5A0", Offset = "0x89B5A0", VA = "0x89B5A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200040C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D558", Offset = "0x64D558")]
	private sealed class <WaitUntilGameObjectsAreDisabled>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] gameObjects;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <count>5__2;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <length>5__3;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x89B738", Offset = "0x89B738", VA = "0x89B738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x89B7A8", Offset = "0x89B7A8", VA = "0x89B7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x898FC0", Offset = "0x898FC0", VA = "0x898FC0")]
		[DebuggerHidden]
		public <WaitUntilGameObjectsAreDisabled>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x89B610", Offset = "0x89B610", VA = "0x89B610", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x89B614", Offset = "0x89B614", VA = "0x89B614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x89B740", Offset = "0x89B740", VA = "0x89B740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D568", Offset = "0x64D568")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SDK_BaseController.ControllerType _type;

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x899940", Offset = "0x899940", VA = "0x899940")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x899948", Offset = "0x899948", VA = "0x899948")]
		internal bool <MenuVideoEnumerator>b__0(MenuVideoPlatform p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D578", Offset = "0x64D578")]
	private sealed class <MenuVideoEnumerator>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SDK_BaseController.ControllerType _type;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Tutorial <>4__this;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass40_0 <>8__1;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <toggled>5__2;

		[Token(Token = "0x17000240")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x899D20", Offset = "0x899D20", VA = "0x899D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002121")]
			[Address(RVA = "0x899D90", Offset = "0x899D90", VA = "0x899D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x89912C", Offset = "0x89912C", VA = "0x89912C")]
		[DebuggerHidden]
		public <MenuVideoEnumerator>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x899984", Offset = "0x899984", VA = "0x899984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x899988", Offset = "0x899988", VA = "0x899988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x899D28", Offset = "0x899D28", VA = "0x899D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SettingSelectionMenu menuMovement;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SettingSelectionMenu menuWeapon;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SettingSelectionMenu menuDominantHand;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x654544", Offset = "0x654544")]
	public Transform frontTransform;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform backTransform;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x654554", Offset = "0x654554")]
	public PathCreator pathSheepRollingLeft;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PathCreator pathSheepRollingRight;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x654564", Offset = "0x654564")]
	public GameObject[] targetsWood;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] targetsFruit;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] targetsClairvoyance;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x654574", Offset = "0x654574")]
	public GameObject sheepRollingPrefab;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x654584", Offset = "0x654584")]
	public AudioClip slingAudio;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip slingshotAudio;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x654594", Offset = "0x654594")]
	public bool playerDamaged;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6545A4", Offset = "0x6545A4")]
	public MenuVideoPlatform[] platforms;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected MenuVideoPlatform currentMenuVideoPlatform;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected SDK_BaseController.ControllerType controllerType;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected GameObject[] sheepsRolling;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Dialogue dialogue;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Jesse jesse;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected bool clairvoyanceTriggered;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected EventOnTriggerEnter walkEventOnTrigger;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected bool walkTriggered;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameManager gameManager;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform headsetTransform;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected int menuVideoIndex;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected bool menuVideoOpen;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected MenuVideo currentMenuVideo;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected int currentSetting;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x898AB4", Offset = "0x898AB4", VA = "0x898AB4")]
	private void Clairvoyance_ActivationEnd(object sender, ActivationEventArgs e)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x898ABC", Offset = "0x898ABC", VA = "0x898ABC")]
	private void Clairvoyance_ActivationBegin(object sender, ActivationEventArgs e)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x898AC8", Offset = "0x898AC8", VA = "0x898AC8")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x898B58", Offset = "0x898B58", VA = "0x898B58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x898C8C", Offset = "0x898C8C", VA = "0x898C8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x898DC0", Offset = "0x898DC0", VA = "0x898DC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x898E98", Offset = "0x898E98", VA = "0x898E98")]
	private void OpenCurrentMenuVideo()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x898EA4", Offset = "0x898EA4", VA = "0x898EA4")]
	private void CloseCurrentMenuVideo()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x898EAC", Offset = "0x898EAC", VA = "0x898EAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B1F4", Offset = "0x66B1F4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x898F4C", Offset = "0x898F4C", VA = "0x898F4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B258", Offset = "0x66B258")]
	private IEnumerator WaitUntilGameObjectsAreDisabled(GameObject[] gameObjects)
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x898FEC", Offset = "0x898FEC", VA = "0x898FEC")]
	private void ToggleGameObjects(GameObject[] gameObjects, bool enabled)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x899094", Offset = "0x899094", VA = "0x899094")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B2BC", Offset = "0x66B2BC")]
	private IEnumerator MenuVideoEnumerator(SDK_BaseController.ControllerType _type)
	{
		return null;
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x899158", Offset = "0x899158", VA = "0x899158")]
	private MenuVideo GetCurrentMenuVideo(SDK_BaseController.ControllerType _type)
	{
		return null;
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x899280", Offset = "0x899280", VA = "0x899280")]
	public Tutorial()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x8992E8", Offset = "0x8992E8", VA = "0x8992E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B320", Offset = "0x66B320")]
	private void <Awake>b__34_0()
	{
	}
}
[Token(Token = "0x20000C6")]
public class MenuVideo : Menu
{
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Canvas canvas;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float animationTime;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x158E5F8", Offset = "0x158E5F8", VA = "0x158E5F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x158E6F0", Offset = "0x158E6F0", VA = "0x158E6F0")]
	public void Toggle(bool val)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x158E834", Offset = "0x158E834", VA = "0x158E834", Slot = "6")]
	public override void GameManager_PauseStateChanged()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x158E910", Offset = "0x158E910", VA = "0x158E910")]
	public MenuVideo()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x648B48", Offset = "0x648B48")]
public class MenuVideoLayout : ScriptableObject
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string title;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6545B4", Offset = "0x6545B4")]
	public string description;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6545C4", Offset = "0x6545C4")]
	public VideoClip gesture;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VideoClip gameplay;

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x158E920", Offset = "0x158E920", VA = "0x158E920")]
	public MenuVideoLayout()
	{
	}
}
[Token(Token = "0x20000C8")]
public class BearBeeToss : MonoBehaviour
{
	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D588", Offset = "0x64D588")]
	private sealed class <ThrowHive>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BearBeeToss <>4__this;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002125")]
			[Address(RVA = "0xAEFA1C", Offset = "0xAEFA1C", VA = "0xAEFA1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002127")]
			[Address(RVA = "0xAEFA8C", Offset = "0xAEFA8C", VA = "0xAEFA8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xAEF59C", Offset = "0xAEF59C", VA = "0xAEF59C")]
		[DebuggerHidden]
		public <ThrowHive>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xAEF6AC", Offset = "0xAEF6AC", VA = "0xAEF6AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xAEF6B0", Offset = "0xAEF6B0", VA = "0xAEF6B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xAEFA24", Offset = "0xAEFA24", VA = "0xAEFA24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hitbox hitbox;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6545E4", Offset = "0x6545E4")]
	private float beehiveAnimationSpeed;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float introDelay;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float hiveActiveDelay;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float biteDelay;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float hiveDeactivateDelay;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float delayBetweenThrows;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject myHive;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654684", Offset = "0x654684")]
	private bool <Standing>k__BackingField;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject beeHive;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayableDirector beeAnim;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator anim;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly int hitParam;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private readonly int sitParam;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly int biteParam;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private readonly int throwLParam;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly int throwRParam;

	[Token(Token = "0x1700006F")]
	public bool Standing
	{
		[Token(Token = "0x6000668")]
		[Address(RVA = "0xAEF2EC", Offset = "0xAEF2EC", VA = "0xAEF2EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B330", Offset = "0x66B330")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000669")]
		[Address(RVA = "0xAEF2F4", Offset = "0xAEF2F4", VA = "0xAEF2F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B340", Offset = "0x66B340")]
		private set
		{
		}
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xAEF300", Offset = "0xAEF300", VA = "0xAEF300")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xAEF42C", Offset = "0xAEF42C", VA = "0xAEF42C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xAEF4C4", Offset = "0xAEF4C4", VA = "0xAEF4C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xAEF564", Offset = "0xAEF564", VA = "0xAEF564")]
	private void Actor_Damaged(object sender, Hitbox.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xAEF4F0", Offset = "0xAEF4F0", VA = "0xAEF4F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B350", Offset = "0x66B350")]
	private IEnumerator ThrowHive()
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xAEF5C8", Offset = "0xAEF5C8", VA = "0xAEF5C8")]
	public BearBeeToss()
	{
	}
}
[Token(Token = "0x20000C9")]
public class BeeTossHiveOrComb : MonoBehaviour
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] objects;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xAF051C", Offset = "0xAF051C", VA = "0xAF051C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xAF05FC", Offset = "0xAF05FC", VA = "0xAF05FC")]
	public BeeTossHiveOrComb()
	{
	}
}
[Token(Token = "0x20000CA")]
public class BeeTossLevelManager : LevelObjective
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BearBeeToss[] beeTossScripts;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasWon;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xAF0604", Offset = "0xAF0604", VA = "0xAF0604")]
	private void Update()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xAF06A4", Offset = "0xAF06A4", VA = "0xAF06A4")]
	private void NextLevel()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xAF06AC", Offset = "0xAF06AC", VA = "0xAF06AC")]
	public BeeTossLevelManager()
	{
	}
}
[Token(Token = "0x20000CB")]
public class TentTargetRangeHarpMultiHitboxSwapChildren : MonoBehaviour
{
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject undestroyedModel;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject destroyedModel;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Actor myActor;

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x895790", Offset = "0x895790", VA = "0x895790")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x895848", Offset = "0x895848", VA = "0x895848")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x8958E4", Offset = "0x8958E4", VA = "0x8958E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x89593C", Offset = "0x89593C", VA = "0x89593C")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x895A98", Offset = "0x895A98", VA = "0x895A98")]
	public TentTargetRangeHarpMultiHitboxSwapChildren()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TentTargetRangeLevelManager : LevelObjective
{
	[Serializable]
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D598", Offset = "0x64D598")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Actor, bool> <>9__5_0;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Actor, bool> <>9__5_1;

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x896068", Offset = "0x896068", VA = "0x896068")]
		public <>c()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x896070", Offset = "0x896070", VA = "0x896070")]
		internal bool <Awake>b__5_0(Actor n)
		{
			return default(bool);
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x8960DC", Offset = "0x8960DC", VA = "0x8960DC")]
		internal bool <Awake>b__5_1(Actor n)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6546B4", Offset = "0x6546B4")]
	private float percentToDestroyToWin;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Actor> rangeTargets;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float completedPercentage;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startingObjects;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x895AA0", Offset = "0x895AA0", VA = "0x895AA0")]
	private void Reset()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x895B08", Offset = "0x895B08", VA = "0x895B08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x895D1C", Offset = "0x895D1C", VA = "0x895D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x895D88", Offset = "0x895D88", VA = "0x895D88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x895E24", Offset = "0x895E24", VA = "0x895E24")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x895F9C", Offset = "0x895F9C", VA = "0x895F9C")]
	public TentTargetRangeLevelManager()
	{
	}
}
[Token(Token = "0x20000CD")]
public class CirclingLion : LevelObjective
{
	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D5A8", Offset = "0x64D5A8")]
	private sealed class <Hit>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CirclingLion <>4__this;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <healthLostPercent>5__2;

		[Token(Token = "0x17000244")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600212F")]
			[Address(RVA = "0x848F6C", Offset = "0x848F6C", VA = "0x848F6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0x848FDC", Offset = "0x848FDC", VA = "0x848FDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x8489E0", Offset = "0x8489E0", VA = "0x8489E0")]
		[DebuggerHidden]
		public <Hit>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x848C8C", Offset = "0x848C8C", VA = "0x848C8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x848C90", Offset = "0x848C90", VA = "0x848C90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x848F74", Offset = "0x848F74", VA = "0x848F74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D5B8", Offset = "0x64D5B8")]
	private sealed class <Death>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CirclingLion <>4__this;

		[Token(Token = "0x17000246")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002135")]
			[Address(RVA = "0x848C14", Offset = "0x848C14", VA = "0x848C14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002137")]
			[Address(RVA = "0x848C84", Offset = "0x848C84", VA = "0x848C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x848A0C", Offset = "0x848A0C", VA = "0x848A0C")]
		[DebuggerHidden]
		public <Death>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x848AF4", Offset = "0x848AF4", VA = "0x848AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x848AF8", Offset = "0x848AF8", VA = "0x848AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x848C1C", Offset = "0x848C1C", VA = "0x848C1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D5C8", Offset = "0x64D5C8")]
	private sealed class <Roar>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CirclingLion <>4__this;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <animSpeed>5__2;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600213B")]
			[Address(RVA = "0x849158", Offset = "0x849158", VA = "0x849158", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600213D")]
			[Address(RVA = "0x8491C8", Offset = "0x8491C8", VA = "0x8491C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x848A38", Offset = "0x848A38", VA = "0x848A38")]
		[DebuggerHidden]
		public <Roar>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x848FE4", Offset = "0x848FE4", VA = "0x848FE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x848FE8", Offset = "0x848FE8", VA = "0x848FE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x849160", Offset = "0x849160", VA = "0x849160", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int health;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PathCreator path;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float moveSpeed;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float afterHitDelay;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int startingHealth;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654734", Offset = "0x654734")]
	[SerializeField]
	private float angerSpeedQuotient;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float roarEveryThisSeconds;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654790", Offset = "0x654790")]
	public bool takeDamage;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float pathProgress;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool moving;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool dead;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float currentSpeed;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float roarTime;

	[Token(Token = "0x17000070")]
	public int Health
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x8483D8", Offset = "0x8483D8", VA = "0x8483D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x8483E0", Offset = "0x8483E0", VA = "0x8483E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x8484B0", Offset = "0x8484B0", VA = "0x8484B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x8484BC", Offset = "0x8484BC", VA = "0x8484BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x8485E0", Offset = "0x8485E0", VA = "0x8485E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x8486C0", Offset = "0x8486C0", VA = "0x8486C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x84843C", Offset = "0x84843C", VA = "0x84843C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B3B4", Offset = "0x66B3B4")]
	private IEnumerator Hit()
	{
		return null;
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x84864C", Offset = "0x84864C", VA = "0x84864C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B418", Offset = "0x66B418")]
	private IEnumerator Death()
	{
		return null;
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x84896C", Offset = "0x84896C", VA = "0x84896C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B47C", Offset = "0x66B47C")]
	private IEnumerator Roar()
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x848A64", Offset = "0x848A64", VA = "0x848A64")]
	public CirclingLion()
	{
	}
}
[Token(Token = "0x20000CE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648BB8", Offset = "0x648BB8")]
public class CirclingLionStalactite : MonoBehaviour
{
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D5D8", Offset = "0x64D5D8")]
	private sealed class <Fall>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CirclingLionStalactite <>4__this;

		[Token(Token = "0x1700024A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002141")]
			[Address(RVA = "0x84992C", Offset = "0x84992C", VA = "0x84992C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002143")]
			[Address(RVA = "0x84999C", Offset = "0x84999C", VA = "0x84999C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x849518", Offset = "0x849518", VA = "0x849518")]
		[DebuggerHidden]
		public <Fall>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x8495AC", Offset = "0x8495AC", VA = "0x8495AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x8495B0", Offset = "0x8495B0", VA = "0x8495B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x849934", Offset = "0x849934", VA = "0x849934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fallToHeight;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject indicator;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform fx;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject triggerTarget;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider meshCollider;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 position;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion rotation;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator anim;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool fallTriggered;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WaitForFixedUpdate fixedUpdateWait;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool canDamageLion;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool falling;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x8491D0", Offset = "0x8491D0", VA = "0x8491D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x8492D4", Offset = "0x8492D4", VA = "0x8492D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x8493E4", Offset = "0x8493E4", VA = "0x8493E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x849260", Offset = "0x849260", VA = "0x849260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B4E0", Offset = "0x66B4E0")]
	private IEnumerator Fall()
	{
		return null;
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x849544", Offset = "0x849544", VA = "0x849544")]
	public CirclingLionStalactite()
	{
	}
}
[Token(Token = "0x20000CF")]
public class AppleShotChallengeManager : LevelObjective
{
	[Token(Token = "0x2000415")]
	public enum PhaseState
	{
		[Token(Token = "0x4001E27")]
		winning,
		[Token(Token = "0x4001E28")]
		losing,
		[Token(Token = "0x4001E29")]
		waiting
	}

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AppleShotPhase[] phases;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PhaseState state;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Actor appleActor;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private JesseAppleShotChallenge jesseScript;

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xAE262C", Offset = "0xAE262C", VA = "0xAE262C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xAE2748", Offset = "0xAE2748", VA = "0xAE2748")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xAE2834", Offset = "0xAE2834", VA = "0xAE2834")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xAE29A8", Offset = "0xAE29A8", VA = "0xAE29A8")]
	private void JesseScript_CompleteLevel()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xAE29B4", Offset = "0xAE29B4", VA = "0xAE29B4")]
	public AppleShotChallengeManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D0")]
public class AppleShotPhase
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PathCreator winPath;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PathCreator losePath;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xAE2A24", Offset = "0xAE2A24", VA = "0xAE2A24")]
	public AppleShotPhase()
	{
	}
}
[Token(Token = "0x20000D1")]
public class JesseAppleShotChallenge : MonoBehaviour
{
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D5E8", Offset = "0x64D5E8")]
	private sealed class <HitDelay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JesseAppleShotChallenge <>4__this;

		[Token(Token = "0x1700024C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0xFCE814", Offset = "0xFCE814", VA = "0xFCE814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002149")]
			[Address(RVA = "0xFCE884", Offset = "0xFCE884", VA = "0xFCE884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xFCE190", Offset = "0xFCE190", VA = "0xFCE190")]
		[DebuggerHidden]
		public <HitDelay>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xFCE6EC", Offset = "0xFCE6EC", VA = "0xFCE6EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xFCE6F0", Offset = "0xFCE6F0", VA = "0xFCE6F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xFCE81C", Offset = "0xFCE81C", VA = "0xFCE81C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D5F8", Offset = "0x64D5F8")]
	private sealed class <ResetApple>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JesseAppleShotChallenge <>4__this;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0xFCF048", Offset = "0xFCF048", VA = "0xFCF048", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0xFCF0B8", Offset = "0xFCF0B8", VA = "0xFCF0B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xFCE1BC", Offset = "0xFCE1BC", VA = "0xFCE1BC")]
		[DebuggerHidden]
		public <ResetApple>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xFCECAC", Offset = "0xFCECAC", VA = "0xFCECAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xFCECB0", Offset = "0xFCECB0", VA = "0xFCECB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xFCF050", Offset = "0xFCF050", VA = "0xFCF050", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D608", Offset = "0x64D608")]
	private sealed class <Celebrate>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JesseAppleShotChallenge <>4__this;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002153")]
			[Address(RVA = "0xFCE674", Offset = "0xFCE674", VA = "0xFCE674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002155")]
			[Address(RVA = "0xFCE6E4", Offset = "0xFCE6E4", VA = "0xFCE6E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xFCE1E8", Offset = "0xFCE1E8", VA = "0xFCE1E8")]
		[DebuggerHidden]
		public <Celebrate>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xFCE524", Offset = "0xFCE524", VA = "0xFCE524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xFCE528", Offset = "0xFCE528", VA = "0xFCE528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xFCE67C", Offset = "0xFCE67C", VA = "0xFCE67C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D618", Offset = "0x64D618")]
	private sealed class <MoveToNextPosition>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JesseAppleShotChallenge <>4__this;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AppleShotPhase phase;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002159")]
			[Address(RVA = "0xFCEC34", Offset = "0xFCEC34", VA = "0xFCEC34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600215B")]
			[Address(RVA = "0xFCECA4", Offset = "0xFCECA4", VA = "0xFCECA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xFCE2AC", Offset = "0xFCE2AC", VA = "0xFCE2AC")]
		[DebuggerHidden]
		public <MoveToNextPosition>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xFCE88C", Offset = "0xFCE88C", VA = "0xFCE88C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xFCE890", Offset = "0xFCE890", VA = "0xFCE890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xFCEC3C", Offset = "0xFCEC3C", VA = "0xFCEC3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject headBone;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject handBone;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject appleTarget;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float walkSpeed;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float hitDelay;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float timeToPlace;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float celebrateTime;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator anim;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource audio;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] clips;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool recentlyHit;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool walking;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody appleRb;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PathCreator currentPath;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float pathProgress;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject appleTargetChild;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion startingAppleRot;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AppleShotChallengeManager managerScript;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AppleShotChallengeManager.PhaseState currentState;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int currentPhase;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SwapChildrenOnHit swapScript;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WaitForEndOfFrame coUpdate;

	[Token(Token = "0x1400001E")]
	public event Action CompleteLevel
	{
		[Token(Token = "0x6000695")]
		[Address(RVA = "0xFCD9B8", Offset = "0xFCD9B8", VA = "0xFCD9B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B544", Offset = "0x66B544")]
		add
		{
		}
		[Token(Token = "0x6000696")]
		[Address(RVA = "0xFCDAA4", Offset = "0xFCDAA4", VA = "0xFCDAA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B554", Offset = "0x66B554")]
		remove
		{
		}
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xFCDB90", Offset = "0xFCDB90", VA = "0xFCDB90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xFCDCC8", Offset = "0xFCDCC8", VA = "0xFCDCC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xFCDF88", Offset = "0xFCDF88", VA = "0xFCDF88")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xFCDE10", Offset = "0xFCDE10", VA = "0xFCDE10")]
	private void GetHitOnBody()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xFCE0D8", Offset = "0xFCE0D8", VA = "0xFCE0D8")]
	public void HitTooEarly()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xFCE064", Offset = "0xFCE064", VA = "0xFCE064")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B564", Offset = "0x66B564")]
	private IEnumerator HitDelay()
	{
		return null;
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xFCE11C", Offset = "0xFCE11C", VA = "0xFCE11C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B5C8", Offset = "0x66B5C8")]
	private IEnumerator ResetApple()
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xFCDD9C", Offset = "0xFCDD9C", VA = "0xFCDD9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B62C", Offset = "0x66B62C")]
	private IEnumerator Celebrate()
	{
		return null;
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xFCE214", Offset = "0xFCE214", VA = "0xFCE214")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B690", Offset = "0x66B690")]
	private IEnumerator MoveToNextPosition(AppleShotPhase phase)
	{
		return null;
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xFCE2D8", Offset = "0xFCE2D8", VA = "0xFCE2D8")]
	private void Moving(PathCreator path)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xFCE4A8", Offset = "0xFCE4A8", VA = "0xFCE4A8")]
	public JesseAppleShotChallenge()
	{
	}
}
[Token(Token = "0x20000D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648C1C", Offset = "0x648C1C")]
public class SheepRunChallenge : MonoBehaviour
{
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D628", Offset = "0x64D628")]
	private sealed class <StartStopSheep>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SheepRunChallenge <>4__this;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000254")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600215F")]
			[Address(RVA = "0x8C6634", Offset = "0x8C6634", VA = "0x8C6634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002161")]
			[Address(RVA = "0x8C66A4", Offset = "0x8C66A4", VA = "0x8C66A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x8C5BC4", Offset = "0x8C5BC4", VA = "0x8C5BC4")]
		[DebuggerHidden]
		public <StartStopSheep>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x8C6250", Offset = "0x8C6250", VA = "0x8C6250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x8C6254", Offset = "0x8C6254", VA = "0x8C6254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x8C663C", Offset = "0x8C663C", VA = "0x8C663C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float sheepSpeed;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float moveTime;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float pauseTime;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int sheepAmount;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654908", Offset = "0x654908")]
	[SerializeField]
	private int phase;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject sheepRunPrefab;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] spawnedSheep;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] pathProgress;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SwapChildrenOnHit[] swapArray;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator[] anims;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PathCreator path;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForEndOfFrame update;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> remainingSheep;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject[] targetRef;

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x8C52E0", Offset = "0x8C52E0", VA = "0x8C52E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x8C5B50", Offset = "0x8C5B50", VA = "0x8C5B50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B6F4", Offset = "0x66B6F4")]
	private IEnumerator StartStopSheep()
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x8C5BF0", Offset = "0x8C5BF0", VA = "0x8C5BF0")]
	private void MoveSheep()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x8C53DC", Offset = "0x8C53DC", VA = "0x8C53DC")]
	private void FillStartingPositions()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x8C54A8", Offset = "0x8C54A8", VA = "0x8C54A8")]
	private void SpawnSheep()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x8C586C", Offset = "0x8C586C", VA = "0x8C586C")]
	private void GetSwapScripts()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x8C599C", Offset = "0x8C599C", VA = "0x8C599C")]
	private void VaryAnimations()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x8C61AC", Offset = "0x8C61AC", VA = "0x8C61AC")]
	public SheepRunChallenge()
	{
	}
}
[Token(Token = "0x20000D3")]
public class SheepRunLevelManager : LevelObjective
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int targetsHitToWin;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int hitTargets;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x8C66AC", Offset = "0x8C66AC", VA = "0x8C66AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x8C6748", Offset = "0x8C6748", VA = "0x8C6748")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x8C67E4", Offset = "0x8C67E4", VA = "0x8C67E4")]
	private void Actor_AnyDamaged(object sender, Actor.DamagedEventArgs e)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x8C6808", Offset = "0x8C6808", VA = "0x8C6808")]
	public SheepRunLevelManager()
	{
	}
}
[Token(Token = "0x20000D4")]
public class HidingSheepReturn : MonoBehaviour
{
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D638", Offset = "0x64D638")]
	private sealed class <ReturnToTree>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HidingSheepReturn <>4__this;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000256")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002165")]
			[Address(RVA = "0x9AF28C", Offset = "0x9AF28C", VA = "0x9AF28C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002167")]
			[Address(RVA = "0x9AF2FC", Offset = "0x9AF2FC", VA = "0x9AF2FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x9AEEC0", Offset = "0x9AEEC0", VA = "0x9AEEC0")]
		[DebuggerHidden]
		public <ReturnToTree>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x9AEF98", Offset = "0x9AEF98", VA = "0x9AEF98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x9AEF9C", Offset = "0x9AEF9C", VA = "0x9AEF9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x9AF294", Offset = "0x9AF294", VA = "0x9AF294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float timeBeforeTargetSpawn;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float idleWithTargetTime;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float movementSpeed;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject target;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject parent;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PathCreator path;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SwapChildrenOnHit swapScript;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayableDirector playable;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator anim;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool returningToTree;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool moving;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float pathProgress;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForFixedUpdate fixedUpdate;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaitForSeconds shortWait;

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x9AEAA8", Offset = "0x9AEAA8", VA = "0x9AEAA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x9AEB80", Offset = "0x9AEB80", VA = "0x9AEB80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x9AED4C", Offset = "0x9AED4C", VA = "0x9AED4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x9AECD8", Offset = "0x9AECD8", VA = "0x9AECD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B758", Offset = "0x66B758")]
	private IEnumerator ReturnToTree()
	{
		return null;
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x9AEEEC", Offset = "0x9AEEEC", VA = "0x9AEEEC")]
	public HidingSheepReturn()
	{
	}
}
[Token(Token = "0x20000D5")]
public class LeanAudioStream
{
	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int position;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioClip;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] audioArr;

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xC50D24", Offset = "0xC50D24", VA = "0xC50D24")]
	public LeanAudioStream(float[] audioArr)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xC51628", Offset = "0xC51628", VA = "0xC51628")]
	public void OnAudioRead(float[] data)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xC516E8", Offset = "0xC516E8", VA = "0xC516E8")]
	public void OnAudioSetPosition(int newPosition)
	{
	}
}
[Token(Token = "0x20000D6")]
public class LeanAudio
{
	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MIN_FREQEUNCY_PERIOD;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PROCESSING_ITERATIONS_MAX;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] generatedWaveDistances;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int generatedWaveDistancesCount;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[] longList;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xC4FD80", Offset = "0xC4FD80", VA = "0xC4FD80")]
	public static LeanAudioOptions options()
	{
		return null;
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xC4FEA4", Offset = "0xC4FEA4", VA = "0xC4FEA4")]
	public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xC50C64", Offset = "0xC50C64", VA = "0xC50C64")]
	public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xC4FF7C", Offset = "0xC4FF7C", VA = "0xC4FF7C")]
	private static int createAudioWave(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options)
	{
		return default(int);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xC504F8", Offset = "0xC504F8", VA = "0xC504F8")]
	private static AudioClip createAudioFromWave(int waveLength, LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xC50D50", Offset = "0xC50D50", VA = "0xC50D50")]
	private static void OnAudioSetPosition(int newPosition)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xC50D54", Offset = "0xC50D54", VA = "0xC50D54")]
	public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100)
	{
		return null;
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xC50F04", Offset = "0xC50F04", VA = "0xC50F04")]
	public static AudioSource play(AudioClip audio, float volume)
	{
		return null;
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xC51150", Offset = "0xC51150", VA = "0xC51150")]
	public static AudioSource play(AudioClip audio)
	{
		return null;
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xC51204", Offset = "0xC51204", VA = "0xC51204")]
	public static AudioSource play(AudioClip audio, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xC51290", Offset = "0xC51290", VA = "0xC51290")]
	public static AudioSource play(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xC50FE0", Offset = "0xC50FE0", VA = "0xC50FE0")]
	public static AudioSource playClipAt(AudioClip clip, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xC51370", Offset = "0xC51370", VA = "0xC51370")]
	public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1f)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xC51558", Offset = "0xC51558", VA = "0xC51558")]
	public LeanAudio()
	{
	}
}
[Token(Token = "0x20000D7")]
public class LeanAudioOptions
{
	[Token(Token = "0x200041C")]
	public enum LeanAudioWaveStyle
	{
		[Token(Token = "0x4001E40")]
		Sine,
		[Token(Token = "0x4001E41")]
		Square,
		[Token(Token = "0x4001E42")]
		Sawtooth,
		[Token(Token = "0x4001E43")]
		Noise
	}

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LeanAudioWaveStyle waveStyle;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vibrato;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] modulation;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int frequencyRate;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waveNoiseScale;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waveNoiseInfluence;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useSetData;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeanAudioStream stream;

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xC4FE80", Offset = "0xC4FE80", VA = "0xC4FE80")]
	public LeanAudioOptions()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xC515D4", Offset = "0xC515D4", VA = "0xC515D4")]
	public LeanAudioOptions setFrequency(int frequencyRate)
	{
		return null;
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xC515DC", Offset = "0xC515DC", VA = "0xC515DC")]
	public LeanAudioOptions setVibrato(Vector3[] vibrato)
	{
		return null;
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xC515E4", Offset = "0xC515E4", VA = "0xC515E4")]
	public LeanAudioOptions setWaveSine()
	{
		return null;
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xC515EC", Offset = "0xC515EC", VA = "0xC515EC")]
	public LeanAudioOptions setWaveSquare()
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xC515F8", Offset = "0xC515F8", VA = "0xC515F8")]
	public LeanAudioOptions setWaveSawtooth()
	{
		return null;
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xC51604", Offset = "0xC51604", VA = "0xC51604")]
	public LeanAudioOptions setWaveNoise()
	{
		return null;
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xC51610", Offset = "0xC51610", VA = "0xC51610")]
	public LeanAudioOptions setWaveStyle(LeanAudioWaveStyle style)
	{
		return null;
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xC51618", Offset = "0xC51618", VA = "0xC51618")]
	public LeanAudioOptions setWaveNoiseScale(float waveScale)
	{
		return null;
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xC51620", Offset = "0xC51620", VA = "0xC51620")]
	public LeanAudioOptions setWaveNoiseInfluence(float influence)
	{
		return null;
	}
}
[Token(Token = "0x20000D8")]
public class LeanSmooth
{
	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xC516F0", Offset = "0xC516F0", VA = "0xC516F0")]
	public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xC5188C", Offset = "0xC5188C", VA = "0xC5188C")]
	public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xC51968", Offset = "0xC51968", VA = "0xC51968")]
	public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Color);
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xC51A64", Offset = "0xC51A64", VA = "0xC51A64")]
	public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(float);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xC51B88", Offset = "0xC51B88", VA = "0xC51B88")]
	public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xC51C84", Offset = "0xC51C84", VA = "0xC51C84")]
	public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Color);
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xC51DAC", Offset = "0xC51DAC", VA = "0xC51DAC")]
	public static float linear(float current, float target, float moveSpeed, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xC51E24", Offset = "0xC51E24", VA = "0xC51E24")]
	public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xC51F7C", Offset = "0xC51F7C", VA = "0xC51F7C")]
	public static Color linear(Color current, Color target, float moveSpeed)
	{
		return default(Color);
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xC520F4", Offset = "0xC520F4", VA = "0xC520F4")]
	public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(float);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xC52250", Offset = "0xC52250", VA = "0xC52250")]
	public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xC52354", Offset = "0xC52354", VA = "0xC52354")]
	public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Color);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xC5248C", Offset = "0xC5248C", VA = "0xC5248C")]
	public LeanSmooth()
	{
	}
}
[Token(Token = "0x20000D9")]
public class LeanTester : MonoBehaviour
{
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D648", Offset = "0x64D648")]
	private sealed class <timeoutCheck>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeanTester <>4__this;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pauseEndTime>5__2;

		[Token(Token = "0x17000258")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600216B")]
			[Address(RVA = "0xC536D0", Offset = "0xC536D0", VA = "0xC536D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600216D")]
			[Address(RVA = "0xC53740", Offset = "0xC53740", VA = "0xC53740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xC53528", Offset = "0xC53528", VA = "0xC53528")]
		[DebuggerHidden]
		public <timeoutCheck>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xC53564", Offset = "0xC53564", VA = "0xC53564", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xC53568", Offset = "0xC53568", VA = "0xC53568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xC536D8", Offset = "0xC536D8", VA = "0xC536D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeout;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xC53488", Offset = "0xC53488", VA = "0xC53488")]
	public void Start()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xC534B4", Offset = "0xC534B4", VA = "0xC534B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B7BC", Offset = "0x66B7BC")]
	private IEnumerator timeoutCheck()
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xC53554", Offset = "0xC53554", VA = "0xC53554")]
	public LeanTester()
	{
	}
}
[Token(Token = "0x20000DA")]
public class LeanTest
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int expected;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int tests;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int passes;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float timeout;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool timeoutStarted;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool testsFinished;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xC52494", Offset = "0xC52494", VA = "0xC52494")]
	public static void debug(string name, bool didPass, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xC52510", Offset = "0xC52510", VA = "0xC52510")]
	public static void expect(bool didPass, string definition, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xC53314", Offset = "0xC53314", VA = "0xC53314")]
	public static string padRight(int len)
	{
		return null;
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xC52BB0", Offset = "0xC52BB0", VA = "0xC52BB0")]
	public static float printOutLength(string str)
	{
		return default(float);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xC53384", Offset = "0xC53384", VA = "0xC53384")]
	public static string formatBC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xC52D0C", Offset = "0xC52D0C", VA = "0xC52D0C")]
	public static string formatB(string str)
	{
		return null;
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xC52D6C", Offset = "0xC52D6C", VA = "0xC52D6C")]
	public static string formatC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xC52F68", Offset = "0xC52F68", VA = "0xC52F68")]
	public static void overview()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xC533FC", Offset = "0xC533FC", VA = "0xC533FC")]
	public LeanTest()
	{
	}
}
[Token(Token = "0x20000DB")]
public enum TweenAction
{
	[Token(Token = "0x4000786")]
	MOVE_X,
	[Token(Token = "0x4000787")]
	MOVE_Y,
	[Token(Token = "0x4000788")]
	MOVE_Z,
	[Token(Token = "0x4000789")]
	MOVE_LOCAL_X,
	[Token(Token = "0x400078A")]
	MOVE_LOCAL_Y,
	[Token(Token = "0x400078B")]
	MOVE_LOCAL_Z,
	[Token(Token = "0x400078C")]
	MOVE_CURVED,
	[Token(Token = "0x400078D")]
	MOVE_CURVED_LOCAL,
	[Token(Token = "0x400078E")]
	MOVE_SPLINE,
	[Token(Token = "0x400078F")]
	MOVE_SPLINE_LOCAL,
	[Token(Token = "0x4000790")]
	SCALE_X,
	[Token(Token = "0x4000791")]
	SCALE_Y,
	[Token(Token = "0x4000792")]
	SCALE_Z,
	[Token(Token = "0x4000793")]
	ROTATE_X,
	[Token(Token = "0x4000794")]
	ROTATE_Y,
	[Token(Token = "0x4000795")]
	ROTATE_Z,
	[Token(Token = "0x4000796")]
	ROTATE_AROUND,
	[Token(Token = "0x4000797")]
	ROTATE_AROUND_LOCAL,
	[Token(Token = "0x4000798")]
	CANVAS_ROTATEAROUND,
	[Token(Token = "0x4000799")]
	CANVAS_ROTATEAROUND_LOCAL,
	[Token(Token = "0x400079A")]
	CANVAS_PLAYSPRITE,
	[Token(Token = "0x400079B")]
	ALPHA,
	[Token(Token = "0x400079C")]
	TEXT_ALPHA,
	[Token(Token = "0x400079D")]
	CANVAS_ALPHA,
	[Token(Token = "0x400079E")]
	CANVASGROUP_ALPHA,
	[Token(Token = "0x400079F")]
	ALPHA_VERTEX,
	[Token(Token = "0x40007A0")]
	COLOR,
	[Token(Token = "0x40007A1")]
	CALLBACK_COLOR,
	[Token(Token = "0x40007A2")]
	TEXT_COLOR,
	[Token(Token = "0x40007A3")]
	CANVAS_COLOR,
	[Token(Token = "0x40007A4")]
	CANVAS_MOVE_X,
	[Token(Token = "0x40007A5")]
	CANVAS_MOVE_Y,
	[Token(Token = "0x40007A6")]
	CANVAS_MOVE_Z,
	[Token(Token = "0x40007A7")]
	CALLBACK,
	[Token(Token = "0x40007A8")]
	MOVE,
	[Token(Token = "0x40007A9")]
	MOVE_LOCAL,
	[Token(Token = "0x40007AA")]
	MOVE_TO_TRANSFORM,
	[Token(Token = "0x40007AB")]
	ROTATE,
	[Token(Token = "0x40007AC")]
	ROTATE_LOCAL,
	[Token(Token = "0x40007AD")]
	SCALE,
	[Token(Token = "0x40007AE")]
	VALUE3,
	[Token(Token = "0x40007AF")]
	GUI_MOVE,
	[Token(Token = "0x40007B0")]
	GUI_MOVE_MARGIN,
	[Token(Token = "0x40007B1")]
	GUI_SCALE,
	[Token(Token = "0x40007B2")]
	GUI_ALPHA,
	[Token(Token = "0x40007B3")]
	GUI_ROTATE,
	[Token(Token = "0x40007B4")]
	DELAYED_SOUND,
	[Token(Token = "0x40007B5")]
	CANVAS_MOVE,
	[Token(Token = "0x40007B6")]
	CANVAS_SCALE,
	[Token(Token = "0x40007B7")]
	CANVAS_SIZEDELTA,
	[Token(Token = "0x40007B8")]
	FOLLOW
}
[Token(Token = "0x20000DC")]
public enum LeanTweenType
{
	[Token(Token = "0x40007BA")]
	notUsed,
	[Token(Token = "0x40007BB")]
	linear,
	[Token(Token = "0x40007BC")]
	easeOutQuad,
	[Token(Token = "0x40007BD")]
	easeInQuad,
	[Token(Token = "0x40007BE")]
	easeInOutQuad,
	[Token(Token = "0x40007BF")]
	easeInCubic,
	[Token(Token = "0x40007C0")]
	easeOutCubic,
	[Token(Token = "0x40007C1")]
	easeInOutCubic,
	[Token(Token = "0x40007C2")]
	easeInQuart,
	[Token(Token = "0x40007C3")]
	easeOutQuart,
	[Token(Token = "0x40007C4")]
	easeInOutQuart,
	[Token(Token = "0x40007C5")]
	easeInQuint,
	[Token(Token = "0x40007C6")]
	easeOutQuint,
	[Token(Token = "0x40007C7")]
	easeInOutQuint,
	[Token(Token = "0x40007C8")]
	easeInSine,
	[Token(Token = "0x40007C9")]
	easeOutSine,
	[Token(Token = "0x40007CA")]
	easeInOutSine,
	[Token(Token = "0x40007CB")]
	easeInExpo,
	[Token(Token = "0x40007CC")]
	easeOutExpo,
	[Token(Token = "0x40007CD")]
	easeInOutExpo,
	[Token(Token = "0x40007CE")]
	easeInCirc,
	[Token(Token = "0x40007CF")]
	easeOutCirc,
	[Token(Token = "0x40007D0")]
	easeInOutCirc,
	[Token(Token = "0x40007D1")]
	easeInBounce,
	[Token(Token = "0x40007D2")]
	easeOutBounce,
	[Token(Token = "0x40007D3")]
	easeInOutBounce,
	[Token(Token = "0x40007D4")]
	easeInBack,
	[Token(Token = "0x40007D5")]
	easeOutBack,
	[Token(Token = "0x40007D6")]
	easeInOutBack,
	[Token(Token = "0x40007D7")]
	easeInElastic,
	[Token(Token = "0x40007D8")]
	easeOutElastic,
	[Token(Token = "0x40007D9")]
	easeInOutElastic,
	[Token(Token = "0x40007DA")]
	easeSpring,
	[Token(Token = "0x40007DB")]
	easeShake,
	[Token(Token = "0x40007DC")]
	punch,
	[Token(Token = "0x40007DD")]
	once,
	[Token(Token = "0x40007DE")]
	clamp,
	[Token(Token = "0x40007DF")]
	pingPong,
	[Token(Token = "0x40007E0")]
	animationCurve
}
[Token(Token = "0x20000DD")]
public enum LeanProp
{
	[Token(Token = "0x40007E2")]
	position,
	[Token(Token = "0x40007E3")]
	localPosition,
	[Token(Token = "0x40007E4")]
	x,
	[Token(Token = "0x40007E5")]
	y,
	[Token(Token = "0x40007E6")]
	z,
	[Token(Token = "0x40007E7")]
	localX,
	[Token(Token = "0x40007E8")]
	localY,
	[Token(Token = "0x40007E9")]
	localZ,
	[Token(Token = "0x40007EA")]
	scale,
	[Token(Token = "0x40007EB")]
	color
}
[Token(Token = "0x20000DE")]
public class LeanTween : MonoBehaviour
{
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D658", Offset = "0x64D658")]
	private sealed class <>c__DisplayClass193_0
	{
		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xC5FB20", Offset = "0xC5FB20", VA = "0xC5FB20")]
		public <>c__DisplayClass193_0()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xC618FC", Offset = "0xC618FC", VA = "0xC618FC")]
		internal void <followDamp>b__0()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xC61B74", Offset = "0xC61B74", VA = "0xC61B74")]
		internal void <followDamp>b__1()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xC61DEC", Offset = "0xC61DEC", VA = "0xC61DEC")]
		internal void <followDamp>b__2()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xC61F8C", Offset = "0xC61F8C", VA = "0xC61F8C")]
		internal void <followDamp>b__3()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xC6212C", Offset = "0xC6212C", VA = "0xC6212C")]
		internal void <followDamp>b__4()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xC622CC", Offset = "0xC622CC", VA = "0xC622CC")]
		internal void <followDamp>b__5()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xC6246C", Offset = "0xC6246C", VA = "0xC6246C")]
		internal void <followDamp>b__6()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xC6260C", Offset = "0xC6260C", VA = "0xC6260C")]
		internal void <followDamp>b__7()
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xC627AC", Offset = "0xC627AC", VA = "0xC627AC")]
		internal void <followDamp>b__8()
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xC62900", Offset = "0xC62900", VA = "0xC62900")]
		internal void <followDamp>b__9()
		{
		}
	}

	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D668", Offset = "0x64D668")]
	private sealed class <>c__DisplayClass194_0
	{
		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float friction;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accelRate;

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xC5FEF0", Offset = "0xC5FEF0", VA = "0xC5FEF0")]
		public <>c__DisplayClass194_0()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xC62B30", Offset = "0xC62B30", VA = "0xC62B30")]
		internal void <followSpring>b__0()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xC62DB4", Offset = "0xC62DB4", VA = "0xC62DB4")]
		internal void <followSpring>b__1()
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xC62F0C", Offset = "0xC62F0C", VA = "0xC62F0C")]
		internal void <followSpring>b__2()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xC63004", Offset = "0xC63004", VA = "0xC63004")]
		internal void <followSpring>b__3()
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xC630FC", Offset = "0xC630FC", VA = "0xC630FC")]
		internal void <followSpring>b__4()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xC631F4", Offset = "0xC631F4", VA = "0xC631F4")]
		internal void <followSpring>b__5()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xC632EC", Offset = "0xC632EC", VA = "0xC632EC")]
		internal void <followSpring>b__6()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xC633E4", Offset = "0xC633E4", VA = "0xC633E4")]
		internal void <followSpring>b__7()
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xC634DC", Offset = "0xC634DC", VA = "0xC634DC")]
		internal void <followSpring>b__8()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xC6363C", Offset = "0xC6363C", VA = "0xC6363C")]
		internal void <followSpring>b__9()
		{
		}
	}

	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D678", Offset = "0x64D678")]
	private sealed class <>c__DisplayClass195_0
	{
		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float friction;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accelRate;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hitDamping;

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xC602A4", Offset = "0xC602A4", VA = "0xC602A4")]
		public <>c__DisplayClass195_0()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xC637EC", Offset = "0xC637EC", VA = "0xC637EC")]
		internal void <followBounceOut>b__0()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xC63A78", Offset = "0xC63A78", VA = "0xC63A78")]
		internal void <followBounceOut>b__1()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xC63D04", Offset = "0xC63D04", VA = "0xC63D04")]
		internal void <followBounceOut>b__2()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xC63E00", Offset = "0xC63E00", VA = "0xC63E00")]
		internal void <followBounceOut>b__3()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xC63EFC", Offset = "0xC63EFC", VA = "0xC63EFC")]
		internal void <followBounceOut>b__4()
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xC63FF8", Offset = "0xC63FF8", VA = "0xC63FF8")]
		internal void <followBounceOut>b__5()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xC640F4", Offset = "0xC640F4", VA = "0xC640F4")]
		internal void <followBounceOut>b__6()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xC641F0", Offset = "0xC641F0", VA = "0xC641F0")]
		internal void <followBounceOut>b__7()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xC642EC", Offset = "0xC642EC", VA = "0xC642EC")]
		internal void <followBounceOut>b__8()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xC64454", Offset = "0xC64454", VA = "0xC64454")]
		internal void <followBounceOut>b__9()
		{
		}
	}

	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D688", Offset = "0x64D688")]
	private sealed class <>c__DisplayClass196_0
	{
		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float moveSpeed;

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xC605FC", Offset = "0xC605FC", VA = "0xC605FC")]
		public <>c__DisplayClass196_0()
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xC6460C", Offset = "0xC6460C", VA = "0xC6460C")]
		internal void <followLinear>b__0()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xC64840", Offset = "0xC64840", VA = "0xC64840")]
		internal void <followLinear>b__1()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xC64948", Offset = "0xC64948", VA = "0xC64948")]
		internal void <followLinear>b__2()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xC64A44", Offset = "0xC64A44", VA = "0xC64A44")]
		internal void <followLinear>b__3()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xC64B40", Offset = "0xC64B40", VA = "0xC64B40")]
		internal void <followLinear>b__4()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xC64C3C", Offset = "0xC64C3C", VA = "0xC64C3C")]
		internal void <followLinear>b__5()
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xC64D38", Offset = "0xC64D38", VA = "0xC64D38")]
		internal void <followLinear>b__6()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xC64E34", Offset = "0xC64E34", VA = "0xC64E34")]
		internal void <followLinear>b__7()
		{
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xC64F30", Offset = "0xC64F30", VA = "0xC64F30")]
		internal void <followLinear>b__8()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xC65038", Offset = "0xC65038", VA = "0xC65038")]
		internal void <followLinear>b__9()
		{
		}
	}

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool throwErrors;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float tau;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PI_DIV2;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTSeq[] sequences;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static LTDescr[] tweens;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] tweensFinished;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] tweensFinishedIds;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static LTDescr tween;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int tweenMaxSearch;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int maxTweens;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int maxSequences;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static int frameRendered;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static GameObject _tweenEmpty;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float dtEstimated;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float dtManual;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float dtActual;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static uint global_counter;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int i;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static int j;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int finishedCnt;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static AnimationCurve punch;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static AnimationCurve shake;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static int maxTweenReached;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int startSearch;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static LTDescr d;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Action<LTEvent>[] eventListeners;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static GameObject[] goListeners;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static int eventsMaxSearch;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int EVENTS_MAX;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int LISTENERS_MAX;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private static int INIT_LISTENERS_MAX;

	[Token(Token = "0x17000071")]
	public static int maxSearch
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xC53820", Offset = "0xC53820", VA = "0xC53820")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000072")]
	public static int maxSimulataneousTweens
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xC53888", Offset = "0xC53888", VA = "0xC53888")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000073")]
	public static int tweensRunning
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xC538F0", Offset = "0xC538F0", VA = "0xC538F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000074")]
	public static GameObject tweenEmpty
	{
		[Token(Token = "0x6000717")]
		[Address(RVA = "0xC58620", Offset = "0xC58620", VA = "0xC58620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xC53748", Offset = "0xC53748", VA = "0xC53748")]
	public static void init()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xC537B0", Offset = "0xC537B0", VA = "0xC537B0")]
	public static void init(int maxSimultaneousTweens)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xC539EC", Offset = "0xC539EC", VA = "0xC539EC")]
	public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xC53E7C", Offset = "0xC53E7C", VA = "0xC53E7C")]
	public static void reset()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xC54038", Offset = "0xC54038", VA = "0xC54038")]
	public void Update()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xC54660", Offset = "0xC54660", VA = "0xC54660")]
	private static void onLevelWasLoaded54(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xC546D0", Offset = "0xC546D0", VA = "0xC546D0")]
	private static void internalOnLevelWasLoaded(int lvl)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xC54094", Offset = "0xC54094", VA = "0xC54094")]
	public static void update()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xC54C98", Offset = "0xC54C98", VA = "0xC54C98")]
	public static void removeTween(int i, int uniqueId)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xC54730", Offset = "0xC54730", VA = "0xC54730")]
	public static void removeTween(int i)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xC54D9C", Offset = "0xC54D9C", VA = "0xC54D9C")]
	public static Vector3[] add(Vector3[] a, Vector3 b)
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xC54F88", Offset = "0xC54F88", VA = "0xC54F88")]
	public static float closestRot(float from, float to)
	{
		return default(float);
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xC5504C", Offset = "0xC5504C", VA = "0xC5504C")]
	public static void cancelAll()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xC550AC", Offset = "0xC550AC", VA = "0xC550AC")]
	public static void cancelAll(bool callComplete)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xC55338", Offset = "0xC55338", VA = "0xC55338")]
	public static void cancel(GameObject gameObject)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xC553A0", Offset = "0xC553A0", VA = "0xC553A0")]
	public static void cancel(GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xC55594", Offset = "0xC55594", VA = "0xC55594")]
	public static void cancel(RectTransform rect)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xC5561C", Offset = "0xC5561C", VA = "0xC5561C")]
	public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xC559A4", Offset = "0xC559A4", VA = "0xC559A4")]
	public static void cancel(LTRect ltRect, int uniqueId)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xC55B30", Offset = "0xC55B30", VA = "0xC55B30")]
	public static void cancel(int uniqueId)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xC55B98", Offset = "0xC55B98", VA = "0xC55B98")]
	public static void cancel(int uniqueId, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xC55F5C", Offset = "0xC55F5C", VA = "0xC55F5C")]
	public static LTDescr descr(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xC562C4", Offset = "0xC562C4", VA = "0xC562C4")]
	public static LTDescr description(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xC56328", Offset = "0xC56328", VA = "0xC56328")]
	public static LTDescr[] descriptions([Optional] GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xC565CC", Offset = "0xC565CC", VA = "0xC565CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66B820", Offset = "0x66B820")]
	public static void pause(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xC56630", Offset = "0xC56630", VA = "0xC56630")]
	public static void pause(int uniqueId)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xC5676C", Offset = "0xC5676C", VA = "0xC5676C")]
	public static void pause(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xC5691C", Offset = "0xC5691C", VA = "0xC5691C")]
	public static void pauseAll()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xC56A28", Offset = "0xC56A28", VA = "0xC56A28")]
	public static void resumeAll()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xC56B34", Offset = "0xC56B34", VA = "0xC56B34")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66B858", Offset = "0x66B858")]
	public static void resume(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xC56B98", Offset = "0xC56B98", VA = "0xC56B98")]
	public static void resume(int uniqueId)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xC56CD4", Offset = "0xC56CD4", VA = "0xC56CD4")]
	public static void resume(GameObject gameObject)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xC56E84", Offset = "0xC56E84", VA = "0xC56E84")]
	public static bool isPaused([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xC57190", Offset = "0xC57190", VA = "0xC57190")]
	public static bool isPaused(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xC574A0", Offset = "0xC574A0", VA = "0xC574A0")]
	public static bool isPaused(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xC57214", Offset = "0xC57214", VA = "0xC57214")]
	public static bool isTweening([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xC57648", Offset = "0xC57648", VA = "0xC57648")]
	public static bool isTweening(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xC576CC", Offset = "0xC576CC", VA = "0xC576CC")]
	public static bool isTweening(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xC5782C", Offset = "0xC5782C", VA = "0xC5782C")]
	public static bool isTweening(LTRect ltRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xC579B4", Offset = "0xC579B4", VA = "0xC579B4")]
	public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0f, [Optional] Transform arrowTransform)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xC4B744", Offset = "0xC4B744", VA = "0xC4B744")]
	public static object logError(string error)
	{
		return null;
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xC5812C", Offset = "0xC5812C", VA = "0xC5812C")]
	public static LTDescr options(LTDescr seed)
	{
		return null;
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xC581A0", Offset = "0xC581A0", VA = "0xC581A0")]
	public static LTDescr options()
	{
		return null;
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xC58698", Offset = "0xC58698", VA = "0xC58698")]
	private static LTDescr pushNewTween(GameObject gameObject, Vector3 to, float time, LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xC587C4", Offset = "0xC587C4", VA = "0xC587C4")]
	public static LTDescr play(RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xC58910", Offset = "0xC58910", VA = "0xC58910")]
	public static LTSeq sequence(bool initSequence = true)
	{
		return null;
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xC58C48", Offset = "0xC58C48", VA = "0xC58C48")]
	public static LTDescr alpha(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xC58D50", Offset = "0xC58D50", VA = "0xC58D50")]
	public static LTDescr alpha(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xC58E5C", Offset = "0xC58E5C", VA = "0xC58E5C")]
	public static LTDescr textAlpha(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xC58F44", Offset = "0xC58F44", VA = "0xC58F44")]
	public static LTDescr alphaText(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xC5902C", Offset = "0xC5902C", VA = "0xC5902C")]
	public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xC59114", Offset = "0xC59114", VA = "0xC59114")]
	public static LTDescr alphaVertex(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xC591E0", Offset = "0xC591E0", VA = "0xC591E0")]
	public static LTDescr color(GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xC59348", Offset = "0xC59348", VA = "0xC59348")]
	public static LTDescr textColor(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xC59490", Offset = "0xC59490", VA = "0xC59490")]
	public static LTDescr colorText(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xC595D8", Offset = "0xC595D8", VA = "0xC595D8")]
	public static LTDescr delayedCall(float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xC596E4", Offset = "0xC596E4", VA = "0xC596E4")]
	public static LTDescr delayedCall(float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xC597F0", Offset = "0xC597F0", VA = "0xC597F0")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xC598F4", Offset = "0xC598F4", VA = "0xC598F4")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xC599F8", Offset = "0xC599F8", VA = "0xC599F8")]
	public static LTDescr destroyAfter(LTRect rect, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xC59B20", Offset = "0xC59B20", VA = "0xC59B20")]
	public static LTDescr move(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xC59BD4", Offset = "0xC59BD4", VA = "0xC59BD4")]
	public static LTDescr move(GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xC59CD8", Offset = "0xC59CD8", VA = "0xC59CD8")]
	public static LTDescr move(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xC59F10", Offset = "0xC59F10", VA = "0xC59F10")]
	public static LTDescr move(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xC5A034", Offset = "0xC5A034", VA = "0xC5A034")]
	public static LTDescr move(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xC5A158", Offset = "0xC5A158", VA = "0xC5A158")]
	public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xC5A2C0", Offset = "0xC5A2C0", VA = "0xC5A2C0")]
	public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xC5A3E4", Offset = "0xC5A3E4", VA = "0xC5A3E4")]
	public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xC5A54C", Offset = "0xC5A54C", VA = "0xC5A54C")]
	public static LTDescr move(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xC5A668", Offset = "0xC5A668", VA = "0xC5A668")]
	public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xC5A784", Offset = "0xC5A784", VA = "0xC5A784")]
	public static LTDescr moveX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xC5A850", Offset = "0xC5A850", VA = "0xC5A850")]
	public static LTDescr moveY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xC5A91C", Offset = "0xC5A91C", VA = "0xC5A91C")]
	public static LTDescr moveZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xC5A9E8", Offset = "0xC5A9E8", VA = "0xC5A9E8")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xC5AA9C", Offset = "0xC5AA9C", VA = "0xC5AA9C")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xC5ACD4", Offset = "0xC5ACD4", VA = "0xC5ACD4")]
	public static LTDescr moveLocalX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xC5ADA0", Offset = "0xC5ADA0", VA = "0xC5ADA0")]
	public static LTDescr moveLocalY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xC5AE6C", Offset = "0xC5AE6C", VA = "0xC5AE6C")]
	public static LTDescr moveLocalZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xC5AF38", Offset = "0xC5AF38", VA = "0xC5AF38")]
	public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xC5B05C", Offset = "0xC5B05C", VA = "0xC5B05C")]
	public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xC5B180", Offset = "0xC5B180", VA = "0xC5B180")]
	public static LTDescr move(GameObject gameObject, Transform to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xC5B284", Offset = "0xC5B284", VA = "0xC5B284")]
	public static LTDescr rotate(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xC5B338", Offset = "0xC5B338", VA = "0xC5B338")]
	public static LTDescr rotate(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xC5B430", Offset = "0xC5B430", VA = "0xC5B430")]
	public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xC5B4E4", Offset = "0xC5B4E4", VA = "0xC5B4E4")]
	public static LTDescr rotateX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xC5B5B0", Offset = "0xC5B5B0", VA = "0xC5B5B0")]
	public static LTDescr rotateY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xC5B67C", Offset = "0xC5B67C", VA = "0xC5B67C")]
	public static LTDescr rotateZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xC5B748", Offset = "0xC5B748", VA = "0xC5B748")]
	public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xC5B854", Offset = "0xC5B854", VA = "0xC5B854")]
	public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xC5B960", Offset = "0xC5B960", VA = "0xC5B960")]
	public static LTDescr scale(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xC5BA14", Offset = "0xC5BA14", VA = "0xC5BA14")]
	public static LTDescr scale(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xC5BB30", Offset = "0xC5BB30", VA = "0xC5BB30")]
	public static LTDescr scaleX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xC5BBFC", Offset = "0xC5BBFC", VA = "0xC5BBFC")]
	public static LTDescr scaleY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xC5BCC8", Offset = "0xC5BCC8", VA = "0xC5BCC8")]
	public static LTDescr scaleZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xC5BD94", Offset = "0xC5BD94", VA = "0xC5BD94")]
	public static LTDescr value(GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xC5BEB0", Offset = "0xC5BEB0", VA = "0xC5BEB0")]
	public static LTDescr value(float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xC5BFD0", Offset = "0xC5BFD0", VA = "0xC5BFD0")]
	public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xC5C140", Offset = "0xC5C140", VA = "0xC5C140")]
	public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xC5C234", Offset = "0xC5C234", VA = "0xC5C234")]
	public static LTDescr value(GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xC5C3F8", Offset = "0xC5C3F8", VA = "0xC5C3F8")]
	public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xC5C580", Offset = "0xC5C580", VA = "0xC5C580")]
	public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xC5C708", Offset = "0xC5C708", VA = "0xC5C708")]
	public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xC5C918", Offset = "0xC5C918", VA = "0xC5C918")]
	public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xC5CB28", Offset = "0xC5CB28", VA = "0xC5CB28")]
	public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xC5CCC0", Offset = "0xC5CCC0", VA = "0xC5CCC0")]
	public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xC5CE00", Offset = "0xC5CE00", VA = "0xC5CE00")]
	public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xC5CF8C", Offset = "0xC5CF8C", VA = "0xC5CF8C")]
	public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xC5D0E0", Offset = "0xC5D0E0", VA = "0xC5D0E0")]
	public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xC5D230", Offset = "0xC5D230", VA = "0xC5D230")]
	public static LTDescr move(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xC5D328", Offset = "0xC5D328", VA = "0xC5D328")]
	public static LTDescr moveX(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xC5D434", Offset = "0xC5D434", VA = "0xC5D434")]
	public static LTDescr moveY(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xC5D540", Offset = "0xC5D540", VA = "0xC5D540")]
	public static LTDescr moveZ(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xC5D64C", Offset = "0xC5D64C", VA = "0xC5D64C")]
	public static LTDescr rotate(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xC5D7C0", Offset = "0xC5D7C0", VA = "0xC5D7C0")]
	public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xC5D928", Offset = "0xC5D928", VA = "0xC5D928")]
	public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xC5DA74", Offset = "0xC5DA74", VA = "0xC5DA74")]
	public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xC5DBC0", Offset = "0xC5DBC0", VA = "0xC5DBC0")]
	public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xC5DCB8", Offset = "0xC5DCB8", VA = "0xC5DCB8")]
	public static LTDescr size(RectTransform rectTrans, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xC5DDE8", Offset = "0xC5DDE8", VA = "0xC5DDE8")]
	public static LTDescr alpha(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xC5DEF4", Offset = "0xC5DEF4", VA = "0xC5DEF4")]
	public static LTDescr color(RectTransform rectTrans, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xC5E060", Offset = "0xC5E060", VA = "0xC5E060")]
	public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xC5E118", Offset = "0xC5E118", VA = "0xC5E118")]
	public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xC5E328", Offset = "0xC5E328", VA = "0xC5E328")]
	public static float easeOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xC5E340", Offset = "0xC5E340", VA = "0xC5E340")]
	public static float easeInQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xC5E350", Offset = "0xC5E350", VA = "0xC5E350")]
	public static float easeInOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xC5E3A0", Offset = "0xC5E3A0", VA = "0xC5E3A0")]
	public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xC5E4DC", Offset = "0xC5E4DC", VA = "0xC5E4DC")]
	public static float linear(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xC5E564", Offset = "0xC5E564", VA = "0xC5E564")]
	public static float clerp(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xC5E630", Offset = "0xC5E630", VA = "0xC5E630")]
	public static float spring(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xC5E734", Offset = "0xC5E734", VA = "0xC5E734")]
	public static float easeInQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xC5E748", Offset = "0xC5E748", VA = "0xC5E748")]
	public static float easeOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xC5E764", Offset = "0xC5E764", VA = "0xC5E764")]
	public static float easeInOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xC5E7B8", Offset = "0xC5E7B8", VA = "0xC5E7B8")]
	public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2)
	{
		return default(float);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xC5E7EC", Offset = "0xC5E7EC", VA = "0xC5E7EC")]
	public static float easeInCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xC5E804", Offset = "0xC5E804", VA = "0xC5E804")]
	public static float easeOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xC5E82C", Offset = "0xC5E82C", VA = "0xC5E82C")]
	public static float easeInOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xC5E884", Offset = "0xC5E884", VA = "0xC5E884")]
	public static float easeInQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xC5E8A0", Offset = "0xC5E8A0", VA = "0xC5E8A0")]
	public static float easeOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xC5E8C8", Offset = "0xC5E8C8", VA = "0xC5E8C8")]
	public static float easeInOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xC5E924", Offset = "0xC5E924", VA = "0xC5E924")]
	public static float easeInQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xC5E944", Offset = "0xC5E944", VA = "0xC5E944")]
	public static float easeOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xC5E974", Offset = "0xC5E974", VA = "0xC5E974")]
	public static float easeInOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xC5E9DC", Offset = "0xC5E9DC", VA = "0xC5E9DC")]
	public static float easeInSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xC5EA74", Offset = "0xC5EA74", VA = "0xC5EA74")]
	public static float easeOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xC5EB08", Offset = "0xC5EB08", VA = "0xC5EB08")]
	public static float easeInOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xC5EBAC", Offset = "0xC5EBAC", VA = "0xC5EBAC")]
	public static float easeInExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xC5EC44", Offset = "0xC5EC44", VA = "0xC5EC44")]
	public static float easeOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xC5ECDC", Offset = "0xC5ECDC", VA = "0xC5ECDC")]
	public static float easeInOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xC5EDCC", Offset = "0xC5EDCC", VA = "0xC5EDCC")]
	public static float easeInCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xC5EE78", Offset = "0xC5EE78", VA = "0xC5EE78")]
	public static float easeOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xC5EF24", Offset = "0xC5EF24", VA = "0xC5EF24")]
	public static float easeInOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xC5F01C", Offset = "0xC5F01C", VA = "0xC5F01C")]
	public static float easeInBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xC5F0B4", Offset = "0xC5F0B4", VA = "0xC5F0B4")]
	public static float easeOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xC5F184", Offset = "0xC5F184", VA = "0xC5F184")]
	public static float easeInOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xC5F25C", Offset = "0xC5F25C", VA = "0xC5F25C")]
	public static float easeInBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xC5F290", Offset = "0xC5F290", VA = "0xC5F290")]
	public static float easeOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xC5F2D0", Offset = "0xC5F2D0", VA = "0xC5F2D0")]
	public static float easeInOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xC5F368", Offset = "0xC5F368", VA = "0xC5F368")]
	public static float easeInElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xC5F49C", Offset = "0xC5F49C", VA = "0xC5F49C")]
	public static float easeOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xC5F5C0", Offset = "0xC5F5C0", VA = "0xC5F5C0")]
	public static float easeInOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xC5F780", Offset = "0xC5F780", VA = "0xC5F780")]
	public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f)
	{
		return null;
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xC5FB28", Offset = "0xC5FB28", VA = "0xC5FB28")]
	public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xC5FEF8", Offset = "0xC5FEF8", VA = "0xC5FEF8")]
	public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xC602AC", Offset = "0xC602AC", VA = "0xC602AC")]
	public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed)
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xC60604", Offset = "0xC60604", VA = "0xC60604")]
	public static void addListener(int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xC6067C", Offset = "0xC6067C", VA = "0xC6067C")]
	public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xC60B9C", Offset = "0xC60B9C", VA = "0xC60B9C")]
	public static bool removeListener(int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xC60E90", Offset = "0xC60E90", VA = "0xC60E90")]
	public static bool removeListener(int eventId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xC60C14", Offset = "0xC60C14", VA = "0xC60C14")]
	public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xC60F84", Offset = "0xC60F84", VA = "0xC60F84")]
	public static void dispatchEvent(int eventId)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xC60FEC", Offset = "0xC60FEC", VA = "0xC60FEC")]
	public static void dispatchEvent(int eventId, object data)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xC61268", Offset = "0xC61268", VA = "0xC61268")]
	public LeanTween()
	{
	}
}
[Token(Token = "0x20000DF")]
public class LTUtility
{
	[Token(Token = "0x600079A")]
	[Address(RVA = "0xC4D198", Offset = "0xC4D198", VA = "0xC4D198")]
	public static Vector3[] reverse(Vector3[] arr)
	{
		return null;
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xC4D320", Offset = "0xC4D320", VA = "0xC4D320")]
	public LTUtility()
	{
	}
}
[Token(Token = "0x20000E0")]
public class LTBezier
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float length;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 a;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 aa;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 bb;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 cc;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float len;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] arcLengths;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xFCF358", Offset = "0xFCF358", VA = "0xFCF358")]
	public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xFCF7D0", Offset = "0xFCF7D0", VA = "0xFCF7D0")]
	private float map(float u)
	{
		return default(float);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xFCF6F8", Offset = "0xFCF6F8", VA = "0xFCF6F8")]
	private Vector3 bezierPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xFCF9F0", Offset = "0xFCF9F0", VA = "0xFCF9F0")]
	public Vector3 point(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000E1")]
public class LTBezierPath
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] pts;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float length;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orientToPath;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool orientToPath2d;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTBezier[] beziers;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] lengthRatio;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentBezier;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousBezier;

	[Token(Token = "0x17000075")]
	public float distance
	{
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xFCFEA4", Offset = "0xFCFEA4", VA = "0xFCFEA4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xFCFA14", Offset = "0xFCFA14", VA = "0xFCFA14")]
	public LTBezierPath()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xFCFA1C", Offset = "0xFCFA1C", VA = "0xFCFA1C")]
	public LTBezierPath(Vector3[] pts_)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xFCFA4C", Offset = "0xFCFA4C", VA = "0xFCFA4C")]
	public void setPoints(Vector3[] pts_)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xFCFEAC", Offset = "0xFCFEAC", VA = "0xFCFEAC")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xFD0084", Offset = "0xFD0084", VA = "0xFD0084")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xFD023C", Offset = "0xFD023C", VA = "0xFD023C")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xFD03F4", Offset = "0xFD03F4", VA = "0xFD03F4")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xFD0498", Offset = "0xFD0498", VA = "0xFD0498")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xFD0590", Offset = "0xFD0590", VA = "0xFD0590")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xFD0634", Offset = "0xFD0634", VA = "0xFD0634")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xFD07EC", Offset = "0xFD07EC", VA = "0xFD07EC")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xFD08C8", Offset = "0xFD08C8", VA = "0xFD08C8")]
	public float ratioAtPoint(Vector3 pt, float precision = 0.01f)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x20000E2")]
public class LTSpline
{
	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DISTANCE_COUNT;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int SUBLINE_COUNT;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distance;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool constantSpeed;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pts;

	[NonSerialized]
	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] ptsAdj;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ptsAdjLength;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool orientToPath;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool orientToPath2d;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numSections;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currPt;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xC4B2AC", Offset = "0xC4B2AC", VA = "0xC4B2AC")]
	public LTSpline(Vector3[] pts)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xC4B6F8", Offset = "0xC4B6F8", VA = "0xC4B6F8")]
	public LTSpline(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xC4B2E8", Offset = "0xC4B2E8", VA = "0xC4B2E8")]
	private void init(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xC4BCD0", Offset = "0xC4BCD0", VA = "0xC4BCD0")]
	public Vector3 map(float u)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xC4B804", Offset = "0xC4B804", VA = "0xC4B804")]
	public Vector3 interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xC4BEE4", Offset = "0xC4BEE4", VA = "0xC4BEE4")]
	public float ratioAtPoint(Vector3 pt)
	{
		return default(float);
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xC4C03C", Offset = "0xC4C03C", VA = "0xC4C03C")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xC4C054", Offset = "0xC4C054", VA = "0xC4C054")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xC4C20C", Offset = "0xC4C20C", VA = "0xC4C20C")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xC4C444", Offset = "0xC4C444", VA = "0xC4C444")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xC4C4E8", Offset = "0xC4C4E8", VA = "0xC4C4E8")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xC4C5E0", Offset = "0xC4C5E0", VA = "0xC4C5E0")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xC4C684", Offset = "0xC4C684", VA = "0xC4C684")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xC4C7D8", Offset = "0xC4C7D8", VA = "0xC4C7D8")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xC4C8D4", Offset = "0xC4C8D4", VA = "0xC4C8D4")]
	public void drawGizmo(Color color)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xC4CA64", Offset = "0xC4CA64", VA = "0xC4CA64")]
	public static void drawGizmo(Transform[] arr, Color color)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xC4CD28", Offset = "0xC4CD28", VA = "0xC4CD28")]
	public static void drawLine(Transform[] arr, float width, Color color)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xC4CD34", Offset = "0xC4CD34", VA = "0xC4CD34")]
	public void drawLinesGLLines(Material outlineMaterial, Color color, float width)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xC4CFA0", Offset = "0xC4CFA0", VA = "0xC4CFA0")]
	public Vector3[] generateVectors()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000E3")]
public class LTRect
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect _rect;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotation;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 pivot;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 margin;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect relativeRect;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool rotateEnabled;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x6549C4", Offset = "0x6549C4")]
	public bool rotateFinished;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool alphaEnabled;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string labelStr;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LTGUI.Element_Type type;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIStyle style;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useColor;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color color;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool fontScaleToFit;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useSimpleScale;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool sizeByHeight;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture texture;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _id;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x6549D4", Offset = "0x6549D4")]
	public int counter;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool colorTouched;

	[Token(Token = "0x17000076")]
	public bool hasInitiliazed
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xFE3764", Offset = "0xFE3764", VA = "0xFE3764")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000077")]
	public int id
	{
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xFE3FAC", Offset = "0xFE3FAC", VA = "0xFE3FAC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000078")]
	public float x
	{
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xFE4BF4", Offset = "0xFE4BF4", VA = "0xFE4BF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xFE4C00", Offset = "0xFE4C00", VA = "0xFE4C00")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public float y
	{
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xFE4C0C", Offset = "0xFE4C0C", VA = "0xFE4C0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xFE4C18", Offset = "0xFE4C18", VA = "0xFE4C18")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public float width
	{
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xFE4C24", Offset = "0xFE4C24", VA = "0xFE4C24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xFE4C30", Offset = "0xFE4C30", VA = "0xFE4C30")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public float height
	{
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xFE4C3C", Offset = "0xFE4C3C", VA = "0xFE4C3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xFE4C48", Offset = "0xFE4C48", VA = "0xFE4C48")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public Rect rect
	{
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xFE14B0", Offset = "0xFE14B0", VA = "0xFE14B0")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xFE1810", Offset = "0xFE1810", VA = "0xFE1810")]
		set
		{
		}
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xFE4790", Offset = "0xFE4790", VA = "0xFE4790")]
	public LTRect()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xFDB7FC", Offset = "0xFDB7FC", VA = "0xFDB7FC")]
	public LTRect(Rect rect)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xFE48EC", Offset = "0xFE48EC", VA = "0xFE48EC")]
	public LTRect(float x, float y, float width, float height)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xFE49DC", Offset = "0xFE49DC", VA = "0xFE49DC")]
	public LTRect(float x, float y, float width, float height, float alpha)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xFE4ADC", Offset = "0xFE4ADC", VA = "0xFE4ADC")]
	public LTRect(float x, float y, float width, float height, float alpha, float rotation)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xFE3FB8", Offset = "0xFE3FB8", VA = "0xFE3FB8")]
	public void setId(int id, int counter)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xFE4868", Offset = "0xFE4868", VA = "0xFE4868")]
	public void reset()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xFE1D08", Offset = "0xFE1D08", VA = "0xFE1D08")]
	public void resetForRotation()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xFE4C54", Offset = "0xFE4C54", VA = "0xFE4C54")]
	public LTRect setStyle(GUIStyle style)
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xFE4C5C", Offset = "0xFE4C5C", VA = "0xFE4C5C")]
	public LTRect setFontScaleToFit(bool fontScaleToFit)
	{
		return null;
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xFE4C68", Offset = "0xFE4C68", VA = "0xFE4C68")]
	public LTRect setColor(Color color)
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xFE4C7C", Offset = "0xFE4C7C", VA = "0xFE4C7C")]
	public LTRect setAlpha(float alpha)
	{
		return null;
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xFE4C84", Offset = "0xFE4C84", VA = "0xFE4C84")]
	public LTRect setLabel(string str)
	{
		return null;
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xFE4C8C", Offset = "0xFE4C8C", VA = "0xFE4C8C")]
	public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect)
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xFE4CA0", Offset = "0xFE4CA0", VA = "0xFE4CA0")]
	public LTRect setUseSimpleScale(bool useSimpleScale)
	{
		return null;
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xFE4D1C", Offset = "0xFE4D1C", VA = "0xFE4D1C")]
	public LTRect setSizeByHeight(bool sizeByHeight)
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xFE4D28", Offset = "0xFE4D28", VA = "0xFE4D28", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000E4")]
public class LTEvent
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object data;

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xFE2174", Offset = "0xFE2174", VA = "0xFE2174")]
	public LTEvent(int id, object data)
	{
	}
}
[Token(Token = "0x20000E5")]
public class LTGUI
{
	[Token(Token = "0x2000422")]
	public enum Element_Type
	{
		[Token(Token = "0x4001E59")]
		Texture,
		[Token(Token = "0x4001E5A")]
		Label
	}

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RECT_LEVELS;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int RECTS_PER_LEVEL;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BUTTONS_MAX;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTRect[] levels;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] levelDepths;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Rect[] buttons;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] buttonLevels;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int[] buttonLastFrame;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static LTRect r;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Color color;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool isGUIEnabled;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int global_counter;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xFE21B0", Offset = "0xFE21B0", VA = "0xFE21B0")]
	public static void init()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xFE2280", Offset = "0xFE2280", VA = "0xFE2280")]
	public static void initRectCheck()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xFE2420", Offset = "0xFE2420", VA = "0xFE2420")]
	public static void reset()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xFE25F4", Offset = "0xFE25F4", VA = "0xFE25F4")]
	public static void update(int updateLevel)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xFE34A4", Offset = "0xFE34A4", VA = "0xFE34A4")]
	public static bool checkOnScreen(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xFE3584", Offset = "0xFE3584", VA = "0xFE3584")]
	public static void destroy(int id)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xFE3774", Offset = "0xFE3774", VA = "0xFE3774")]
	public static void destroyAll(int depth)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xFE3884", Offset = "0xFE3884", VA = "0xFE3884")]
	public static LTRect label(Rect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xFE3944", Offset = "0xFE3944", VA = "0xFE3944")]
	public static LTRect label(LTRect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xFE3E4C", Offset = "0xFE3E4C", VA = "0xFE3E4C")]
	public static LTRect texture(Rect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xFE3F0C", Offset = "0xFE3F0C", VA = "0xFE3F0C")]
	public static LTRect texture(LTRect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xFE39EC", Offset = "0xFE39EC", VA = "0xFE39EC")]
	public static LTRect element(LTRect rect, int depth)
	{
		return null;
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xFE3FC0", Offset = "0xFE3FC0", VA = "0xFE3FC0")]
	public static bool hasNoOverlap(Rect rect, int depth)
	{
		return default(bool);
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xFE43D4", Offset = "0xFE43D4", VA = "0xFE43D4")]
	public static bool pressedWithinRect(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xFE4618", Offset = "0xFE4618", VA = "0xFE4618")]
	public static bool checkWithinRect(Vector2 vec2, Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xFE44F8", Offset = "0xFE44F8", VA = "0xFE44F8")]
	public static Vector2 firstTouch()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xFE46EC", Offset = "0xFE46EC", VA = "0xFE46EC")]
	public LTGUI()
	{
	}
}
[Token(Token = "0x20000E6")]
public static class LeanTweenExt
{
	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xC65184", Offset = "0xC65184", VA = "0xC65184")]
	public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xC65200", Offset = "0xC65200", VA = "0xC65200")]
	public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xC6527C", Offset = "0xC6527C", VA = "0xC6527C")]
	public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xC652F8", Offset = "0xC652F8", VA = "0xC652F8")]
	public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xC65374", Offset = "0xC65374", VA = "0xC65374")]
	public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xC653F0", Offset = "0xC653F0", VA = "0xC653F0")]
	public static void LeanCancel(this GameObject gameObject)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xC65454", Offset = "0xC65454", VA = "0xC65454")]
	public static void LeanCancel(this GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xC654C8", Offset = "0xC654C8", VA = "0xC654C8")]
	public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xC65544", Offset = "0xC65544", VA = "0xC65544")]
	public static void LeanCancel(this RectTransform rectTransform)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xC655A8", Offset = "0xC655A8", VA = "0xC655A8")]
	public static LTDescr LeanColor(this GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xC6564C", Offset = "0xC6564C", VA = "0xC6564C")]
	public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xC656F0", Offset = "0xC656F0", VA = "0xC656F0")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xC65774", Offset = "0xC65774", VA = "0xC65774")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xC657F8", Offset = "0xC657F8", VA = "0xC657F8")]
	public static bool LeanIsPaused(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xC6585C", Offset = "0xC6585C", VA = "0xC6585C")]
	public static bool LeanIsPaused(this RectTransform rectTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xC658C0", Offset = "0xC658C0", VA = "0xC658C0")]
	public static bool LeanIsTweening(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xC65924", Offset = "0xC65924", VA = "0xC65924")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xC659B8", Offset = "0xC659B8", VA = "0xC659B8")]
	public static LTDescr LeanMove(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xC65A6C", Offset = "0xC65A6C", VA = "0xC65A6C")]
	public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xC65B00", Offset = "0xC65B00", VA = "0xC65B00")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xC65B8C", Offset = "0xC65B8C", VA = "0xC65B8C")]
	public static LTDescr LeanMove(this Transform transform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xC65C38", Offset = "0xC65C38", VA = "0xC65C38")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xC65CBC", Offset = "0xC65CBC", VA = "0xC65CBC")]
	public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xC65D40", Offset = "0xC65D40", VA = "0xC65D40")]
	public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xC65DC4", Offset = "0xC65DC4", VA = "0xC65DC4")]
	public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xC65E68", Offset = "0xC65E68", VA = "0xC65E68")]
	public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xC65F0C", Offset = "0xC65F0C", VA = "0xC65F0C")]
	public static LTDescr LeanMove(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xC65FB0", Offset = "0xC65FB0", VA = "0xC65FB0")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xC66044", Offset = "0xC66044", VA = "0xC66044")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xC660C8", Offset = "0xC660C8", VA = "0xC660C8")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xC6614C", Offset = "0xC6614C", VA = "0xC6614C")]
	public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xC66200", Offset = "0xC66200", VA = "0xC66200")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xC662A4", Offset = "0xC662A4", VA = "0xC662A4")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xC66348", Offset = "0xC66348", VA = "0xC66348")]
	public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xC663C4", Offset = "0xC663C4", VA = "0xC663C4")]
	public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xC66440", Offset = "0xC66440", VA = "0xC66440")]
	public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xC664BC", Offset = "0xC664BC", VA = "0xC664BC")]
	public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xC66558", Offset = "0xC66558", VA = "0xC66558")]
	public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xC665F4", Offset = "0xC665F4", VA = "0xC665F4")]
	public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xC66690", Offset = "0xC66690", VA = "0xC66690")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xC66714", Offset = "0xC66714", VA = "0xC66714")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xC66798", Offset = "0xC66798", VA = "0xC66798")]
	public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xC6683C", Offset = "0xC6683C", VA = "0xC6683C")]
	public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xC668E0", Offset = "0xC668E0", VA = "0xC668E0")]
	public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xC66964", Offset = "0xC66964", VA = "0xC66964")]
	public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xC66A08", Offset = "0xC66A08", VA = "0xC66A08")]
	public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xC66A84", Offset = "0xC66A84", VA = "0xC66A84")]
	public static LTDescr LeanMoveX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xC66B20", Offset = "0xC66B20", VA = "0xC66B20")]
	public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xC66B9C", Offset = "0xC66B9C", VA = "0xC66B9C")]
	public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xC66C18", Offset = "0xC66C18", VA = "0xC66C18")]
	public static LTDescr LeanMoveY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xC66CB4", Offset = "0xC66CB4", VA = "0xC66CB4")]
	public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xC66D30", Offset = "0xC66D30", VA = "0xC66D30")]
	public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xC66DAC", Offset = "0xC66DAC", VA = "0xC66DAC")]
	public static LTDescr LeanMoveZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xC66E48", Offset = "0xC66E48", VA = "0xC66E48")]
	public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xC66EC4", Offset = "0xC66EC4", VA = "0xC66EC4")]
	public static void LeanPause(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xC66F28", Offset = "0xC66F28", VA = "0xC66F28")]
	public static LTDescr LeanPlay(this RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xC66F9C", Offset = "0xC66F9C", VA = "0xC66F9C")]
	public static void LeanResume(this GameObject gameObject)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC67000", Offset = "0xC67000", VA = "0xC67000")]
	public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xC67094", Offset = "0xC67094", VA = "0xC67094")]
	public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xC67148", Offset = "0xC67148", VA = "0xC67148")]
	public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC671DC", Offset = "0xC671DC", VA = "0xC671DC")]
	public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC67280", Offset = "0xC67280", VA = "0xC67280")]
	public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC67344", Offset = "0xC67344", VA = "0xC67344")]
	public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC673E8", Offset = "0xC673E8", VA = "0xC673E8")]
	public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC6748C", Offset = "0xC6748C", VA = "0xC6748C")]
	public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC67550", Offset = "0xC67550", VA = "0xC67550")]
	public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC675F4", Offset = "0xC675F4", VA = "0xC675F4")]
	public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC67670", Offset = "0xC67670", VA = "0xC67670")]
	public static LTDescr LeanRotateX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC6770C", Offset = "0xC6770C", VA = "0xC6770C")]
	public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC67788", Offset = "0xC67788", VA = "0xC67788")]
	public static LTDescr LeanRotateY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC67824", Offset = "0xC67824", VA = "0xC67824")]
	public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC678A0", Offset = "0xC678A0", VA = "0xC678A0")]
	public static LTDescr LeanRotateZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC6793C", Offset = "0xC6793C", VA = "0xC6793C")]
	public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xC679D0", Offset = "0xC679D0", VA = "0xC679D0")]
	public static LTDescr LeanScale(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xC67A84", Offset = "0xC67A84", VA = "0xC67A84")]
	public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xC67B18", Offset = "0xC67B18", VA = "0xC67B18")]
	public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xC67B94", Offset = "0xC67B94", VA = "0xC67B94")]
	public static LTDescr LeanScaleX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xC67C30", Offset = "0xC67C30", VA = "0xC67C30")]
	public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xC67CAC", Offset = "0xC67CAC", VA = "0xC67CAC")]
	public static LTDescr LeanScaleY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xC67D48", Offset = "0xC67D48", VA = "0xC67D48")]
	public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xC67DC4", Offset = "0xC67DC4", VA = "0xC67DC4")]
	public static LTDescr LeanScaleZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xC67E60", Offset = "0xC67E60", VA = "0xC67E60")]
	public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xC67EEC", Offset = "0xC67EEC", VA = "0xC67EEC")]
	public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xC68010", Offset = "0xC68010", VA = "0xC68010")]
	public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xC6809C", Offset = "0xC6809C", VA = "0xC6809C")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xC68140", Offset = "0xC68140", VA = "0xC68140")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xC681FC", Offset = "0xC681FC", VA = "0xC681FC")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xC68298", Offset = "0xC68298", VA = "0xC68298")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xC68334", Offset = "0xC68334", VA = "0xC68334")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xC683D0", Offset = "0xC683D0", VA = "0xC683D0")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xC684FC", Offset = "0xC684FC", VA = "0xC684FC")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xC685B0", Offset = "0xC685B0", VA = "0xC685B0")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xC623C0", Offset = "0xC623C0", VA = "0xC623C0")]
	public static void LeanSetPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xC62560", Offset = "0xC62560", VA = "0xC62560")]
	public static void LeanSetPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xC62700", Offset = "0xC62700", VA = "0xC62700")]
	public static void LeanSetPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xC61EE0", Offset = "0xC61EE0", VA = "0xC61EE0")]
	public static void LeanSetLocalPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xC62080", Offset = "0xC62080", VA = "0xC62080")]
	public static void LeanSetLocalPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xC62220", Offset = "0xC62220", VA = "0xC62220")]
	public static void LeanSetLocalPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xC62AA4", Offset = "0xC62AA4", VA = "0xC62AA4")]
	public static Color LeanColor(this Transform transform)
	{
		return default(Color);
	}
}
[Token(Token = "0x20000E7")]
public class LTDescr
{
	[Token(Token = "0x2000423")]
	public delegate Vector3 EaseTypeDelegate();

	[Token(Token = "0x2000424")]
	public delegate void ActionMethodDelegate();

	[Serializable]
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D698", Offset = "0x64D698")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ActionMethodDelegate <>9__113_0;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ActionMethodDelegate <>9__114_0;

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xFE2080", Offset = "0xFE2080", VA = "0xFE2080")]
		public <>c()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xFE2088", Offset = "0xFE2088", VA = "0xFE2088")]
		internal void <setCallback>b__113_0()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xFE208C", Offset = "0xFE208C", VA = "0xFE208C")]
		internal void <setValue3>b__114_0()
		{
		}
	}

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool toggle;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool useEstimatedTime;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool useFrames;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool useManualTime;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool usesNormalDt;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool hasInitiliazed;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool hasExtraOnCompletes;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool hasPhysics;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onCompleteOnRepeat;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onCompleteOnStart;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useRecursion;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratioPassed;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float passed;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastVal;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private uint _id;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int loopCount;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint counter;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float direction;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float directionLast;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float overshoot;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float period;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float scale;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool destroyOnComplete;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform trans;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal Vector3 fromInternal;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	internal Vector3 toInternal;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal Vector3 diff;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	internal Vector3 diffDiv2;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TweenAction type;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private LeanTweenType easeType;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LeanTweenType loopType;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool hasUpdateCallback;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EaseTypeDelegate easeMethod;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6549E4", Offset = "0x6549E4")]
	private ActionMethodDelegate <easeInternal>k__BackingField;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6549F4", Offset = "0x6549F4")]
	private ActionMethodDelegate <initInternal>k__BackingField;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer spriteRen;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RectTransform rectTransform;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text uiText;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image uiImage;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RawImage rawImage;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite[] sprites;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LTDescrOptional _optional;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float val;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float dt;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 newVect;

	[Token(Token = "0x1700007D")]
	public Vector3 from
	{
		[Token(Token = "0x6000854")]
		[Address(RVA = "0xFD0A1C", Offset = "0xFD0A1C", VA = "0xFD0A1C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000855")]
		[Address(RVA = "0xFD0A28", Offset = "0xFD0A28", VA = "0xFD0A28")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public Vector3 to
	{
		[Token(Token = "0x6000856")]
		[Address(RVA = "0xFD0A34", Offset = "0xFD0A34", VA = "0xFD0A34")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000857")]
		[Address(RVA = "0xFD0A40", Offset = "0xFD0A40", VA = "0xFD0A40")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public ActionMethodDelegate easeInternal
	{
		[Token(Token = "0x6000858")]
		[Address(RVA = "0xFD0A4C", Offset = "0xFD0A4C", VA = "0xFD0A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BEC0", Offset = "0x66BEC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000859")]
		[Address(RVA = "0xFD0A54", Offset = "0xFD0A54", VA = "0xFD0A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BED0", Offset = "0x66BED0")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public ActionMethodDelegate initInternal
	{
		[Token(Token = "0x600085A")]
		[Address(RVA = "0xFD0A5C", Offset = "0xFD0A5C", VA = "0xFD0A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BEE0", Offset = "0x66BEE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600085B")]
		[Address(RVA = "0xFD0A64", Offset = "0xFD0A64", VA = "0xFD0A64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BEF0", Offset = "0x66BEF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public Transform toTrans
	{
		[Token(Token = "0x600085C")]
		[Address(RVA = "0xFD0A6C", Offset = "0xFD0A6C", VA = "0xFD0A6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000082")]
	public int uniqueId
	{
		[Token(Token = "0x6000860")]
		[Address(RVA = "0xFD16D0", Offset = "0xFD16D0", VA = "0xFD16D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000083")]
	public int id
	{
		[Token(Token = "0x6000861")]
		[Address(RVA = "0xFD1564", Offset = "0xFD1564", VA = "0xFD1564")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000084")]
	public LTDescrOptional optional
	{
		[Token(Token = "0x6000862")]
		[Address(RVA = "0xFD0A98", Offset = "0xFD0A98", VA = "0xFD0A98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000863")]
		[Address(RVA = "0xFD16E0", Offset = "0xFD16E0", VA = "0xFD16E0")]
		set
		{
		}
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xFD0AA8", Offset = "0xFD0AA8", VA = "0xFD0AA8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xFD1574", Offset = "0xFD1574", VA = "0xFD1574")]
	public LTDescr()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xFD15EC", Offset = "0xFD15EC", VA = "0xFD15EC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66BF00", Offset = "0x66BF00")]
	public LTDescr cancel(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xFD16E8", Offset = "0xFD16E8", VA = "0xFD16E8")]
	public void reset()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xFD1894", Offset = "0xFD1894", VA = "0xFD1894")]
	public LTDescr setFollow()
	{
		return null;
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xFD18A0", Offset = "0xFD18A0", VA = "0xFD18A0")]
	public LTDescr setMoveX()
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xFD1948", Offset = "0xFD1948", VA = "0xFD1948")]
	public LTDescr setMoveY()
	{
		return null;
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xFD19E4", Offset = "0xFD19E4", VA = "0xFD19E4")]
	public LTDescr setMoveZ()
	{
		return null;
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xFD1A80", Offset = "0xFD1A80", VA = "0xFD1A80")]
	public LTDescr setMoveLocalX()
	{
		return null;
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xFD1B1C", Offset = "0xFD1B1C", VA = "0xFD1B1C")]
	public LTDescr setMoveLocalY()
	{
		return null;
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xFD1BB8", Offset = "0xFD1BB8", VA = "0xFD1BB8")]
	public LTDescr setMoveLocalZ()
	{
		return null;
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xFD1C54", Offset = "0xFD1C54", VA = "0xFD1C54")]
	private void initFromInternal()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xFD1C5C", Offset = "0xFD1C5C", VA = "0xFD1C5C")]
	public LTDescr setOffset(Vector3 offset)
	{
		return null;
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xFD1C68", Offset = "0xFD1C68", VA = "0xFD1C68")]
	public LTDescr setMoveCurved()
	{
		return null;
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xFD1D04", Offset = "0xFD1D04", VA = "0xFD1D04")]
	public LTDescr setMoveCurvedLocal()
	{
		return null;
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xFD1DA0", Offset = "0xFD1DA0", VA = "0xFD1DA0")]
	public LTDescr setMoveSpline()
	{
		return null;
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xFD1E3C", Offset = "0xFD1E3C", VA = "0xFD1E3C")]
	public LTDescr setMoveSplineLocal()
	{
		return null;
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xFD1ED8", Offset = "0xFD1ED8", VA = "0xFD1ED8")]
	public LTDescr setScaleX()
	{
		return null;
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xFD1F74", Offset = "0xFD1F74", VA = "0xFD1F74")]
	public LTDescr setScaleY()
	{
		return null;
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xFD2010", Offset = "0xFD2010", VA = "0xFD2010")]
	public LTDescr setScaleZ()
	{
		return null;
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xFD20AC", Offset = "0xFD20AC", VA = "0xFD20AC")]
	public LTDescr setRotateX()
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xFD2148", Offset = "0xFD2148", VA = "0xFD2148")]
	public LTDescr setRotateY()
	{
		return null;
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xFD21E4", Offset = "0xFD21E4", VA = "0xFD21E4")]
	public LTDescr setRotateZ()
	{
		return null;
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xFD2280", Offset = "0xFD2280", VA = "0xFD2280")]
	public LTDescr setRotateAround()
	{
		return null;
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xFD231C", Offset = "0xFD231C", VA = "0xFD231C")]
	public LTDescr setRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xFD23B8", Offset = "0xFD23B8", VA = "0xFD23B8")]
	public LTDescr setAlpha()
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xFD2454", Offset = "0xFD2454", VA = "0xFD2454")]
	public LTDescr setTextAlpha()
	{
		return null;
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xFD24F0", Offset = "0xFD24F0", VA = "0xFD24F0")]
	public LTDescr setAlphaVertex()
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xFD258C", Offset = "0xFD258C", VA = "0xFD258C")]
	public LTDescr setColor()
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xFD2628", Offset = "0xFD2628", VA = "0xFD2628")]
	public LTDescr setCallbackColor()
	{
		return null;
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xFD26C4", Offset = "0xFD26C4", VA = "0xFD26C4")]
	public LTDescr setTextColor()
	{
		return null;
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xFD2760", Offset = "0xFD2760", VA = "0xFD2760")]
	public LTDescr setCanvasAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xFD27FC", Offset = "0xFD27FC", VA = "0xFD27FC")]
	public LTDescr setCanvasGroupAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xFD2898", Offset = "0xFD2898", VA = "0xFD2898")]
	public LTDescr setCanvasColor()
	{
		return null;
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xFD2934", Offset = "0xFD2934", VA = "0xFD2934")]
	public LTDescr setCanvasMoveX()
	{
		return null;
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xFD29D0", Offset = "0xFD29D0", VA = "0xFD29D0")]
	public LTDescr setCanvasMoveY()
	{
		return null;
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xFD2A6C", Offset = "0xFD2A6C", VA = "0xFD2A6C")]
	public LTDescr setCanvasMoveZ()
	{
		return null;
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xFD2B08", Offset = "0xFD2B08", VA = "0xFD2B08")]
	private void initCanvasRotateAround()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xFD2B88", Offset = "0xFD2B88", VA = "0xFD2B88")]
	public LTDescr setCanvasRotateAround()
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xFD2C24", Offset = "0xFD2C24", VA = "0xFD2C24")]
	public LTDescr setCanvasRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xFD2CC0", Offset = "0xFD2CC0", VA = "0xFD2CC0")]
	public LTDescr setCanvasPlaySprite()
	{
		return null;
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xFD2D5C", Offset = "0xFD2D5C", VA = "0xFD2D5C")]
	public LTDescr setCanvasMove()
	{
		return null;
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xFD2DF8", Offset = "0xFD2DF8", VA = "0xFD2DF8")]
	public LTDescr setCanvasScale()
	{
		return null;
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xFD2E94", Offset = "0xFD2E94", VA = "0xFD2E94")]
	public LTDescr setCanvasSizeDelta()
	{
		return null;
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xFD2F30", Offset = "0xFD2F30", VA = "0xFD2F30")]
	private void callback()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xFD33E0", Offset = "0xFD33E0", VA = "0xFD33E0")]
	public LTDescr setCallback()
	{
		return null;
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xFD34EC", Offset = "0xFD34EC", VA = "0xFD34EC")]
	public LTDescr setValue3()
	{
		return null;
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xFD35F8", Offset = "0xFD35F8", VA = "0xFD35F8")]
	public LTDescr setMove()
	{
		return null;
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xFD3694", Offset = "0xFD3694", VA = "0xFD3694")]
	public LTDescr setMoveLocal()
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xFD3730", Offset = "0xFD3730", VA = "0xFD3730")]
	public LTDescr setMoveToTransform()
	{
		return null;
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xFD37CC", Offset = "0xFD37CC", VA = "0xFD37CC")]
	public LTDescr setRotate()
	{
		return null;
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xFD3868", Offset = "0xFD3868", VA = "0xFD3868")]
	public LTDescr setRotateLocal()
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xFD3904", Offset = "0xFD3904", VA = "0xFD3904")]
	public LTDescr setScale()
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xFD39A0", Offset = "0xFD39A0", VA = "0xFD39A0")]
	public LTDescr setGUIMove()
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xFD3A3C", Offset = "0xFD3A3C", VA = "0xFD3A3C")]
	public LTDescr setGUIMoveMargin()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xFD3AD8", Offset = "0xFD3AD8", VA = "0xFD3AD8")]
	public LTDescr setGUIScale()
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xFD3B74", Offset = "0xFD3B74", VA = "0xFD3B74")]
	public LTDescr setGUIAlpha()
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xFD3C10", Offset = "0xFD3C10", VA = "0xFD3C10")]
	public LTDescr setGUIRotate()
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xFD3CAC", Offset = "0xFD3CAC", VA = "0xFD3CAC")]
	public LTDescr setDelayedSound()
	{
		return null;
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xFD3D48", Offset = "0xFD3D48", VA = "0xFD3D48")]
	public LTDescr setTarget(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xFD3D90", Offset = "0xFD3D90", VA = "0xFD3D90")]
	private void init()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xFD4554", Offset = "0xFD4554", VA = "0xFD4554")]
	private void initSpeed()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xFD46A4", Offset = "0xFD46A4", VA = "0xFD46A4")]
	public LTDescr updateNow()
	{
		return null;
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xFD46C8", Offset = "0xFD46C8", VA = "0xFD46C8")]
	public bool updateInternal()
	{
		return default(bool);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xFD437C", Offset = "0xFD437C", VA = "0xFD437C")]
	public void callOnCompletes()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xFD4C08", Offset = "0xFD4C08", VA = "0xFD4C08")]
	public LTDescr setFromColor(Color col)
	{
		return null;
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xFD4CF8", Offset = "0xFD4CF8", VA = "0xFD4CF8")]
	private static void alphaRecursive(Transform transform, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xFD5240", Offset = "0xFD5240", VA = "0xFD5240")]
	private static void colorRecursive(Transform transform, Color toColor, bool useRecursion = true)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xFD563C", Offset = "0xFD563C", VA = "0xFD563C")]
	private static void alphaRecursive(RectTransform rectTransform, float val, int recursiveLevel = 0)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xFD5A64", Offset = "0xFD5A64", VA = "0xFD5A64")]
	private static void alphaRecursiveSprite(Transform transform, float val)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xFD5E58", Offset = "0xFD5E58", VA = "0xFD5E58")]
	private static void colorRecursiveSprite(Transform transform, Color toColor)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xFD62A0", Offset = "0xFD62A0", VA = "0xFD62A0")]
	private static void colorRecursive(RectTransform rectTransform, Color toColor)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xFD66CC", Offset = "0xFD66CC", VA = "0xFD66CC")]
	private static void textAlphaChildrenRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xFD6A68", Offset = "0xFD6A68", VA = "0xFD6A68")]
	private static void textAlphaRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xFD6DFC", Offset = "0xFD6DFC", VA = "0xFD6DFC")]
	private static void textColorRecursive(Transform trans, Color toColor)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xFD7198", Offset = "0xFD7198", VA = "0xFD7198")]
	private static Color tweenColor(LTDescr tween, float val)
	{
		return default(Color);
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xFD7348", Offset = "0xFD7348", VA = "0xFD7348")]
	public LTDescr pause()
	{
		return null;
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xFD7360", Offset = "0xFD7360", VA = "0xFD7360")]
	public LTDescr resume()
	{
		return null;
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xFD736C", Offset = "0xFD736C", VA = "0xFD736C")]
	public LTDescr setAxis(Vector3 axis)
	{
		return null;
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xFD73C0", Offset = "0xFD73C0", VA = "0xFD73C0")]
	public LTDescr setDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xFD73C8", Offset = "0xFD73C8", VA = "0xFD73C8")]
	public LTDescr setEase(LeanTweenType easeType)
	{
		return null;
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xFD7504", Offset = "0xFD7504", VA = "0xFD7504")]
	public LTDescr setEaseLinear()
	{
		return null;
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xFD851C", Offset = "0xFD851C", VA = "0xFD851C")]
	public LTDescr setEaseSpring()
	{
		return null;
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xFD75F4", Offset = "0xFD75F4", VA = "0xFD75F4")]
	public LTDescr setEaseInQuad()
	{
		return null;
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xFD757C", Offset = "0xFD757C", VA = "0xFD757C")]
	public LTDescr setEaseOutQuad()
	{
		return null;
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xFD766C", Offset = "0xFD766C", VA = "0xFD766C")]
	public LTDescr setEaseInOutQuad()
	{
		return null;
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xFD76E4", Offset = "0xFD76E4", VA = "0xFD76E4")]
	public LTDescr setEaseInCubic()
	{
		return null;
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xFD775C", Offset = "0xFD775C", VA = "0xFD775C")]
	public LTDescr setEaseOutCubic()
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xFD77D4", Offset = "0xFD77D4", VA = "0xFD77D4")]
	public LTDescr setEaseInOutCubic()
	{
		return null;
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xFD784C", Offset = "0xFD784C", VA = "0xFD784C")]
	public LTDescr setEaseInQuart()
	{
		return null;
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xFD78C4", Offset = "0xFD78C4", VA = "0xFD78C4")]
	public LTDescr setEaseOutQuart()
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xFD793C", Offset = "0xFD793C", VA = "0xFD793C")]
	public LTDescr setEaseInOutQuart()
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xFD79B4", Offset = "0xFD79B4", VA = "0xFD79B4")]
	public LTDescr setEaseInQuint()
	{
		return null;
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xFD7A2C", Offset = "0xFD7A2C", VA = "0xFD7A2C")]
	public LTDescr setEaseOutQuint()
	{
		return null;
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xFD7AA4", Offset = "0xFD7AA4", VA = "0xFD7AA4")]
	public LTDescr setEaseInOutQuint()
	{
		return null;
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xFD7B1C", Offset = "0xFD7B1C", VA = "0xFD7B1C")]
	public LTDescr setEaseInSine()
	{
		return null;
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xFD7B94", Offset = "0xFD7B94", VA = "0xFD7B94")]
	public LTDescr setEaseOutSine()
	{
		return null;
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xFD7C0C", Offset = "0xFD7C0C", VA = "0xFD7C0C")]
	public LTDescr setEaseInOutSine()
	{
		return null;
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xFD7C84", Offset = "0xFD7C84", VA = "0xFD7C84")]
	public LTDescr setEaseInExpo()
	{
		return null;
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xFD7CFC", Offset = "0xFD7CFC", VA = "0xFD7CFC")]
	public LTDescr setEaseOutExpo()
	{
		return null;
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xFD7D74", Offset = "0xFD7D74", VA = "0xFD7D74")]
	public LTDescr setEaseInOutExpo()
	{
		return null;
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xFD7DEC", Offset = "0xFD7DEC", VA = "0xFD7DEC")]
	public LTDescr setEaseInCirc()
	{
		return null;
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xFD7E64", Offset = "0xFD7E64", VA = "0xFD7E64")]
	public LTDescr setEaseOutCirc()
	{
		return null;
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xFD7EDC", Offset = "0xFD7EDC", VA = "0xFD7EDC")]
	public LTDescr setEaseInOutCirc()
	{
		return null;
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xFD7F54", Offset = "0xFD7F54", VA = "0xFD7F54")]
	public LTDescr setEaseInBounce()
	{
		return null;
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xFD7FCC", Offset = "0xFD7FCC", VA = "0xFD7FCC")]
	public LTDescr setEaseOutBounce()
	{
		return null;
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xFD8044", Offset = "0xFD8044", VA = "0xFD8044")]
	public LTDescr setEaseInOutBounce()
	{
		return null;
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xFD80BC", Offset = "0xFD80BC", VA = "0xFD80BC")]
	public LTDescr setEaseInBack()
	{
		return null;
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xFD8134", Offset = "0xFD8134", VA = "0xFD8134")]
	public LTDescr setEaseOutBack()
	{
		return null;
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xFD81AC", Offset = "0xFD81AC", VA = "0xFD81AC")]
	public LTDescr setEaseInOutBack()
	{
		return null;
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xFD8224", Offset = "0xFD8224", VA = "0xFD8224")]
	public LTDescr setEaseInElastic()
	{
		return null;
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xFD829C", Offset = "0xFD829C", VA = "0xFD829C")]
	public LTDescr setEaseOutElastic()
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xFD8314", Offset = "0xFD8314", VA = "0xFD8314")]
	public LTDescr setEaseInOutElastic()
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xFD838C", Offset = "0xFD838C", VA = "0xFD838C")]
	public LTDescr setEasePunch()
	{
		return null;
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xFD8454", Offset = "0xFD8454", VA = "0xFD8454")]
	public LTDescr setEaseShake()
	{
		return null;
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xFD8594", Offset = "0xFD8594", VA = "0xFD8594")]
	private Vector3 tweenOnCurve()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xFD86D0", Offset = "0xFD86D0", VA = "0xFD86D0")]
	private Vector3 easeInOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xFD87BC", Offset = "0xFD87BC", VA = "0xFD87BC")]
	private Vector3 easeInQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xFD8870", Offset = "0xFD8870", VA = "0xFD8870")]
	private Vector3 easeOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xFD894C", Offset = "0xFD894C", VA = "0xFD894C")]
	private Vector3 easeLinear()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xFD89FC", Offset = "0xFD89FC", VA = "0xFD89FC")]
	private Vector3 easeSpring()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xFD8BA0", Offset = "0xFD8BA0", VA = "0xFD8BA0")]
	private Vector3 easeInCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xFD8C58", Offset = "0xFD8C58", VA = "0xFD8C58")]
	private Vector3 easeOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xFD8D30", Offset = "0xFD8D30", VA = "0xFD8D30")]
	private Vector3 easeInOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xFD8E34", Offset = "0xFD8E34", VA = "0xFD8E34")]
	private Vector3 easeInQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xFD8F00", Offset = "0xFD8F00", VA = "0xFD8F00")]
	private Vector3 easeOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xFD8FDC", Offset = "0xFD8FDC", VA = "0xFD8FDC")]
	private Vector3 easeInOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xFD9150", Offset = "0xFD9150", VA = "0xFD9150")]
	private Vector3 easeInQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xFD9220", Offset = "0xFD9220", VA = "0xFD9220")]
	private Vector3 easeOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xFD9300", Offset = "0xFD9300", VA = "0xFD9300")]
	private Vector3 easeInOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xFD9414", Offset = "0xFD9414", VA = "0xFD9414")]
	private Vector3 easeInSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xFD9534", Offset = "0xFD9534", VA = "0xFD9534")]
	private Vector3 easeOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xFD9644", Offset = "0xFD9644", VA = "0xFD9644")]
	private Vector3 easeInOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xFD9738", Offset = "0xFD9738", VA = "0xFD9738")]
	private Vector3 easeInExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xFD9824", Offset = "0xFD9824", VA = "0xFD9824")]
	private Vector3 easeOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xFD9910", Offset = "0xFD9910", VA = "0xFD9910")]
	private Vector3 easeInOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xFD9A94", Offset = "0xFD9A94", VA = "0xFD9A94")]
	private Vector3 easeInCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xFD9B98", Offset = "0xFD9B98", VA = "0xFD9B98")]
	private Vector3 easeOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xFD9CB0", Offset = "0xFD9CB0", VA = "0xFD9CB0")]
	private Vector3 easeInOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xFD9E38", Offset = "0xFD9E38", VA = "0xFD9E38")]
	private Vector3 easeInBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xFD9FA0", Offset = "0xFD9FA0", VA = "0xFD9FA0")]
	private Vector3 easeOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xFDA19C", Offset = "0xFDA19C", VA = "0xFDA19C")]
	private Vector3 easeInOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xFDA3CC", Offset = "0xFDA3CC", VA = "0xFDA3CC")]
	private Vector3 easeInBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xFDA4DC", Offset = "0xFDA4DC", VA = "0xFDA4DC")]
	private Vector3 easeOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xFDA5E0", Offset = "0xFDA5E0", VA = "0xFDA5E0")]
	private Vector3 easeInOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xFDA774", Offset = "0xFDA774", VA = "0xFDA774")]
	private Vector3 easeInElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xFDA888", Offset = "0xFDA888", VA = "0xFDA888")]
	private Vector3 easeOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xFDA99C", Offset = "0xFDA99C", VA = "0xFDA99C")]
	private Vector3 easeInOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xFDAAB0", Offset = "0xFDAAB0", VA = "0xFDAAB0")]
	public LTDescr setOvershoot(float overshoot)
	{
		return null;
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xFDAAB8", Offset = "0xFDAAB8", VA = "0xFDAAB8")]
	public LTDescr setPeriod(float period)
	{
		return null;
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xFDAAC0", Offset = "0xFDAAC0", VA = "0xFDAAC0")]
	public LTDescr setScale(float scale)
	{
		return null;
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xFDAAC8", Offset = "0xFDAAC8", VA = "0xFDAAC8")]
	public LTDescr setEase(AnimationCurve easeCurve)
	{
		return null;
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xFDAB60", Offset = "0xFDAB60", VA = "0xFDAB60")]
	public LTDescr setTo(Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xFDAC28", Offset = "0xFDAC28", VA = "0xFDAC28")]
	public LTDescr setTo(Transform to)
	{
		return null;
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xFDAC68", Offset = "0xFDAC68", VA = "0xFDAC68")]
	public LTDescr setFrom(Vector3 from)
	{
		return null;
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xFDAD78", Offset = "0xFDAD78", VA = "0xFDAD78")]
	public LTDescr setFrom(float from)
	{
		return null;
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xFDADC8", Offset = "0xFDADC8", VA = "0xFDADC8")]
	public LTDescr setDiff(Vector3 diff)
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xFDADD4", Offset = "0xFDADD4", VA = "0xFDADD4")]
	public LTDescr setHasInitialized(bool has)
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xFDADE0", Offset = "0xFDADE0", VA = "0xFDADE0")]
	public LTDescr setId(uint id, uint global_counter)
	{
		return null;
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xFDADEC", Offset = "0xFDADEC", VA = "0xFDADEC")]
	public LTDescr setPassed(float passed)
	{
		return null;
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xFDADF4", Offset = "0xFDADF4", VA = "0xFDADF4")]
	public LTDescr setTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xFDAE10", Offset = "0xFDAE10", VA = "0xFDAE10")]
	public LTDescr setSpeed(float speed)
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xFDAE44", Offset = "0xFDAE44", VA = "0xFDAE44")]
	public LTDescr setRepeat(int repeat)
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xFDAE98", Offset = "0xFDAE98", VA = "0xFDAE98")]
	public LTDescr setLoopType(LeanTweenType loopType)
	{
		return null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xFDAEA0", Offset = "0xFDAEA0", VA = "0xFDAEA0")]
	public LTDescr setUseEstimatedTime(bool useEstimatedTime)
	{
		return null;
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xFDAEB0", Offset = "0xFDAEB0", VA = "0xFDAEB0")]
	public LTDescr setIgnoreTimeScale(bool useUnScaledTime)
	{
		return null;
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xFDAEC0", Offset = "0xFDAEC0", VA = "0xFDAEC0")]
	public LTDescr setUseFrames(bool useFrames)
	{
		return null;
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xFDAED0", Offset = "0xFDAED0", VA = "0xFDAED0")]
	public LTDescr setUseManualTime(bool useManualTime)
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xFDAEE0", Offset = "0xFDAEE0", VA = "0xFDAEE0")]
	public LTDescr setLoopCount(int loopCount)
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xFDAEF0", Offset = "0xFDAEF0", VA = "0xFDAEF0")]
	public LTDescr setLoopOnce()
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xFDAEFC", Offset = "0xFDAEFC", VA = "0xFDAEFC")]
	public LTDescr setLoopClamp()
	{
		return null;
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xFDAF1C", Offset = "0xFDAF1C", VA = "0xFDAF1C")]
	public LTDescr setLoopClamp(int loops)
	{
		return null;
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xFDAF24", Offset = "0xFDAF24", VA = "0xFDAF24")]
	public LTDescr setLoopPingPong()
	{
		return null;
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xFDAF44", Offset = "0xFDAF44", VA = "0xFDAF44")]
	public LTDescr setLoopPingPong(int loops)
	{
		return null;
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xFDAF84", Offset = "0xFDAF84", VA = "0xFDAF84")]
	public LTDescr setOnComplete(Action onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xFDAFD4", Offset = "0xFDAFD4", VA = "0xFDAFD4")]
	public LTDescr setOnComplete(Action<object> onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xFDB024", Offset = "0xFDB024", VA = "0xFDB024")]
	public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xFDB090", Offset = "0xFDB090", VA = "0xFDB090")]
	public LTDescr setOnCompleteParam(object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xFDB0D8", Offset = "0xFDB0D8", VA = "0xFDB0D8")]
	public LTDescr setOnUpdate(Action<float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xFDB128", Offset = "0xFDB128", VA = "0xFDB128")]
	public LTDescr setOnUpdateRatio(Action<float, float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xFDB178", Offset = "0xFDB178", VA = "0xFDB178")]
	public LTDescr setOnUpdateObject(Action<float, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xFDB1C8", Offset = "0xFDB1C8", VA = "0xFDB1C8")]
	public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xFDB218", Offset = "0xFDB218", VA = "0xFDB218")]
	public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xFDB268", Offset = "0xFDB268", VA = "0xFDB268")]
	public LTDescr setOnUpdateColor(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xFDB2B8", Offset = "0xFDB2B8", VA = "0xFDB2B8")]
	public LTDescr setOnUpdateColor(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xFDB308", Offset = "0xFDB308", VA = "0xFDB308")]
	public LTDescr setOnUpdate(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xFDB350", Offset = "0xFDB350", VA = "0xFDB350")]
	public LTDescr setOnUpdate(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xFDB398", Offset = "0xFDB398", VA = "0xFDB398")]
	public LTDescr setOnUpdate(Action<float, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xFDB404", Offset = "0xFDB404", VA = "0xFDB404")]
	public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xFDB470", Offset = "0xFDB470", VA = "0xFDB470")]
	public LTDescr setOnUpdate(Action<Vector2> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xFDB4D4", Offset = "0xFDB4D4", VA = "0xFDB4D4")]
	public LTDescr setOnUpdate(Action<Vector3> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xFDB538", Offset = "0xFDB538", VA = "0xFDB538")]
	public LTDescr setOnUpdateParam(object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xFDB578", Offset = "0xFDB578", VA = "0xFDB578")]
	public LTDescr setOrientToPath(bool doesOrient)
	{
		return null;
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xFDB678", Offset = "0xFDB678", VA = "0xFDB678")]
	public LTDescr setOrientToPath2d(bool doesOrient2d)
	{
		return null;
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xFDB70C", Offset = "0xFDB70C", VA = "0xFDB70C")]
	public LTDescr setRect(LTRect rect)
	{
		return null;
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xFDB754", Offset = "0xFDB754", VA = "0xFDB754")]
	public LTDescr setRect(Rect rect)
	{
		return null;
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xFDB8B8", Offset = "0xFDB8B8", VA = "0xFDB8B8")]
	public LTDescr setPath(LTBezierPath path)
	{
		return null;
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xFDB8F8", Offset = "0xFDB8F8", VA = "0xFDB8F8")]
	public LTDescr setPoint(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xFDB958", Offset = "0xFDB958", VA = "0xFDB958")]
	public LTDescr setDestroyOnComplete(bool doesDestroy)
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xFDB964", Offset = "0xFDB964", VA = "0xFDB964")]
	public LTDescr setAudio(object audio)
	{
		return null;
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xFDAE8C", Offset = "0xFDAE8C", VA = "0xFDAE8C")]
	public LTDescr setOnCompleteOnRepeat(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xFDB9A4", Offset = "0xFDB9A4", VA = "0xFDB9A4")]
	public LTDescr setOnCompleteOnStart(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xFDB9B0", Offset = "0xFDB9B0", VA = "0xFDB9B0")]
	public LTDescr setRect(RectTransform rect)
	{
		return null;
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xFDB9B8", Offset = "0xFDB9B8", VA = "0xFDB9B8")]
	public LTDescr setSprites(Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xFDB9C0", Offset = "0xFDB9C0", VA = "0xFDB9C0")]
	public LTDescr setFrameRate(float frameRate)
	{
		return null;
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xFDBA0C", Offset = "0xFDBA0C", VA = "0xFDBA0C")]
	public LTDescr setOnStart(Action onStart)
	{
		return null;
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xFDBA54", Offset = "0xFDBA54", VA = "0xFDBA54")]
	public LTDescr setDirection(float direction)
	{
		return null;
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xFDBC4C", Offset = "0xFDBC4C", VA = "0xFDBC4C")]
	public LTDescr setRecursive(bool useRecursion)
	{
		return null;
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xFDBC58", Offset = "0xFDBC58", VA = "0xFDBC58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BF38", Offset = "0x66BF38")]
	private void <setMoveX>b__73_0()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xFDBC94", Offset = "0xFDBC94", VA = "0xFDBC94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BF48", Offset = "0x66BF48")]
	private void <setMoveX>b__73_1()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xFDBD60", Offset = "0xFDBD60", VA = "0xFDBD60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BF58", Offset = "0x66BF58")]
	private void <setMoveY>b__74_0()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xFDBD9C", Offset = "0xFDBD9C", VA = "0xFDBD9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BF68", Offset = "0x66BF68")]
	private void <setMoveY>b__74_1()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xFDBE64", Offset = "0xFDBE64", VA = "0xFDBE64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BF78", Offset = "0x66BF78")]
	private void <setMoveZ>b__75_0()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xFDBEA0", Offset = "0xFDBEA0", VA = "0xFDBEA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BF88", Offset = "0x66BF88")]
	private void <setMoveZ>b__75_1()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xFDBF6C", Offset = "0xFDBF6C", VA = "0xFDBF6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BF98", Offset = "0x66BF98")]
	private void <setMoveLocalX>b__76_0()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xFDBFA8", Offset = "0xFDBFA8", VA = "0xFDBFA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFA8", Offset = "0x66BFA8")]
	private void <setMoveLocalX>b__76_1()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xFDC074", Offset = "0xFDC074", VA = "0xFDC074")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFB8", Offset = "0x66BFB8")]
	private void <setMoveLocalY>b__77_0()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xFDC0B0", Offset = "0xFDC0B0", VA = "0xFDC0B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFC8", Offset = "0x66BFC8")]
	private void <setMoveLocalY>b__77_1()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xFDC178", Offset = "0xFDC178", VA = "0xFDC178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFD8", Offset = "0x66BFD8")]
	private void <setMoveLocalZ>b__78_0()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xFDC1B4", Offset = "0xFDC1B4", VA = "0xFDC1B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFE8", Offset = "0x66BFE8")]
	private void <setMoveLocalZ>b__78_1()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xFDC280", Offset = "0xFDC280", VA = "0xFDC280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFF8", Offset = "0x66BFF8")]
	private void <setMoveCurved>b__81_0()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xFDC448", Offset = "0xFDC448", VA = "0xFDC448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C008", Offset = "0x66C008")]
	private void <setMoveCurvedLocal>b__82_0()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xFDC610", Offset = "0xFDC610", VA = "0xFDC610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C018", Offset = "0x66C018")]
	private void <setMoveSpline>b__83_0()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xFDC7E4", Offset = "0xFDC7E4", VA = "0xFDC7E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C028", Offset = "0x66C028")]
	private void <setMoveSplineLocal>b__84_0()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xFDC9B8", Offset = "0xFDC9B8", VA = "0xFDC9B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C038", Offset = "0x66C038")]
	private void <setScaleX>b__85_0()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xFDC9F4", Offset = "0xFDC9F4", VA = "0xFDC9F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C048", Offset = "0x66C048")]
	private void <setScaleX>b__85_1()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xFDCAC0", Offset = "0xFDCAC0", VA = "0xFDCAC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C058", Offset = "0x66C058")]
	private void <setScaleY>b__86_0()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xFDCAFC", Offset = "0xFDCAFC", VA = "0xFDCAFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C068", Offset = "0x66C068")]
	private void <setScaleY>b__86_1()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xFDCBC4", Offset = "0xFDCBC4", VA = "0xFDCBC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C078", Offset = "0x66C078")]
	private void <setScaleZ>b__87_0()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xFDCC00", Offset = "0xFDCC00", VA = "0xFDCC00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C088", Offset = "0x66C088")]
	private void <setScaleZ>b__87_1()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xFDCCCC", Offset = "0xFDCCCC", VA = "0xFDCCCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C098", Offset = "0x66C098")]
	private void <setRotateX>b__88_0()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xFDCD70", Offset = "0xFDCD70", VA = "0xFDCD70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C0A8", Offset = "0x66C0A8")]
	private void <setRotateX>b__88_1()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xFDCE3C", Offset = "0xFDCE3C", VA = "0xFDCE3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C0B8", Offset = "0x66C0B8")]
	private void <setRotateY>b__89_0()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xFDCEE0", Offset = "0xFDCEE0", VA = "0xFDCEE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C0C8", Offset = "0x66C0C8")]
	private void <setRotateY>b__89_1()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xFDCFA8", Offset = "0xFDCFA8", VA = "0xFDCFA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C0D8", Offset = "0x66C0D8")]
	private void <setRotateZ>b__90_0()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xFDD04C", Offset = "0xFDD04C", VA = "0xFDD04C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C0E8", Offset = "0x66C0E8")]
	private void <setRotateZ>b__90_1()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xFDD118", Offset = "0xFDD118", VA = "0xFDD118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C0F8", Offset = "0x66C0F8")]
	private void <setRotateAround>b__91_0()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xFDD188", Offset = "0xFDD188", VA = "0xFDD188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C108", Offset = "0x66C108")]
	private void <setRotateAround>b__91_1()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xFDD4F4", Offset = "0xFDD4F4", VA = "0xFDD4F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C118", Offset = "0x66C118")]
	private void <setRotateAroundLocal>b__92_0()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xFDD564", Offset = "0xFDD564", VA = "0xFDD564")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C128", Offset = "0x66C128")]
	private void <setRotateAroundLocal>b__92_1()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xFDD910", Offset = "0xFDD910", VA = "0xFDD910")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C138", Offset = "0x66C138")]
	private void <setAlpha>b__93_0()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xFDDFA4", Offset = "0xFDDFA4", VA = "0xFDDFA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C148", Offset = "0x66C148")]
	private void <setAlpha>b__93_2()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xFDE140", Offset = "0xFDE140", VA = "0xFDE140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C158", Offset = "0x66C158")]
	private void <setAlpha>b__93_1()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xFDE2EC", Offset = "0xFDE2EC", VA = "0xFDE2EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C168", Offset = "0x66C168")]
	private void <setTextAlpha>b__94_0()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xFDE3BC", Offset = "0xFDE3BC", VA = "0xFDE3BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C178", Offset = "0x66C178")]
	private void <setTextAlpha>b__94_1()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xFDE404", Offset = "0xFDE404", VA = "0xFDE404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C188", Offset = "0x66C188")]
	private void <setAlphaVertex>b__95_0()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xFDE4C8", Offset = "0xFDE4C8", VA = "0xFDE4C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C198", Offset = "0x66C198")]
	private void <setAlphaVertex>b__95_1()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xFDE7A0", Offset = "0xFDE7A0", VA = "0xFDE7A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1A8", Offset = "0x66C1A8")]
	private void <setColor>b__96_0()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xFDEE24", Offset = "0xFDEE24", VA = "0xFDEE24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1B8", Offset = "0x66C1B8")]
	private void <setColor>b__96_1()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xFDF0C4", Offset = "0xFDF0C4", VA = "0xFDF0C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1C8", Offset = "0x66C1C8")]
	private void <setCallbackColor>b__97_0()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xFDF118", Offset = "0xFDF118", VA = "0xFDF118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1D8", Offset = "0x66C1D8")]
	private void <setCallbackColor>b__97_1()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xFDF3A0", Offset = "0xFDF3A0", VA = "0xFDF3A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1E8", Offset = "0x66C1E8")]
	private void <setTextColor>b__98_0()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xFDF474", Offset = "0xFDF474", VA = "0xFDF474")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1F8", Offset = "0x66C1F8")]
	private void <setTextColor>b__98_1()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xFDF628", Offset = "0xFDF628", VA = "0xFDF628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C208", Offset = "0x66C208")]
	private void <setCanvasAlpha>b__99_0()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xFDF764", Offset = "0xFDF764", VA = "0xFDF764")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C218", Offset = "0x66C218")]
	private void <setCanvasAlpha>b__99_1()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xFDF94C", Offset = "0xFDF94C", VA = "0xFDF94C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C228", Offset = "0x66C228")]
	private void <setCanvasGroupAlpha>b__100_0()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xFDF9CC", Offset = "0xFDF9CC", VA = "0xFDF9CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C238", Offset = "0x66C238")]
	private void <setCanvasGroupAlpha>b__100_1()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xFDFA70", Offset = "0xFDFA70", VA = "0xFDFA70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C248", Offset = "0x66C248")]
	private void <setCanvasColor>b__101_0()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xFDFBB0", Offset = "0xFDFBB0", VA = "0xFDFBB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C258", Offset = "0x66C258")]
	private void <setCanvasColor>b__101_1()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xFDFDB8", Offset = "0xFDFDB8", VA = "0xFDFDB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C268", Offset = "0x66C268")]
	private void <setCanvasMoveX>b__102_0()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xFDFDF4", Offset = "0xFDFDF4", VA = "0xFDFDF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C278", Offset = "0x66C278")]
	private void <setCanvasMoveX>b__102_1()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xFDFE9C", Offset = "0xFDFE9C", VA = "0xFDFE9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C288", Offset = "0x66C288")]
	private void <setCanvasMoveY>b__103_0()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xFDFED8", Offset = "0xFDFED8", VA = "0xFDFED8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C298", Offset = "0x66C298")]
	private void <setCanvasMoveY>b__103_1()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xFDFF84", Offset = "0xFDFF84", VA = "0xFDFF84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2A8", Offset = "0x66C2A8")]
	private void <setCanvasMoveZ>b__104_0()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xFDFFC0", Offset = "0xFDFFC0", VA = "0xFDFFC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2B8", Offset = "0x66C2B8")]
	private void <setCanvasMoveZ>b__104_1()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xFE006C", Offset = "0xFE006C", VA = "0xFE006C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2C8", Offset = "0x66C2C8")]
	private void <setCanvasRotateAround>b__106_0()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xFE0398", Offset = "0xFE0398", VA = "0xFE0398")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2D8", Offset = "0x66C2D8")]
	private void <setCanvasRotateAroundLocal>b__107_0()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xFE0724", Offset = "0xFE0724", VA = "0xFE0724")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2E8", Offset = "0x66C2E8")]
	private void <setCanvasPlaySprite>b__108_0()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xFE0790", Offset = "0xFE0790", VA = "0xFE0790")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2F8", Offset = "0x66C2F8")]
	private void <setCanvasPlaySprite>b__108_1()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xFE091C", Offset = "0xFE091C", VA = "0xFE091C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C308", Offset = "0x66C308")]
	private void <setCanvasMove>b__109_0()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xFE095C", Offset = "0xFE095C", VA = "0xFE095C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C318", Offset = "0x66C318")]
	private void <setCanvasMove>b__109_1()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xFE09CC", Offset = "0xFE09CC", VA = "0xFE09CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C328", Offset = "0x66C328")]
	private void <setCanvasScale>b__110_0()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xFE0A0C", Offset = "0xFE0A0C", VA = "0xFE0A0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C338", Offset = "0x66C338")]
	private void <setCanvasScale>b__110_1()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xFE0A7C", Offset = "0xFE0A7C", VA = "0xFE0A7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C348", Offset = "0x66C348")]
	private void <setCanvasSizeDelta>b__111_0()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xFE0B20", Offset = "0xFE0B20", VA = "0xFE0B20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C358", Offset = "0x66C358")]
	private void <setCanvasSizeDelta>b__111_1()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xFE0BF0", Offset = "0xFE0BF0", VA = "0xFE0BF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C368", Offset = "0x66C368")]
	private void <setMove>b__115_0()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xFE0C30", Offset = "0xFE0C30", VA = "0xFE0C30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C378", Offset = "0x66C378")]
	private void <setMove>b__115_1()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xFE0CE0", Offset = "0xFE0CE0", VA = "0xFE0CE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C388", Offset = "0x66C388")]
	private void <setMoveLocal>b__116_0()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xFE0D20", Offset = "0xFE0D20", VA = "0xFE0D20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C398", Offset = "0x66C398")]
	private void <setMoveLocal>b__116_1()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xFE0DD0", Offset = "0xFE0DD0", VA = "0xFE0DD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3A8", Offset = "0x66C3A8")]
	private void <setMoveToTransform>b__117_0()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xFE0E10", Offset = "0xFE0E10", VA = "0xFE0E10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3B8", Offset = "0x66C3B8")]
	private void <setMoveToTransform>b__117_1()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xFE0F6C", Offset = "0xFE0F6C", VA = "0xFE0F6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3C8", Offset = "0x66C3C8")]
	private void <setRotate>b__118_0()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xFE1078", Offset = "0xFE1078", VA = "0xFE1078")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3D8", Offset = "0x66C3D8")]
	private void <setRotate>b__118_1()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xFE1128", Offset = "0xFE1128", VA = "0xFE1128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3E8", Offset = "0x66C3E8")]
	private void <setRotateLocal>b__119_0()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xFE1234", Offset = "0xFE1234", VA = "0xFE1234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3F8", Offset = "0x66C3F8")]
	private void <setRotateLocal>b__119_1()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xFE12E4", Offset = "0xFE12E4", VA = "0xFE12E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C408", Offset = "0x66C408")]
	private void <setScale>b__120_0()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xFE1324", Offset = "0xFE1324", VA = "0xFE1324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C418", Offset = "0x66C418")]
	private void <setScale>b__120_1()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xFE13D4", Offset = "0xFE13D4", VA = "0xFE13D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C428", Offset = "0x66C428")]
	private void <setGUIMove>b__121_0()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xFE16D8", Offset = "0xFE16D8", VA = "0xFE16D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C438", Offset = "0x66C438")]
	private void <setGUIMove>b__121_1()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xFE181C", Offset = "0xFE181C", VA = "0xFE181C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C448", Offset = "0x66C448")]
	private void <setGUIMoveMargin>b__122_0()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xFE1904", Offset = "0xFE1904", VA = "0xFE1904")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C458", Offset = "0x66C458")]
	private void <setGUIMoveMargin>b__122_1()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xFE1990", Offset = "0xFE1990", VA = "0xFE1990")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C468", Offset = "0x66C468")]
	private void <setGUIScale>b__123_0()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xFE1A6C", Offset = "0xFE1A6C", VA = "0xFE1A6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C478", Offset = "0x66C478")]
	private void <setGUIScale>b__123_1()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xFE1BA4", Offset = "0xFE1BA4", VA = "0xFE1BA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C488", Offset = "0x66C488")]
	private void <setGUIAlpha>b__124_0()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xFE1BE8", Offset = "0xFE1BE8", VA = "0xFE1BE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C498", Offset = "0x66C498")]
	private void <setGUIAlpha>b__124_1()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xFE1C4C", Offset = "0xFE1C4C", VA = "0xFE1C4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4A8", Offset = "0x66C4A8")]
	private void <setGUIRotate>b__125_0()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xFE1FAC", Offset = "0xFE1FAC", VA = "0xFE1FAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4B8", Offset = "0x66C4B8")]
	private void <setGUIRotate>b__125_1()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xFE2010", Offset = "0xFE2010", VA = "0xFE2010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4C8", Offset = "0x66C4C8")]
	private void <setDelayedSound>b__126_0()
	{
	}
}
[Token(Token = "0x20000E8")]
public class LTDescrOptional
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A04", Offset = "0x654A04")]
	private Transform <toTrans>k__BackingField;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A14", Offset = "0x654A14")]
	private Vector3 <point>k__BackingField;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A24", Offset = "0x654A24")]
	private Vector3 <axis>k__BackingField;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A34", Offset = "0x654A34")]
	private float <lastVal>k__BackingField;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A44", Offset = "0x654A44")]
	private Quaternion <origRotation>k__BackingField;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A54", Offset = "0x654A54")]
	private LTBezierPath <path>k__BackingField;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A64", Offset = "0x654A64")]
	private LTSpline <spline>k__BackingField;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int initFrameCount;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color color;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A74", Offset = "0x654A74")]
	private LTRect <ltRect>k__BackingField;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A84", Offset = "0x654A84")]
	private Action<float> <onUpdateFloat>k__BackingField;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654A94", Offset = "0x654A94")]
	private Action<float, float> <onUpdateFloatRatio>k__BackingField;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654AA4", Offset = "0x654AA4")]
	private Action<float, object> <onUpdateFloatObject>k__BackingField;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654AB4", Offset = "0x654AB4")]
	private Action<Vector2> <onUpdateVector2>k__BackingField;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654AC4", Offset = "0x654AC4")]
	private Action<Vector3> <onUpdateVector3>k__BackingField;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654AD4", Offset = "0x654AD4")]
	private Action<Vector3, object> <onUpdateVector3Object>k__BackingField;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654AE4", Offset = "0x654AE4")]
	private Action<Color> <onUpdateColor>k__BackingField;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654AF4", Offset = "0x654AF4")]
	private Action<Color, object> <onUpdateColorObject>k__BackingField;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B04", Offset = "0x654B04")]
	private Action <onComplete>k__BackingField;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B14", Offset = "0x654B14")]
	private Action<object> <onCompleteObject>k__BackingField;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B24", Offset = "0x654B24")]
	private object <onCompleteParam>k__BackingField;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B34", Offset = "0x654B34")]
	private object <onUpdateParam>k__BackingField;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B44", Offset = "0x654B44")]
	private Action <onStart>k__BackingField;

	[Token(Token = "0x17000085")]
	public Transform toTrans
	{
		[Token(Token = "0x600098B")]
		[Address(RVA = "0xFD0AA0", Offset = "0xFD0AA0", VA = "0xFD0AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4D8", Offset = "0x66C4D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600098C")]
		[Address(RVA = "0xFD3D88", Offset = "0xFD3D88", VA = "0xFD3D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4E8", Offset = "0x66C4E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public Vector3 point
	{
		[Token(Token = "0x600098D")]
		[Address(RVA = "0xFD7330", Offset = "0xFD7330", VA = "0xFD7330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4F8", Offset = "0x66C4F8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600098E")]
		[Address(RVA = "0xFDB94C", Offset = "0xFDB94C", VA = "0xFDB94C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C508", Offset = "0x66C508")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public Vector3 axis
	{
		[Token(Token = "0x600098F")]
		[Address(RVA = "0xFD733C", Offset = "0xFD733C", VA = "0xFD733C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C518", Offset = "0x66C518")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000990")]
		[Address(RVA = "0xFD4CEC", Offset = "0xFD4CEC", VA = "0xFD4CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C528", Offset = "0x66C528")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public float lastVal
	{
		[Token(Token = "0x6000991")]
		[Address(RVA = "0xFDD4D8", Offset = "0xFDD4D8", VA = "0xFDD4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C538", Offset = "0x66C538")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000992")]
		[Address(RVA = "0xFDD4EC", Offset = "0xFDD4EC", VA = "0xFDD4EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C548", Offset = "0x66C548")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public Quaternion origRotation
	{
		[Token(Token = "0x6000993")]
		[Address(RVA = "0xFDD4E0", Offset = "0xFDD4E0", VA = "0xFDD4E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C558", Offset = "0x66C558")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000994")]
		[Address(RVA = "0xFD2B7C", Offset = "0xFD2B7C", VA = "0xFD2B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C568", Offset = "0x66C568")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public LTBezierPath path
	{
		[Token(Token = "0x6000995")]
		[Address(RVA = "0xFD4694", Offset = "0xFD4694", VA = "0xFD4694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C578", Offset = "0x66C578")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000996")]
		[Address(RVA = "0xFDB670", Offset = "0xFDB670", VA = "0xFDB670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C588", Offset = "0x66C588")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public LTSpline spline
	{
		[Token(Token = "0x6000997")]
		[Address(RVA = "0xFD469C", Offset = "0xFD469C", VA = "0xFD469C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C598", Offset = "0x66C598")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000998")]
		[Address(RVA = "0xFDBC44", Offset = "0xFDBC44", VA = "0xFDBC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5A8", Offset = "0x66C5A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public LTRect ltRect
	{
		[Token(Token = "0x6000999")]
		[Address(RVA = "0xFD4BE8", Offset = "0xFD4BE8", VA = "0xFD4BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5B8", Offset = "0x66C5B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600099A")]
		[Address(RVA = "0xFDB74C", Offset = "0xFDB74C", VA = "0xFDB74C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5C8", Offset = "0x66C5C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public Action<float> onUpdateFloat
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0xFE2144", Offset = "0xFE2144", VA = "0xFE2144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5D8", Offset = "0x66C5D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600099C")]
		[Address(RVA = "0xFDB120", Offset = "0xFDB120", VA = "0xFDB120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5E8", Offset = "0x66C5E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public Action<float, float> onUpdateFloatRatio
	{
		[Token(Token = "0x600099D")]
		[Address(RVA = "0xFE214C", Offset = "0xFE214C", VA = "0xFE214C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5F8", Offset = "0x66C5F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600099E")]
		[Address(RVA = "0xFDB170", Offset = "0xFDB170", VA = "0xFDB170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C608", Offset = "0x66C608")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public Action<float, object> onUpdateFloatObject
	{
		[Token(Token = "0x600099F")]
		[Address(RVA = "0xFE2154", Offset = "0xFE2154", VA = "0xFE2154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C618", Offset = "0x66C618")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xFDB1C0", Offset = "0xFDB1C0", VA = "0xFDB1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C628", Offset = "0x66C628")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public Action<Vector2> onUpdateVector2
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xFE215C", Offset = "0xFE215C", VA = "0xFE215C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C638", Offset = "0x66C638")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xFDB210", Offset = "0xFDB210", VA = "0xFDB210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C648", Offset = "0x66C648")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public Action<Vector3> onUpdateVector3
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xFE2164", Offset = "0xFE2164", VA = "0xFE2164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C658", Offset = "0x66C658")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xFDB260", Offset = "0xFDB260", VA = "0xFDB260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C668", Offset = "0x66C668")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public Action<Vector3, object> onUpdateVector3Object
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xFE216C", Offset = "0xFE216C", VA = "0xFE216C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C678", Offset = "0x66C678")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xFDB468", Offset = "0xFDB468", VA = "0xFDB468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C688", Offset = "0x66C688")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public Action<Color> onUpdateColor
	{
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xFDF0AC", Offset = "0xFDF0AC", VA = "0xFDF0AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C698", Offset = "0x66C698")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xFDB2B0", Offset = "0xFDB2B0", VA = "0xFDB2B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6A8", Offset = "0x66C6A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public Action<Color, object> onUpdateColorObject
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xFDF0B4", Offset = "0xFDF0B4", VA = "0xFDF0B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6B8", Offset = "0x66C6B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xFDB300", Offset = "0xFDB300", VA = "0xFDB300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6C8", Offset = "0x66C6C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public Action onComplete
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xFD4BF8", Offset = "0xFD4BF8", VA = "0xFD4BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6D8", Offset = "0x66C6D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xFDAFCC", Offset = "0xFDAFCC", VA = "0xFDAFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6E8", Offset = "0x66C6E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public Action<object> onCompleteObject
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xFD4C00", Offset = "0xFD4C00", VA = "0xFD4C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6F8", Offset = "0x66C6F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xFDB01C", Offset = "0xFDB01C", VA = "0xFDB01C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C708", Offset = "0x66C708")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public object onCompleteParam
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xFD4BF0", Offset = "0xFD4BF0", VA = "0xFD4BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C718", Offset = "0x66C718")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xFDB088", Offset = "0xFDB088", VA = "0xFDB088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C728", Offset = "0x66C728")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public object onUpdateParam
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xFDF0BC", Offset = "0xFDF0BC", VA = "0xFDF0BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C738", Offset = "0x66C738")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xFDB3FC", Offset = "0xFDB3FC", VA = "0xFDB3FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C748", Offset = "0x66C748")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public Action onStart
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xFD4374", Offset = "0xFD4374", VA = "0xFD4374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C758", Offset = "0x66C758")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xFDBA4C", Offset = "0xFDBA4C", VA = "0xFDBA4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C768", Offset = "0x66C768")]
		set
		{
		}
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xFD1800", Offset = "0xFD1800", VA = "0xFD1800")]
	public void reset()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xFD4A4C", Offset = "0xFD4A4C", VA = "0xFD4A4C")]
	public void callOnUpdate(float val, float ratioPassed)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xFD15E4", Offset = "0xFD15E4", VA = "0xFD15E4")]
	public LTDescrOptional()
	{
	}
}
[Token(Token = "0x20000E9")]
public class LTSeq
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LTSeq previous;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LTSeq current;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LTDescr tween;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float totalDelay;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeScale;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int debugIter;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public uint counter;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool toggle;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint _id;

	[Token(Token = "0x1700009A")]
	public int id
	{
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xFE509C", Offset = "0xFE509C", VA = "0xFE509C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xFE50AC", Offset = "0xFE50AC", VA = "0xFE50AC")]
	public void reset()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xFE50BC", Offset = "0xFE50BC", VA = "0xFE50BC")]
	public void init(uint id, uint global_counter)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xFE50D4", Offset = "0xFE50D4", VA = "0xFE50D4")]
	private LTSeq addOn()
	{
		return null;
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xFE51D8", Offset = "0xFE51D8", VA = "0xFE51D8")]
	private float addPreviousDelays()
	{
		return default(float);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xFE5258", Offset = "0xFE5258", VA = "0xFE5258")]
	public LTSeq append(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xFE52B4", Offset = "0xFE52B4", VA = "0xFE52B4")]
	public LTSeq append(Action callback)
	{
		return null;
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xFE53C4", Offset = "0xFE53C4", VA = "0xFE53C4")]
	public LTSeq append(Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xFE547C", Offset = "0xFE547C", VA = "0xFE547C")]
	public LTSeq append(GameObject gameObject, Action callback)
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xFE5510", Offset = "0xFE5510", VA = "0xFE5510")]
	public LTSeq append(GameObject gameObject, Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xFE5338", Offset = "0xFE5338", VA = "0xFE5338")]
	public LTSeq append(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xFE55D8", Offset = "0xFE55D8", VA = "0xFE55D8")]
	public LTSeq insert(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xFE563C", Offset = "0xFE563C", VA = "0xFE563C")]
	public LTSeq setScale(float timeScale)
	{
		return null;
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xFE5668", Offset = "0xFE5668", VA = "0xFE5668")]
	private void setScaleRecursive(LTSeq seq, float timeScale, int count)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xFE575C", Offset = "0xFE575C", VA = "0xFE575C")]
	public LTSeq reverse()
	{
		return null;
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xFE5760", Offset = "0xFE5760", VA = "0xFE5760")]
	public LTSeq()
	{
	}
}
[Token(Token = "0x20000EA")]
public class PS4_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D6A8", Offset = "0x64D6A8")]
	private sealed class <LoadLevel>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PS4_LoadLevel <>4__this;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021A9")]
			[Address(RVA = "0x1592CFC", Offset = "0x1592CFC", VA = "0x1592CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x1592D6C", Offset = "0x1592D6C", VA = "0x1592D6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x1592818", Offset = "0x1592818", VA = "0x1592818")]
		[DebuggerHidden]
		public <LoadLevel>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x1592890", Offset = "0x1592890", VA = "0x1592890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1592894", Offset = "0x1592894", VA = "0x1592894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1592D04", Offset = "0x1592D04", VA = "0x1592D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PS4_LoadLevel _active;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color backgroundColor;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeOutTime;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fadeInTime;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float postLoadSettleTime;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AsyncOperation async;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	internal bool showGrid;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal Func<string, AsyncOperation, IEnumerator> loadSceneCoro;

	[Token(Token = "0x1700009B")]
	public static bool loading
	{
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x15923E4", Offset = "0x15923E4", VA = "0x15923E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009C")]
	public static float progress
	{
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x159247C", Offset = "0x159247C", VA = "0x159247C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x15925AC", Offset = "0x15925AC", VA = "0x15925AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x15925BC", Offset = "0x15925BC", VA = "0x15925BC")]
	public void Trigger()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x15926C8", Offset = "0x15926C8", VA = "0x15926C8")]
	public static void Begin(string levelName, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1592654", Offset = "0x1592654", VA = "0x1592654")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66C778", Offset = "0x66C778")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1592844", Offset = "0x1592844", VA = "0x1592844")]
	public PS4_LoadLevel()
	{
	}
}
[Token(Token = "0x20000EB")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x648C90", Offset = "0x648C90")]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x1700009D")]
	public static bool Initialized
	{
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x8CE6E8", Offset = "0x8CE6E8", VA = "0x8CE6E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x8CE6F0", Offset = "0x8CE6F0", VA = "0x8CE6F0")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20000EC")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B54", Offset = "0x654B54")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B64", Offset = "0x654B64")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B74", Offset = "0x654B74")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B84", Offset = "0x654B84")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654B94", Offset = "0x654B94")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654BA4", Offset = "0x654BA4")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654BB4", Offset = "0x654BB4")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654BC4", Offset = "0x654BC4")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654BD4", Offset = "0x654BD4")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654BE4", Offset = "0x654BE4")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654BF4", Offset = "0x654BF4")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654C04", Offset = "0x654C04")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654C14", Offset = "0x654C14")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x1700009E")]
	public static bool active
	{
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x8CE6F8", Offset = "0x8CE6F8", VA = "0x8CE6F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009F")]
	public static bool enabled
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x8CE768", Offset = "0x8CE768", VA = "0x8CE768")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x8CE804", Offset = "0x8CE804", VA = "0x8CE804")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public static SteamVR instance
	{
		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x8CE950", Offset = "0x8CE950", VA = "0x8CE950")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x8CEC8C", Offset = "0x8CEC8C", VA = "0x8CEC8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	public CVRSystem hmd
	{
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x8CF964", Offset = "0x8CF964", VA = "0x8CF964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7DC", Offset = "0x66C7DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x8CF96C", Offset = "0x8CF96C", VA = "0x8CF96C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7EC", Offset = "0x66C7EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x8CF974", Offset = "0x8CF974", VA = "0x8CF974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7FC", Offset = "0x66C7FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x8CF97C", Offset = "0x8CF97C", VA = "0x8CF97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C80C", Offset = "0x66C80C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public CVROverlay overlay
	{
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x8CF984", Offset = "0x8CF984", VA = "0x8CF984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C81C", Offset = "0x66C81C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x8CF98C", Offset = "0x8CF98C", VA = "0x8CF98C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C82C", Offset = "0x66C82C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public static bool initializing
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x8CF994", Offset = "0x8CF994", VA = "0x8CF994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C83C", Offset = "0x66C83C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x8CF9FC", Offset = "0x8CF9FC", VA = "0x8CF9FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C84C", Offset = "0x66C84C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public static bool calibrating
	{
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x8CFA6C", Offset = "0x8CFA6C", VA = "0x8CFA6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C85C", Offset = "0x66C85C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x8CFAD4", Offset = "0x8CFAD4", VA = "0x8CFAD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C86C", Offset = "0x66C86C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public static bool outOfRange
	{
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x8CFB44", Offset = "0x8CFB44", VA = "0x8CFB44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C87C", Offset = "0x66C87C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x8CFBAC", Offset = "0x8CFBAC", VA = "0x8CFBAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C88C", Offset = "0x66C88C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public float sceneWidth
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x8CFC1C", Offset = "0x8CFC1C", VA = "0x8CFC1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C89C", Offset = "0x66C89C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x8CFC24", Offset = "0x8CFC24", VA = "0x8CFC24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8AC", Offset = "0x66C8AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public float sceneHeight
	{
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x8CFC2C", Offset = "0x8CFC2C", VA = "0x8CFC2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8BC", Offset = "0x66C8BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x8CFC34", Offset = "0x8CFC34", VA = "0x8CFC34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8CC", Offset = "0x66C8CC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public float aspect
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x8CFC3C", Offset = "0x8CFC3C", VA = "0x8CFC3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8DC", Offset = "0x66C8DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x8CFC44", Offset = "0x8CFC44", VA = "0x8CFC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8EC", Offset = "0x66C8EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public float fieldOfView
	{
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x8CFC4C", Offset = "0x8CFC4C", VA = "0x8CFC4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8FC", Offset = "0x66C8FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x8CFC54", Offset = "0x8CFC54", VA = "0x8CFC54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C90C", Offset = "0x66C90C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x8CFC5C", Offset = "0x8CFC5C", VA = "0x8CFC5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C91C", Offset = "0x66C91C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x8CFC64", Offset = "0x8CFC64", VA = "0x8CFC64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C92C", Offset = "0x66C92C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x8CFC6C", Offset = "0x8CFC6C", VA = "0x8CFC6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C93C", Offset = "0x66C93C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x8CFC74", Offset = "0x8CFC74", VA = "0x8CFC74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C94C", Offset = "0x66C94C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x8CFC7C", Offset = "0x8CFC7C", VA = "0x8CFC7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C95C", Offset = "0x66C95C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x8CFC84", Offset = "0x8CFC84", VA = "0x8CFC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C96C", Offset = "0x66C96C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x8CFC8C", Offset = "0x8CFC8C", VA = "0x8CFC8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B0")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x8CFE10", Offset = "0x8CFE10", VA = "0x8CFE10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x8CFE1C", Offset = "0x8CFE1C", VA = "0x8CFE1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x8CFE28", Offset = "0x8CFE28", VA = "0x8CFE28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B3")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x8CFE88", Offset = "0x8CFE88", VA = "0x8CFE88")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x8CEA68", Offset = "0x8CEA68", VA = "0x8CEA68")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x8CECF8", Offset = "0x8CECF8", VA = "0x8CECF8")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x8CFE94", Offset = "0x8CFE94", VA = "0x8CFE94")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x8CFC98", Offset = "0x8CFC98", VA = "0x8CFC98")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x8CFE34", Offset = "0x8CFE34", VA = "0x8CFE34")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x8CFF98", Offset = "0x8CFF98", VA = "0x8CFF98")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x8CFFFC", Offset = "0x8CFFFC", VA = "0x8CFFFC")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x8D0060", Offset = "0x8D0060", VA = "0x8D0060")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x8D00C4", Offset = "0x8D00C4", VA = "0x8D00C4")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x8D0174", Offset = "0x8D0174", VA = "0x8D0174")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x8CEE4C", Offset = "0x8CEE4C", VA = "0x8CEE4C")]
	private SteamVR()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x8D05F8", Offset = "0x8D05F8", VA = "0x8D05F8", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x8D08D8", Offset = "0x8D08D8", VA = "0x8D08D8", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x8D0670", Offset = "0x8D0670", VA = "0x8D0670")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x8CE8A4", Offset = "0x8CE8A4", VA = "0x8CE8A4")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x20000ED")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648CA0", Offset = "0x648CA0")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654C34", Offset = "0x654C34")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Hashtable values;

	[Token(Token = "0x40008B9")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x40008BA")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x40008BB")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x40008BC")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x170000B4")]
	public Transform head
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x8D09C0", Offset = "0x8D09C0", VA = "0x8D09C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B5")]
	public Transform offset
	{
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x8D09C8", Offset = "0x8D09C8", VA = "0x8D09C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B6")]
	public Transform origin
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x8D09D0", Offset = "0x8D09D0", VA = "0x8D09D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B7")]
	public Camera camera
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x8D0A00", Offset = "0x8D0A00", VA = "0x8D0A00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C97C", Offset = "0x66C97C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x8D0A08", Offset = "0x8D0A08", VA = "0x8D0A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C98C", Offset = "0x66C98C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public Transform ears
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x8D0A10", Offset = "0x8D0A10", VA = "0x8D0A10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B9")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x8D0ABC", Offset = "0x8D0ABC", VA = "0x8D0ABC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x8D0AC4", Offset = "0x8D0AC4", VA = "0x8D0AC4")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public string baseName
	{
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x8D211C", Offset = "0x8D211C", VA = "0x8D211C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x8D0A18", Offset = "0x8D0A18", VA = "0x8D0A18")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x8D0ACC", Offset = "0x8D0ACC", VA = "0x8D0ACC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x8D0B34", Offset = "0x8D0B34", VA = "0x8D0B34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x8D19AC", Offset = "0x8D19AC", VA = "0x8D19AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x8D1A08", Offset = "0x8D1A08", VA = "0x8D1A08")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x8D0FB4", Offset = "0x8D0FB4", VA = "0x8D0FB4")]
	public void Expand()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x8D2228", Offset = "0x8D2228", VA = "0x8D2228")]
	public void Collapse()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x8D272C", Offset = "0x8D272C", VA = "0x8D272C")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x20000EE")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648D04", Offset = "0x648D04")]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x8D2734", Offset = "0x8D2734", VA = "0x8D2734")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x8D27D0", Offset = "0x8D27D0", VA = "0x8D27D0")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x20000EF")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648D14", Offset = "0x648D14")]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x8D27D8", Offset = "0x8D27D8", VA = "0x8D27D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x8D2874", Offset = "0x8D2874", VA = "0x8D2874")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x20000F0")]
public class SteamVR_Controller
{
	[Token(Token = "0x2000427")]
	public class ButtonMask
	{
		[Token(Token = "0x4001E61")]
		public const ulong System = 1uL;

		[Token(Token = "0x4001E62")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x4001E63")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x4001E64")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x4001E65")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x4001E66")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4001E67")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4001E68")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4001E69")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4001E6A")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x8D3034", Offset = "0x8D3034", VA = "0x8D3034")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x2000428")]
	public class Device
	{
		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x665390", Offset = "0x665390")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6653A0", Offset = "0x6653A0")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x1700025C")]
		public uint index
		{
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x8D3044", Offset = "0x8D3044", VA = "0x8D3044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673CF4", Offset = "0x673CF4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x8D303C", Offset = "0x8D303C", VA = "0x8D303C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673D04", Offset = "0x673D04")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public bool valid
		{
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x8D304C", Offset = "0x8D304C", VA = "0x8D304C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673D14", Offset = "0x673D14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x8D3054", Offset = "0x8D3054", VA = "0x8D3054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673D24", Offset = "0x673D24")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public bool connected
		{
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x8D3008", Offset = "0x8D3008", VA = "0x8D3008")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025F")]
		public bool hasTracking
		{
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x8D3060", Offset = "0x8D3060", VA = "0x8D3060")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000260")]
		public bool outOfRange
		{
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x8D3084", Offset = "0x8D3084", VA = "0x8D3084")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000261")]
		public bool calibrating
		{
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x8D30BC", Offset = "0x8D30BC", VA = "0x8D30BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000262")]
		public bool uninitialized
		{
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0x8D30EC", Offset = "0x8D30EC", VA = "0x8D30EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000263")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x8D2FA8", Offset = "0x8D2FA8", VA = "0x8D2FA8")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000264")]
		public Vector3 velocity
		{
			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x8D3118", Offset = "0x8D3118", VA = "0x8D3118")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000265")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x8D3168", Offset = "0x8D3168", VA = "0x8D3168")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x8D2A10", Offset = "0x8D2A10", VA = "0x8D2A10")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x8D31BC", Offset = "0x8D31BC", VA = "0x8D31BC")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x8D3200", Offset = "0x8D3200", VA = "0x8D3200")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x8D3244", Offset = "0x8D3244", VA = "0x8D3244")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x8D2A8C", Offset = "0x8D2A8C", VA = "0x8D2A8C")]
		public void Update()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x8D3374", Offset = "0x8D3374", VA = "0x8D3374")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x8D33A4", Offset = "0x8D33A4", VA = "0x8D33A4")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x8D33E8", Offset = "0x8D33E8", VA = "0x8D33E8")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x8D342C", Offset = "0x8D342C", VA = "0x8D342C")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x8D3464", Offset = "0x8D3464", VA = "0x8D3464")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x8D34B0", Offset = "0x8D34B0", VA = "0x8D34B0")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x8D34FC", Offset = "0x8D34FC", VA = "0x8D34FC")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x8D352C", Offset = "0x8D352C", VA = "0x8D352C")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x8D3570", Offset = "0x8D3570", VA = "0x8D3570")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x8D35B4", Offset = "0x8D35B4", VA = "0x8D35B4")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x8D35EC", Offset = "0x8D35EC", VA = "0x8D35EC")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x8D3638", Offset = "0x8D3638", VA = "0x8D3638")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x8D3684", Offset = "0x8D3684", VA = "0x8D3684")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x8D3760", Offset = "0x8D3760", VA = "0x8D3760")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x8D3274", Offset = "0x8D3274", VA = "0x8D3274")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x8D37FC", Offset = "0x8D37FC", VA = "0x8D37FC")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x8D3820", Offset = "0x8D3820", VA = "0x8D3820")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x8D385C", Offset = "0x8D385C", VA = "0x8D385C")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000429")]
	public enum DeviceRelation
	{
		[Token(Token = "0x4001E76")]
		First,
		[Token(Token = "0x4001E77")]
		Leftmost,
		[Token(Token = "0x4001E78")]
		Rightmost,
		[Token(Token = "0x4001E79")]
		FarthestLeft,
		[Token(Token = "0x4001E7A")]
		FarthestRight
	}

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x8D287C", Offset = "0x8D287C", VA = "0x8D287C")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x8D2A48", Offset = "0x8D2A48", VA = "0x8D2A48")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x8D2C38", Offset = "0x8D2C38", VA = "0x8D2C38")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x8D302C", Offset = "0x8D302C", VA = "0x8D302C")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x20000F1")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654C54", Offset = "0x654C54")]
	public GameObject[] objects;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654C8C", Offset = "0x654C8C")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string hiddenPostfix;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] labels;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x8D3898", Offset = "0x8D3898", VA = "0x8D3898")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x8D39C8", Offset = "0x8D39C8", VA = "0x8D39C8")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x8D3B40", Offset = "0x8D3B40", VA = "0x8D3B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x8D3B44", Offset = "0x8D3B44", VA = "0x8D3B44")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x8D3E84", Offset = "0x8D3E84", VA = "0x8D3E84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x8D45C0", Offset = "0x8D45C0", VA = "0x8D45C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x8D4644", Offset = "0x8D4644", VA = "0x8D4644")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x8D4AB8", Offset = "0x8D4AB8", VA = "0x8D4AB8")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x8D4984", Offset = "0x8D4984", VA = "0x8D4984")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x8D4C88", Offset = "0x8D4C88", VA = "0x8D4C88")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x8D4FA0", Offset = "0x8D4FA0", VA = "0x8D4FA0")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x8D444C", Offset = "0x8D444C", VA = "0x8D444C")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x8D40E8", Offset = "0x8D40E8", VA = "0x8D40E8")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x20000F2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648D24", Offset = "0x648D24")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x8D50F0", Offset = "0x8D50F0", VA = "0x8D50F0")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x8D5290", Offset = "0x8D5290", VA = "0x8D5290")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x8D543C", Offset = "0x8D543C", VA = "0x8D543C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x8D5514", Offset = "0x8D5514", VA = "0x8D5514")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x20000F3")]
public static class SteamVR_Events
{
	[Token(Token = "0x200042A")]
	public abstract class Action
	{
		[Token(Token = "0x17000266")]
		public bool enabled
		{
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x8D45B0", Offset = "0x8D45B0", VA = "0x8D45B0")]
			set
			{
			}
		}

		[Token(Token = "0x60021D0")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x8D60C8", Offset = "0x8D60C8", VA = "0x8D60C8")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200042B")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x8D56FC", Offset = "0x8D56FC", VA = "0x8D56FC")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x8D60D0", Offset = "0x8D60D0", VA = "0x8D60D0", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200042C")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x60021D5")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x60021D6")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200042D")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x60021D7")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x60021D8")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200042E")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x60021D9")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60021DA")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x200042F")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x8D5434", Offset = "0x8D5434", VA = "0x8D5434")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x8D550C", Offset = "0x8D550C", VA = "0x8D550C")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x8D6134", Offset = "0x8D6134", VA = "0x8D6134")]
		public void Send()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x8D60C0", Offset = "0x8D60C0", VA = "0x8D60C0")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000430")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x60021DF")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x60021E0")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x60021E1")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x60021E2")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000431")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x60021E3")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x60021E4")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x60021E5")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x60021E6")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000432")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x60021E7")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60021E8")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60021E9")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x60021EA")]
		public Event()
		{
		}
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x8D551C", Offset = "0x8D551C", VA = "0x8D551C")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x8D3D34", Offset = "0x8D3D34", VA = "0x8D3D34")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x8D55C0", Offset = "0x8D55C0", VA = "0x8D55C0")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x8D5664", Offset = "0x8D5664", VA = "0x8D5664")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x8D5734", Offset = "0x8D5734", VA = "0x8D5734")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x8D57D8", Offset = "0x8D57D8", VA = "0x8D57D8")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x8D3C90", Offset = "0x8D3C90", VA = "0x8D3C90")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x8D587C", Offset = "0x8D587C", VA = "0x8D587C")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x8D5920", Offset = "0x8D5920", VA = "0x8D5920")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x8D59C4", Offset = "0x8D59C4", VA = "0x8D59C4")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x8D5A68", Offset = "0x8D5A68", VA = "0x8D5A68")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x8D5B0C", Offset = "0x8D5B0C", VA = "0x8D5B0C")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x8D5BA4", Offset = "0x8D5BA4", VA = "0x8D5BA4")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x8D5C48", Offset = "0x8D5C48", VA = "0x8D5C48")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x8D5CEC", Offset = "0x8D5CEC", VA = "0x8D5CEC")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x8D3DD8", Offset = "0x8D3DD8", VA = "0x8D3DD8")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x20000F4")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000433")]
	public struct Config
	{
		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string configPath;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform target;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject clipQuad;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material clipMaterial;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material colorMat;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material alphaMat;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera[] cameras;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] cameraRects;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sceneResolutionScale;

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x8D613C", Offset = "0x8D613C", VA = "0x8D613C")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x8D6B10", Offset = "0x8D6B10", VA = "0x8D6B10")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x8D6B14", Offset = "0x8D6B14", VA = "0x8D6B14")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x8D7374", Offset = "0x8D7374", VA = "0x8D7374")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x8D767C", Offset = "0x8D767C", VA = "0x8D767C")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x8D8028", Offset = "0x8D8028", VA = "0x8D8028")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x8D8184", Offset = "0x8D8184", VA = "0x8D8184")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x8D8188", Offset = "0x8D8188", VA = "0x8D8188")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x8D8448", Offset = "0x8D8448", VA = "0x8D8448")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x8D85E8", Offset = "0x8D85E8", VA = "0x8D85E8")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x20000F5")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x8D85F0", Offset = "0x8D85F0", VA = "0x8D85F0")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x8D86BC", Offset = "0x8D86BC", VA = "0x8D86BC")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x8D8784", Offset = "0x8D8784", VA = "0x8D8784")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x8D87EC", Offset = "0x8D87EC", VA = "0x8D87EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x8D89BC", Offset = "0x8D89BC", VA = "0x8D89BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x8D8A84", Offset = "0x8D8A84", VA = "0x8D8A84")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x8D8E38", Offset = "0x8D8E38", VA = "0x8D8E38")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x20000F6")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648D88", Offset = "0x648D88")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648D88", Offset = "0x648D88")]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x8D8F70", Offset = "0x8D8F70", VA = "0x8D8F70")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x8D9934", Offset = "0x8D9934", VA = "0x8D9934")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x8D9AFC", Offset = "0x8D9AFC", VA = "0x8D9AFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x8D9BF4", Offset = "0x8D9BF4", VA = "0x8D9BF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x8D9CEC", Offset = "0x8D9CEC", VA = "0x8D9CEC")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648E18", Offset = "0x648E18")]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x8D9D0C", Offset = "0x8D9D0C", VA = "0x8D9D0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x8D9DA8", Offset = "0x8D9DA8", VA = "0x8D9DA8")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x20000F8")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x654CC4", Offset = "0x654CC4")]
	public Transform startXform;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x654CD4", Offset = "0x654CD4")]
	public Transform jointXform;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x654CE4", Offset = "0x654CE4")]
	public Transform endXform;

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x8D9DB0", Offset = "0x8D9DB0", VA = "0x8D9DB0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x8DAA70", Offset = "0x8DAA70", VA = "0x8DAA70")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x8DAF7C", Offset = "0x8DAF7C", VA = "0x8DAF7C")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x20000F9")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D6B8", Offset = "0x64D6B8")]
	private sealed class <LoadLevel>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x17000267")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x8DCCF0", Offset = "0x8DCCF0", VA = "0x8DCCF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x8DCD60", Offset = "0x8DCD60", VA = "0x8DCD60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x8DBEFC", Offset = "0x8DBEFC", VA = "0x8DBEFC")]
		[DebuggerHidden]
		public <LoadLevel>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x8DC004", Offset = "0x8DC004", VA = "0x8DC004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x8DC008", Offset = "0x8DC008", VA = "0x8DC008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x8DCCF8", Offset = "0x8DCCF8", VA = "0x8DCCF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	internal Func<string, AsyncOperation, IEnumerator> loadSceneCoro;

	[Token(Token = "0x170000BB")]
	public static bool loading
	{
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x8DAF8C", Offset = "0x8DAF8C", VA = "0x8DAF8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BC")]
	public static float progress
	{
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x8DB024", Offset = "0x8DB024", VA = "0x8DB024")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BD")]
	public static Texture progressTexture
	{
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x8DB154", Offset = "0x8DB154", VA = "0x8DB154")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x8DB230", Offset = "0x8DB230", VA = "0x8DB230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x8DB240", Offset = "0x8DB240", VA = "0x8DB240")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x8DB34C", Offset = "0x8DB34C", VA = "0x8DB34C")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x8DB4C0", Offset = "0x8DB4C0", VA = "0x8DB4C0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x8DBD94", Offset = "0x8DBD94", VA = "0x8DBD94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x8DB2D8", Offset = "0x8DB2D8", VA = "0x8DB2D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66C99C", Offset = "0x66C99C")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x8DB944", Offset = "0x8DB944", VA = "0x8DB944")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x8DBFA0", Offset = "0x8DBFA0", VA = "0x8DBFA0")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x20000FA")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654CF4", Offset = "0x654CF4")]
	private float <scale>k__BackingField;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x170000BE")]
	public RenderTexture texture
	{
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x8DCD68", Offset = "0x8DCD68", VA = "0x8DCD68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BF")]
	public float scale
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x8DCE38", Offset = "0x8DCE38", VA = "0x8DCE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA00", Offset = "0x66CA00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x8DCE40", Offset = "0x8DCE40", VA = "0x8DCE40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA10", Offset = "0x66CA10")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x8DCE48", Offset = "0x8DCE48", VA = "0x8DCE48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x8DCFD0", Offset = "0x8DCFD0", VA = "0x8DCFD0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x8DDFE0", Offset = "0x8DDFE0", VA = "0x8DDFE0")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x8DDEB4", Offset = "0x8DDEB4", VA = "0x8DDEB4")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x8DE404", Offset = "0x8DE404", VA = "0x8DE404")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x8DDDA0", Offset = "0x8DDDA0", VA = "0x8DDDA0")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x8DE39C", Offset = "0x8DE39C", VA = "0x8DE39C")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x8DE3D4", Offset = "0x8DE3D4", VA = "0x8DE3D4")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x8DE5D4", Offset = "0x8DE5D4", VA = "0x8DE5D4")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x20000FB")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x2000435")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654D04", Offset = "0x654D04")]
	public float scale;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654D3C", Offset = "0x654D3C")]
	public float distance;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654D74", Offset = "0x654D74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x654D74", Offset = "0x654D74")]
	public float alpha;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654DC8", Offset = "0x654DC8")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x170000C0")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x8D8DE8", Offset = "0x8D8DE8", VA = "0x8D8DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA20", Offset = "0x66CA20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x8DE628", Offset = "0x8DE628", VA = "0x8DE628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA30", Offset = "0x66CA30")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public static string key
	{
		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x8DBF28", Offset = "0x8DBF28", VA = "0x8DBF28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x8DE67C", Offset = "0x8DE67C", VA = "0x8DE67C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x8DE7D8", Offset = "0x8DE7D8", VA = "0x8DE7D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x8DE894", Offset = "0x8DE894", VA = "0x8DE894")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x8DED80", Offset = "0x8DED80", VA = "0x8DED80")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x8DEE8C", Offset = "0x8DEE8C", VA = "0x8DEE8C")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x8DF074", Offset = "0x8DF074", VA = "0x8DF074")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x20000FC")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648E28", Offset = "0x648E28")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x648E28", Offset = "0x648E28")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	public enum Size
	{
		[Token(Token = "0x4001EA2")]
		Calibrated,
		[Token(Token = "0x4001EA3")]
		_400x300,
		[Token(Token = "0x4001EA4")]
		_300x225,
		[Token(Token = "0x4001EA5")]
		_200x150
	}

	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D6C8", Offset = "0x64D6C8")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x17000269")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0x887D30", Offset = "0x887D30", VA = "0x887D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021F6")]
			[Address(RVA = "0x887DA0", Offset = "0x887DA0", VA = "0x887DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x887BD8", Offset = "0x887BD8", VA = "0x887BD8")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x887C04", Offset = "0x887C04", VA = "0x887C04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x887C08", Offset = "0x887C08", VA = "0x887C08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x887D38", Offset = "0x887D38", VA = "0x887D38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x654DD8", Offset = "0x654DD8")]
	public Vector3[] vertices;

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x8DF14C", Offset = "0x8DF14C", VA = "0x8DF14C")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x8DF4F0", Offset = "0x8DF4F0", VA = "0x8DF4F0")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x8E0084", Offset = "0x8E0084", VA = "0x8E0084")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x8E0380", Offset = "0x8E0380", VA = "0x8E0380")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x8E0094", Offset = "0x8E0094", VA = "0x8E0094")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x8E0390", Offset = "0x8E0390", VA = "0x8E0390")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x8E0460", Offset = "0x8E0460", VA = "0x8E0460")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CA40", Offset = "0x66CA40")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x8E04D4", Offset = "0x8E04D4", VA = "0x8E04D4")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x20000FD")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D6D8", Offset = "0x64D6D8")]
	private sealed class <RenderLoop>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x1700026B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x88B61C", Offset = "0x88B61C", VA = "0x88B61C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x88B68C", Offset = "0x88B68C", VA = "0x88B68C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x888B5C", Offset = "0x888B5C", VA = "0x888B5C")]
		[DebuggerHidden]
		public <RenderLoop>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x88B484", Offset = "0x88B484", VA = "0x88B484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x88B488", Offset = "0x88B488", VA = "0x88B488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x88B624", Offset = "0x88B624", VA = "0x88B624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654DE8", Offset = "0x654DE8")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654DF8", Offset = "0x654DF8")]
	private static bool <HasInputFocus>k__BackingField;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x170000C2")]
	public static EVREye eye
	{
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x887DA8", Offset = "0x887DA8", VA = "0x887DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAA4", Offset = "0x66CAA4")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x887E10", Offset = "0x887E10", VA = "0x887E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAB4", Offset = "0x66CAB4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x887E7C", Offset = "0x887E7C", VA = "0x887E7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x8888F8", Offset = "0x8888F8", VA = "0x8888F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x888960", Offset = "0x888960", VA = "0x888960")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public static bool HasInputFocus
	{
		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x888A10", Offset = "0x888A10", VA = "0x888A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAC4", Offset = "0x66CAC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x888A78", Offset = "0x888A78", VA = "0x888A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAD4", Offset = "0x66CAD4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x888028", Offset = "0x888028", VA = "0x888028")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x888090", Offset = "0x888090", VA = "0x888090")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x888120", Offset = "0x888120", VA = "0x888120")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x8884BC", Offset = "0x8884BC", VA = "0x8884BC")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x8887D4", Offset = "0x8887D4", VA = "0x8887D4")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x8881C8", Offset = "0x8881C8", VA = "0x8881C8")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x8885C8", Offset = "0x8885C8", VA = "0x8885C8")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x888878", Offset = "0x888878", VA = "0x888878")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x888AE8", Offset = "0x888AE8", VA = "0x888AE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CAE4", Offset = "0x66CAE4")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x888B88", Offset = "0x888B88", VA = "0x888B88")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x888D1C", Offset = "0x888D1C", VA = "0x888D1C")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x888DE4", Offset = "0x888DE4", VA = "0x888DE4")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x888DEC", Offset = "0x888DEC", VA = "0x888DEC")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x888F54", Offset = "0x888F54", VA = "0x888F54")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x88A7E0", Offset = "0x88A7E0", VA = "0x88A7E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x88AA90", Offset = "0x88AA90", VA = "0x88AA90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x88AC64", Offset = "0x88AC64", VA = "0x88AC64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x88AE14", Offset = "0x88AE14", VA = "0x88AE14")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x88AF18", Offset = "0x88AF18", VA = "0x88AF18")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x88AF1C", Offset = "0x88AF1C", VA = "0x88AF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x88B364", Offset = "0x88B364", VA = "0x88B364")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x20000FE")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648EB8", Offset = "0x648EB8")]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x2000439")]
	public class RenderModel
	{
		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6653B0", Offset = "0x6653B0")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6653C0", Offset = "0x6653C0")]
		private Material <material>k__BackingField;

		[Token(Token = "0x1700026D")]
		public Mesh mesh
		{
			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x88D178", Offset = "0x88D178", VA = "0x88D178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673E24", Offset = "0x673E24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x88F7B8", Offset = "0x88F7B8", VA = "0x88F7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673E34", Offset = "0x673E34")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public Material material
		{
			[Token(Token = "0x6002200")]
			[Address(RVA = "0x88DE94", Offset = "0x88DE94", VA = "0x88DE94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673E44", Offset = "0x673E44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002201")]
			[Address(RVA = "0x88F7C0", Offset = "0x88F7C0", VA = "0x88F7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673E54", Offset = "0x673E54")]
			private set
			{
			}
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x88E2F0", Offset = "0x88E2F0", VA = "0x88E2F0")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x200043A")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x1700026F")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x6002202")]
			[Address(RVA = "0x88CA68", Offset = "0x88CA68", VA = "0x88CA68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x88F7C8", Offset = "0x88F7C8", VA = "0x88F7C8", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x88C150", Offset = "0x88C150", VA = "0x88C150")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D6E8", Offset = "0x64D6E8")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x17000270")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002209")]
			[Address(RVA = "0x88F740", Offset = "0x88F740", VA = "0x88F740", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600220B")]
			[Address(RVA = "0x88F7B0", Offset = "0x88F7B0", VA = "0x88F7B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x88BAD8", Offset = "0x88BAD8", VA = "0x88BAD8")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x88ECC8", Offset = "0x88ECC8", VA = "0x88ECC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x88EDA4", Offset = "0x88EDA4", VA = "0x88EDA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x88ECE4", Offset = "0x88ECE4", VA = "0x88ECE4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x88F748", Offset = "0x88F748", VA = "0x88F748", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D6F8", Offset = "0x64D6F8")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x17000272")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600220F")]
			[Address(RVA = "0x88EC50", Offset = "0x88EC50", VA = "0x88EC50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002211")]
			[Address(RVA = "0x88ECC0", Offset = "0x88ECC0", VA = "0x88ECC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x88E328", Offset = "0x88E328", VA = "0x88E328")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x88EAB4", Offset = "0x88EAB4", VA = "0x88EAB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x88EAB8", Offset = "0x88EAB8", VA = "0x88EAB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x88EC58", Offset = "0x88EC58", VA = "0x88EC58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x400095A")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654E08", Offset = "0x654E08")]
	public string modelOverride;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654E40", Offset = "0x654E40")]
	public Shader shader;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654E78", Offset = "0x654E78")]
	public bool verbose;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654EB0", Offset = "0x654EB0")]
	public bool createComponents;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654EE8", Offset = "0x654EE8")]
	public bool updateDynamically;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x4000961")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654F20", Offset = "0x654F20")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Hashtable models;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Hashtable materials;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x170000C6")]
	public string renderModelName
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x88B694", Offset = "0x88B694", VA = "0x88B694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB48", Offset = "0x66CB48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x88B69C", Offset = "0x88B69C", VA = "0x88B69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB58", Offset = "0x66CB58")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x88B6A4", Offset = "0x88B6A4", VA = "0x88B6A4")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x88B8D0", Offset = "0x88B8D0", VA = "0x88B8D0")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x88BA28", Offset = "0x88BA28", VA = "0x88BA28")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x88B714", Offset = "0x88B714", VA = "0x88B714")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x88BA40", Offset = "0x88BA40", VA = "0x88BA40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CB68", Offset = "0x66CB68")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x88BB04", Offset = "0x88BB04", VA = "0x88BB04")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x88D180", Offset = "0x88D180", VA = "0x88D180")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x88E27C", Offset = "0x88E27C", VA = "0x88E27C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CBCC", Offset = "0x66CBCC")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x88E354", Offset = "0x88E354", VA = "0x88E354")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x88C004", Offset = "0x88C004", VA = "0x88C004")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x88C158", Offset = "0x88C158", VA = "0x88C158")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x88E3FC", Offset = "0x88E3FC", VA = "0x88E3FC")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x88E548", Offset = "0x88E548", VA = "0x88E548")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x88E684", Offset = "0x88E684", VA = "0x88E684")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x88E6FC", Offset = "0x88E6FC", VA = "0x88E6FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x88CBC8", Offset = "0x88CBC8", VA = "0x88CBC8")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x88E99C", Offset = "0x88E99C", VA = "0x88E99C")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x88DE9C", Offset = "0x88DE9C", VA = "0x88DE9C")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x88DEA8", Offset = "0x88DEA8", VA = "0x88DEA8")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x88E0A4", Offset = "0x88E0A4", VA = "0x88E0A4")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x20000FF")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x200043D")]
	public enum CellSize
	{
		[Token(Token = "0x4001EBD")]
		x1024,
		[Token(Token = "0x4001EBE")]
		x64,
		[Token(Token = "0x4001EBF")]
		x32,
		[Token(Token = "0x4001EC0")]
		x16,
		[Token(Token = "0x4001EC1")]
		x8
	}

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x88F840", Offset = "0x88F840", VA = "0x88F840")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x88F894", Offset = "0x88F894", VA = "0x88F894")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x88F8F0", Offset = "0x88F8F0", VA = "0x88F8F0")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x88FDC8", Offset = "0x88FDC8", VA = "0x88FDC8")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x88FE40", Offset = "0x88FE40", VA = "0x88FE40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x88FE54", Offset = "0x88FE54", VA = "0x88FE54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x88FE58", Offset = "0x88FE58", VA = "0x88FE58")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x2000100")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648EC8", Offset = "0x648EC8")]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x88FE6C", Offset = "0x88FE6C", VA = "0x88FE6C")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x890304", Offset = "0x890304", VA = "0x890304")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x890394", Offset = "0x890394", VA = "0x890394")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x2000101")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648ED8", Offset = "0x648ED8")]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x89039C", Offset = "0x89039C", VA = "0x89039C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x890438", Offset = "0x890438", VA = "0x890438")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x2000102")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x890440", Offset = "0x890440", VA = "0x890440")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x890B4C", Offset = "0x890B4C", VA = "0x890B4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x890C14", Offset = "0x890C14", VA = "0x890C14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x890608", Offset = "0x890608", VA = "0x890608")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x890CDC", Offset = "0x890CDC", VA = "0x890CDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x89162C", Offset = "0x89162C", VA = "0x89162C")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x2000103")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x200043E")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6653D0", Offset = "0x6653D0")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6653E0", Offset = "0x6653E0")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x17000274")]
		public bool undistorted
		{
			[Token(Token = "0x6002213")]
			[Address(RVA = "0x891E78", Offset = "0x891E78", VA = "0x891E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673F04", Offset = "0x673F04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002214")]
			[Address(RVA = "0x891E6C", Offset = "0x891E6C", VA = "0x891E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673F14", Offset = "0x673F14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public uint deviceIndex
		{
			[Token(Token = "0x6002215")]
			[Address(RVA = "0x891E80", Offset = "0x891E80", VA = "0x891E80")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000276")]
		public bool hasCamera
		{
			[Token(Token = "0x6002216")]
			[Address(RVA = "0x891EAC", Offset = "0x891EAC", VA = "0x891EAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public bool hasTracking
		{
			[Token(Token = "0x6002217")]
			[Address(RVA = "0x891ED8", Offset = "0x891ED8", VA = "0x891ED8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000278")]
		public uint frameId
		{
			[Token(Token = "0x6002218")]
			[Address(RVA = "0x8922AC", Offset = "0x8922AC", VA = "0x8922AC")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000279")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x6002219")]
			[Address(RVA = "0x8922D0", Offset = "0x8922D0", VA = "0x8922D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673F24", Offset = "0x673F24")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x600221A")]
			[Address(RVA = "0x8922DC", Offset = "0x8922DC", VA = "0x8922DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673F34", Offset = "0x673F34")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x600221B")]
			[Address(RVA = "0x8922E8", Offset = "0x8922E8", VA = "0x8922E8")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x1700027B")]
		public Texture2D texture
		{
			[Token(Token = "0x600221C")]
			[Address(RVA = "0x8922F0", Offset = "0x8922F0", VA = "0x8922F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x600221D")]
			[Address(RVA = "0x892314", Offset = "0x892314", VA = "0x892314")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x1700027D")]
		public Vector3 velocity
		{
			[Token(Token = "0x600221E")]
			[Address(RVA = "0x892370", Offset = "0x892370", VA = "0x892370")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700027E")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x600221F")]
			[Address(RVA = "0x8923C0", Offset = "0x8923C0", VA = "0x8923C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x8918D4", Offset = "0x8918D4", VA = "0x8918D4")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x892414", Offset = "0x892414", VA = "0x892414")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x892444", Offset = "0x892444", VA = "0x892444")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x892470", Offset = "0x892470", VA = "0x892470")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x891EFC", Offset = "0x891EFC", VA = "0x891EFC")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x200043F")]
	private class VideoStream
	{
		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6653F0", Offset = "0x6653F0")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x1700027F")]
		public uint deviceIndex
		{
			[Token(Token = "0x6002225")]
			[Address(RVA = "0x891D10", Offset = "0x891D10", VA = "0x891D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673F44", Offset = "0x673F44")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002226")]
			[Address(RVA = "0x891D08", Offset = "0x891D08", VA = "0x891D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x673F54", Offset = "0x673F54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public ulong handle
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0x891D18", Offset = "0x891D18", VA = "0x891D18")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000281")]
		public bool hasCamera
		{
			[Token(Token = "0x6002228")]
			[Address(RVA = "0x891D20", Offset = "0x891D20", VA = "0x891D20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x891C5C", Offset = "0x891C5C", VA = "0x891C5C")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x891D28", Offset = "0x891D28", VA = "0x891D28")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x891DC8", Offset = "0x891DC8", VA = "0x891DC8")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x891734", Offset = "0x891734", VA = "0x891734")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x891924", Offset = "0x891924", VA = "0x891924")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x891AC4", Offset = "0x891AC4", VA = "0x891AC4")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x891AD8", Offset = "0x891AD8", VA = "0x891AD8")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x891D00", Offset = "0x891D00", VA = "0x891D00")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x2000104")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x2000440")]
	public enum EIndex
	{
		[Token(Token = "0x4001ECE")]
		None = -1,
		[Token(Token = "0x4001ECF")]
		Hmd,
		[Token(Token = "0x4001ED0")]
		Device1,
		[Token(Token = "0x4001ED1")]
		Device2,
		[Token(Token = "0x4001ED2")]
		Device3,
		[Token(Token = "0x4001ED3")]
		Device4,
		[Token(Token = "0x4001ED4")]
		Device5,
		[Token(Token = "0x4001ED5")]
		Device6,
		[Token(Token = "0x4001ED6")]
		Device7,
		[Token(Token = "0x4001ED7")]
		Device8,
		[Token(Token = "0x4001ED8")]
		Device9,
		[Token(Token = "0x4001ED9")]
		Device10,
		[Token(Token = "0x4001EDA")]
		Device11,
		[Token(Token = "0x4001EDB")]
		Device12,
		[Token(Token = "0x4001EDC")]
		Device13,
		[Token(Token = "0x4001EDD")]
		Device14,
		[Token(Token = "0x4001EDE")]
		Device15
	}

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654F30", Offset = "0x654F30")]
	public Transform origin;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654F68", Offset = "0x654F68")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x170000C7")]
	public bool isValid
	{
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x892524", Offset = "0x892524", VA = "0x892524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CC30", Offset = "0x66CC30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x89252C", Offset = "0x89252C", VA = "0x89252C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CC40", Offset = "0x66CC40")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x892538", Offset = "0x892538", VA = "0x892538")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x892874", Offset = "0x892874", VA = "0x892874")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x892924", Offset = "0x892924", VA = "0x892924")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x8929F8", Offset = "0x8929F8", VA = "0x8929F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x892A38", Offset = "0x892A38", VA = "0x892A38")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x2000105")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648EE8", Offset = "0x648EE8")]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x892B20", Offset = "0x892B20", VA = "0x892B20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x892BBC", Offset = "0x892BBC", VA = "0x892BBC")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x2000106")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x2000441")]
	public struct RigidTransform
	{
		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x17000282")]
		public static RigidTransform identity
		{
			[Token(Token = "0x600222B")]
			[Address(RVA = "0x893CE0", Offset = "0x893CE0", VA = "0x893CE0")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x893DB0", Offset = "0x893DB0", VA = "0x893DB0")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x6E7DB0", Offset = "0x6E7DB0", VA = "0x6E7DB0")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x6E7DC4", Offset = "0x6E7DC4", VA = "0x6E7DC4")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x6E7DCC", Offset = "0x6E7DCC", VA = "0x6E7DCC")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x6E7DD4", Offset = "0x6E7DD4", VA = "0x6E7DD4")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x6E7E10", Offset = "0x6E7E10", VA = "0x6E7E10")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x6E7E54", Offset = "0x6E7E54", VA = "0x6E7E54")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x6E7E5C", Offset = "0x6E7E5C", VA = "0x6E7E5C")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x6E7E64", Offset = "0x6E7E64", VA = "0x6E7E64", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x6E7E6C", Offset = "0x6E7E6C", VA = "0x6E7E6C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x894A0C", Offset = "0x894A0C", VA = "0x894A0C")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x894B44", Offset = "0x894B44", VA = "0x894B44")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x894C7C", Offset = "0x894C7C", VA = "0x894C7C")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x6E7EA8", Offset = "0x6E7EA8", VA = "0x6E7EA8")]
		public void Inverse()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x6E7EB0", Offset = "0x6E7EB0", VA = "0x6E7EB0")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x6E7EB8", Offset = "0x6E7EB8", VA = "0x6E7EB8")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x6E7F00", Offset = "0x6E7F00", VA = "0x6E7F00")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x6E7F08", Offset = "0x6E7F08", VA = "0x6E7F08")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x8952A8", Offset = "0x8952A8", VA = "0x8952A8")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x8952AC", Offset = "0x8952AC", VA = "0x8952AC")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x6E7F10", Offset = "0x6E7F10", VA = "0x6E7F10")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x2000442")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x892BC4", Offset = "0x892BC4", VA = "0x892BC4")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x892D90", Offset = "0x892D90", VA = "0x892D90")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x892DE8", Offset = "0x892DE8", VA = "0x892DE8")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x892DF8", Offset = "0x892DF8", VA = "0x892DF8")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x892E08", Offset = "0x892E08", VA = "0x892E08")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x892F0C", Offset = "0x892F0C", VA = "0x892F0C")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x892F1C", Offset = "0x892F1C", VA = "0x892F1C")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x892F2C", Offset = "0x892F2C", VA = "0x892F2C")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x892F48", Offset = "0x892F48", VA = "0x892F48")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x892F94", Offset = "0x892F94", VA = "0x892F94")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x892FA4", Offset = "0x892FA4", VA = "0x892FA4")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x892FE8", Offset = "0x892FE8", VA = "0x892FE8")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x8930A4", Offset = "0x8930A4", VA = "0x8930A4")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x893270", Offset = "0x893270", VA = "0x893270")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x8932AC", Offset = "0x8932AC", VA = "0x8932AC")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x8933E4", Offset = "0x8933E4", VA = "0x8933E4")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x88923C", Offset = "0x88923C", VA = "0x88923C")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x2000107")]
public class PSVRCameraRig : MonoBehaviour
{
	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x654F78", Offset = "0x654F78")]
	public float PlayerHeight;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trackingSpace;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cam;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PSVRMoveController primaryController;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PSVRMoveController secondaryController;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject hintCanvas;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool trackingStarted;

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x1592D74", Offset = "0x1592D74", VA = "0x1592D74")]
	public PSVRCameraRig()
	{
	}
}
[Token(Token = "0x2000108")]
public class PSVRFrustum : MonoBehaviour
{
	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeSpeed;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] frustumRenderers;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform frustumTransform;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float safeDistance;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color showColor;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color hideColor;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color cachedShowColor;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color cachedHideColor;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 camAcceleration;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 hmdPositionRaw;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion hmdRotationUnity;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion hmdRotationRaw;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654F90", Offset = "0x654F90")]
	private bool <ShowFrustum>k__BackingField;

	[Token(Token = "0x170000C8")]
	public Vector3[] Bounds
	{
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1592D84", Offset = "0x1592D84", VA = "0x1592D84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C9")]
	public bool ShowFrustum
	{
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1592DD0", Offset = "0x1592DD0", VA = "0x1592DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CC80", Offset = "0x66CC80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1592DD8", Offset = "0x1592DD8", VA = "0x1592DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CC90", Offset = "0x66CC90")]
		set
		{
		}
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x1592DE4", Offset = "0x1592DE4", VA = "0x1592DE4")]
	public PSVRFrustum()
	{
	}
}
[Token(Token = "0x2000109")]
public class PSVRManager : MonoBehaviour
{
	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float renderScale;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showHmdViewOnMonitor;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PSVRManager _instance;

	[Token(Token = "0x170000CA")]
	public static PSVRManager instance
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1592E00", Offset = "0x1592E00", VA = "0x1592E00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x1592F30", Offset = "0x1592F30", VA = "0x1592F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x15930B0", Offset = "0x15930B0", VA = "0x15930B0")]
	public PSVRManager()
	{
	}
}
[Token(Token = "0x200010A")]
public class PSVRMoveController : MonoBehaviour
{
	[Token(Token = "0x2000443")]
	public enum Controller
	{
		[Token(Token = "0x4001EE2")]
		Primary,
		[Token(Token = "0x4001EE3")]
		Secondary
	}

	[Serializable]
	[Token(Token = "0x2000444")]
	public enum PlayStationKeys
	{
		[Token(Token = "0x4001EE5")]
		Trigger = 334,
		[Token(Token = "0x4001EE6")]
		Middle = 335,
		[Token(Token = "0x4001EE7")]
		Start = 337,
		[Token(Token = "0x4001EE8")]
		Triangle = 333,
		[Token(Token = "0x4001EE9")]
		Circle = 331,
		[Token(Token = "0x4001EEA")]
		Cross = 330,
		[Token(Token = "0x4001EEB")]
		Square = 332,
		[Token(Token = "0x4001EEC")]
		None = -1
	}

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Controller ControllerType;

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x15930CC", Offset = "0x15930CC", VA = "0x15930CC")]
	public PSVRMoveController()
	{
	}
}
[Token(Token = "0x200010B")]
public class PSVRPostReprojection : MonoBehaviour
{
	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject busySpinner;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x15930D4", Offset = "0x15930D4", VA = "0x15930D4")]
	public PSVRPostReprojection()
	{
	}
}
namespace VRTK
{
	[Serializable]
	[Token(Token = "0x200010C")]
	public sealed class AxisOverrides
	{
		[Token(Token = "0x2000445")]
		public enum ApplyOverrideType
		{
			[Token(Token = "0x4001EEE")]
			Never,
			[Token(Token = "0x4001EEF")]
			Always,
			[Token(Token = "0x4001EF0")]
			DigitalState,
			[Token(Token = "0x4001EF1")]
			AxisState,
			[Token(Token = "0x4001EF2")]
			SenseAxisState,
			[Token(Token = "0x4001EF3")]
			AxisAndSenseAxisState
		}

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654FA0", Offset = "0x654FA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654FA0", Offset = "0x654FA0")]
		public bool ignoreAllOverrides;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655000", Offset = "0x655000")]
		public float stateValue;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655038", Offset = "0x655038")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655038", Offset = "0x655038")]
		public ApplyOverrideType applyThumbOverride;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655098", Offset = "0x655098")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x655098", Offset = "0x655098")]
		public float thumbOverride;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6550EC", Offset = "0x6550EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6550EC", Offset = "0x6550EC")]
		public ApplyOverrideType applyIndexOverride;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65514C", Offset = "0x65514C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65514C", Offset = "0x65514C")]
		public float indexOverride;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6551A0", Offset = "0x6551A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6551A0", Offset = "0x6551A0")]
		public ApplyOverrideType applyMiddleOverride;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655200", Offset = "0x655200")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x655200", Offset = "0x655200")]
		public float middleOverride;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655254", Offset = "0x655254")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655254", Offset = "0x655254")]
		public ApplyOverrideType applyRingOverride;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6552B4", Offset = "0x6552B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6552B4", Offset = "0x6552B4")]
		public float ringOverride;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655308", Offset = "0x655308")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655308", Offset = "0x655308")]
		public ApplyOverrideType applyPinkyOverride;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655368", Offset = "0x655368")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x655368", Offset = "0x655368")]
		public float pinkyOverride;

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x8A1F58", Offset = "0x8A1F58", VA = "0x8A1F58")]
		public AxisOverrides()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class VRTK_AvatarHandController : MonoBehaviour
	{
		[Token(Token = "0x2000446")]
		protected enum OverrideState
		{
			[Token(Token = "0x4001EF5")]
			NoOverride,
			[Token(Token = "0x4001EF6")]
			IsOverriding,
			[Token(Token = "0x4001EF7")]
			WasOverring,
			[Token(Token = "0x4001EF8")]
			KeepOverring
		}

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D708", Offset = "0x64D708")]
		private sealed class <ChangePosition>d__103 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float startAxis;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float targetAxis;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_AvatarHandController <>4__this;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int arrayIndex;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002248")]
				[Address(RVA = "0xCA6D20", Offset = "0xCA6D20", VA = "0xCA6D20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600224A")]
				[Address(RVA = "0xCA6D90", Offset = "0xCA6D90", VA = "0xCA6D90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002245")]
			[Address(RVA = "0xCA690C", Offset = "0xCA690C", VA = "0xCA690C")]
			[DebuggerHidden]
			public <ChangePosition>d__103(int <>1__state)
			{
			}

			[Token(Token = "0x6002246")]
			[Address(RVA = "0xCA6B88", Offset = "0xCA6B88", VA = "0xCA6B88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002247")]
			[Address(RVA = "0xCA6B8C", Offset = "0xCA6B8C", VA = "0xCA6B8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002249")]
			[Address(RVA = "0xCA6D28", Offset = "0xCA6D28", VA = "0xCA6D28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6553BC", Offset = "0x6553BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6553BC", Offset = "0x6553BC")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65541C", Offset = "0x65541C")]
		public bool setFingersForControllerType;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655454", Offset = "0x655454")]
		public bool mirrorModel;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65548C", Offset = "0x65548C")]
		public float animationSnapSpeed;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6554C4", Offset = "0x6554C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6554C4", Offset = "0x6554C4")]
		public VRTK_ControllerEvents.ButtonAlias thumbButton;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655524", Offset = "0x655524")]
		public VRTK_ControllerEvents.ButtonAlias indexButton;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65555C", Offset = "0x65555C")]
		public VRTK_ControllerEvents.ButtonAlias middleButton;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655594", Offset = "0x655594")]
		public VRTK_ControllerEvents.ButtonAlias ringButton;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6555CC", Offset = "0x6555CC")]
		public VRTK_ControllerEvents.ButtonAlias pinkyButton;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655604", Offset = "0x655604")]
		public VRTK_ControllerEvents.ButtonAlias threeFingerButton;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65563C", Offset = "0x65563C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65563C", Offset = "0x65563C")]
		public SDK_BaseController.ButtonTypes thumbAxisButton;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65569C", Offset = "0x65569C")]
		public SDK_BaseController.ButtonTypes indexAxisButton;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6556D4", Offset = "0x6556D4")]
		public SDK_BaseController.ButtonTypes middleAxisButton;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65570C", Offset = "0x65570C")]
		public SDK_BaseController.ButtonTypes ringAxisButton;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655744", Offset = "0x655744")]
		public SDK_BaseController.ButtonTypes pinkyAxisButton;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65577C", Offset = "0x65577C")]
		public SDK_BaseController.ButtonTypes threeFingerAxisButton;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6557B4", Offset = "0x6557B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6557B4", Offset = "0x6557B4")]
		public VRTK_ControllerEvents.AxisType thumbState;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRTK_ControllerEvents.AxisType indexState;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public VRTK_ControllerEvents.AxisType middleState;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRTK_ControllerEvents.AxisType ringState;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public VRTK_ControllerEvents.AxisType pinkyState;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public VRTK_ControllerEvents.AxisType threeFingerState;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655814", Offset = "0x655814")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655814", Offset = "0x655814")]
		public AxisOverrides nearTouchOverrides;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655874", Offset = "0x655874")]
		public AxisOverrides touchOverrides;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6558AC", Offset = "0x6558AC")]
		public AxisOverrides grabOverrides;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6558E4", Offset = "0x6558E4")]
		public AxisOverrides useOverrides;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65591C", Offset = "0x65591C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65591C", Offset = "0x65591C")]
		public Transform handModel;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65597C", Offset = "0x65597C")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6559B4", Offset = "0x6559B4")]
		public VRTK_InteractNearTouch interactNearTouch;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6559EC", Offset = "0x6559EC")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655A24", Offset = "0x655A24")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655A5C", Offset = "0x655A5C")]
		public VRTK_InteractUse interactUse;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Animator animator;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool[] fingerStates;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool[] fingerChangeStates;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected float[] fingerAxis;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float[] fingerRawAxis;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float[] fingerUntouchedAxis;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected float[] fingerSaveAxis;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected float[] fingerForceAxis;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected OverrideState[] overrideAxisValues;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected VRTK_ControllerEvents.AxisType[] axisTypes;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected Coroutine[] fingerAnimationRoutine;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected VRTK_ControllerEvents.ButtonAlias savedThumbButtonState;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		protected VRTK_ControllerEvents.ButtonAlias savedIndexButtonState;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected VRTK_ControllerEvents.ButtonAlias savedMiddleButtonState;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected VRTK_ControllerEvents.ButtonAlias savedRingButtonState;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected VRTK_ControllerEvents.ButtonAlias savedPinkyButtonState;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected VRTK_ControllerEvents.ButtonAlias savedThreeFingerButtonState;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected SDK_BaseController.ButtonTypes savedThumbAxisButtonState;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		protected SDK_BaseController.ButtonTypes savedIndexAxisButtonState;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected SDK_BaseController.ButtonTypes savedMiddleAxisButtonState;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected SDK_BaseController.ButtonTypes savedRingAxisButtonState;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected SDK_BaseController.ButtonTypes savedPinkyAxisButtonState;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		protected SDK_BaseController.ButtonTypes savedThreeFingerAxisButtonState;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VRTK_ControllerReference controllerReference;

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xCA2C40", Offset = "0xCA2C40", VA = "0xCA2C40", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xCA2E8C", Offset = "0xCA2E8C", VA = "0xCA2E8C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xCA2F58", Offset = "0xCA2F58", VA = "0xCA2F58", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xCA3080", Offset = "0xCA3080", VA = "0xCA3080", Slot = "7")]
		protected virtual void SubscribeButtonEvent(VRTK_ControllerEvents.ButtonAlias buttonType, ref VRTK_ControllerEvents.ButtonAlias saveType, ControllerInteractionEventHandler eventHandler)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xCA3120", Offset = "0xCA3120", VA = "0xCA3120", Slot = "8")]
		protected virtual void UnsubscribeButtonEvent(VRTK_ControllerEvents.ButtonAlias buttonType, ControllerInteractionEventHandler eventHandler)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xCA31BC", Offset = "0xCA31BC", VA = "0xCA31BC", Slot = "9")]
		protected virtual void SubscribeButtonAxisEvent(SDK_BaseController.ButtonTypes buttonType, ref SDK_BaseController.ButtonTypes saveType, VRTK_ControllerEvents.AxisType axisType, ControllerInteractionEventHandler eventHandler)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xCA3218", Offset = "0xCA3218", VA = "0xCA3218", Slot = "10")]
		protected virtual void UnsubscribeButtonAxisEvent(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerEvents.AxisType axisType, ControllerInteractionEventHandler eventHandler)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xCA3270", Offset = "0xCA3270", VA = "0xCA3270", Slot = "11")]
		protected virtual void SubscribeEvents()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xCA395C", Offset = "0xCA395C", VA = "0xCA395C", Slot = "12")]
		protected virtual void UnsubscribeEvents()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xCA3FDC", Offset = "0xCA3FDC", VA = "0xCA3FDC", Slot = "13")]
		protected virtual void SetFingerEvent(int fingerIndex, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xCA40CC", Offset = "0xCA40CC", VA = "0xCA40CC", Slot = "14")]
		protected virtual void SetFingerAxisEvent(int fingerIndex, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xCA41AC", Offset = "0xCA41AC", VA = "0xCA41AC", Slot = "15")]
		protected virtual void DoThumbEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xCA4204", Offset = "0xCA4204", VA = "0xCA4204", Slot = "16")]
		protected virtual void DoIndexEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xCA425C", Offset = "0xCA425C", VA = "0xCA425C", Slot = "17")]
		protected virtual void DoMiddleEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xCA42B4", Offset = "0xCA42B4", VA = "0xCA42B4", Slot = "18")]
		protected virtual void DoRingEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xCA430C", Offset = "0xCA430C", VA = "0xCA430C", Slot = "19")]
		protected virtual void DoPinkyEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xCA4364", Offset = "0xCA4364", VA = "0xCA4364", Slot = "20")]
		protected virtual void DoThreeFingerEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xCA4454", Offset = "0xCA4454", VA = "0xCA4454", Slot = "21")]
		protected virtual void DoThumbAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xCA44AC", Offset = "0xCA44AC", VA = "0xCA44AC", Slot = "22")]
		protected virtual void DoIndexAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xCA4504", Offset = "0xCA4504", VA = "0xCA4504", Slot = "23")]
		protected virtual void DoMiddleAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xCA455C", Offset = "0xCA455C", VA = "0xCA455C", Slot = "24")]
		protected virtual void DoRingAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xCA45B4", Offset = "0xCA45B4", VA = "0xCA45B4", Slot = "25")]
		protected virtual void DoPinkyAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xCA460C", Offset = "0xCA460C", VA = "0xCA460C", Slot = "26")]
		protected virtual void DoThreeFingerAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xCA46FC", Offset = "0xCA46FC", VA = "0xCA46FC", Slot = "27")]
		protected virtual bool IsButtonPressed(int arrayIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xCA485C", Offset = "0xCA485C", VA = "0xCA485C", Slot = "28")]
		protected virtual void SaveFingerAxis(int arrayIndex, float updateAxis)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xCA4960", Offset = "0xCA4960", VA = "0xCA4960", Slot = "29")]
		protected virtual void HandleOverrideOn(bool ignoreAllOverrides, float[] givenFingerAxis, bool[] overridePermissions, float[] overrideValues)
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xCA4BDC", Offset = "0xCA4BDC", VA = "0xCA4BDC", Slot = "30")]
		protected virtual void HandleOverrideOff(bool ignoreAllOverrides, bool[] overridePermissions, bool keepOverriding)
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xCA4DCC", Offset = "0xCA4DCC", VA = "0xCA4DCC", Slot = "31")]
		protected virtual float CorrectOverrideValue(float givenOverride)
		{
			return default(float);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xCA4DE0", Offset = "0xCA4DE0", VA = "0xCA4DE0", Slot = "32")]
		protected virtual bool ApplyFingerOverrides(AxisOverrides.ApplyOverrideType overrideType, int arrayIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xCA4F70", Offset = "0xCA4F70", VA = "0xCA4F70", Slot = "33")]
		protected virtual bool[] GetOverridePermissions(AxisOverrides overrideType)
		{
			return null;
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xCA5130", Offset = "0xCA5130", VA = "0xCA5130", Slot = "34")]
		protected virtual float[] GetOverrideValues(AxisOverrides overrideType)
		{
			return null;
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xCA52E0", Offset = "0xCA52E0", VA = "0xCA52E0", Slot = "35")]
		protected virtual void SetAnimatorStateOn(string state, AxisOverrides overrides)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xCA5354", Offset = "0xCA5354", VA = "0xCA5354", Slot = "36")]
		protected virtual void SetAnimatorStateOff(string state)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xCA5390", Offset = "0xCA5390", VA = "0xCA5390", Slot = "37")]
		protected virtual void DoControllerNearTouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xCA5508", Offset = "0xCA5508", VA = "0xCA5508", Slot = "38")]
		protected virtual void DoControllerNearUntouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xCA577C", Offset = "0xCA577C", VA = "0xCA577C", Slot = "39")]
		protected virtual void DoControllerTouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xCA5858", Offset = "0xCA5858", VA = "0xCA5858", Slot = "40")]
		protected virtual void DoControllerUntouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xCA5A38", Offset = "0xCA5A38", VA = "0xCA5A38", Slot = "41")]
		protected virtual void DoControllerGrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xCA5BE8", Offset = "0xCA5BE8", VA = "0xCA5BE8", Slot = "42")]
		protected virtual void DoControllerUngrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xCA5C90", Offset = "0xCA5C90", VA = "0xCA5C90", Slot = "43")]
		protected virtual void DoControllerUse(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xCA5E18", Offset = "0xCA5E18", VA = "0xCA5E18", Slot = "44")]
		protected virtual void DoControllerUnuse(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xCA5EC4", Offset = "0xCA5EC4", VA = "0xCA5EC4", Slot = "45")]
		protected virtual void DetectController()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xCA6010", Offset = "0xCA6010", VA = "0xCA6010", Slot = "46")]
		protected virtual void MirrorHand()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xCA61B0", Offset = "0xCA61B0", VA = "0xCA61B0", Slot = "47")]
		protected virtual void SetOverrideValue(int stateIndex, ref OverrideState[] overrideState, OverrideState stateValue)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xCA6210", Offset = "0xCA6210", VA = "0xCA6210", Slot = "48")]
		protected virtual void ProcessFinger(VRTK_ControllerEvents.AxisType state, int arrayIndex)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xCA6770", Offset = "0xCA6770", VA = "0xCA6770", Slot = "49")]
		protected virtual void LerpChangePosition(int arrayIndex, float startPosition, float targetPosition, float speed)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xCA6824", Offset = "0xCA6824", VA = "0xCA6824", Slot = "50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CCA0", Offset = "0x66CCA0")]
		protected virtual IEnumerator ChangePosition(int arrayIndex, float startAxis, float targetAxis, float time)
		{
			return null;
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xCA6938", Offset = "0xCA6938", VA = "0xCA6938", Slot = "51")]
		protected virtual void SetFingerPosition(int arrayIndex, float axis)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xCA6A38", Offset = "0xCA6A38", VA = "0xCA6A38")]
		public VRTK_AvatarHandController()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class VRTK_ConsoleViewer : MonoBehaviour
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655A94", Offset = "0x655A94")]
		public int fontSize;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655ACC", Offset = "0x655ACC")]
		public Color infoMessage;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655B04", Offset = "0x655B04")]
		public Color assertMessage;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655B3C", Offset = "0x655B3C")]
		public Color warningMessage;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655B74", Offset = "0x655B74")]
		public Color errorMessage;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655BAC", Offset = "0x655BAC")]
		public Color exceptionMessage;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Dictionary<LogType, Color> logTypeColors;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected ScrollRect scrollWindow;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected RectTransform consoleRect;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Text consoleOutput;

		[Token(Token = "0x40009E5")]
		protected const string NEWLINE = "\n";

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected int lineBuffer;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected int currentBuffer;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected string lastMessage;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool collapseLog;

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xCBE3C0", Offset = "0xCBE3C0", VA = "0xCBE3C0", Slot = "4")]
		public virtual void SetCollapse(bool state)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xCBE3CC", Offset = "0xCBE3CC", VA = "0xCBE3CC", Slot = "5")]
		public virtual void ClearLog()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xCBE450", Offset = "0xCBE450", VA = "0xCBE450", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xCBE704", Offset = "0xCBE704", VA = "0xCBE704", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xCBE784", Offset = "0xCBE784", VA = "0xCBE784", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xCBE860", Offset = "0xCBE860", VA = "0xCBE860", Slot = "9")]
		protected virtual string GetMessage(string message, LogType type)
		{
			return null;
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xCBEA98", Offset = "0xCBEA98", VA = "0xCBEA98", Slot = "10")]
		protected virtual void HandleLog(string message, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xCBED3C", Offset = "0xCBED3C", VA = "0xCBED3C")]
		public VRTK_ConsoleViewer()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public struct ControllerRigidbodyActivatorEventArgs
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_InteractTouch touchingObject;
	}
	[Token(Token = "0x2000110")]
	public delegate void ControllerRigidbodyActivatorEventHandler(object sender, ControllerRigidbodyActivatorEventArgs e);
	[Token(Token = "0x2000111")]
	public class VRTK_ControllerRigidbodyActivator : MonoBehaviour
	{
		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655BE4", Offset = "0x655BE4")]
		public bool isEnabled;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655C1C", Offset = "0x655C1C")]
		public bool activateInteractTouch;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655C54", Offset = "0x655C54")]
		public bool activateTrackedCollider;

		[Token(Token = "0x1400001F")]
		public event ControllerRigidbodyActivatorEventHandler ControllerRigidbodyOn
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0xDAD294", Offset = "0xDAD294", VA = "0xDAD294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD04", Offset = "0x66CD04")]
			add
			{
			}
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0xDAD380", Offset = "0xDAD380", VA = "0xDAD380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD14", Offset = "0x66CD14")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event ControllerRigidbodyActivatorEventHandler ControllerRigidbodyOff
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0xDAD46C", Offset = "0xDAD46C", VA = "0xDAD46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD24", Offset = "0x66CD24")]
			add
			{
			}
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0xDAD558", Offset = "0xDAD558", VA = "0xDAD558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD34", Offset = "0x66CD34")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xDAD644", Offset = "0xDAD644", VA = "0xDAD644", Slot = "4")]
		public virtual void OnControllerRigidbodyOn(ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xDAD668", Offset = "0xDAD668", VA = "0xDAD668", Slot = "5")]
		public virtual void OnControllerRigidbodyOff(ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xDAD68C", Offset = "0xDAD68C", VA = "0xDAD68C", Slot = "6")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xDAD69C", Offset = "0xDAD69C", VA = "0xDAD69C", Slot = "7")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xDAD6AC", Offset = "0xDAD6AC", VA = "0xDAD6AC", Slot = "8")]
		protected virtual void ToggleRigidbody(Collider collider, bool state)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xDAD870", Offset = "0xDAD870", VA = "0xDAD870", Slot = "9")]
		protected virtual void EmitEvent(bool state, VRTK_InteractTouch touch)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xDAD890", Offset = "0xDAD890", VA = "0xDAD890")]
		public VRTK_ControllerRigidbodyActivator()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public struct ControllerTooltipsEventArgs
	{
		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerTooltips.TooltipButtons element;
	}
	[Token(Token = "0x2000113")]
	public delegate void ControllerTooltipsEventHandler(object sender, ControllerTooltipsEventArgs e);
	[Token(Token = "0x2000114")]
	public class VRTK_ControllerTooltips : MonoBehaviour
	{
		[Token(Token = "0x2000448")]
		public enum TooltipButtons
		{
			[Token(Token = "0x4001F02")]
			None,
			[Token(Token = "0x4001F03")]
			TriggerTooltip,
			[Token(Token = "0x4001F04")]
			GripTooltip,
			[Token(Token = "0x4001F05")]
			TouchpadTooltip,
			[Token(Token = "0x4001F06")]
			TouchpadTwoTooltip,
			[Token(Token = "0x4001F07")]
			ButtonOneTooltip,
			[Token(Token = "0x4001F08")]
			ButtonTwoTooltip,
			[Token(Token = "0x4001F09")]
			StartMenuTooltip
		}

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655CAC", Offset = "0x655CAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655CAC", Offset = "0x655CAC")]
		public string triggerText;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655D0C", Offset = "0x655D0C")]
		public string gripText;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655D44", Offset = "0x655D44")]
		public string touchpadText;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655D7C", Offset = "0x655D7C")]
		public string touchpadTwoText;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655DB4", Offset = "0x655DB4")]
		public string buttonOneText;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655DEC", Offset = "0x655DEC")]
		public string buttonTwoText;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655E24", Offset = "0x655E24")]
		public string startMenuText;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655E5C", Offset = "0x655E5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655E5C", Offset = "0x655E5C")]
		public Color tipBackgroundColor;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655EBC", Offset = "0x655EBC")]
		public Color tipTextColor;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655EF4", Offset = "0x655EF4")]
		public Color tipLineColor;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655F2C", Offset = "0x655F2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655F2C", Offset = "0x655F2C")]
		public Transform trigger;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655F8C", Offset = "0x655F8C")]
		public Transform grip;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655FC4", Offset = "0x655FC4")]
		public Transform touchpad;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655FFC", Offset = "0x655FFC")]
		public Transform touchpadTwo;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656034", Offset = "0x656034")]
		public Transform buttonOne;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65606C", Offset = "0x65606C")]
		public Transform buttonTwo;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6560A4", Offset = "0x6560A4")]
		public Transform startMenu;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6560DC", Offset = "0x6560DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6560DC", Offset = "0x6560DC")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65613C", Offset = "0x65613C")]
		public VRTK_HeadsetControllerAware headsetControllerAware;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656174", Offset = "0x656174")]
		public bool hideWhenNotInView;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6561AC", Offset = "0x6561AC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6561AC", Offset = "0x6561AC")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x6561AC", Offset = "0x6561AC")]
		public int retryInitMaxTries;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65621C", Offset = "0x65621C")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x65621C", Offset = "0x65621C")]
		public float retryInitCounter;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected TooltipButtons[] availableButtons;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRTK_ObjectTooltip[] buttonTooltips;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected bool[] tooltipStates;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected bool overallState;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x14000021")]
		public event ControllerTooltipsEventHandler ControllerTooltipOn
		{
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0xDAD8A0", Offset = "0xDAD8A0", VA = "0xDAD8A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD44", Offset = "0x66CD44")]
			add
			{
			}
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0xDAD98C", Offset = "0xDAD98C", VA = "0xDAD98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD54", Offset = "0x66CD54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event ControllerTooltipsEventHandler ControllerTooltipOff
		{
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0xDADA78", Offset = "0xDADA78", VA = "0xDADA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD64", Offset = "0x66CD64")]
			add
			{
			}
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0xDADB64", Offset = "0xDADB64", VA = "0xDADB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD74", Offset = "0x66CD74")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xDADC50", Offset = "0xDADC50", VA = "0xDADC50", Slot = "4")]
		public virtual void OnControllerTooltipOn(ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xDADC70", Offset = "0xDADC70", VA = "0xDADC70", Slot = "5")]
		public virtual void OnControllerTooltipOff(ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xDADC90", Offset = "0xDADC90", VA = "0xDADC90", Slot = "6")]
		public virtual void ResetTooltip()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xDADCA0", Offset = "0xDADCA0", VA = "0xDADCA0", Slot = "7")]
		public virtual void UpdateText(TooltipButtons element, string newText)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xDADD04", Offset = "0xDADD04", VA = "0xDADD04", Slot = "8")]
		public virtual void ToggleTips(bool state, TooltipButtons element = TooltipButtons.None)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xDADF24", Offset = "0xDADF24", VA = "0xDADF24", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xDADFA0", Offset = "0xDADFA0", VA = "0xDADFA0", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xDAE06C", Offset = "0xDAE06C", VA = "0xDAE06C", Slot = "11")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xDAE330", Offset = "0xDAE330", VA = "0xDAE330", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xDAE398", Offset = "0xDAE398", VA = "0xDAE398", Slot = "13")]
		protected virtual void EmitEvent(bool state, TooltipButtons element)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xDAE3B8", Offset = "0xDAE3B8", VA = "0xDAE3B8", Slot = "14")]
		protected virtual void InitButtonsArray()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xDAE618", Offset = "0xDAE618", VA = "0xDAE618", Slot = "15")]
		protected virtual void InitListeners()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xDAE970", Offset = "0xDAE970", VA = "0xDAE970", Slot = "16")]
		protected virtual void DoControllerEnabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xDAEAAC", Offset = "0xDAEAAC", VA = "0xDAEAAC", Slot = "17")]
		protected virtual void DoControllerVisible(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xDAEB84", Offset = "0xDAEB84", VA = "0xDAEB84", Slot = "18")]
		protected virtual void DoControllerInvisible(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xDAEC8C", Offset = "0xDAEC8C", VA = "0xDAEC8C", Slot = "19")]
		protected virtual void DoControllerModelAvailable(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xDAEC98", Offset = "0xDAEC98", VA = "0xDAEC98", Slot = "20")]
		protected virtual void TrackedControllerDoControllerModelAvailable(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xDAECA4", Offset = "0xDAECA4", VA = "0xDAECA4", Slot = "21")]
		protected virtual void DoGlanceEnterController(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xDAEDAC", Offset = "0xDAEDAC", VA = "0xDAEDAC", Slot = "22")]
		protected virtual void DoGlanceExitController(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xDAEEB4", Offset = "0xDAEEB4", VA = "0xDAEEB4", Slot = "23")]
		protected virtual void InitialiseTips()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xDAF3B8", Offset = "0xDAF3B8", VA = "0xDAF3B8", Slot = "24")]
		protected virtual Transform GetTransform(Transform setTransform, SDK_BaseController.ControllerElements findElement)
		{
			return null;
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xDAF5F8", Offset = "0xDAF5F8", VA = "0xDAF5F8")]
		public VRTK_ControllerTooltips()
		{
		}
	}
	[Token(Token = "0x2000115")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x648F08", Offset = "0x648F08")]
	public class VRTK_DesktopCamera : MonoBehaviour
	{
		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656288", Offset = "0x656288")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656288", Offset = "0x656288")]
		public Camera desktopCamera;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6562E8", Offset = "0x6562E8")]
		public VRTK_ObjectFollow followScript;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656320", Offset = "0x656320")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656320", Offset = "0x656320")]
		public RawImage headsetImage;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656380", Offset = "0x656380")]
		public RenderTexture headsetRenderTexture;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Camera headsetCameraCopy;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_TransformFollow headsetCameraTransformFollow;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xDB4FC8", Offset = "0xDB4FC8", VA = "0xDB4FC8", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xDB5504", Offset = "0xDB5504", VA = "0xDB5504", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xDB5648", Offset = "0xDB5648", VA = "0xDB5648", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xDB5654", Offset = "0xDB5654", VA = "0xDB5654", Slot = "7")]
		protected virtual void ConfigureForCurrentSDKSetup()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xDB6304", Offset = "0xDB6304", VA = "0xDB6304")]
		public VRTK_DesktopCamera()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xDB630C", Offset = "0xDB630C", VA = "0xDB630C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD84", Offset = "0x66CD84")]
		private bool <ConfigureForCurrentSDKSetup>b__9_0(Component component)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000116")]
	public delegate void DestinationPointEventHandler(object sender);
	[Token(Token = "0x2000117")]
	public class VRTK_DestinationPoint : VRTK_DestinationMarker
	{
		[Token(Token = "0x2000449")]
		public enum RotationTypes
		{
			[Token(Token = "0x4001F0B")]
			NoRotation,
			[Token(Token = "0x4001F0C")]
			RotateWithNoHeadsetOffset,
			[Token(Token = "0x4001F0D")]
			RotateWithHeadsetOffset
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D718", Offset = "0x64D718")]
		private sealed class <ManageDestinationMarkersAtEndOfFrame>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DestinationPoint <>4__this;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600224E")]
				[Address(RVA = "0xBD9CF0", Offset = "0xBD9CF0", VA = "0xBD9CF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002250")]
				[Address(RVA = "0xBD9D60", Offset = "0xBD9D60", VA = "0xBD9D60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600224B")]
			[Address(RVA = "0xBD8488", Offset = "0xBD8488", VA = "0xBD8488")]
			[DebuggerHidden]
			public <ManageDestinationMarkersAtEndOfFrame>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x600224C")]
			[Address(RVA = "0xBD9B18", Offset = "0xBD9B18", VA = "0xBD9B18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600224D")]
			[Address(RVA = "0xBD9B1C", Offset = "0xBD9B1C", VA = "0xBD9B1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600224F")]
			[Address(RVA = "0xBD9CF8", Offset = "0xBD9CF8", VA = "0xBD9CF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6563B8", Offset = "0x6563B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6563B8", Offset = "0x6563B8")]
		public GameObject defaultCursorObject;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656418", Offset = "0x656418")]
		public GameObject hoverCursorObject;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656450", Offset = "0x656450")]
		public GameObject lockedCursorObject;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656488", Offset = "0x656488")]
		public Transform destinationLocation;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6564C0", Offset = "0x6564C0")]
		public bool snapToPoint;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6564F8", Offset = "0x6564F8")]
		public bool hidePointerCursorOnHover;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656530", Offset = "0x656530")]
		public bool hideDirectionIndicatorOnHover;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656568", Offset = "0x656568")]
		public RotationTypes snapToRotation;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6565A0", Offset = "0x6565A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6565A0", Offset = "0x6565A0")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_DestinationPoint currentDestinationPoint;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Collider pointCollider;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool createdCollider;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Rigidbody pointRigidbody;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool createdRigidbody;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Coroutine initaliseListeners;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool isActive;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected VRTK_BasePointerRenderer.VisibilityStates storedCursorState;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool storedDirectionIndicatorState;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		protected bool currentTeleportState;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		protected bool customTeleporter;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Transform playArea;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Transform headset;

		[Token(Token = "0x14000023")]
		public event DestinationPointEventHandler DestinationPointEnabled
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xBD7408", Offset = "0xBD7408", VA = "0xBD7408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD94", Offset = "0x66CD94")]
			add
			{
			}
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0xBD74F4", Offset = "0xBD74F4", VA = "0xBD74F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDA4", Offset = "0x66CDA4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event DestinationPointEventHandler DestinationPointDisabled
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0xBD75E0", Offset = "0xBD75E0", VA = "0xBD75E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDB4", Offset = "0x66CDB4")]
			add
			{
			}
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0xBD76CC", Offset = "0xBD76CC", VA = "0xBD76CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDC4", Offset = "0x66CDC4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event DestinationPointEventHandler DestinationPointLocked
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xBD77B8", Offset = "0xBD77B8", VA = "0xBD77B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDD4", Offset = "0x66CDD4")]
			add
			{
			}
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xBD78A4", Offset = "0xBD78A4", VA = "0xBD78A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDE4", Offset = "0x66CDE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event DestinationPointEventHandler DestinationPointUnlocked
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0xBD7990", Offset = "0xBD7990", VA = "0xBD7990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDF4", Offset = "0x66CDF4")]
			add
			{
			}
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xBD7A7C", Offset = "0xBD7A7C", VA = "0xBD7A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CE04", Offset = "0x66CE04")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event DestinationPointEventHandler DestinationPointReset
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0xBD7B68", Offset = "0xBD7B68", VA = "0xBD7B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CE14", Offset = "0x66CE14")]
			add
			{
			}
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0xBD7C54", Offset = "0xBD7C54", VA = "0xBD7C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CE24", Offset = "0x66CE24")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xBD7D40", Offset = "0xBD7D40", VA = "0xBD7D40", Slot = "15")]
		public virtual void OnDestinationPointEnabled()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xBD7D5C", Offset = "0xBD7D5C", VA = "0xBD7D5C", Slot = "16")]
		public virtual void OnDestinationPointDisabled()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xBD7D78", Offset = "0xBD7D78", VA = "0xBD7D78", Slot = "17")]
		public virtual void OnDestinationPointLocked()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xBD7D94", Offset = "0xBD7D94", VA = "0xBD7D94", Slot = "18")]
		public virtual void OnDestinationPointUnlocked()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xBD7DB0", Offset = "0xBD7DB0", VA = "0xBD7DB0", Slot = "19")]
		public virtual void OnDestinationPointReset()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xBD7DCC", Offset = "0xBD7DCC", VA = "0xBD7DCC", Slot = "20")]
		public virtual void ResetDestinationPoint()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xBD7DDC", Offset = "0xBD7DDC", VA = "0xBD7DDC", Slot = "21")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xBD7E44", Offset = "0xBD7E44", VA = "0xBD7E44", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xBD8054", Offset = "0xBD8054", VA = "0xBD8054", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xBD814C", Offset = "0xBD814C", VA = "0xBD814C", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xBD81B4", Offset = "0xBD81B4", VA = "0xBD81B4", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xBD820C", Offset = "0xBD820C", VA = "0xBD820C", Slot = "24")]
		protected virtual void CreateColliderIfRequired()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xBD8300", Offset = "0xBD8300", VA = "0xBD8300", Slot = "25")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xBD8414", Offset = "0xBD8414", VA = "0xBD8414", Slot = "26")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CE34", Offset = "0x66CE34")]
		protected virtual IEnumerator ManageDestinationMarkersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xBD84B4", Offset = "0xBD84B4", VA = "0xBD84B4", Slot = "27")]
		protected virtual void ManageDestinationMarkers(bool state)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xBD8728", Offset = "0xBD8728", VA = "0xBD8728", Slot = "28")]
		protected virtual void ManageDestinationMarkerListeners(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xBD899C", Offset = "0xBD899C", VA = "0xBD899C", Slot = "29")]
		protected virtual void DoDestinationMarkerEnter(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xBD8CB0", Offset = "0xBD8CB0", VA = "0xBD8CB0", Slot = "30")]
		protected virtual void DoDestinationMarkerExit(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xBD8F48", Offset = "0xBD8F48", VA = "0xBD8F48", Slot = "31")]
		protected virtual void DoDestinationMarkerSet(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xBD9218", Offset = "0xBD9218", VA = "0xBD9218", Slot = "32")]
		protected virtual void ToggleCursor(object sender, bool state)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xBD9418", Offset = "0xBD9418", VA = "0xBD9418", Slot = "33")]
		protected virtual void TogglePointerCursor(VRTK_BasePointerRenderer pointerRenderer, bool state)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xBD9490", Offset = "0xBD9490", VA = "0xBD9490", Slot = "34")]
		protected virtual void ToggleDirectionIndicator(VRTK_BasePointerRenderer pointerRenderer, bool state)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xBD9574", Offset = "0xBD9574", VA = "0xBD9574", Slot = "35")]
		protected virtual void EnablePoint()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xBD95F0", Offset = "0xBD95F0", VA = "0xBD95F0", Slot = "36")]
		protected virtual void SetColliderState(bool state)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xBD96A0", Offset = "0xBD96A0", VA = "0xBD96A0", Slot = "37")]
		protected virtual void DisablePoint()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xBD9734", Offset = "0xBD9734", VA = "0xBD9734", Slot = "38")]
		protected virtual void ResetPoint()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xBD98BC", Offset = "0xBD98BC", VA = "0xBD98BC", Slot = "39")]
		protected virtual void ToggleObject(GameObject givenObject, bool state)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xBD9964", Offset = "0xBD9964", VA = "0xBD9964", Slot = "40")]
		protected virtual Quaternion? GetRotation()
		{
			return null;
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xBD9AFC", Offset = "0xBD9AFC", VA = "0xBD9AFC")]
		public VRTK_DestinationPoint()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class VRTK_FramesPerSecondViewer : MonoBehaviour
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656650", Offset = "0x656650")]
		public bool displayFPS;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656688", Offset = "0x656688")]
		public int targetFPS;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6566C0", Offset = "0x6566C0")]
		public int fontSize;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6566F8", Offset = "0x6566F8")]
		public Vector3 position;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656730", Offset = "0x656730")]
		public Color goodColor;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656768", Offset = "0x656768")]
		public Color warnColor;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6567A0", Offset = "0x6567A0")]
		public Color badColor;

		[Token(Token = "0x4000A36")]
		protected const float updateInterval = 0.5f;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int framesCount;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float framesTime;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Canvas canvas;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Text text;

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xBE2344", Offset = "0xBE2344", VA = "0xBE2344", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xBE23F4", Offset = "0xBE23F4", VA = "0xBE23F4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xBE24C8", Offset = "0xBE24C8", VA = "0xBE24C8", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xBE26D0", Offset = "0xBE26D0", VA = "0xBE26D0", Slot = "7")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xBE27B0", Offset = "0xBE27B0", VA = "0xBE27B0", Slot = "8")]
		protected virtual void InitCanvas()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xBE2950", Offset = "0xBE2950", VA = "0xBE2950", Slot = "9")]
		protected virtual void SetCanvasCamera()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xBE2A3C", Offset = "0xBE2A3C", VA = "0xBE2A3C")]
		public VRTK_FramesPerSecondViewer()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public struct ObjectTooltipEventArgs
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string newText;
	}
	[Token(Token = "0x200011A")]
	public delegate void ObjectTooltipEventHandler(object sender, ObjectTooltipEventArgs e);
	[Token(Token = "0x200011B")]
	public class VRTK_ObjectTooltip : MonoBehaviour
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6567D8", Offset = "0x6567D8")]
		public string displayText;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656810", Offset = "0x656810")]
		public int fontSize;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656848", Offset = "0x656848")]
		public Vector2 containerSize;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656880", Offset = "0x656880")]
		public Transform drawLineFrom;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6568B8", Offset = "0x6568B8")]
		public Transform drawLineTo;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6568F0", Offset = "0x6568F0")]
		public float lineWidth;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656928", Offset = "0x656928")]
		public Color fontColor;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656960", Offset = "0x656960")]
		public Color containerColor;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656998", Offset = "0x656998")]
		public Color lineColor;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6569D0", Offset = "0x6569D0")]
		public bool alwaysFaceHeadset;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected LineRenderer line;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Transform headset;

		[Token(Token = "0x14000028")]
		public event ObjectTooltipEventHandler ObjectTooltipReset
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xA1F06C", Offset = "0xA1F06C", VA = "0xA1F06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CE98", Offset = "0x66CE98")]
			add
			{
			}
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xA1F158", Offset = "0xA1F158", VA = "0xA1F158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CEA8", Offset = "0x66CEA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event ObjectTooltipEventHandler ObjectTooltipTextUpdated
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xA1F244", Offset = "0xA1F244", VA = "0xA1F244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CEB8", Offset = "0x66CEB8")]
			add
			{
			}
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xA1F330", Offset = "0xA1F330", VA = "0xA1F330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CEC8", Offset = "0x66CEC8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xA1F41C", Offset = "0xA1F41C", VA = "0xA1F41C", Slot = "4")]
		public virtual void OnObjectTooltipReset(ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xA1F440", Offset = "0xA1F440", VA = "0xA1F440", Slot = "5")]
		public virtual void OnObjectTooltipTextUpdated(ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xA1F464", Offset = "0xA1F464", VA = "0xA1F464", Slot = "6")]
		public virtual void ResetTooltip()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xA1F5F4", Offset = "0xA1F5F4", VA = "0xA1F5F4", Slot = "7")]
		public virtual void UpdateText(string newText)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xA1F640", Offset = "0xA1F640", VA = "0xA1F640", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xA1F6A8", Offset = "0xA1F6A8", VA = "0xA1F6A8", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xA1F724", Offset = "0xA1F724", VA = "0xA1F724", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xA1F78C", Offset = "0xA1F78C", VA = "0xA1F78C", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xA1F7F4", Offset = "0xA1F7F4", VA = "0xA1F7F4", Slot = "12")]
		protected virtual ObjectTooltipEventArgs SetEventPayload(string newText = "")
		{
			return default(ObjectTooltipEventArgs);
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xA1F7FC", Offset = "0xA1F7FC", VA = "0xA1F7FC", Slot = "13")]
		protected virtual void SetContainer()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xA1F988", Offset = "0xA1F988", VA = "0xA1F988", Slot = "14")]
		protected virtual void SetText(string name)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xA1FB3C", Offset = "0xA1FB3C", VA = "0xA1FB3C", Slot = "15")]
		protected virtual void SetLine()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xA1FDA8", Offset = "0xA1FDA8", VA = "0xA1FDA8", Slot = "16")]
		protected virtual void DrawLine()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xA1FEF4", Offset = "0xA1FEF4", VA = "0xA1FEF4")]
		public VRTK_ObjectTooltip()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class VRTK_PanelMenuController : MonoBehaviour
	{
		[Token(Token = "0x200044B")]
		public enum TouchpadPressPosition
		{
			[Token(Token = "0x4001F12")]
			None,
			[Token(Token = "0x4001F13")]
			Top,
			[Token(Token = "0x4001F14")]
			Bottom,
			[Token(Token = "0x4001F15")]
			Left,
			[Token(Token = "0x4001F16")]
			Right
		}

		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D728", Offset = "0x64D728")]
		private sealed class <TweenMenuScale>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool show;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_PanelMenuController <>4__this;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetScale>5__2;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <direction>5__3;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002254")]
				[Address(RVA = "0xA22F98", Offset = "0xA22F98", VA = "0xA22F98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002256")]
				[Address(RVA = "0xA23008", Offset = "0xA23008", VA = "0xA23008", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002251")]
			[Address(RVA = "0xA21ED8", Offset = "0xA21ED8", VA = "0xA21ED8")]
			[DebuggerHidden]
			public <TweenMenuScale>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6002252")]
			[Address(RVA = "0xA22B00", Offset = "0xA22B00", VA = "0xA22B00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002253")]
			[Address(RVA = "0xA22B04", Offset = "0xA22B04", VA = "0xA22B04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002255")]
			[Address(RVA = "0xA22FA0", Offset = "0xA22FA0", VA = "0xA22FA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656A28", Offset = "0x656A28")]
		public GameObject rotateTowards;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656A60", Offset = "0x656A60")]
		public float zoomScaleMultiplier;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656A98", Offset = "0x656A98")]
		public VRTK_PanelMenuItemController topPanelMenuItemController;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656AD0", Offset = "0x656AD0")]
		public VRTK_PanelMenuItemController bottomPanelMenuItemController;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656B08", Offset = "0x656B08")]
		public VRTK_PanelMenuItemController leftPanelMenuItemController;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656B40", Offset = "0x656B40")]
		public VRTK_PanelMenuItemController rightPanelMenuItemController;

		[Token(Token = "0x4000A50")]
		protected const float CanvasScaleSize = 0.001f;

		[Token(Token = "0x4000A51")]
		protected const float AngleTolerance = 30f;

		[Token(Token = "0x4000A52")]
		protected const float SwipeMinDist = 0.2f;

		[Token(Token = "0x4000A53")]
		protected const float SwipeMinVelocity = 4f;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_PanelMenuItemController currentPanelMenuItemController;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject interactableObject;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject canvasObject;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected readonly Vector2 xAxis;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly Vector2 yAxis;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector2 touchStartPosition;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Vector2 touchEndPosition;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float touchStartTime;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float currentAngle;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool isTrackingSwipe;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		protected bool isPendingSwipeCheck;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		protected bool isGrabbed;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		protected bool isShown;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Coroutine tweenMenuScaleRoutine;

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xA20B04", Offset = "0xA20B04", VA = "0xA20B04", Slot = "4")]
		public virtual void ToggleMenu()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xA20B24", Offset = "0xA20B24", VA = "0xA20B24", Slot = "5")]
		public virtual void ShowMenu()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xA20B4C", Offset = "0xA20B4C", VA = "0xA20B4C", Slot = "6")]
		public virtual void HideMenu(bool force)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xA20B74", Offset = "0xA20B74", VA = "0xA20B74", Slot = "7")]
		public virtual void HideMenuImmediate()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xA20CE4", Offset = "0xA20CE4", VA = "0xA20CE4", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xA20D5C", Offset = "0xA20D5C", VA = "0xA20D5C", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xA21270", Offset = "0xA21270", VA = "0xA21270", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xA212D8", Offset = "0xA212D8", VA = "0xA212D8", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xA21734", Offset = "0xA21734", VA = "0xA21734", Slot = "12")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xA21924", Offset = "0xA21924", VA = "0xA21924", Slot = "13")]
		protected virtual void BindControllerEvents()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xA21AC0", Offset = "0xA21AC0", VA = "0xA21AC0", Slot = "14")]
		protected virtual void UnbindControllerEvents()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xA21C5C", Offset = "0xA21C5C", VA = "0xA21C5C", Slot = "15")]
		protected virtual void HandlePanelMenuItemControllerVisibility(VRTK_PanelMenuItemController targetPanelItemController)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xA21DC8", Offset = "0xA21DC8", VA = "0xA21DC8", Slot = "16")]
		protected virtual void InitTweenMenuScale(bool show)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xA21E3C", Offset = "0xA21E3C", VA = "0xA21E3C", Slot = "17")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CED8", Offset = "0x66CED8")]
		protected virtual IEnumerator TweenMenuScale(bool show)
		{
			return null;
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xA21F04", Offset = "0xA21F04", VA = "0xA21F04", Slot = "18")]
		protected virtual void DoInteractableObjectIsGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xA21FC4", Offset = "0xA21FC4", VA = "0xA21FC4", Slot = "19")]
		protected virtual void DoInteractableObjectIsUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xA22070", Offset = "0xA22070", VA = "0xA22070", Slot = "20")]
		protected virtual void DoTouchpadPress(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xA22210", Offset = "0xA22210", VA = "0xA22210", Slot = "21")]
		protected virtual void DoTouchpadTouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xA2225C", Offset = "0xA2225C", VA = "0xA2225C", Slot = "22")]
		protected virtual void DoTouchpadUntouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xA22268", Offset = "0xA22268", VA = "0xA22268", Slot = "23")]
		protected virtual void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xA22308", Offset = "0xA22308", VA = "0xA22308", Slot = "24")]
		protected virtual void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xA22324", Offset = "0xA22324", VA = "0xA22324", Slot = "25")]
		protected virtual void ChangeAngle(float angle, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xA2232C", Offset = "0xA2232C", VA = "0xA2232C", Slot = "26")]
		protected virtual void CalculateSwipeAction()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xA22584", Offset = "0xA22584", VA = "0xA22584", Slot = "27")]
		protected virtual TouchpadPressPosition CalculateTouchpadPressPosition()
		{
			return default(TouchpadPressPosition);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xA22658", Offset = "0xA22658", VA = "0xA22658", Slot = "28")]
		protected virtual void OnSwipeLeft()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xA22700", Offset = "0xA22700", VA = "0xA22700", Slot = "29")]
		protected virtual void OnSwipeRight()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xA227AC", Offset = "0xA227AC", VA = "0xA227AC", Slot = "30")]
		protected virtual void OnSwipeTop()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xA22858", Offset = "0xA22858", VA = "0xA22858", Slot = "31")]
		protected virtual void OnSwipeBottom()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xA22904", Offset = "0xA22904", VA = "0xA22904", Slot = "32")]
		protected virtual void OnTriggerPressed()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xA229B0", Offset = "0xA229B0", VA = "0xA229B0", Slot = "33")]
		protected virtual float CalculateAngle(ControllerInteractionEventArgs e)
		{
			return default(float);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xA229B8", Offset = "0xA229B8", VA = "0xA229B8", Slot = "34")]
		protected virtual float NormAngle(float currentDegree, float maxAngle = 360f)
		{
			return default(float);
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xA229C8", Offset = "0xA229C8", VA = "0xA229C8", Slot = "35")]
		protected virtual bool CheckAnglePosition(float currentDegree, float tolerance, float targetDegree)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xA22A7C", Offset = "0xA22A7C", VA = "0xA22A7C")]
		public VRTK_PanelMenuController()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public struct PanelMenuItemControllerEventArgs
	{
		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactableObject;
	}
	[Token(Token = "0x200011E")]
	public delegate void PanelMenuItemControllerEventHandler(object sender, PanelMenuItemControllerEventArgs e);
	[Token(Token = "0x200011F")]
	public class VRTK_PanelMenuItemController : MonoBehaviour
	{
		[Token(Token = "0x1400002A")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemShowing
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xA23010", Offset = "0xA23010", VA = "0xA23010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF3C", Offset = "0x66CF3C")]
			add
			{
			}
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xA230FC", Offset = "0xA230FC", VA = "0xA230FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF4C", Offset = "0x66CF4C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemHiding
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xA231E8", Offset = "0xA231E8", VA = "0xA231E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF5C", Offset = "0x66CF5C")]
			add
			{
			}
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xA232D4", Offset = "0xA232D4", VA = "0xA232D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF6C", Offset = "0x66CF6C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeLeft
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xA233C0", Offset = "0xA233C0", VA = "0xA233C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF7C", Offset = "0x66CF7C")]
			add
			{
			}
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xA234AC", Offset = "0xA234AC", VA = "0xA234AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF8C", Offset = "0x66CF8C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeRight
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xA23598", Offset = "0xA23598", VA = "0xA23598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF9C", Offset = "0x66CF9C")]
			add
			{
			}
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xA23684", Offset = "0xA23684", VA = "0xA23684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CFAC", Offset = "0x66CFAC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeTop
		{
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xA23770", Offset = "0xA23770", VA = "0xA23770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CFBC", Offset = "0x66CFBC")]
			add
			{
			}
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xA2385C", Offset = "0xA2385C", VA = "0xA2385C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CFCC", Offset = "0x66CFCC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeBottom
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0xA23948", Offset = "0xA23948", VA = "0xA23948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CFDC", Offset = "0x66CFDC")]
			add
			{
			}
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0xA23A34", Offset = "0xA23A34", VA = "0xA23A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CFEC", Offset = "0x66CFEC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemTriggerPressed
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0xA23B20", Offset = "0xA23B20", VA = "0xA23B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CFFC", Offset = "0x66CFFC")]
			add
			{
			}
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0xA23C0C", Offset = "0xA23C0C", VA = "0xA23C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D00C", Offset = "0x66D00C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xA23CF8", Offset = "0xA23CF8", VA = "0xA23CF8", Slot = "4")]
		public virtual void OnPanelMenuItemShowing(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xA23D1C", Offset = "0xA23D1C", VA = "0xA23D1C", Slot = "5")]
		public virtual void OnPanelMenuItemHiding(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xA23D40", Offset = "0xA23D40", VA = "0xA23D40", Slot = "6")]
		public virtual void OnPanelMenuItemSwipeLeft(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xA23D64", Offset = "0xA23D64", VA = "0xA23D64", Slot = "7")]
		public virtual void OnPanelMenuItemSwipeRight(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xA23D88", Offset = "0xA23D88", VA = "0xA23D88", Slot = "8")]
		public virtual void OnPanelMenuItemSwipeTop(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xA23DAC", Offset = "0xA23DAC", VA = "0xA23DAC", Slot = "9")]
		public virtual void OnPanelMenuItemSwipeBottom(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xA23DD0", Offset = "0xA23DD0", VA = "0xA23DD0", Slot = "10")]
		public virtual PanelMenuItemControllerEventArgs SetPanelMenuItemEvent(GameObject interactableObject)
		{
			return default(PanelMenuItemControllerEventArgs);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xA23DD8", Offset = "0xA23DD8", VA = "0xA23DD8", Slot = "11")]
		public virtual void Show(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xA23E48", Offset = "0xA23E48", VA = "0xA23E48", Slot = "12")]
		public virtual void Hide(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xA23EB8", Offset = "0xA23EB8", VA = "0xA23EB8", Slot = "13")]
		public virtual void SwipeLeft(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xA23EF0", Offset = "0xA23EF0", VA = "0xA23EF0", Slot = "14")]
		public virtual void SwipeRight(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xA23F28", Offset = "0xA23F28", VA = "0xA23F28", Slot = "15")]
		public virtual void SwipeTop(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xA23F60", Offset = "0xA23F60", VA = "0xA23F60", Slot = "16")]
		public virtual void SwipeBottom(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xA23F98", Offset = "0xA23F98", VA = "0xA23F98", Slot = "17")]
		public virtual void TriggerPressed(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xA23FD4", Offset = "0xA23FD4", VA = "0xA23FD4", Slot = "18")]
		protected virtual void OnPanelMenuItemTriggerPressed(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xA23FF8", Offset = "0xA23FF8", VA = "0xA23FF8")]
		public VRTK_PanelMenuItemController()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public delegate void PointerDirectionIndicatorEventHandler(object sender);
	[Token(Token = "0x2000121")]
	public class VRTK_PointerDirectionIndicator : MonoBehaviour
	{
		[Token(Token = "0x200044D")]
		public enum VisibilityState
		{
			[Token(Token = "0x4001F1F")]
			OnWhenPointerActive,
			[Token(Token = "0x4001F20")]
			AlwaysOnWithPointerCursor
		}

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656BE8", Offset = "0x656BE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656BE8", Offset = "0x656BE8")]
		public Vector2 touchpadDeadzone;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656C48", Offset = "0x656C48")]
		public VRTK_ControllerEvents.Vector2AxisAlias coordinateAxis;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656C80", Offset = "0x656C80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656C80", Offset = "0x656C80")]
		public bool includeHeadsetOffset;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656CE0", Offset = "0x656CE0")]
		public bool displayOnInvalidLocation;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656D18", Offset = "0x656D18")]
		public bool usePointerColor;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656D50", Offset = "0x656D50")]
		public VisibilityState indicatorVisibility;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x656D88", Offset = "0x656D88")]
		public bool isActive;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform playArea;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform headset;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject validLocation;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject invalidLocation;

		[Token(Token = "0x14000031")]
		public event PointerDirectionIndicatorEventHandler PointerDirectionIndicatorPositionSet
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xA2DAF4", Offset = "0xA2DAF4", VA = "0xA2DAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D01C", Offset = "0x66D01C")]
			add
			{
			}
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xA2DBE0", Offset = "0xA2DBE0", VA = "0xA2DBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D02C", Offset = "0x66D02C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xA2DCCC", Offset = "0xA2DCCC", VA = "0xA2DCCC", Slot = "4")]
		public virtual void OnPointerDirectionIndicatorPositionSet()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xA2DCE8", Offset = "0xA2DCE8", VA = "0xA2DCE8", Slot = "5")]
		public virtual void Initialize(VRTK_ControllerEvents events)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xA2DD70", Offset = "0xA2DD70", VA = "0xA2DD70", Slot = "6")]
		public virtual void SetPosition(bool active, Vector3 position)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xA2DE20", Offset = "0xA2DE20", VA = "0xA2DE20", Slot = "7")]
		public virtual Quaternion GetRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xA2DF10", Offset = "0xA2DF10", VA = "0xA2DF10", Slot = "8")]
		public virtual void SetMaterialColor(Color color, bool validity)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xA2E0DC", Offset = "0xA2E0DC", VA = "0xA2E0DC", Slot = "9")]
		public virtual VRTK_ControllerEvents GetControllerEvents()
		{
			return null;
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xA2E0E4", Offset = "0xA2E0E4", VA = "0xA2E0E4", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xA2E1E0", Offset = "0xA2E1E0", VA = "0xA2E1E0", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xA2E39C", Offset = "0xA2E39C", VA = "0xA2E39C", Slot = "12")]
		protected virtual bool InsideDeadzone(Vector2 currentAxis)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xA2E498", Offset = "0xA2E498", VA = "0xA2E498")]
		public VRTK_PointerDirectionIndicator()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class RadialButtonIcon : MonoBehaviour
	{
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xB4C874", Offset = "0xB4C874", VA = "0xB4C874")]
		public RadialButtonIcon()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648F40", Offset = "0x648F40")]
	public class UICircle : Graphic
	{
		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x656DA8", Offset = "0x656DA8")]
		public int fillPercent;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool fill;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int thickness;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x656DC4", Offset = "0x656DC4")]
		public int segments;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected Texture setTexture;

		[Token(Token = "0x170000CB")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x7E790C", Offset = "0x7E790C", VA = "0x7E790C", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public Texture texture
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x7E79B8", Offset = "0x7E79B8", VA = "0x7E79B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x7E79C0", Offset = "0x7E79C0", VA = "0x7E79C0")]
			set
			{
			}
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x7E7A7C", Offset = "0x7E7A7C", VA = "0x7E7A7C", Slot = "50")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x7E7B58", Offset = "0x7E7B58", VA = "0x7E7B58", Slot = "51")]
		protected virtual UIVertex[] SetVbo(Vector2[] vertices, Vector2[] uvs)
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x7E7DD8", Offset = "0x7E7DD8", VA = "0x7E7DD8", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x7E832C", Offset = "0x7E832C", VA = "0x7E832C")]
		public UICircle()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class VRTK_IndependentRadialMenuController : VRTK_RadialMenuController
	{
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D738", Offset = "0x64D738")]
		private sealed class <DelayedSetColliderEnabled>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_IndependentRadialMenuController <>4__this;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool enabled;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InteractableObjectEventArgs e;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600225A")]
				[Address(RVA = "0xBEA790", Offset = "0xBEA790", VA = "0xBEA790", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600225C")]
				[Address(RVA = "0xBEA800", Offset = "0xBEA800", VA = "0xBEA800", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002257")]
			[Address(RVA = "0xBEA5BC", Offset = "0xBEA5BC", VA = "0xBEA5BC")]
			[DebuggerHidden]
			public <DelayedSetColliderEnabled>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002258")]
			[Address(RVA = "0xBEA6AC", Offset = "0xBEA6AC", VA = "0xBEA6AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002259")]
			[Address(RVA = "0xBEA6B0", Offset = "0xBEA6B0", VA = "0xBEA6B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600225B")]
			[Address(RVA = "0xBEA798", Offset = "0xBEA798", VA = "0xBEA798", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656DF0", Offset = "0x656DF0")]
		public VRTK_InteractableObject eventsManager;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656E28", Offset = "0x656E28")]
		public bool addMenuCollider;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656E60", Offset = "0x656E60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x656E60", Offset = "0x656E60")]
		public float colliderRadiusMultiplier;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656EB4", Offset = "0x656EB4")]
		public bool hideAfterExecution;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656EEC", Offset = "0x656EEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x656EEC", Offset = "0x656EEC")]
		public float offsetMultiplier;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656F40", Offset = "0x656F40")]
		public GameObject rotateTowards;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<GameObject> interactingObjects;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected HashSet<GameObject> collidingObjects;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected SphereCollider menuCollider;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Coroutine delayedSetColliderEnabledRoutine;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 desiredColliderCenter;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Quaternion initialRotation;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected bool isClicked;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		protected bool waitingToDisableCollider;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected int counter;

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xBE82A4", Offset = "0xBE82A4", VA = "0xBE82A4", Slot = "20")]
		public virtual void UpdateEventsManager()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xBE85D0", Offset = "0xBE85D0", VA = "0xBE85D0", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xBE8D98", Offset = "0xBE8D98", VA = "0xBE8D98", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xBE8E18", Offset = "0xBE8E18", VA = "0xBE8E18", Slot = "21")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xBE8E24", Offset = "0xBE8E24", VA = "0xBE8E24", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xBE900C", Offset = "0xBE900C", VA = "0xBE900C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xBE91E8", Offset = "0xBE91E8", VA = "0xBE91E8", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xBE9250", Offset = "0xBE9250", VA = "0xBE9250", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xBE9700", Offset = "0xBE9700", VA = "0xBE9700", Slot = "24")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xBE9760", Offset = "0xBE9760", VA = "0xBE9760", Slot = "13")]
		protected override void AttemptHapticPulse(float strength)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xBE984C", Offset = "0xBE984C", VA = "0xBE984C", Slot = "25")]
		protected virtual void ObjectClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xBE98CC", Offset = "0xBE98CC", VA = "0xBE98CC", Slot = "26")]
		protected virtual void ObjectUnClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xBE99C4", Offset = "0xBE99C4", VA = "0xBE99C4", Slot = "27")]
		protected virtual void ObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xBE9B00", Offset = "0xBE9B00", VA = "0xBE9B00", Slot = "28")]
		protected virtual void ObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xBE9D24", Offset = "0xBE9D24", VA = "0xBE9D24", Slot = "29")]
		protected virtual TouchAngleDeflection CalculateAngle(GameObject interactingObject)
		{
			return default(TouchAngleDeflection);
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xBE9FF8", Offset = "0xBE9FF8", VA = "0xBE9FF8", Slot = "30")]
		protected virtual float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xBEA14C", Offset = "0xBEA14C", VA = "0xBEA14C", Slot = "31")]
		protected virtual void ImmediatelyHideMenu(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xBEA1B0", Offset = "0xBEA1B0", VA = "0xBEA1B0", Slot = "32")]
		protected virtual void SetColliderState(bool state, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xBEA4E4", Offset = "0xBEA4E4", VA = "0xBEA4E4", Slot = "33")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D03C", Offset = "0x66D03C")]
		protected virtual IEnumerator DelayedSetColliderEnabled(bool enabled, float delay, InteractableObjectEventArgs e)
		{
			return null;
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xBEA5E8", Offset = "0xBEA5E8", VA = "0xBEA5E8")]
		public VRTK_IndependentRadialMenuController()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public struct TouchAngleDeflection
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float angle;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float deflection;

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x6E7018", Offset = "0x6E7018", VA = "0x6E7018")]
		public TouchAngleDeflection(float angle, float deflection)
		{
		}
	}
	[Token(Token = "0x2000126")]
	public delegate void HapticPulseEventHandler(float strength);
	[Token(Token = "0x2000127")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648F50", Offset = "0x648F50")]
	public class VRTK_RadialMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200044F")]
		public class RadialMenuButton
		{
			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite ButtonIcon;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent OnClick;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent OnHold;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent OnHoverEnter;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityEvent OnHoverExit;

			[Token(Token = "0x600225D")]
			[Address(RVA = "0xA31C24", Offset = "0xA31C24", VA = "0xA31C24")]
			public RadialMenuButton()
			{
			}
		}

		[Token(Token = "0x2000450")]
		public enum ButtonEvent
		{
			[Token(Token = "0x4001F2D")]
			hoverOn,
			[Token(Token = "0x4001F2E")]
			hoverOff,
			[Token(Token = "0x4001F2F")]
			click,
			[Token(Token = "0x4001F30")]
			unclick
		}

		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D748", Offset = "0x64D748")]
		private sealed class <TweenMenuScale>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool show;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_RadialMenu <>4__this;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetScale>5__2;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <Dir>5__3;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x1700028B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002261")]
				[Address(RVA = "0xA31BAC", Offset = "0xA31BAC", VA = "0xA31BAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002263")]
				[Address(RVA = "0xA31C1C", Offset = "0xA31C1C", VA = "0xA31C1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600225E")]
			[Address(RVA = "0xA31610", Offset = "0xA31610", VA = "0xA31610")]
			[DebuggerHidden]
			public <TweenMenuScale>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x600225F")]
			[Address(RVA = "0xA3183C", Offset = "0xA3183C", VA = "0xA3183C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002260")]
			[Address(RVA = "0xA31840", Offset = "0xA31840", VA = "0xA31840", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002262")]
			[Address(RVA = "0xA31BB4", Offset = "0xA31BB4", VA = "0xA31BB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656F78", Offset = "0x656F78")]
		public List<RadialMenuButton> buttons;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656FB0", Offset = "0x656FB0")]
		public GameObject buttonPrefab;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656FE8", Offset = "0x656FE8")]
		public bool generateOnAwake;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657020", Offset = "0x657020")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x657020", Offset = "0x657020")]
		public float buttonThickness;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657074", Offset = "0x657074")]
		public Color buttonColor;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6570AC", Offset = "0x6570AC")]
		public float offsetDistance;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6570E4", Offset = "0x6570E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6570E4", Offset = "0x6570E4")]
		public float offsetRotation;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65713C", Offset = "0x65713C")]
		public bool rotateIcons;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657174", Offset = "0x657174")]
		public float iconMargin;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6571AC", Offset = "0x6571AC")]
		public bool isShown;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6571E4", Offset = "0x6571E4")]
		public bool hideOnRelease;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65721C", Offset = "0x65721C")]
		public bool executeOnUnclick;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657254", Offset = "0x657254")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x657254", Offset = "0x657254")]
		public float baseHapticStrength;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6572A8", Offset = "0x6572A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6572A8", Offset = "0x6572A8")]
		public float deadZone;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65730C", Offset = "0x65730C")]
		public List<GameObject> menuButtons;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected int currentHover;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected int currentPress;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Coroutine tweenMenuScaleRoutine;

		[Token(Token = "0x14000032")]
		public event HapticPulseEventHandler FireHapticPulse
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0xA2FCB4", Offset = "0xA2FCB4", VA = "0xA2FCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D0A0", Offset = "0x66D0A0")]
			add
			{
			}
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0xA2FDA0", Offset = "0xA2FDA0", VA = "0xA2FDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D0B0", Offset = "0x66D0B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xA2FE8C", Offset = "0xA2FE8C", VA = "0xA2FE8C", Slot = "4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66D0C0", Offset = "0x66D0C0")]
		public virtual void HoverButton(float angle)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xA2FED0", Offset = "0xA2FED0", VA = "0xA2FED0", Slot = "5")]
		public virtual void HoverButton(TouchAngleDeflection givenTouchAngleDeflection)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xA2FEE4", Offset = "0xA2FEE4", VA = "0xA2FEE4", Slot = "6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66D0F8", Offset = "0x66D0F8")]
		public virtual void ClickButton(float angle)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xA2FF28", Offset = "0xA2FF28", VA = "0xA2FF28", Slot = "7")]
		public virtual void ClickButton(TouchAngleDeflection givenTouchAngleDeflection)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xA2FF3C", Offset = "0xA2FF3C", VA = "0xA2FF3C", Slot = "8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66D130", Offset = "0x66D130")]
		public virtual void UnClickButton(float angle)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xA2FF80", Offset = "0xA2FF80", VA = "0xA2FF80", Slot = "9")]
		public virtual void UnClickButton(TouchAngleDeflection givenTouchAngleDeflection)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xA2FF94", Offset = "0xA2FF94", VA = "0xA2FF94", Slot = "10")]
		public virtual void ToggleMenu()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xA2FFB8", Offset = "0xA2FFB8", VA = "0xA2FFB8", Slot = "11")]
		public virtual void StopTouching()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xA30130", Offset = "0xA30130", VA = "0xA30130", Slot = "12")]
		public virtual void ShowMenu()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xA30158", Offset = "0xA30158", VA = "0xA30158", Slot = "13")]
		public virtual RadialMenuButton GetButton(int id)
		{
			return null;
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xA30200", Offset = "0xA30200", VA = "0xA30200", Slot = "14")]
		public virtual void HideMenu(bool force)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xA30230", Offset = "0xA30230", VA = "0xA30230")]
		public void RegenerateButtons()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xA30CE0", Offset = "0xA30CE0", VA = "0xA30CE0")]
		public void AddButton(RadialMenuButton newButton)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xA30D4C", Offset = "0xA30D4C", VA = "0xA30D4C", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xA30E3C", Offset = "0xA30E3C", VA = "0xA30E3C", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xA30EE0", Offset = "0xA30EE0", VA = "0xA30EE0", Slot = "17")]
		protected virtual void InteractButton(TouchAngleDeflection givenTouchAngleDeflection, ButtonEvent evt)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xA31510", Offset = "0xA31510", VA = "0xA31510", Slot = "18")]
		protected virtual void InitTweenMenuScale(bool isShown)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xA31574", Offset = "0xA31574", VA = "0xA31574", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D168", Offset = "0x66D168")]
		protected virtual IEnumerator TweenMenuScale(bool show)
		{
			return null;
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xA3163C", Offset = "0xA3163C", VA = "0xA3163C", Slot = "20")]
		protected virtual void AttempHapticPulse(float strength)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xA31658", Offset = "0xA31658", VA = "0xA31658", Slot = "21")]
		protected virtual void RemoveAllButtons()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xA31778", Offset = "0xA31778", VA = "0xA31778")]
		public VRTK_RadialMenu()
		{
		}
	}
	[Token(Token = "0x2000128")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x648F60", Offset = "0x648F60")]
	public class VRTK_RadialMenuController : MonoBehaviour
	{
		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657344", Offset = "0x657344")]
		public VRTK_ControllerEvents events;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_RadialMenu menu;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TouchAngleDeflection currentTad;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool touchpadTouched;

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xA31CDC", Offset = "0xA31CDC", VA = "0xA31CDC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xA31D40", Offset = "0xA31D40", VA = "0xA31D40", Slot = "5")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xA31DD0", Offset = "0xA31DD0", VA = "0xA31DD0", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xA3218C", Offset = "0xA3218C", VA = "0xA3218C", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xA3236C", Offset = "0xA3236C", VA = "0xA3236C", Slot = "8")]
		protected virtual void DoClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xA323B4", Offset = "0xA323B4", VA = "0xA323B4", Slot = "9")]
		protected virtual void DoUnClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xA323FC", Offset = "0xA323FC", VA = "0xA323FC", Slot = "10")]
		protected virtual void DoShowMenu(TouchAngleDeflection initialTad, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xA32460", Offset = "0xA32460", VA = "0xA32460", Slot = "11")]
		protected virtual void DoHideMenu(bool force, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xA324CC", Offset = "0xA324CC", VA = "0xA324CC", Slot = "12")]
		protected virtual void DoChangeAngle(TouchAngleDeflection givenTouchAngleDeflection, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xA3251C", Offset = "0xA3251C", VA = "0xA3251C", Slot = "13")]
		protected virtual void AttemptHapticPulse(float strength)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xA32604", Offset = "0xA32604", VA = "0xA32604", Slot = "14")]
		protected virtual void DoTouchpadClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xA32614", Offset = "0xA32614", VA = "0xA32614", Slot = "15")]
		protected virtual void DoTouchpadUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xA32624", Offset = "0xA32624", VA = "0xA32624", Slot = "16")]
		protected virtual void DoTouchpadTouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xA326A0", Offset = "0xA326A0", VA = "0xA326A0", Slot = "17")]
		protected virtual void DoTouchpadUntouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xA326B8", Offset = "0xA326B8", VA = "0xA326B8", Slot = "18")]
		protected virtual void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xA32738", Offset = "0xA32738", VA = "0xA32738", Slot = "19")]
		protected virtual TouchAngleDeflection CalculateAngle(ControllerInteractionEventArgs e)
		{
			return default(TouchAngleDeflection);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xA32774", Offset = "0xA32774", VA = "0xA32774")]
		public VRTK_RadialMenuController()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class VRTK_SDKSetupSwitcher : MonoBehaviour
	{
		[Token(Token = "0x2000452")]
		protected enum ViewingState
		{
			[Token(Token = "0x4001F39")]
			Status,
			[Token(Token = "0x4001F3A")]
			Selection
		}

		[Serializable]
		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D758", Offset = "0x64D758")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKSetup, bool> <>9__18_0;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UnityAction <>9__20_0;

			[Token(Token = "0x6002265")]
			[Address(RVA = "0x9BC594", Offset = "0x9BC594", VA = "0x9BC594")]
			public <>c()
			{
			}

			[Token(Token = "0x6002266")]
			[Address(RVA = "0x9BC59C", Offset = "0x9BC59C", VA = "0x9BC59C")]
			internal bool <Show>b__18_0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x6002267")]
			[Address(RVA = "0x9BC64C", Offset = "0x9BC64C", VA = "0x9BC64C")]
			internal void <AddSelectionButtons>b__20_0()
			{
			}
		}

		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D768", Offset = "0x64D768")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRTK_SDKSetup[] setups;

			[Token(Token = "0x6002268")]
			[Address(RVA = "0x9BC3E4", Offset = "0x9BC3E4", VA = "0x9BC3E4")]
			public <>c__DisplayClass20_0()
			{
			}
		}

		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D778", Offset = "0x64D778")]
		private sealed class <>c__DisplayClass20_1
		{
			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int indexCopy;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass20_0 CS$<>8__locals1;

			[Token(Token = "0x6002269")]
			[Address(RVA = "0x9BC3EC", Offset = "0x9BC3EC", VA = "0x9BC3EC")]
			public <>c__DisplayClass20_1()
			{
			}

			[Token(Token = "0x600226A")]
			[Address(RVA = "0x9BC6AC", Offset = "0x9BC6AC", VA = "0x9BC6AC")]
			internal void <AddSelectionButtons>b__1()
			{
			}
		}

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65737C", Offset = "0x65737C")]
		[SerializeField]
		protected Camera fallbackCamera;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected EventSystem eventSystem;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6573D8", Offset = "0x6573D8")]
		[SerializeField]
		protected Text currentText;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected RectTransform statusPanel;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected RectTransform selectionPanel;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Button switchButton;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Button cancelButton;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected Button chooseButton;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected bool playareaSync;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected readonly List<GameObject> chooseButtonGameObjects;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform currentPlayarea;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x9BAF20", Offset = "0x9BAF20", VA = "0x9BAF20", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x9BAFE0", Offset = "0x9BAFE0", VA = "0x9BAFE0", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x9BB15C", Offset = "0x9BB15C", VA = "0x9BB15C", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x9BB2D8", Offset = "0x9BB2D8", VA = "0x9BB2D8", Slot = "7")]
		protected virtual void OnLoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x9BB6A0", Offset = "0x9BB6A0", VA = "0x9BB6A0", Slot = "8")]
		protected virtual void OnSwitchButtonClick()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x9BB6B0", Offset = "0x9BB6B0", VA = "0x9BB6B0", Slot = "9")]
		protected virtual void OnCancelButtonClick()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x9BB6C0", Offset = "0x9BB6C0", VA = "0x9BB6C0", Slot = "10")]
		protected virtual void Show(ViewingState viewingState)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x9BBB48", Offset = "0x9BBB48", VA = "0x9BBB48", Slot = "11")]
		protected virtual void UpdateCurrentText()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x9BBC3C", Offset = "0x9BBC3C", VA = "0x9BBC3C", Slot = "12")]
		protected virtual void AddSelectionButtons()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x9BC3F4", Offset = "0x9BC3F4", VA = "0x9BC3F4", Slot = "13")]
		protected virtual void RemoveCreatedChooseButtons()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x9BC4B8", Offset = "0x9BC4B8", VA = "0x9BC4B8")]
		public VRTK_SDKSetupSwitcher()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public struct SnapDropZoneEventArgs
	{
		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject snappedObject;
	}
	[Token(Token = "0x200012B")]
	public delegate void SnapDropZoneEventHandler(object sender, SnapDropZoneEventArgs e);
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x648FC4", Offset = "0x648FC4")]
	public class VRTK_SnapDropZone : MonoBehaviour
	{
		[Token(Token = "0x2000456")]
		public enum SnapTypes
		{
			[Token(Token = "0x4001F42")]
			UseKinematic,
			[Token(Token = "0x4001F43")]
			UseJoint,
			[Token(Token = "0x4001F44")]
			UseParenting
		}

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D788", Offset = "0x64D788")]
		private sealed class <CheckCanSnapObjectAtEndOfFrame>d__95 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_InteractableObject interactableObjectCheck;

			[Token(Token = "0x1700028D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600226E")]
				[Address(RVA = "0x9CB578", Offset = "0x9CB578", VA = "0x9CB578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002270")]
				[Address(RVA = "0x9CB5E8", Offset = "0x9CB5E8", VA = "0x9CB5E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0x9C900C", Offset = "0x9C900C", VA = "0x9C900C")]
			[DebuggerHidden]
			public <CheckCanSnapObjectAtEndOfFrame>d__95(int <>1__state)
			{
			}

			[Token(Token = "0x600226C")]
			[Address(RVA = "0x9CB4B4", Offset = "0x9CB4B4", VA = "0x9CB4B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600226D")]
			[Address(RVA = "0x9CB4B8", Offset = "0x9CB4B8", VA = "0x9CB4B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600226F")]
			[Address(RVA = "0x9CB580", Offset = "0x9CB580", VA = "0x9CB580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D798", Offset = "0x64D798")]
		private sealed class <UpdateTransformDimensions>d__96 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject ioCheck;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject endSettings;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 endScale;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Transform <ioTransform>5__3;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector3 <startPosition>5__4;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Quaternion <startRotation>5__5;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Vector3 <startScale>5__6;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <storedKinematicState>5__7;

			[Token(Token = "0x1700028F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002274")]
				[Address(RVA = "0x9CBD18", Offset = "0x9CBD18", VA = "0x9CBD18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000290")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002276")]
				[Address(RVA = "0x9CBD88", Offset = "0x9CBD88", VA = "0x9CBD88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002271")]
			[Address(RVA = "0x9C912C", Offset = "0x9C912C", VA = "0x9C912C")]
			[DebuggerHidden]
			public <UpdateTransformDimensions>d__96(int <>1__state)
			{
			}

			[Token(Token = "0x6002272")]
			[Address(RVA = "0x9CB74C", Offset = "0x9CB74C", VA = "0x9CB74C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002273")]
			[Address(RVA = "0x9CB750", Offset = "0x9CB750", VA = "0x9CB750", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002275")]
			[Address(RVA = "0x9CBD20", Offset = "0x9CBD20", VA = "0x9CBD20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D7A8", Offset = "0x64D7A8")]
		private sealed class <AttemptForceSnapAtEndOfFrame>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject objectToSnap;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x17000291")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600227A")]
				[Address(RVA = "0x9CB43C", Offset = "0x9CB43C", VA = "0x9CB43C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000292")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600227C")]
				[Address(RVA = "0x9CB4AC", Offset = "0x9CB4AC", VA = "0x9CB4AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002277")]
			[Address(RVA = "0x9C9C54", Offset = "0x9C9C54", VA = "0x9C9C54")]
			[DebuggerHidden]
			public <AttemptForceSnapAtEndOfFrame>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6002278")]
			[Address(RVA = "0x9CB354", Offset = "0x9CB354", VA = "0x9CB354", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002279")]
			[Address(RVA = "0x9CB358", Offset = "0x9CB358", VA = "0x9CB358", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600227B")]
			[Address(RVA = "0x9CB444", Offset = "0x9CB444", VA = "0x9CB444", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D7B8", Offset = "0x64D7B8")]
		private sealed class <OverridePreviousStateAtEndOfFrame>d__118 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject io;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform parent;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool kinematic;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool grabbable;

			[Token(Token = "0x17000293")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002280")]
				[Address(RVA = "0x9CB6D4", Offset = "0x9CB6D4", VA = "0x9CB6D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000294")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002282")]
				[Address(RVA = "0x9CB744", Offset = "0x9CB744", VA = "0x9CB744", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600227D")]
			[Address(RVA = "0x9CB278", Offset = "0x9CB278", VA = "0x9CB278")]
			[DebuggerHidden]
			public <OverridePreviousStateAtEndOfFrame>d__118(int <>1__state)
			{
			}

			[Token(Token = "0x600227E")]
			[Address(RVA = "0x9CB5F0", Offset = "0x9CB5F0", VA = "0x9CB5F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600227F")]
			[Address(RVA = "0x9CB5F4", Offset = "0x9CB5F4", VA = "0x9CB5F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0x9CB6DC", Offset = "0x9CB6DC", VA = "0x9CB6DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657484", Offset = "0x657484")]
		public GameObject highlightObjectPrefab;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6574BC", Offset = "0x6574BC")]
		public SnapTypes snapType;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6574F4", Offset = "0x6574F4")]
		public float snapDuration;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65752C", Offset = "0x65752C")]
		public bool applyScalingOnSnap;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657564", Offset = "0x657564")]
		public bool cloneNewOnUnsnap;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65759C", Offset = "0x65759C")]
		public Color highlightColor;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6575D4", Offset = "0x6575D4")]
		public Color validHighlightColor;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65760C", Offset = "0x65760C")]
		public bool highlightAlwaysActive;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657644", Offset = "0x657644")]
		public VRTK_PolicyList validObjectListPolicy;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65767C", Offset = "0x65767C")]
		public bool displayDropZoneInEditor;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6576B4", Offset = "0x6576B4")]
		public VRTK_InteractableObject defaultSnappedInteractableObject;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6576EC", Offset = "0x6576EC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6576EC", Offset = "0x6576EC")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x6576EC", Offset = "0x6576EC")]
		public GameObject defaultSnappedObject;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected GameObject previousPrefab;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject highlightContainer;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected GameObject highlightObject;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected GameObject highlightEditorObject;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected List<VRTK_InteractableObject> currentValidSnapInteractableObjects;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected VRTK_InteractableObject currentSnappedObject;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected GameObject objectToClone;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool[] clonedObjectColliderStates;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool willSnap;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		protected bool isSnapped;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		protected bool wasSnapped;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		protected bool isHighlighted;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Coroutine transitionInPlaceRoutine;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Coroutine attemptTransitionAtEndOfFrameRoutine;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Coroutine checkCanSnapRoutine;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected bool originalJointCollisionState;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Coroutine overridePreviousStateAtEndOfFrameRoutine;

		[Token(Token = "0x4000AD3")]
		protected const string HIGHLIGHT_CONTAINER_NAME = "HighlightContainer";

		[Token(Token = "0x4000AD4")]
		protected const string HIGHLIGHT_OBJECT_NAME = "HighlightObject";

		[Token(Token = "0x4000AD5")]
		protected const string HIGHLIGHT_EDITOR_OBJECT_NAME = "EditorHighlightObject";

		[Token(Token = "0x14000033")]
		public event SnapDropZoneEventHandler ObjectEnteredSnapDropZone
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x9C54E4", Offset = "0x9C54E4", VA = "0x9C54E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1CC", Offset = "0x66D1CC")]
			add
			{
			}
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x9C55D0", Offset = "0x9C55D0", VA = "0x9C55D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1DC", Offset = "0x66D1DC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event SnapDropZoneEventHandler ObjectExitedSnapDropZone
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x9C56BC", Offset = "0x9C56BC", VA = "0x9C56BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1EC", Offset = "0x66D1EC")]
			add
			{
			}
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x9C57A8", Offset = "0x9C57A8", VA = "0x9C57A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1FC", Offset = "0x66D1FC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event SnapDropZoneEventHandler ObjectSnappedToDropZone
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x9C5894", Offset = "0x9C5894", VA = "0x9C5894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D20C", Offset = "0x66D20C")]
			add
			{
			}
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x9C5980", Offset = "0x9C5980", VA = "0x9C5980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D21C", Offset = "0x66D21C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event SnapDropZoneEventHandler ObjectUnsnappedFromDropZone
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x9C5A6C", Offset = "0x9C5A6C", VA = "0x9C5A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D22C", Offset = "0x66D22C")]
			add
			{
			}
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x9C5B58", Offset = "0x9C5B58", VA = "0x9C5B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D23C", Offset = "0x66D23C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x9C5C44", Offset = "0x9C5C44", VA = "0x9C5C44", Slot = "4")]
		public virtual void OnObjectEnteredSnapDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x9C5C68", Offset = "0x9C5C68", VA = "0x9C5C68", Slot = "5")]
		public virtual void OnObjectExitedSnapDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x9C5C8C", Offset = "0x9C5C8C", VA = "0x9C5C8C", Slot = "6")]
		public virtual void OnObjectSnappedToDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x9C5CB0", Offset = "0x9C5CB0", VA = "0x9C5CB0", Slot = "7")]
		public virtual void OnObjectUnsnappedFromDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x9C5D04", Offset = "0x9C5D04", VA = "0x9C5D04", Slot = "8")]
		public virtual SnapDropZoneEventArgs SetSnapDropZoneEvent(GameObject interactableObject)
		{
			return default(SnapDropZoneEventArgs);
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x9C5D0C", Offset = "0x9C5D0C", VA = "0x9C5D0C", Slot = "9")]
		public virtual void InitaliseHighlightObject(bool removeOldObject = false)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x9C5DEC", Offset = "0x9C5DEC", VA = "0x9C5DEC", Slot = "10")]
		public virtual void ForceSnap(GameObject objectToSnap)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x9C5E68", Offset = "0x9C5E68", VA = "0x9C5E68", Slot = "11")]
		protected virtual void ForceSnap(VRTK_InteractableObject interactableObjectToSnap)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x9C5FA0", Offset = "0x9C5FA0", VA = "0x9C5FA0", Slot = "12")]
		public virtual void ForceUnsnap()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x9C601C", Offset = "0x9C601C", VA = "0x9C601C", Slot = "13")]
		public virtual bool ValidSnappableObjectIsHovering()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x9C60FC", Offset = "0x9C60FC", VA = "0x9C60FC", Slot = "14")]
		public virtual bool IsObjectHovering(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x9C61DC", Offset = "0x9C61DC", VA = "0x9C61DC", Slot = "15")]
		public virtual bool IsInteractableObjectHovering(VRTK_InteractableObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x9C6294", Offset = "0x9C6294", VA = "0x9C6294", Slot = "16")]
		public virtual List<GameObject> GetHoveringObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x9C63A8", Offset = "0x9C63A8", VA = "0x9C63A8", Slot = "17")]
		public virtual List<VRTK_InteractableObject> GetHoveringInteractableObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x9C63B0", Offset = "0x9C63B0", VA = "0x9C63B0", Slot = "18")]
		public virtual GameObject GetCurrentSnappedObject()
		{
			return null;
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x9C6450", Offset = "0x9C6450", VA = "0x9C6450", Slot = "19")]
		public virtual VRTK_InteractableObject GetCurrentSnappedInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x9C6458", Offset = "0x9C6458", VA = "0x9C6458", Slot = "20")]
		public virtual GameObject Clone(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x9C689C", Offset = "0x9C689C", VA = "0x9C689C", Slot = "21")]
		public virtual GameObject Clone()
		{
			return null;
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x9C6914", Offset = "0x9C6914", VA = "0x9C6914", Slot = "22")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x9C6958", Offset = "0x9C6958", VA = "0x9C6958", Slot = "23")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x9C6A1C", Offset = "0x9C6A1C", VA = "0x9C6A1C", Slot = "24")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x9C6BA8", Offset = "0x9C6BA8", VA = "0x9C6BA8", Slot = "25")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x9C6C4C", Offset = "0x9C6C4C", VA = "0x9C6C4C", Slot = "26")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x9C6CCC", Offset = "0x9C6CCC", VA = "0x9C6CCC", Slot = "27")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x9C6D4C", Offset = "0x9C6D4C", VA = "0x9C6D4C", Slot = "28")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x9C6DCC", Offset = "0x9C6DCC", VA = "0x9C6DCC", Slot = "29")]
		protected virtual void CheckCanSnap(VRTK_InteractableObject interactableObjectCheck)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x9C6F38", Offset = "0x9C6F38", VA = "0x9C6F38", Slot = "30")]
		protected virtual void CheckCanUnsnap(VRTK_InteractableObject interactableObjectCheck)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x9C7134", Offset = "0x9C7134", VA = "0x9C7134", Slot = "31")]
		protected virtual bool ValidUnsnap(VRTK_InteractableObject interactableObjectCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x9C7208", Offset = "0x9C7208", VA = "0x9C7208", Slot = "32")]
		protected virtual void SnapObjectToZone(VRTK_InteractableObject objectToSnap)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x9C7274", Offset = "0x9C7274", VA = "0x9C7274", Slot = "33")]
		protected virtual void UnregisterAllUngrabEvents()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x9C73DC", Offset = "0x9C73DC", VA = "0x9C73DC", Slot = "34")]
		protected virtual bool ValidSnapObject(VRTK_InteractableObject interactableObjectCheck, bool grabState, bool checkGrabState = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x9C74D0", Offset = "0x9C74D0", VA = "0x9C74D0", Slot = "35")]
		protected virtual string ObjectPath(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x9C7524", Offset = "0x9C7524", VA = "0x9C7524", Slot = "36")]
		protected virtual void CheckSnappedItemExists()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x9C7678", Offset = "0x9C7678", VA = "0x9C7678", Slot = "37")]
		protected virtual void CheckPrefabUpdate()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x9C774C", Offset = "0x9C774C", VA = "0x9C774C", Slot = "38")]
		protected virtual void SetObjectHighlight()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x9C77F0", Offset = "0x9C77F0", VA = "0x9C77F0", Slot = "39")]
		protected virtual void ToggleHighlightColor()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x9C7990", Offset = "0x9C7990", VA = "0x9C7990", Slot = "40")]
		protected virtual void CreateHighlightersInEditor()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x9C79CC", Offset = "0x9C79CC", VA = "0x9C79CC", Slot = "41")]
		protected virtual void CheckCurrentValidSnapObjectStillValid()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x9C7BCC", Offset = "0x9C7BCC", VA = "0x9C7BCC", Slot = "42")]
		protected virtual void ForceSetObjects()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x9C7E78", Offset = "0x9C7E78", VA = "0x9C7E78", Slot = "43")]
		protected virtual void GenerateContainer()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x9C814C", Offset = "0x9C814C", VA = "0x9C814C", Slot = "44")]
		protected virtual void DisableHighlightShadows()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x9C8298", Offset = "0x9C8298", VA = "0x9C8298", Slot = "45")]
		protected virtual void SetContainer()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x9C8360", Offset = "0x9C8360", VA = "0x9C8360", Slot = "46")]
		protected virtual void GenerateObjects()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x9C8444", Offset = "0x9C8444", VA = "0x9C8444", Slot = "47")]
		protected virtual void SnapObject(VRTK_InteractableObject interactableObjectCheck)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x9C86B4", Offset = "0x9C86B4", VA = "0x9C86B4", Slot = "48")]
		protected virtual void CreatePermanentClone()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x9C8A38", Offset = "0x9C8A38", VA = "0x9C8A38", Slot = "49")]
		protected virtual void ResetPermanentCloneColliders(GameObject objectToReset)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x9C8BB4", Offset = "0x9C8BB4", VA = "0x9C8BB4", Slot = "50")]
		protected virtual void ResnapPermanentClone()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x9C8C8C", Offset = "0x9C8C8C", VA = "0x9C8C8C", Slot = "51")]
		protected virtual void UnsnapObject()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x9C8E14", Offset = "0x9C8E14", VA = "0x9C8E14", Slot = "52")]
		protected virtual Vector3 GetNewLocalScale(VRTK_InteractableObject checkObject)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x9C8F74", Offset = "0x9C8F74", VA = "0x9C8F74", Slot = "53")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D24C", Offset = "0x66D24C")]
		protected virtual IEnumerator CheckCanSnapObjectAtEndOfFrame(VRTK_InteractableObject interactableObjectCheck)
		{
			return null;
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x9C9038", Offset = "0x9C9038", VA = "0x9C9038", Slot = "54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D2B0", Offset = "0x66D2B0")]
		protected virtual IEnumerator UpdateTransformDimensions(VRTK_InteractableObject ioCheck, GameObject endSettings, Vector3 endScale, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x9C9158", Offset = "0x9C9158", VA = "0x9C9158", Slot = "55")]
		protected virtual void SetDropSnapType(VRTK_InteractableObject ioCheck)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x9C92D0", Offset = "0x9C92D0", VA = "0x9C92D0", Slot = "56")]
		protected virtual void SetSnapDropZoneJoint(Rigidbody snapTo)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x9C96F0", Offset = "0x9C96F0", VA = "0x9C96F0", Slot = "57")]
		protected virtual void ResetSnapDropZoneJoint()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x9C97AC", Offset = "0x9C97AC", VA = "0x9C97AC", Slot = "58")]
		protected virtual void AddCurrentValidSnapObject(VRTK_InteractableObject givenObject)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x9C98D8", Offset = "0x9C98D8", VA = "0x9C98D8", Slot = "59")]
		protected virtual void RemoveCurrentValidSnapObject(VRTK_InteractableObject givenObject)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x9C9A10", Offset = "0x9C9A10", VA = "0x9C9A10", Slot = "60")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x9C9AD8", Offset = "0x9C9AD8", VA = "0x9C9AD8", Slot = "61")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x9C9BA4", Offset = "0x9C9BA4", VA = "0x9C9BA4", Slot = "62")]
		protected virtual void AttemptForceSnap(VRTK_InteractableObject objectToSnap)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x9C9BBC", Offset = "0x9C9BBC", VA = "0x9C9BBC", Slot = "63")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D314", Offset = "0x66D314")]
		protected virtual IEnumerator AttemptForceSnapAtEndOfFrame(VRTK_InteractableObject objectToSnap)
		{
			return null;
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x9C9C80", Offset = "0x9C9C80", VA = "0x9C9C80", Slot = "64")]
		protected virtual void ToggleHighlight(VRTK_InteractableObject checkObject, bool state)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x9C9D54", Offset = "0x9C9D54", VA = "0x9C9D54", Slot = "65")]
		protected virtual void CopyObject(GameObject objectBlueprint, ref GameObject clonedObject, string givenName)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x9CA01C", Offset = "0x9CA01C", VA = "0x9CA01C", Slot = "66")]
		protected virtual void GenerateHighlightObject()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x9CA2FC", Offset = "0x9CA2FC", VA = "0x9CA2FC", Slot = "67")]
		protected virtual void SetHighlightObjectActive(bool state)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x9CA3A8", Offset = "0x9CA3A8", VA = "0x9CA3A8", Slot = "68")]
		protected virtual void DeleteHighlightObject()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x9CA438", Offset = "0x9CA438", VA = "0x9CA438", Slot = "69")]
		protected virtual void GenerateEditorHighlightObject()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x9CA6BC", Offset = "0x9CA6BC", VA = "0x9CA6BC", Slot = "70")]
		protected virtual void CleanHighlightObject(GameObject objectToClean)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x9CAB48", Offset = "0x9CAB48", VA = "0x9CAB48", Slot = "71")]
		protected virtual void InitialiseHighlighter()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x9CAE20", Offset = "0x9CAE20", VA = "0x9CAE20", Slot = "72")]
		protected virtual void ChooseDestroyType(Transform deleteTransform)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x9CAEDC", Offset = "0x9CAEDC", VA = "0x9CAEDC", Slot = "73")]
		protected virtual void ChooseDestroyType(GameObject deleteObject)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x9CAF7C", Offset = "0x9CAF7C", VA = "0x9CAF7C", Slot = "74")]
		protected virtual void ChooseDestroyType(Component deleteComponent)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x9CB01C", Offset = "0x9CB01C", VA = "0x9CB01C", Slot = "75")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x9CB1A0", Offset = "0x9CB1A0", VA = "0x9CB1A0", Slot = "76")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D378", Offset = "0x66D378")]
		protected virtual IEnumerator OverridePreviousStateAtEndOfFrame(VRTK_InteractableObject io, Transform parent, bool kinematic, bool grabbable)
		{
			return null;
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x9CB2A4", Offset = "0x9CB2A4", VA = "0x9CB2A4")]
		public VRTK_SnapDropZone()
		{
		}
	}
	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x648FD4", Offset = "0x648FD4")]
	public class VRTK_ContentHandler : MonoBehaviour
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65779C", Offset = "0x65779C")]
		public VRTK_Control control;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6577D4", Offset = "0x6577D4")]
		public Transform inside;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65780C", Offset = "0x65780C")]
		public Transform outside;

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xD9C68C", Offset = "0xD9C68C", VA = "0xD9C68C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xD9C878", Offset = "0xD9C878", VA = "0xD9C878", Slot = "5")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xD9CA3C", Offset = "0xD9CA3C", VA = "0xD9CA3C")]
		public VRTK_ContentHandler()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public delegate void Button3DEventHandler(object sender, Control3DEventArgs e);
	[Token(Token = "0x200012F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64900C", Offset = "0x64900C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x64900C", Offset = "0x64900C")]
	public class VRTK_Button : VRTK_Control
	{
		[Token(Token = "0x200045B")]
		public enum ButtonDirection
		{
			[Token(Token = "0x4001F61")]
			autodetect,
			[Token(Token = "0x4001F62")]
			x,
			[Token(Token = "0x4001F63")]
			y,
			[Token(Token = "0x4001F64")]
			z,
			[Token(Token = "0x4001F65")]
			negX,
			[Token(Token = "0x4001F66")]
			negY,
			[Token(Token = "0x4001F67")]
			negZ
		}

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657844", Offset = "0x657844")]
		public GameObject connectedTo;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65787C", Offset = "0x65787C")]
		public ButtonDirection direction;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6578B4", Offset = "0x6578B4")]
		public float activationDistance;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6578EC", Offset = "0x6578EC")]
		public float buttonStrength;

		[Token(Token = "0x4000ADF")]
		protected const float MAX_AUTODETECT_ACTIVATION_LENGTH = 4f;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected ButtonDirection finalDirection;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected Vector3 restingPosition;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 activationDir;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody buttonRigidbody;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected ConfigurableJoint buttonJoint;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected ConstantForce buttonForce;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected int forceCount;

		[Token(Token = "0x14000037")]
		public event Button3DEventHandler Pushed
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xCB8F74", Offset = "0xCB8F74", VA = "0xCB8F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D3DC", Offset = "0x66D3DC")]
			add
			{
			}
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0xCB9060", Offset = "0xCB9060", VA = "0xCB9060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D3EC", Offset = "0x66D3EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Button3DEventHandler Released
		{
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0xCB914C", Offset = "0xCB914C", VA = "0xCB914C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D3FC", Offset = "0x66D3FC")]
			add
			{
			}
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0xCB9238", Offset = "0xCB9238", VA = "0xCB9238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D40C", Offset = "0x66D40C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xCB9324", Offset = "0xCB9324", VA = "0xCB9324", Slot = "19")]
		public virtual void OnPushed(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xCB9340", Offset = "0xCB9340", VA = "0xCB9340", Slot = "20")]
		public virtual void OnReleased(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xCB935C", Offset = "0xCB935C", VA = "0xCB935C", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xCB94A0", Offset = "0xCB94A0", VA = "0xCB94A0", Slot = "21")]
		protected virtual void SetupCollider()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xCB9564", Offset = "0xCB9564", VA = "0xCB9564", Slot = "22")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xCB966C", Offset = "0xCB966C", VA = "0xCB966C", Slot = "23")]
		protected virtual void SetupConstantForce()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xCB972C", Offset = "0xCB972C", VA = "0xCB972C", Slot = "24")]
		protected virtual void SetupConnectedTo()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xCB9854", Offset = "0xCB9854", VA = "0xCB9854", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xCB98E4", Offset = "0xCB98E4", VA = "0xCB98E4", Slot = "25")]
		protected virtual void DetectJointSetup()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xCB9CAC", Offset = "0xCB9CAC", VA = "0xCB9CAC", Slot = "26")]
		protected virtual void DetectJointLimitsSetup()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xCB9DF4", Offset = "0xCB9DF4", VA = "0xCB9DF4", Slot = "27")]
		protected virtual void DetectJointDirectionSetup()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xCBA1E8", Offset = "0xCBA1E8", VA = "0xCBA1E8", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xCBA394", Offset = "0xCBA394", VA = "0xCBA394", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xCBA3A0", Offset = "0xCBA3A0", VA = "0xCBA3A0", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xCBA454", Offset = "0xCBA454", VA = "0xCBA454", Slot = "28")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xCBA520", Offset = "0xCBA520", VA = "0xCBA520", Slot = "29")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xCBA530", Offset = "0xCBA530", VA = "0xCBA530", Slot = "30")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xCBA540", Offset = "0xCBA540", VA = "0xCBA540", Slot = "31")]
		protected virtual ButtonDirection DetectDirection()
		{
			return default(ButtonDirection);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xCBB1F4", Offset = "0xCBB1F4", VA = "0xCBB1F4", Slot = "32")]
		protected virtual Vector3 CalculateActivationDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xCBB8B8", Offset = "0xCBB8B8", VA = "0xCBB8B8", Slot = "33")]
		protected virtual bool ReachedActivationDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xCBB994", Offset = "0xCBB994", VA = "0xCBB994", Slot = "34")]
		protected virtual Vector3 GetForceVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xCBBA38", Offset = "0xCBBA38", VA = "0xCBBA38")]
		public VRTK_Button()
		{
		}
	}
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64906C", Offset = "0x64906C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x64906C", Offset = "0x64906C")]
	public class VRTK_Chest : VRTK_Control
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657944", Offset = "0x657944")]
		public Direction direction;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65797C", Offset = "0x65797C")]
		public GameObject lid;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6579B4", Offset = "0x6579B4")]
		public GameObject body;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6579EC", Offset = "0x6579EC")]
		public GameObject handle;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657A24", Offset = "0x657A24")]
		public GameObject content;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657A5C", Offset = "0x657A5C")]
		public bool hideContent;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657A94", Offset = "0x657A94")]
		public float maxAngle;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float minAngle;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected float stepSize;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Rigidbody bodyRigidbody;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody handleRigidbody;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected FixedJoint handleJoint;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody lidRigidbody;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected HingeJoint lidJoint;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool lidJointCreated;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected Direction finalDirection;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected float subDirection;

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xCBC330", Offset = "0xCBC330", VA = "0xCBC330", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xCBC6E4", Offset = "0xCBC6E4", VA = "0xCBC6E4", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xCBC74C", Offset = "0xCBC74C", VA = "0xCBC74C", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xCBCD08", Offset = "0xCBCD08", VA = "0xCBCD08", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xCBCDC4", Offset = "0xCBCDC4", VA = "0xCBCDC4", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xCBCDF4", Offset = "0xCBCDF4", VA = "0xCBCDF4", Slot = "19")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xCBD29C", Offset = "0xCBD29C", VA = "0xCBD29C", Slot = "20")]
		protected virtual void InitBody()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xCBD388", Offset = "0xCBD388", VA = "0xCBD388", Slot = "21")]
		protected virtual void InitLid()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xCBD55C", Offset = "0xCBD55C", VA = "0xCBD55C", Slot = "22")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xCBD768", Offset = "0xCBD768", VA = "0xCBD768", Slot = "23")]
		protected virtual void CreateInteractableObject(GameObject targetGameObject)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xCBD8C4", Offset = "0xCBD8C4", VA = "0xCBD8C4", Slot = "24")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xCBDA94", Offset = "0xCBDA94", VA = "0xCBDA94")]
		public VRTK_Chest()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public struct Control3DEventArgs
	{
		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float value;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float normalizedValue;
	}
	[Token(Token = "0x2000132")]
	public delegate void Control3DEventHandler(object sender, Control3DEventArgs e);
	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x6490CC", Offset = "0x6490CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6490CC", Offset = "0x6490CC")]
	public abstract class VRTK_Control : MonoBehaviour
	{
		[Token(Token = "0x200045C")]
		public struct ControlValueRange
		{
			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float controlMin;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float controlMax;
		}

		[Token(Token = "0x200045D")]
		public enum Direction
		{
			[Token(Token = "0x4001F6B")]
			autodetect,
			[Token(Token = "0x4001F6C")]
			x,
			[Token(Token = "0x4001F6D")]
			y,
			[Token(Token = "0x4001F6E")]
			z
		}

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657ACC", Offset = "0x657ACC")]
		public bool interactWithoutGrab;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Bounds bounds;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool setupSuccessful;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ControllerRigidbodyActivator autoTriggerVolume;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float value;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Color COLOR_OK;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static Color COLOR_ERROR;

		[Token(Token = "0x4000B02")]
		protected const float MIN_OPENING_DISTANCE = 20f;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected ControlValueRange valueRange;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject controlContent;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool hideControlContent;

		[Token(Token = "0x14000039")]
		public event Control3DEventHandler ValueChanged
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0xD9CA44", Offset = "0xD9CA44", VA = "0xD9CA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D41C", Offset = "0x66D41C")]
			add
			{
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xD9CB30", Offset = "0xD9CB30", VA = "0xD9CB30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D42C", Offset = "0x66D42C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CDB")]
		protected abstract void InitRequiredComponents();

		[Token(Token = "0x6000CDC")]
		protected abstract bool DetectSetup();

		[Token(Token = "0x6000CDD")]
		protected abstract ControlValueRange RegisterValueRange();

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xD9CC1C", Offset = "0xD9CC1C", VA = "0xD9CC1C", Slot = "7")]
		public virtual void OnValueChanged(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xD9CC38", Offset = "0xD9CC38", VA = "0xD9CC38", Slot = "8")]
		public virtual float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xD9CC40", Offset = "0xD9CC40", VA = "0xD9CC40", Slot = "9")]
		public virtual float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xD9CD48", Offset = "0xD9CD48", VA = "0xD9CD48", Slot = "10")]
		public virtual void SetContent(GameObject content, bool hideContent)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xD9CD58", Offset = "0xD9CD58", VA = "0xD9CD58", Slot = "11")]
		public virtual GameObject GetContent()
		{
			return null;
		}

		[Token(Token = "0x6000CE3")]
		protected abstract void HandleUpdate();

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xD9CD60", Offset = "0xD9CD60", VA = "0xD9CD60", Slot = "13")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xD9CE08", Offset = "0xD9CE08", VA = "0xD9CE08", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xD9CEBC", Offset = "0xD9CEBC", VA = "0xD9CEBC", Slot = "15")]
		protected virtual Control3DEventArgs SetControlEvent()
		{
			return default(Control3DEventArgs);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xD9CF08", Offset = "0xD9CF08", VA = "0xD9CF08", Slot = "16")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xD9D0EC", Offset = "0xD9D0EC", VA = "0xD9D0EC", Slot = "17")]
		protected virtual void CreateTriggerVolume()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xD9D368", Offset = "0xD9D368", VA = "0xD9D368")]
		protected Vector3 GetThirdDirection(Vector3 axis1, Vector3 axis2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xD9D4B4", Offset = "0xD9D4B4", VA = "0xD9D4B4", Slot = "18")]
		protected virtual void HandleInteractables()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xD9D608", Offset = "0xD9D608", VA = "0xD9D608")]
		protected VRTK_Control()
		{
		}
	}
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649118", Offset = "0x649118")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x649118", Offset = "0x649118")]
	public class VRTK_Door : VRTK_Control
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657B14", Offset = "0x657B14")]
		public Direction direction;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657B4C", Offset = "0x657B4C")]
		public GameObject door;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657B84", Offset = "0x657B84")]
		public GameObject handles;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657BBC", Offset = "0x657BBC")]
		public GameObject frame;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657BF4", Offset = "0x657BF4")]
		public GameObject content;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657C2C", Offset = "0x657C2C")]
		public bool hideContent;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657C64", Offset = "0x657C64")]
		public float maxAngle;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657C9C", Offset = "0x657C9C")]
		public bool openInward;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657CD4", Offset = "0x657CD4")]
		public bool openOutward;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657D0C", Offset = "0x657D0C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x657D0C", Offset = "0x657D0C")]
		public float minSnapClose;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657D60", Offset = "0x657D60")]
		public float releasedFriction;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657D98", Offset = "0x657D98")]
		public float grabbedFriction;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657DD0", Offset = "0x657DD0")]
		public bool handleInteractableOnly;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float stepSize;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody doorRigidbody;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected HingeJoint doorHinge;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected ConstantForce doorSnapForce;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Rigidbody frameRigidbody;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Direction finalDirection;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float subDirection;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Vector3 secondaryDirection;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected bool doorHingeCreated;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		protected bool doorSnapForceCreated;

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xBDB1A8", Offset = "0xBDB1A8", VA = "0xBDB1A8", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xBDBB58", Offset = "0xBDBB58", VA = "0xBDBB58", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xBDBBC0", Offset = "0xBDBBC0", VA = "0xBDBBC0", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xBDC810", Offset = "0xBDC810", VA = "0xBDC810", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xBDC8CC", Offset = "0xBDC8CC", VA = "0xBDC8CC", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xBDC9B4", Offset = "0xBDC9B4", VA = "0xBDC9B4", Slot = "19")]
		protected virtual float GetDirectionFromJoint()
		{
			return default(float);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xBDCA2C", Offset = "0xBDCA2C", VA = "0xBDCA2C", Slot = "20")]
		protected virtual Vector3 Direction2Axis(Direction givenDirection)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xBDCB08", Offset = "0xBDCB08", VA = "0xBDCB08", Slot = "21")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xBDCEC4", Offset = "0xBDCEC4", VA = "0xBDCEC4", Slot = "22")]
		protected virtual void InitFrame()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xBDD01C", Offset = "0xBDD01C", VA = "0xBDD01C", Slot = "23")]
		protected virtual void InitDoor()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xBDD2F0", Offset = "0xBDD2F0", VA = "0xBDD2F0", Slot = "24")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xBDD564", Offset = "0xBDD564", VA = "0xBDD564", Slot = "25")]
		protected virtual void CreateInteractableObject(GameObject target)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xBDD728", Offset = "0xBDD728", VA = "0xBDD728", Slot = "26")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xBDD768", Offset = "0xBDD768", VA = "0xBDD768", Slot = "27")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xBDD7A8", Offset = "0xBDD7A8", VA = "0xBDD7A8", Slot = "28")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xBDD8BC", Offset = "0xBDD8BC", VA = "0xBDD8BC", Slot = "29")]
		protected virtual GameObject GetDoor()
		{
			return null;
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xBDD948", Offset = "0xBDD948", VA = "0xBDD948")]
		public VRTK_Door()
		{
		}
	}
	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649178", Offset = "0x649178")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x649178", Offset = "0x649178")]
	public class VRTK_Drawer : VRTK_Control
	{
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657E08", Offset = "0x657E08")]
		public GameObject connectedTo;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657E40", Offset = "0x657E40")]
		public Direction direction;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657E78", Offset = "0x657E78")]
		public GameObject body;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657EB0", Offset = "0x657EB0")]
		public GameObject handle;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657EE8", Offset = "0x657EE8")]
		public GameObject content;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657F20", Offset = "0x657F20")]
		public bool hideContent;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657F58", Offset = "0x657F58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x657F58", Offset = "0x657F58")]
		public float minSnapClose;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657FAC", Offset = "0x657FAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x657FAC", Offset = "0x657FAC")]
		public float maxExtend;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody drawerRigidbody;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody handleRigidbody;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected FixedJoint handleFixedJoint;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected ConfigurableJoint drawerJoint;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected VRTK_InteractableObject drawerInteractableObject;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected ConstantForce drawerSnapForce;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Direction finalDirection;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float subDirection;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float pullDistance;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected Vector3 initialPosition;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool drawerJointCreated;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		protected bool drawerSnapForceCreated;

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xBDFAC8", Offset = "0xBDFAC8", VA = "0xBDFAC8", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xBDFDB0", Offset = "0xBDFDB0", VA = "0xBDFDB0", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xBDFE30", Offset = "0xBDFE30", VA = "0xBDFE30", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xBE064C", Offset = "0xBE064C", VA = "0xBE064C", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xBE065C", Offset = "0xBE065C", VA = "0xBE065C", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xBE0768", Offset = "0xBE0768", VA = "0xBE0768", Slot = "19")]
		protected virtual void InitBody()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xBE0BD8", Offset = "0xBE0BD8", VA = "0xBE0BD8", Slot = "20")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xBE0DE0", Offset = "0xBE0DE0", VA = "0xBE0DE0", Slot = "21")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xBE1594", Offset = "0xBE1594", VA = "0xBE1594", Slot = "22")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xBE1734", Offset = "0xBE1734", VA = "0xBE1734", Slot = "23")]
		protected virtual GameObject GetBody()
		{
			return null;
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xBE17C0", Offset = "0xBE17C0", VA = "0xBE17C0", Slot = "24")]
		protected virtual GameObject GetHandle()
		{
			return null;
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xBE184C", Offset = "0xBE184C", VA = "0xBE184C")]
		public VRTK_Drawer()
		{
		}
	}
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6491D8", Offset = "0x6491D8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6491D8", Offset = "0x6491D8")]
	public class VRTK_Knob : VRTK_Control
	{
		[Token(Token = "0x200045E")]
		public enum KnobDirection
		{
			[Token(Token = "0x4001F70")]
			x,
			[Token(Token = "0x4001F71")]
			y,
			[Token(Token = "0x4001F72")]
			z
		}

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658000", Offset = "0x658000")]
		public GameObject connectedTo;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658038", Offset = "0x658038")]
		public KnobDirection direction;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658070", Offset = "0x658070")]
		public float min;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6580A8", Offset = "0x6580A8")]
		public float max;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6580E0", Offset = "0x6580E0")]
		public float stepSize;

		[Token(Token = "0x4000B36")]
		protected const float MAX_AUTODETECT_KNOB_WIDTH = 3f;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected KnobDirection finalDirection;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected KnobDirection subDirection;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool subDirectionFound;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected Quaternion initialRotation;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Vector3 initialLocalRotation;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected ConfigurableJoint knobJoint;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool knobJointCreated;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xC25BF0", Offset = "0xC25BF0", VA = "0xC25BF0", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xC25C94", Offset = "0xC25C94", VA = "0xC25C94", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xC25ED8", Offset = "0xC25ED8", VA = "0xC25ED8", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xC25EE0", Offset = "0xC25EE0", VA = "0xC25EE0", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xC25F10", Offset = "0xC25F10", VA = "0xC25F10", Slot = "19")]
		protected virtual void InitKnob()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xC262D4", Offset = "0xC262D4", VA = "0xC262D4", Slot = "20")]
		protected virtual KnobDirection DetectDirection()
		{
			return default(KnobDirection);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xC26D4C", Offset = "0xC26D4C", VA = "0xC26D4C", Slot = "21")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xC27394", Offset = "0xC27394", VA = "0xC27394")]
		public VRTK_Knob()
		{
		}
	}
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649238", Offset = "0x649238")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x649238", Offset = "0x649238")]
	public class VRTK_Lever : VRTK_Control
	{
		[Token(Token = "0x200045F")]
		public enum LeverDirection
		{
			[Token(Token = "0x4001F74")]
			x,
			[Token(Token = "0x4001F75")]
			y,
			[Token(Token = "0x4001F76")]
			z
		}

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658118", Offset = "0x658118")]
		public GameObject connectedTo;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658150", Offset = "0x658150")]
		public LeverDirection direction;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658188", Offset = "0x658188")]
		public float minAngle;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6581C0", Offset = "0x6581C0")]
		public float maxAngle;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6581F8", Offset = "0x6581F8")]
		public float stepSize;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658230", Offset = "0x658230")]
		public float releasedFriction;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658268", Offset = "0x658268")]
		public float grabbedFriction;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected HingeJoint leverHingeJoint;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool leverHingeJointCreated;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Rigidbody leverRigidbody;

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xC27408", Offset = "0xC27408", VA = "0xC27408", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xC274E4", Offset = "0xC274E4", VA = "0xC274E4", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xC27A60", Offset = "0xC27A60", VA = "0xC27A60", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xC27A68", Offset = "0xC27A68", VA = "0xC27A68", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xC27AA8", Offset = "0xC27AA8", VA = "0xC27AA8", Slot = "19")]
		protected virtual void InitRigidbody()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xC27BEC", Offset = "0xC27BEC", VA = "0xC27BEC", Slot = "20")]
		protected virtual void InitInteractableObject()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xC27DC0", Offset = "0xC27DC0", VA = "0xC27DC0", Slot = "21")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xC27E00", Offset = "0xC27E00", VA = "0xC27E00", Slot = "22")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xC27E40", Offset = "0xC27E40", VA = "0xC27E40", Slot = "23")]
		protected virtual void InitHingeJoint()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xC27FE4", Offset = "0xC27FE4", VA = "0xC27FE4", Slot = "24")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xC280F8", Offset = "0xC280F8", VA = "0xC280F8", Slot = "25")]
		protected virtual void SnapToValue(float value)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xC282F4", Offset = "0xC282F4", VA = "0xC282F4")]
		public VRTK_Lever()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649298", Offset = "0x649298")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x649298", Offset = "0x649298")]
	public class VRTK_Slider : VRTK_Control
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6582A0", Offset = "0x6582A0")]
		public GameObject connectedTo;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6582D8", Offset = "0x6582D8")]
		public Direction direction;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658310", Offset = "0x658310")]
		public Collider minimumLimit;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658348", Offset = "0x658348")]
		public Collider maximumLimit;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658380", Offset = "0x658380")]
		public float minimumValue;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6583B8", Offset = "0x6583B8")]
		public float maximumValue;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6583F0", Offset = "0x6583F0")]
		public float stepSize;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658428", Offset = "0x658428")]
		public bool snapToStep;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658460", Offset = "0x658460")]
		public float releasedFriction;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Direction finalDirection;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody sliderRigidbody;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected ConfigurableJoint sliderJoint;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool sliderJointCreated;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected Vector3 minimumLimitDiff;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Vector3 maximumLimitDiff;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected Vector3 snapPosition;

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x9C22D0", Offset = "0x9C22D0", VA = "0x9C22D0", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x9C2434", Offset = "0x9C2434", VA = "0x9C2434", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x9C2494", Offset = "0x9C2494", VA = "0x9C2494", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x9C34EC", Offset = "0x9C34EC", VA = "0x9C34EC", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x9C34F4", Offset = "0x9C34F4", VA = "0x9C34F4", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x9C3544", Offset = "0x9C3544", VA = "0x9C3544", Slot = "19")]
		protected virtual Vector3 CalculateDiff(Vector3 initialPosition, Vector3 givenDirection, float scaleValue, float diffMultiplier, bool addition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x9C3770", Offset = "0x9C3770", VA = "0x9C3770", Slot = "20")]
		protected virtual void InitRigidbody()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x9C39D4", Offset = "0x9C39D4", VA = "0x9C39D4", Slot = "21")]
		protected virtual void InitInteractableObject()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x9C3B2C", Offset = "0x9C3B2C", VA = "0x9C3B2C", Slot = "22")]
		protected virtual void InitJoint()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x9C3D0C", Offset = "0x9C3D0C", VA = "0x9C3D0C", Slot = "23")]
		protected virtual void CalculateValue()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x9C3FF0", Offset = "0x9C3FF0", VA = "0x9C3FF0", Slot = "24")]
		protected virtual void ToggleSpring(bool state)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x9C4110", Offset = "0x9C4110", VA = "0x9C4110", Slot = "25")]
		protected virtual void SnapToValue()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x9C4224", Offset = "0x9C4224", VA = "0x9C4224")]
		public VRTK_Slider()
		{
		}
	}
	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6492F8", Offset = "0x6492F8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6492F8", Offset = "0x6492F8")]
	public class VRTK_SpringLever : VRTK_Lever
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658498", Offset = "0x658498")]
		public float springStrength;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6584D0", Offset = "0x6584D0")]
		public float springDamper;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658508", Offset = "0x658508")]
		public bool snapToNearestLimit;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658540", Offset = "0x658540")]
		public bool alwaysActive;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		protected bool wasTowardZero;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		protected bool isGrabbed;

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x9CBF34", Offset = "0x9CBF34", VA = "0x9CBF34", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x9CC028", Offset = "0x9CC028", VA = "0x9CC028", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x9CC05C", Offset = "0x9CC05C", VA = "0x9CC05C", Slot = "21")]
		protected override void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x9CC088", Offset = "0x9CC088", VA = "0x9CC088", Slot = "22")]
		protected override void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x9CC0B0", Offset = "0x9CC0B0", VA = "0x9CC0B0", Slot = "26")]
		protected virtual float GetSpringTarget(bool towardZero)
		{
			return default(float);
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x9CC0C8", Offset = "0x9CC0C8", VA = "0x9CC0C8", Slot = "27")]
		protected virtual void ApplySpringForce()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x9CC220", Offset = "0x9CC220", VA = "0x9CC220")]
		public VRTK_SpringLever()
		{
		}
	}
	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649358", Offset = "0x649358")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x649358", Offset = "0x649358")]
	public class VRTK_Wheel : VRTK_Control
	{
		[Token(Token = "0x2000460")]
		public enum GrabTypes
		{
			[Token(Token = "0x4001F78")]
			TrackObject,
			[Token(Token = "0x4001F79")]
			RotatorTrack
		}

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658578", Offset = "0x658578")]
		public GameObject connectedTo;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6585B0", Offset = "0x6585B0")]
		public GrabTypes grabType;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6585E8", Offset = "0x6585E8")]
		public float detatchDistance;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658620", Offset = "0x658620")]
		public float minimumValue;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658658", Offset = "0x658658")]
		public float maximumValue;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658690", Offset = "0x658690")]
		public float stepSize;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6586C8", Offset = "0x6586C8")]
		public bool snapToStep;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658700", Offset = "0x658700")]
		public float grabbedFriction;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658738", Offset = "0x658738")]
		public float releasedFriction;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x658770", Offset = "0x658770")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658770", Offset = "0x658770")]
		public float maxAngle;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6587C8", Offset = "0x6587C8")]
		public bool lockAtLimits;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float angularVelocityLimit;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float springStrengthValue;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float springDamperValue;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Quaternion initialLocalRotation;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Rigidbody wheelRigidbody;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected HingeJoint wheelHinge;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool wheelHingeCreated;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		protected bool initialValueCalculated;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float springAngle;

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x810DE4", Offset = "0x810DE4", VA = "0x810DE4", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x810E38", Offset = "0x810E38", VA = "0x810E38", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x810FA8", Offset = "0x810FA8", VA = "0x810FA8", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x810FB0", Offset = "0x810FB0", VA = "0x810FB0", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x811040", Offset = "0x811040", VA = "0x811040", Slot = "19")]
		protected virtual void InitWheel()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x811090", Offset = "0x811090", VA = "0x811090", Slot = "20")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x8112C0", Offset = "0x8112C0", VA = "0x8112C0", Slot = "21")]
		protected virtual void SetupHinge()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x811398", Offset = "0x811398", VA = "0x811398", Slot = "22")]
		protected virtual void SetupHingeRestrictions()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x811704", Offset = "0x811704", VA = "0x811704", Slot = "23")]
		protected virtual void ConfigureHingeSpring()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x8117B4", Offset = "0x8117B4", VA = "0x8117B4", Slot = "24")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x8119F4", Offset = "0x8119F4", VA = "0x8119F4", Slot = "25")]
		protected virtual void WheelInteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x811A58", Offset = "0x811A58", VA = "0x811A58", Slot = "26")]
		protected virtual void WheelInteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x811AE8", Offset = "0x811AE8", VA = "0x811AE8", Slot = "27")]
		protected virtual void CalculateValue()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x811D04", Offset = "0x811D04", VA = "0x811D04")]
		public VRTK_Wheel()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class VRTK_IgnoreInteractTouchColliders : VRTK_SDKControllerReady
	{
		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D7C8", Offset = "0x64D7C8")]
		private sealed class <DisableAllCollidersAtEndOfFrame>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_IgnoreInteractTouchColliders <>4__this;

			[Token(Token = "0x17000295")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002286")]
				[Address(RVA = "0xBE80EC", Offset = "0xBE80EC", VA = "0xBE80EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000296")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002288")]
				[Address(RVA = "0xBE815C", Offset = "0xBE815C", VA = "0xBE815C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0xBE7810", Offset = "0xBE7810", VA = "0xBE7810")]
			[DebuggerHidden]
			public <DisableAllCollidersAtEndOfFrame>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0xBE8030", Offset = "0xBE8030", VA = "0xBE8030", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0xBE8034", Offset = "0xBE8034", VA = "0xBE8034", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0xBE80F4", Offset = "0xBE80F4", VA = "0xBE80F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D7D8", Offset = "0x64D7D8")]
		private sealed class <DisableControllerColliderAtEndOfFrame>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_IgnoreInteractTouchColliders <>4__this;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_InteractTouch touchToIgnore;

			[Token(Token = "0x17000297")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600228C")]
				[Address(RVA = "0xBE822C", Offset = "0xBE822C", VA = "0xBE822C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000298")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600228E")]
				[Address(RVA = "0xBE829C", Offset = "0xBE829C", VA = "0xBE829C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002289")]
			[Address(RVA = "0xBE78D4", Offset = "0xBE78D4", VA = "0xBE78D4")]
			[DebuggerHidden]
			public <DisableControllerColliderAtEndOfFrame>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600228A")]
			[Address(RVA = "0xBE8164", Offset = "0xBE8164", VA = "0xBE8164", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600228B")]
			[Address(RVA = "0xBE8168", Offset = "0xBE8168", VA = "0xBE8168", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0xBE8234", Offset = "0xBE8234", VA = "0xBE8234", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658800", Offset = "0x658800")]
		public List<VRTK_InteractTouch> interactTouchToIgnore;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658838", Offset = "0x658838")]
		public List<GameObject> skipIgnore;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Collider[] localColliders;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Coroutine disableAllCollidersRoutine;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Coroutine disableControllerCollidersRoutine;

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xBE7668", Offset = "0xBE7668", VA = "0xBE7668", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xBE76F8", Offset = "0xBE76F8", VA = "0xBE76F8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xBE779C", Offset = "0xBE779C", VA = "0xBE779C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D43C", Offset = "0x66D43C")]
		protected virtual IEnumerator DisableAllCollidersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xBE783C", Offset = "0xBE783C", VA = "0xBE783C", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D4A0", Offset = "0x66D4A0")]
		protected virtual IEnumerator DisableControllerColliderAtEndOfFrame(VRTK_InteractTouch touchToIgnore)
		{
			return null;
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xBE7900", Offset = "0xBE7900", VA = "0xBE7900", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xBE7A10", Offset = "0xBE7A10", VA = "0xBE7A10", Slot = "17")]
		protected virtual void ManageAllCollisions(bool ignore)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xBE7AE4", Offset = "0xBE7AE4", VA = "0xBE7AE4", Slot = "18")]
		protected virtual bool ShouldExclude(Transform checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xBE7C14", Offset = "0xBE7C14", VA = "0xBE7C14", Slot = "19")]
		protected virtual void ManageTouchCollision(VRTK_InteractTouch touchToIgnore, bool ignore)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xBE7F80", Offset = "0xBE7F80", VA = "0xBE7F80")]
		public VRTK_IgnoreInteractTouchColliders()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public abstract class VRTK_InteractableListener : MonoBehaviour
	{
		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D7E8", Offset = "0x64D7E8")]
		private sealed class <SetupListenersAtEndOfFrame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableListener <>4__this;

			[Token(Token = "0x17000299")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002292")]
				[Address(RVA = "0xC1F254", Offset = "0xC1F254", VA = "0xC1F254", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002294")]
				[Address(RVA = "0xC1F2C4", Offset = "0xC1F2C4", VA = "0xC1F2C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600228F")]
			[Address(RVA = "0xC1F170", Offset = "0xC1F170", VA = "0xC1F170")]
			[DebuggerHidden]
			public <SetupListenersAtEndOfFrame>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002290")]
			[Address(RVA = "0xC1F19C", Offset = "0xC1F19C", VA = "0xC1F19C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0xC1F1A0", Offset = "0xC1F1A0", VA = "0xC1F1A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0xC1F25C", Offset = "0xC1F25C", VA = "0xC1F25C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Coroutine setupInteractableListenersRoutine;

		[Token(Token = "0x6000D49")]
		protected abstract bool SetupListeners(bool throwError);

		[Token(Token = "0x6000D4A")]
		protected abstract void TearDownListeners();

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xC1F068", Offset = "0xC1F068", VA = "0xC1F068", Slot = "6")]
		protected virtual void EnableListeners()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xC1F0BC", Offset = "0xC1F0BC", VA = "0xC1F0BC", Slot = "7")]
		protected virtual void DisableListeners()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xC1F0FC", Offset = "0xC1F0FC", VA = "0xC1F0FC", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D504", Offset = "0x66D504")]
		protected virtual IEnumerator SetupListenersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xC17AA0", Offset = "0xC17AA0", VA = "0xC17AA0")]
		protected VRTK_InteractableListener()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public struct InteractableObjectEventArgs
	{
		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;
	}
	[Token(Token = "0x200013E")]
	public delegate void InteractableObjectEventHandler(object sender, InteractableObjectEventArgs e);
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6493B8", Offset = "0x6493B8")]
	public class VRTK_InteractableObject : MonoBehaviour
	{
		[Token(Token = "0x2000464")]
		public enum InteractionType
		{
			[Token(Token = "0x4001F85")]
			None,
			[Token(Token = "0x4001F86")]
			NearTouch,
			[Token(Token = "0x4001F87")]
			NearUntouch,
			[Token(Token = "0x4001F88")]
			Touch,
			[Token(Token = "0x4001F89")]
			Untouch,
			[Token(Token = "0x4001F8A")]
			Grab,
			[Token(Token = "0x4001F8B")]
			Ungrab,
			[Token(Token = "0x4001F8C")]
			Use,
			[Token(Token = "0x4001F8D")]
			Unuse
		}

		[Token(Token = "0x2000465")]
		public enum AllowedController
		{
			[Token(Token = "0x4001F8F")]
			Both,
			[Token(Token = "0x4001F90")]
			LeftOnly,
			[Token(Token = "0x4001F91")]
			RightOnly
		}

		[Token(Token = "0x2000466")]
		public enum ValidDropTypes
		{
			[Token(Token = "0x4001F93")]
			NoDrop,
			[Token(Token = "0x4001F94")]
			DropAnywhere,
			[Token(Token = "0x4001F95")]
			DropValidSnapDropZone
		}

		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D7F8", Offset = "0x64D7F8")]
		private sealed class <RegisterTeleportersAtEndOfFrame>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x1700029B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002298")]
				[Address(RVA = "0xC25B78", Offset = "0xC25B78", VA = "0xC25B78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600229A")]
				[Address(RVA = "0xC25BE8", Offset = "0xC25BE8", VA = "0xC25BE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002295")]
			[Address(RVA = "0xC24C74", Offset = "0xC24C74", VA = "0xC24C74")]
			[DebuggerHidden]
			public <RegisterTeleportersAtEndOfFrame>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0xC25988", Offset = "0xC25988", VA = "0xC25988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0xC2598C", Offset = "0xC2598C", VA = "0xC2598C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002299")]
			[Address(RVA = "0xC25B80", Offset = "0xC25B80", VA = "0xC25B80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D808", Offset = "0x64D808")]
		private sealed class <ForceStopInteractingAtEndOfFrame>d__177 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x1700029D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600229E")]
				[Address(RVA = "0xC25910", Offset = "0xC25910", VA = "0xC25910", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A0")]
				[Address(RVA = "0xC25980", Offset = "0xC25980", VA = "0xC25980", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600229B")]
			[Address(RVA = "0xC24E18", Offset = "0xC24E18", VA = "0xC24E18")]
			[DebuggerHidden]
			public <ForceStopInteractingAtEndOfFrame>d__177(int <>1__state)
			{
			}

			[Token(Token = "0x600229C")]
			[Address(RVA = "0xC25858", Offset = "0xC25858", VA = "0xC25858", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600229D")]
			[Address(RVA = "0xC2585C", Offset = "0xC2585C", VA = "0xC2585C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600229F")]
			[Address(RVA = "0xC25918", Offset = "0xC25918", VA = "0xC25918", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658870", Offset = "0x658870")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658870", Offset = "0x658870")]
		public bool disableWhenIdle;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6588D0", Offset = "0x6588D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6588D0", Offset = "0x6588D0")]
		public AllowedController allowedNearTouchControllers;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658930", Offset = "0x658930")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658930", Offset = "0x658930")]
		public AllowedController allowedTouchControllers;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658990", Offset = "0x658990")]
		public Collider[] ignoredColliders;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6589C8", Offset = "0x6589C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6589C8", Offset = "0x6589C8")]
		public bool isGrabbable;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658A28", Offset = "0x658A28")]
		public bool holdButtonToGrab;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658A60", Offset = "0x658A60")]
		public bool stayGrabbedOnTeleport;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658A98", Offset = "0x658A98")]
		public ValidDropTypes validDrop;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658AD0", Offset = "0x658AD0")]
		public VRTK_ControllerEvents.ButtonAlias grabOverrideButton;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658B08", Offset = "0x658B08")]
		public AllowedController allowedGrabControllers;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658B40", Offset = "0x658B40")]
		public VRTK_BaseGrabAttach grabAttachMechanicScript;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658B78", Offset = "0x658B78")]
		public VRTK_BaseGrabAction secondaryGrabActionScript;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658BB0", Offset = "0x658BB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658BB0", Offset = "0x658BB0")]
		public bool isUsable;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658C10", Offset = "0x658C10")]
		public bool holdButtonToUse;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658C48", Offset = "0x658C48")]
		public bool useOnlyIfGrabbed;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658C80", Offset = "0x658C80")]
		public bool pointerActivatesUseAction;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658CB8", Offset = "0x658CB8")]
		public VRTK_ControllerEvents.ButtonAlias useOverrideButton;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658CF0", Offset = "0x658CF0")]
		public AllowedController allowedUseControllers;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658D28", Offset = "0x658D28")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x658D28", Offset = "0x658D28")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x658D28", Offset = "0x658D28")]
		public VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x658D98", Offset = "0x658D98")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x658D98", Offset = "0x658D98")]
		public Color touchHighlightColor;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody interactableRigidbody;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected HashSet<GameObject> currentIgnoredColliders;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected HashSet<GameObject> hoveredSnapObjects;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected HashSet<GameObject> nearTouchingObjects;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected HashSet<GameObject> touchingObjects;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<GameObject> grabbingObjects;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_InteractUse usingObject;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform trackPoint;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool customTrackPoint;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Transform primaryControllerAttachPoint;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Transform secondaryControllerAttachPoint;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Transform previousParent;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool previousKinematicState;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool previousIsGrabbable;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		protected bool forcedDropped;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		protected bool forceDisabled;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected bool hoveredOverSnapDropZone;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		protected bool snappedInSnapDropZone;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected VRTK_SnapDropZone storedSnapDropZone;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Vector3 previousLocalScale;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected bool startDisabled;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x658EC4", Offset = "0x658EC4")]
		public int usingState;

		[Token(Token = "0x170000CD")]
		public bool isKinematic
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0xC20B24", Offset = "0xC20B24", VA = "0xC20B24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0xC20BC4", Offset = "0xC20BC4", VA = "0xC20BC4")]
			set
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event InteractableObjectEventHandler InteractableObjectEnabled
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0xC1F2CC", Offset = "0xC1F2CC", VA = "0xC1F2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D568", Offset = "0x66D568")]
			add
			{
			}
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xC1F3B8", Offset = "0xC1F3B8", VA = "0xC1F3B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D578", Offset = "0x66D578")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event InteractableObjectEventHandler InteractableObjectDisabled
		{
			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xC1589C", Offset = "0xC1589C", VA = "0xC1589C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D588", Offset = "0x66D588")]
			add
			{
			}
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xC15DF8", Offset = "0xC15DF8", VA = "0xC15DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D598", Offset = "0x66D598")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event InteractableObjectEventHandler InteractableObjectNearTouched
		{
			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xC1F4A4", Offset = "0xC1F4A4", VA = "0xC1F4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5A8", Offset = "0x66D5A8")]
			add
			{
			}
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xC1F594", Offset = "0xC1F594", VA = "0xC1F594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5B8", Offset = "0x66D5B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event InteractableObjectEventHandler InteractableObjectNearUntouched
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xC1F684", Offset = "0xC1F684", VA = "0xC1F684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5C8", Offset = "0x66D5C8")]
			add
			{
			}
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xC1F774", Offset = "0xC1F774", VA = "0xC1F774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5D8", Offset = "0x66D5D8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event InteractableObjectEventHandler InteractableObjectTouched
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xC1F864", Offset = "0xC1F864", VA = "0xC1F864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5E8", Offset = "0x66D5E8")]
			add
			{
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xC1F954", Offset = "0xC1F954", VA = "0xC1F954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5F8", Offset = "0x66D5F8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event InteractableObjectEventHandler InteractableObjectUntouched
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xC1FA44", Offset = "0xC1FA44", VA = "0xC1FA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D608", Offset = "0x66D608")]
			add
			{
			}
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xC1FB34", Offset = "0xC1FB34", VA = "0xC1FB34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D618", Offset = "0x66D618")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event InteractableObjectEventHandler InteractableObjectGrabbed
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xC1FC24", Offset = "0xC1FC24", VA = "0xC1FC24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D628", Offset = "0x66D628")]
			add
			{
			}
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xC1FD14", Offset = "0xC1FD14", VA = "0xC1FD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D638", Offset = "0x66D638")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event InteractableObjectEventHandler InteractableObjectUngrabbed
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xC1FE04", Offset = "0xC1FE04", VA = "0xC1FE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D648", Offset = "0x66D648")]
			add
			{
			}
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0xC1FEF4", Offset = "0xC1FEF4", VA = "0xC1FEF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D658", Offset = "0x66D658")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event InteractableObjectEventHandler InteractableObjectUsed
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xC1FFE4", Offset = "0xC1FFE4", VA = "0xC1FFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D668", Offset = "0x66D668")]
			add
			{
			}
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xC200D4", Offset = "0xC200D4", VA = "0xC200D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D678", Offset = "0x66D678")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event InteractableObjectEventHandler InteractableObjectUnused
		{
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0xC201C4", Offset = "0xC201C4", VA = "0xC201C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D688", Offset = "0x66D688")]
			add
			{
			}
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0xC202B4", Offset = "0xC202B4", VA = "0xC202B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D698", Offset = "0x66D698")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event InteractableObjectEventHandler InteractableObjectEnteredSnapDropZone
		{
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0xC203A4", Offset = "0xC203A4", VA = "0xC203A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6A8", Offset = "0x66D6A8")]
			add
			{
			}
			[Token(Token = "0x6000D68")]
			[Address(RVA = "0xC20494", Offset = "0xC20494", VA = "0xC20494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6B8", Offset = "0x66D6B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event InteractableObjectEventHandler InteractableObjectExitedSnapDropZone
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0xC20584", Offset = "0xC20584", VA = "0xC20584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6C8", Offset = "0x66D6C8")]
			add
			{
			}
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0xC20674", Offset = "0xC20674", VA = "0xC20674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6D8", Offset = "0x66D6D8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event InteractableObjectEventHandler InteractableObjectSnappedToDropZone
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0xC20764", Offset = "0xC20764", VA = "0xC20764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6E8", Offset = "0x66D6E8")]
			add
			{
			}
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0xC20854", Offset = "0xC20854", VA = "0xC20854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6F8", Offset = "0x66D6F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event InteractableObjectEventHandler InteractableObjectUnsnappedFromDropZone
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0xC20944", Offset = "0xC20944", VA = "0xC20944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D708", Offset = "0x66D708")]
			add
			{
			}
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xC20A34", Offset = "0xC20A34", VA = "0xC20A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D718", Offset = "0x66D718")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xC20C74", Offset = "0xC20C74", VA = "0xC20C74", Slot = "4")]
		public virtual void OnInteractableObjectEnabled(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xC20C98", Offset = "0xC20C98", VA = "0xC20C98", Slot = "5")]
		public virtual void OnInteractableObjectDisabled(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xC20CBC", Offset = "0xC20CBC", VA = "0xC20CBC", Slot = "6")]
		public virtual void OnInteractableObjectNearTouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xC20CE0", Offset = "0xC20CE0", VA = "0xC20CE0", Slot = "7")]
		public virtual void OnInteractableObjectNearUntouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xC20D04", Offset = "0xC20D04", VA = "0xC20D04", Slot = "8")]
		public virtual void OnInteractableObjectTouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xC20D28", Offset = "0xC20D28", VA = "0xC20D28", Slot = "9")]
		public virtual void OnInteractableObjectUntouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xC20D4C", Offset = "0xC20D4C", VA = "0xC20D4C", Slot = "10")]
		public virtual void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xC20D70", Offset = "0xC20D70", VA = "0xC20D70", Slot = "11")]
		public virtual void OnInteractableObjectUngrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xC20D94", Offset = "0xC20D94", VA = "0xC20D94", Slot = "12")]
		public virtual void OnInteractableObjectUsed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xC20DB8", Offset = "0xC20DB8", VA = "0xC20DB8", Slot = "13")]
		public virtual void OnInteractableObjectUnused(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xC20DDC", Offset = "0xC20DDC", VA = "0xC20DDC", Slot = "14")]
		public virtual void OnInteractableObjectEnteredSnapDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xC20E00", Offset = "0xC20E00", VA = "0xC20E00", Slot = "15")]
		public virtual void OnInteractableObjectExitedSnapDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xC20E24", Offset = "0xC20E24", VA = "0xC20E24", Slot = "16")]
		public virtual void OnInteractableObjectSnappedToDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xC20E48", Offset = "0xC20E48", VA = "0xC20E48", Slot = "17")]
		public virtual void OnInteractableObjectUnsnappedFromDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xC20E6C", Offset = "0xC20E6C", VA = "0xC20E6C")]
		public InteractableObjectEventArgs SetInteractableObjectEvent(GameObject interactingObject)
		{
			return default(InteractableObjectEventArgs);
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xC20E74", Offset = "0xC20E74", VA = "0xC20E74", Slot = "18")]
		public virtual bool IsNearTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xC20F00", Offset = "0xC20F00", VA = "0xC20F00", Slot = "19")]
		public virtual bool IsTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xC20F6C", Offset = "0xC20F6C", VA = "0xC20F6C", Slot = "20")]
		public virtual bool IsGrabbed([Optional] GameObject grabbedBy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xC21070", Offset = "0xC21070", VA = "0xC21070", Slot = "21")]
		public virtual bool IsUsing([Optional] GameObject usedBy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xC211A0", Offset = "0xC211A0", VA = "0xC211A0", Slot = "22")]
		public virtual void StartNearTouching([Optional] VRTK_InteractNearTouch currentNearTouchingObject)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xC212D0", Offset = "0xC212D0", VA = "0xC212D0", Slot = "23")]
		public virtual void StopNearTouching([Optional] VRTK_InteractNearTouch previousNearTouchingObject)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xC213E8", Offset = "0xC213E8", VA = "0xC213E8", Slot = "24")]
		public virtual void StartTouching([Optional] VRTK_InteractTouch currentTouchingObject)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xC21530", Offset = "0xC21530", VA = "0xC21530", Slot = "25")]
		public virtual void StopTouching([Optional] VRTK_InteractTouch previousTouchingObject)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xC21660", Offset = "0xC21660", VA = "0xC21660", Slot = "26")]
		public virtual void Grabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xC21784", Offset = "0xC21784", VA = "0xC21784", Slot = "27")]
		public virtual void Ungrabbed([Optional] VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xC218F8", Offset = "0xC218F8", VA = "0xC218F8", Slot = "28")]
		public virtual void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xC21A14", Offset = "0xC21A14", VA = "0xC21A14", Slot = "29")]
		public virtual void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xC21AE8", Offset = "0xC21AE8", VA = "0xC21AE8", Slot = "30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66D728", Offset = "0x66D728")]
		public virtual void ToggleHighlight(bool toggle, [Optional] Color? highlightColor)
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xC21BEC", Offset = "0xC21BEC", VA = "0xC21BEC", Slot = "31")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66D760", Offset = "0x66D760")]
		public virtual void Highlight(Color highlightColor)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xC21CD8", Offset = "0xC21CD8", VA = "0xC21CD8", Slot = "32")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66D798", Offset = "0x66D798")]
		public virtual void Unhighlight()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xC21D8C", Offset = "0xC21D8C", VA = "0xC21D8C", Slot = "33")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66D7D0", Offset = "0x66D7D0")]
		public virtual void ResetHighlighter()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xC21E40", Offset = "0xC21E40", VA = "0xC21E40", Slot = "34")]
		public virtual void PauseCollisions(float delay)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xC21F44", Offset = "0xC21F44", VA = "0xC21F44", Slot = "35")]
		public virtual void ZeroVelocity()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xC22074", Offset = "0xC22074", VA = "0xC22074", Slot = "36")]
		public virtual void SaveCurrentState()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xC2217C", Offset = "0xC2217C", VA = "0xC2217C", Slot = "37")]
		public virtual void GetPreviousState(out Transform previousParent, out bool previousKinematic, out bool previousGrabbable)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xC22198", Offset = "0xC22198", VA = "0xC22198", Slot = "38")]
		public virtual void OverridePreviousState(Transform previousParent, bool previousKinematic, bool previousGrabbable)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xC221B0", Offset = "0xC221B0", VA = "0xC221B0", Slot = "39")]
		public virtual List<GameObject> GetNearTouchingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xC22220", Offset = "0xC22220", VA = "0xC22220", Slot = "40")]
		public virtual List<GameObject> GetTouchingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xC22290", Offset = "0xC22290", VA = "0xC22290", Slot = "41")]
		public virtual GameObject GetGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xC2231C", Offset = "0xC2231C", VA = "0xC2231C", Slot = "42")]
		public virtual GameObject GetSecondaryGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xC223B8", Offset = "0xC223B8", VA = "0xC223B8", Slot = "43")]
		public virtual GameObject GetUsingObject()
		{
			return null;
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xC223E8", Offset = "0xC223E8", VA = "0xC223E8", Slot = "44")]
		public virtual VRTK_InteractUse GetUsingScript()
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xC223F0", Offset = "0xC223F0", VA = "0xC223F0", Slot = "45")]
		public virtual bool IsValidInteractableController(GameObject actualController, AllowedController controllerCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xC22514", Offset = "0xC22514", VA = "0xC22514", Slot = "46")]
		public virtual void ForceStopInteracting()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xC225C4", Offset = "0xC225C4", VA = "0xC225C4", Slot = "47")]
		public virtual void ForceStopSecondaryGrabInteraction()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xC2269C", Offset = "0xC2269C", VA = "0xC2269C", Slot = "48")]
		public virtual void RegisterTeleporters()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xC226D4", Offset = "0xC226D4", VA = "0xC226D4", Slot = "49")]
		public virtual void UnregisterTeleporters()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xC2286C", Offset = "0xC2286C", VA = "0xC2286C", Slot = "50")]
		public virtual void StoreLocalScale()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xC228B0", Offset = "0xC228B0", VA = "0xC228B0", Slot = "51")]
		public virtual void ToggleSnapDropZone(VRTK_SnapDropZone snapDropZone, bool state)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xC229CC", Offset = "0xC229CC", VA = "0xC229CC", Slot = "52")]
		public virtual bool IsInSnapDropZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xC229D4", Offset = "0xC229D4", VA = "0xC229D4", Slot = "53")]
		public virtual void SetSnapDropZoneHover(VRTK_SnapDropZone snapDropZone, bool state)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xC22B20", Offset = "0xC22B20", VA = "0xC22B20", Slot = "54")]
		public virtual VRTK_SnapDropZone GetStoredSnapDropZone()
		{
			return null;
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xC22B28", Offset = "0xC22B28", VA = "0xC22B28", Slot = "55")]
		public virtual bool IsHoveredOverSnapDropZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xC22B30", Offset = "0xC22B30", VA = "0xC22B30", Slot = "56")]
		public virtual bool IsDroppable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xC22B64", Offset = "0xC22B64", VA = "0xC22B64", Slot = "57")]
		public virtual bool IsSwappable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xC22C08", Offset = "0xC22C08", VA = "0xC22C08", Slot = "58")]
		public virtual bool PerformSecondaryAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xC22D48", Offset = "0xC22D48", VA = "0xC22D48", Slot = "59")]
		public virtual void ResetIgnoredColliders()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xC23008", Offset = "0xC23008", VA = "0xC23008", Slot = "60")]
		public virtual void SubscribeToInteractionEvent(InteractionType givenType, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xC23024", Offset = "0xC23024", VA = "0xC23024", Slot = "61")]
		public virtual void UnsubscribeFromInteractionEvent(InteractionType givenType, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xC23040", Offset = "0xC23040", VA = "0xC23040", Slot = "62")]
		public virtual Transform GetPrimaryAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xC23048", Offset = "0xC23048", VA = "0xC23048", Slot = "63")]
		public virtual Transform GetSecondaryAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xC23050", Offset = "0xC23050", VA = "0xC23050", Slot = "64")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xC2328C", Offset = "0xC2328C", VA = "0xC2328C", Slot = "65")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xC232F0", Offset = "0xC232F0", VA = "0xC232F0", Slot = "66")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xC23350", Offset = "0xC23350", VA = "0xC23350", Slot = "67")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xC23480", Offset = "0xC23480", VA = "0xC23480", Slot = "68")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xC235D4", Offset = "0xC235D4", VA = "0xC235D4", Slot = "69")]
		protected virtual bool IsIdle()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xC23660", Offset = "0xC23660", VA = "0xC23660", Slot = "70")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xC236BC", Offset = "0xC236BC", VA = "0xC236BC", Slot = "71")]
		protected virtual void LoadPreviousState()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xC237DC", Offset = "0xC237DC", VA = "0xC237DC", Slot = "72")]
		protected virtual void IgnoreColliders(GameObject touchingObject)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xC2398C", Offset = "0xC2398C", VA = "0xC2398C", Slot = "73")]
		protected virtual void ToggleEnableState(bool state)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xC239A4", Offset = "0xC239A4", VA = "0xC239A4", Slot = "74")]
		protected virtual void AttemptSetGrabMechanic()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xC23AA8", Offset = "0xC23AA8", VA = "0xC23AA8", Slot = "75")]
		protected virtual void AttemptSetSecondaryGrabAction()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xC23B40", Offset = "0xC23B40", VA = "0xC23B40", Slot = "76")]
		protected virtual void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xC23C18", Offset = "0xC23C18", VA = "0xC23C18", Slot = "77")]
		protected virtual void PrimaryControllerGrab(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xC23D08", Offset = "0xC23D08", VA = "0xC23D08", Slot = "78")]
		protected virtual void SecondaryControllerGrab(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xC23ED4", Offset = "0xC23ED4", VA = "0xC23ED4", Slot = "79")]
		protected virtual void PrimaryControllerUngrab(GameObject previousGrabbingObject, GameObject previousSecondaryGrabbingObject)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xC2405C", Offset = "0xC2405C", VA = "0xC2405C", Slot = "80")]
		protected virtual void SecondaryControllerUngrab(GameObject previousGrabbingObject)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xC24168", Offset = "0xC24168", VA = "0xC24168", Slot = "81")]
		protected virtual void UnpauseCollisions()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xC2422C", Offset = "0xC2422C", VA = "0xC2422C", Slot = "82")]
		protected virtual void SetTrackPoint(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xC2437C", Offset = "0xC2437C", VA = "0xC2437C", Slot = "83")]
		protected virtual Transform CreateAttachPoint(string namePrefix, string nameSuffix, Transform origin)
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xC246B8", Offset = "0xC246B8", VA = "0xC246B8", Slot = "84")]
		protected virtual void AddTrackPoint(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xC24850", Offset = "0xC24850", VA = "0xC24850", Slot = "85")]
		protected virtual void RemoveTrackPoint()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xC249B4", Offset = "0xC249B4", VA = "0xC249B4", Slot = "86")]
		protected virtual void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xC24A08", Offset = "0xC24A08", VA = "0xC24A08", Slot = "87")]
		protected virtual void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xC24C00", Offset = "0xC24C00", VA = "0xC24C00", Slot = "88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D808", Offset = "0x66D808")]
		protected virtual IEnumerator RegisterTeleportersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xC24CA0", Offset = "0xC24CA0", VA = "0xC24CA0", Slot = "89")]
		protected virtual void ResetUseState(GameObject checkObject)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xC24DA4", Offset = "0xC24DA4", VA = "0xC24DA4", Slot = "90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D86C", Offset = "0x66D86C")]
		protected virtual IEnumerator ForceStopInteractingAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xC24E44", Offset = "0xC24E44", VA = "0xC24E44", Slot = "91")]
		protected virtual void ForceStopAllInteractions()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xC24EAC", Offset = "0xC24EAC", VA = "0xC24EAC", Slot = "92")]
		protected virtual void StopTouchingInteractions()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xC2505C", Offset = "0xC2505C", VA = "0xC2505C", Slot = "93")]
		protected virtual void StopGrabbingInteractions()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xC251E8", Offset = "0xC251E8", VA = "0xC251E8", Slot = "94")]
		protected virtual void StopUsingInteractions()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xC25348", Offset = "0xC25348", VA = "0xC25348", Slot = "95")]
		protected virtual void ResetDropSnapType()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xC25528", Offset = "0xC25528", VA = "0xC25528", Slot = "96")]
		protected virtual void ResetUsingObject()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xC255C8", Offset = "0xC255C8", VA = "0xC255C8", Slot = "97")]
		protected virtual void ManageInteractionEvent(InteractionType givenType, bool state, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xC25678", Offset = "0xC25678", VA = "0xC25678", Slot = "98")]
		protected virtual void ManageNearTouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xC2568C", Offset = "0xC2568C", VA = "0xC2568C", Slot = "99")]
		protected virtual void ManageTouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xC256A0", Offset = "0xC256A0", VA = "0xC256A0", Slot = "100")]
		protected virtual void ManageGrabSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xC256B4", Offset = "0xC256B4", VA = "0xC256B4", Slot = "101")]
		protected virtual void ManageUseSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xC256C8", Offset = "0xC256C8", VA = "0xC256C8", Slot = "102")]
		protected virtual void ManageNearUntouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xC256DC", Offset = "0xC256DC", VA = "0xC256DC", Slot = "103")]
		protected virtual void ManageUntouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xC256F0", Offset = "0xC256F0", VA = "0xC256F0", Slot = "104")]
		protected virtual void ManageUngrabSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xC25704", Offset = "0xC25704", VA = "0xC25704", Slot = "105")]
		protected virtual void ManageUnuseSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xC25718", Offset = "0xC25718", VA = "0xC25718")]
		public VRTK_InteractableObject()
		{
		}
	}
	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6493F0", Offset = "0x6493F0")]
	public struct InteractControllerAppearanceEventArgs
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject ignoredObject;
	}
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x649428", Offset = "0x649428")]
	public delegate void InteractControllerAppearanceEventHandler(object sender, InteractControllerAppearanceEventArgs e);
	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649460", Offset = "0x649460")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x649460", Offset = "0x649460")]
	public class VRTK_InteractControllerAppearance : MonoBehaviour
	{
		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D818", Offset = "0x64D818")]
		private sealed class <HideController>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject interactingObject;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject ignoredObject;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public VRTK_InteractControllerAppearance <>4__this;

			[Token(Token = "0x1700029F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022A4")]
				[Address(RVA = "0xBEC188", Offset = "0xBEC188", VA = "0xBEC188", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A6")]
				[Address(RVA = "0xBEC1F8", Offset = "0xBEC1F8", VA = "0xBEC1F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A1")]
			[Address(RVA = "0xBEC02C", Offset = "0xBEC02C", VA = "0xBEC02C")]
			[DebuggerHidden]
			public <HideController>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x60022A2")]
			[Address(RVA = "0xBEC074", Offset = "0xBEC074", VA = "0xBEC074", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A3")]
			[Address(RVA = "0xBEC078", Offset = "0xBEC078", VA = "0xBEC078", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022A5")]
			[Address(RVA = "0xBEC190", Offset = "0xBEC190", VA = "0xBEC190", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658ED4", Offset = "0x658ED4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658ED4", Offset = "0x658ED4")]
		public bool hideControllerOnTouch;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658F34", Offset = "0x658F34")]
		public float hideDelayOnTouch;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658F6C", Offset = "0x658F6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658F6C", Offset = "0x658F6C")]
		public bool hideControllerOnGrab;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658FCC", Offset = "0x658FCC")]
		public float hideDelayOnGrab;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659004", Offset = "0x659004")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659004", Offset = "0x659004")]
		public bool hideControllerOnUse;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659064", Offset = "0x659064")]
		public float hideDelayOnUse;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool touchControllerShow;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool grabControllerShow;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Coroutine hideControllerRoutine;

		[Token(Token = "0x14000048")]
		public event InteractControllerAppearanceEventHandler ControllerHidden
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xBEA808", Offset = "0xBEA808", VA = "0xBEA808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D8D0", Offset = "0x66D8D0")]
			add
			{
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0xBEA8F4", Offset = "0xBEA8F4", VA = "0xBEA8F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D8E0", Offset = "0x66D8E0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event InteractControllerAppearanceEventHandler ControllerVisible
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0xBEA9E0", Offset = "0xBEA9E0", VA = "0xBEA9E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D8F0", Offset = "0x66D8F0")]
			add
			{
			}
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0xBEAACC", Offset = "0xBEAACC", VA = "0xBEAACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D900", Offset = "0x66D900")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event InteractControllerAppearanceEventHandler HiddenOnTouch
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0xBEABB8", Offset = "0xBEABB8", VA = "0xBEABB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D910", Offset = "0x66D910")]
			add
			{
			}
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xBEACA4", Offset = "0xBEACA4", VA = "0xBEACA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D920", Offset = "0x66D920")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event InteractControllerAppearanceEventHandler VisibleOnTouch
		{
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0xBEAD90", Offset = "0xBEAD90", VA = "0xBEAD90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D930", Offset = "0x66D930")]
			add
			{
			}
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0xBEAE7C", Offset = "0xBEAE7C", VA = "0xBEAE7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D940", Offset = "0x66D940")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event InteractControllerAppearanceEventHandler HiddenOnGrab
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xBEAF68", Offset = "0xBEAF68", VA = "0xBEAF68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D950", Offset = "0x66D950")]
			add
			{
			}
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0xBEB054", Offset = "0xBEB054", VA = "0xBEB054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D960", Offset = "0x66D960")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event InteractControllerAppearanceEventHandler VisibleOnGrab
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0xBEB140", Offset = "0xBEB140", VA = "0xBEB140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D970", Offset = "0x66D970")]
			add
			{
			}
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0xBEB22C", Offset = "0xBEB22C", VA = "0xBEB22C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D980", Offset = "0x66D980")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event InteractControllerAppearanceEventHandler HiddenOnUse
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0xBEB318", Offset = "0xBEB318", VA = "0xBEB318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D990", Offset = "0x66D990")]
			add
			{
			}
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0xBEB404", Offset = "0xBEB404", VA = "0xBEB404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D9A0", Offset = "0x66D9A0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event InteractControllerAppearanceEventHandler VisibleOnUse
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0xBEB4F0", Offset = "0xBEB4F0", VA = "0xBEB4F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D9B0", Offset = "0x66D9B0")]
			add
			{
			}
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0xBEB5DC", Offset = "0xBEB5DC", VA = "0xBEB5DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D9C0", Offset = "0x66D9C0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xBEB6C8", Offset = "0xBEB6C8", VA = "0xBEB6C8", Slot = "4")]
		public virtual void OnControllerHidden(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xBEB6F4", Offset = "0xBEB6F4", VA = "0xBEB6F4", Slot = "5")]
		public virtual void OnControllerVisible(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xBEB720", Offset = "0xBEB720", VA = "0xBEB720", Slot = "6")]
		public virtual void OnHiddenOnTouch(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xBEB74C", Offset = "0xBEB74C", VA = "0xBEB74C", Slot = "7")]
		public virtual void OnVisibleOnTouch(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xBEB778", Offset = "0xBEB778", VA = "0xBEB778", Slot = "8")]
		public virtual void OnHiddenOnGrab(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xBEB7A4", Offset = "0xBEB7A4", VA = "0xBEB7A4", Slot = "9")]
		public virtual void OnVisibleOnGrab(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xBEB7D0", Offset = "0xBEB7D0", VA = "0xBEB7D0", Slot = "10")]
		public virtual void OnHiddenOnUse(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xBEB7FC", Offset = "0xBEB7FC", VA = "0xBEB7FC", Slot = "11")]
		public virtual void OnVisibleOnUse(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xBEB828", Offset = "0xBEB828", VA = "0xBEB828", Slot = "12")]
		public virtual void ToggleControllerOnTouch(bool showController, GameObject touchingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xBEB8DC", Offset = "0xBEB8DC", VA = "0xBEB8DC", Slot = "13")]
		public virtual void ToggleControllerOnGrab(bool showController, GameObject grabbingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xBEBA74", Offset = "0xBEBA74", VA = "0xBEBA74", Slot = "14")]
		public virtual void ToggleControllerOnUse(bool showController, GameObject usingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xBEBC60", Offset = "0xBEBC60", VA = "0xBEBC60", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xBEBE48", Offset = "0xBEBE48", VA = "0xBEBE48", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xBEBE5C", Offset = "0xBEBE5C", VA = "0xBEBE5C", Slot = "17")]
		protected virtual void ToggleController(bool showController, GameObject interactingObject, GameObject ignoredObject, float delayTime)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xBEBED4", Offset = "0xBEBED4", VA = "0xBEBED4", Slot = "18")]
		protected virtual void ShowController(GameObject interactingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xBEBF60", Offset = "0xBEBF60", VA = "0xBEBF60", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D9D0", Offset = "0x66D9D0")]
		protected virtual IEnumerator HideController(GameObject interactingObject, GameObject ignoredObject, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xBEC058", Offset = "0xBEC058", VA = "0xBEC058", Slot = "20")]
		protected virtual InteractControllerAppearanceEventArgs SetEventPayload(GameObject interactingObject, GameObject ignroedObject)
		{
			return default(InteractControllerAppearanceEventArgs);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xBEC064", Offset = "0xBEC064", VA = "0xBEC064")]
		public VRTK_InteractControllerAppearance()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public struct InteractHapticsEventArgs
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x2000144")]
	public delegate void InteractHapticsEventHandler(object sender, InteractHapticsEventArgs e);
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6494C0", Offset = "0x6494C0")]
	public class VRTK_InteractHaptics : VRTK_InteractableListener
	{
		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65911C", Offset = "0x65911C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65911C", Offset = "0x65911C")]
		public AudioClip clipOnNearTouch;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65917C", Offset = "0x65917C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65917C", Offset = "0x65917C")]
		public float strengthOnNearTouch;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6591D0", Offset = "0x6591D0")]
		public float durationOnNearTouch;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659208", Offset = "0x659208")]
		public float intervalOnNearTouch;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659240", Offset = "0x659240")]
		public bool cancelOnNearUntouch;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659278", Offset = "0x659278")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659278", Offset = "0x659278")]
		public AudioClip clipOnTouch;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6592D8", Offset = "0x6592D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6592D8", Offset = "0x6592D8")]
		public float strengthOnTouch;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65932C", Offset = "0x65932C")]
		public float durationOnTouch;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659364", Offset = "0x659364")]
		public float intervalOnTouch;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65939C", Offset = "0x65939C")]
		public bool cancelOnUntouch;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6593D4", Offset = "0x6593D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6593D4", Offset = "0x6593D4")]
		public AudioClip clipOnGrab;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659434", Offset = "0x659434")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x659434", Offset = "0x659434")]
		public float strengthOnGrab;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659488", Offset = "0x659488")]
		public float durationOnGrab;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6594C0", Offset = "0x6594C0")]
		public float intervalOnGrab;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6594F8", Offset = "0x6594F8")]
		public bool cancelOnUngrab;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659530", Offset = "0x659530")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659530", Offset = "0x659530")]
		public AudioClip clipOnUse;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659590", Offset = "0x659590")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x659590", Offset = "0x659590")]
		public float strengthOnUse;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6595E4", Offset = "0x6595E4")]
		public float durationOnUse;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65961C", Offset = "0x65961C")]
		public float intervalOnUse;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659654", Offset = "0x659654")]
		public bool cancelOnUnuse;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65968C", Offset = "0x65968C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65968C", Offset = "0x65968C")]
		public VRTK_InteractableObject objectToAffect;

		[Token(Token = "0x4000BDE")]
		protected const float minInterval = 0.05f;

		[Token(Token = "0x14000050")]
		public event InteractHapticsEventHandler InteractHapticsNearTouched
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0xBEF930", Offset = "0xBEF930", VA = "0xBEF930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA34", Offset = "0x66DA34")]
			add
			{
			}
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0xBEFA1C", Offset = "0xBEFA1C", VA = "0xBEFA1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA44", Offset = "0x66DA44")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event InteractHapticsEventHandler InteractHapticsTouched
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xBEFB08", Offset = "0xBEFB08", VA = "0xBEFB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA54", Offset = "0x66DA54")]
			add
			{
			}
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xBEFBF4", Offset = "0xBEFBF4", VA = "0xBEFBF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA64", Offset = "0x66DA64")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event InteractHapticsEventHandler InteractHapticsGrabbed
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xBEFCE0", Offset = "0xBEFCE0", VA = "0xBEFCE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA74", Offset = "0x66DA74")]
			add
			{
			}
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xBEFDCC", Offset = "0xBEFDCC", VA = "0xBEFDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA84", Offset = "0x66DA84")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event InteractHapticsEventHandler InteractHapticsUsed
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xBEFEB8", Offset = "0xBEFEB8", VA = "0xBEFEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA94", Offset = "0x66DA94")]
			add
			{
			}
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xBEFFA4", Offset = "0xBEFFA4", VA = "0xBEFFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DAA4", Offset = "0x66DAA4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xBF0090", Offset = "0xBF0090", VA = "0xBF0090", Slot = "9")]
		public virtual void OnInteractHapticsNearTouched(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xBF00B4", Offset = "0xBF00B4", VA = "0xBF00B4", Slot = "10")]
		public virtual void OnInteractHapticsTouched(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xBF00D8", Offset = "0xBF00D8", VA = "0xBF00D8", Slot = "11")]
		public virtual void OnInteractHapticsGrabbed(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xBF00FC", Offset = "0xBF00FC", VA = "0xBF00FC", Slot = "12")]
		public virtual void OnInteractHapticsUsed(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xBF0120", Offset = "0xBF0120", VA = "0xBF0120", Slot = "13")]
		public virtual void CancelHaptics(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xBF012C", Offset = "0xBF012C", VA = "0xBF012C", Slot = "14")]
		public virtual void HapticsOnNearTouch(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xBF0230", Offset = "0xBF0230", VA = "0xBF0230", Slot = "15")]
		public virtual void HapticsOnTouch(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xBF0334", Offset = "0xBF0334", VA = "0xBF0334", Slot = "16")]
		public virtual void HapticsOnGrab(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xBF0438", Offset = "0xBF0438", VA = "0xBF0438", Slot = "17")]
		public virtual void HapticsOnUse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xBF053C", Offset = "0xBF053C", VA = "0xBF053C", Slot = "18")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xBF0548", Offset = "0xBF0548", VA = "0xBF0548", Slot = "19")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xBF0554", Offset = "0xBF0554", VA = "0xBF0554", Slot = "4")]
		protected override bool SetupListeners(bool throwError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xBF09F4", Offset = "0xBF09F4", VA = "0xBF09F4", Slot = "5")]
		protected override void TearDownListeners()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xBF0CE8", Offset = "0xBF0CE8", VA = "0xBF0CE8", Slot = "20")]
		protected virtual void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float interval)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xBF0D00", Offset = "0xBF0D00", VA = "0xBF0D00", Slot = "21")]
		protected virtual InteractHapticsEventArgs SetEventPayload(VRTK_ControllerReference givenControllerReference)
		{
			return default(InteractHapticsEventArgs);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xBF0D08", Offset = "0xBF0D08", VA = "0xBF0D08", Slot = "22")]
		protected virtual void NearTouchHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xBF0DB4", Offset = "0xBF0DB4", VA = "0xBF0DB4", Slot = "23")]
		protected virtual void TouchHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xBF0E60", Offset = "0xBF0E60", VA = "0xBF0E60", Slot = "24")]
		protected virtual void GrabHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xBF0F0C", Offset = "0xBF0F0C", VA = "0xBF0F0C", Slot = "25")]
		protected virtual void UseHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xBF0FB8", Offset = "0xBF0FB8", VA = "0xBF0FB8", Slot = "26")]
		protected virtual void CancelOn(GameObject givenObject)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xBF1060", Offset = "0xBF1060", VA = "0xBF1060", Slot = "27")]
		protected virtual void CancelNearTouchHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xBF1084", Offset = "0xBF1084", VA = "0xBF1084", Slot = "28")]
		protected virtual void CancelTouchHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xBF10A8", Offset = "0xBF10A8", VA = "0xBF10A8", Slot = "29")]
		protected virtual void CancelGrabHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xBF10CC", Offset = "0xBF10CC", VA = "0xBF10CC", Slot = "30")]
		protected virtual void CancelUseHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xBF10F0", Offset = "0xBF10F0", VA = "0xBF10F0")]
		public VRTK_InteractHaptics()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public struct InteractObjectAppearanceEventArgs
	{
		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject affectingObject;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject objectToIgnore;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRTK_InteractableObject monitoringObject;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRTK_InteractableObject.InteractionType interactionType;
	}
	[Token(Token = "0x2000147")]
	public delegate void InteractObjectAppearanceEventHandler(object sender, InteractObjectAppearanceEventArgs e);
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6494F8", Offset = "0x6494F8")]
	public class VRTK_InteractObjectAppearance : VRTK_InteractableListener
	{
		[Token(Token = "0x200046A")]
		public enum ValidInteractingObject
		{
			[Token(Token = "0x4001FA3")]
			Anything,
			[Token(Token = "0x4001FA4")]
			EitherController,
			[Token(Token = "0x4001FA5")]
			NeitherController,
			[Token(Token = "0x4001FA6")]
			LeftControllerOnly,
			[Token(Token = "0x4001FA7")]
			RightControllerOnly
		}

		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D828", Offset = "0x64D828")]
		private sealed class <ToggleStateAfterTime>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_InteractObjectAppearance <>4__this;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject objectToToggle;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool gameObjectShow;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool rendererShow;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public VRTK_InteractableObject.InteractionType interactionType;

			[Token(Token = "0x170002A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022AA")]
				[Address(RVA = "0xC17BA4", Offset = "0xC17BA4", VA = "0xC17BA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022AC")]
				[Address(RVA = "0xC17C14", Offset = "0xC17C14", VA = "0xC17C14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A7")]
			[Address(RVA = "0xC16730", Offset = "0xC16730", VA = "0xC16730")]
			[DebuggerHidden]
			public <ToggleStateAfterTime>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xC17AA8", Offset = "0xC17AA8", VA = "0xC17AA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A9")]
			[Address(RVA = "0xC17AAC", Offset = "0xC17AAC", VA = "0xC17AAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xC17BAC", Offset = "0xC17BAC", VA = "0xC17BAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65972C", Offset = "0x65972C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65972C", Offset = "0x65972C")]
		public GameObject objectToAffect;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65978C", Offset = "0x65978C")]
		protected VRTK_InteractableObject objectToMonitor;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6597D8", Offset = "0x6597D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6597D8", Offset = "0x6597D8")]
		public bool gameObjectActiveByDefault;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659838", Offset = "0x659838")]
		public bool rendererVisibleByDefault;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659870", Offset = "0x659870")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659870", Offset = "0x659870")]
		public bool gameObjectActiveOnNearTouch;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6598D0", Offset = "0x6598D0")]
		public bool rendererVisibleOnNearTouch;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659908", Offset = "0x659908")]
		public float nearTouchAppearanceDelay;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659940", Offset = "0x659940")]
		public float nearUntouchAppearanceDelay;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659978", Offset = "0x659978")]
		public ValidInteractingObject validNearTouchInteractingObject;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6599B0", Offset = "0x6599B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6599B0", Offset = "0x6599B0")]
		public bool gameObjectActiveOnTouch;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659A10", Offset = "0x659A10")]
		public bool rendererVisibleOnTouch;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659A48", Offset = "0x659A48")]
		public float touchAppearanceDelay;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659A80", Offset = "0x659A80")]
		public float untouchAppearanceDelay;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659AB8", Offset = "0x659AB8")]
		public ValidInteractingObject validTouchInteractingObject;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659AF0", Offset = "0x659AF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659AF0", Offset = "0x659AF0")]
		public bool gameObjectActiveOnGrab;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659B50", Offset = "0x659B50")]
		public bool rendererVisibleOnGrab;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659B88", Offset = "0x659B88")]
		public float grabAppearanceDelay;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659BC0", Offset = "0x659BC0")]
		public float ungrabAppearanceDelay;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659BF8", Offset = "0x659BF8")]
		public ValidInteractingObject validGrabInteractingObject;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659C30", Offset = "0x659C30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659C30", Offset = "0x659C30")]
		public bool gameObjectActiveOnUse;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659C90", Offset = "0x659C90")]
		public bool rendererVisibleOnUse;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659CC8", Offset = "0x659CC8")]
		public float useAppearanceDelay;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659D00", Offset = "0x659D00")]
		public float unuseAppearanceDelay;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659D38", Offset = "0x659D38")]
		public ValidInteractingObject validUseInteractingObject;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<GameObject, bool> currentRenderStates;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Dictionary<GameObject, bool> currentGameObjectStates;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Dictionary<GameObject, Coroutine> affectingRoutines;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected HashSet<GameObject> nearTouchingObjects;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected HashSet<GameObject> touchingObjects;

		[Token(Token = "0x14000054")]
		public event InteractObjectAppearanceEventHandler GameObjectEnabled
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0xC14964", Offset = "0xC14964", VA = "0xC14964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DAB4", Offset = "0x66DAB4")]
			add
			{
			}
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xC14A50", Offset = "0xC14A50", VA = "0xC14A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DAC4", Offset = "0x66DAC4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event InteractObjectAppearanceEventHandler GameObjectDisabled
		{
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0xC14B3C", Offset = "0xC14B3C", VA = "0xC14B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DAD4", Offset = "0x66DAD4")]
			add
			{
			}
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xC14C28", Offset = "0xC14C28", VA = "0xC14C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DAE4", Offset = "0x66DAE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event InteractObjectAppearanceEventHandler RenderersEnabled
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0xC14D14", Offset = "0xC14D14", VA = "0xC14D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DAF4", Offset = "0x66DAF4")]
			add
			{
			}
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0xC14E00", Offset = "0xC14E00", VA = "0xC14E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB04", Offset = "0x66DB04")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event InteractObjectAppearanceEventHandler RenderersDisabled
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0xC14EEC", Offset = "0xC14EEC", VA = "0xC14EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB14", Offset = "0x66DB14")]
			add
			{
			}
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0xC14FD8", Offset = "0xC14FD8", VA = "0xC14FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB24", Offset = "0x66DB24")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xC150C4", Offset = "0xC150C4", VA = "0xC150C4", Slot = "9")]
		public virtual void OnGameObjectEnabled(InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xC15108", Offset = "0xC15108", VA = "0xC15108", Slot = "10")]
		public virtual void OnGameObjectDisabled(InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xC1514C", Offset = "0xC1514C", VA = "0xC1514C", Slot = "11")]
		public virtual void OnRenderersEnabled(InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xC15190", Offset = "0xC15190", VA = "0xC15190", Slot = "12")]
		public virtual void OnRenderersDisabled(InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xC151D4", Offset = "0xC151D4", VA = "0xC151D4", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xC15338", Offset = "0xC15338", VA = "0xC15338", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xC15374", Offset = "0xC15374", VA = "0xC15374", Slot = "4")]
		protected override bool SetupListeners(bool throwError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xC15B4C", Offset = "0xC15B4C", VA = "0xC15B4C", Slot = "5")]
		protected override void TearDownListeners()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xC15EE8", Offset = "0xC15EE8", VA = "0xC15EE8", Slot = "15")]
		protected virtual InteractObjectAppearanceEventArgs SetPayload(GameObject affectingObject, VRTK_InteractableObject.InteractionType interactionType)
		{
			return default(InteractObjectAppearanceEventArgs);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xC15F34", Offset = "0xC15F34", VA = "0xC15F34", Slot = "16")]
		protected virtual void RestoreDefaults()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xC161E0", Offset = "0xC161E0", VA = "0xC161E0", Slot = "17")]
		protected virtual GameObject ObjectToIgnore()
		{
			return null;
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xC16280", Offset = "0xC16280", VA = "0xC16280", Slot = "18")]
		protected virtual void EmitRenderEvent(GameObject objectToToggle, bool rendererShow, VRTK_InteractableObject.InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xC16330", Offset = "0xC16330", VA = "0xC16330", Slot = "19")]
		protected virtual void EmitGameObjectEvent(GameObject objectToToggle, bool gameObjectShow, VRTK_InteractableObject.InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xC163E0", Offset = "0xC163E0", VA = "0xC163E0", Slot = "20")]
		protected virtual void ToggleState(GameObject objectToToggle, bool gameObjectShow, bool rendererShow, VRTK_InteractableObject.InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xC16620", Offset = "0xC16620", VA = "0xC16620", Slot = "21")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66DB34", Offset = "0x66DB34")]
		protected virtual IEnumerator ToggleStateAfterTime(GameObject objectToToggle, bool gameObjectShow, bool rendererShow, float delayTime, VRTK_InteractableObject.InteractionType interactionType)
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xC1675C", Offset = "0xC1675C", VA = "0xC1675C", Slot = "22")]
		protected virtual void CancelRoutines([Optional] GameObject currentAffectingObject)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xC16980", Offset = "0xC16980", VA = "0xC16980", Slot = "23")]
		protected virtual GameObject GetActualController(GameObject givenObject)
		{
			return null;
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xC16A20", Offset = "0xC16A20", VA = "0xC16A20", Slot = "24")]
		protected virtual void InteractableObjectDisabled(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xC16AEC", Offset = "0xC16AEC", VA = "0xC16AEC", Slot = "25")]
		protected virtual bool IsValidInteractingObject(GameObject givenObject, ValidInteractingObject givenInteractingObjectValidType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xC16CB0", Offset = "0xC16CB0", VA = "0xC16CB0", Slot = "26")]
		protected virtual void InteractableObjectNearTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xC16E20", Offset = "0xC16E20", VA = "0xC16E20", Slot = "27")]
		protected virtual void InteractableObjectNearUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xC16F90", Offset = "0xC16F90", VA = "0xC16F90", Slot = "28")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xC17100", Offset = "0xC17100", VA = "0xC17100", Slot = "29")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xC172B8", Offset = "0xC172B8", VA = "0xC172B8", Slot = "30")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xC17400", Offset = "0xC17400", VA = "0xC17400", Slot = "31")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xC17624", Offset = "0xC17624", VA = "0xC17624", Slot = "32")]
		protected virtual void InteractableObjectUsed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xC1776C", Offset = "0xC1776C", VA = "0xC1776C", Slot = "33")]
		protected virtual void InteractableObjectUnused(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xC17990", Offset = "0xC17990", VA = "0xC17990")]
		public VRTK_InteractObjectAppearance()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public struct InteractObjectHighlighterEventArgs
	{
		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_InteractableObject.InteractionType interactionType;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color highlightColor;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject affectingObject;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_InteractableObject objectToMonitor;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject affectedObject;
	}
	[Token(Token = "0x200014A")]
	public delegate void InteractObjectHighlighterEventHandler(object sender, InteractObjectHighlighterEventArgs e);
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649530", Offset = "0x649530")]
	public class VRTK_InteractObjectHighlighter : VRTK_InteractableListener
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659DB0", Offset = "0x659DB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659DB0", Offset = "0x659DB0")]
		public Color nearTouchHighlight;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659E10", Offset = "0x659E10")]
		public Color touchHighlight;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659E48", Offset = "0x659E48")]
		public Color grabHighlight;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659E80", Offset = "0x659E80")]
		public Color useHighlight;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659EB8", Offset = "0x659EB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659EB8", Offset = "0x659EB8")]
		public VRTK_InteractableObject objectToMonitor;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659F18", Offset = "0x659F18")]
		public GameObject objectToHighlight;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659F50", Offset = "0x659F50")]
		public VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659F88", Offset = "0x659F88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x659F88", Offset = "0x659F88")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x659F88", Offset = "0x659F88")]
		public VRTK_InteractableObject objectToAffect;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Color currentColour;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected VRTK_BaseHighlighter baseHighlighter;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool createBaseHighlighter;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected GameObject currentAffectingObject;

		[Token(Token = "0x14000058")]
		public event InteractObjectHighlighterEventHandler InteractObjectHighlighterHighlighted
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0xC17C1C", Offset = "0xC17C1C", VA = "0xC17C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB98", Offset = "0x66DB98")]
			add
			{
			}
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0xC17D08", Offset = "0xC17D08", VA = "0xC17D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DBA8", Offset = "0x66DBA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event InteractObjectHighlighterEventHandler InteractObjectHighlighterUnhighlighted
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xC17DF4", Offset = "0xC17DF4", VA = "0xC17DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DBB8", Offset = "0x66DBB8")]
			add
			{
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xC17EE0", Offset = "0xC17EE0", VA = "0xC17EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DBC8", Offset = "0x66DBC8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xC17FCC", Offset = "0xC17FCC", VA = "0xC17FCC", Slot = "9")]
		public virtual void OnInteractObjectHighlighterHighlighted(InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xC18018", Offset = "0xC18018", VA = "0xC18018", Slot = "10")]
		public virtual void OnInteractObjectHighlighterUnhighlighted(InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xC18064", Offset = "0xC18064", VA = "0xC18064", Slot = "11")]
		public virtual void ResetHighlighter()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xC18104", Offset = "0xC18104", VA = "0xC18104", Slot = "12")]
		public virtual void Highlight(Color highlightColor)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xC18298", Offset = "0xC18298", VA = "0xC18298", Slot = "13")]
		public virtual void Unhighlight()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xC1835C", Offset = "0xC1835C", VA = "0xC1835C", Slot = "14")]
		public virtual Color GetCurrentHighlightColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xC18368", Offset = "0xC18368", VA = "0xC18368", Slot = "15")]
		public virtual GameObject GetAffectingObject()
		{
			return null;
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xC18370", Offset = "0xC18370", VA = "0xC18370", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xC18538", Offset = "0xC18538", VA = "0xC18538", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xC185BC", Offset = "0xC185BC", VA = "0xC185BC", Slot = "4")]
		protected override bool SetupListeners(bool throwError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xC18A54", Offset = "0xC18A54", VA = "0xC18A54", Slot = "5")]
		protected override void TearDownListeners()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xC18D48", Offset = "0xC18D48", VA = "0xC18D48", Slot = "18")]
		protected virtual InteractObjectHighlighterEventArgs SetEventArgs(VRTK_InteractableObject.InteractionType interactionType, GameObject affectingObject)
		{
			return default(InteractObjectHighlighterEventArgs);
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xC18D74", Offset = "0xC18D74", VA = "0xC18D74", Slot = "19")]
		protected virtual void NearTouchHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xC18E08", Offset = "0xC18E08", VA = "0xC18E08", Slot = "20")]
		protected virtual void NearTouchUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xC18F58", Offset = "0xC18F58", VA = "0xC18F58", Slot = "21")]
		protected virtual void TouchHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xC18FEC", Offset = "0xC18FEC", VA = "0xC18FEC", Slot = "22")]
		protected virtual void TouchUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xC191A4", Offset = "0xC191A4", VA = "0xC191A4", Slot = "23")]
		protected virtual void GrabHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xC19300", Offset = "0xC19300", VA = "0xC19300", Slot = "24")]
		protected virtual void GrabUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xC19508", Offset = "0xC19508", VA = "0xC19508", Slot = "25")]
		protected virtual void UseHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xC1959C", Offset = "0xC1959C", VA = "0xC1959C", Slot = "26")]
		protected virtual void UseUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xC19818", Offset = "0xC19818", VA = "0xC19818", Slot = "27")]
		protected virtual void InitialiseHighlighter(Color highlightColor)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xC19A00", Offset = "0xC19A00", VA = "0xC19A00", Slot = "28")]
		protected virtual VRTK_BaseHighlighter GetValidHighlighter()
		{
			return null;
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xC19A90", Offset = "0xC19A90", VA = "0xC19A90")]
		public VRTK_InteractObjectHighlighter()
		{
		}
	}
	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649568", Offset = "0x649568")]
	public class VRTK_ObjectTouchAutoInteract : VRTK_InteractableListener
	{
		[Token(Token = "0x200046C")]
		public enum AutoInteractions
		{
			[Token(Token = "0x4001FB1")]
			Never,
			[Token(Token = "0x4001FB2")]
			NoButtonHeld,
			[Token(Token = "0x4001FB3")]
			ButtonHeld
		}

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A018", Offset = "0x65A018")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A018", Offset = "0x65A018")]
		public AutoInteractions grabOnTouchWhen;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A078", Offset = "0x65A078")]
		public float regrabDelay;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A0B0", Offset = "0x65A0B0")]
		public bool continuousGrabCheck;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A0E8", Offset = "0x65A0E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A0E8", Offset = "0x65A0E8")]
		public AutoInteractions useOnTouchWhen;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A148", Offset = "0x65A148")]
		public float reuseDelay;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A180", Offset = "0x65A180")]
		public bool continuousUseCheck;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A1B8", Offset = "0x65A1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A1B8", Offset = "0x65A1B8")]
		public VRTK_InteractableObject interactableObject;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float regrabTimer;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected float reuseTimer;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected List<GameObject> touchers;

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xA1FF88", Offset = "0xA1FF88", VA = "0xA1FF88", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xA1FFFC", Offset = "0xA1FFFC", VA = "0xA1FFFC", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xA20008", Offset = "0xA20008", VA = "0xA20008", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xA20160", Offset = "0xA20160", VA = "0xA20160", Slot = "4")]
		protected override bool SetupListeners(bool throwError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xA204A0", Offset = "0xA204A0", VA = "0xA204A0", Slot = "5")]
		protected override void TearDownListeners()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xA20634", Offset = "0xA20634", VA = "0xA20634", Slot = "12")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xA20698", Offset = "0xA20698", VA = "0xA20698", Slot = "13")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xA206B0", Offset = "0xA206B0", VA = "0xA206B0", Slot = "14")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xA206E8", Offset = "0xA206E8", VA = "0xA206E8", Slot = "15")]
		protected virtual void InteractableObjectUnused(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xA20720", Offset = "0xA20720", VA = "0xA20720", Slot = "16")]
		protected virtual void ManageTouchers(GameObject interactingObject, bool add)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xA207C0", Offset = "0xA207C0", VA = "0xA207C0", Slot = "17")]
		protected virtual void CheckGrab(GameObject interactingObject)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xA208EC", Offset = "0xA208EC", VA = "0xA208EC", Slot = "18")]
		protected virtual void CheckUse(GameObject interactingObject)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xA20A84", Offset = "0xA20A84", VA = "0xA20A84")]
		public VRTK_ObjectTouchAutoInteract()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public struct ControllerInteractionEventArgs
	{
		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float buttonPressure;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 touchpadAxis;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float touchpadAngle;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 touchpadTwoAxis;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float touchpadTwoAngle;
	}
	[Token(Token = "0x200014E")]
	public delegate void ControllerInteractionEventHandler(object sender, ControllerInteractionEventArgs e);
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6495A0", Offset = "0x6495A0")]
	public class VRTK_ControllerEvents : MonoBehaviour
	{
		[Token(Token = "0x200046D")]
		public enum ButtonAlias
		{
			[Token(Token = "0x4001FB5")]
			Undefined,
			[Token(Token = "0x4001FB6")]
			TriggerHairline,
			[Token(Token = "0x4001FB7")]
			TriggerTouch,
			[Token(Token = "0x4001FB8")]
			TriggerPress,
			[Token(Token = "0x4001FB9")]
			TriggerClick,
			[Token(Token = "0x4001FBA")]
			GripHairline,
			[Token(Token = "0x4001FBB")]
			GripTouch,
			[Token(Token = "0x4001FBC")]
			GripPress,
			[Token(Token = "0x4001FBD")]
			GripClick,
			[Token(Token = "0x4001FBE")]
			TouchpadTouch,
			[Token(Token = "0x4001FBF")]
			TouchpadPress,
			[Token(Token = "0x4001FC0")]
			TouchpadTwoTouch,
			[Token(Token = "0x4001FC1")]
			TouchpadTwoPress,
			[Token(Token = "0x4001FC2")]
			ButtonOneTouch,
			[Token(Token = "0x4001FC3")]
			ButtonOnePress,
			[Token(Token = "0x4001FC4")]
			ButtonTwoTouch,
			[Token(Token = "0x4001FC5")]
			ButtonTwoPress,
			[Token(Token = "0x4001FC6")]
			StartMenuPress,
			[Token(Token = "0x4001FC7")]
			TouchpadSense,
			[Token(Token = "0x4001FC8")]
			TriggerSense,
			[Token(Token = "0x4001FC9")]
			MiddleFingerSense,
			[Token(Token = "0x4001FCA")]
			RingFingerSense,
			[Token(Token = "0x4001FCB")]
			PinkyFingerSense,
			[Token(Token = "0x4001FCC")]
			GripSense,
			[Token(Token = "0x4001FCD")]
			GripSensePress
		}

		[Token(Token = "0x200046E")]
		public enum Vector2AxisAlias
		{
			[Token(Token = "0x4001FCF")]
			Undefined,
			[Token(Token = "0x4001FD0")]
			Touchpad,
			[Token(Token = "0x4001FD1")]
			TouchpadTwo
		}

		[Token(Token = "0x200046F")]
		public enum AxisType
		{
			[Token(Token = "0x4001FD3")]
			Digital,
			[Token(Token = "0x4001FD4")]
			Axis,
			[Token(Token = "0x4001FD5")]
			SenseAxis
		}

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A218", Offset = "0x65A218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A218", Offset = "0x65A218")]
		public int axisFidelity;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A278", Offset = "0x65A278")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65A278", Offset = "0x65A278")]
		public float senseAxisForceZeroThreshold;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A2CC", Offset = "0x65A2CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65A2CC", Offset = "0x65A2CC")]
		public float senseAxisPressThreshold;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A320", Offset = "0x65A320")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A320", Offset = "0x65A320")]
		public float triggerClickThreshold;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A380", Offset = "0x65A380")]
		public float triggerForceZeroThreshold;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A3B8", Offset = "0x65A3B8")]
		public bool triggerAxisZeroOnUntouch;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A3F0", Offset = "0x65A3F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A3F0", Offset = "0x65A3F0")]
		public float gripClickThreshold;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A450", Offset = "0x65A450")]
		public float gripForceZeroThreshold;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A488", Offset = "0x65A488")]
		public bool gripAxisZeroOnUntouch;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A4C0", Offset = "0x65A4C0")]
		public bool triggerPressed;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A4D0", Offset = "0x65A4D0")]
		public bool triggerTouched;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A4E0", Offset = "0x65A4E0")]
		public bool triggerHairlinePressed;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A4F0", Offset = "0x65A4F0")]
		public bool triggerClicked;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A500", Offset = "0x65A500")]
		public bool triggerAxisChanged;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A510", Offset = "0x65A510")]
		public bool triggerSenseAxisChanged;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A520", Offset = "0x65A520")]
		public bool gripPressed;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A530", Offset = "0x65A530")]
		public bool gripTouched;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A540", Offset = "0x65A540")]
		public bool gripHairlinePressed;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A550", Offset = "0x65A550")]
		public bool gripClicked;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A560", Offset = "0x65A560")]
		public bool gripAxisChanged;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A570", Offset = "0x65A570")]
		public bool touchpadPressed;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A580", Offset = "0x65A580")]
		public bool touchpadTouched;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A590", Offset = "0x65A590")]
		public bool touchpadAxisChanged;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A5A0", Offset = "0x65A5A0")]
		public bool touchpadSenseAxisChanged;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A5B0", Offset = "0x65A5B0")]
		public bool touchpadTwoTouched;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A5C0", Offset = "0x65A5C0")]
		public bool touchpadTwoPressed;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A5D0", Offset = "0x65A5D0")]
		public bool touchpadTwoAxisChanged;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A5E0", Offset = "0x65A5E0")]
		public bool buttonOnePressed;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A5F0", Offset = "0x65A5F0")]
		public bool buttonOneTouched;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A600", Offset = "0x65A600")]
		public bool buttonTwoPressed;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A610", Offset = "0x65A610")]
		public bool buttonTwoTouched;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A620", Offset = "0x65A620")]
		public bool startMenuPressed;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A630", Offset = "0x65A630")]
		public bool middleFingerSenseAxisChanged;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A640", Offset = "0x65A640")]
		public bool ringFingerSenseAxisChanged;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A650", Offset = "0x65A650")]
		public bool pinkyFingerSenseAxisChanged;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A660", Offset = "0x65A660")]
		public bool gripSenseAxisChanged;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A670", Offset = "0x65A670")]
		public bool gripSensePressed;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65A680", Offset = "0x65A680")]
		public bool controllerVisible;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected Vector2 touchpadAxis;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected Vector2 touchpadTwoAxis;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		protected Vector2 triggerAxis;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected Vector2 gripAxis;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		protected float touchpadSenseAxis;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		protected float triggerSenseAxis;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		protected float middleFingerSenseAxis;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		protected float ringFingerSenseAxis;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		protected float pinkyFingerSenseAxis;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		protected float gripSenseAxis;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		protected float hairTriggerDelta;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		protected float hairGripDelta;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x1400005A")]
		public event ControllerInteractionEventHandler TriggerPressed
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0xD9D6C8", Offset = "0xD9D6C8", VA = "0xD9D6C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DBD8", Offset = "0x66DBD8")]
			add
			{
			}
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0xD9D7B4", Offset = "0xD9D7B4", VA = "0xD9D7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DBE8", Offset = "0x66DBE8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event ControllerInteractionEventHandler TriggerReleased
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xD9D8A0", Offset = "0xD9D8A0", VA = "0xD9D8A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DBF8", Offset = "0x66DBF8")]
			add
			{
			}
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0xD9D98C", Offset = "0xD9D98C", VA = "0xD9D98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC08", Offset = "0x66DC08")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event ControllerInteractionEventHandler TriggerTouchStart
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0xD9DA78", Offset = "0xD9DA78", VA = "0xD9DA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC18", Offset = "0x66DC18")]
			add
			{
			}
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0xD9DB64", Offset = "0xD9DB64", VA = "0xD9DB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC28", Offset = "0x66DC28")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event ControllerInteractionEventHandler TriggerTouchEnd
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0xD9DC50", Offset = "0xD9DC50", VA = "0xD9DC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC38", Offset = "0x66DC38")]
			add
			{
			}
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0xD9DD3C", Offset = "0xD9DD3C", VA = "0xD9DD3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC48", Offset = "0x66DC48")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event ControllerInteractionEventHandler TriggerHairlineStart
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0xD9DE28", Offset = "0xD9DE28", VA = "0xD9DE28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC58", Offset = "0x66DC58")]
			add
			{
			}
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0xD9DF14", Offset = "0xD9DF14", VA = "0xD9DF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC68", Offset = "0x66DC68")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event ControllerInteractionEventHandler TriggerHairlineEnd
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0xD9E000", Offset = "0xD9E000", VA = "0xD9E000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC78", Offset = "0x66DC78")]
			add
			{
			}
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0xD9E0EC", Offset = "0xD9E0EC", VA = "0xD9E0EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC88", Offset = "0x66DC88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000060")]
		public event ControllerInteractionEventHandler TriggerClicked
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xD9E1D8", Offset = "0xD9E1D8", VA = "0xD9E1D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DC98", Offset = "0x66DC98")]
			add
			{
			}
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xD9E2C4", Offset = "0xD9E2C4", VA = "0xD9E2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DCA8", Offset = "0x66DCA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public event ControllerInteractionEventHandler TriggerUnclicked
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0xD9E3B0", Offset = "0xD9E3B0", VA = "0xD9E3B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DCB8", Offset = "0x66DCB8")]
			add
			{
			}
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xD9E49C", Offset = "0xD9E49C", VA = "0xD9E49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DCC8", Offset = "0x66DCC8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public event ControllerInteractionEventHandler TriggerAxisChanged
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xD9E588", Offset = "0xD9E588", VA = "0xD9E588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DCD8", Offset = "0x66DCD8")]
			add
			{
			}
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xD9E674", Offset = "0xD9E674", VA = "0xD9E674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DCE8", Offset = "0x66DCE8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public event ControllerInteractionEventHandler TriggerSenseAxisChanged
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xD9E760", Offset = "0xD9E760", VA = "0xD9E760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DCF8", Offset = "0x66DCF8")]
			add
			{
			}
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xD9E84C", Offset = "0xD9E84C", VA = "0xD9E84C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD08", Offset = "0x66DD08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event ControllerInteractionEventHandler GripPressed
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xD9E938", Offset = "0xD9E938", VA = "0xD9E938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD18", Offset = "0x66DD18")]
			add
			{
			}
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0xD9EA24", Offset = "0xD9EA24", VA = "0xD9EA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD28", Offset = "0x66DD28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event ControllerInteractionEventHandler GripReleased
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0xD9EB10", Offset = "0xD9EB10", VA = "0xD9EB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD38", Offset = "0x66DD38")]
			add
			{
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0xD9EBFC", Offset = "0xD9EBFC", VA = "0xD9EBFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD48", Offset = "0x66DD48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event ControllerInteractionEventHandler GripTouchStart
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0xD9ECE8", Offset = "0xD9ECE8", VA = "0xD9ECE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD58", Offset = "0x66DD58")]
			add
			{
			}
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0xD9EDD4", Offset = "0xD9EDD4", VA = "0xD9EDD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD68", Offset = "0x66DD68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event ControllerInteractionEventHandler GripTouchEnd
		{
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xD9EEC0", Offset = "0xD9EEC0", VA = "0xD9EEC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD78", Offset = "0x66DD78")]
			add
			{
			}
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0xD9EFAC", Offset = "0xD9EFAC", VA = "0xD9EFAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD88", Offset = "0x66DD88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public event ControllerInteractionEventHandler GripHairlineStart
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xD9F098", Offset = "0xD9F098", VA = "0xD9F098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD98", Offset = "0x66DD98")]
			add
			{
			}
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xD9F184", Offset = "0xD9F184", VA = "0xD9F184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DDA8", Offset = "0x66DDA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event ControllerInteractionEventHandler GripHairlineEnd
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xD9F270", Offset = "0xD9F270", VA = "0xD9F270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DDB8", Offset = "0x66DDB8")]
			add
			{
			}
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xD9F35C", Offset = "0xD9F35C", VA = "0xD9F35C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DDC8", Offset = "0x66DDC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event ControllerInteractionEventHandler GripClicked
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xD9F448", Offset = "0xD9F448", VA = "0xD9F448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DDD8", Offset = "0x66DDD8")]
			add
			{
			}
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0xD9F534", Offset = "0xD9F534", VA = "0xD9F534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DDE8", Offset = "0x66DDE8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event ControllerInteractionEventHandler GripUnclicked
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xD9F620", Offset = "0xD9F620", VA = "0xD9F620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DDF8", Offset = "0x66DDF8")]
			add
			{
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0xD9F70C", Offset = "0xD9F70C", VA = "0xD9F70C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE08", Offset = "0x66DE08")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event ControllerInteractionEventHandler GripAxisChanged
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0xD9F7F8", Offset = "0xD9F7F8", VA = "0xD9F7F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE18", Offset = "0x66DE18")]
			add
			{
			}
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0xD9F8E4", Offset = "0xD9F8E4", VA = "0xD9F8E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE28", Offset = "0x66DE28")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event ControllerInteractionEventHandler TouchpadPressed
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0xD9F9D0", Offset = "0xD9F9D0", VA = "0xD9F9D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE38", Offset = "0x66DE38")]
			add
			{
			}
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0xD9FABC", Offset = "0xD9FABC", VA = "0xD9FABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE48", Offset = "0x66DE48")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006E")]
		public event ControllerInteractionEventHandler TouchpadReleased
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xD9FBA8", Offset = "0xD9FBA8", VA = "0xD9FBA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE58", Offset = "0x66DE58")]
			add
			{
			}
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xD9FC94", Offset = "0xD9FC94", VA = "0xD9FC94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE68", Offset = "0x66DE68")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public event ControllerInteractionEventHandler TouchpadTouchStart
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xD9FD80", Offset = "0xD9FD80", VA = "0xD9FD80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE78", Offset = "0x66DE78")]
			add
			{
			}
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0xD9FE70", Offset = "0xD9FE70", VA = "0xD9FE70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE88", Offset = "0x66DE88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public event ControllerInteractionEventHandler TouchpadTouchEnd
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xD9FF60", Offset = "0xD9FF60", VA = "0xD9FF60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DE98", Offset = "0x66DE98")]
			add
			{
			}
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0xDA0050", Offset = "0xDA0050", VA = "0xDA0050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DEA8", Offset = "0x66DEA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event ControllerInteractionEventHandler TouchpadAxisChanged
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xDA0140", Offset = "0xDA0140", VA = "0xDA0140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DEB8", Offset = "0x66DEB8")]
			add
			{
			}
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0xDA0230", Offset = "0xDA0230", VA = "0xDA0230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DEC8", Offset = "0x66DEC8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event ControllerInteractionEventHandler TouchpadSenseAxisChanged
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xDA0320", Offset = "0xDA0320", VA = "0xDA0320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DED8", Offset = "0x66DED8")]
			add
			{
			}
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0xDA0410", Offset = "0xDA0410", VA = "0xDA0410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DEE8", Offset = "0x66DEE8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public event ControllerInteractionEventHandler TouchpadTwoPressed
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0xDA0500", Offset = "0xDA0500", VA = "0xDA0500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DEF8", Offset = "0x66DEF8")]
			add
			{
			}
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0xDA05F0", Offset = "0xDA05F0", VA = "0xDA05F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF08", Offset = "0x66DF08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public event ControllerInteractionEventHandler TouchpadTwoReleased
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0xDA06E0", Offset = "0xDA06E0", VA = "0xDA06E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF18", Offset = "0x66DF18")]
			add
			{
			}
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0xDA07D0", Offset = "0xDA07D0", VA = "0xDA07D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF28", Offset = "0x66DF28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public event ControllerInteractionEventHandler TouchpadTwoTouchStart
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0xDA08C0", Offset = "0xDA08C0", VA = "0xDA08C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF38", Offset = "0x66DF38")]
			add
			{
			}
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0xDA09B0", Offset = "0xDA09B0", VA = "0xDA09B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF48", Offset = "0x66DF48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public event ControllerInteractionEventHandler TouchpadTwoTouchEnd
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0xDA0AA0", Offset = "0xDA0AA0", VA = "0xDA0AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF58", Offset = "0x66DF58")]
			add
			{
			}
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0xDA0B90", Offset = "0xDA0B90", VA = "0xDA0B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF68", Offset = "0x66DF68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000077")]
		public event ControllerInteractionEventHandler TouchpadTwoAxisChanged
		{
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0xDA0C80", Offset = "0xDA0C80", VA = "0xDA0C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF78", Offset = "0x66DF78")]
			add
			{
			}
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xDA0D70", Offset = "0xDA0D70", VA = "0xDA0D70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF88", Offset = "0x66DF88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public event ControllerInteractionEventHandler ButtonOneTouchStart
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0xDA0E60", Offset = "0xDA0E60", VA = "0xDA0E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF98", Offset = "0x66DF98")]
			add
			{
			}
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0xDA0F50", Offset = "0xDA0F50", VA = "0xDA0F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DFA8", Offset = "0x66DFA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public event ControllerInteractionEventHandler ButtonOneTouchEnd
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xDA1040", Offset = "0xDA1040", VA = "0xDA1040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DFB8", Offset = "0x66DFB8")]
			add
			{
			}
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0xDA1130", Offset = "0xDA1130", VA = "0xDA1130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DFC8", Offset = "0x66DFC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public event ControllerInteractionEventHandler ButtonOnePressed
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0xDA1220", Offset = "0xDA1220", VA = "0xDA1220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DFD8", Offset = "0x66DFD8")]
			add
			{
			}
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0xDA1310", Offset = "0xDA1310", VA = "0xDA1310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DFE8", Offset = "0x66DFE8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public event ControllerInteractionEventHandler ButtonOneReleased
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0xDA1400", Offset = "0xDA1400", VA = "0xDA1400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DFF8", Offset = "0x66DFF8")]
			add
			{
			}
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0xDA14F0", Offset = "0xDA14F0", VA = "0xDA14F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E008", Offset = "0x66E008")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007C")]
		public event ControllerInteractionEventHandler ButtonTwoTouchStart
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0xDA15E0", Offset = "0xDA15E0", VA = "0xDA15E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E018", Offset = "0x66E018")]
			add
			{
			}
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0xDA16D0", Offset = "0xDA16D0", VA = "0xDA16D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E028", Offset = "0x66E028")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public event ControllerInteractionEventHandler ButtonTwoTouchEnd
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0xDA17C0", Offset = "0xDA17C0", VA = "0xDA17C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E038", Offset = "0x66E038")]
			add
			{
			}
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0xDA18B0", Offset = "0xDA18B0", VA = "0xDA18B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E048", Offset = "0x66E048")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public event ControllerInteractionEventHandler ButtonTwoPressed
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0xDA19A0", Offset = "0xDA19A0", VA = "0xDA19A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E058", Offset = "0x66E058")]
			add
			{
			}
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0xDA1A90", Offset = "0xDA1A90", VA = "0xDA1A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E068", Offset = "0x66E068")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public event ControllerInteractionEventHandler ButtonTwoReleased
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0xDA1B80", Offset = "0xDA1B80", VA = "0xDA1B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E078", Offset = "0x66E078")]
			add
			{
			}
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0xDA1C70", Offset = "0xDA1C70", VA = "0xDA1C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E088", Offset = "0x66E088")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public event ControllerInteractionEventHandler StartMenuPressed
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0xDA1D60", Offset = "0xDA1D60", VA = "0xDA1D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E098", Offset = "0x66E098")]
			add
			{
			}
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xDA1E50", Offset = "0xDA1E50", VA = "0xDA1E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E0A8", Offset = "0x66E0A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public event ControllerInteractionEventHandler StartMenuReleased
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0xDA1F40", Offset = "0xDA1F40", VA = "0xDA1F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E0B8", Offset = "0x66E0B8")]
			add
			{
			}
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0xDA2030", Offset = "0xDA2030", VA = "0xDA2030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E0C8", Offset = "0x66E0C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public event ControllerInteractionEventHandler MiddleFingerSenseAxisChanged
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0xDA2120", Offset = "0xDA2120", VA = "0xDA2120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E0D8", Offset = "0x66E0D8")]
			add
			{
			}
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0xDA2210", Offset = "0xDA2210", VA = "0xDA2210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E0E8", Offset = "0x66E0E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public event ControllerInteractionEventHandler RingFingerSenseAxisChanged
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0xDA2300", Offset = "0xDA2300", VA = "0xDA2300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E0F8", Offset = "0x66E0F8")]
			add
			{
			}
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0xDA23F0", Offset = "0xDA23F0", VA = "0xDA23F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E108", Offset = "0x66E108")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public event ControllerInteractionEventHandler PinkyFingerSenseAxisChanged
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0xDA24E0", Offset = "0xDA24E0", VA = "0xDA24E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E118", Offset = "0x66E118")]
			add
			{
			}
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xDA25D0", Offset = "0xDA25D0", VA = "0xDA25D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E128", Offset = "0x66E128")]
			remove
			{
			}
		}

		[Token(Token = "0x14000085")]
		public event ControllerInteractionEventHandler GripSenseAxisChanged
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0xDA26C0", Offset = "0xDA26C0", VA = "0xDA26C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E138", Offset = "0x66E138")]
			add
			{
			}
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0xDA27B0", Offset = "0xDA27B0", VA = "0xDA27B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E148", Offset = "0x66E148")]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public event ControllerInteractionEventHandler GripSensePressed
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0xDA28A0", Offset = "0xDA28A0", VA = "0xDA28A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E158", Offset = "0x66E158")]
			add
			{
			}
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0xDA2990", Offset = "0xDA2990", VA = "0xDA2990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E168", Offset = "0x66E168")]
			remove
			{
			}
		}

		[Token(Token = "0x14000087")]
		public event ControllerInteractionEventHandler GripSenseReleased
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0xDA2A80", Offset = "0xDA2A80", VA = "0xDA2A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E178", Offset = "0x66E178")]
			add
			{
			}
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xDA2B70", Offset = "0xDA2B70", VA = "0xDA2B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E188", Offset = "0x66E188")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public event ControllerInteractionEventHandler ControllerEnabled
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xDA2C60", Offset = "0xDA2C60", VA = "0xDA2C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E198", Offset = "0x66E198")]
			add
			{
			}
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xDA2D50", Offset = "0xDA2D50", VA = "0xDA2D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E1A8", Offset = "0x66E1A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public event ControllerInteractionEventHandler ControllerDisabled
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xDA2E40", Offset = "0xDA2E40", VA = "0xDA2E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E1B8", Offset = "0x66E1B8")]
			add
			{
			}
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xDA2F30", Offset = "0xDA2F30", VA = "0xDA2F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E1C8", Offset = "0x66E1C8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public event ControllerInteractionEventHandler ControllerIndexChanged
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0xDA3020", Offset = "0xDA3020", VA = "0xDA3020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E1D8", Offset = "0x66E1D8")]
			add
			{
			}
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xDA3110", Offset = "0xDA3110", VA = "0xDA3110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E1E8", Offset = "0x66E1E8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public event ControllerInteractionEventHandler ControllerModelAvailable
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0xDA3200", Offset = "0xDA3200", VA = "0xDA3200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E1F8", Offset = "0x66E1F8")]
			add
			{
			}
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xDA32F0", Offset = "0xDA32F0", VA = "0xDA32F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E208", Offset = "0x66E208")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public event ControllerInteractionEventHandler ControllerVisible
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0xDA33E0", Offset = "0xDA33E0", VA = "0xDA33E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E218", Offset = "0x66E218")]
			add
			{
			}
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xDA34D0", Offset = "0xDA34D0", VA = "0xDA34D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E228", Offset = "0x66E228")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public event ControllerInteractionEventHandler ControllerHidden
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0xDA35C0", Offset = "0xDA35C0", VA = "0xDA35C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E238", Offset = "0x66E238")]
			add
			{
			}
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0xDA36B0", Offset = "0xDA36B0", VA = "0xDA36B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E248", Offset = "0x66E248")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xDA37A0", Offset = "0xDA37A0", VA = "0xDA37A0", Slot = "4")]
		public virtual void OnTriggerPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xDA37EC", Offset = "0xDA37EC", VA = "0xDA37EC", Slot = "5")]
		public virtual void OnTriggerReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xDA3838", Offset = "0xDA3838", VA = "0xDA3838", Slot = "6")]
		public virtual void OnTriggerTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xDA3884", Offset = "0xDA3884", VA = "0xDA3884", Slot = "7")]
		public virtual void OnTriggerTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xDA38D0", Offset = "0xDA38D0", VA = "0xDA38D0", Slot = "8")]
		public virtual void OnTriggerHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xDA391C", Offset = "0xDA391C", VA = "0xDA391C", Slot = "9")]
		public virtual void OnTriggerHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xDA3968", Offset = "0xDA3968", VA = "0xDA3968", Slot = "10")]
		public virtual void OnTriggerClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xDA39B4", Offset = "0xDA39B4", VA = "0xDA39B4", Slot = "11")]
		public virtual void OnTriggerUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xDA3A00", Offset = "0xDA3A00", VA = "0xDA3A00", Slot = "12")]
		public virtual void OnTriggerAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xDA3A4C", Offset = "0xDA3A4C", VA = "0xDA3A4C", Slot = "13")]
		public virtual void OnTriggerSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xDA3A98", Offset = "0xDA3A98", VA = "0xDA3A98", Slot = "14")]
		public virtual void OnGripPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xDA3AE4", Offset = "0xDA3AE4", VA = "0xDA3AE4", Slot = "15")]
		public virtual void OnGripReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xDA3B30", Offset = "0xDA3B30", VA = "0xDA3B30", Slot = "16")]
		public virtual void OnGripTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xDA3B7C", Offset = "0xDA3B7C", VA = "0xDA3B7C", Slot = "17")]
		public virtual void OnGripTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xDA3BC8", Offset = "0xDA3BC8", VA = "0xDA3BC8", Slot = "18")]
		public virtual void OnGripHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xDA3C14", Offset = "0xDA3C14", VA = "0xDA3C14", Slot = "19")]
		public virtual void OnGripHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xDA3C60", Offset = "0xDA3C60", VA = "0xDA3C60", Slot = "20")]
		public virtual void OnGripClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xDA3CAC", Offset = "0xDA3CAC", VA = "0xDA3CAC", Slot = "21")]
		public virtual void OnGripUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xDA3CF8", Offset = "0xDA3CF8", VA = "0xDA3CF8", Slot = "22")]
		public virtual void OnGripAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xDA3D44", Offset = "0xDA3D44", VA = "0xDA3D44", Slot = "23")]
		public virtual void OnTouchpadPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xDA3D90", Offset = "0xDA3D90", VA = "0xDA3D90", Slot = "24")]
		public virtual void OnTouchpadReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xDA3DDC", Offset = "0xDA3DDC", VA = "0xDA3DDC", Slot = "25")]
		public virtual void OnTouchpadTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xDA3E28", Offset = "0xDA3E28", VA = "0xDA3E28", Slot = "26")]
		public virtual void OnTouchpadTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xDA3E74", Offset = "0xDA3E74", VA = "0xDA3E74", Slot = "27")]
		public virtual void OnTouchpadAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xDA3EC0", Offset = "0xDA3EC0", VA = "0xDA3EC0", Slot = "28")]
		public virtual void OnTouchpadSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xDA3F0C", Offset = "0xDA3F0C", VA = "0xDA3F0C", Slot = "29")]
		public virtual void OnTouchpadTwoPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xDA3F58", Offset = "0xDA3F58", VA = "0xDA3F58", Slot = "30")]
		public virtual void OnTouchpadTwoReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xDA3FA4", Offset = "0xDA3FA4", VA = "0xDA3FA4", Slot = "31")]
		public virtual void OnTouchpadTwoTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xDA3FF0", Offset = "0xDA3FF0", VA = "0xDA3FF0", Slot = "32")]
		public virtual void OnTouchpadTwoTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xDA403C", Offset = "0xDA403C", VA = "0xDA403C", Slot = "33")]
		public virtual void OnTouchpadTwoAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xDA4088", Offset = "0xDA4088", VA = "0xDA4088", Slot = "34")]
		public virtual void OnButtonOneTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xDA40D4", Offset = "0xDA40D4", VA = "0xDA40D4", Slot = "35")]
		public virtual void OnButtonOneTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xDA4120", Offset = "0xDA4120", VA = "0xDA4120", Slot = "36")]
		public virtual void OnButtonOnePressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xDA416C", Offset = "0xDA416C", VA = "0xDA416C", Slot = "37")]
		public virtual void OnButtonOneReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xDA41B8", Offset = "0xDA41B8", VA = "0xDA41B8", Slot = "38")]
		public virtual void OnButtonTwoTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xDA4204", Offset = "0xDA4204", VA = "0xDA4204", Slot = "39")]
		public virtual void OnButtonTwoTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xDA4250", Offset = "0xDA4250", VA = "0xDA4250", Slot = "40")]
		public virtual void OnButtonTwoPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xDA429C", Offset = "0xDA429C", VA = "0xDA429C", Slot = "41")]
		public virtual void OnButtonTwoReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xDA42E8", Offset = "0xDA42E8", VA = "0xDA42E8", Slot = "42")]
		public virtual void OnStartMenuPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xDA4334", Offset = "0xDA4334", VA = "0xDA4334", Slot = "43")]
		public virtual void OnStartMenuReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xDA4380", Offset = "0xDA4380", VA = "0xDA4380", Slot = "44")]
		public virtual void OnMiddleFingerSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xDA43CC", Offset = "0xDA43CC", VA = "0xDA43CC", Slot = "45")]
		public virtual void OnRingFingerSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xDA4418", Offset = "0xDA4418", VA = "0xDA4418", Slot = "46")]
		public virtual void OnPinkyFingerSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xDA4464", Offset = "0xDA4464", VA = "0xDA4464", Slot = "47")]
		public virtual void OnGripSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xDA44B0", Offset = "0xDA44B0", VA = "0xDA44B0", Slot = "48")]
		public virtual void OnGripSensePressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xDA44FC", Offset = "0xDA44FC", VA = "0xDA44FC", Slot = "49")]
		public virtual void OnGripSenseReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xDA4548", Offset = "0xDA4548", VA = "0xDA4548", Slot = "50")]
		public virtual void OnControllerEnabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xDA4594", Offset = "0xDA4594", VA = "0xDA4594", Slot = "51")]
		public virtual void OnControllerDisabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xDA45E0", Offset = "0xDA45E0", VA = "0xDA45E0", Slot = "52")]
		public virtual void OnControllerIndexChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xDA462C", Offset = "0xDA462C", VA = "0xDA462C", Slot = "53")]
		public virtual void OnControllerModelAvailable(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xDA4678", Offset = "0xDA4678", VA = "0xDA4678", Slot = "54")]
		public virtual void OnControllerVisible(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xDA46CC", Offset = "0xDA46CC", VA = "0xDA46CC", Slot = "55")]
		public virtual void OnControllerHidden(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xDA471C", Offset = "0xDA471C", VA = "0xDA471C", Slot = "56")]
		public virtual ControllerInteractionEventArgs SetControllerEvent()
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xDA4754", Offset = "0xDA4754", VA = "0xDA4754", Slot = "57")]
		public virtual ControllerInteractionEventArgs SetControllerEvent(ref bool buttonBool, bool value = false, float buttonPressure = 0f)
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xDA49F0", Offset = "0xDA49F0", VA = "0xDA49F0", Slot = "58")]
		public virtual SDK_BaseController.ControllerType GetControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xDA4A94", Offset = "0xDA4A94", VA = "0xDA4A94", Slot = "59")]
		public virtual Vector2 GetAxis(Vector2AxisAlias vector2AxisType)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xDA4B44", Offset = "0xDA4B44", VA = "0xDA4B44", Slot = "60")]
		public virtual Vector2 GetTouchpadAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xDA4B50", Offset = "0xDA4B50", VA = "0xDA4B50", Slot = "61")]
		public virtual Vector2 GetTouchpadTwoAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xDA4B5C", Offset = "0xDA4B5C", VA = "0xDA4B5C", Slot = "62")]
		public virtual float GetAxisAngle(Vector2AxisAlias vector2AxisType)
		{
			return default(float);
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xDA4B90", Offset = "0xDA4B90", VA = "0xDA4B90", Slot = "63")]
		public virtual float GetTouchpadAxisAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xDA4BA8", Offset = "0xDA4BA8", VA = "0xDA4BA8", Slot = "64")]
		public virtual float GetTouchpadTwoAxisAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xDA4BC0", Offset = "0xDA4BC0", VA = "0xDA4BC0", Slot = "65")]
		public virtual float GetTriggerAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xDA4BC8", Offset = "0xDA4BC8", VA = "0xDA4BC8", Slot = "66")]
		public virtual float GetGripAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xDA4BD0", Offset = "0xDA4BD0", VA = "0xDA4BD0", Slot = "67")]
		public virtual float GetHairTriggerDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xDA4BD8", Offset = "0xDA4BD8", VA = "0xDA4BD8", Slot = "68")]
		public virtual float GetHairGripDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xDA4BE0", Offset = "0xDA4BE0", VA = "0xDA4BE0", Slot = "69")]
		public virtual float GetTouchpadSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xDA4BE8", Offset = "0xDA4BE8", VA = "0xDA4BE8", Slot = "70")]
		public virtual float GetTriggerSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xDA4BF0", Offset = "0xDA4BF0", VA = "0xDA4BF0", Slot = "71")]
		public virtual float GetMiddleFingerSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xDA4BF8", Offset = "0xDA4BF8", VA = "0xDA4BF8", Slot = "72")]
		public virtual float GetRingFingerSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xDA4C00", Offset = "0xDA4C00", VA = "0xDA4C00", Slot = "73")]
		public virtual float GetPinkyFingerSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xDA4C08", Offset = "0xDA4C08", VA = "0xDA4C08", Slot = "74")]
		public virtual float GetGripSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xDA4C10", Offset = "0xDA4C10", VA = "0xDA4C10", Slot = "75")]
		public virtual bool AnyButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xDA4C60", Offset = "0xDA4C60", VA = "0xDA4C60", Slot = "76")]
		public virtual bool GetAxisState(Vector2AxisAlias axis, SDK_BaseController.ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xDA4CC0", Offset = "0xDA4CC0", VA = "0xDA4CC0", Slot = "77")]
		public virtual bool IsButtonPressed(ButtonAlias button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xDA4DBC", Offset = "0xDA4DBC", VA = "0xDA4DBC", Slot = "78")]
		public virtual void SubscribeToButtonAliasEvent(ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xDA4DE8", Offset = "0xDA4DE8", VA = "0xDA4DE8", Slot = "79")]
		public virtual void UnsubscribeToButtonAliasEvent(ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xDA4E10", Offset = "0xDA4E10", VA = "0xDA4E10", Slot = "80")]
		public virtual void SubscribeToAxisAliasEvent(SDK_BaseController.ButtonTypes buttonType, AxisType axisType, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xDA4E3C", Offset = "0xDA4E3C", VA = "0xDA4E3C", Slot = "81")]
		public virtual void UnsubscribeToAxisAliasEvent(SDK_BaseController.ButtonTypes buttonType, AxisType axisType, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xDA4E68", Offset = "0xDA4E68", VA = "0xDA4E68", Slot = "82")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xDA4ED0", Offset = "0xDA4ED0", VA = "0xDA4ED0", Slot = "83")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xDA50FC", Offset = "0xDA50FC", VA = "0xDA50FC", Slot = "84")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xDA5154", Offset = "0xDA5154", VA = "0xDA5154", Slot = "85")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xDA51BC", Offset = "0xDA51BC", VA = "0xDA51BC", Slot = "86")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xDA5328", Offset = "0xDA5328", VA = "0xDA5328", Slot = "87")]
		protected virtual float ProcessSenseAxis(float axisValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xDA533C", Offset = "0xDA533C", VA = "0xDA533C", Slot = "88")]
		protected virtual void CheckTriggerEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xDA59C4", Offset = "0xDA59C4", VA = "0xDA59C4", Slot = "89")]
		protected virtual void CheckGripEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xDA5F78", Offset = "0xDA5F78", VA = "0xDA5F78", Slot = "90")]
		protected virtual void CheckTouchpadEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xDA6450", Offset = "0xDA6450", VA = "0xDA6450", Slot = "91")]
		protected virtual void CheckTouchpadTwoEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xDA6840", Offset = "0xDA6840", VA = "0xDA6840", Slot = "92")]
		protected virtual void CheckButtonOneEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xDA6AD0", Offset = "0xDA6AD0", VA = "0xDA6AD0", Slot = "93")]
		protected virtual void CheckButtonTwoEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xDA6D60", Offset = "0xDA6D60", VA = "0xDA6D60", Slot = "94")]
		protected virtual void CheckStartMenuEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xDA6ED4", Offset = "0xDA6ED4", VA = "0xDA6ED4", Slot = "95")]
		protected virtual void CheckExtraFingerEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xDA73C4", Offset = "0xDA73C4", VA = "0xDA73C4", Slot = "96")]
		protected virtual void ButtonAliasEventSubscription(bool subscribe, ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xDA7700", Offset = "0xDA7700", VA = "0xDA7700", Slot = "97")]
		protected virtual void AxisAliasEventSubscription(bool subscribe, SDK_BaseController.ButtonTypes buttonType, AxisType axisType, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xDA7834", Offset = "0xDA7834", VA = "0xDA7834", Slot = "98")]
		protected virtual void TrackedControllerEnabled(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xDA78A8", Offset = "0xDA78A8", VA = "0xDA78A8", Slot = "99")]
		protected virtual void TrackedControllerDisabled(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xDA7930", Offset = "0xDA7930", VA = "0xDA7930", Slot = "100")]
		protected virtual void TrackedControllerIndexChanged(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xDA79A4", Offset = "0xDA79A4", VA = "0xDA79A4", Slot = "101")]
		protected virtual void TrackedControllerModelAvailable(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xDA7A18", Offset = "0xDA7A18", VA = "0xDA7A18", Slot = "102")]
		protected virtual float CalculateVector2AxisAngle(Vector2 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xDA7ABC", Offset = "0xDA7ABC", VA = "0xDA7ABC", Slot = "103")]
		protected virtual void DisableEvents()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xDA8680", Offset = "0xDA8680", VA = "0xDA8680")]
		public VRTK_ControllerEvents()
		{
		}
	}
	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6495D8", Offset = "0x6495D8")]
	public class VRTK_ControllerHighlighter : MonoBehaviour
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A9D0", Offset = "0x65A9D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A9D0", Offset = "0x65A9D0")]
		public float transitionDuration;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AA30", Offset = "0x65AA30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AA30", Offset = "0x65AA30")]
		public Color highlightController;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AA90", Offset = "0x65AA90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AA90", Offset = "0x65AA90")]
		public Color highlightBody;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AAF0", Offset = "0x65AAF0")]
		public Color highlightTrigger;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AB28", Offset = "0x65AB28")]
		public Color highlightGrip;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AB60", Offset = "0x65AB60")]
		public Color highlightTouchpad;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AB98", Offset = "0x65AB98")]
		public Color highlightTouchpadTwo;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ABD0", Offset = "0x65ABD0")]
		public Color highlightButtonOne;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AC08", Offset = "0x65AC08")]
		public Color highlightButtonTwo;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AC40", Offset = "0x65AC40")]
		public Color highlightSystemMenu;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AC78", Offset = "0x65AC78")]
		public Color highlightStartMenu;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65ACB0", Offset = "0x65ACB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ACB0", Offset = "0x65ACB0")]
		public VRTK_ControllerModelElementPaths modelElementPaths;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AD10", Offset = "0x65AD10")]
		public VRTK_ControllerElementHighlighters elementHighlighterOverrides;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AD48", Offset = "0x65AD48")]
		public GameObject controllerAlias;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AD80", Offset = "0x65AD80")]
		public GameObject modelContainer;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ADB8", Offset = "0x65ADB8")]
		public VRTK_BaseHighlighter controllerHighlighter;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool controllerHighlighted;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Dictionary<string, Transform> cachedElements;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Dictionary<string, object> highlighterOptions;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected VRTK_BaseHighlighter baseHighlighter;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected bool autoHighlighter;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		protected bool trackedControllerReady;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected Color lastHighlightController;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		protected Color lastHighlightBody;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected Color lastHighlightTrigger;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected Color lastHighlightGrip;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		protected Color lastHighlightTouchpad;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		protected Color lastHighlightTouchpadTwo;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		protected Color lastHighlightButtonOne;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		protected Color lastHighlightButtonTwo;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		protected Color lastHighlightSystemMenu;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected Color lastHighlightStartMenu;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected SDK_BaseController.ControllerElements[] bodyElements;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected SDK_BaseController.ControllerElements[] triggerElements;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected SDK_BaseController.ControllerElements[] gripElements;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected SDK_BaseController.ControllerElements[] touchpadElements;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected SDK_BaseController.ControllerElements[] touchpadTwoElements;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected SDK_BaseController.ControllerElements[] buttonOneElements;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected SDK_BaseController.ControllerElements[] buttonTwoElements;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected SDK_BaseController.ControllerElements[] systemMenuElements;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected SDK_BaseController.ControllerElements[] startMenuElements;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected GameObject scriptControllerAlias;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected GameObject actualController;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		protected GameObject actualModelContainer;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xDA970C", Offset = "0xDA970C", VA = "0xDA970C", Slot = "4")]
		public virtual void ConfigureControllerPaths()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xDA99F8", Offset = "0xDA99F8", VA = "0xDA99F8", Slot = "5")]
		public virtual void PopulateHighlighters()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xDA9FF8", Offset = "0xDA9FF8", VA = "0xDA9FF8", Slot = "6")]
		public virtual void HighlightController(Color color, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xDAA1D8", Offset = "0xDAA1D8", VA = "0xDAA1D8", Slot = "7")]
		public virtual void UnhighlightController()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xDAA2E4", Offset = "0xDAA2E4", VA = "0xDAA2E4", Slot = "8")]
		public virtual void HighlightElement(SDK_BaseController.ControllerElements elementType, Color color, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xDAA464", Offset = "0xDAA464", VA = "0xDAA464", Slot = "9")]
		public virtual void UnhighlightElement(SDK_BaseController.ControllerElements elementType)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xDAA624", Offset = "0xDAA624", VA = "0xDAA624", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xDAA68C", Offset = "0xDAA68C", VA = "0xDAA68C", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xDAAA04", Offset = "0xDAAA04", VA = "0xDAAA04", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xDAAB30", Offset = "0xDAAB30", VA = "0xDAAB30", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xDAAB98", Offset = "0xDAAB98", VA = "0xDAAB98", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xDAAD04", Offset = "0xDAAD04", VA = "0xDAAD04", Slot = "15")]
		protected virtual void DoControllerModelAvailable(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xDAAD1C", Offset = "0xDAAD1C", VA = "0xDAAD1C", Slot = "16")]
		protected virtual void ControllerAvailable()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xDAAE58", Offset = "0xDAAE58", VA = "0xDAAE58", Slot = "17")]
		protected virtual void ResetLastHighlights()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xDAAF64", Offset = "0xDAAF64", VA = "0xDAAF64", Slot = "18")]
		protected virtual void SetColourParameter(SDK_BaseController.ControllerElements element, Color color)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xDAB148", Offset = "0xDAB148", VA = "0xDAB148", Slot = "19")]
		protected virtual Color GetColourParameter(SDK_BaseController.ControllerElements element)
		{
			return default(Color);
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xDAB1DC", Offset = "0xDAB1DC", VA = "0xDAB1DC", Slot = "20")]
		protected virtual void ToggleControllerState()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xDAB2B4", Offset = "0xDAB2B4", VA = "0xDAB2B4", Slot = "21")]
		protected virtual void ToggleHighlightState(Color currentColor, ref Color lastColorState, SDK_BaseController.ControllerElements[] elements)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xDAB418", Offset = "0xDAB418", VA = "0xDAB418", Slot = "22")]
		protected virtual void AddHighlighterToElement(Transform element, VRTK_BaseHighlighter parentHighlighter, VRTK_BaseHighlighter overrideHighlighter)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xDAB6E0", Offset = "0xDAB6E0", VA = "0xDAB6E0", Slot = "23")]
		protected virtual string GetElementPath(string currentPath, SDK_BaseController.ControllerElements elementType)
		{
			return null;
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xDAB7FC", Offset = "0xDAB7FC", VA = "0xDAB7FC", Slot = "24")]
		protected virtual string GetPathForControllerElement(SDK_BaseController.ControllerElements controllerElement)
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xDAB964", Offset = "0xDAB964", VA = "0xDAB964", Slot = "25")]
		protected virtual Transform GetElementTransform(string path)
		{
			return null;
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xDABBA4", Offset = "0xDABBA4", VA = "0xDABBA4", Slot = "26")]
		protected virtual void ToggleHighlightAlias(bool state, string transformPath, Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xDABD1C", Offset = "0xDABD1C", VA = "0xDABD1C", Slot = "27")]
		protected virtual VRTK_BaseHighlighter GetValidHighlighter()
		{
			return null;
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xDABDAC", Offset = "0xDABDAC", VA = "0xDABDAC")]
		public VRTK_ControllerHighlighter()
		{
		}
	}
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649610", Offset = "0x649610")]
	public class VRTK_ControllerTrackedCollider : VRTK_SDKControllerReady
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65ADF0", Offset = "0x65ADF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ADF0", Offset = "0x65ADF0")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AE50", Offset = "0x65AE50")]
		public float maxResnapDistance;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AE88", Offset = "0x65AE88")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AEC0", Offset = "0x65AEC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AEC0", Offset = "0x65AEC0")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody trackedRigidbody;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool createRigidbody;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Collider[] trackedColliders;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject customColliderContainer;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool createColliders;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_RigidbodyFollow rigidbodyFollow;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool createRigidbodyFollow;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedActivationButton;

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xDAF6D4", Offset = "0xDAF6D4", VA = "0xDAF6D4", Slot = "15")]
		public virtual void ToggleColliders(bool state)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xDAF790", Offset = "0xDAF790", VA = "0xDAF790", Slot = "16")]
		public virtual Collider[] TrackedColliders()
		{
			return null;
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xDAF798", Offset = "0xDAF798", VA = "0xDAF798", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xDAF9C0", Offset = "0xDAF9C0", VA = "0xDAF9C0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xDAFA8C", Offset = "0xDAFA8C", VA = "0xDAFA8C", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference passedControllerReference)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xDAFCA4", Offset = "0xDAFCA4", VA = "0xDAFCA4", Slot = "17")]
		protected virtual void Cleanup(bool immediate)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xDAFD80", Offset = "0xDAFD80", VA = "0xDAFD80", Slot = "18")]
		protected virtual void DestroyObject(UnityEngine.Object toDestroy, bool immediate)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xDAFE20", Offset = "0xDAFE20", VA = "0xDAFE20", Slot = "19")]
		protected virtual void ManageActivationListeners(bool state)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xDB0034", Offset = "0xDB0034", VA = "0xDB0034", Slot = "20")]
		protected virtual void DoActivationPress(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xDB0048", Offset = "0xDB0048", VA = "0xDB0048", Slot = "21")]
		protected virtual void DoActivationRelease(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xDB005C", Offset = "0xDB005C", VA = "0xDB005C", Slot = "22")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xDB018C", Offset = "0xDB018C", VA = "0xDB018C", Slot = "23")]
		protected virtual void SetupColliders()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xDB08A4", Offset = "0xDB08A4", VA = "0xDB08A4", Slot = "24")]
		protected virtual void SetupFollower()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xDB09E4", Offset = "0xDB09E4", VA = "0xDB09E4")]
		public VRTK_ControllerTrackedCollider()
		{
		}
	}
	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649648", Offset = "0x649648")]
	public class VRTK_InteractGrab : MonoBehaviour
	{
		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AF20", Offset = "0x65AF20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AF20", Offset = "0x65AF20")]
		public VRTK_ControllerEvents.ButtonAlias grabButton;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AF80", Offset = "0x65AF80")]
		public float grabPrecognition;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AFB8", Offset = "0x65AFB8")]
		public float throwMultiplier;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AFF0", Offset = "0x65AFF0")]
		public bool createRigidBodyWhenNotTouching;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B028", Offset = "0x65B028")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B028", Offset = "0x65B028")]
		public Rigidbody controllerAttachPoint;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B088", Offset = "0x65B088")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B0C0", Offset = "0x65B0C0")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedGrabButton;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected VRTK_ControllerEvents.ButtonAlias savedGrabButton;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool grabPressed;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject grabbedObject;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool influencingGrabbedObject;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected int grabEnabledState;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float grabPrecognitionTimer;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject undroppableGrabbedObject;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Rigidbody originalControllerAttachPoint;

		[Token(Token = "0x170000CE")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0xBECD10", Offset = "0xBECD10", VA = "0xBECD10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400008E")]
		public event ControllerInteractionEventHandler GrabButtonPressed
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0xBEC200", Offset = "0xBEC200", VA = "0xBEC200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E258", Offset = "0x66E258")]
			add
			{
			}
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xBEC2EC", Offset = "0xBEC2EC", VA = "0xBEC2EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E268", Offset = "0x66E268")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public event ControllerInteractionEventHandler GrabButtonReleased
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0xBEC3D8", Offset = "0xBEC3D8", VA = "0xBEC3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E278", Offset = "0x66E278")]
			add
			{
			}
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0xBEC4C4", Offset = "0xBEC4C4", VA = "0xBEC4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E288", Offset = "0x66E288")]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public event ObjectInteractEventHandler ControllerStartGrabInteractableObject
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xBEC5B0", Offset = "0xBEC5B0", VA = "0xBEC5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E298", Offset = "0x66E298")]
			add
			{
			}
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0xBEC69C", Offset = "0xBEC69C", VA = "0xBEC69C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E2A8", Offset = "0x66E2A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000091")]
		public event ObjectInteractEventHandler ControllerGrabInteractableObject
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xBEC788", Offset = "0xBEC788", VA = "0xBEC788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E2B8", Offset = "0x66E2B8")]
			add
			{
			}
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xBEC874", Offset = "0xBEC874", VA = "0xBEC874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E2C8", Offset = "0x66E2C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000092")]
		public event ObjectInteractEventHandler ControllerStartUngrabInteractableObject
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0xBEC960", Offset = "0xBEC960", VA = "0xBEC960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E2D8", Offset = "0x66E2D8")]
			add
			{
			}
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xBECA4C", Offset = "0xBECA4C", VA = "0xBECA4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E2E8", Offset = "0x66E2E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000093")]
		public event ObjectInteractEventHandler ControllerUngrabInteractableObject
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0xBECB38", Offset = "0xBECB38", VA = "0xBECB38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E2F8", Offset = "0x66E2F8")]
			add
			{
			}
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0xBECC24", Offset = "0xBECC24", VA = "0xBECC24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E308", Offset = "0x66E308")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xBECDD4", Offset = "0xBECDD4", VA = "0xBECDD4", Slot = "4")]
		public virtual void OnControllerStartGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xBECE00", Offset = "0xBECE00", VA = "0xBECE00", Slot = "5")]
		public virtual void OnControllerGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xBECE2C", Offset = "0xBECE2C", VA = "0xBECE2C", Slot = "6")]
		public virtual void OnControllerStartUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xBECE58", Offset = "0xBECE58", VA = "0xBECE58", Slot = "7")]
		public virtual void OnControllerUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xBECE84", Offset = "0xBECE84", VA = "0xBECE84", Slot = "8")]
		public virtual void OnGrabButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xBECED0", Offset = "0xBECED0", VA = "0xBECED0", Slot = "9")]
		public virtual void OnGrabButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xBECF1C", Offset = "0xBECF1C", VA = "0xBECF1C", Slot = "10")]
		public virtual bool IsGrabButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xBECF24", Offset = "0xBECF24", VA = "0xBECF24", Slot = "11")]
		public virtual void ForceRelease(bool applyGrabbingObjectVelocity = false)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xBECF38", Offset = "0xBECF38", VA = "0xBECF38", Slot = "12")]
		public virtual void AttemptGrab()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xBECF48", Offset = "0xBECF48", VA = "0xBECF48", Slot = "13")]
		public virtual GameObject GetGrabbedObject()
		{
			return null;
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xBECF50", Offset = "0xBECF50", VA = "0xBECF50", Slot = "14")]
		public virtual void ForceControllerAttachPoint(Rigidbody forcedAttachPoint)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xBECF5C", Offset = "0xBECF5C", VA = "0xBECF5C", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xBED250", Offset = "0xBED250", VA = "0xBED250", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xBED3AC", Offset = "0xBED3AC", VA = "0xBED3AC", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xBED518", Offset = "0xBED518", VA = "0xBED518", Slot = "18")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xBED580", Offset = "0xBED580", VA = "0xBED580", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xBED5E8", Offset = "0xBED5E8", VA = "0xBED5E8", Slot = "20")]
		protected virtual void DoControllerModelUpdate(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xBED5F8", Offset = "0xBED5F8", VA = "0xBED5F8", Slot = "21")]
		protected virtual void ManageInteractTouchListener(bool state)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xBED7DC", Offset = "0xBED7DC", VA = "0xBED7DC", Slot = "22")]
		protected virtual void ControllerTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xBED8F8", Offset = "0xBED8F8", VA = "0xBED8F8", Slot = "23")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xBED9F4", Offset = "0xBED9F4", VA = "0xBED9F4", Slot = "24")]
		protected virtual void ManageGrabListener(bool state)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xBEDC4C", Offset = "0xBEDC4C", VA = "0xBEDC4C", Slot = "25")]
		protected virtual void RegrabUndroppableObject()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xBEDDE4", Offset = "0xBEDDE4", VA = "0xBEDDE4", Slot = "26")]
		protected virtual void SetUndroppableObject()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xBEDF10", Offset = "0xBEDF10", VA = "0xBEDF10", Slot = "27")]
		protected virtual void SetControllerAttachPoint()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xBEE1A4", Offset = "0xBEE1A4", VA = "0xBEE1A4", Slot = "28")]
		protected virtual bool IsObjectGrabbable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xBEE2F0", Offset = "0xBEE2F0", VA = "0xBEE2F0", Slot = "29")]
		protected virtual bool IsObjectHoldOnGrab(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xBEE3D8", Offset = "0xBEE3D8", VA = "0xBEE3D8", Slot = "30")]
		protected virtual void ChooseGrabSequence(VRTK_InteractableObject grabbedObjectScript)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xBEE45C", Offset = "0xBEE45C", VA = "0xBEE45C", Slot = "31")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xBEE5CC", Offset = "0xBEE5CC", VA = "0xBEE5CC", Slot = "32")]
		protected virtual void InitGrabbedObject()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xBEE794", Offset = "0xBEE794", VA = "0xBEE794", Slot = "33")]
		protected virtual void InitPrimaryGrab(VRTK_InteractableObject currentGrabbedObject)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xBEE928", Offset = "0xBEE928", VA = "0xBEE928", Slot = "34")]
		protected virtual void InitSecondaryGrab(VRTK_InteractableObject currentGrabbedObject)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xBEE970", Offset = "0xBEE970", VA = "0xBEE970", Slot = "35")]
		protected virtual void CheckInfluencingObjectOnRelease()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xBEEA30", Offset = "0xBEEA30", VA = "0xBEEA30", Slot = "36")]
		protected virtual void InitUngrabbedObject(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xBEEC68", Offset = "0xBEEC68", VA = "0xBEEC68", Slot = "37")]
		protected virtual GameObject GetGrabbableObject()
		{
			return null;
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xBEED6C", Offset = "0xBEED6C", VA = "0xBEED6C", Slot = "38")]
		protected virtual void IncrementGrabState()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xBEEE2C", Offset = "0xBEEE2C", VA = "0xBEEE2C", Slot = "39")]
		protected virtual GameObject GetUndroppableObject()
		{
			return null;
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xBEEF44", Offset = "0xBEEF44", VA = "0xBEEF44", Slot = "40")]
		protected virtual void AttemptGrabObject()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xBEF008", Offset = "0xBEF008", VA = "0xBEF008", Slot = "41")]
		protected virtual void PerformGrabAttempt(GameObject objectToGrab)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xBEF06C", Offset = "0xBEF06C", VA = "0xBEF06C", Slot = "42")]
		protected virtual bool ScriptValidGrab(VRTK_InteractableObject objectToGrabScript)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xBEF160", Offset = "0xBEF160", VA = "0xBEF160", Slot = "43")]
		protected virtual bool IsValidGrabAttempt(GameObject objectToGrab)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xBEF33C", Offset = "0xBEF33C", VA = "0xBEF33C", Slot = "44")]
		protected virtual bool CanRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xBEF444", Offset = "0xBEF444", VA = "0xBEF444", Slot = "45")]
		protected virtual void AttemptReleaseObject()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xBEF4BC", Offset = "0xBEF4BC", VA = "0xBEF4BC", Slot = "46")]
		protected virtual void DoGrabObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xBEF570", Offset = "0xBEF570", VA = "0xBEF570", Slot = "47")]
		protected virtual void DoReleaseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xBEF620", Offset = "0xBEF620", VA = "0xBEF620", Slot = "48")]
		protected virtual void CheckControllerAttachPointSet()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xBEF6B4", Offset = "0xBEF6B4", VA = "0xBEF6B4", Slot = "49")]
		protected virtual void CreateNonTouchingRigidbody()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xBEF808", Offset = "0xBEF808", VA = "0xBEF808", Slot = "50")]
		protected virtual void CheckPrecognitionGrab()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xBEF918", Offset = "0xBEF918", VA = "0xBEF918")]
		public VRTK_InteractGrab()
		{
		}
	}
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649680", Offset = "0x649680")]
	public class VRTK_InteractNearTouch : MonoBehaviour
	{
		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B158", Offset = "0x65B158")]
		public float colliderRadius;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B190", Offset = "0x65B190")]
		public GameObject customColliderContainer;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B1C8", Offset = "0x65B1C8")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected GameObject neartouchColliderContainer;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<GameObject> nearTouchedObjects;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_InteractNearTouchCollider interactNearTouchColliderScript;

		[Token(Token = "0x14000094")]
		public event ObjectInteractEventHandler ControllerNearTouchInteractableObject
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xC12BC8", Offset = "0xC12BC8", VA = "0xC12BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E318", Offset = "0x66E318")]
			add
			{
			}
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xC12CB4", Offset = "0xC12CB4", VA = "0xC12CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E328", Offset = "0x66E328")]
			remove
			{
			}
		}

		[Token(Token = "0x14000095")]
		public event ObjectInteractEventHandler ControllerNearUntouchInteractableObject
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0xC12DA0", Offset = "0xC12DA0", VA = "0xC12DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E338", Offset = "0x66E338")]
			add
			{
			}
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0xC12E8C", Offset = "0xC12E8C", VA = "0xC12E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E348", Offset = "0x66E348")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xC12F78", Offset = "0xC12F78", VA = "0xC12F78", Slot = "4")]
		public virtual void OnControllerNearTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xC1300C", Offset = "0xC1300C", VA = "0xC1300C", Slot = "5")]
		public virtual void OnControllerNearUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xC130AC", Offset = "0xC130AC", VA = "0xC130AC", Slot = "6")]
		public virtual List<GameObject> GetNearTouchedObjects()
		{
			return null;
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xC130B4", Offset = "0xC130B4", VA = "0xC130B4", Slot = "7")]
		public virtual void ForceNearTouch(GameObject obj)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xC131B8", Offset = "0xC131B8", VA = "0xC131B8", Slot = "8")]
		public virtual void ForceStopNearTouching([Optional] GameObject obj)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xC1339C", Offset = "0xC1339C", VA = "0xC1339C", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xC13704", Offset = "0xC13704", VA = "0xC13704", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xC139F4", Offset = "0xC139F4", VA = "0xC139F4", Slot = "11")]
		protected virtual void ControllerStartTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xC13A04", Offset = "0xC13A04", VA = "0xC13A04", Slot = "12")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xC13AB8", Offset = "0xC13AB8", VA = "0xC13AB8", Slot = "13")]
		protected virtual void CreateNearTouchCollider()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xC14294", Offset = "0xC14294", VA = "0xC14294")]
		public VRTK_InteractNearTouch()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class VRTK_InteractNearTouchCollider : MonoBehaviour
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_InteractNearTouch interactNearTouch;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<GameObject> nearTouchedObjects;

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xC14310", Offset = "0xC14310", VA = "0xC14310", Slot = "4")]
		public virtual void SetInteractNearTouch(VRTK_InteractNearTouch givenInteractNearTouch)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xC14318", Offset = "0xC14318", VA = "0xC14318", Slot = "5")]
		public virtual List<GameObject> GetNearTouchedObjects()
		{
			return null;
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xC14320", Offset = "0xC14320", VA = "0xC14320", Slot = "6")]
		public virtual void StartNearTouch(Collider collider)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xC144C0", Offset = "0xC144C0", VA = "0xC144C0", Slot = "7")]
		public virtual void EndNearTouch(Collider collider)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xC14660", Offset = "0xC14660", VA = "0xC14660", Slot = "8")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xC146F4", Offset = "0xC146F4", VA = "0xC146F4", Slot = "9")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xC14794", Offset = "0xC14794", VA = "0xC14794", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xC147F4", Offset = "0xC147F4", VA = "0xC147F4", Slot = "11")]
		protected virtual bool validObject(VRTK_InteractableObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xC148F4", Offset = "0xC148F4", VA = "0xC148F4")]
		public VRTK_InteractNearTouchCollider()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public struct ObjectInteractEventArgs
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject target;
	}
	[Token(Token = "0x2000156")]
	public delegate void ObjectInteractEventHandler(object sender, ObjectInteractEventArgs e);
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6496B8", Offset = "0x6496B8")]
	public class VRTK_InteractTouch : MonoBehaviour
	{
		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B220", Offset = "0x65B220")]
		public GameObject customColliderContainer;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject touchedObject;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<Collider> touchedObjectColliders;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<Collider> touchedObjectActiveColliders;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject controllerCollisionDetector;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool destroyColliderOnDisable;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool triggerIsColliding;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool triggerWasColliding;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool rigidBodyForcedActive;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody touchRigidBody;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x170000CF")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xC1A264", Offset = "0xC1A264", VA = "0xC1A264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000096")]
		public event ObjectInteractEventHandler ControllerStartTouchInteractableObject
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0xC1352C", Offset = "0xC1352C", VA = "0xC1352C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E358", Offset = "0x66E358")]
			add
			{
			}
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0xC1381C", Offset = "0xC1381C", VA = "0xC1381C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E368", Offset = "0x66E368")]
			remove
			{
			}
		}

		[Token(Token = "0x14000097")]
		public event ObjectInteractEventHandler ControllerTouchInteractableObject
		{
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0xC19B04", Offset = "0xC19B04", VA = "0xC19B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E378", Offset = "0x66E378")]
			add
			{
			}
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xC19BF0", Offset = "0xC19BF0", VA = "0xC19BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E388", Offset = "0x66E388")]
			remove
			{
			}
		}

		[Token(Token = "0x14000098")]
		public event ObjectInteractEventHandler ControllerStartUntouchInteractableObject
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xC19CDC", Offset = "0xC19CDC", VA = "0xC19CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E398", Offset = "0x66E398")]
			add
			{
			}
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0xC19DC8", Offset = "0xC19DC8", VA = "0xC19DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E3A8", Offset = "0x66E3A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000099")]
		public event ObjectInteractEventHandler ControllerUntouchInteractableObject
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0xC13618", Offset = "0xC13618", VA = "0xC13618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E3B8", Offset = "0x66E3B8")]
			add
			{
			}
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0xC13908", Offset = "0xC13908", VA = "0xC13908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E3C8", Offset = "0x66E3C8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009A")]
		public event ObjectInteractEventHandler ControllerRigidbodyActivated
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xC19EB4", Offset = "0xC19EB4", VA = "0xC19EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E3D8", Offset = "0x66E3D8")]
			add
			{
			}
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xC19FA0", Offset = "0xC19FA0", VA = "0xC19FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E3E8", Offset = "0x66E3E8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public event ObjectInteractEventHandler ControllerRigidbodyDeactivated
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xC1A08C", Offset = "0xC1A08C", VA = "0xC1A08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E3F8", Offset = "0x66E3F8")]
			add
			{
			}
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0xC1A178", Offset = "0xC1A178", VA = "0xC1A178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E408", Offset = "0x66E408")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xC1A2E0", Offset = "0xC1A2E0", VA = "0xC1A2E0", Slot = "4")]
		public virtual void OnControllerStartTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xC1A30C", Offset = "0xC1A30C", VA = "0xC1A30C", Slot = "5")]
		public virtual void OnControllerTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xC1A338", Offset = "0xC1A338", VA = "0xC1A338", Slot = "6")]
		public virtual void OnControllerStartUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xC1A364", Offset = "0xC1A364", VA = "0xC1A364", Slot = "7")]
		public virtual void OnControllerUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xC1A390", Offset = "0xC1A390", VA = "0xC1A390", Slot = "8")]
		public virtual void OnControllerRigidbodyActivated(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xC1A3BC", Offset = "0xC1A3BC", VA = "0xC1A3BC", Slot = "9")]
		public virtual void OnControllerRigidbodyDeactivated(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xC1A3E8", Offset = "0xC1A3E8", VA = "0xC1A3E8", Slot = "10")]
		public virtual ObjectInteractEventArgs SetControllerInteractEvent(GameObject target)
		{
			return default(ObjectInteractEventArgs);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xC1A40C", Offset = "0xC1A40C", VA = "0xC1A40C", Slot = "11")]
		public virtual void ForceTouch(GameObject obj)
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xC1A504", Offset = "0xC1A504", VA = "0xC1A504", Slot = "12")]
		public virtual GameObject GetTouchedObject()
		{
			return null;
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xC1A50C", Offset = "0xC1A50C", VA = "0xC1A50C", Slot = "13")]
		public virtual bool IsObjectInteractable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xC1A618", Offset = "0xC1A618", VA = "0xC1A618", Slot = "14")]
		public virtual void ToggleControllerRigidBody(bool state, bool forceToggle = false)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xC1A7BC", Offset = "0xC1A7BC", VA = "0xC1A7BC", Slot = "15")]
		public virtual bool IsRigidBodyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xC1A7F8", Offset = "0xC1A7F8", VA = "0xC1A7F8", Slot = "16")]
		public virtual bool IsRigidBodyForcedActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xC1A83C", Offset = "0xC1A83C", VA = "0xC1A83C", Slot = "17")]
		public virtual void ForceStopTouching()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xC1A8D4", Offset = "0xC1A8D4", VA = "0xC1A8D4", Slot = "18")]
		public virtual Collider[] ControllerColliders()
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xC1A988", Offset = "0xC1A988", VA = "0xC1A988", Slot = "19")]
		public virtual SDK_BaseController.ControllerType GetControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xC1AA2C", Offset = "0xC1AA2C", VA = "0xC1AA2C", Slot = "20")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xC1AA94", Offset = "0xC1AA94", VA = "0xC1AA94", Slot = "21")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xC1ABF8", Offset = "0xC1ABF8", VA = "0xC1ABF8", Slot = "22")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xC1ACF4", Offset = "0xC1ACF4", VA = "0xC1ACF4", Slot = "23")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xC1AD5C", Offset = "0xC1AD5C", VA = "0xC1AD5C", Slot = "24")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xC1AF30", Offset = "0xC1AF30", VA = "0xC1AF30", Slot = "25")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xC1AFA0", Offset = "0xC1AFA0", VA = "0xC1AFA0", Slot = "26")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xC1B2D8", Offset = "0xC1B2D8", VA = "0xC1B2D8", Slot = "27")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xC1B334", Offset = "0xC1B334", VA = "0xC1B334", Slot = "28")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xC1B3B8", Offset = "0xC1B3B8", VA = "0xC1B3B8", Slot = "29")]
		protected virtual void DoControllerModelAvailable(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xC1B3C8", Offset = "0xC1B3C8", VA = "0xC1B3C8", Slot = "30")]
		protected virtual GameObject GetColliderInteractableObject(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xC1B488", Offset = "0xC1B488", VA = "0xC1B488", Slot = "31")]
		protected virtual void AddActiveCollider(Collider collider)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xC1B560", Offset = "0xC1B560", VA = "0xC1B560", Slot = "32")]
		protected virtual void StoreTouchedObjectColliders(Collider collider)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xC1B698", Offset = "0xC1B698", VA = "0xC1B698", Slot = "33")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xC1B8E0", Offset = "0xC1B8E0", VA = "0xC1B8E0", Slot = "34")]
		protected virtual void CheckStopTouching()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xC1BA40", Offset = "0xC1BA40", VA = "0xC1BA40", Slot = "35")]
		protected virtual GameObject TriggerStart(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xC1BAB0", Offset = "0xC1BAB0", VA = "0xC1BAB0", Slot = "36")]
		protected virtual bool IsSnapDropZone(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xC1BB40", Offset = "0xC1BB40", VA = "0xC1BB40", Slot = "37")]
		protected virtual void StopTouching(GameObject untouched)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xC1BCE0", Offset = "0xC1BCE0", VA = "0xC1BCE0", Slot = "38")]
		protected virtual void CleanupEndTouch()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xC1BD68", Offset = "0xC1BD68", VA = "0xC1BD68", Slot = "39")]
		protected virtual void DestroyTouchCollider()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xC1BDE8", Offset = "0xC1BDE8", VA = "0xC1BDE8", Slot = "40")]
		protected virtual bool CustomRigidBodyIsChild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xC1BF3C", Offset = "0xC1BF3C", VA = "0xC1BF3C", Slot = "41")]
		protected virtual void CreateTouchCollider()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xC1C668", Offset = "0xC1C668", VA = "0xC1C668", Slot = "42")]
		protected virtual void CreateTouchRigidBody()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xC1C7C8", Offset = "0xC1C7C8", VA = "0xC1C7C8", Slot = "43")]
		protected virtual void EmitControllerRigidbodyEvent(bool state)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xC1C820", Offset = "0xC1C820", VA = "0xC1C820")]
		public VRTK_InteractTouch()
		{
		}
	}
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6496F0", Offset = "0x6496F0")]
	public class VRTK_InteractUse : MonoBehaviour
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B2B8", Offset = "0x65B2B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B2B8", Offset = "0x65B2B8")]
		public VRTK_ControllerEvents.ButtonAlias useButton;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B318", Offset = "0x65B318")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B318", Offset = "0x65B318")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B378", Offset = "0x65B378")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B3B0", Offset = "0x65B3B0")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedUseButton;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected VRTK_ControllerEvents.ButtonAlias savedUseButton;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool usePressed;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected GameObject usingObject;

		[Token(Token = "0x170000D0")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xC1D3C0", Offset = "0xC1D3C0", VA = "0xC1D3C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400009C")]
		public event ControllerInteractionEventHandler UseButtonPressed
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0xC1C8B0", Offset = "0xC1C8B0", VA = "0xC1C8B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E418", Offset = "0x66E418")]
			add
			{
			}
			[Token(Token = "0x6001000")]
			[Address(RVA = "0xC1C99C", Offset = "0xC1C99C", VA = "0xC1C99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E428", Offset = "0x66E428")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009D")]
		public event ControllerInteractionEventHandler UseButtonReleased
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0xC1CA88", Offset = "0xC1CA88", VA = "0xC1CA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E438", Offset = "0x66E438")]
			add
			{
			}
			[Token(Token = "0x6001002")]
			[Address(RVA = "0xC1CB74", Offset = "0xC1CB74", VA = "0xC1CB74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E448", Offset = "0x66E448")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009E")]
		public event ObjectInteractEventHandler ControllerStartUseInteractableObject
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xC1CC60", Offset = "0xC1CC60", VA = "0xC1CC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E458", Offset = "0x66E458")]
			add
			{
			}
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xC1CD4C", Offset = "0xC1CD4C", VA = "0xC1CD4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E468", Offset = "0x66E468")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009F")]
		public event ObjectInteractEventHandler ControllerUseInteractableObject
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0xC1CE38", Offset = "0xC1CE38", VA = "0xC1CE38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E478", Offset = "0x66E478")]
			add
			{
			}
			[Token(Token = "0x6001006")]
			[Address(RVA = "0xC1CF24", Offset = "0xC1CF24", VA = "0xC1CF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E488", Offset = "0x66E488")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A0")]
		public event ObjectInteractEventHandler ControllerStartUnuseInteractableObject
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0xC1D010", Offset = "0xC1D010", VA = "0xC1D010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E498", Offset = "0x66E498")]
			add
			{
			}
			[Token(Token = "0x6001008")]
			[Address(RVA = "0xC1D0FC", Offset = "0xC1D0FC", VA = "0xC1D0FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E4A8", Offset = "0x66E4A8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A1")]
		public event ObjectInteractEventHandler ControllerUnuseInteractableObject
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0xC1D1E8", Offset = "0xC1D1E8", VA = "0xC1D1E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E4B8", Offset = "0x66E4B8")]
			add
			{
			}
			[Token(Token = "0x600100A")]
			[Address(RVA = "0xC1D2D4", Offset = "0xC1D2D4", VA = "0xC1D2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E4C8", Offset = "0x66E4C8")]
			remove
			{
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xC1D484", Offset = "0xC1D484", VA = "0xC1D484", Slot = "4")]
		public virtual void OnControllerStartUseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xC1D4B0", Offset = "0xC1D4B0", VA = "0xC1D4B0", Slot = "5")]
		public virtual void OnControllerUseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xC1D4DC", Offset = "0xC1D4DC", VA = "0xC1D4DC", Slot = "6")]
		public virtual void OnControllerStartUnuseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xC1D508", Offset = "0xC1D508", VA = "0xC1D508", Slot = "7")]
		public virtual void OnControllerUnuseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xC1D534", Offset = "0xC1D534", VA = "0xC1D534", Slot = "8")]
		public virtual void OnUseButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xC1D580", Offset = "0xC1D580", VA = "0xC1D580", Slot = "9")]
		public virtual void OnUseButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xC1D5CC", Offset = "0xC1D5CC", VA = "0xC1D5CC", Slot = "10")]
		public virtual bool IsUseButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xC1D5D4", Offset = "0xC1D5D4", VA = "0xC1D5D4", Slot = "11")]
		public virtual GameObject GetUsingObject()
		{
			return null;
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xC1D5DC", Offset = "0xC1D5DC", VA = "0xC1D5DC", Slot = "12")]
		public virtual void ForceStopUsing()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xC1D670", Offset = "0xC1D670", VA = "0xC1D670", Slot = "13")]
		public virtual void ForceResetUsing()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xC1D708", Offset = "0xC1D708", VA = "0xC1D708", Slot = "14")]
		public virtual void AttemptUse()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xC1D718", Offset = "0xC1D718", VA = "0xC1D718", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xC1DA54", Offset = "0xC1DA54", VA = "0xC1DA54", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xC1DAA8", Offset = "0xC1DAA8", VA = "0xC1DAA8", Slot = "17")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xC1DABC", Offset = "0xC1DABC", VA = "0xC1DABC", Slot = "18")]
		protected virtual void ManageInteractTouchListener(bool state)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xC1DC90", Offset = "0xC1DC90", VA = "0xC1DC90", Slot = "19")]
		protected virtual void ControllerTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xC1DDAC", Offset = "0xC1DDAC", VA = "0xC1DDAC", Slot = "20")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xC1DEDC", Offset = "0xC1DEDC", VA = "0xC1DEDC", Slot = "21")]
		protected virtual void ManageUseListener(bool state)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xC1E134", Offset = "0xC1E134", VA = "0xC1E134", Slot = "22")]
		protected virtual bool IsObjectUsable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xC1E2B4", Offset = "0xC1E2B4", VA = "0xC1E2B4", Slot = "23")]
		protected virtual bool IsObjectHoldOnUse(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xC1E39C", Offset = "0xC1E39C", VA = "0xC1E39C", Slot = "24")]
		protected virtual int GetObjectUsingState(GameObject obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xC1E47C", Offset = "0xC1E47C", VA = "0xC1E47C", Slot = "25")]
		protected virtual void SetObjectUsingState(GameObject obj, int value)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xC1E560", Offset = "0xC1E560", VA = "0xC1E560", Slot = "26")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xC1E698", Offset = "0xC1E698", VA = "0xC1E698", Slot = "27")]
		protected virtual void UseInteractedObject(GameObject touchedObject)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xC1E944", Offset = "0xC1E944", VA = "0xC1E944", Slot = "28")]
		protected virtual void UnuseInteractedObject(bool completeStop)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xC1EB30", Offset = "0xC1EB30", VA = "0xC1EB30", Slot = "29")]
		protected virtual GameObject GetFromGrab()
		{
			return null;
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xC1EBD4", Offset = "0xC1EBD4", VA = "0xC1EBD4", Slot = "30")]
		protected virtual void StopUsing()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xC1EC1C", Offset = "0xC1EC1C", VA = "0xC1EC1C", Slot = "31")]
		protected virtual void AttemptUseObject()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xC1EEB8", Offset = "0xC1EEB8", VA = "0xC1EEB8", Slot = "32")]
		protected virtual void DoStartUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xC1EF6C", Offset = "0xC1EF6C", VA = "0xC1EF6C", Slot = "33")]
		protected virtual void DoStopUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xC1F058", Offset = "0xC1F058", VA = "0xC1F058")]
		public VRTK_InteractUse()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public delegate void ObjectAutoGrabEventHandler(object sender);
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649728", Offset = "0x649728")]
	public class VRTK_ObjectAutoGrab : MonoBehaviour
	{
		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D838", Offset = "0x64D838")]
		private sealed class <AutoGrab>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ObjectAutoGrab <>4__this;

			[Token(Token = "0x170002A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B0")]
				[Address(RVA = "0xA1D80C", Offset = "0xA1D80C", VA = "0xA1D80C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B2")]
				[Address(RVA = "0xA1D87C", Offset = "0xA1D87C", VA = "0xA1D87C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022AD")]
			[Address(RVA = "0xA1CC50", Offset = "0xA1CC50", VA = "0xA1CC50")]
			[DebuggerHidden]
			public <AutoGrab>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60022AE")]
			[Address(RVA = "0xA1CF00", Offset = "0xA1CF00", VA = "0xA1CF00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022AF")]
			[Address(RVA = "0xA1CF04", Offset = "0xA1CF04", VA = "0xA1CF04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022B1")]
			[Address(RVA = "0xA1D814", Offset = "0xA1D814", VA = "0xA1D814", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B448", Offset = "0x65B448")]
		public VRTK_InteractableObject objectToGrab;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B480", Offset = "0x65B480")]
		public bool objectIsPrefab;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B4B8", Offset = "0x65B4B8")]
		public bool cloneGrabbedObject;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B4F0", Offset = "0x65B4F0")]
		public bool alwaysCloneOnEnable;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B528", Offset = "0x65B528")]
		public bool attemptSecondaryGrab;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B560", Offset = "0x65B560")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B560", Offset = "0x65B560")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B5C0", Offset = "0x65B5C0")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B5F8", Offset = "0x65B5F8")]
		public VRTK_InteractTouch secondaryInteractTouch;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B630", Offset = "0x65B630")]
		public VRTK_InteractGrab secondaryInteractGrab;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_InteractableObject previousClonedObject;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Coroutine autoGrabRoutine;

		[Token(Token = "0x140000A2")]
		public event ObjectAutoGrabEventHandler ObjectAutoGrabCompleted
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0xA1C97C", Offset = "0xA1C97C", VA = "0xA1C97C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E4D8", Offset = "0x66E4D8")]
			add
			{
			}
			[Token(Token = "0x6001030")]
			[Address(RVA = "0xA1CA68", Offset = "0xA1CA68", VA = "0xA1CA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E4E8", Offset = "0x66E4E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xA1CB54", Offset = "0xA1CB54", VA = "0xA1CB54", Slot = "4")]
		public virtual void OnObjectAutoGrabCompleted()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xA1CB70", Offset = "0xA1CB70", VA = "0xA1CB70", Slot = "5")]
		public virtual void ClearPreviousClone()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xA1CB78", Offset = "0xA1CB78", VA = "0xA1CB78", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xA1CBC8", Offset = "0xA1CBC8", VA = "0xA1CBC8", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xA1CBDC", Offset = "0xA1CBDC", VA = "0xA1CBDC", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E4F8", Offset = "0x66E4F8")]
		protected virtual IEnumerator AutoGrab()
		{
			return null;
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xA1CC7C", Offset = "0xA1CC7C", VA = "0xA1CC7C", Slot = "9")]
		protected virtual void AttemptSecondaryGrab(VRTK_InteractableObject grabbableObject)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xA1CEF8", Offset = "0xA1CEF8", VA = "0xA1CEF8")]
		public VRTK_ObjectAutoGrab()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class VRTK_ControllerHaptics : MonoBehaviour
	{
		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D848", Offset = "0x64D848")]
		private sealed class <SimpleHapticPulseRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float pulseInterval;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_ControllerReference controllerReference;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float hapticPulseStrength;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float duration;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B6")]
				[Address(RVA = "0xDA9694", Offset = "0xDA9694", VA = "0xDA9694", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B8")]
				[Address(RVA = "0xDA9704", Offset = "0xDA9704", VA = "0xDA9704", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022B3")]
			[Address(RVA = "0xDA90E0", Offset = "0xDA90E0", VA = "0xDA90E0")]
			[DebuggerHidden]
			public <SimpleHapticPulseRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60022B4")]
			[Address(RVA = "0xDA958C", Offset = "0xDA958C", VA = "0xDA958C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022B5")]
			[Address(RVA = "0xDA9590", Offset = "0xDA9590", VA = "0xDA9590", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022B7")]
			[Address(RVA = "0xDA969C", Offset = "0xDA969C", VA = "0xDA969C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D858", Offset = "0x64D858")]
		private sealed class <AudioClipHapticsRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip clip;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_ControllerReference controllerReference;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SDK_ControllerHapticModifiers <hapticModifiers>5__2;

			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <hapticScalar>5__3;

			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float[] <audioData>5__4;

			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <sampleOffset>5__5;

			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <startTime>5__6;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <length>5__7;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <endTime>5__8;

			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <sampleRate>5__9;

			[Token(Token = "0x170002A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022BC")]
				[Address(RVA = "0xDA9514", Offset = "0xDA9514", VA = "0xDA9514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022BE")]
				[Address(RVA = "0xDA9584", Offset = "0xDA9584", VA = "0xDA9584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022B9")]
			[Address(RVA = "0xDA91A4", Offset = "0xDA91A4", VA = "0xDA91A4")]
			[DebuggerHidden]
			public <AudioClipHapticsRoutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60022BA")]
			[Address(RVA = "0xDA9240", Offset = "0xDA9240", VA = "0xDA9240", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xDA9244", Offset = "0xDA9244", VA = "0xDA9244", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022BD")]
			[Address(RVA = "0xDA951C", Offset = "0xDA951C", VA = "0xDA951C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static VRTK_ControllerHaptics instance;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<VRTK_ControllerReference, Coroutine> hapticLoopCoroutines;

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xDA8750", Offset = "0xDA8750", VA = "0xDA8750")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xDA8944", Offset = "0xDA8944", VA = "0xDA8944")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xDA8A40", Offset = "0xDA8A40", VA = "0xDA8A40")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xDA8B14", Offset = "0xDA8B14", VA = "0xDA8B14")]
		public static void CancelHapticPulse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xDA8BE0", Offset = "0xDA8BE0", VA = "0xDA8BE0", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xDA8830", Offset = "0xDA8830", VA = "0xDA8830")]
		protected static void SetupInstance()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xDA8C4C", Offset = "0xDA8C4C", VA = "0xDA8C4C", Slot = "5")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xDA8D1C", Offset = "0xDA8D1C", VA = "0xDA8D1C", Slot = "6")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xDA8E70", Offset = "0xDA8E70", VA = "0xDA8E70", Slot = "7")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xDA8F60", Offset = "0xDA8F60", VA = "0xDA8F60", Slot = "8")]
		protected virtual void InternalCancelHapticPulse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xDA9018", Offset = "0xDA9018", VA = "0xDA9018", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E55C", Offset = "0x66E55C")]
		protected virtual IEnumerator SimpleHapticPulseRoutine(VRTK_ControllerReference controllerReference, float duration, float hapticPulseStrength, float pulseInterval)
		{
			return null;
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xDA910C", Offset = "0xDA910C", VA = "0xDA910C", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E5C0", Offset = "0x66E5C0")]
		protected virtual IEnumerator AudioClipHapticsRoutine(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xDA91D0", Offset = "0xDA91D0", VA = "0xDA91D0")]
		public VRTK_ControllerHaptics()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class VRTK_ObjectAppearance : MonoBehaviour
	{
		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D868", Offset = "0x64D868")]
		private sealed class <TransitionRendererOpacity>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float initialAlpha;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float targetAlpha;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float transitionDuration;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_ObjectAppearance <>4__this;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject model;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170002A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022C2")]
				[Address(RVA = "0xA1C904", Offset = "0xA1C904", VA = "0xA1C904", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022C4")]
				[Address(RVA = "0xA1C974", Offset = "0xA1C974", VA = "0xA1C974", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022BF")]
			[Address(RVA = "0xA1C784", Offset = "0xA1C784", VA = "0xA1C784")]
			[DebuggerHidden]
			public <TransitionRendererOpacity>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60022C0")]
			[Address(RVA = "0xA1C7B0", Offset = "0xA1C7B0", VA = "0xA1C7B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022C1")]
			[Address(RVA = "0xA1C7B4", Offset = "0xA1C7B4", VA = "0xA1C7B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022C3")]
			[Address(RVA = "0xA1C90C", Offset = "0xA1C90C", VA = "0xA1C90C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static VRTK_ObjectAppearance instance;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<GameObject, Coroutine> setOpacityCoroutines;

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xC2B4E0", Offset = "0xC2B4E0", VA = "0xC2B4E0")]
		public static void SetOpacity(GameObject model, float alpha, float transitionDuration = 0f)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xC1B80C", Offset = "0xC1B80C", VA = "0xC1B80C")]
		public static void SetRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xC2B6DC", Offset = "0xC2B6DC", VA = "0xC2B6DC")]
		public static void SetRendererHidden(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xC16604", Offset = "0xC16604", VA = "0xC16604")]
		public static void ToggleRenderer(bool state, GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xC2B7B0", Offset = "0xC2B7B0", VA = "0xC2B7B0")]
		public static bool IsRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
			return default(bool);
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xC2B9A8", Offset = "0xC2B9A8", VA = "0xC2B9A8")]
		public static void HighlightObject(GameObject model, Color? highlightColor, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xC2BAAC", Offset = "0xC2BAAC", VA = "0xC2BAAC")]
		public static void UnhighlightObject(GameObject model)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xC2BB78", Offset = "0xC2BB78", VA = "0xC2BB78", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xC2B5C8", Offset = "0xC2B5C8", VA = "0xC2B5C8")]
		protected static void SetupInstance()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xC2BCC8", Offset = "0xC2BCC8", VA = "0xC2BCC8", Slot = "5")]
		protected virtual void InternalSetOpacity(GameObject model, float alpha, float transitionDuration = 0f)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xC2BE28", Offset = "0xC2BE28", VA = "0xC2BE28", Slot = "6")]
		protected virtual void InternalSetRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xC2C034", Offset = "0xC2C034", VA = "0xC2C034", Slot = "7")]
		protected virtual void InternalSetRendererHidden(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xC2C240", Offset = "0xC2C240", VA = "0xC2C240", Slot = "8")]
		protected virtual void InternalHighlightObject(GameObject model, Color? highlightColor, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xC2C3C8", Offset = "0xC2C3C8", VA = "0xC2C3C8", Slot = "9")]
		protected virtual void InternalUnhighlightObject(GameObject model)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xC2C4DC", Offset = "0xC2C4DC", VA = "0xC2C4DC", Slot = "10")]
		protected virtual void EmitControllerEvents(GameObject model, bool state)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xC2C754", Offset = "0xC2C754", VA = "0xC2C754", Slot = "11")]
		protected virtual void ChangeRendererOpacity(GameObject model, float alpha)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xC2CCB8", Offset = "0xC2CCB8", VA = "0xC2CCB8", Slot = "12")]
		protected virtual float GetInitialAlpha(GameObject model)
		{
			return default(float);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xC2CD94", Offset = "0xC2CD94", VA = "0xC2CD94", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E624", Offset = "0x66E624")]
		protected virtual IEnumerator TransitionRendererOpacity(GameObject model, float initialAlpha, float targetAlpha, float transitionDuration)
		{
			return null;
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xC2CE78", Offset = "0xC2CE78", VA = "0xC2CE78", Slot = "14")]
		protected virtual void CancelSetOpacityCoroutine(GameObject model)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xC2CF08", Offset = "0xC2CF08", VA = "0xC2CF08")]
		public VRTK_ObjectAppearance()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float max;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float min;

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xB478A0", Offset = "0xB478A0", VA = "0xB478A0")]
		public MinMaxRangeAttribute(float min, float max)
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class ObsoleteInspectorAttribute : PropertyAttribute
	{
		[Token(Token = "0x600105A")]
		[Address(RVA = "0xB49CEC", Offset = "0xB49CEC", VA = "0xB49CEC")]
		public ObsoleteInspectorAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015F")]
	public class Limits2D
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minimum;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maximum;

		[Token(Token = "0x170000D1")]
		public static Limits2D zero
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xB4777C", Offset = "0xB4777C", VA = "0xB4777C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xB477DC", Offset = "0xB477DC", VA = "0xB477DC")]
		public Limits2D(float min, float max)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xB47814", Offset = "0xB47814", VA = "0xB47814")]
		public Limits2D(Vector2 limits)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xB4784C", Offset = "0xB4784C", VA = "0xB4784C")]
		public bool WithinLimits(float value)
		{
			return default(bool);
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xB47870", Offset = "0xB47870", VA = "0xB47870")]
		public Vector2 AsVector2()
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public class Vector3State
	{
		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool xState;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool yState;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool zState;

		[Token(Token = "0x170000D2")]
		public static Vector3State False
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x811DA4", Offset = "0x811DA4", VA = "0x811DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		public static Vector3State True
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x811E58", Offset = "0x811E58", VA = "0x811E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x811E08", Offset = "0x811E08", VA = "0x811E08")]
		public Vector3State(bool x, bool y, bool z)
		{
		}
	}
	[Token(Token = "0x2000161")]
	public struct CollisionTrackerEventArgs
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isTrigger;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collision collision;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Collider collider;
	}
	[Token(Token = "0x2000162")]
	public delegate void CollisionTrackerEventHandler(object sender, CollisionTrackerEventArgs e);
	[Token(Token = "0x2000163")]
	public class VRTK_CollisionTracker : MonoBehaviour
	{
		[Token(Token = "0x140000A3")]
		public event CollisionTrackerEventHandler CollisionEnter
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0xCB345C", Offset = "0xCB345C", VA = "0xCB345C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E688", Offset = "0x66E688")]
			add
			{
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0xCB380C", Offset = "0xCB380C", VA = "0xCB380C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E698", Offset = "0x66E698")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A4")]
		public event CollisionTrackerEventHandler CollisionStay
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0xCBDB18", Offset = "0xCBDB18", VA = "0xCBDB18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E6A8", Offset = "0x66E6A8")]
			add
			{
			}
			[Token(Token = "0x600106A")]
			[Address(RVA = "0xCBDC04", Offset = "0xCBDC04", VA = "0xCBDC04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E6B8", Offset = "0x66E6B8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A5")]
		public event CollisionTrackerEventHandler CollisionExit
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0xCB3548", Offset = "0xCB3548", VA = "0xCB3548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E6C8", Offset = "0x66E6C8")]
			add
			{
			}
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xCB38F8", Offset = "0xCB38F8", VA = "0xCB38F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E6D8", Offset = "0x66E6D8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A6")]
		public event CollisionTrackerEventHandler TriggerEnter
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0xCB3634", Offset = "0xCB3634", VA = "0xCB3634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E6E8", Offset = "0x66E6E8")]
			add
			{
			}
			[Token(Token = "0x600106E")]
			[Address(RVA = "0xCB39E4", Offset = "0xCB39E4", VA = "0xCB39E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E6F8", Offset = "0x66E6F8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A7")]
		public event CollisionTrackerEventHandler TriggerStay
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0xCBDCF0", Offset = "0xCBDCF0", VA = "0xCBDCF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E708", Offset = "0x66E708")]
			add
			{
			}
			[Token(Token = "0x6001070")]
			[Address(RVA = "0xCBDDDC", Offset = "0xCBDDDC", VA = "0xCBDDDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E718", Offset = "0x66E718")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A8")]
		public event CollisionTrackerEventHandler TriggerExit
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0xCB3720", Offset = "0xCB3720", VA = "0xCB3720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E728", Offset = "0x66E728")]
			add
			{
			}
			[Token(Token = "0x6001072")]
			[Address(RVA = "0xCB3AD0", Offset = "0xCB3AD0", VA = "0xCB3AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E738", Offset = "0x66E738")]
			remove
			{
			}
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xCBDEC8", Offset = "0xCBDEC8", VA = "0xCBDEC8")]
		protected void OnCollisionEnterEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xCBDF0C", Offset = "0xCBDF0C", VA = "0xCBDF0C")]
		protected void OnCollisionStayEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xCBDF50", Offset = "0xCBDF50", VA = "0xCBDF50")]
		protected void OnCollisionExitEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xCBDF94", Offset = "0xCBDF94", VA = "0xCBDF94")]
		protected void OnTriggerEnterEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xCBDFD8", Offset = "0xCBDFD8", VA = "0xCBDFD8")]
		protected void OnTriggerStayEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xCBE01C", Offset = "0xCBE01C", VA = "0xCBE01C")]
		protected void OnTriggerExitEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xCBE060", Offset = "0xCBE060", VA = "0xCBE060", Slot = "4")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xCBE0F8", Offset = "0xCBE0F8", VA = "0xCBE0F8", Slot = "5")]
		protected virtual void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xCBE190", Offset = "0xCBE190", VA = "0xCBE190", Slot = "6")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xCBE228", Offset = "0xCBE228", VA = "0xCBE228", Slot = "7")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xCBE2A4", Offset = "0xCBE2A4", VA = "0xCBE2A4", Slot = "8")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xCBE320", Offset = "0xCBE320", VA = "0xCBE320", Slot = "9")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xCBE39C", Offset = "0xCBE39C", VA = "0xCBE39C", Slot = "10")]
		protected virtual CollisionTrackerEventArgs SetCollisionTrackerEvent(bool isTrigger, Collision givenCollision, Collider givenCollider)
		{
			return default(CollisionTrackerEventArgs);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xCBE3B8", Offset = "0xCBE3B8", VA = "0xCBE3B8")]
		public VRTK_CollisionTracker()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class VRTK_ControllerReference : IEquatable<VRTK_ControllerReference>
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<uint, VRTK_ControllerReference> controllerReferences;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected uint storedControllerIndex;

		[Token(Token = "0x170000D4")]
		public uint index
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0xDAC728", Offset = "0xDAC728", VA = "0xDAC728")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170000D5")]
		public GameObject scriptAlias
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0xDAC940", Offset = "0xDAC940", VA = "0xDAC940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		public GameObject actual
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0xDAC9B0", Offset = "0xDAC9B0", VA = "0xDAC9B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public GameObject model
		{
			[Token(Token = "0x600108C")]
			[Address(RVA = "0xDACA20", Offset = "0xDACA20", VA = "0xDACA20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		public SDK_BaseController.ControllerHand hand
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0xDACAA0", Offset = "0xDACAA0", VA = "0xDACAA0")]
			get
			{
				return default(SDK_BaseController.ControllerHand);
			}
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xDAC1D8", Offset = "0xDAC1D8", VA = "0xDAC1D8")]
		public static VRTK_ControllerReference GetControllerReference(uint controllerIndex)
		{
			return null;
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xDA48A8", Offset = "0xDA48A8", VA = "0xDA48A8")]
		public static VRTK_ControllerReference GetControllerReference(GameObject controllerObject)
		{
			return null;
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xDAC538", Offset = "0xDAC538", VA = "0xDAC538")]
		public static VRTK_ControllerReference GetControllerReference(SDK_BaseController.ControllerHand controllerHand)
		{
			return null;
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xDA5314", Offset = "0xDA5314", VA = "0xDA5314")]
		public static bool IsValid(VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xDAC6B4", Offset = "0xDAC6B4", VA = "0xDAC6B4")]
		public static uint GetRealIndex(VRTK_ControllerReference controllerReference)
		{
			return default(uint);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xDAC298", Offset = "0xDAC298", VA = "0xDAC298")]
		public VRTK_ControllerReference(uint controllerIndex)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xDAC628", Offset = "0xDAC628", VA = "0xDAC628")]
		public VRTK_ControllerReference(GameObject controllerObject)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xDAC874", Offset = "0xDAC874", VA = "0xDAC874")]
		public VRTK_ControllerReference(SDK_BaseController.ControllerHand controllerHand)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xDAC6A4", Offset = "0xDAC6A4", VA = "0xDAC6A4")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xDACB1C", Offset = "0xDACB1C", VA = "0xDACB1C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xDACFBC", Offset = "0xDACFBC", VA = "0xDACFBC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xDACFC4", Offset = "0xDACFC4", VA = "0xDACFC4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xDAD070", Offset = "0xDAD070", VA = "0xDAD070", Slot = "4")]
		public bool Equals(VRTK_ControllerReference other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xDAD090", Offset = "0xDAD090", VA = "0xDAD090", Slot = "5")]
		protected virtual GameObject GetValidObjectFromIndex()
		{
			return null;
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xDAD184", Offset = "0xDAD184", VA = "0xDAD184", Slot = "6")]
		protected virtual void AddToCache()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xDAC384", Offset = "0xDAC384", VA = "0xDAC384")]
		private static GameObject GetValidObjectFromHand(SDK_BaseController.ControllerHand controllerHand)
		{
			return null;
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xDAC730", Offset = "0xDAC730", VA = "0xDAC730")]
		private static SDK_BaseController.ControllerHand GetControllerHand(GameObject controllerObject)
		{
			return default(SDK_BaseController.ControllerHand);
		}
	}
	[Token(Token = "0x2000165")]
	public static class Bezier
	{
		[Token(Token = "0x6001098")]
		[Address(RVA = "0x8A1F84", Offset = "0x8A1F84", VA = "0x8A1F84")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x8A2110", Offset = "0x8A2110", VA = "0x8A2110")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x8A226C", Offset = "0x8A226C", VA = "0x8A226C")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x8A2464", Offset = "0x8A2464", VA = "0x8A2464")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000166")]
	public class VRTK_CurveGenerator : MonoBehaviour
	{
		[Token(Token = "0x2000474")]
		public enum BezierControlPointMode
		{
			[Token(Token = "0x4001FF4")]
			Free,
			[Token(Token = "0x4001FF5")]
			Aligned,
			[Token(Token = "0x4001FF6")]
			Mirrored
		}

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Vector3[] points;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected GameObject[] items;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected BezierControlPointMode[] modes;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool loop;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int frequency;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool customTracer;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		protected bool rescalePointerTracer;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject tracerLineRenderer;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected LineRenderer customLineRenderer;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool lineRendererAndItem;

		[Token(Token = "0x170000D9")]
		protected virtual bool Loop
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xDB172C", Offset = "0xDB172C", VA = "0xDB172C", Slot = "11")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xDB1734", Offset = "0xDB1734", VA = "0xDB1734", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		protected virtual int ControlPointCount
		{
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xDB1830", Offset = "0xDB1830", VA = "0xDB1830", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DB")]
		protected virtual int CurveCount
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xDB2284", Offset = "0xDB2284", VA = "0xDB2284", Slot = "17")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xDB0A4C", Offset = "0xDB0A4C", VA = "0xDB0A4C", Slot = "4")]
		public virtual void Create(int setFrequency, float radius, GameObject tracer, bool rescaleTracer = false)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xDB11AC", Offset = "0xDB11AC", VA = "0xDB11AC", Slot = "5")]
		public virtual void SetPoints(Vector3[] controlPoints, Material material, Color color)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xDB121C", Offset = "0xDB121C", VA = "0xDB121C", Slot = "6")]
		public virtual Vector3[] GetPoints(Vector3[] controlPoints)
		{
			return null;
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xDB1374", Offset = "0xDB1374", VA = "0xDB1374", Slot = "7")]
		public virtual void TogglePoints(bool state)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xDB144C", Offset = "0xDB144C", VA = "0xDB144C", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xDB14EC", Offset = "0xDB14EC", VA = "0xDB14EC", Slot = "9")]
		protected virtual void PointsInit(Vector3[] controlPoints)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xDB1554", Offset = "0xDB1554", VA = "0xDB1554", Slot = "10")]
		protected virtual GameObject CreateSphere()
		{
			return null;
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xDB185C", Offset = "0xDB185C", VA = "0xDB185C", Slot = "14")]
		protected virtual Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xDB18B8", Offset = "0xDB18B8", VA = "0xDB18B8", Slot = "15")]
		protected virtual void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xDB1EB8", Offset = "0xDB1EB8", VA = "0xDB1EB8", Slot = "16")]
		protected virtual void EnforceMode(int index)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xDB22CC", Offset = "0xDB22CC", VA = "0xDB22CC", Slot = "18")]
		protected virtual Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xDB2554", Offset = "0xDB2554", VA = "0xDB2554", Slot = "19")]
		protected virtual void SetObjects(Material material, Color color)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xDB2604", Offset = "0xDB2604", VA = "0xDB2604", Slot = "20")]
		protected virtual void SetPointData(Material material, Color color, float stepSize)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xDB27F0", Offset = "0xDB27F0", VA = "0xDB27F0", Slot = "21")]
		protected virtual void SetItemPosition(int currentIndex, Vector3 setPosition, Material material, Color color, float stepSize)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xDB2C4C", Offset = "0xDB2C4C", VA = "0xDB2C4C", Slot = "22")]
		protected virtual void SetItemMaterial(GameObject item, Material material, Color color)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xDB2DF0", Offset = "0xDB2DF0", VA = "0xDB2DF0", Slot = "23")]
		protected virtual void SetMaterial(Material material, Color color)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xDB2FA4", Offset = "0xDB2FA4", VA = "0xDB2FA4")]
		public VRTK_CurveGenerator()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public static class VRTK_Defines
	{
		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version CurrentVersion;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Version[] PreviousVersions;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65B6D8", Offset = "0x65B6D8")]
		private static string <CurrentExactVersionScriptingDefineSymbol>k__BackingField;

		[Token(Token = "0x4000D39")]
		public const string VersionScriptingDefineSymbolPrefix = "VRTK_VERSION_";

		[Token(Token = "0x4000D3A")]
		public const string VersionScriptingDefineSymbolSuffix = "_OR_NEWER";

		[Token(Token = "0x170000DC")]
		public static string CurrentExactVersionScriptingDefineSymbol
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xDB4BBC", Offset = "0xDB4BBC", VA = "0xDB4BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E748", Offset = "0x66E748")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xDB4C24", Offset = "0xDB4C24", VA = "0xDB4C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E758", Offset = "0x66E758")]
			private set
			{
			}
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xDB4C90", Offset = "0xDB4C90", VA = "0xDB4C90")]
		static VRTK_Defines()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xDB4E8C", Offset = "0xDB4E8C", VA = "0xDB4E8C")]
		private static string ExactVersionSymbol(Version version)
		{
			return null;
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xDB4F3C", Offset = "0xDB4F3C", VA = "0xDB4F3C")]
		private static string AtLeastVersionSymbol(Version version)
		{
			return null;
		}
	}
	[Token(Token = "0x2000168")]
	public class VRTK_EventSystem : EventSystem
	{
		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D878", Offset = "0x64D878")]
		private sealed class <SetEventSystemOfBaseInputModulesAfterFrameDelay>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventSystem eventSystem;

			[Token(Token = "0x170002AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022C8")]
				[Address(RVA = "0xBE22CC", Offset = "0xBE22CC", VA = "0xBE22CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022CA")]
				[Address(RVA = "0xBE233C", Offset = "0xBE233C", VA = "0xBE233C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022C5")]
			[Address(RVA = "0xBE1F84", Offset = "0xBE1F84", VA = "0xBE1F84")]
			[DebuggerHidden]
			public <SetEventSystemOfBaseInputModulesAfterFrameDelay>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60022C6")]
			[Address(RVA = "0xBE2230", Offset = "0xBE2230", VA = "0xBE2230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022C7")]
			[Address(RVA = "0xBE2234", Offset = "0xBE2234", VA = "0xBE2234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022C9")]
			[Address(RVA = "0xBE22D4", Offset = "0xBE22D4", VA = "0xBE22D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected EventSystem previousEventSystem;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_VRInputModule vrInputModule;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly FieldInfo[] EVENT_SYSTEM_FIELD_INFOS;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly PropertyInfo[] EVENT_SYSTEM_PROPERTY_INFOS;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly FieldInfo BASE_INPUT_MODULE_EVENT_SYSTEM_FIELD_INFO;

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xBE18CC", Offset = "0xBE18CC", VA = "0xBE18CC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xBE1C88", Offset = "0xBE1C88", VA = "0xBE1C88", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xBE1EA4", Offset = "0xBE1EA4", VA = "0xBE1EA4", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xBE1F80", Offset = "0xBE1F80", VA = "0xBE1F80", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xBE1A30", Offset = "0xBE1A30", VA = "0xBE1A30")]
		private static void CopyValuesFrom(EventSystem fromEventSystem, EventSystem toEventSystem)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xBE1C14", Offset = "0xBE1C14", VA = "0xBE1C14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E768", Offset = "0x66E768")]
		private static IEnumerator SetEventSystemOfBaseInputModulesAfterFrameDelay(EventSystem eventSystem)
		{
			return null;
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xBE1D78", Offset = "0xBE1D78", VA = "0xBE1D78")]
		private static void SetEventSystemOfBaseInputModules(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xBE1FB0", Offset = "0xBE1FB0", VA = "0xBE1FB0")]
		public VRTK_EventSystem()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class VRTK_Logger : MonoBehaviour
	{
		[Token(Token = "0x2000476")]
		public enum LogLevels
		{
			[Token(Token = "0x4001FFB")]
			Trace,
			[Token(Token = "0x4001FFC")]
			Debug,
			[Token(Token = "0x4001FFD")]
			Info,
			[Token(Token = "0x4001FFE")]
			Warn,
			[Token(Token = "0x4001FFF")]
			Error,
			[Token(Token = "0x4002000")]
			Fatal,
			[Token(Token = "0x4002001")]
			None
		}

		[Token(Token = "0x2000477")]
		public enum CommonMessageKeys
		{
			[Token(Token = "0x4002003")]
			NOT_DEFINED,
			[Token(Token = "0x4002004")]
			REQUIRED_COMPONENT_MISSING_FROM_SCENE,
			[Token(Token = "0x4002005")]
			REQUIRED_COMPONENT_MISSING_FROM_GAMEOBJECT,
			[Token(Token = "0x4002006")]
			REQUIRED_COMPONENT_MISSING_FROM_PARAMETER,
			[Token(Token = "0x4002007")]
			REQUIRED_COMPONENT_MISSING_NOT_INJECTED,
			[Token(Token = "0x4002008")]
			COULD_NOT_FIND_OBJECT_FOR_ACTION,
			[Token(Token = "0x4002009")]
			SDK_OBJECT_NOT_FOUND,
			[Token(Token = "0x400200A")]
			SDK_NOT_FOUND,
			[Token(Token = "0x400200B")]
			SDK_MANAGER_ERRORS,
			[Token(Token = "0x400200C")]
			SCRIPTING_DEFINE_SYMBOLS_ADDED,
			[Token(Token = "0x400200D")]
			SCRIPTING_DEFINE_SYMBOLS_REMOVED,
			[Token(Token = "0x400200E")]
			SCRIPTING_DEFINE_SYMBOLS_NOT_FOUND
		}

		[Serializable]
		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D888", Offset = "0x64D888")]
		private sealed class <>c
		{
			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Match, int> <>9__7_0;

			[Token(Token = "0x60022CC")]
			[Address(RVA = "0xC291B4", Offset = "0xC291B4", VA = "0xC291B4")]
			public <>c()
			{
			}

			[Token(Token = "0x60022CD")]
			[Address(RVA = "0xC291BC", Offset = "0xC291BC", VA = "0xC291BC")]
			internal int <CreateIfNotExists>b__7_0(Match m)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_Logger instance;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<CommonMessageKeys, string> commonMessages;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<CommonMessageKeys, int> commonMessageParts;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LogLevels minLevel;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool throwExceptions;

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xC28370", Offset = "0xC28370", VA = "0xC28370")]
		public static void CreateIfNotExists()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xC1598C", Offset = "0xC1598C", VA = "0xC1598C")]
		public static string GetCommonMessage(CommonMessageKeys messageKey, params object[] parameters)
		{
			return null;
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xC288B0", Offset = "0xC288B0", VA = "0xC288B0")]
		public static void Trace(string message)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xC28B2C", Offset = "0xC28B2C", VA = "0xC28B2C")]
		public static void Debug(string message)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xC28B98", Offset = "0xC28B98", VA = "0xC28B98")]
		public static void Info(string message)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xC28C04", Offset = "0xC28C04", VA = "0xC28C04")]
		public static void Warn(string message)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xC15AD4", Offset = "0xC15AD4", VA = "0xC15AD4")]
		public static void Error(string message, bool forcePause = false)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xC28C70", Offset = "0xC28C70", VA = "0xC28C70")]
		public static void Fatal(string message, bool forcePause = false)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xC28CE8", Offset = "0xC28CE8", VA = "0xC28CE8")]
		public static void Fatal(Exception exception, bool forcePause = false)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xC2891C", Offset = "0xC2891C", VA = "0xC2891C")]
		public static void Log(LogLevels level, string message, bool forcePause = false)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xC28D84", Offset = "0xC28D84", VA = "0xC28D84", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xC28E2C", Offset = "0xC28E2C", VA = "0xC28E2C")]
		public VRTK_Logger()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public static class VRTK_ObjectCache
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<VRTK_BasicTeleport> registeredTeleporters;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<VRTK_DestinationMarker> registeredDestinationMarkers;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<VRTK_InteractTouch, VRTK_ControllerTrackedCollider> registeredTrackedColliderToInteractTouches;
	}
	[Token(Token = "0x200016B")]
	public sealed class VRTK_PlayerObject : MonoBehaviour
	{
		[Token(Token = "0x2000479")]
		public enum ObjectTypes
		{
			[Token(Token = "0x4002012")]
			Null,
			[Token(Token = "0x4002013")]
			CameraRig,
			[Token(Token = "0x4002014")]
			Headset,
			[Token(Token = "0x4002015")]
			Controller,
			[Token(Token = "0x4002016")]
			Pointer,
			[Token(Token = "0x4002017")]
			Highlighter,
			[Token(Token = "0x4002018")]
			Collider
		}

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectTypes objectType;

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xA2544C", Offset = "0xA2544C", VA = "0xA2544C")]
		public static void SetPlayerObject(GameObject obj, ObjectTypes objType)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xA24344", Offset = "0xA24344", VA = "0xA24344")]
		public static bool IsPlayerObject(GameObject obj, ObjectTypes ofType = ObjectTypes.Null)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xA29C58", Offset = "0xA29C58", VA = "0xA29C58")]
		public VRTK_PlayerObject()
		{
		}
	}
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x649760", Offset = "0x649760")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x649760", Offset = "0x649760")]
	public class VRTK_RoomExtender_PlayAreaGizmo : MonoBehaviour
	{
		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float wireframeHeight;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool drawWireframeWhenSelectedOnly;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform playArea;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_RoomExtender roomExtender;

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xA33E88", Offset = "0xA33E88", VA = "0xA33E88", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xA33EF0", Offset = "0xA33EF0", VA = "0xA33EF0", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xA34130", Offset = "0xA34130", VA = "0xA34130", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xA34198", Offset = "0xA34198", VA = "0xA34198", Slot = "7")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xA341B0", Offset = "0xA341B0", VA = "0xA341B0", Slot = "8")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xA341C8", Offset = "0xA341C8", VA = "0xA341C8", Slot = "9")]
		protected virtual void DrawWireframe()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xA34A48", Offset = "0xA34A48", VA = "0xA34A48")]
		public VRTK_RoomExtender_PlayAreaGizmo()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class VRTK_ScreenFade : MonoBehaviour
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_ScreenFade instance;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Material fadeMaterial;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Color currentColor;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Color targetColor;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Color deltaColor;

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x9BF3C0", Offset = "0x9BF3C0", VA = "0x9BF3C0")]
		public static void Start(Color newColor, float duration)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x9BF4BC", Offset = "0x9BF4BC", VA = "0x9BF4BC", Slot = "4")]
		public virtual void StartFade(Color newColor, float duration)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x9BF524", Offset = "0x9BF524", VA = "0x9BF524", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x9BF5C0", Offset = "0x9BF5C0", VA = "0x9BF5C0", Slot = "6")]
		protected virtual void OnPostRender()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x9BF890", Offset = "0x9BF890", VA = "0x9BF890")]
		public VRTK_ScreenFade()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public abstract class VRTK_SDKControllerReady : MonoBehaviour
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SDK_BaseController previousControllerSDK;

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xA34B90", Offset = "0xA34B90", VA = "0xA34B90", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xA34C40", Offset = "0xA34C40", VA = "0xA34C40", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xA34D10", Offset = "0xA34D10", VA = "0xA34D10", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xA34D8C", Offset = "0xA34D8C", VA = "0xA34D8C", Slot = "7")]
		protected virtual void CheckControllersReady()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xA34EC4", Offset = "0xA34EC4", VA = "0xA34EC4", Slot = "8")]
		protected virtual void UnregisterPreviousLeftController()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xA34FD4", Offset = "0xA34FD4", VA = "0xA34FD4", Slot = "9")]
		protected virtual void UnregisterPreviousRightController()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xA350E4", Offset = "0xA350E4", VA = "0xA350E4", Slot = "10")]
		protected virtual void RegisterLeftControllerReady()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xA352FC", Offset = "0xA352FC", VA = "0xA352FC", Slot = "11")]
		protected virtual void RegisterRightControllerReady()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xA35514", Offset = "0xA35514", VA = "0xA35514", Slot = "12")]
		protected virtual void RightControllerReady(object sender, VRTKSDKBaseControllerEventArgs e)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xA3552C", Offset = "0xA3552C", VA = "0xA3552C", Slot = "13")]
		protected virtual void LeftControllerReady(object sender, VRTKSDKBaseControllerEventArgs e)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xA35544", Offset = "0xA35544", VA = "0xA35544", Slot = "14")]
		protected virtual void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xA35548", Offset = "0xA35548", VA = "0xA35548")]
		protected VRTK_SDKControllerReady()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public struct VRTKTrackedControllerEventArgs
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint currentIndex;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint previousIndex;
	}
	[Token(Token = "0x2000170")]
	public delegate void VRTKTrackedControllerEventHandler(object sender, VRTKTrackedControllerEventArgs e);
	[Token(Token = "0x2000171")]
	public class VRTK_TrackedController : MonoBehaviour
	{
		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D898", Offset = "0x64D898")]
		private sealed class <EmitControllerEnabledAtEndOfFrame>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TrackedController <>4__this;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022D1")]
				[Address(RVA = "0x8040F0", Offset = "0x8040F0", VA = "0x8040F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D3")]
				[Address(RVA = "0x804160", Offset = "0x804160", VA = "0x804160", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x803DB4", Offset = "0x803DB4", VA = "0x803DB4")]
			[DebuggerHidden]
			public <EmitControllerEnabledAtEndOfFrame>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60022CF")]
			[Address(RVA = "0x804014", Offset = "0x804014", VA = "0x804014", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x804018", Offset = "0x804018", VA = "0x804018", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x8040F8", Offset = "0x8040F8", VA = "0x8040F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D8A8", Offset = "0x64D8A8")]
		private sealed class <EmitControllerModelReadyAtEndOfFrame>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TrackedController <>4__this;

			[Token(Token = "0x170002AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022D7")]
				[Address(RVA = "0x804244", Offset = "0x804244", VA = "0x804244", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D9")]
				[Address(RVA = "0x8042B4", Offset = "0x8042B4", VA = "0x8042B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x803F8C", Offset = "0x803F8C", VA = "0x803F8C")]
			[DebuggerHidden]
			public <EmitControllerModelReadyAtEndOfFrame>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x60022D5")]
			[Address(RVA = "0x804168", Offset = "0x804168", VA = "0x804168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x80416C", Offset = "0x80416C", VA = "0x80416C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D8")]
			[Address(RVA = "0x80424C", Offset = "0x80424C", VA = "0x80424C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint index;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject aliasController;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool controllerModelWaitSubscribed;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Coroutine emitControllerEnabledRoutine;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Coroutine emitControllerModelAvailableRoutine;

		[Token(Token = "0x170000DD")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x8031A8", Offset = "0x8031A8", VA = "0x8031A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000A9")]
		public event VRTKTrackedControllerEventHandler ControllerEnabled
		{
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x802A48", Offset = "0x802A48", VA = "0x802A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E7CC", Offset = "0x66E7CC")]
			add
			{
			}
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x802B34", Offset = "0x802B34", VA = "0x802B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E7DC", Offset = "0x66E7DC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AA")]
		public event VRTKTrackedControllerEventHandler ControllerDisabled
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x802C20", Offset = "0x802C20", VA = "0x802C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E7EC", Offset = "0x66E7EC")]
			add
			{
			}
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x802D0C", Offset = "0x802D0C", VA = "0x802D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E7FC", Offset = "0x66E7FC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AB")]
		public event VRTKTrackedControllerEventHandler ControllerIndexChanged
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x802DF8", Offset = "0x802DF8", VA = "0x802DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E80C", Offset = "0x66E80C")]
			add
			{
			}
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x802EE4", Offset = "0x802EE4", VA = "0x802EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E81C", Offset = "0x66E81C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AC")]
		public event VRTKTrackedControllerEventHandler ControllerModelAvailable
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x802FD0", Offset = "0x802FD0", VA = "0x802FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E82C", Offset = "0x66E82C")]
			add
			{
			}
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x8030BC", Offset = "0x8030BC", VA = "0x8030BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E83C", Offset = "0x66E83C")]
			remove
			{
			}
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x803214", Offset = "0x803214", VA = "0x803214", Slot = "4")]
		public virtual void OnControllerEnabled(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x803238", Offset = "0x803238", VA = "0x803238", Slot = "5")]
		public virtual void OnControllerDisabled(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x80325C", Offset = "0x80325C", VA = "0x80325C", Slot = "6")]
		public virtual void OnControllerIndexChanged(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x803280", Offset = "0x803280", VA = "0x803280", Slot = "7")]
		public virtual void OnControllerModelAvailable(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x8032A4", Offset = "0x8032A4", VA = "0x8032A4", Slot = "8")]
		public virtual SDK_BaseController.ControllerType GetControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x8032AC", Offset = "0x8032AC", VA = "0x8032AC", Slot = "9")]
		protected virtual VRTKTrackedControllerEventArgs SetEventPayload(uint previousIndex = uint.MaxValue)
		{
			return default(VRTKTrackedControllerEventArgs);
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x8032B8", Offset = "0x8032B8", VA = "0x8032B8", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x803320", Offset = "0x803320", VA = "0x803320", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x80346C", Offset = "0x80346C", VA = "0x80346C", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x8034D4", Offset = "0x8034D4", VA = "0x8034D4", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x80353C", Offset = "0x80353C", VA = "0x80353C", Slot = "14")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x8035E0", Offset = "0x8035E0", VA = "0x8035E0", Slot = "15")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x803804", Offset = "0x803804", VA = "0x803804", Slot = "16")]
		protected virtual void ManageLeftControllerListener(bool register, VRTKSDKBaseControllerEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x8038D4", Offset = "0x8038D4", VA = "0x8038D4", Slot = "17")]
		protected virtual void ManageRightControllerListener(bool register, VRTKSDKBaseControllerEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x8039A4", Offset = "0x8039A4", VA = "0x8039A4", Slot = "18")]
		protected virtual void RegisterHandControllerListener(bool register, SDK_BaseController.ControllerHand givenHand)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x803AA8", Offset = "0x803AA8", VA = "0x803AA8", Slot = "19")]
		protected virtual void ManageControllerModelListener(bool register, SDK_BaseController.ControllerHand givenHand)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x803B8C", Offset = "0x803B8C", VA = "0x803B8C", Slot = "20")]
		protected virtual void ManageControllerModelListeners(bool register)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x803C30", Offset = "0x803C30", VA = "0x803C30", Slot = "21")]
		protected virtual void SetControllerType()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x803CD8", Offset = "0x803CD8", VA = "0x803CD8", Slot = "22")]
		protected virtual void StartEmitControllerEnabledAtEndOfFrame()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x803D40", Offset = "0x803D40", VA = "0x803D40", Slot = "23")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E84C", Offset = "0x66E84C")]
		protected virtual IEnumerator EmitControllerEnabledAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x803DE0", Offset = "0x803DE0", VA = "0x803DE0", Slot = "24")]
		protected virtual void ControllerModelReady(object sender, VRTKSDKBaseControllerEventArgs e)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x803E40", Offset = "0x803E40", VA = "0x803E40", Slot = "25")]
		protected virtual void StartEmitControllerModelReadyAtEndOfFrame()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x803F18", Offset = "0x803F18", VA = "0x803F18", Slot = "26")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E8B0", Offset = "0x66E8B0")]
		protected virtual IEnumerator EmitControllerModelReadyAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x803FB8", Offset = "0x803FB8", VA = "0x803FB8", Slot = "27")]
		protected virtual void CancelCoroutines()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x804004", Offset = "0x804004", VA = "0x804004")]
		public VRTK_TrackedController()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public class VRTK_TrackedHeadset : MonoBehaviour
	{
		[Token(Token = "0x600110E")]
		[Address(RVA = "0x8042BC", Offset = "0x8042BC", VA = "0x8042BC", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x804320", Offset = "0x804320", VA = "0x804320", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x804384", Offset = "0x804384", VA = "0x804384")]
		public VRTK_TrackedHeadset()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class VRTK_TunnelEffect : MonoBehaviour
	{
		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Material material;

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x804FC0", Offset = "0x804FC0", VA = "0x804FC0", Slot = "4")]
		public virtual void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x804FC8", Offset = "0x804FC8", VA = "0x804FC8", Slot = "5")]
		protected virtual void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x80504C", Offset = "0x80504C", VA = "0x80504C")]
		public VRTK_TunnelEffect()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class VRTK_UIGraphicRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D8B8", Offset = "0x64D8B8")]
		private sealed class <>c
		{
			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastResult> <>9__7_0;

			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x80A304", Offset = "0x80A304", VA = "0x80A304")]
			public <>c()
			{
			}

			[Token(Token = "0x60022DC")]
			[Address(RVA = "0x80A30C", Offset = "0x80A30C", VA = "0x80A30C")]
			internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Canvas currentCanvas;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector2 lastKnownPosition;

		[Token(Token = "0x4000D63")]
		protected const float UI_CONTROL_OFFSET = 1E-05f;

		[NonSerialized]
		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<RaycastResult> s_RaycastResults;

		[Token(Token = "0x170000DE")]
		protected virtual Canvas canvas
		{
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x80A114", Offset = "0x80A114", VA = "0x80A114", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x8090AC", Offset = "0x8090AC", VA = "0x8090AC", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x809318", Offset = "0x809318", VA = "0x809318", Slot = "22")]
		protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x80964C", Offset = "0x80964C", VA = "0x80964C", Slot = "23")]
		protected virtual float GetHitDistance(Ray ray, float hitDistance)
		{
			return default(float);
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x809A2C", Offset = "0x809A2C", VA = "0x809A2C", Slot = "24")]
		protected virtual void Raycast(Canvas canvas, Camera eventCamera, PointerEventData eventData, Ray ray, ref List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x80A1C4", Offset = "0x80A1C4", VA = "0x80A1C4")]
		public VRTK_UIGraphicRaycaster()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class VRTK_VRInputModule : PointerInputModule
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<VRTK_UIPointer> pointers;

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x80D4D4", Offset = "0x80D4D4", VA = "0x80D4D4", Slot = "30")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x80D534", Offset = "0x80D534", VA = "0x80D534", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x80D53C", Offset = "0x80D53C", VA = "0x80D53C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x80D718", Offset = "0x80D718", VA = "0x80D718", Slot = "31")]
		protected virtual List<RaycastResult> CheckRaycasts(VRTK_UIPointer pointer)
		{
			return null;
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x80D8D8", Offset = "0x80D8D8", VA = "0x80D8D8", Slot = "32")]
		protected virtual bool CheckTransformTree(Transform target, Transform source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x80D9EC", Offset = "0x80D9EC", VA = "0x80D9EC", Slot = "33")]
		protected virtual bool NoValidCollision(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x80DB44", Offset = "0x80DB44", VA = "0x80DB44", Slot = "34")]
		protected virtual bool IsHovering(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x80DD30", Offset = "0x80DD30", VA = "0x80DD30", Slot = "35")]
		protected virtual bool ValidElement(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x80DDF0", Offset = "0x80DDF0", VA = "0x80DDF0", Slot = "36")]
		protected virtual void CheckPointerHoverClick(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x80DE90", Offset = "0x80DE90", VA = "0x80DE90", Slot = "37")]
		protected virtual void Hover(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x80E728", Offset = "0x80E728", VA = "0x80E728", Slot = "38")]
		protected virtual void Click(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x80E7C4", Offset = "0x80E7C4", VA = "0x80E7C4", Slot = "39")]
		protected virtual void ClickOnUp(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x80E8A0", Offset = "0x80E8A0", VA = "0x80E8A0", Slot = "40")]
		protected virtual void ClickOnDown(VRTK_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x80E99C", Offset = "0x80E99C", VA = "0x80E99C", Slot = "41")]
		protected virtual bool IsEligibleClick(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x80EC48", Offset = "0x80EC48", VA = "0x80EC48", Slot = "42")]
		protected virtual bool AttemptClick(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x80EF70", Offset = "0x80EF70", VA = "0x80EF70", Slot = "43")]
		protected virtual void Drag(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x80F5C0", Offset = "0x80F5C0", VA = "0x80F5C0", Slot = "44")]
		protected virtual void Scroll(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x80F910", Offset = "0x80F910", VA = "0x80F910")]
		public VRTK_VRInputModule()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public abstract class VRTK_BaseObjectControlAction : MonoBehaviour
	{
		[Token(Token = "0x200047D")]
		public enum AxisListeners
		{
			[Token(Token = "0x4002022")]
			XAxisChanged,
			[Token(Token = "0x4002023")]
			YAxisChanged
		}

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B728", Offset = "0x65B728")]
		public VRTK_ObjectControl objectControlScript;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B760", Offset = "0x65B760")]
		public AxisListeners listenOnAxisChange;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Collider centerCollider;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 colliderCenter;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float colliderRadius;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float colliderHeight;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform controlledTransform;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_BodyPhysics internalBodyPhysics;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3 playerHeadPositionBeforeRotation;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform headsetTransform;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool validPlayerObject;

		[Token(Token = "0x600112D")]
		protected abstract void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive);

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xCA6D98", Offset = "0xCA6D98", VA = "0xCA6D98", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xCA6E00", Offset = "0xCA6E00", VA = "0xCA6E00", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xCA6F9C", Offset = "0xCA6F9C", VA = "0xCA6F9C", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xCA70D0", Offset = "0xCA70D0", VA = "0xCA70D0", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xCA7138", Offset = "0xCA7138", VA = "0xCA7138", Slot = "9")]
		protected virtual void AxisChanged(object sender, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xCA7170", Offset = "0xCA7170", VA = "0xCA7170", Slot = "10")]
		protected virtual void RotateAroundPlayer(GameObject controlledGameObject, float angle)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xCA73B4", Offset = "0xCA73B4", VA = "0xCA73B4", Slot = "11")]
		protected virtual void Blink(float blinkSpeed)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xCA7498", Offset = "0xCA7498", VA = "0xCA7498", Slot = "12")]
		protected virtual void ReleaseBlink(float blinkSpeed)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xCA7544", Offset = "0xCA7544", VA = "0xCA7544", Slot = "13")]
		protected virtual Vector3 GetObjectCenter(Transform checkObject)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xCA7AC0", Offset = "0xCA7AC0", VA = "0xCA7AC0", Slot = "14")]
		protected virtual int GetAxisDirection(float axis)
		{
			return default(int);
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xCA7AD8", Offset = "0xCA7AD8", VA = "0xCA7AD8", Slot = "15")]
		protected virtual bool CanMove(VRTK_BodyPhysics givenBodyPhysics, Vector3 currentPosition, Vector3 proposedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xCA7C58", Offset = "0xCA7C58", VA = "0xCA7C58", Slot = "16")]
		protected virtual void CheckForPlayerBeforeRotation(GameObject controlledGameObject)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xCA7DD8", Offset = "0xCA7DD8", VA = "0xCA7DD8", Slot = "17")]
		protected virtual void CheckForPlayerAfterRotation(GameObject controlledGameObject)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xCA7F4C", Offset = "0xCA7F4C", VA = "0xCA7F4C")]
		protected VRTK_BaseObjectControlAction()
		{
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6497AC", Offset = "0x6497AC")]
	public class VRTK_RotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B798", Offset = "0x65B798")]
		public float maximumRotationSpeed;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B7D0", Offset = "0x65B7D0")]
		public float rotationMultiplier;

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xA34A84", Offset = "0xA34A84", VA = "0xA34A84", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xA34B18", Offset = "0xA34B18", VA = "0xA34B18", Slot = "18")]
		protected virtual float Rotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xA34B74", Offset = "0xA34B74", VA = "0xA34B74")]
		public VRTK_RotateObjectControlAction()
		{
		}
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6497E4", Offset = "0x6497E4")]
	public class VRTK_SlideObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B808", Offset = "0x65B808")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B808", Offset = "0x65B808")]
		public float maximumSpeed;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B868", Offset = "0x65B868")]
		public float deceleration;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B8A0", Offset = "0x65B8A0")]
		public float fallingDeceleration;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B8D8", Offset = "0x65B8D8")]
		public float speedMultiplier;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B910", Offset = "0x65B910")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B910", Offset = "0x65B910")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float currentSpeed;

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x9C1E28", Offset = "0x9C1E28", VA = "0x9C1E28", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x9C1EB8", Offset = "0x9C1EB8", VA = "0x9C1EB8", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x9C1EC8", Offset = "0x9C1EC8", VA = "0x9C1EC8", Slot = "18")]
		protected virtual float CalculateSpeed(float inputValue, bool currentlyFalling, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x9C1F00", Offset = "0x9C1F00", VA = "0x9C1F00", Slot = "19")]
		protected virtual float Decelerate(float speed, bool currentlyFalling)
		{
			return default(float);
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x9C2018", Offset = "0x9C2018", VA = "0x9C2018", Slot = "20")]
		protected virtual void Move(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x9C22BC", Offset = "0x9C22BC", VA = "0x9C22BC")]
		public VRTK_SlideObjectControlAction()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64981C", Offset = "0x64981C")]
	public class VRTK_SnapRotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B970", Offset = "0x65B970")]
		public float anglePerSnap;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B9A8", Offset = "0x65B9A8")]
		public float angleMultiplier;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B9E0", Offset = "0x65B9E0")]
		public float snapDelay;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BA18", Offset = "0x65BA18")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65BA50", Offset = "0x65BA50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BA50", Offset = "0x65BA50")]
		public float axisThreshold;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float snapDelayTimer;

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x9CBD90", Offset = "0x9CBD90", VA = "0x9CBD90", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x9CBE70", Offset = "0x9CBE70", VA = "0x9CBE70", Slot = "18")]
		protected virtual bool ValidThreshold(float axis)
		{
			return default(bool);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x9CBEA8", Offset = "0x9CBEA8", VA = "0x9CBEA8", Slot = "19")]
		protected virtual float Rotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x9CBF20", Offset = "0x9CBF20", VA = "0x9CBF20")]
		public VRTK_SnapRotateObjectControlAction()
		{
		}
	}
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649854", Offset = "0x649854")]
	public class VRTK_WarpObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BAA4", Offset = "0x65BAA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BAA4", Offset = "0x65BAA4")]
		public float warpDistance;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BB04", Offset = "0x65BB04")]
		public float warpMultiplier;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BB3C", Offset = "0x65BB3C")]
		public float warpDelay;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BB74", Offset = "0x65BB74")]
		public float floorHeightTolerance;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BBAC", Offset = "0x65BBAC")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BBE4", Offset = "0x65BBE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BBE4", Offset = "0x65BBE4")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float warpDelayTimer;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Transform headset;

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x8106E0", Offset = "0x8106E0", VA = "0x8106E0", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x81079C", Offset = "0x81079C", VA = "0x81079C", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x81081C", Offset = "0x81081C", VA = "0x81081C", Slot = "18")]
		protected virtual void Warp(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, bool modifierActive)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x810DC4", Offset = "0x810DC4", VA = "0x810DC4")]
		public VRTK_WarpObjectControlAction()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public delegate void TeleportEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64988C", Offset = "0x64988C")]
	public class VRTK_BasicTeleport : MonoBehaviour
	{
		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D8C8", Offset = "0x64D8C8")]
		private sealed class <InitListenersAtEndOfFrame>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BasicTeleport <>4__this;

			[Token(Token = "0x170002B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022E0")]
				[Address(RVA = "0xCADBE4", Offset = "0xCADBE4", VA = "0xCADBE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022E2")]
				[Address(RVA = "0xCADC54", Offset = "0xCADC54", VA = "0xCADC54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022DD")]
			[Address(RVA = "0xCAD7D4", Offset = "0xCAD7D4", VA = "0xCAD7D4")]
			[DebuggerHidden]
			public <InitListenersAtEndOfFrame>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60022DE")]
			[Address(RVA = "0xCADB0C", Offset = "0xCADB0C", VA = "0xCADB0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022DF")]
			[Address(RVA = "0xCADB10", Offset = "0xCADB10", VA = "0xCADB10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022E1")]
			[Address(RVA = "0xCADBEC", Offset = "0xCADBEC", VA = "0xCADBEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BC44", Offset = "0x65BC44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BC44", Offset = "0x65BC44")]
		public Color blinkToColor;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BCA4", Offset = "0x65BCA4")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BCDC", Offset = "0x65BCDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65BCDC", Offset = "0x65BCDC")]
		public float distanceBlinkDelay;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BD34", Offset = "0x65BD34")]
		public bool headsetPositionCompensation;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BD6C", Offset = "0x65BD6C")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BDA4", Offset = "0x65BDA4")]
		public VRTK_NavMeshData navMeshData;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BDDC", Offset = "0x65BDDC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65BDDC", Offset = "0x65BDDC")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x65BDDC", Offset = "0x65BDDC")]
		public float navMeshLimitDistance;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform headset;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform playArea;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool adjustYForTerrain;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool enableTeleport;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float blinkPause;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float fadeInTime;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float maxBlinkTransitionSpeed;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float maxBlinkDistance;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Coroutine initaliseListeners;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool useGivenForcedPosition;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected Vector3 givenForcedPosition;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Quaternion? givenForcedRotation;

		[Token(Token = "0x140000AD")]
		public event TeleportEventHandler Teleporting
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0xCAB79C", Offset = "0xCAB79C", VA = "0xCAB79C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E914", Offset = "0x66E914")]
			add
			{
			}
			[Token(Token = "0x6001152")]
			[Address(RVA = "0xCAB888", Offset = "0xCAB888", VA = "0xCAB888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E924", Offset = "0x66E924")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AE")]
		public event TeleportEventHandler Teleported
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0xCAB974", Offset = "0xCAB974", VA = "0xCAB974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E934", Offset = "0x66E934")]
			add
			{
			}
			[Token(Token = "0x6001154")]
			[Address(RVA = "0xCABA60", Offset = "0xCABA60", VA = "0xCABA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E944", Offset = "0x66E944")]
			remove
			{
			}
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xCABB4C", Offset = "0xCABB4C", VA = "0xCABB4C", Slot = "4")]
		public virtual void InitDestinationSetListener(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xCABD28", Offset = "0xCABD28", VA = "0xCABD28", Slot = "5")]
		public virtual void ToggleTeleportEnabled(bool state)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xCABD34", Offset = "0xCABD34", VA = "0xCABD34", Slot = "6")]
		public virtual bool ValidLocation(Transform target, Vector3 destinationPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xCABF10", Offset = "0xCABF10", VA = "0xCABF10", Slot = "7")]
		public virtual void Teleport(DestinationMarkerEventArgs teleportArgs)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xCABF74", Offset = "0xCABF74", VA = "0xCABF74", Slot = "8")]
		public virtual void Teleport(Transform target, Vector3 destinationPosition, [Optional] Quaternion? destinationRotation, bool forceDestinationPosition = false)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xCAC014", Offset = "0xCAC014", VA = "0xCAC014", Slot = "9")]
		public virtual void ForceTeleport(Vector3 destinationPosition, [Optional] Quaternion? destinationRotation)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xCAC294", Offset = "0xCAC294", VA = "0xCAC294", Slot = "10")]
		public virtual void SetActualTeleportDestination(Vector3 actualPosition, Quaternion? actualRotation)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xCAC2B8", Offset = "0xCAC2B8", VA = "0xCAC2B8", Slot = "11")]
		public virtual void ResetActualTeleportDestination()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xCAC2C0", Offset = "0xCAC2C0", VA = "0xCAC2C0", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xCAC328", Offset = "0xCAC328", VA = "0xCAC328", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xCAC434", Offset = "0xCAC434", VA = "0xCAC434", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xCAC4EC", Offset = "0xCAC4EC", VA = "0xCAC4EC", Slot = "15")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xCAC554", Offset = "0xCAC554", VA = "0xCAC554", Slot = "16")]
		protected virtual void Blink(float transitionSpeed)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xCAC614", Offset = "0xCAC614", VA = "0xCAC614", Slot = "17")]
		protected virtual DestinationMarkerEventArgs BuildTeleportArgs(Transform target, Vector3 destinationPosition, [Optional] Quaternion? destinationRotation, bool forceDestinationPosition = false)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xCAC7CC", Offset = "0xCAC7CC", VA = "0xCAC7CC", Slot = "18")]
		protected virtual bool ValidRigObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xCACAA8", Offset = "0xCACAA8", VA = "0xCACAA8", Slot = "19")]
		protected virtual void DoTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xCACDB0", Offset = "0xCACDB0", VA = "0xCACDB0", Slot = "20")]
		protected virtual void StartTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xCACE28", Offset = "0xCACE28", VA = "0xCACE28", Slot = "21")]
		protected virtual void ProcessOrientation(object sender, DestinationMarkerEventArgs e, Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xCACE2C", Offset = "0xCACE2C", VA = "0xCACE2C", Slot = "22")]
		protected virtual void EndTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xCACEA4", Offset = "0xCACEA4", VA = "0xCACEA4", Slot = "23")]
		protected virtual Vector3 SetNewPosition(Vector3 position, Transform target, bool forceDestinationPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xCACFD8", Offset = "0xCACFD8", VA = "0xCACFD8", Slot = "24")]
		protected virtual Quaternion SetNewRotation(Quaternion? rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xCAD108", Offset = "0xCAD108", VA = "0xCAD108", Slot = "25")]
		protected virtual Vector3 GetNewPosition(Vector3 tipPosition, Transform target, bool returnOriginalPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xCAD1A4", Offset = "0xCAD1A4", VA = "0xCAD1A4", Slot = "26")]
		protected virtual Vector3 GetCompensatedPosition(Vector3 givenPosition, Vector3 defaultPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xCAD2D8", Offset = "0xCAD2D8", VA = "0xCAD2D8", Slot = "27")]
		protected virtual Vector3 CheckTerrainCollision(Vector3 position, Transform target, bool useHeadsetForPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xCAD4A0", Offset = "0xCAD4A0", VA = "0xCAD4A0", Slot = "28")]
		protected virtual void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xCAD4F4", Offset = "0xCAD4F4", VA = "0xCAD4F4", Slot = "29")]
		protected virtual void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xCAD548", Offset = "0xCAD548", VA = "0xCAD548", Slot = "30")]
		protected virtual void CalculateBlinkDelay(float blinkSpeed, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xCAD6A8", Offset = "0xCAD6A8", VA = "0xCAD6A8", Slot = "31")]
		protected virtual void ReleaseBlink()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xCAD760", Offset = "0xCAD760", VA = "0xCAD760", Slot = "32")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E954", Offset = "0x66E954")]
		protected virtual IEnumerator InitListenersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xCAD800", Offset = "0xCAD800", VA = "0xCAD800", Slot = "33")]
		protected virtual void InitDestinationMarkerListeners(bool state)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xCADA60", Offset = "0xCADA60", VA = "0xCADA60")]
		public VRTK_BasicTeleport()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6498C4", Offset = "0x6498C4")]
	public class VRTK_ButtonControl : VRTK_ObjectControl
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BE6C", Offset = "0x65BE6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BE6C", Offset = "0x65BE6C")]
		public VRTK_ControllerEvents.ButtonAlias forwardButton;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BECC", Offset = "0x65BECC")]
		public VRTK_ControllerEvents.ButtonAlias backwardButton;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BF04", Offset = "0x65BF04")]
		public VRTK_ControllerEvents.ButtonAlias leftButton;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BF3C", Offset = "0x65BF3C")]
		public VRTK_ControllerEvents.ButtonAlias rightButton;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool forwardPressed;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool backwardPressed;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		protected bool leftPressed;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		protected bool rightPressed;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedForwardButton;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedBackwardButton;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedLeftButton;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedRightButton;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector2 axisDeadzone;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xCBBAAC", Offset = "0xCBBAAC", VA = "0xCBBAAC", Slot = "14")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xCBBB2C", Offset = "0xCBBB2C", VA = "0xCBBB2C", Slot = "6")]
		protected override void ControlFixedUpdate()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xCBBCC0", Offset = "0xCBBCC0", VA = "0xCBBCC0", Slot = "7")]
		protected override VRTK_ObjectControl GetOtherControl()
		{
			return null;
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xCBBDEC", Offset = "0xCBBDEC", VA = "0xCBBDEC", Slot = "9")]
		protected override void SetListeners(bool state)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xCBC08C", Offset = "0xCBC08C", VA = "0xCBC08C", Slot = "8")]
		protected override bool IsInAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xCBC0BC", Offset = "0xCBC0BC", VA = "0xCBC0BC", Slot = "22")]
		protected virtual void SetDirectionListener(bool state, VRTK_ControllerEvents.ButtonAlias directionButton, ref VRTK_ControllerEvents.ButtonAlias subscribedDirectionButton, ControllerInteractionEventHandler pressCallback, ControllerInteractionEventHandler releaseCallback)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xCBC264", Offset = "0xCBC264", VA = "0xCBC264", Slot = "23")]
		protected virtual void ForwardButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xCBC270", Offset = "0xCBC270", VA = "0xCBC270", Slot = "24")]
		protected virtual void ForwardButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xCBC278", Offset = "0xCBC278", VA = "0xCBC278", Slot = "25")]
		protected virtual void BackwardButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xCBC284", Offset = "0xCBC284", VA = "0xCBC284", Slot = "26")]
		protected virtual void BackwardButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xCBC28C", Offset = "0xCBC28C", VA = "0xCBC28C", Slot = "27")]
		protected virtual void LeftButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xCBC298", Offset = "0xCBC298", VA = "0xCBC298", Slot = "28")]
		protected virtual void LeftButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xCBC2A0", Offset = "0xCBC2A0", VA = "0xCBC2A0", Slot = "29")]
		protected virtual void RightButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xCBC2AC", Offset = "0xCBC2AC", VA = "0xCBC2AC", Slot = "30")]
		protected virtual void RightButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xCBC2B4", Offset = "0xCBC2B4", VA = "0xCBC2B4")]
		public VRTK_ButtonControl()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public struct DashTeleportEventArgs
	{
		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit[] hits;
	}
	[Token(Token = "0x200017F")]
	public delegate void DashTeleportEventHandler(object sender, DashTeleportEventArgs e);
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6498FC", Offset = "0x6498FC")]
	public class VRTK_DashTeleport : VRTK_HeightAdjustTeleport
	{
		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D8D8", Offset = "0x64D8D8")]
		private sealed class <lerpToPosition>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DashTeleport <>4__this;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetPosition;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DestinationMarkerEventArgs e;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public Vector3 startPosition;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public Quaternion startRotation;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public Quaternion targetRotation;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public object sender;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private bool <gameObjectInTheWay>5__2;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private RaycastHit[] <allHits>5__3;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private float <currentLerpedTime>5__5;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private WaitForEndOfFrame <delayInstruction>5__6;

			[Token(Token = "0x170002B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022E6")]
				[Address(RVA = "0xDB4B44", Offset = "0xDB4B44", VA = "0xDB4B44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022E8")]
				[Address(RVA = "0xDB4BB4", Offset = "0xDB4BB4", VA = "0xDB4BB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022E3")]
			[Address(RVA = "0xDB42EC", Offset = "0xDB42EC", VA = "0xDB42EC")]
			[DebuggerHidden]
			public <lerpToPosition>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60022E4")]
			[Address(RVA = "0xDB4398", Offset = "0xDB4398", VA = "0xDB4398", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022E5")]
			[Address(RVA = "0xDB439C", Offset = "0xDB439C", VA = "0xDB439C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022E7")]
			[Address(RVA = "0xDB4B4C", Offset = "0xDB4B4C", VA = "0xDB4B4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BF74", Offset = "0x65BF74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BF74", Offset = "0x65BF74")]
		public float normalLerpTime;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BFD4", Offset = "0x65BFD4")]
		public float minSpeedMps;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C00C", Offset = "0x65C00C")]
		public float capsuleTopOffset;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C044", Offset = "0x65C044")]
		public float capsuleBottomOffset;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C07C", Offset = "0x65C07C")]
		public float capsuleRadius;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float minDistanceForNormalLerp;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float lerpTime;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Coroutine attemptLerpRoutine;

		[Token(Token = "0x140000AF")]
		public event DashTeleportEventHandler WillDashThruObjects
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0xDB37B4", Offset = "0xDB37B4", VA = "0xDB37B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9B8", Offset = "0x66E9B8")]
			add
			{
			}
			[Token(Token = "0x6001188")]
			[Address(RVA = "0xDB38A0", Offset = "0xDB38A0", VA = "0xDB38A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9C8", Offset = "0x66E9C8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B0")]
		public event DashTeleportEventHandler DashedThruObjects
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xDB398C", Offset = "0xDB398C", VA = "0xDB398C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9D8", Offset = "0x66E9D8")]
			add
			{
			}
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xDB3A78", Offset = "0xDB3A78", VA = "0xDB3A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9E8", Offset = "0x66E9E8")]
			remove
			{
			}
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xDB3B64", Offset = "0xDB3B64", VA = "0xDB3B64", Slot = "37")]
		public virtual void OnWillDashThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xDB3B88", Offset = "0xDB3B88", VA = "0xDB3B88", Slot = "38")]
		public virtual void OnDashedThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xDB3BAC", Offset = "0xDB3BAC", VA = "0xDB3BAC", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xDB3BDC", Offset = "0xDB3BDC", VA = "0xDB3BDC", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xDB3C18", Offset = "0xDB3C18", VA = "0xDB3C18", Slot = "23")]
		protected override Vector3 SetNewPosition(Vector3 position, Transform target, bool forceDestinationPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xDB3C2C", Offset = "0xDB3C2C", VA = "0xDB3C2C", Slot = "24")]
		protected override Quaternion SetNewRotation(Quaternion? rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xDB3D14", Offset = "0xDB3D14", VA = "0xDB3D14", Slot = "20")]
		protected override void StartTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xDB3D64", Offset = "0xDB3D64", VA = "0xDB3D64", Slot = "21")]
		protected override void ProcessOrientation(object sender, DestinationMarkerEventArgs e, Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xDB3EEC", Offset = "0xDB3EEC", VA = "0xDB3EEC", Slot = "39")]
		protected virtual Vector3 CalculateOffsetPosition(Vector3 targetPosition, Quaternion targetRotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xDB413C", Offset = "0xDB413C", VA = "0xDB413C", Slot = "22")]
		protected override void EndTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xDB4140", Offset = "0xDB4140", VA = "0xDB4140", Slot = "40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E9F8", Offset = "0x66E9F8")]
		protected virtual IEnumerator lerpToPosition(object sender, DestinationMarkerEventArgs e, Vector3 startPosition, Vector3 targetPosition, Quaternion startRotation, Quaternion targetRotation)
		{
			return null;
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xDB4318", Offset = "0xDB4318", VA = "0xDB4318", Slot = "41")]
		protected virtual DashTeleportEventArgs SetDashTeleportEvent(RaycastHit[] hits)
		{
			return default(DashTeleportEventArgs);
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xDB4320", Offset = "0xDB4320", VA = "0xDB4320")]
		public VRTK_DashTeleport()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xDB4348", Offset = "0xDB4348", VA = "0xDB4348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA5C", Offset = "0x66EA5C")]
		[DebuggerHidden]
		private void <>n__0(object sender, DestinationMarkerEventArgs e)
		{
		}
	}
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649934", Offset = "0x649934")]
	public class VRTK_DragWorld : MonoBehaviour
	{
		[Token(Token = "0x2000480")]
		public enum ActivationRequirement
		{
			[Token(Token = "0x4002036")]
			LeftControllerOnly,
			[Token(Token = "0x4002037")]
			RightControllerOnly,
			[Token(Token = "0x4002038")]
			LeftController,
			[Token(Token = "0x4002039")]
			RightController,
			[Token(Token = "0x400203A")]
			EitherController,
			[Token(Token = "0x400203B")]
			BothControllers
		}

		[Token(Token = "0x2000481")]
		public enum TrackingController
		{
			[Token(Token = "0x400203D")]
			LeftController,
			[Token(Token = "0x400203E")]
			RightController,
			[Token(Token = "0x400203F")]
			EitherController,
			[Token(Token = "0x4002040")]
			BothControllers
		}

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C0D4", Offset = "0x65C0D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C0D4", Offset = "0x65C0D4")]
		public VRTK_ControllerEvents.ButtonAlias movementActivationButton;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C134", Offset = "0x65C134")]
		public ActivationRequirement movementActivationRequirement;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C16C", Offset = "0x65C16C")]
		public TrackingController movementTrackingController;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C1A4", Offset = "0x65C1A4")]
		public float movementMultiplier;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C1DC", Offset = "0x65C1DC")]
		public Vector3State movementPositionLock;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C214", Offset = "0x65C214")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C214", Offset = "0x65C214")]
		public VRTK_ControllerEvents.ButtonAlias rotationActivationButton;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C274", Offset = "0x65C274")]
		public ActivationRequirement rotationActivationRequirement;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C2AC", Offset = "0x65C2AC")]
		public TrackingController rotationTrackingController;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C2E4", Offset = "0x65C2E4")]
		public float rotationMultiplier;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C31C", Offset = "0x65C31C")]
		public float rotationActivationThreshold;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C354", Offset = "0x65C354")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C354", Offset = "0x65C354")]
		public VRTK_ControllerEvents.ButtonAlias scaleActivationButton;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C3B4", Offset = "0x65C3B4")]
		public ActivationRequirement scaleActivationRequirement;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C3EC", Offset = "0x65C3EC")]
		public TrackingController scaleTrackingController;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C424", Offset = "0x65C424")]
		public float scaleMultiplier;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C45C", Offset = "0x65C45C")]
		public float scaleActivationThreshold;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C494", Offset = "0x65C494")]
		public Vector3 minimumScale;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C4CC", Offset = "0x65C4CC")]
		public Vector3 maximumScale;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C504", Offset = "0x65C504")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C504", Offset = "0x65C504")]
		public Transform controllingTransform;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C564", Offset = "0x65C564")]
		public bool useOffsetTransform;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C59C", Offset = "0x65C59C")]
		public Transform offsetTransform;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected VRTK_ControllerReference leftControllerReference;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected VRTK_ControllerReference rightControllerReference;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected VRTK_ControllerEvents leftControllerEvents;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected VRTK_ControllerEvents rightControllerEvents;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Transform playArea;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform headset;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedMovementActivationButton;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected Vector3 previousLeftControllerPosition;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Vector3 previousRightControllerPosition;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected bool movementLeftControllerActivated;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		protected bool movementRightControllerActivated;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		protected bool movementActivated;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedRotationActivationButton;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected Vector2 previousRotationAngle;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected bool rotationLeftControllerActivated;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		protected bool rotationRightControllerActivated;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		protected bool rotationActivated;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedScaleActivationButton;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float previousControllerDistance;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool scaleLeftControllerActivated;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		protected bool scaleRightControllerActivated;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		protected bool scaleActivated;

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xBDD9E4", Offset = "0xBDD9E4", VA = "0xBDD9E4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xBDDA4C", Offset = "0xBDDA4C", VA = "0xBDDA4C", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xBDDBE8", Offset = "0xBDDBE8", VA = "0xBDDBE8", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xBDDBF8", Offset = "0xBDDBF8", VA = "0xBDDBF8", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xBDDC60", Offset = "0xBDDC60", VA = "0xBDDC60", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xBDDCC4", Offset = "0xBDDCC4", VA = "0xBDDCC4", Slot = "9")]
		protected virtual VRTK_ControllerEvents GetControllerEvents(GameObject controllerObject)
		{
			return null;
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xBDDD60", Offset = "0xBDDD60", VA = "0xBDDD60", Slot = "10")]
		protected virtual void ManageActivationListeners(bool state)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xBDDF6C", Offset = "0xBDDF6C", VA = "0xBDDF6C", Slot = "11")]
		protected virtual void ManageActivationListener(bool state, ref VRTK_ControllerEvents.ButtonAlias activationButton, ref VRTK_ControllerEvents.ButtonAlias subscribedActivationButton, ControllerInteractionEventHandler buttonPressedCallback, ControllerInteractionEventHandler buttonReleasedCallback)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xBDE3C0", Offset = "0xBDE3C0", VA = "0xBDE3C0", Slot = "12")]
		protected virtual void ControllerModelAvailable(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xBDE3CC", Offset = "0xBDE3CC", VA = "0xBDE3CC", Slot = "13")]
		protected virtual void SetControllerReferences()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xBDE43C", Offset = "0xBDE43C", VA = "0xBDE43C", Slot = "14")]
		protected virtual void ManageActivationState(SDK_BaseController.ControllerHand hand, ActivationRequirement activationRequirement, bool pressedState, ref bool leftActivationState, ref bool rightActivationState, ref bool activated)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xBDE4C8", Offset = "0xBDE4C8", VA = "0xBDE4C8", Slot = "15")]
		protected virtual void MovementActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xBDE53C", Offset = "0xBDE53C", VA = "0xBDE53C", Slot = "16")]
		protected virtual void MovementActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xBDE59C", Offset = "0xBDE59C", VA = "0xBDE59C", Slot = "17")]
		protected virtual void RotationActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xBDE618", Offset = "0xBDE618", VA = "0xBDE618", Slot = "18")]
		protected virtual void RotationActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xBDE678", Offset = "0xBDE678", VA = "0xBDE678", Slot = "19")]
		protected virtual void ScaleActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xBDE6F4", Offset = "0xBDE6F4", VA = "0xBDE6F4", Slot = "20")]
		protected virtual void ScaleActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xBDE754", Offset = "0xBDE754", VA = "0xBDE754", Slot = "21")]
		protected virtual Vector3 GetLeftControllerPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xBDE840", Offset = "0xBDE840", VA = "0xBDE840", Slot = "22")]
		protected virtual Vector3 GetRightControllerPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xBDE92C", Offset = "0xBDE92C", VA = "0xBDE92C", Slot = "23")]
		protected virtual void SetControllerPositions()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xBDE97C", Offset = "0xBDE97C", VA = "0xBDE97C", Slot = "24")]
		protected virtual Vector2 GetControllerRotation()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xBDEAD0", Offset = "0xBDEAD0", VA = "0xBDEAD0", Slot = "25")]
		protected virtual float GetControllerDistance()
		{
			return default(float);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xBDED20", Offset = "0xBDED20", VA = "0xBDED20", Slot = "26")]
		protected virtual bool TrackingControllerEnabled(TrackingController trackingController, TrackingController hand, bool handActivated)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xBDED44", Offset = "0xBDED44", VA = "0xBDED44", Slot = "27")]
		protected virtual void Move()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xBDF1B8", Offset = "0xBDF1B8", VA = "0xBDF1B8", Slot = "28")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xBDF498", Offset = "0xBDF498", VA = "0xBDF498", Slot = "29")]
		protected virtual void RotateByAngle(float angle)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xBDF674", Offset = "0xBDF674", VA = "0xBDF674", Slot = "30")]
		protected virtual void Scale()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xBDF93C", Offset = "0xBDF93C", VA = "0xBDF93C")]
		public VRTK_DragWorld()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64996C", Offset = "0x64996C")]
	public class VRTK_HeightAdjustTeleport : VRTK_BasicTeleport
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C5D4", Offset = "0x65C5D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C5D4", Offset = "0x65C5D4")]
		public bool snapToNearestFloor;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C634", Offset = "0x65C634")]
		public bool applyPlayareaParentOffset;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C66C", Offset = "0x65C66C")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xBE69B0", Offset = "0xBE69B0", VA = "0xBE69B0", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xBE69EC", Offset = "0xBE69EC", VA = "0xBE69EC", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xBE69F4", Offset = "0xBE69F4", VA = "0xBE69F4", Slot = "25")]
		protected override Vector3 GetNewPosition(Vector3 tipPosition, Transform target, bool returnOriginalPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xBE6A8C", Offset = "0xBE6A8C", VA = "0xBE6A8C", Slot = "34")]
		protected virtual void AdjustForParentOffset()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xBE6D68", Offset = "0xBE6D68", VA = "0xBE6D68", Slot = "35")]
		protected virtual float GetParentOffset()
		{
			return default(float);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xBE6E68", Offset = "0xBE6E68", VA = "0xBE6E68", Slot = "36")]
		protected virtual float GetTeleportY(Transform target, Vector3 tipPosition)
		{
			return default(float);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xBE70BC", Offset = "0xBE70BC", VA = "0xBE70BC")]
		public VRTK_HeightAdjustTeleport()
		{
		}
	}
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6499A4", Offset = "0x6499A4")]
	public class VRTK_MoveInPlace : MonoBehaviour
	{
		[Token(Token = "0x2000482")]
		public enum ControlOptions
		{
			[Token(Token = "0x4002042")]
			HeadsetAndControllers,
			[Token(Token = "0x4002043")]
			ControllersOnly,
			[Token(Token = "0x4002044")]
			HeadsetOnly
		}

		[Token(Token = "0x2000483")]
		public enum DirectionalMethod
		{
			[Token(Token = "0x4002046")]
			Gaze,
			[Token(Token = "0x4002047")]
			ControllerRotation,
			[Token(Token = "0x4002048")]
			DumbDecoupling,
			[Token(Token = "0x4002049")]
			SmartDecoupling,
			[Token(Token = "0x400204A")]
			EngageControllerRotationOnly,
			[Token(Token = "0x400204B")]
			LeftControllerRotationOnly,
			[Token(Token = "0x400204C")]
			RightControllerRotationOnly
		}

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C6A4", Offset = "0x65C6A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C6A4", Offset = "0x65C6A4")]
		public bool leftController;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C704", Offset = "0x65C704")]
		public bool rightController;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C73C", Offset = "0x65C73C")]
		public VRTK_ControllerEvents.ButtonAlias engageButton;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C774", Offset = "0x65C774")]
		public ControlOptions controlOptions;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C7AC", Offset = "0x65C7AC")]
		public DirectionalMethod directionMethod;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C7E4", Offset = "0x65C7E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C7E4", Offset = "0x65C7E4")]
		public float speedScale;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C844", Offset = "0x65C844")]
		public float maxSpeed;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C87C", Offset = "0x65C87C")]
		public float deceleration;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C8B4", Offset = "0x65C8B4")]
		public float fallingDeceleration;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C8EC", Offset = "0x65C8EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C8EC", Offset = "0x65C8EC")]
		public float smartDecoupleThreshold;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C94C", Offset = "0x65C94C")]
		public float sensitivity;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C984", Offset = "0x65C984")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C984", Offset = "0x65C984")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject controllerLeftHand;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject controllerRightHand;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_ControllerReference engagedController;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform headset;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool leftSubscribed;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool rightSubscribed;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool previousLeftControllerState;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool previousRightControllerState;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected VRTK_ControllerEvents.ButtonAlias previousEngageButton;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool currentlyFalling;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected int averagePeriod;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected List<Transform> trackedObjects;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Dictionary<Transform, List<float>> movementList;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<Transform, float> previousYPositions;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 initialGaze;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float currentSpeed;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 currentDirection;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector3 previousDirection;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool movementEngaged;

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xC2922C", Offset = "0xC2922C", VA = "0xC2922C", Slot = "4")]
		public virtual void SetControlOptions(ControlOptions givenControlOptions)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xC2944C", Offset = "0xC2944C", VA = "0xC2944C", Slot = "5")]
		public virtual Vector3 GetMovementDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xC29458", Offset = "0xC29458", VA = "0xC29458", Slot = "6")]
		public virtual float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xC29460", Offset = "0xC29460", VA = "0xC29460", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xC294C8", Offset = "0xC294C8", VA = "0xC294C8", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xC29820", Offset = "0xC29820", VA = "0xC29820", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xC2988C", Offset = "0xC2988C", VA = "0xC2988C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xC298F4", Offset = "0xC298F4", VA = "0xC298F4", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xC2995C", Offset = "0xC2995C", VA = "0xC2995C", Slot = "12")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xC29B58", Offset = "0xC29B58", VA = "0xC29B58", Slot = "13")]
		protected virtual bool MovementActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xC29B78", Offset = "0xC29B78", VA = "0xC29B78", Slot = "14")]
		protected virtual void CheckControllerState(GameObject controller, bool controllerState, ref bool subscribedState, ref bool previousState)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xC29BD0", Offset = "0xC29BD0", VA = "0xC29BD0", Slot = "15")]
		protected virtual float CalculateListAverage()
		{
			return default(float);
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xC29E58", Offset = "0xC29E58", VA = "0xC29E58", Slot = "16")]
		protected virtual Vector3 HeadsetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xC29F74", Offset = "0xC29F74", VA = "0xC29F74", Slot = "17")]
		protected virtual Vector3 SetDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xC2A220", Offset = "0xC2A220", VA = "0xC2A220", Slot = "18")]
		protected virtual Vector3 CalculateCouplingDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xC2A4A4", Offset = "0xC2A4A4", VA = "0xC2A4A4", Slot = "19")]
		protected virtual Vector3 CalculateControllerRotationDirection(Vector3 calculatedControllerDirection)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xC2A574", Offset = "0xC2A574", VA = "0xC2A574", Slot = "20")]
		protected virtual void SetDeltaTransformData()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xC2A680", Offset = "0xC2A680", VA = "0xC2A680", Slot = "21")]
		protected virtual void MovePlayArea(Vector3 moveDirection, float moveSpeed)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xC2A880", Offset = "0xC2A880", VA = "0xC2A880", Slot = "22")]
		protected virtual bool CanMove(VRTK_BodyPhysics givenBodyPhysics, Vector3 currentPosition, Vector3 proposedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xC2AA00", Offset = "0xC2AA00", VA = "0xC2AA00", Slot = "23")]
		protected virtual void HandleFalling()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xC2AB18", Offset = "0xC2AB18", VA = "0xC2AB18", Slot = "24")]
		protected virtual void EngageButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xC2AB2C", Offset = "0xC2AB2C", VA = "0xC2AB2C", Slot = "25")]
		protected virtual void EngageButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xC2AC94", Offset = "0xC2AC94", VA = "0xC2AC94", Slot = "26")]
		protected virtual Quaternion DetermineAverageControllerRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xC2AF4C", Offset = "0xC2AF4C", VA = "0xC2AF4C", Slot = "27")]
		protected virtual Quaternion AverageRotation(Quaternion rot1, Quaternion rot2)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xC2B020", Offset = "0xC2B020", VA = "0xC2B020", Slot = "28")]
		protected virtual void SetControllerListeners(GameObject controller, bool controllerState, ref bool subscribedState, bool forceDisabled = false)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xC2B0E8", Offset = "0xC2B0E8", VA = "0xC2B0E8", Slot = "29")]
		protected virtual void ToggleControllerListeners(GameObject controller, bool toggle, ref bool subscribed)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xC2B3E0", Offset = "0xC2B3E0", VA = "0xC2B3E0")]
		public VRTK_MoveInPlace()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public struct ObjectControlEventArgs
	{
		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject controlledGameObject;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform directionDevice;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 axisDirection;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float axis;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deadzone;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool currentlyFalling;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool modifierActive;
	}
	[Token(Token = "0x2000185")]
	public delegate void ObjectControlEventHandler(object sender, ObjectControlEventArgs e);
	[Token(Token = "0x2000186")]
	public abstract class VRTK_ObjectControl : MonoBehaviour
	{
		[Token(Token = "0x2000484")]
		public enum DirectionDevices
		{
			[Token(Token = "0x400204E")]
			Headset,
			[Token(Token = "0x400204F")]
			LeftController,
			[Token(Token = "0x4002050")]
			RightController,
			[Token(Token = "0x4002051")]
			ControlledObject
		}

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C9E4", Offset = "0x65C9E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C9E4", Offset = "0x65C9E4")]
		public DirectionDevices deviceForDirection;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CA44", Offset = "0x65CA44")]
		public bool disableOtherControlsOnActive;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CA7C", Offset = "0x65CA7C")]
		public bool affectOnFalling;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CAB4", Offset = "0x65CAB4")]
		public GameObject controlOverrideObject;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65CAEC", Offset = "0x65CAEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CAEC", Offset = "0x65CAEC")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CB4C", Offset = "0x65CB4C")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ObjectControl otherObjectControl;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject controlledGameObject;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject setControlOverrideObject;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform directionDevice;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected DirectionDevices previousDeviceForDirection;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector2 currentAxis;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected Vector2 storedAxis;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected bool currentlyFalling;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		protected bool modifierActive;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float controlledGameObjectPreviousY;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float controlledGameObjectPreviousYOffset;

		[Token(Token = "0x140000B1")]
		public event ObjectControlEventHandler XAxisChanged
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0xA1D958", Offset = "0xA1D958", VA = "0xA1D958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA94", Offset = "0x66EA94")]
			add
			{
			}
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0xA1DA44", Offset = "0xA1DA44", VA = "0xA1DA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAA4", Offset = "0x66EAA4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B2")]
		public event ObjectControlEventHandler YAxisChanged
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0xA1DB30", Offset = "0xA1DB30", VA = "0xA1DB30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAB4", Offset = "0x66EAB4")]
			add
			{
			}
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xA1DC1C", Offset = "0xA1DC1C", VA = "0xA1DC1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAC4", Offset = "0x66EAC4")]
			remove
			{
			}
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xA1DD08", Offset = "0xA1DD08", VA = "0xA1DD08", Slot = "4")]
		public virtual void OnXAxisChanged(ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xA1DD54", Offset = "0xA1DD54", VA = "0xA1DD54", Slot = "5")]
		public virtual void OnYAxisChanged(ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x60011E1")]
		protected abstract void ControlFixedUpdate();

		[Token(Token = "0x60011E2")]
		protected abstract VRTK_ObjectControl GetOtherControl();

		[Token(Token = "0x60011E3")]
		protected abstract bool IsInAction();

		[Token(Token = "0x60011E4")]
		protected abstract void SetListeners(bool state);

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xA1DDA0", Offset = "0xA1DDA0", VA = "0xA1DDA0", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xA1DE08", Offset = "0xA1DE08", VA = "0xA1DE08", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xA1E1C4", Offset = "0xA1E1C4", VA = "0xA1E1C4", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xA1E1D4", Offset = "0xA1E1D4", VA = "0xA1E1D4", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xA1E23C", Offset = "0xA1E23C", VA = "0xA1E23C", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xA1E2E0", Offset = "0xA1E2E0", VA = "0xA1E2E0", Slot = "15")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xA1E32C", Offset = "0xA1E32C", VA = "0xA1E32C", Slot = "16")]
		protected virtual ObjectControlEventArgs SetEventArguements(Vector3 axisDirection, float axis, float axisDeadzone)
		{
			return default(ObjectControlEventArgs);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xA1E354", Offset = "0xA1E354", VA = "0xA1E354", Slot = "17")]
		protected virtual void SetControlledObject()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xA1E4C0", Offset = "0xA1E4C0", VA = "0xA1E4C0", Slot = "18")]
		protected virtual void CheckFalling()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xA1E6F8", Offset = "0xA1E6F8", VA = "0xA1E6F8", Slot = "19")]
		protected virtual bool ObjectHeightChange()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xA1E7A4", Offset = "0xA1E7A4", VA = "0xA1E7A4", Slot = "20")]
		protected virtual Transform GetDirectionDevice()
		{
			return null;
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xA1E8C4", Offset = "0xA1E8C4", VA = "0xA1E8C4", Slot = "21")]
		protected virtual void CheckDirectionDevice()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xA1E910", Offset = "0xA1E910", VA = "0xA1E910")]
		protected VRTK_ObjectControl()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public struct PlayerClimbEventArgs
	{
		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject target;
	}
	[Token(Token = "0x2000188")]
	public delegate void PlayerClimbEventHandler(object sender, PlayerClimbEventArgs e);
	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6499DC", Offset = "0x6499DC")]
	public class VRTK_PlayerClimb : MonoBehaviour
	{
		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65CBA4", Offset = "0x65CBA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CBA4", Offset = "0x65CBA4")]
		public bool usePlayerScale;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65CC04", Offset = "0x65CC04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CC04", Offset = "0x65CC04")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CC64", Offset = "0x65CC64")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CC9C", Offset = "0x65CC9C")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CCD4", Offset = "0x65CCD4")]
		public VRTK_PositionRewind positionRewind;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3 startControllerScaledLocalPosition;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected Vector3 startGrabPointLocalPosition;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Vector3 startPlayAreaWorldOffset;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject grabbingController;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GameObject climbingObject;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Quaternion climbingObjectLastRotation;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool isClimbing;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool useGrabbedObjectRotation;

		[Token(Token = "0x140000B3")]
		public event PlayerClimbEventHandler PlayerClimbStarted
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xA27BE4", Offset = "0xA27BE4", VA = "0xA27BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAD4", Offset = "0x66EAD4")]
			add
			{
			}
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xA27CD0", Offset = "0xA27CD0", VA = "0xA27CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAE4", Offset = "0x66EAE4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B4")]
		public event PlayerClimbEventHandler PlayerClimbEnded
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xA27DBC", Offset = "0xA27DBC", VA = "0xA27DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAF4", Offset = "0x66EAF4")]
			add
			{
			}
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0xA27EA8", Offset = "0xA27EA8", VA = "0xA27EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EB04", Offset = "0x66EB04")]
			remove
			{
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xA27F94", Offset = "0xA27F94", VA = "0xA27F94", Slot = "4")]
		public virtual bool IsClimbing()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xA27F9C", Offset = "0xA27F9C", VA = "0xA27F9C", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xA282D4", Offset = "0xA282D4", VA = "0xA282D4", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xA28350", Offset = "0xA28350", VA = "0xA28350", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xA28398", Offset = "0xA28398", VA = "0xA28398", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xA28400", Offset = "0xA28400", VA = "0xA28400", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xA28820", Offset = "0xA28820", VA = "0xA28820", Slot = "10")]
		protected virtual void OnPlayerClimbStarted(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xA2884C", Offset = "0xA2884C", VA = "0xA2884C", Slot = "11")]
		protected virtual void OnPlayerClimbEnded(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xA28878", Offset = "0xA28878", VA = "0xA28878", Slot = "12")]
		protected virtual PlayerClimbEventArgs SetPlayerClimbEvent(VRTK_ControllerReference controllerReference, GameObject target)
		{
			return default(PlayerClimbEventArgs);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xA28884", Offset = "0xA28884", VA = "0xA28884", Slot = "13")]
		protected virtual void InitListeners(bool state)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xA28958", Offset = "0xA28958", VA = "0xA28958", Slot = "14")]
		protected virtual void InitTeleportListener(bool state)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xA28A54", Offset = "0xA28A54", VA = "0xA28A54", Slot = "15")]
		protected virtual void OnTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xA28ACC", Offset = "0xA28ACC", VA = "0xA28ACC", Slot = "16")]
		protected virtual Vector3 GetScaledLocalPosition(Transform objTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xA28C88", Offset = "0xA28C88", VA = "0xA28C88", Slot = "17")]
		protected virtual void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xA28E60", Offset = "0xA28E60", VA = "0xA28E60", Slot = "18")]
		protected virtual void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xA29090", Offset = "0xA29090", VA = "0xA29090", Slot = "19")]
		protected virtual void Grab(GameObject currentGrabbingController, VRTK_ControllerReference controllerReference, GameObject target)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xA29424", Offset = "0xA29424", VA = "0xA29424", Slot = "20")]
		protected virtual void Ungrab(bool carryMomentum, VRTK_ControllerReference controllerReference, GameObject target)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xA29760", Offset = "0xA29760", VA = "0xA29760", Slot = "21")]
		protected virtual bool IsActiveClimbingController(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xA297DC", Offset = "0xA297DC", VA = "0xA297DC", Slot = "22")]
		protected virtual bool IsClimbableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xA298DC", Offset = "0xA298DC", VA = "0xA298DC", Slot = "23")]
		protected virtual void InitControllerListeners(GameObject controller, bool state)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xA29AC0", Offset = "0xA29AC0", VA = "0xA29AC0", Slot = "24")]
		protected virtual bool IsBodyColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xA29BA4", Offset = "0xA29BA4", VA = "0xA29BA4", Slot = "25")]
		protected virtual bool IsHeadsetColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xA29C48", Offset = "0xA29C48", VA = "0xA29C48")]
		public VRTK_PlayerClimb()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649A14", Offset = "0x649A14")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x649A14", Offset = "0x649A14")]
	public class VRTK_RoomExtender : MonoBehaviour
	{
		[Token(Token = "0x2000485")]
		public enum MovementFunction
		{
			[Token(Token = "0x4002053")]
			Nonlinear,
			[Token(Token = "0x4002054")]
			LinearDirect
		}

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CD2C", Offset = "0x65CD2C")]
		public MovementFunction movementFunction;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CD64", Offset = "0x65CD64")]
		public bool additionalMovementEnabled;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CD9C", Offset = "0x65CD9C")]
		public bool additionalMovementEnabledOnButtonPress;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CDD4", Offset = "0x65CDD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65CDD4", Offset = "0x65CDD4")]
		public float additionalMovementMultiplier;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CE28", Offset = "0x65CE28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65CE28", Offset = "0x65CE28")]
		public float headZoneRadius;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CE7C", Offset = "0x65CE7C")]
		public Transform debugTransform;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65CEB4", Offset = "0x65CEB4")]
		public Vector3 relativeMovementOfCameraRig;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform movementTransform;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 headCirclePosition;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 lastPosition;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 lastMovement;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xA334D4", Offset = "0xA334D4", VA = "0xA334D4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xA3353C", Offset = "0xA3353C", VA = "0xA3353C", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xA337D4", Offset = "0xA337D4", VA = "0xA337D4", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xA3383C", Offset = "0xA3383C", VA = "0xA3383C", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xA33868", Offset = "0xA33868", VA = "0xA33868", Slot = "8")]
		protected virtual void Move(Vector3 movement)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xA33AC4", Offset = "0xA33AC4", VA = "0xA33AC4", Slot = "9")]
		protected virtual void MoveHeadCircle()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xA33C18", Offset = "0xA33C18", VA = "0xA33C18", Slot = "10")]
		protected virtual void MoveHeadCircleNonLinearDrift()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xA33D6C", Offset = "0xA33D6C", VA = "0xA33D6C", Slot = "11")]
		protected virtual void UpdateLastMovement()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xA33E64", Offset = "0xA33E64", VA = "0xA33E64")]
		public VRTK_RoomExtender()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public delegate void SlingshotJumpEventHandler(object sender);
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649A74", Offset = "0x649A74")]
	public class VRTK_SlingshotJump : MonoBehaviour
	{
		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65CEC4", Offset = "0x65CEC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CEC4", Offset = "0x65CEC4")]
		public float releaseWindowTime;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CF24", Offset = "0x65CF24")]
		public float velocityMultiplier;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CF5C", Offset = "0x65CF5C")]
		public float velocityMax;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CF94", Offset = "0x65CF94")]
		[SerializeField]
		protected VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CFE0", Offset = "0x65CFE0")]
		[SerializeField]
		protected VRTK_ControllerEvents.ButtonAlias cancelButton;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D02C", Offset = "0x65D02C")]
		[SerializeField]
		protected VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D078", Offset = "0x65D078")]
		[SerializeField]
		protected VRTK_PlayerClimb playerClimb;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D0C4", Offset = "0x65D0C4")]
		[SerializeField]
		protected VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3 leftStartAimPosition;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected Vector3 leftReleasePosition;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool leftIsAiming;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector3 rightStartAimPosition;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Vector3 rightReleasePosition;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool rightIsAiming;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected VRTK_ControllerEvents leftControllerEvents;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected VRTK_ControllerEvents rightControllerEvents;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected VRTK_InteractGrab leftControllerGrab;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_InteractGrab rightControllerGrab;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool leftButtonReleased;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		protected bool rightButtonReleased;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected float countDownEndTime;

		[Token(Token = "0x140000B5")]
		public event SlingshotJumpEventHandler SlingshotJumped
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x9C42A4", Offset = "0x9C42A4", VA = "0x9C42A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EB14", Offset = "0x66EB14")]
			add
			{
			}
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x9C4390", Offset = "0x9C4390", VA = "0x9C4390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EB24", Offset = "0x66EB24")]
			remove
			{
			}
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x9C447C", Offset = "0x9C447C", VA = "0x9C447C", Slot = "4")]
		public virtual VRTK_ControllerEvents.ButtonAlias GetActivationButton()
		{
			return default(VRTK_ControllerEvents.ButtonAlias);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x9C4484", Offset = "0x9C4484", VA = "0x9C4484", Slot = "5")]
		public virtual void SetActivationButton(VRTK_ControllerEvents.ButtonAlias button)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x9C4670", Offset = "0x9C4670", VA = "0x9C4670", Slot = "6")]
		public virtual VRTK_ControllerEvents.ButtonAlias GetCancelButton()
		{
			return default(VRTK_ControllerEvents.ButtonAlias);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x9C4678", Offset = "0x9C4678", VA = "0x9C4678", Slot = "7")]
		public virtual void SetCancelButton(VRTK_ControllerEvents.ButtonAlias button)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x9C46AC", Offset = "0x9C46AC", VA = "0x9C46AC", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x9C47E8", Offset = "0x9C47E8", VA = "0x9C47E8", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x9C489C", Offset = "0x9C489C", VA = "0x9C489C", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x9C48E4", Offset = "0x9C48E4", VA = "0x9C48E4", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x9C4948", Offset = "0x9C4948", VA = "0x9C4948", Slot = "12")]
		protected virtual void LeftButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x9C4AC4", Offset = "0x9C4AC4", VA = "0x9C4AC4", Slot = "13")]
		protected virtual void RightButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x9C4B9C", Offset = "0x9C4B9C", VA = "0x9C4B9C", Slot = "14")]
		protected virtual void LeftButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x9C4CA8", Offset = "0x9C4CA8", VA = "0x9C4CA8", Slot = "15")]
		protected virtual void RightButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x9C4DB4", Offset = "0x9C4DB4", VA = "0x9C4DB4", Slot = "16")]
		protected virtual void CancelButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x9C4DC4", Offset = "0x9C4DC4", VA = "0x9C4DC4", Slot = "17")]
		protected virtual void CheckForReset()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x9C4E10", Offset = "0x9C4E10", VA = "0x9C4E10", Slot = "18")]
		protected virtual void CheckForJump()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x9C5084", Offset = "0x9C5084", VA = "0x9C5084")]
		protected void OnSlingshotJumped()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x9C486C", Offset = "0x9C486C", VA = "0x9C486C")]
		protected void InitListeners(bool state)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x9C50A0", Offset = "0x9C50A0", VA = "0x9C50A0")]
		protected void InitTeleportListener(bool state)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x9C44B8", Offset = "0x9C44B8", VA = "0x9C44B8")]
		protected void InitControllerListeners(bool state)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x9C5204", Offset = "0x9C5204", VA = "0x9C5204")]
		protected void InitControllerListener(bool state, GameObject controller, ref VRTK_ControllerEvents events, ref VRTK_InteractGrab grab, ControllerInteractionEventHandler triggerPressed, ControllerInteractionEventHandler triggerReleased)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x9C54B8", Offset = "0x9C54B8", VA = "0x9C54B8")]
		protected void OnTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x9C48D4", Offset = "0x9C48D4", VA = "0x9C48D4")]
		protected void UnAim()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x9C4A20", Offset = "0x9C4A20", VA = "0x9C4A20")]
		protected bool IsClimbing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x9C54C8", Offset = "0x9C54C8", VA = "0x9C54C8")]
		public VRTK_SlingshotJump()
		{
		}
	}
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649AAC", Offset = "0x649AAC")]
	public class VRTK_StepMultiplier : MonoBehaviour
	{
		[Token(Token = "0x2000486")]
		public enum MovementFunction
		{
			[Token(Token = "0x4002056")]
			Nonlinear,
			[Token(Token = "0x4002057")]
			LinearDirect
		}

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D120", Offset = "0x65D120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D120", Offset = "0x65D120")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D180", Offset = "0x65D180")]
		public MovementFunction movementFunction;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D1B8", Offset = "0x65D1B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65D1B8", Offset = "0x65D1B8")]
		public float additionalMovementMultiplier;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D20C", Offset = "0x65D20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65D20C", Offset = "0x65D20C")]
		public float headZoneRadius;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D260", Offset = "0x65D260")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D260", Offset = "0x65D260")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 relativeMovementOfCameraRig;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform movementTransform;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 headCirclePosition;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 lastPosition;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 lastMovement;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool activationEnabled;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedActivationButton;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected bool buttonSubscribed;

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x9CC23C", Offset = "0x9CC23C", VA = "0x9CC23C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x9CC2A0", Offset = "0x9CC2A0", VA = "0x9CC2A0", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x9CC38C", Offset = "0x9CC38C", VA = "0x9CC38C", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x9CC3F0", Offset = "0x9CC3F0", VA = "0x9CC3F0", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x9CC44C", Offset = "0x9CC44C", VA = "0x9CC44C", Slot = "8")]
		protected virtual void ManageButtonSubscription()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x9CC6F0", Offset = "0x9CC6F0", VA = "0x9CC6F0", Slot = "9")]
		protected virtual void ActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x9CC6FC", Offset = "0x9CC6FC", VA = "0x9CC6FC", Slot = "10")]
		protected virtual void ActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x9CC704", Offset = "0x9CC704", VA = "0x9CC704", Slot = "11")]
		protected virtual void Move(Vector3 movement)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x9CC908", Offset = "0x9CC908", VA = "0x9CC908", Slot = "12")]
		protected virtual void MoveHeadCircle()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x9CCA98", Offset = "0x9CCA98", VA = "0x9CCA98", Slot = "13")]
		protected virtual void MoveHeadCircleNonLinearDrift()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x9CCC24", Offset = "0x9CCC24", VA = "0x9CCC24", Slot = "14")]
		protected virtual void UpdateLastMovement()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x9CCD54", Offset = "0x9CCD54", VA = "0x9CCD54")]
		public VRTK_StepMultiplier()
		{
		}
	}
	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649AE4", Offset = "0x649AE4")]
	public class VRTK_TeleportDisableOnControllerObscured : MonoBehaviour
	{
		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D8E8", Offset = "0x64D8E8")]
		private sealed class <EnableAtEndOfFrame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TeleportDisableOnControllerObscured <>4__this;

			[Token(Token = "0x170002B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022EC")]
				[Address(RVA = "0x801734", Offset = "0x801734", VA = "0x801734", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022EE")]
				[Address(RVA = "0x8017A4", Offset = "0x8017A4", VA = "0x8017A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x801378", Offset = "0x801378", VA = "0x801378")]
			[DebuggerHidden]
			public <EnableAtEndOfFrame>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x80141C", Offset = "0x80141C", VA = "0x80141C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x801420", Offset = "0x801420", VA = "0x801420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x80173C", Offset = "0x80173C", VA = "0x80173C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D2C0", Offset = "0x65D2C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D2C0", Offset = "0x65D2C0")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D320", Offset = "0x65D320")]
		public VRTK_HeadsetControllerAware headsetControllerAware;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Coroutine enableAtEndOfFrameRoutine;

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x8010D4", Offset = "0x8010D4", VA = "0x8010D4", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x8011AC", Offset = "0x8011AC", VA = "0x8011AC", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x801304", Offset = "0x801304", VA = "0x801304", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EB34", Offset = "0x66EB34")]
		protected virtual IEnumerator EnableAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x8013A4", Offset = "0x8013A4", VA = "0x8013A4", Slot = "7")]
		protected virtual void DisableTeleport(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x8013DC", Offset = "0x8013DC", VA = "0x8013DC", Slot = "8")]
		protected virtual void EnableTeleport(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x801414", Offset = "0x801414", VA = "0x801414")]
		public VRTK_TeleportDisableOnControllerObscured()
		{
		}
	}
	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649B1C", Offset = "0x649B1C")]
	public class VRTK_TeleportDisableOnHeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x2000488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D8F8", Offset = "0x64D8F8")]
		private sealed class <EnableAtEndOfFrame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TeleportDisableOnHeadsetCollision <>4__this;

			[Token(Token = "0x170002B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022F2")]
				[Address(RVA = "0x801E0C", Offset = "0x801E0C", VA = "0x801E0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022F4")]
				[Address(RVA = "0x801E7C", Offset = "0x801E7C", VA = "0x801E7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022EF")]
			[Address(RVA = "0x801A50", Offset = "0x801A50", VA = "0x801A50")]
			[DebuggerHidden]
			public <EnableAtEndOfFrame>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x801AF4", Offset = "0x801AF4", VA = "0x801AF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x801AF8", Offset = "0x801AF8", VA = "0x801AF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x801E14", Offset = "0x801E14", VA = "0x801E14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D358", Offset = "0x65D358")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D358", Offset = "0x65D358")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D3B8", Offset = "0x65D3B8")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Coroutine enableAtEndOfFrameRoutine;

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x8017AC", Offset = "0x8017AC", VA = "0x8017AC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x801884", Offset = "0x801884", VA = "0x801884", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x8019DC", Offset = "0x8019DC", VA = "0x8019DC", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EB98", Offset = "0x66EB98")]
		protected virtual IEnumerator EnableAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x801A7C", Offset = "0x801A7C", VA = "0x801A7C", Slot = "7")]
		protected virtual void DisableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x801AB4", Offset = "0x801AB4", VA = "0x801AB4", Slot = "8")]
		protected virtual void EnableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x801AEC", Offset = "0x801AEC", VA = "0x801AEC")]
		public VRTK_TeleportDisableOnHeadsetCollision()
		{
		}
	}
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649B54", Offset = "0x649B54")]
	public class VRTK_TouchpadControl : VRTK_ObjectControl
	{
		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D3F0", Offset = "0x65D3F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D3F0", Offset = "0x65D3F0")]
		public VRTK_ControllerEvents.Vector2AxisAlias coordinateAxis;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D450", Offset = "0x65D450")]
		public VRTK_ControllerEvents.ButtonAlias primaryActivationButton;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D488", Offset = "0x65D488")]
		public VRTK_ControllerEvents.ButtonAlias actionModifierButton;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D4C0", Offset = "0x65D4C0")]
		public Vector2 axisDeadzone;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool touchpadFirstChange;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		protected bool otherTouchpadControlEnabledState;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		protected bool otherTouchpadControlEnabledStateSet;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_ControllerEvents.ButtonAlias coordniateButtonAlias;

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x801E84", Offset = "0x801E84", VA = "0x801E84", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x801ED8", Offset = "0x801ED8", VA = "0x801ED8", Slot = "6")]
		protected override void ControlFixedUpdate()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x802054", Offset = "0x802054", VA = "0x802054", Slot = "7")]
		protected override VRTK_ObjectControl GetOtherControl()
		{
			return null;
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x802184", Offset = "0x802184", VA = "0x802184", Slot = "9")]
		protected override void SetListeners(bool state)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x80247C", Offset = "0x80247C", VA = "0x80247C", Slot = "8")]
		protected override bool IsInAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x8024CC", Offset = "0x8024CC", VA = "0x8024CC", Slot = "22")]
		protected virtual bool OutsideDeadzone(float axisValue, float deadzoneThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x8024E8", Offset = "0x8024E8", VA = "0x8024E8", Slot = "23")]
		protected virtual bool ValidPrimaryButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x8025A4", Offset = "0x8025A4", VA = "0x8025A4", Slot = "24")]
		protected virtual void ModifierButtonActive()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x802664", Offset = "0x802664", VA = "0x802664", Slot = "25")]
		protected virtual bool TouchpadTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x802714", Offset = "0x802714", VA = "0x802714", Slot = "26")]
		protected virtual void TouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x8028FC", Offset = "0x8028FC", VA = "0x8028FC", Slot = "27")]
		protected virtual void TouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x8029E8", Offset = "0x8029E8", VA = "0x8029E8")]
		public VRTK_TouchpadControl()
		{
		}
	}
	[Token(Token = "0x2000191")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649B8C", Offset = "0x649B8C")]
	public class VRTK_TunnelOverlay : MonoBehaviour
	{
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D4F8", Offset = "0x65D4F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D4F8", Offset = "0x65D4F8")]
		public float minimumRotation;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D558", Offset = "0x65D558")]
		public float maximumRotation;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D590", Offset = "0x65D590")]
		public float minimumSpeed;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D5C8", Offset = "0x65D5C8")]
		public float maximumSpeed;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D600", Offset = "0x65D600")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D600", Offset = "0x65D600")]
		public Color effectColor;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D660", Offset = "0x65D660")]
		public Texture effectSkybox;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D698", Offset = "0x65D698")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65D698", Offset = "0x65D698")]
		public float initialEffectSize;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D6EC", Offset = "0x65D6EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65D6EC", Offset = "0x65D6EC")]
		public float maximumEffectSize;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D740", Offset = "0x65D740")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65D740", Offset = "0x65D740")]
		public float featherSize;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D794", Offset = "0x65D794")]
		public float smoothingTime;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform headset;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Camera headsetCamera;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform playarea;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_TunnelEffect cameraEffect;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float angularVelocity;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float angularVelocitySlew;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastForward;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 lastPosition;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Material matCameraEffect;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected int shaderPropertyColor;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected int shaderPropertyAV;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int shaderPropertyFeather;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int shaderPropertySkyboxTexture;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Color originalColor;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected float originalAngularVelocity;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected float originalFeatherSize;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Texture originalSkyboxTexture;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float maximumEffectCoverage;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected bool createEffectSkybox;

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x805054", Offset = "0x805054", VA = "0x805054", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x80513C", Offset = "0x80513C", VA = "0x80513C", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x805440", Offset = "0x805440", VA = "0x805440", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x80559C", Offset = "0x80559C", VA = "0x80559C", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x805604", Offset = "0x805604", VA = "0x805604", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x805D1C", Offset = "0x805D1C", VA = "0x805D1C", Slot = "9")]
		protected virtual void SetShaderFeather(Color givenTunnelColor, float givenAngularVelocity, float givenFeatherSize)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x805DF0", Offset = "0x805DF0", VA = "0x805DF0", Slot = "10")]
		protected virtual void CheckSkyboxTexture()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x8060F8", Offset = "0x8060F8", VA = "0x8060F8")]
		public VRTK_TunnelOverlay()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public abstract class VRTK_BasePointerRenderer : MonoBehaviour
	{
		[Token(Token = "0x2000489")]
		public enum VisibilityStates
		{
			[Token(Token = "0x400205F")]
			OnWhenActive,
			[Token(Token = "0x4002060")]
			AlwaysOn,
			[Token(Token = "0x4002061")]
			AlwaysOff
		}

		[Serializable]
		[Token(Token = "0x200048A")]
		public sealed class PointerOriginSmoothingSettings
		{
			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x665400", Offset = "0x665400")]
			public bool smoothsPosition;

			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x665438", Offset = "0x665438")]
			public float maxAllowedPerFrameDistanceDifference;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x665470", Offset = "0x665470")]
			public bool smoothsRotation;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6654A8", Offset = "0x6654A8")]
			public float maxAllowedPerFrameAngleDifference;

			[Token(Token = "0x60022F5")]
			[Address(RVA = "0xCAB780", Offset = "0xCAB780", VA = "0xCAB780")]
			public PointerOriginSmoothingSettings()
			{
			}
		}

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D7CC", Offset = "0x65D7CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D7CC", Offset = "0x65D7CC")]
		public VRTK_PlayAreaCursor playareaCursor;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D82C", Offset = "0x65D82C")]
		public VRTK_PointerDirectionIndicator directionIndicator;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D864", Offset = "0x65D864")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D864", Offset = "0x65D864")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D8C4", Offset = "0x65D8C4")]
		public PointerOriginSmoothingSettings pointerOriginSmoothingSettings;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D8FC", Offset = "0x65D8FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D8FC", Offset = "0x65D8FC")]
		public Color validCollisionColor;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D95C", Offset = "0x65D95C")]
		public Color invalidCollisionColor;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D994", Offset = "0x65D994")]
		public VisibilityStates tracerVisibility;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D9CC", Offset = "0x65D9CC")]
		public VisibilityStates cursorVisibility;

		[Token(Token = "0x4000E93")]
		protected const float BEAM_ADJUST_OFFSET = 0.0001f;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_Pointer controllingPointer;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected RaycastHit destinationHit;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Material defaultMaterial;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Color previousColor;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Color currentColor;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected VRTK_PolicyList invalidListPolicy;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected VRTK_NavMeshData navMeshData;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected GameObject objectInteractor;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected GameObject objectInteractorAttachPoint;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected GameObject pointerOriginTransformFollowGameObject;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRTK_TransformFollow pointerOriginTransformFollow;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected VRTK_InteractGrab controllerGrabScript;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Rigidbody savedAttachPoint;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected bool attachedToInteractorAttachPoint;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected float savedBeamLength;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected HashSet<GameObject> makeRendererVisible;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected bool tracerVisible;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		protected bool cursorVisible;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		protected LayerMask defaultIgnoreLayer;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected SDK_BaseController.ControllerHand cachedAttachedHand;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform cachedPointerAttachPoint;

		[Token(Token = "0x6001264")]
		public abstract GameObject[] GetPointerObjects();

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xCA7FC4", Offset = "0xCA7FC4", VA = "0xCA7FC4", Slot = "5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66EBFC", Offset = "0x66EBFC")]
		public virtual void InitalizePointer(VRTK_Pointer givenPointer, VRTK_PolicyList givenInvalidListPolicy, float givenNavMeshCheckDistance, bool givenHeadsetPositionCompensation)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xCA8084", Offset = "0xCA8084", VA = "0xCA8084", Slot = "6")]
		public virtual void InitalizePointer(VRTK_Pointer givenPointer, VRTK_PolicyList givenInvalidListPolicy, VRTK_NavMeshData givenNavMeshData, bool givenHeadsetPositionCompensation)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xCA820C", Offset = "0xCA820C", VA = "0xCA820C", Slot = "7")]
		public virtual void ResetPointerObjects()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xCA8270", Offset = "0xCA8270", VA = "0xCA8270", Slot = "8")]
		public virtual void Toggle(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xCA83B8", Offset = "0xCA83B8", VA = "0xCA83B8", Slot = "9")]
		public virtual void ToggleInteraction(bool state)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xCA83CC", Offset = "0xCA83CC", VA = "0xCA83CC", Slot = "10")]
		public virtual void UpdateRenderer()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xCA8504", Offset = "0xCA8504", VA = "0xCA8504", Slot = "11")]
		public virtual RaycastHit GetDestinationHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xCA8520", Offset = "0xCA8520", VA = "0xCA8520", Slot = "12")]
		public virtual bool ValidPlayArea()
		{
			return default(bool);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xCA85EC", Offset = "0xCA85EC", VA = "0xCA85EC", Slot = "13")]
		public virtual bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xCA863C", Offset = "0xCA863C", VA = "0xCA863C", Slot = "14")]
		public virtual bool IsTracerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xCA8660", Offset = "0xCA8660", VA = "0xCA8660", Slot = "15")]
		public virtual bool IsCursorVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xCA8684", Offset = "0xCA8684", VA = "0xCA8684", Slot = "16")]
		public virtual bool IsValidCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xCA869C", Offset = "0xCA869C", VA = "0xCA869C", Slot = "17")]
		public virtual GameObject GetObjectInteractor()
		{
			return null;
		}

		[Token(Token = "0x6001272")]
		protected abstract void CreatePointerObjects();

		[Token(Token = "0x6001273")]
		protected abstract void DestroyPointerObjects();

		[Token(Token = "0x6001274")]
		protected abstract void ToggleRenderer(bool pointerState, bool actualState);

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xCA86A4", Offset = "0xCA86A4", VA = "0xCA86A4", Slot = "21")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xCA870C", Offset = "0xCA870C", VA = "0xCA870C", Slot = "22")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xCA87F4", Offset = "0xCA87F4", VA = "0xCA87F4", Slot = "23")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xCA88C4", Offset = "0xCA88C4", VA = "0xCA88C4", Slot = "24")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xCA892C", Offset = "0xCA892C", VA = "0xCA892C", Slot = "25")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xCA8A10", Offset = "0xCA8A10", VA = "0xCA8A10", Slot = "26")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xCA8B5C", Offset = "0xCA8B5C", VA = "0xCA8B5C", Slot = "27")]
		protected virtual void ToggleObjectInteraction(bool state)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xCA8E00", Offset = "0xCA8E00", VA = "0xCA8E00", Slot = "28")]
		protected virtual void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xCA8E84", Offset = "0xCA8E84", VA = "0xCA8E84", Slot = "29")]
		protected virtual VRTK_ControllerReference GetControllerReference([Optional] GameObject reference)
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xCA8FCC", Offset = "0xCA8FCC", VA = "0xCA8FCC", Slot = "30")]
		protected virtual Transform GetPointerOriginTransform()
		{
			return null;
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xCA926C", Offset = "0xCA926C", VA = "0xCA926C", Slot = "31")]
		protected virtual void UpdatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xCA9508", Offset = "0xCA9508", VA = "0xCA9508")]
		protected Transform GetOrigin(bool smoothed = true)
		{
			return null;
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xCA960C", Offset = "0xCA960C", VA = "0xCA960C", Slot = "32")]
		protected virtual void PointerEnter(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xCA967C", Offset = "0xCA967C", VA = "0xCA967C", Slot = "33")]
		protected virtual void PointerExit(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xCA96EC", Offset = "0xCA96EC", VA = "0xCA96EC", Slot = "34")]
		protected virtual bool ValidDestination()
		{
			return default(bool);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xCA98B8", Offset = "0xCA98B8", VA = "0xCA98B8", Slot = "35")]
		protected virtual void ToggleElement(GameObject givenObject, bool pointerState, bool actualState, VisibilityStates givenVisibility, ref bool currentVisible)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xCA9A28", Offset = "0xCA9A28", VA = "0xCA9A28", Slot = "36")]
		protected virtual void AddVisibleRenderer(GameObject givenObject)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xCA9A98", Offset = "0xCA9A98", VA = "0xCA9A98", Slot = "37")]
		protected virtual void MakeRenderersVisible()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xCA9C0C", Offset = "0xCA9C0C", VA = "0xCA9C0C", Slot = "38")]
		protected virtual void ToggleRendererVisibility(GameObject givenObject, bool state)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xCA9D18", Offset = "0xCA9D18", VA = "0xCA9D18", Slot = "39")]
		protected virtual void SetupMaterialRenderer(GameObject givenObject)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xCA9E3C", Offset = "0xCA9E3C", VA = "0xCA9E3C", Slot = "40")]
		protected virtual void ChangeColor(Color givenColor)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xCAA058", Offset = "0xCAA058", VA = "0xCAA058", Slot = "41")]
		protected virtual void EmitStateEvent()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xCAA124", Offset = "0xCAA124", VA = "0xCAA124", Slot = "42")]
		protected virtual void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xCAA2A0", Offset = "0xCAA2A0", VA = "0xCAA2A0", Slot = "43")]
		protected virtual void ChangeMaterialColor(GameObject givenObject, Color givenColor)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xCAA598", Offset = "0xCAA598", VA = "0xCAA598", Slot = "44")]
		protected virtual void CreateObjectInteractor()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xCAADA4", Offset = "0xCAADA4", VA = "0xCAADA4", Slot = "45")]
		protected virtual void ScaleObjectInteractor(Vector3 scaleAmount)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xCAAE78", Offset = "0xCAAE78", VA = "0xCAAE78", Slot = "46")]
		protected virtual void CreatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xCAB05C", Offset = "0xCAB05C", VA = "0xCAB05C", Slot = "47")]
		protected virtual void DestroyPointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xCAB108", Offset = "0xCAB108", VA = "0xCAB108", Slot = "48")]
		protected virtual float OverrideBeamLength(float currentLength)
		{
			return default(float);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xCAB2E4", Offset = "0xCAB2E4", VA = "0xCAB2E4", Slot = "49")]
		protected virtual void UpdateDependencies(Vector3 location)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xCAB3B4", Offset = "0xCAB3B4", VA = "0xCAB3B4", Slot = "50")]
		protected virtual void SetupDirectionIndicator()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xCAB4E8", Offset = "0xCAB4E8", VA = "0xCAB4E8", Slot = "51")]
		protected virtual void UpdateDirectionIndicator()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xCAB620", Offset = "0xCAB620", VA = "0xCAB620", Slot = "52")]
		protected virtual bool ShowDirectionIndicator()
		{
			return default(bool);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xCAB6AC", Offset = "0xCAB6AC", VA = "0xCAB6AC")]
		protected VRTK_BasePointerRenderer()
		{
		}
	}
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649BC4", Offset = "0x649BC4")]
	public class VRTK_BezierPointerRenderer : VRTK_BasePointerRenderer
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65DA04", Offset = "0x65DA04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DA04", Offset = "0x65DA04")]
		public Vector2 maximumLength;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DA64", Offset = "0x65DA64")]
		public int tracerDensity;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DA9C", Offset = "0x65DA9C")]
		public float cursorRadius;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65DAD4", Offset = "0x65DAD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DAD4", Offset = "0x65DAD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65DAD4", Offset = "0x65DAD4")]
		public float heightLimitAngle;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DB50", Offset = "0x65DB50")]
		public float curveOffset;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DB88", Offset = "0x65DB88")]
		public bool rescaleTracer;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DBC0", Offset = "0x65DBC0")]
		public bool cursorMatchTargetRotation;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DBF8", Offset = "0x65DBF8")]
		public int collisionCheckFrequency;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65DC30", Offset = "0x65DC30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DC30", Offset = "0x65DC30")]
		public GameObject customTracer;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DC90", Offset = "0x65DC90")]
		public GameObject customCursor;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DCC8", Offset = "0x65DCC8")]
		public GameObject validLocationObject;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DD00", Offset = "0x65DD00")]
		public GameObject invalidLocationObject;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected VRTK_CurveGenerator actualTracer;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected GameObject actualContainer;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected GameObject actualCursor;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected GameObject actualValidLocationObject;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected GameObject actualInvalidLocationObject;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Vector3 fixedForwardBeamForward;

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xCADC5C", Offset = "0xCADC5C", VA = "0xCADC5C", Slot = "10")]
		public override void UpdateRenderer()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xCADD98", Offset = "0xCADD98", VA = "0xCADD98", Slot = "4")]
		public override GameObject[] GetPointerObjects()
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xCADEA0", Offset = "0xCADEA0", VA = "0xCADEA0", Slot = "20")]
		protected override void ToggleRenderer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xCADFF0", Offset = "0xCADFF0", VA = "0xCADFF0", Slot = "18")]
		protected override void CreatePointerObjects()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xCAE264", Offset = "0xCAE264", VA = "0xCAE264", Slot = "19")]
		protected override void DestroyPointerObjects()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xCAE3C8", Offset = "0xCAE3C8", VA = "0xCAE3C8", Slot = "28")]
		protected override void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xCAE5FC", Offset = "0xCAE5FC", VA = "0xCAE5FC", Slot = "42")]
		protected override void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xCAE660", Offset = "0xCAE660", VA = "0xCAE660", Slot = "53")]
		protected virtual void CreateTracer()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xCAE764", Offset = "0xCAE764", VA = "0xCAE764", Slot = "54")]
		protected virtual GameObject CreateCursorObject()
		{
			return null;
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xCAE92C", Offset = "0xCAE92C", VA = "0xCAE92C", Slot = "55")]
		protected virtual void CreateCursorLocations()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xCAEDF4", Offset = "0xCAEDF4", VA = "0xCAEDF4", Slot = "56")]
		protected virtual void CreateCursor()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xCAF058", Offset = "0xCAF058", VA = "0xCAF058", Slot = "57")]
		protected virtual Vector3 ProjectForwardBeam()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xCAF3D4", Offset = "0xCAF3D4", VA = "0xCAF3D4", Slot = "58")]
		protected virtual Vector3 ProjectDownBeam(Vector3 jointPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xCAF700", Offset = "0xCAF700", VA = "0xCAF700", Slot = "59")]
		protected virtual void AdjustForEarlyCollisions(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xCAFD08", Offset = "0xCAFD08", VA = "0xCAFD08", Slot = "60")]
		protected virtual void DisplayCurvedBeam(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xCB0050", Offset = "0xCB0050", VA = "0xCB0050", Slot = "61")]
		protected virtual void TogglePointerCursor(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xCB007C", Offset = "0xCB007C", VA = "0xCB007C", Slot = "62")]
		protected virtual void TogglePointerTracer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xCB015C", Offset = "0xCB015C", VA = "0xCB015C", Slot = "63")]
		protected virtual void SetPointerCursor()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xCB05D4", Offset = "0xCB05D4", VA = "0xCB05D4")]
		public VRTK_BezierPointerRenderer()
		{
		}
	}
	[Token(Token = "0x2000194")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649BFC", Offset = "0x649BFC")]
	public class VRTK_StraightPointerRenderer : VRTK_BasePointerRenderer
	{
		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65DD38", Offset = "0x65DD38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DD38", Offset = "0x65DD38")]
		public float maximumLength;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DD98", Offset = "0x65DD98")]
		public float scaleFactor;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DDD0", Offset = "0x65DDD0")]
		public float cursorScaleMultiplier;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DE08", Offset = "0x65DE08")]
		public bool cursorMatchTargetRotation;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DE40", Offset = "0x65DE40")]
		public bool cursorDistanceRescale;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DE78", Offset = "0x65DE78")]
		public Vector3 maximumCursorScale;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65DEB0", Offset = "0x65DEB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DEB0", Offset = "0x65DEB0")]
		public GameObject customTracer;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DF10", Offset = "0x65DF10")]
		public GameObject customCursor;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected GameObject actualContainer;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected GameObject actualTracer;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected GameObject actualCursor;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected Vector3 cursorOriginalScale;

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x7FF3EC", Offset = "0x7FF3EC", VA = "0x7FF3EC", Slot = "10")]
		public override void UpdateRenderer()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x7FF4E4", Offset = "0x7FF4E4", VA = "0x7FF4E4", Slot = "4")]
		public override GameObject[] GetPointerObjects()
		{
			return null;
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x7FF638", Offset = "0x7FF638", VA = "0x7FF638", Slot = "20")]
		protected override void ToggleRenderer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x7FF6B0", Offset = "0x7FF6B0", VA = "0x7FF6B0", Slot = "18")]
		protected override void CreatePointerObjects()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x7FFACC", Offset = "0x7FFACC", VA = "0x7FFACC", Slot = "19")]
		protected override void DestroyPointerObjects()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x7FFB80", Offset = "0x7FFB80", VA = "0x7FFB80", Slot = "42")]
		protected override void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x7FFC10", Offset = "0x7FFC10", VA = "0x7FFC10", Slot = "28")]
		protected override void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x7FFE48", Offset = "0x7FFE48", VA = "0x7FFE48", Slot = "53")]
		protected virtual void CreateTracer()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x80019C", Offset = "0x80019C", VA = "0x80019C", Slot = "54")]
		protected virtual void CreateCursor()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x8005D0", Offset = "0x8005D0", VA = "0x8005D0", Slot = "55")]
		protected virtual void CheckRayMiss(bool rayHit, RaycastHit pointerCollidedWith)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x800784", Offset = "0x800784", VA = "0x800784", Slot = "56")]
		protected virtual void CheckRayHit(bool rayHit, RaycastHit pointerCollidedWith)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x800828", Offset = "0x800828", VA = "0x800828", Slot = "57")]
		protected virtual float CastRayForward()
		{
			return default(float);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x8009F8", Offset = "0x8009F8", VA = "0x8009F8", Slot = "58")]
		protected virtual void SetPointerAppearance(float tracerLength)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x801000", Offset = "0x801000", VA = "0x801000")]
		public VRTK_StraightPointerRenderer()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public struct DestinationMarkerEventArgs
	{
		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform target;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 destinationPosition;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion? destinationRotation;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool forceDestinationPosition;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool enableTeleport;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x2000196")]
	public delegate void DestinationMarkerEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x2000197")]
	public abstract class VRTK_DestinationMarker : MonoBehaviour
	{
		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65DF48", Offset = "0x65DF48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DF48", Offset = "0x65DF48")]
		public bool enableTeleport;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DFB8", Offset = "0x65DFB8")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65E030", Offset = "0x65E030")]
		protected float navMeshCheckDistance;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_NavMeshData navmeshData;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool forceHoverOnRepeatedEnter;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Collider existingCollider;

		[Token(Token = "0x140000B6")]
		public event DestinationMarkerEventHandler DestinationMarkerEnter
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xBD67C4", Offset = "0xBD67C4", VA = "0xBD67C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC34", Offset = "0x66EC34")]
			add
			{
			}
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xBD68B0", Offset = "0xBD68B0", VA = "0xBD68B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC44", Offset = "0x66EC44")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B7")]
		public event DestinationMarkerEventHandler DestinationMarkerExit
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xBD699C", Offset = "0xBD699C", VA = "0xBD699C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC54", Offset = "0x66EC54")]
			add
			{
			}
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xBD6A88", Offset = "0xBD6A88", VA = "0xBD6A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC64", Offset = "0x66EC64")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B8")]
		public event DestinationMarkerEventHandler DestinationMarkerHover
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xBD6B74", Offset = "0xBD6B74", VA = "0xBD6B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC74", Offset = "0x66EC74")]
			add
			{
			}
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xBD6C60", Offset = "0xBD6C60", VA = "0xBD6C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC84", Offset = "0x66EC84")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B9")]
		public event DestinationMarkerEventHandler DestinationMarkerSet
		{
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0xBD6D4C", Offset = "0xBD6D4C", VA = "0xBD6D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC94", Offset = "0x66EC94")]
			add
			{
			}
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0xBD6E38", Offset = "0xBD6E38", VA = "0xBD6E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ECA4", Offset = "0x66ECA4")]
			remove
			{
			}
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xBD6F24", Offset = "0xBD6F24", VA = "0xBD6F24", Slot = "4")]
		public virtual void OnDestinationMarkerEnter(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xBD70C0", Offset = "0xBD70C0", VA = "0xBD70C0", Slot = "5")]
		public virtual void OnDestinationMarkerExit(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xBD7110", Offset = "0xBD7110", VA = "0xBD7110", Slot = "6")]
		public virtual void OnDestinationMarkerHover(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xBD715C", Offset = "0xBD715C", VA = "0xBD715C", Slot = "7")]
		public virtual void OnDestinationMarkerSet(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xBD71A8", Offset = "0xBD71A8", VA = "0xBD71A8", Slot = "8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66ECB4", Offset = "0x66ECB4")]
		public virtual void SetNavMeshCheckDistance(float distance)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xBD7240", Offset = "0xBD7240", VA = "0xBD7240", Slot = "9")]
		public virtual void SetNavMeshData(VRTK_NavMeshData givenData)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xBD7248", Offset = "0xBD7248", VA = "0xBD7248", Slot = "10")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xBD7254", Offset = "0xBD7254", VA = "0xBD7254", Slot = "11")]
		public virtual void SetForceHoverOnRepeatedEnter(bool state)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xBD7260", Offset = "0xBD7260", VA = "0xBD7260", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xBD72EC", Offset = "0xBD72EC", VA = "0xBD72EC", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xBD7378", Offset = "0xBD7378", VA = "0xBD7378", Slot = "14")]
		protected virtual DestinationMarkerEventArgs SetDestinationMarkerEvent(float distance, Transform target, RaycastHit raycastHit, Vector3 position, VRTK_ControllerReference controllerReference, bool forceDestinationPosition = false, [Optional] Quaternion? rotation)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xBD73F4", Offset = "0xBD73F4", VA = "0xBD73F4")]
		protected VRTK_DestinationMarker()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public struct PlayAreaCursorEventArgs
	{
		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;
	}
	[Token(Token = "0x2000199")]
	public delegate void PlayAreaCursorEventHandler(object sender, PlayAreaCursorEventArgs e);
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649C34", Offset = "0x649C34")]
	public class VRTK_PlayAreaCursor : MonoBehaviour
	{
		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E068", Offset = "0x65E068")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E068", Offset = "0x65E068")]
		public bool usePointerColor;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E0C8", Offset = "0x65E0C8")]
		public Vector2 playAreaCursorDimensions;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E100", Offset = "0x65E100")]
		public bool handlePlayAreaCursorCollisions;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E138", Offset = "0x65E138")]
		public bool headsetOutOfBoundsIsCollision;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E170", Offset = "0x65E170")]
		public bool displayOnInvalidLocation;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E1A8", Offset = "0x65E1A8")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E1E0", Offset = "0x65E1E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E1E0", Offset = "0x65E1E0")]
		public VRTK_PointerDirectionIndicator directionIndicator;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E240", Offset = "0x65E240")]
		public GameObject validLocationObject;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E278", Offset = "0x65E278")]
		public GameObject invalidLocationObject;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool playAreaCursorCollided;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		protected bool headsetOutOfBounds;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform playArea;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject playAreaCursor;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected GameObject[] playAreaCursorBoundaries;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected BoxCollider playAreaCursorCollider;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform headset;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Renderer[] boundaryRenderers;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected GameObject playAreaCursorValidChild;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject playAreaCursorInvalidChild;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int btmRightInner;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int btmLeftInner;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int topLeftInner;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected int topRightInner;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected int btmRightOuter;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected int btmLeftOuter;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int topLeftOuter;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected int topRightOuter;

		[Token(Token = "0x140000BA")]
		public event PlayAreaCursorEventHandler PlayAreaCursorStartCollision
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xA244D8", Offset = "0xA244D8", VA = "0xA244D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ECEC", Offset = "0x66ECEC")]
			add
			{
			}
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xA245C4", Offset = "0xA245C4", VA = "0xA245C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ECFC", Offset = "0x66ECFC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BB")]
		public event PlayAreaCursorEventHandler PlayAreaCursorEndCollision
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0xA246B0", Offset = "0xA246B0", VA = "0xA246B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED0C", Offset = "0x66ED0C")]
			add
			{
			}
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0xA2479C", Offset = "0xA2479C", VA = "0xA2479C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED1C", Offset = "0x66ED1C")]
			remove
			{
			}
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xA24888", Offset = "0xA24888", VA = "0xA24888", Slot = "4")]
		public virtual void OnPlayAreaCursorStartCollision(PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xA248AC", Offset = "0xA248AC", VA = "0xA248AC", Slot = "5")]
		public virtual void OnPlayAreaCursorEndCollision(PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xA248D0", Offset = "0xA248D0", VA = "0xA248D0", Slot = "6")]
		public virtual bool HasCollided()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xA248F0", Offset = "0xA248F0", VA = "0xA248F0", Slot = "7")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xA248FC", Offset = "0xA248FC", VA = "0xA248FC", Slot = "8")]
		public virtual void SetPlayAreaCursorCollision(bool state, [Optional] Collider collider)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xA24970", Offset = "0xA24970", VA = "0xA24970", Slot = "9")]
		public virtual void SetMaterialColor(Color color, bool validity)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xA24B30", Offset = "0xA24B30", VA = "0xA24B30", Slot = "10")]
		public virtual void SetPlayAreaCursorTransform(Vector3 location)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xA25014", Offset = "0xA25014", VA = "0xA25014", Slot = "11")]
		public virtual void ToggleState(bool state)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xA250DC", Offset = "0xA250DC", VA = "0xA250DC", Slot = "12")]
		public virtual bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xA2517C", Offset = "0xA2517C", VA = "0xA2517C", Slot = "13")]
		public virtual GameObject GetPlayAreaContainer()
		{
			return null;
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xA25184", Offset = "0xA25184", VA = "0xA25184", Slot = "14")]
		public virtual void ToggleVisibility(bool state)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xA25330", Offset = "0xA25330", VA = "0xA25330", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xA25398", Offset = "0xA25398", VA = "0xA25398", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xA25528", Offset = "0xA25528", VA = "0xA25528", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xA255DC", Offset = "0xA255DC", VA = "0xA255DC", Slot = "18")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xA25644", Offset = "0xA25644", VA = "0xA25644", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xA2569C", Offset = "0xA2569C", VA = "0xA2569C", Slot = "20")]
		protected virtual PlayAreaCursorEventArgs SetEventPayload(Collider collider)
		{
			return default(PlayAreaCursorEventArgs);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xA256A4", Offset = "0xA256A4", VA = "0xA256A4", Slot = "21")]
		protected virtual void EmitEvent(Collider collider)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xA2576C", Offset = "0xA2576C", VA = "0xA2576C", Slot = "22")]
		protected virtual void InitPlayAreaCursor()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xA25D98", Offset = "0xA25D98", VA = "0xA25D98", Slot = "23")]
		protected virtual void SetCursorColor(GameObject cursorObject, Color color)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xA25F74", Offset = "0xA25F74", VA = "0xA25F74", Slot = "24")]
		protected virtual void ToggleValidPlayAreaState(bool state)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xA26088", Offset = "0xA26088", VA = "0xA26088", Slot = "25")]
		protected virtual string GeneratePlayAreaCursorName()
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xA261C0", Offset = "0xA261C0", VA = "0xA261C0", Slot = "26")]
		protected virtual void GeneratePlayAreaCursorFromPrefab(Vector3[] cursorDrawVertices)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xA2683C", Offset = "0xA2683C", VA = "0xA2683C", Slot = "27")]
		protected virtual void GeneratePlayAreaCursor(Vector3[] cursorDrawVertices)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xA273FC", Offset = "0xA273FC", VA = "0xA273FC", Slot = "28")]
		protected virtual void DrawPlayAreaCursorBoundary(int index, float left, float right, float top, float bottom, float thickness, Vector3 localPosition)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xA27848", Offset = "0xA27848", VA = "0xA27848", Slot = "29")]
		protected virtual void CreateCursorCollider(GameObject cursor)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xA27968", Offset = "0xA27968", VA = "0xA27968", Slot = "30")]
		protected virtual void UpdateCollider()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xA27B2C", Offset = "0xA27B2C", VA = "0xA27B2C")]
		public VRTK_PlayAreaCursor()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class VRTK_PlayAreaCollider : MonoBehaviour
	{
		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_PlayAreaCursor parent;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xA24000", Offset = "0xA24000", VA = "0xA24000", Slot = "4")]
		public virtual void SetParent(VRTK_PlayAreaCursor setParent)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xA24008", Offset = "0xA24008", VA = "0xA24008", Slot = "5")]
		public virtual void SetIgnoreTarget([Optional] VRTK_PolicyList list)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xA24010", Offset = "0xA24010", VA = "0xA24010", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xA240B8", Offset = "0xA240B8", VA = "0xA240B8", Slot = "7")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xA241E0", Offset = "0xA241E0", VA = "0xA241E0", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xA242B0", Offset = "0xA242B0", VA = "0xA242B0", Slot = "9")]
		protected virtual bool ValidTarget(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xA244D0", Offset = "0xA244D0", VA = "0xA244D0")]
		public VRTK_PlayAreaCollider()
		{
		}
	}
	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649C6C", Offset = "0x649C6C")]
	public class VRTK_Pointer : VRTK_DestinationMarker
	{
		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E2D0", Offset = "0x65E2D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E2D0", Offset = "0x65E2D0")]
		public VRTK_BasePointerRenderer pointerRenderer;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E330", Offset = "0x65E330")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E368", Offset = "0x65E368")]
		public bool holdButtonToActivate;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E3A0", Offset = "0x65E3A0")]
		public bool activateOnEnable;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E3D8", Offset = "0x65E3D8")]
		public float activationDelay;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E410", Offset = "0x65E410")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E410", Offset = "0x65E410")]
		public VRTK_ControllerEvents.ButtonAlias selectionButton;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E470", Offset = "0x65E470")]
		public bool selectOnPress;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E4A8", Offset = "0x65E4A8")]
		public float selectionDelay;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E4E0", Offset = "0x65E4E0")]
		public float selectAfterHoverDuration;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E518", Offset = "0x65E518")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E518", Offset = "0x65E518")]
		public bool interactWithObjects;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E578", Offset = "0x65E578")]
		public bool grabToPointerTip;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E5B0", Offset = "0x65E5B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E5B0", Offset = "0x65E5B0")]
		public GameObject attachedTo;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E610", Offset = "0x65E610")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E648", Offset = "0x65E648")]
		public VRTK_InteractUse interactUse;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E680", Offset = "0x65E680")]
		public Transform customOrigin;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E6B8", Offset = "0x65E6B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65E6B8", Offset = "0x65E6B8")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x65E6B8", Offset = "0x65E6B8")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedActivationButton;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedSelectionButton;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool currentSelectOnPress;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected float activateDelayTimer;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected float selectDelayTimer;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected float hoverDurationTimer;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected int currentActivationState;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected bool willDeactivate;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		protected bool wasActivated;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected VRTK_InteractableObject pointerInteractableObject;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Collider currentCollider;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected bool canClickOnHover;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		protected bool activationButtonPressed;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		protected bool selectionButtonPressed;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		protected bool attemptControllerSetup;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected VRTK_StraightPointerRenderer autogenPointerRenderer;

		[Token(Token = "0x140000BC")]
		public event ControllerInteractionEventHandler ActivationButtonPressed
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xA29C60", Offset = "0xA29C60", VA = "0xA29C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED2C", Offset = "0x66ED2C")]
			add
			{
			}
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0xA29D4C", Offset = "0xA29D4C", VA = "0xA29D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED3C", Offset = "0x66ED3C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BD")]
		public event ControllerInteractionEventHandler ActivationButtonReleased
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xA29E38", Offset = "0xA29E38", VA = "0xA29E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED4C", Offset = "0x66ED4C")]
			add
			{
			}
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xA29F24", Offset = "0xA29F24", VA = "0xA29F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED5C", Offset = "0x66ED5C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BE")]
		public event ControllerInteractionEventHandler SelectionButtonPressed
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xA2A010", Offset = "0xA2A010", VA = "0xA2A010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED6C", Offset = "0x66ED6C")]
			add
			{
			}
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xA2A0FC", Offset = "0xA2A0FC", VA = "0xA2A0FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED7C", Offset = "0x66ED7C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BF")]
		public event ControllerInteractionEventHandler SelectionButtonReleased
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xA2A1E8", Offset = "0xA2A1E8", VA = "0xA2A1E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED8C", Offset = "0x66ED8C")]
			add
			{
			}
			[Token(Token = "0x6001302")]
			[Address(RVA = "0xA2A2D4", Offset = "0xA2A2D4", VA = "0xA2A2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED9C", Offset = "0x66ED9C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C0")]
		public event DestinationMarkerEventHandler PointerStateValid
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xA2A3C0", Offset = "0xA2A3C0", VA = "0xA2A3C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDAC", Offset = "0x66EDAC")]
			add
			{
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xA2A4AC", Offset = "0xA2A4AC", VA = "0xA2A4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDBC", Offset = "0x66EDBC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C1")]
		public event DestinationMarkerEventHandler PointerStateInvalid
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xA2A598", Offset = "0xA2A598", VA = "0xA2A598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDCC", Offset = "0x66EDCC")]
			add
			{
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xA2A684", Offset = "0xA2A684", VA = "0xA2A684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDDC", Offset = "0x66EDDC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xA2A770", Offset = "0xA2A770", VA = "0xA2A770", Slot = "15")]
		public virtual void OnActivationButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xA2A7BC", Offset = "0xA2A7BC", VA = "0xA2A7BC", Slot = "16")]
		public virtual void OnActivationButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xA2A808", Offset = "0xA2A808", VA = "0xA2A808", Slot = "17")]
		public virtual void OnSelectionButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xA2A854", Offset = "0xA2A854", VA = "0xA2A854", Slot = "18")]
		public virtual void OnSelectionButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xA2A8A0", Offset = "0xA2A8A0", VA = "0xA2A8A0", Slot = "19")]
		public virtual void OnPointerStateValid()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xA2A908", Offset = "0xA2A908", VA = "0xA2A908", Slot = "20")]
		public virtual void OnPointerStateInvalid()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xA2A970", Offset = "0xA2A970", VA = "0xA2A970", Slot = "21")]
		public virtual bool IsActivationButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xA2A978", Offset = "0xA2A978", VA = "0xA2A978", Slot = "22")]
		public virtual bool IsSelectionButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xA2A980", Offset = "0xA2A980", VA = "0xA2A980", Slot = "23")]
		public virtual void PointerEnter(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xA2ACEC", Offset = "0xA2ACEC", VA = "0xA2ACEC", Slot = "24")]
		public virtual void PointerExit(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xA2AF38", Offset = "0xA2AF38", VA = "0xA2AF38", Slot = "25")]
		public virtual bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xA2AF68", Offset = "0xA2AF68", VA = "0xA2AF68", Slot = "26")]
		public virtual bool CanSelect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xA2AF98", Offset = "0xA2AF98", VA = "0xA2AF98", Slot = "27")]
		public virtual bool IsPointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xA2AFA8", Offset = "0xA2AFA8", VA = "0xA2AFA8", Slot = "28")]
		public virtual void ResetActivationTimer(bool forceZero = false)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xA2AFF8", Offset = "0xA2AFF8", VA = "0xA2AFF8", Slot = "29")]
		public virtual void ResetSelectionTimer(bool forceZero = false)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xA2B048", Offset = "0xA2B048", VA = "0xA2B048", Slot = "30")]
		public virtual void Toggle(bool state)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xA2B174", Offset = "0xA2B174", VA = "0xA2B174", Slot = "31")]
		public virtual bool IsStateValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xA2B1D4", Offset = "0xA2B1D4", VA = "0xA2B1D4", Slot = "32")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xA2B23C", Offset = "0xA2B23C", VA = "0xA2B23C", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xA2B398", Offset = "0xA2B398", VA = "0xA2B398", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xA2B4F0", Offset = "0xA2B4F0", VA = "0xA2B4F0", Slot = "33")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xA2B558", Offset = "0xA2B558", VA = "0xA2B558", Slot = "34")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xA2B5A8", Offset = "0xA2B5A8", VA = "0xA2B5A8", Slot = "35")]
		protected virtual void SetDefaultValues()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xA2B5EC", Offset = "0xA2B5EC", VA = "0xA2B5EC", Slot = "36")]
		protected virtual void AttemptControllerSetup()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xA2B67C", Offset = "0xA2B67C", VA = "0xA2B67C", Slot = "37")]
		protected virtual void HandleEnabledPointer()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xA2B7BC", Offset = "0xA2B7BC", VA = "0xA2B7BC", Slot = "38")]
		protected virtual Quaternion? GetCursorRotation()
		{
			return null;
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xA2B910", Offset = "0xA2B910", VA = "0xA2B910", Slot = "39")]
		protected virtual bool EnabledPointerRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xA2B9B0", Offset = "0xA2B9B0", VA = "0xA2B9B0", Slot = "40")]
		protected virtual bool NoPointerRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xA2BA54", Offset = "0xA2BA54", VA = "0xA2BA54", Slot = "41")]
		protected virtual bool CanActivateOnToggleButton(bool state)
		{
			return default(bool);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xA2BAA4", Offset = "0xA2BAA4", VA = "0xA2BAA4", Slot = "42")]
		protected virtual bool ControllerRequired()
		{
			return default(bool);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xA2BAC4", Offset = "0xA2BAC4", VA = "0xA2BAC4", Slot = "43")]
		protected virtual bool FindController()
		{
			return default(bool);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xA2BDF4", Offset = "0xA2BDF4", VA = "0xA2BDF4", Slot = "44")]
		protected virtual void GetInteractUse()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xA2BF24", Offset = "0xA2BF24", VA = "0xA2BF24", Slot = "45")]
		protected virtual void SetupController()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xA2BFE0", Offset = "0xA2BFE0", VA = "0xA2BFE0", Slot = "46")]
		protected virtual void SetupRenderer()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xA2C0E8", Offset = "0xA2C0E8", VA = "0xA2C0E8", Slot = "47")]
		protected virtual VRTK_BasePointerRenderer GeneratePointerRenderer()
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xA2C23C", Offset = "0xA2C23C", VA = "0xA2C23C", Slot = "48")]
		protected virtual bool ButtonMappingIsUndefined(VRTK_ControllerEvents.ButtonAlias givenButton, VRTK_ControllerEvents.ButtonAlias givenSubscribedButton)
		{
			return default(bool);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xA2C254", Offset = "0xA2C254", VA = "0xA2C254", Slot = "49")]
		protected virtual void CheckButtonMappingConflict()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xA2C344", Offset = "0xA2C344", VA = "0xA2C344", Slot = "50")]
		protected virtual void CheckButtonSubscriptions()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xA2C45C", Offset = "0xA2C45C", VA = "0xA2C45C", Slot = "51")]
		protected virtual void SubscribeActivationButton()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xA2C5B8", Offset = "0xA2C5B8", VA = "0xA2C5B8", Slot = "52")]
		protected virtual void UnsubscribeActivationButton()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xA2C6F8", Offset = "0xA2C6F8", VA = "0xA2C6F8", Slot = "53")]
		protected virtual void PointerActivated()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xA2C748", Offset = "0xA2C748", VA = "0xA2C748", Slot = "54")]
		protected virtual void PointerDeactivated()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xA2C7B0", Offset = "0xA2C7B0", VA = "0xA2C7B0", Slot = "55")]
		protected virtual void DoActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xA2C86C", Offset = "0xA2C86C", VA = "0xA2C86C", Slot = "56")]
		protected virtual void DoActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xA2C924", Offset = "0xA2C924", VA = "0xA2C924", Slot = "57")]
		protected virtual void SubscribeSelectionButton()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xA2CAE4", Offset = "0xA2CAE4", VA = "0xA2CAE4", Slot = "58")]
		protected virtual void UnsubscribeSelectionButton()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xA2CC84", Offset = "0xA2CC84", VA = "0xA2CC84", Slot = "59")]
		protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xA2CD24", Offset = "0xA2CD24", VA = "0xA2CD24", Slot = "60")]
		protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xA2CDC4", Offset = "0xA2CDC4", VA = "0xA2CDC4", Slot = "61")]
		protected virtual void SelectionButtonAction(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xA2CDDC", Offset = "0xA2CDDC", VA = "0xA2CDDC", Slot = "62")]
		protected virtual void ExecuteSelectionButtonAction()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xA2D110", Offset = "0xA2D110", VA = "0xA2D110", Slot = "63")]
		protected virtual bool CanResetActivationState(bool givenState)
		{
			return default(bool);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xA2D140", Offset = "0xA2D140", VA = "0xA2D140", Slot = "64")]
		protected virtual void ManageActivationState(bool state)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xA2D198", Offset = "0xA2D198", VA = "0xA2D198", Slot = "65")]
		protected virtual bool PointerActivatesUseAction(VRTK_InteractableObject givenInteractableObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xA2D294", Offset = "0xA2D294", VA = "0xA2D294", Slot = "66")]
		protected virtual void StartUseAction(Transform target)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xA2D470", Offset = "0xA2D470", VA = "0xA2D470", Slot = "67")]
		protected virtual void StopUseAction()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xA2D594", Offset = "0xA2D594", VA = "0xA2D594", Slot = "68")]
		protected virtual void AttemptUseOnSet(Transform target)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xA2D778", Offset = "0xA2D778", VA = "0xA2D778", Slot = "69")]
		protected virtual void SetHoverSelectionTimer(Collider collider)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xA2D828", Offset = "0xA2D828", VA = "0xA2D828", Slot = "70")]
		protected virtual void ResetHoverSelectionTimer(Collider collider)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xA2D8BC", Offset = "0xA2D8BC", VA = "0xA2D8BC", Slot = "71")]
		protected virtual void CheckHoverSelect()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xA2D930", Offset = "0xA2D930", VA = "0xA2D930", Slot = "72")]
		protected virtual DestinationMarkerEventArgs GetStateEventPayload()
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xA2DAD8", Offset = "0xA2DAD8", VA = "0xA2DAD8")]
		public VRTK_Pointer()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public struct BodyPhysicsEventArgs
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collider collider;
	}
	[Token(Token = "0x200019E")]
	public delegate void BodyPhysicsEventHandler(object sender, BodyPhysicsEventArgs e);
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649CA4", Offset = "0x649CA4")]
	public class VRTK_BodyPhysics : VRTK_DestinationMarker
	{
		[Token(Token = "0x200048B")]
		public enum FallingRestrictors
		{
			[Token(Token = "0x4002067")]
			NoRestriction,
			[Token(Token = "0x4002068")]
			LeftController,
			[Token(Token = "0x4002069")]
			RightController,
			[Token(Token = "0x400206A")]
			EitherController,
			[Token(Token = "0x400206B")]
			BothControllers,
			[Token(Token = "0x400206C")]
			AlwaysRestrict
		}

		[Token(Token = "0x200048C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D908", Offset = "0x64D908")]
		private sealed class <RestoreCollisions>d__178 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_BodyPhysics <>4__this;

			[Token(Token = "0x170002B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022F9")]
				[Address(RVA = "0xCB8EFC", Offset = "0xCB8EFC", VA = "0xCB8EFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022FB")]
				[Address(RVA = "0xCB8F6C", Offset = "0xCB8F6C", VA = "0xCB8F6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022F6")]
			[Address(RVA = "0xCB7538", Offset = "0xCB7538", VA = "0xCB7538")]
			[DebuggerHidden]
			public <RestoreCollisions>d__178(int <>1__state)
			{
			}

			[Token(Token = "0x60022F7")]
			[Address(RVA = "0xCB8D58", Offset = "0xCB8D58", VA = "0xCB8D58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022F8")]
			[Address(RVA = "0xCB8D5C", Offset = "0xCB8D5C", VA = "0xCB8D5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022FA")]
			[Address(RVA = "0xCB8F04", Offset = "0xCB8F04", VA = "0xCB8F04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E788", Offset = "0x65E788")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E788", Offset = "0x65E788")]
		public bool enableBodyCollisions;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E7E8", Offset = "0x65E7E8")]
		public bool ignoreGrabbedCollisions;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E820", Offset = "0x65E820")]
		public GameObject[] ignoreCollisionsWith;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E858", Offset = "0x65E858")]
		public float headsetYOffset;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E890", Offset = "0x65E890")]
		public float movementThreshold;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E8C8", Offset = "0x65E8C8")]
		public float playAreaMovementThreshold;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E900", Offset = "0x65E900")]
		public int standingHistorySamples;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E938", Offset = "0x65E938")]
		public float leanYThreshold;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E970", Offset = "0x65E970")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E970", Offset = "0x65E970")]
		public float stepUpYOffset;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E9D0", Offset = "0x65E9D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65E9D0", Offset = "0x65E9D0")]
		public float stepThicknessMultiplier;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EA2C", Offset = "0x65EA2C")]
		public float stepDropThreshold;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EA64", Offset = "0x65EA64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EA64", Offset = "0x65EA64")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EAC4", Offset = "0x65EAC4")]
		public FallingRestrictors fallRestriction;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EAFC", Offset = "0x65EAFC")]
		public float gravityFallYThreshold;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EB34", Offset = "0x65EB34")]
		public float blinkYThreshold;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EB6C", Offset = "0x65EB6C")]
		public float floorHeightTolerance;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65EBA4", Offset = "0x65EBA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EBA4", Offset = "0x65EBA4")]
		public int fallCheckPrecision;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EBF8", Offset = "0x65EBF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EBF8", Offset = "0x65EBF8")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EC58", Offset = "0x65EC58")]
		public Rigidbody customPlayAreaRigidbody;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EC90", Offset = "0x65EC90")]
		public GameObject customBodyColliderContainer;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ECC8", Offset = "0x65ECC8")]
		public GameObject customFootColliderContainer;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform playArea;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Transform headset;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Rigidbody bodyRigidbody;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected GameObject bodyColliderContainer;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected GameObject footColliderContainer;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected CapsuleCollider bodyCollider;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected CapsuleCollider footCollider;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected VRTK_CollisionTracker collisionTracker;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected bool currentBodyCollisionsSetting;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected GameObject currentCollidingObject;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected GameObject currentValidFloorObject;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected float lastFrameFloorY;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		protected float hitFloorYDelta;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected bool initialFloorDrop;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		protected bool resetPhysicsAfterTeleport;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
		protected bool storedCurrentPhysics;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
		protected bool retogglePhysicsOnCanFall;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		protected bool storedRetogglePhysics;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected Vector3 lastPlayAreaPosition;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected Vector2 currentStandingPosition;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected List<Vector2> standingPositionHistory;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected float playAreaHeightAdjustment;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		protected float bodyMass;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected float bodyRadius;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		protected float leanForwardLengthAddition;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected float playAreaPositionThreshold;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		protected float gravityPush;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected int decimalPrecision;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		protected bool isFalling;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
		protected bool isMoving;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CE")]
		protected bool isLeaning;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CF")]
		protected bool onGround;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected bool preventSnapToFloor;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		protected bool generateRigidbody;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		protected Vector3 playAreaVelocity;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected string footColliderContainerNameCheck;

		[Token(Token = "0x4000F68")]
		protected const string BODY_COLLIDER_CONTAINER_NAME = "BodyColliderContainer";

		[Token(Token = "0x4000F69")]
		protected const string FOOT_COLLIDER_CONTAINER_NAME = "FootColliderContainer";

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected bool enableBodyCollisionsStartingValue;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		protected float fallMinTime;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected HashSet<GameObject> ignoreCollisionsOnGameObjects;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected Transform cachedGrabbedObjectTransform;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected VRTK_InteractableObject cachedGrabbedObject;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		protected LayerMask defaultIgnoreLayer;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected Coroutine restoreCollisionsRoutine;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		protected bool drawDebugGizmo;

		[Token(Token = "0x140000C2")]
		public event BodyPhysicsEventHandler StartFalling
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xCB0640", Offset = "0xCB0640", VA = "0xCB0640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDEC", Offset = "0x66EDEC")]
			add
			{
			}
			[Token(Token = "0x6001349")]
			[Address(RVA = "0xCB072C", Offset = "0xCB072C", VA = "0xCB072C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDFC", Offset = "0x66EDFC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C3")]
		public event BodyPhysicsEventHandler StopFalling
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0xCB0818", Offset = "0xCB0818", VA = "0xCB0818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE0C", Offset = "0x66EE0C")]
			add
			{
			}
			[Token(Token = "0x600134B")]
			[Address(RVA = "0xCB0904", Offset = "0xCB0904", VA = "0xCB0904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE1C", Offset = "0x66EE1C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C4")]
		public event BodyPhysicsEventHandler StartMoving
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xCB09F0", Offset = "0xCB09F0", VA = "0xCB09F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE2C", Offset = "0x66EE2C")]
			add
			{
			}
			[Token(Token = "0x600134D")]
			[Address(RVA = "0xCB0ADC", Offset = "0xCB0ADC", VA = "0xCB0ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE3C", Offset = "0x66EE3C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C5")]
		public event BodyPhysicsEventHandler StopMoving
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0xCB0BC8", Offset = "0xCB0BC8", VA = "0xCB0BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE4C", Offset = "0x66EE4C")]
			add
			{
			}
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xCB0CB4", Offset = "0xCB0CB4", VA = "0xCB0CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE5C", Offset = "0x66EE5C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C6")]
		public event BodyPhysicsEventHandler StartColliding
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xCB0DA0", Offset = "0xCB0DA0", VA = "0xCB0DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE6C", Offset = "0x66EE6C")]
			add
			{
			}
			[Token(Token = "0x6001351")]
			[Address(RVA = "0xCB0E8C", Offset = "0xCB0E8C", VA = "0xCB0E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE7C", Offset = "0x66EE7C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C7")]
		public event BodyPhysicsEventHandler StopColliding
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0xCB0F78", Offset = "0xCB0F78", VA = "0xCB0F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE8C", Offset = "0x66EE8C")]
			add
			{
			}
			[Token(Token = "0x6001353")]
			[Address(RVA = "0xCB1068", Offset = "0xCB1068", VA = "0xCB1068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE9C", Offset = "0x66EE9C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C8")]
		public event BodyPhysicsEventHandler StartLeaning
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0xCB1158", Offset = "0xCB1158", VA = "0xCB1158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EEAC", Offset = "0x66EEAC")]
			add
			{
			}
			[Token(Token = "0x6001355")]
			[Address(RVA = "0xCB1248", Offset = "0xCB1248", VA = "0xCB1248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EEBC", Offset = "0x66EEBC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C9")]
		public event BodyPhysicsEventHandler StopLeaning
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0xCB1338", Offset = "0xCB1338", VA = "0xCB1338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EECC", Offset = "0x66EECC")]
			add
			{
			}
			[Token(Token = "0x6001357")]
			[Address(RVA = "0xCB1428", Offset = "0xCB1428", VA = "0xCB1428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EEDC", Offset = "0x66EEDC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CA")]
		public event BodyPhysicsEventHandler StartTouchingGround
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0xCB1518", Offset = "0xCB1518", VA = "0xCB1518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EEEC", Offset = "0x66EEEC")]
			add
			{
			}
			[Token(Token = "0x6001359")]
			[Address(RVA = "0xCB1608", Offset = "0xCB1608", VA = "0xCB1608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EEFC", Offset = "0x66EEFC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CB")]
		public event BodyPhysicsEventHandler StopTouchingGround
		{
			[Token(Token = "0x600135A")]
			[Address(RVA = "0xCB16F8", Offset = "0xCB16F8", VA = "0xCB16F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EF0C", Offset = "0x66EF0C")]
			add
			{
			}
			[Token(Token = "0x600135B")]
			[Address(RVA = "0xCB17E8", Offset = "0xCB17E8", VA = "0xCB17E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EF1C", Offset = "0x66EF1C")]
			remove
			{
			}
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xCB18D8", Offset = "0xCB18D8", VA = "0xCB18D8", Slot = "15")]
		public virtual bool ArePhysicsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xCB197C", Offset = "0xCB197C", VA = "0xCB197C", Slot = "16")]
		public virtual void ApplyBodyVelocity(Vector3 velocity, bool forcePhysicsOn = false, bool applyMomentum = false)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xCB1B00", Offset = "0xCB1B00", VA = "0xCB1B00", Slot = "17")]
		public virtual void ToggleOnGround(bool state)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xCB1B94", Offset = "0xCB1B94", VA = "0xCB1B94", Slot = "18")]
		public virtual void TogglePreventSnapToFloor(bool state)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xCB1BA0", Offset = "0xCB1BA0", VA = "0xCB1BA0", Slot = "19")]
		public virtual void ForceSnapToFloor()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xCB1BE0", Offset = "0xCB1BE0", VA = "0xCB1BE0", Slot = "20")]
		public virtual bool IsFalling()
		{
			return default(bool);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xCB1BE8", Offset = "0xCB1BE8", VA = "0xCB1BE8", Slot = "21")]
		public virtual bool IsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xCB1BF0", Offset = "0xCB1BF0", VA = "0xCB1BF0", Slot = "22")]
		public virtual bool IsLeaning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xCB1BF8", Offset = "0xCB1BF8", VA = "0xCB1BF8", Slot = "23")]
		public virtual bool OnGround()
		{
			return default(bool);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xCB1C00", Offset = "0xCB1C00", VA = "0xCB1C00", Slot = "24")]
		public virtual Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xCB1CC0", Offset = "0xCB1CC0", VA = "0xCB1CC0", Slot = "25")]
		public virtual Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xCB1D80", Offset = "0xCB1D80", VA = "0xCB1D80", Slot = "26")]
		public virtual void ResetVelocities()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xCB1E64", Offset = "0xCB1E64", VA = "0xCB1E64", Slot = "27")]
		public virtual void ResetFalling()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xCB1E74", Offset = "0xCB1E74", VA = "0xCB1E74", Slot = "28")]
		public virtual GameObject GetBodyColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xCB1E7C", Offset = "0xCB1E7C", VA = "0xCB1E7C", Slot = "29")]
		public virtual GameObject GetFootColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xCB1E84", Offset = "0xCB1E84", VA = "0xCB1E84", Slot = "30")]
		public virtual GameObject GetCurrentCollidingObject()
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xCB1E8C", Offset = "0xCB1E8C", VA = "0xCB1E8C", Slot = "31")]
		public virtual void ResetIgnoredCollisions()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xCB20D0", Offset = "0xCB20D0", VA = "0xCB20D0", Slot = "32")]
		public virtual bool SweepCollision(Vector3 direction, float maxDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xCB250C", Offset = "0xCB250C", VA = "0xCB250C", Slot = "33")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xCB2574", Offset = "0xCB2574", VA = "0xCB2574", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xCB26EC", Offset = "0xCB26EC", VA = "0xCB26EC", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xCB2760", Offset = "0xCB2760", VA = "0xCB2760", Slot = "34")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xCB27C8", Offset = "0xCB27C8", VA = "0xCB27C8", Slot = "35")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xCB28E4", Offset = "0xCB28E4", VA = "0xCB28E4", Slot = "36")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xCB29F0", Offset = "0xCB29F0", VA = "0xCB29F0", Slot = "37")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xCB2AAC", Offset = "0xCB2AAC", VA = "0xCB2AAC", Slot = "38")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xCB2B68", Offset = "0xCB2B68", VA = "0xCB2B68", Slot = "39")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xCB2C00", Offset = "0xCB2C00", VA = "0xCB2C00", Slot = "40")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xCB2DA8", Offset = "0xCB2DA8", VA = "0xCB2DA8", Slot = "41")]
		protected virtual bool CheckValidCollision(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xCB2E94", Offset = "0xCB2E94", VA = "0xCB2E94", Slot = "42")]
		protected virtual bool CheckExistingCollision(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xCB2F54", Offset = "0xCB2F54", VA = "0xCB2F54", Slot = "43")]
		protected virtual void SetupPlayArea()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xCB30E4", Offset = "0xCB30E4", VA = "0xCB30E4", Slot = "44")]
		protected virtual void SetupHeadset()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xCB31F0", Offset = "0xCB31F0", VA = "0xCB31F0", Slot = "45")]
		protected virtual void ManageCollisionListeners(bool state)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xCB3BBC", Offset = "0xCB3BBC", VA = "0xCB3BBC", Slot = "46")]
		protected virtual void CollisionTracker_TriggerExit(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xCB3BD0", Offset = "0xCB3BD0", VA = "0xCB3BD0", Slot = "47")]
		protected virtual void CollisionTracker_TriggerEnter(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xCB3BE4", Offset = "0xCB3BE4", VA = "0xCB3BE4", Slot = "48")]
		protected virtual void CollisionTracker_CollisionExit(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xCB3BF8", Offset = "0xCB3BF8", VA = "0xCB3BF8", Slot = "49")]
		protected virtual void CollisionTracker_CollisionEnter(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xCB3C0C", Offset = "0xCB3C0C", VA = "0xCB3C0C", Slot = "50")]
		protected virtual void OnStartFalling(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xCB3C38", Offset = "0xCB3C38", VA = "0xCB3C38", Slot = "51")]
		protected virtual void OnStopFalling(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xCB3C64", Offset = "0xCB3C64", VA = "0xCB3C64", Slot = "52")]
		protected virtual void OnStartMoving(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xCB3C90", Offset = "0xCB3C90", VA = "0xCB3C90", Slot = "53")]
		protected virtual void OnStopMoving(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xCB3CBC", Offset = "0xCB3CBC", VA = "0xCB3CBC", Slot = "54")]
		protected virtual void OnStartColliding(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xCB3CE8", Offset = "0xCB3CE8", VA = "0xCB3CE8", Slot = "55")]
		protected virtual void OnStopColliding(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xCB3D14", Offset = "0xCB3D14", VA = "0xCB3D14", Slot = "56")]
		protected virtual void OnStartLeaning(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xCB3D40", Offset = "0xCB3D40", VA = "0xCB3D40", Slot = "57")]
		protected virtual void OnStopLeaning(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xCB3D6C", Offset = "0xCB3D6C", VA = "0xCB3D6C", Slot = "58")]
		protected virtual void OnStartTouchingGround(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xCB3D98", Offset = "0xCB3D98", VA = "0xCB3D98", Slot = "59")]
		protected virtual void OnStopTouchingGround(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xCB3DC4", Offset = "0xCB3DC4", VA = "0xCB3DC4", Slot = "60")]
		protected virtual BodyPhysicsEventArgs SetBodyPhysicsEvent(GameObject target, Collider collider)
		{
			return default(BodyPhysicsEventArgs);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xCB3DD0", Offset = "0xCB3DD0", VA = "0xCB3DD0", Slot = "61")]
		protected virtual void CalculateVelocity()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xCB3F38", Offset = "0xCB3F38", VA = "0xCB3F38", Slot = "62")]
		protected virtual void TogglePhysics(bool state)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xCB4090", Offset = "0xCB4090", VA = "0xCB4090", Slot = "63")]
		protected virtual void ManageFalling()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xCB40E4", Offset = "0xCB40E4", VA = "0xCB40E4", Slot = "64")]
		protected virtual void CheckBodyCollisionsSetting()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xCB4120", Offset = "0xCB4120", VA = "0xCB4120", Slot = "65")]
		protected virtual void CheckFalling()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xCB41D0", Offset = "0xCB41D0", VA = "0xCB41D0", Slot = "66")]
		protected virtual void SetCurrentStandingPosition()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xCB43A8", Offset = "0xCB43A8", VA = "0xCB43A8", Slot = "67")]
		protected virtual void SetIsMoving(Vector2 currentHeadsetPosition)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xCB4580", Offset = "0xCB4580", VA = "0xCB4580", Slot = "68")]
		protected virtual void CheckLean()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xCB4AC4", Offset = "0xCB4AC4", VA = "0xCB4AC4", Slot = "69")]
		protected virtual void CalculateLean(Vector3 startPosition, float forwardLength, float originalRayDistance)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xCB4E28", Offset = "0xCB4E28", VA = "0xCB4E28", Slot = "70")]
		protected virtual void UpdateStandingPosition(Vector2 currentHeadsetPosition)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xCB5050", Offset = "0xCB5050", VA = "0xCB5050", Slot = "71")]
		protected virtual void CheckHeadsetMovement()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xCB5228", Offset = "0xCB5228", VA = "0xCB5228", Slot = "72")]
		protected virtual void MovementChanged(bool movementState)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xCB5290", Offset = "0xCB5290", VA = "0xCB5290", Slot = "73")]
		protected virtual void EnableDropToFloor()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xCB53CC", Offset = "0xCB53CC", VA = "0xCB53CC", Slot = "74")]
		protected virtual void DisableDropToFloor()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xCB549C", Offset = "0xCB549C", VA = "0xCB549C", Slot = "75")]
		protected virtual void Teleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xCB54F4", Offset = "0xCB54F4", VA = "0xCB54F4", Slot = "76")]
		protected virtual void EnableBodyPhysics()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xCB55BC", Offset = "0xCB55BC", VA = "0xCB55BC", Slot = "77")]
		protected virtual void DisableBodyPhysics()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xCB567C", Offset = "0xCB567C", VA = "0xCB567C", Slot = "78")]
		protected virtual void SetupIgnoredCollisions()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xCB5850", Offset = "0xCB5850", VA = "0xCB5850", Slot = "79")]
		protected virtual void ManagePhysicsCollider(Collider collider, bool state)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xCB5948", Offset = "0xCB5948", VA = "0xCB5948", Slot = "80")]
		protected virtual void CheckStepUpCollision(Collision collision)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xCB5EC0", Offset = "0xCB5EC0", VA = "0xCB5EC0", Slot = "81")]
		protected virtual GameObject CreateColliderContainer(string name, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xCB6188", Offset = "0xCB6188", VA = "0xCB6188", Slot = "82")]
		protected virtual GameObject InstantiateColliderContainer(GameObject objectToClone, string name, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xCB62C8", Offset = "0xCB62C8", VA = "0xCB62C8", Slot = "83")]
		protected virtual void GenerateRigidbody()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xCB65D0", Offset = "0xCB65D0", VA = "0xCB65D0", Slot = "84")]
		protected virtual bool HasExistingRigidbody()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xCB66CC", Offset = "0xCB66CC", VA = "0xCB66CC", Slot = "85")]
		protected virtual CapsuleCollider GenerateCapsuleCollider(GameObject parent, float setRadius)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xCB67B4", Offset = "0xCB67B4", VA = "0xCB67B4", Slot = "86")]
		protected virtual void GenerateBodyCollider()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xCB6974", Offset = "0xCB6974", VA = "0xCB6974", Slot = "87")]
		protected virtual void GenerateFootCollider()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xCB6B1C", Offset = "0xCB6B1C", VA = "0xCB6B1C", Slot = "88")]
		protected virtual void CreateCollider()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xCB6DA0", Offset = "0xCB6DA0", VA = "0xCB6DA0", Slot = "89")]
		protected virtual void DestroyCollider()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xCB6EB8", Offset = "0xCB6EB8", VA = "0xCB6EB8", Slot = "90")]
		protected virtual void UpdateCollider()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xCB727C", Offset = "0xCB727C", VA = "0xCB727C", Slot = "91")]
		protected virtual float CalculateStepUpYOffset()
		{
			return default(float);
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xCB7288", Offset = "0xCB7288", VA = "0xCB7288", Slot = "92")]
		protected virtual void InitControllerListeners(GameObject mappedController, bool state)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xCB74A0", Offset = "0xCB74A0", VA = "0xCB74A0", Slot = "93")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EF2C", Offset = "0x66EF2C")]
		protected virtual IEnumerator RestoreCollisions(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xCB7564", Offset = "0xCB7564", VA = "0xCB7564", Slot = "94")]
		protected virtual void IgnoreCollisions(Collider[] colliders, bool state)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xCB7734", Offset = "0xCB7734", VA = "0xCB7734", Slot = "95")]
		protected virtual void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xCB7810", Offset = "0xCB7810", VA = "0xCB7810", Slot = "96")]
		protected virtual void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xCB78C0", Offset = "0xCB78C0", VA = "0xCB78C0", Slot = "97")]
		protected virtual bool FloorIsGrabbedObject(RaycastHit collidedObj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xCB7A1C", Offset = "0xCB7A1C", VA = "0xCB7A1C", Slot = "98")]
		protected virtual bool FloorHeightChanged(float currentY)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xCB7AA0", Offset = "0xCB7AA0", VA = "0xCB7AA0", Slot = "99")]
		protected virtual bool ValidDrop(bool rayHit, RaycastHit rayCollidedWith, float floorY)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xCB7C0C", Offset = "0xCB7C0C", VA = "0xCB7C0C", Slot = "100")]
		protected virtual float ControllerHeightCheck(GameObject controllerObj)
		{
			return default(float);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xCB7DC8", Offset = "0xCB7DC8", VA = "0xCB7DC8", Slot = "101")]
		protected virtual bool ControllersStillOverPreviousFloor()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xCB7FBC", Offset = "0xCB7FBC", VA = "0xCB7FBC", Slot = "102")]
		protected virtual void SnapToNearestFloor()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xCB8324", Offset = "0xCB8324", VA = "0xCB8324", Slot = "103")]
		protected virtual bool PreventFall(float hitFloorY)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xCB8394", Offset = "0xCB8394", VA = "0xCB8394", Slot = "104")]
		protected virtual void HandleFall(float hitFloorY, RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xCB855C", Offset = "0xCB855C", VA = "0xCB855C", Slot = "105")]
		protected virtual void StartFall(GameObject targetFloor)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xCB869C", Offset = "0xCB869C", VA = "0xCB869C", Slot = "106")]
		protected virtual void StopFall()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xCB8770", Offset = "0xCB8770", VA = "0xCB8770", Slot = "107")]
		protected virtual void GravityFall(RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xCB8850", Offset = "0xCB8850", VA = "0xCB8850", Slot = "108")]
		protected virtual void TeleportFall(float floorY, RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xCB8AC0", Offset = "0xCB8AC0", VA = "0xCB8AC0", Slot = "109")]
		protected virtual void ApplyBodyMomentum(bool applyMomentum = false)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xCB8BE4", Offset = "0xCB8BE4", VA = "0xCB8BE4")]
		public VRTK_BodyPhysics()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public struct HeadsetCollisionEventArgs
	{
		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x20001A1")]
	public delegate void HeadsetCollisionEventHandler(object sender, HeadsetCollisionEventArgs e);
	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649CDC", Offset = "0x649CDC")]
	public class VRTK_HeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EDA0", Offset = "0x65EDA0")]
		public bool ignoreTriggerColliders;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EDD8", Offset = "0x65EDD8")]
		public float colliderRadius;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EE10", Offset = "0x65EE10")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65EE68", Offset = "0x65EE68")]
		public bool headsetColliding;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65EE78", Offset = "0x65EE78")]
		public Collider collidingWith;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform headset;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_HeadsetCollider headsetColliderScript;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject headsetColliderContainer;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool generateCollider;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected bool generateRigidbody;

		[Token(Token = "0x140000CC")]
		public event HeadsetCollisionEventHandler HeadsetCollisionDetect
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xBE30F8", Offset = "0xBE30F8", VA = "0xBE30F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EF90", Offset = "0x66EF90")]
			add
			{
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0xBE31E4", Offset = "0xBE31E4", VA = "0xBE31E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EFA0", Offset = "0x66EFA0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CD")]
		public event HeadsetCollisionEventHandler HeadsetCollisionEnded
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xBE32D0", Offset = "0xBE32D0", VA = "0xBE32D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EFB0", Offset = "0x66EFB0")]
			add
			{
			}
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0xBE33BC", Offset = "0xBE33BC", VA = "0xBE33BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EFC0", Offset = "0x66EFC0")]
			remove
			{
			}
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xBE34A8", Offset = "0xBE34A8", VA = "0xBE34A8", Slot = "4")]
		public virtual void OnHeadsetCollisionDetect(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xBE34D4", Offset = "0xBE34D4", VA = "0xBE34D4", Slot = "5")]
		public virtual void OnHeadsetCollisionEnded(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xBE3500", Offset = "0xBE3500", VA = "0xBE3500", Slot = "6")]
		public virtual bool IsColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xBE3508", Offset = "0xBE3508", VA = "0xBE3508", Slot = "7")]
		public virtual GameObject GetHeadsetColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xBE3510", Offset = "0xBE3510", VA = "0xBE3510", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xBE3578", Offset = "0xBE3578", VA = "0xBE3578", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xBE3660", Offset = "0xBE3660", VA = "0xBE3660", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xBE3758", Offset = "0xBE3758", VA = "0xBE3758", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xBE37C0", Offset = "0xBE37C0", VA = "0xBE37C0", Slot = "12")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xBE39FC", Offset = "0xBE39FC", VA = "0xBE39FC", Slot = "13")]
		protected virtual void CreateHeadsetColliderContainer()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xBE3CC8", Offset = "0xBE3CC8", VA = "0xBE3CC8", Slot = "14")]
		protected virtual void SetupHeadset()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xBE4018", Offset = "0xBE4018", VA = "0xBE4018", Slot = "15")]
		protected virtual void TearDownHeadset()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xBE4214", Offset = "0xBE4214", VA = "0xBE4214")]
		public VRTK_HeadsetCollision()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class VRTK_HeadsetCollider : MonoBehaviour
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_HeadsetCollision parent;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xBE2AF8", Offset = "0xBE2AF8", VA = "0xBE2AF8", Slot = "4")]
		public virtual void SetParent(GameObject setParent)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xBE2B68", Offset = "0xBE2B68", VA = "0xBE2B68", Slot = "5")]
		public virtual void SetIgnoreTarget([Optional] VRTK_PolicyList list)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xBE2B70", Offset = "0xBE2B70", VA = "0xBE2B70", Slot = "6")]
		public virtual void EndCollision(Collider collider)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xBE2CA0", Offset = "0xBE2CA0", VA = "0xBE2CA0", Slot = "7")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xBE2E48", Offset = "0xBE2E48", VA = "0xBE2E48", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xBE2F1C", Offset = "0xBE2F1C", VA = "0xBE2F1C", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xBE3030", Offset = "0xBE3030", VA = "0xBE3030", Slot = "10")]
		protected virtual HeadsetCollisionEventArgs SetHeadsetCollisionEvent(Collider collider, Transform currentTransform)
		{
			return default(HeadsetCollisionEventArgs);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xBE303C", Offset = "0xBE303C", VA = "0xBE303C", Slot = "11")]
		protected virtual bool ValidTarget(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xBE30F0", Offset = "0xBE30F0", VA = "0xBE30F0")]
		public VRTK_HeadsetCollider()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649D14", Offset = "0x649D14")]
	public class VRTK_HeadsetCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EE88", Offset = "0x65EE88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EE88", Offset = "0x65EE88")]
		public float timeTillFade;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EEE8", Offset = "0x65EEE8")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EF20", Offset = "0x65EF20")]
		public Color fadeColor;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EF58", Offset = "0x65EF58")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EF90", Offset = "0x65EF90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EF90", Offset = "0x65EF90")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EFF0", Offset = "0x65EFF0")]
		public VRTK_HeadsetFade headsetFade;

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xBE4228", Offset = "0xBE4228", VA = "0xBE4228", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xBE45F8", Offset = "0xBE45F8", VA = "0xBE45F8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xBE4704", Offset = "0xBE4704", VA = "0xBE4704", Slot = "6")]
		protected virtual void OnHeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xBE4790", Offset = "0xBE4790", VA = "0xBE4790", Slot = "7")]
		protected virtual void OnHeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xBE484C", Offset = "0xBE484C", VA = "0xBE484C", Slot = "8")]
		protected virtual void StartFade()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xBE48B8", Offset = "0xBE48B8", VA = "0xBE48B8", Slot = "9")]
		protected virtual bool ValidTarget(Collider target)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xBE496C", Offset = "0xBE496C", VA = "0xBE496C")]
		public VRTK_HeadsetCollisionFade()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public struct HeadsetControllerAwareEventArgs
	{
		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x20001A6")]
	public delegate void HeadsetControllerAwareEventHandler(object sender, HeadsetControllerAwareEventArgs e);
	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649D4C", Offset = "0x649D4C")]
	public class VRTK_HeadsetControllerAware : MonoBehaviour
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F028", Offset = "0x65F028")]
		public bool trackLeftController;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F060", Offset = "0x65F060")]
		public bool trackRightController;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F098", Offset = "0x65F098")]
		public float controllerGlanceRadius;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F0D0", Offset = "0x65F0D0")]
		public Transform customRightControllerOrigin;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F108", Offset = "0x65F108")]
		public Transform customLeftControllerOrigin;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F140", Offset = "0x65F140")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject leftController;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject rightController;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform headset;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool leftControllerObscured;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool rightControllerObscured;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool leftControllerLastState;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool rightControllerLastState;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool leftControllerGlance;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		protected bool rightControllerGlance;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		protected bool leftControllerGlanceLastState;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		protected bool rightControllerGlanceLastState;

		[Token(Token = "0x140000CE")]
		public event HeadsetControllerAwareEventHandler ControllerObscured
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xBE49AC", Offset = "0xBE49AC", VA = "0xBE49AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EFD0", Offset = "0x66EFD0")]
			add
			{
			}
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xBE4A98", Offset = "0xBE4A98", VA = "0xBE4A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EFE0", Offset = "0x66EFE0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CF")]
		public event HeadsetControllerAwareEventHandler ControllerUnobscured
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xBE4B84", Offset = "0xBE4B84", VA = "0xBE4B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EFF0", Offset = "0x66EFF0")]
			add
			{
			}
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xBE4C70", Offset = "0xBE4C70", VA = "0xBE4C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F000", Offset = "0x66F000")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D0")]
		public event HeadsetControllerAwareEventHandler ControllerGlanceEnter
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0xBE4D5C", Offset = "0xBE4D5C", VA = "0xBE4D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F010", Offset = "0x66F010")]
			add
			{
			}
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0xBE4E48", Offset = "0xBE4E48", VA = "0xBE4E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F020", Offset = "0x66F020")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D1")]
		public event HeadsetControllerAwareEventHandler ControllerGlanceExit
		{
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0xBE4F34", Offset = "0xBE4F34", VA = "0xBE4F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F030", Offset = "0x66F030")]
			add
			{
			}
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0xBE5020", Offset = "0xBE5020", VA = "0xBE5020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F040", Offset = "0x66F040")]
			remove
			{
			}
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xBE510C", Offset = "0xBE510C", VA = "0xBE510C", Slot = "4")]
		public virtual void OnControllerObscured(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xBE5160", Offset = "0xBE5160", VA = "0xBE5160", Slot = "5")]
		public virtual void OnControllerUnobscured(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xBE51B4", Offset = "0xBE51B4", VA = "0xBE51B4", Slot = "6")]
		public virtual void OnControllerGlanceEnter(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xBE5208", Offset = "0xBE5208", VA = "0xBE5208", Slot = "7")]
		public virtual void OnControllerGlanceExit(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xBE525C", Offset = "0xBE525C", VA = "0xBE525C", Slot = "8")]
		public virtual bool LeftControllerObscured()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xBE5264", Offset = "0xBE5264", VA = "0xBE5264", Slot = "9")]
		public virtual bool RightControllerObscured()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xBE526C", Offset = "0xBE526C", VA = "0xBE526C", Slot = "10")]
		public virtual bool LeftControllerGlanced()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xBE5274", Offset = "0xBE5274", VA = "0xBE5274", Slot = "11")]
		public virtual bool RightControllerGlanced()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xBE527C", Offset = "0xBE527C", VA = "0xBE527C", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xBE52E4", Offset = "0xBE52E4", VA = "0xBE52E4", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xBE5364", Offset = "0xBE5364", VA = "0xBE5364", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xBE536C", Offset = "0xBE536C", VA = "0xBE536C", Slot = "15")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xBE53D4", Offset = "0xBE53D4", VA = "0xBE53D4", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xBE548C", Offset = "0xBE548C", VA = "0xBE548C", Slot = "17")]
		protected virtual HeadsetControllerAwareEventArgs SetHeadsetControllerAwareEvent(RaycastHit raycastHit, VRTK_ControllerReference controllerReference)
		{
			return default(HeadsetControllerAwareEventArgs);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xBE54C4", Offset = "0xBE54C4", VA = "0xBE54C4", Slot = "18")]
		protected virtual void RayCastToController(GameObject controller, Transform customDestination, ref bool obscured, ref bool lastState)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xBE5728", Offset = "0xBE5728", VA = "0xBE5728", Slot = "19")]
		protected virtual void ObscuredStateChanged(GameObject controller, bool obscured, RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xBE58DC", Offset = "0xBE58DC", VA = "0xBE58DC", Slot = "20")]
		protected virtual void CheckHeadsetView(GameObject controller, Transform customDestination, ref bool controllerGlance, ref bool controllerGlanceLastState)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xBE5BA8", Offset = "0xBE5BA8", VA = "0xBE5BA8", Slot = "21")]
		protected virtual void GlanceStateChanged(GameObject controller, bool glance)
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xBE5D30", Offset = "0xBE5D30", VA = "0xBE5D30")]
		public VRTK_HeadsetControllerAware()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public struct HeadsetFadeEventArgs
	{
		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float timeTillComplete;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x20001A9")]
	public delegate void HeadsetFadeEventHandler(object sender, HeadsetFadeEventArgs e);
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649D84", Offset = "0x649D84")]
	public class VRTK_HeadsetFade : MonoBehaviour
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform headset;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool isTransitioning;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		protected bool isFaded;

		[Token(Token = "0x140000D2")]
		public event HeadsetFadeEventHandler HeadsetFadeStart
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xBE5D4C", Offset = "0xBE5D4C", VA = "0xBE5D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F050", Offset = "0x66F050")]
			add
			{
			}
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xBE5E38", Offset = "0xBE5E38", VA = "0xBE5E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F060", Offset = "0x66F060")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D3")]
		public event HeadsetFadeEventHandler HeadsetFadeComplete
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0xBE5F24", Offset = "0xBE5F24", VA = "0xBE5F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F070", Offset = "0x66F070")]
			add
			{
			}
			[Token(Token = "0x6001409")]
			[Address(RVA = "0xBE6010", Offset = "0xBE6010", VA = "0xBE6010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F080", Offset = "0x66F080")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D4")]
		public event HeadsetFadeEventHandler HeadsetUnfadeStart
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xBE60FC", Offset = "0xBE60FC", VA = "0xBE60FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F090", Offset = "0x66F090")]
			add
			{
			}
			[Token(Token = "0x600140B")]
			[Address(RVA = "0xBE61E8", Offset = "0xBE61E8", VA = "0xBE61E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F0A0", Offset = "0x66F0A0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D5")]
		public event HeadsetFadeEventHandler HeadsetUnfadeComplete
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0xBE62D4", Offset = "0xBE62D4", VA = "0xBE62D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F0B0", Offset = "0x66F0B0")]
			add
			{
			}
			[Token(Token = "0x600140D")]
			[Address(RVA = "0xBE63C0", Offset = "0xBE63C0", VA = "0xBE63C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F0C0", Offset = "0x66F0C0")]
			remove
			{
			}
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xBE64AC", Offset = "0xBE64AC", VA = "0xBE64AC", Slot = "4")]
		public virtual void OnHeadsetFadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xBE64D8", Offset = "0xBE64D8", VA = "0xBE64D8", Slot = "5")]
		public virtual void OnHeadsetFadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xBE6504", Offset = "0xBE6504", VA = "0xBE6504", Slot = "6")]
		public virtual void OnHeadsetUnfadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xBE6530", Offset = "0xBE6530", VA = "0xBE6530", Slot = "7")]
		public virtual void OnHeadsetUnfadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xBE655C", Offset = "0xBE655C", VA = "0xBE655C", Slot = "8")]
		public virtual bool IsFaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xBE6564", Offset = "0xBE6564", VA = "0xBE6564", Slot = "9")]
		public virtual bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xBE656C", Offset = "0xBE656C", VA = "0xBE656C", Slot = "10")]
		public virtual void Fade(Color color, float duration)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xBE668C", Offset = "0xBE668C", VA = "0xBE668C", Slot = "11")]
		public virtual void Unfade(float duration)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xBE67B4", Offset = "0xBE67B4", VA = "0xBE67B4", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xBE681C", Offset = "0xBE681C", VA = "0xBE681C", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xBE688C", Offset = "0xBE688C", VA = "0xBE688C", Slot = "14")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xBE68F4", Offset = "0xBE68F4", VA = "0xBE68F4", Slot = "15")]
		protected virtual HeadsetFadeEventArgs SetHeadsetFadeEvent(Transform currentTransform, float duration)
		{
			return default(HeadsetFadeEventArgs);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xBE68FC", Offset = "0xBE68FC", VA = "0xBE68FC", Slot = "16")]
		protected virtual void FadeComplete()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xBE6954", Offset = "0xBE6954", VA = "0xBE6954", Slot = "17")]
		protected virtual void UnfadeComplete()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xBE69A8", Offset = "0xBE69A8", VA = "0xBE69A8")]
		public VRTK_HeadsetFade()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649DBC", Offset = "0x649DBC")]
	public class VRTK_HipTracking : MonoBehaviour
	{
		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F1F8", Offset = "0x65F1F8")]
		public float HeadOffset;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F230", Offset = "0x65F230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F230", Offset = "0x65F230")]
		public Transform headOverride;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F290", Offset = "0x65F290")]
		public Transform ReferenceUp;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform playerHead;

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xBE70CC", Offset = "0xBE70CC", VA = "0xBE70CC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xBE7134", Offset = "0xBE7134", VA = "0xBE7134", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xBE71DC", Offset = "0xBE71DC", VA = "0xBE71DC", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xBE7244", Offset = "0xBE7244", VA = "0xBE7244", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xBE7654", Offset = "0xBE7654", VA = "0xBE7654")]
		public VRTK_HipTracking()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public struct PositionRewindEventArgs
	{
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 collidedPosition;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 resetPosition;
	}
	[Token(Token = "0x20001AD")]
	public delegate void PositionRewindEventHandler(object sender, PositionRewindEventArgs e);
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649DF4", Offset = "0x649DF4")]
	public class VRTK_PositionRewind : MonoBehaviour
	{
		[Token(Token = "0x200048D")]
		public enum CollisionDetectors
		{
			[Token(Token = "0x4002072")]
			HeadsetOnly,
			[Token(Token = "0x4002073")]
			BodyOnly,
			[Token(Token = "0x4002074")]
			HeadsetAndBody
		}

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F2C8", Offset = "0x65F2C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F2C8", Offset = "0x65F2C8")]
		public CollisionDetectors collisionDetector;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F328", Offset = "0x65F328")]
		public bool ignoreTriggerColliders;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F360", Offset = "0x65F360")]
		public float rewindDelay;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F398", Offset = "0x65F398")]
		public float pushbackDistance;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F3D0", Offset = "0x65F3D0")]
		public float crouchThreshold;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F408", Offset = "0x65F408")]
		public float crouchRewindThreshold;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F440", Offset = "0x65F440")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F478", Offset = "0x65F478")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F478", Offset = "0x65F478")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F4D8", Offset = "0x65F4D8")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform headset;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform playArea;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3 lastGoodStandingPosition;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 lastGoodHeadsetPosition;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float highestHeadsetY;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float lastPlayAreaY;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool lastGoodPositionSet;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		protected bool hasCollided;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		protected bool isColliding;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		protected bool isRewinding;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float collideTimer;

		[Token(Token = "0x140000D6")]
		public event PositionRewindEventHandler PositionRewindToSafe
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xA2EA00", Offset = "0xA2EA00", VA = "0xA2EA00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F0D0", Offset = "0x66F0D0")]
			add
			{
			}
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xA2EAEC", Offset = "0xA2EAEC", VA = "0xA2EAEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F0E0", Offset = "0x66F0E0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xA2EBD8", Offset = "0xA2EBD8", VA = "0xA2EBD8", Slot = "4")]
		public virtual void OnPositionRewindToSafe(PositionRewindEventArgs e)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xA2EC1C", Offset = "0xA2EC1C", VA = "0xA2EC1C", Slot = "5")]
		public virtual void SetLastGoodPosition()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xA2ED1C", Offset = "0xA2ED1C", VA = "0xA2ED1C", Slot = "6")]
		public virtual void RewindPosition()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xA2EFD4", Offset = "0xA2EFD4", VA = "0xA2EFD4", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xA2F03C", Offset = "0xA2F03C", VA = "0xA2F03C", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xA2F190", Offset = "0xA2F190", VA = "0xA2F190", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xA2F1A4", Offset = "0xA2F1A4", VA = "0xA2F1A4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xA2F20C", Offset = "0xA2F20C", VA = "0xA2F20C", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xA2F27C", Offset = "0xA2F27C", VA = "0xA2F27C", Slot = "12")]
		protected virtual PositionRewindEventArgs SetEventPayload(Vector3 previousPosition)
		{
			return default(PositionRewindEventArgs);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xA2F2DC", Offset = "0xA2F2DC", VA = "0xA2F2DC", Slot = "13")]
		protected virtual bool CrouchThresholdReached()
		{
			return default(bool);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xA2F368", Offset = "0xA2F368", VA = "0xA2F368", Slot = "14")]
		protected virtual void SetHighestHeadsetY()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xA2F3E8", Offset = "0xA2F3E8", VA = "0xA2F3E8", Slot = "15")]
		protected virtual void UpdateLastGoodPosition()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xA2F478", Offset = "0xA2F478", VA = "0xA2F478", Slot = "16")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xA2F528", Offset = "0xA2F528", VA = "0xA2F528", Slot = "17")]
		protected virtual void StartCollision(GameObject target, Collider collider)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xA2F5B4", Offset = "0xA2F5B4", VA = "0xA2F5B4", Slot = "18")]
		protected virtual void EndCollision(Collider collider)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xA2F660", Offset = "0xA2F660", VA = "0xA2F660", Slot = "19")]
		protected virtual bool BodyCollisionsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xA2F6FC", Offset = "0xA2F6FC", VA = "0xA2F6FC", Slot = "20")]
		protected virtual bool CanRewind()
		{
			return default(bool);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xA2F7CC", Offset = "0xA2F7CC", VA = "0xA2F7CC", Slot = "21")]
		protected virtual void DoPositionRewind()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xA2F81C", Offset = "0xA2F81C", VA = "0xA2F81C", Slot = "22")]
		protected virtual bool HeadsetListen()
		{
			return default(bool);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xA2F830", Offset = "0xA2F830", VA = "0xA2F830", Slot = "23")]
		protected virtual bool BodyListen()
		{
			return default(bool);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xA2F844", Offset = "0xA2F844", VA = "0xA2F844", Slot = "24")]
		protected virtual void ManageListeners(bool state)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xA2FC08", Offset = "0xA2FC08", VA = "0xA2FC08")]
		private void StartColliding(object sender, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xA2FC24", Offset = "0xA2FC24", VA = "0xA2FC24")]
		private void StopColliding(object sender, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xA2FC38", Offset = "0xA2FC38", VA = "0xA2FC38", Slot = "25")]
		protected virtual void HeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xA2FC88", Offset = "0xA2FC88", VA = "0xA2FC88", Slot = "26")]
		protected virtual void HeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xA2FCA0", Offset = "0xA2FCA0", VA = "0xA2FCA0")]
		public VRTK_PositionRewind()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649E2C", Offset = "0x649E2C")]
	public class VRTK_UICanvas : MonoBehaviour
	{
		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D918", Offset = "0x64D918")]
		private sealed class <CreateDraggablePanel>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Canvas canvas;

			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 canvasSize;

			[Token(Token = "0x170002BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022FF")]
				[Address(RVA = "0x807AA8", Offset = "0x807AA8", VA = "0x807AA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002301")]
				[Address(RVA = "0x807B18", Offset = "0x807B18", VA = "0x807B18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022FC")]
			[Address(RVA = "0x806C7C", Offset = "0x806C7C", VA = "0x806C7C")]
			[DebuggerHidden]
			public <CreateDraggablePanel>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60022FD")]
			[Address(RVA = "0x8075A0", Offset = "0x8075A0", VA = "0x8075A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x8075A4", Offset = "0x8075A4", VA = "0x8075A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002300")]
			[Address(RVA = "0x807AB0", Offset = "0x807AB0", VA = "0x807AB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F520", Offset = "0x65F520")]
		public bool clickOnPointerCollision;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F558", Offset = "0x65F558")]
		public float autoActivateWithinDistance;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected BoxCollider canvasBoxCollider;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Rigidbody canvasRigidBody;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Coroutine draggablePanelCreation;

		[Token(Token = "0x4000FC8")]
		protected const string CANVAS_DRAGGABLE_PANEL = "VRTK_UICANVAS_DRAGGABLE_PANEL";

		[Token(Token = "0x4000FC9")]
		protected const string ACTIVATOR_FRONT_TRIGGER_GAMEOBJECT = "VRTK_UICANVAS_ACTIVATOR_FRONT_TRIGGER";

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x806168", Offset = "0x806168", VA = "0x806168", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x806174", Offset = "0x806174", VA = "0x806174", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x806180", Offset = "0x806180", VA = "0x806180", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x80618C", Offset = "0x80618C", VA = "0x80618C", Slot = "7")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x8062C8", Offset = "0x8062C8", VA = "0x8062C8", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x806374", Offset = "0x806374", VA = "0x806374", Slot = "9")]
		protected virtual void SetupCanvas()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x806BE0", Offset = "0x806BE0", VA = "0x806BE0", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66F0F0", Offset = "0x66F0F0")]
		protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
		{
			return null;
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x806CA8", Offset = "0x806CA8", VA = "0x806CA8", Slot = "11")]
		protected virtual void CreateActivator(Canvas canvas, Vector2 canvasSize)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x80718C", Offset = "0x80718C", VA = "0x80718C", Slot = "12")]
		protected virtual void RemoveCanvas()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x807598", Offset = "0x807598", VA = "0x807598")]
		public VRTK_UICanvas()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class VRTK_UIPointerAutoActivator : MonoBehaviour
	{
		[Token(Token = "0x600144C")]
		[Address(RVA = "0x80D288", Offset = "0x80D288", VA = "0x80D288", Slot = "4")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x80D3D0", Offset = "0x80D3D0", VA = "0x80D3D0", Slot = "5")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x80D4CC", Offset = "0x80D4CC", VA = "0x80D4CC")]
		public VRTK_UIPointerAutoActivator()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public struct UIDraggableItemEventArgs
	{
		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;
	}
	[Token(Token = "0x20001B2")]
	public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x649E64", Offset = "0x649E64")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649E64", Offset = "0x649E64")]
	public class VRTK_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F590", Offset = "0x65F590")]
		public bool restrictToDropZone;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F5C8", Offset = "0x65F5C8")]
		public bool restrictToOriginalCanvas;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F600", Offset = "0x65F600")]
		public float forwardOffset;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65F638", Offset = "0x65F638")]
		public GameObject validDropZone;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected RectTransform dragTransform;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 startPosition;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion startRotation;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject startDropZone;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform startParent;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Canvas startCanvas;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected CanvasGroup canvasGroup;

		[Token(Token = "0x140000D7")]
		public event UIDraggableItemEventHandler DraggableItemDropped
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x807B20", Offset = "0x807B20", VA = "0x807B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F154", Offset = "0x66F154")]
			add
			{
			}
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x807C0C", Offset = "0x807C0C", VA = "0x807C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F164", Offset = "0x66F164")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D8")]
		public event UIDraggableItemEventHandler DraggableItemReset
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x807CF8", Offset = "0x807CF8", VA = "0x807CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F174", Offset = "0x66F174")]
			add
			{
			}
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x807DE4", Offset = "0x807DE4", VA = "0x807DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F184", Offset = "0x66F184")]
			remove
			{
			}
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x807ED0", Offset = "0x807ED0", VA = "0x807ED0", Slot = "7")]
		public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x807EF4", Offset = "0x807EF4", VA = "0x807EF4", Slot = "8")]
		public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x807F18", Offset = "0x807F18", VA = "0x807F18", Slot = "9")]
		public virtual void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x808188", Offset = "0x808188", VA = "0x808188", Slot = "10")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x808198", Offset = "0x808198", VA = "0x808198", Slot = "11")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x80869C", Offset = "0x80869C", VA = "0x80869C", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x80890C", Offset = "0x80890C", VA = "0x80890C", Slot = "13")]
		protected virtual VRTK_UIPointer GetPointer(PointerEventData eventData)
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x808A00", Offset = "0x808A00", VA = "0x808A00", Slot = "14")]
		protected virtual void SetDragPosition(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x808DB0", Offset = "0x808DB0", VA = "0x808DB0", Slot = "15")]
		protected virtual void ResetElement()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x808EC4", Offset = "0x808EC4", VA = "0x808EC4", Slot = "16")]
		protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
		{
			return default(UIDraggableItemEventArgs);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x808ECC", Offset = "0x808ECC", VA = "0x808ECC")]
		public VRTK_UIDraggableItem()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649EEC", Offset = "0x649EEC")]
	public class VRTK_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_UIDraggableItem droppableItem;

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x808EE0", Offset = "0x808EE0", VA = "0x808EE0", Slot = "6")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x809014", Offset = "0x809014", VA = "0x809014", Slot = "7")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x8090A4", Offset = "0x8090A4", VA = "0x8090A4")]
		public VRTK_UIDropZone()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public struct UIPointerEventArgs
	{
		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isActive;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject currentTarget;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject previousTarget;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RaycastResult raycastResult;
	}
	[Token(Token = "0x20001B6")]
	public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649F24", Offset = "0x649F24")]
	public class VRTK_UIPointer : MonoBehaviour
	{
		[Token(Token = "0x200048F")]
		public enum ActivationMethods
		{
			[Token(Token = "0x400207A")]
			HoldButton,
			[Token(Token = "0x400207B")]
			ToggleButton,
			[Token(Token = "0x400207C")]
			AlwaysOn
		}

		[Token(Token = "0x2000490")]
		public enum ClickMethods
		{
			[Token(Token = "0x400207E")]
			ClickOnButtonUp,
			[Token(Token = "0x400207F")]
			ClickOnButtonDown
		}

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F668", Offset = "0x65F668")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F668", Offset = "0x65F668")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F6C8", Offset = "0x65F6C8")]
		public ActivationMethods activationMode;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F700", Offset = "0x65F700")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F700", Offset = "0x65F700")]
		public VRTK_ControllerEvents.ButtonAlias selectionButton;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F760", Offset = "0x65F760")]
		public ClickMethods clickMethod;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F798", Offset = "0x65F798")]
		public bool attemptClickOnDeactivate;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F7D0", Offset = "0x65F7D0")]
		public float clickAfterHoverDuration;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F808", Offset = "0x65F808")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F808", Offset = "0x65F808")]
		public float maximumLength;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F868", Offset = "0x65F868")]
		public GameObject attachedTo;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F8A0", Offset = "0x65F8A0")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F8D8", Offset = "0x65F8D8")]
		public Transform customOrigin;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F910", Offset = "0x65F910")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65F910", Offset = "0x65F910")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x65F910", Offset = "0x65F910")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65F980", Offset = "0x65F980")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x65F980", Offset = "0x65F980")]
		public Transform pointerOriginTransform;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65F9CC", Offset = "0x65F9CC")]
		public PointerEventData pointerEventData;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65F9DC", Offset = "0x65F9DC")]
		public GameObject hoveringElement;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65F9EC", Offset = "0x65F9EC")]
		public GameObject controllerRenderModel;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65F9FC", Offset = "0x65F9FC")]
		public float hoverDurationTimer;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65FA0C", Offset = "0x65FA0C")]
		public bool canClickOnHover;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65FA1C", Offset = "0x65FA1C")]
		public GameObject autoActivatingCanvas;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x65FA2C", Offset = "0x65FA2C")]
		public bool collisionClick;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Dictionary<int, float> pointerLengths;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool pointerClicked;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool beamEnabledState;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		protected bool lastPointerPressState;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		protected bool lastPointerClickState;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected GameObject currentTarget;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected SDK_BaseController.ControllerHand cachedAttachedHand;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Transform cachedPointerAttachPoint;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected EventSystem cachedEventSystem;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected VRTK_VRInputModule cachedVRInputModule;

		[Token(Token = "0x140000D9")]
		public event ControllerInteractionEventHandler ActivationButtonPressed
		{
			[Token(Token = "0x6001469")]
			[Address(RVA = "0x80A31C", Offset = "0x80A31C", VA = "0x80A31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F194", Offset = "0x66F194")]
			add
			{
			}
			[Token(Token = "0x600146A")]
			[Address(RVA = "0x80A408", Offset = "0x80A408", VA = "0x80A408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F1A4", Offset = "0x66F1A4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DA")]
		public event ControllerInteractionEventHandler ActivationButtonReleased
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0x80A4F4", Offset = "0x80A4F4", VA = "0x80A4F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F1B4", Offset = "0x66F1B4")]
			add
			{
			}
			[Token(Token = "0x600146C")]
			[Address(RVA = "0x80A5E0", Offset = "0x80A5E0", VA = "0x80A5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F1C4", Offset = "0x66F1C4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DB")]
		public event ControllerInteractionEventHandler SelectionButtonPressed
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0x80A6CC", Offset = "0x80A6CC", VA = "0x80A6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F1D4", Offset = "0x66F1D4")]
			add
			{
			}
			[Token(Token = "0x600146E")]
			[Address(RVA = "0x80A7B8", Offset = "0x80A7B8", VA = "0x80A7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F1E4", Offset = "0x66F1E4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DC")]
		public event ControllerInteractionEventHandler SelectionButtonReleased
		{
			[Token(Token = "0x600146F")]
			[Address(RVA = "0x80A8A4", Offset = "0x80A8A4", VA = "0x80A8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F1F4", Offset = "0x66F1F4")]
			add
			{
			}
			[Token(Token = "0x6001470")]
			[Address(RVA = "0x80A990", Offset = "0x80A990", VA = "0x80A990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F204", Offset = "0x66F204")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DD")]
		public event UIPointerEventHandler UIPointerElementEnter
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x80AA7C", Offset = "0x80AA7C", VA = "0x80AA7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F214", Offset = "0x66F214")]
			add
			{
			}
			[Token(Token = "0x6001472")]
			[Address(RVA = "0x80AB68", Offset = "0x80AB68", VA = "0x80AB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F224", Offset = "0x66F224")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DE")]
		public event UIPointerEventHandler UIPointerElementExit
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0x80AC54", Offset = "0x80AC54", VA = "0x80AC54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F234", Offset = "0x66F234")]
			add
			{
			}
			[Token(Token = "0x6001474")]
			[Address(RVA = "0x80AD40", Offset = "0x80AD40", VA = "0x80AD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F244", Offset = "0x66F244")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DF")]
		public event UIPointerEventHandler UIPointerElementClick
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0x80AE2C", Offset = "0x80AE2C", VA = "0x80AE2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F254", Offset = "0x66F254")]
			add
			{
			}
			[Token(Token = "0x6001476")]
			[Address(RVA = "0x80AF18", Offset = "0x80AF18", VA = "0x80AF18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F264", Offset = "0x66F264")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E0")]
		public event UIPointerEventHandler UIPointerElementDragStart
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0x80B004", Offset = "0x80B004", VA = "0x80B004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F274", Offset = "0x66F274")]
			add
			{
			}
			[Token(Token = "0x6001478")]
			[Address(RVA = "0x80B0F0", Offset = "0x80B0F0", VA = "0x80B0F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F284", Offset = "0x66F284")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E1")]
		public event UIPointerEventHandler UIPointerElementDragEnd
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0x80B1DC", Offset = "0x80B1DC", VA = "0x80B1DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F294", Offset = "0x66F294")]
			add
			{
			}
			[Token(Token = "0x600147A")]
			[Address(RVA = "0x80B2C8", Offset = "0x80B2C8", VA = "0x80B2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F2A4", Offset = "0x66F2A4")]
			remove
			{
			}
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x80A08C", Offset = "0x80A08C", VA = "0x80A08C")]
		public static float GetPointerLength(int pointerId)
		{
			return default(float);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x80B3B4", Offset = "0x80B3B4", VA = "0x80B3B4", Slot = "4")]
		public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x80B4C8", Offset = "0x80B4C8", VA = "0x80B4C8", Slot = "5")]
		public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x80B600", Offset = "0x80B600", VA = "0x80B600", Slot = "6")]
		public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x80B6D0", Offset = "0x80B6D0", VA = "0x80B6D0", Slot = "7")]
		public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x80B71C", Offset = "0x80B71C", VA = "0x80B71C", Slot = "8")]
		public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x80B768", Offset = "0x80B768", VA = "0x80B768", Slot = "9")]
		public virtual void OnActivationButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x80B7B4", Offset = "0x80B7B4", VA = "0x80B7B4", Slot = "10")]
		public virtual void OnActivationButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x80B800", Offset = "0x80B800", VA = "0x80B800", Slot = "11")]
		public virtual void OnSelectionButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x80B84C", Offset = "0x80B84C", VA = "0x80B84C", Slot = "12")]
		public virtual void OnSelectionButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x80B898", Offset = "0x80B898", VA = "0x80B898", Slot = "13")]
		public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
		{
			return default(UIPointerEventArgs);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x80B92C", Offset = "0x80B92C", VA = "0x80B92C", Slot = "14")]
		public virtual VRTK_VRInputModule SetEventSystem(EventSystem eventSystem)
		{
			return null;
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x80BB38", Offset = "0x80BB38", VA = "0x80BB38", Slot = "15")]
		public virtual void RemoveEventSystem()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x80BCE0", Offset = "0x80BCE0", VA = "0x80BCE0", Slot = "16")]
		public virtual bool PointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x80BE50", Offset = "0x80BE50", VA = "0x80BE50", Slot = "17")]
		public virtual bool IsActivationButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x80BF00", Offset = "0x80BF00", VA = "0x80BF00", Slot = "18")]
		public virtual bool IsSelectionButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x80BFB0", Offset = "0x80BFB0", VA = "0x80BFB0", Slot = "19")]
		public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x80C038", Offset = "0x80C038", VA = "0x80C038", Slot = "20")]
		public virtual Vector3 GetOriginPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x80C0E8", Offset = "0x80C0E8", VA = "0x80C0E8", Slot = "21")]
		public virtual Vector3 GetOriginForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x80C198", Offset = "0x80C198", VA = "0x80C198", Slot = "22")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x80C200", Offset = "0x80C200", VA = "0x80C200", Slot = "23")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x80C588", Offset = "0x80C588", VA = "0x80C588", Slot = "24")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x80C818", Offset = "0x80C818", VA = "0x80C818", Slot = "25")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x80C880", Offset = "0x80C880", VA = "0x80C880", Slot = "26")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x80CAA8", Offset = "0x80CAA8", VA = "0x80CAA8", Slot = "27")]
		protected virtual void DoActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x80CB30", Offset = "0x80CB30", VA = "0x80CB30", Slot = "28")]
		protected virtual void DoActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x80CBB8", Offset = "0x80CBB8", VA = "0x80CBB8", Slot = "29")]
		protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x80CC40", Offset = "0x80CC40", VA = "0x80CC40", Slot = "30")]
		protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x80CCC8", Offset = "0x80CCC8", VA = "0x80CCC8", Slot = "31")]
		protected virtual VRTK_ControllerReference GetControllerReference([Optional] GameObject reference)
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x80CDC0", Offset = "0x80CDC0", VA = "0x80CDC0", Slot = "32")]
		protected virtual Transform GetPointerOriginTransform()
		{
			return null;
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x80CFE0", Offset = "0x80CFE0", VA = "0x80CFE0", Slot = "33")]
		protected virtual void ResetHoverTimer()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x80CFEC", Offset = "0x80CFEC", VA = "0x80CFEC", Slot = "34")]
		protected virtual void ConfigureEventSystem()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x80D1F4", Offset = "0x80D1F4", VA = "0x80D1F4")]
		public VRTK_UIPointer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B8")]
	public class VRTK_ControllerElementHighlighters
	{
		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FACC", Offset = "0x65FACC")]
		public VRTK_BaseHighlighter body;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FB04", Offset = "0x65FB04")]
		public VRTK_BaseHighlighter trigger;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FB3C", Offset = "0x65FB3C")]
		public VRTK_BaseHighlighter gripLeft;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FB74", Offset = "0x65FB74")]
		public VRTK_BaseHighlighter gripRight;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FBAC", Offset = "0x65FBAC")]
		public VRTK_BaseHighlighter touchpad;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FBE4", Offset = "0x65FBE4")]
		public VRTK_BaseHighlighter touchpadTwo;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FC1C", Offset = "0x65FC1C")]
		public VRTK_BaseHighlighter buttonOne;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FC54", Offset = "0x65FC54")]
		public VRTK_BaseHighlighter buttonTwo;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FC8C", Offset = "0x65FC8C")]
		public VRTK_BaseHighlighter systemMenu;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FCC4", Offset = "0x65FCC4")]
		public VRTK_BaseHighlighter startMenu;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xD9D6C0", Offset = "0xD9D6C0", VA = "0xD9D6C0")]
		public VRTK_ControllerElementHighlighters()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B9")]
	public class VRTK_ControllerModelElementPaths
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FCFC", Offset = "0x65FCFC")]
		public string bodyModelPath;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FD34", Offset = "0x65FD34")]
		public string triggerModelPath;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FD6C", Offset = "0x65FD6C")]
		public string leftGripModelPath;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FDA4", Offset = "0x65FDA4")]
		public string rightGripModelPath;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FDDC", Offset = "0x65FDDC")]
		public string touchpadModelPath;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FE14", Offset = "0x65FE14")]
		public string touchpadTwoModelPath;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FE4C", Offset = "0x65FE4C")]
		public string buttonOneModelPath;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FE84", Offset = "0x65FE84")]
		public string buttonTwoModelPath;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FEBC", Offset = "0x65FEBC")]
		public string systemMenuModelPath;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FEF4", Offset = "0x65FEF4")]
		public string startMenuModelPath;

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xDAC170", Offset = "0xDAC170", VA = "0xDAC170")]
		public VRTK_ControllerModelElementPaths()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public abstract class VRTK_ObjectFollow : MonoBehaviour
	{
		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65FF2C", Offset = "0x65FF2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FF2C", Offset = "0x65FF2C")]
		public GameObject gameObjectToFollow;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FF8C", Offset = "0x65FF8C")]
		public GameObject gameObjectToChange;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65FFC4", Offset = "0x65FFC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FFC4", Offset = "0x65FFC4")]
		public bool followsPosition;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660024", Offset = "0x660024")]
		public bool smoothsPosition;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66005C", Offset = "0x66005C")]
		public float maxAllowedPerFrameDistanceDifference;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660094", Offset = "0x660094")]
		private Vector3 <targetPosition>k__BackingField;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6600A4", Offset = "0x6600A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6600A4", Offset = "0x6600A4")]
		public bool followsRotation;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660104", Offset = "0x660104")]
		public bool smoothsRotation;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66013C", Offset = "0x66013C")]
		public float maxAllowedPerFrameAngleDifference;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660174", Offset = "0x660174")]
		private Quaternion <targetRotation>k__BackingField;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660184", Offset = "0x660184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660184", Offset = "0x660184")]
		public bool followsScale;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6601E4", Offset = "0x6601E4")]
		public bool smoothsScale;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66021C", Offset = "0x66021C")]
		public float maxAllowedPerFrameSizeDifference;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660254", Offset = "0x660254")]
		private Vector3 <targetScale>k__BackingField;

		[Token(Token = "0x170000DF")]
		public Vector3 targetPosition
		{
			[Token(Token = "0x600149F")]
			[Address(RVA = "0xA1E92C", Offset = "0xA1E92C", VA = "0xA1E92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F2B4", Offset = "0x66F2B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xA1E938", Offset = "0xA1E938", VA = "0xA1E938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F2C4", Offset = "0x66F2C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public Quaternion targetRotation
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xA1E944", Offset = "0xA1E944", VA = "0xA1E944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F2D4", Offset = "0x66F2D4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0xA1E950", Offset = "0xA1E950", VA = "0xA1E950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F2E4", Offset = "0x66F2E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public Vector3 targetScale
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xA1E95C", Offset = "0xA1E95C", VA = "0xA1E95C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F2F4", Offset = "0x66F2F4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0xA1E968", Offset = "0xA1E968", VA = "0xA1E968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F304", Offset = "0x66F304")]
			private set
			{
			}
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xA1E974", Offset = "0xA1E974", VA = "0xA1E974", Slot = "4")]
		public virtual void Follow()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xA1EA44", Offset = "0xA1EA44", VA = "0xA1EA44", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xA1EAD4", Offset = "0xA1EAD4", VA = "0xA1EAD4", Slot = "6")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x60014A8")]
		protected abstract Vector3 GetPositionToFollow();

		[Token(Token = "0x60014A9")]
		protected abstract void SetPositionOnGameObject(Vector3 newPosition);

		[Token(Token = "0x60014AA")]
		protected abstract Quaternion GetRotationToFollow();

		[Token(Token = "0x60014AB")]
		protected abstract void SetRotationOnGameObject(Quaternion newRotation);

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xA1EB84", Offset = "0xA1EB84", VA = "0xA1EB84", Slot = "11")]
		protected virtual Vector3 GetScaleToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xA1EBCC", Offset = "0xA1EBCC", VA = "0xA1EBCC", Slot = "12")]
		protected virtual void SetScaleOnGameObject(Vector3 newScale)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xA1EC3C", Offset = "0xA1EC3C", VA = "0xA1EC3C", Slot = "13")]
		protected virtual void FollowPosition()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xA1ED84", Offset = "0xA1ED84", VA = "0xA1ED84", Slot = "14")]
		protected virtual void FollowRotation()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xA1EEF4", Offset = "0xA1EEF4", VA = "0xA1EEF4", Slot = "15")]
		protected virtual void FollowScale()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xA1F03C", Offset = "0xA1F03C", VA = "0xA1F03C")]
		protected VRTK_ObjectFollow()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649F5C", Offset = "0x649F5C")]
	public class VRTK_RigidbodyFollow : VRTK_ObjectFollow
	{
		[Token(Token = "0x2000491")]
		public enum MovementOption
		{
			[Token(Token = "0x4002081")]
			Set,
			[Token(Token = "0x4002082")]
			Move,
			[Token(Token = "0x4002083")]
			Add,
			[Token(Token = "0x4002084")]
			Track
		}

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660264", Offset = "0x660264")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660264", Offset = "0x660264")]
		public MovementOption movementOption;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6602C4", Offset = "0x6602C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6602C4", Offset = "0x6602C4")]
		public float trackMaxDistance;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Rigidbody rigidbodyToFollow;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody rigidbodyToChange;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float maxDistanceDelta;

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xA3277C", Offset = "0xA3277C", VA = "0xA3277C", Slot = "4")]
		public override void Follow()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xA327AC", Offset = "0xA327AC", VA = "0xA327AC", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xA327B4", Offset = "0xA327B4", VA = "0xA327B4", Slot = "17")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xA327C0", Offset = "0xA327C0", VA = "0xA327C0", Slot = "18")]
		protected virtual void CacheRigidbodies()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xA32918", Offset = "0xA32918", VA = "0xA32918", Slot = "7")]
		protected override Vector3 GetPositionToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xA329D8", Offset = "0xA329D8", VA = "0xA329D8", Slot = "9")]
		protected override Quaternion GetRotationToFollow()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xA32A98", Offset = "0xA32A98", VA = "0xA32A98", Slot = "11")]
		protected override Vector3 GetScaleToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xA32B70", Offset = "0xA32B70", VA = "0xA32B70", Slot = "8")]
		protected override void SetPositionOnGameObject(Vector3 newPosition)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xA32D4C", Offset = "0xA32D4C", VA = "0xA32D4C", Slot = "10")]
		protected override void SetRotationOnGameObject(Quaternion newRotation)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xA32F3C", Offset = "0xA32F3C", VA = "0xA32F3C", Slot = "19")]
		protected virtual void TrackPosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xA33250", Offset = "0xA33250", VA = "0xA33250", Slot = "20")]
		protected virtual void TrackRotation(Quaternion newRotation)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xA33494", Offset = "0xA33494", VA = "0xA33494")]
		public VRTK_RigidbodyFollow()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649F94", Offset = "0x649F94")]
	public class VRTK_TransformFollow : VRTK_ObjectFollow
	{
		[Token(Token = "0x2000492")]
		public enum FollowMoment
		{
			[Token(Token = "0x4002086")]
			OnFixedUpdate,
			[Token(Token = "0x4002087")]
			OnUpdate,
			[Token(Token = "0x4002088")]
			OnLateUpdate,
			[Token(Token = "0x4002089")]
			OnPreRender,
			[Token(Token = "0x400208A")]
			OnPreCull
		}

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660324", Offset = "0x660324")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660324", Offset = "0x660324")]
		[SerializeField]
		private FollowMoment _moment;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform transformToFollow;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Transform transformToChange;

		[Token(Token = "0x170000E2")]
		public FollowMoment moment
		{
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x80438C", Offset = "0x80438C", VA = "0x80438C")]
			get
			{
				return default(FollowMoment);
			}
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0x804394", Offset = "0x804394", VA = "0x804394")]
			set
			{
			}
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x804724", Offset = "0x804724", VA = "0x804724", Slot = "4")]
		public override void Follow()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x804758", Offset = "0x804758", VA = "0x804758", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x804930", Offset = "0x804930", VA = "0x804930", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x804AF0", Offset = "0x804AF0", VA = "0x804AF0")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x804B08", Offset = "0x804B08", VA = "0x804B08")]
		protected void Update()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x804B24", Offset = "0x804B24", VA = "0x804B24", Slot = "17")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x804B40", Offset = "0x804B40", VA = "0x804B40", Slot = "18")]
		protected virtual void OnCamPreRender(Camera cam)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x804C44", Offset = "0x804C44", VA = "0x804C44", Slot = "19")]
		protected virtual void OnCamPreCull(Camera cam)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x804D48", Offset = "0x804D48", VA = "0x804D48", Slot = "7")]
		protected override Vector3 GetPositionToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x804D78", Offset = "0x804D78", VA = "0x804D78", Slot = "8")]
		protected override void SetPositionOnGameObject(Vector3 newPosition)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x804DD0", Offset = "0x804DD0", VA = "0x804DD0", Slot = "9")]
		protected override Quaternion GetRotationToFollow()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x804E00", Offset = "0x804E00", VA = "0x804E00", Slot = "10")]
		protected override void SetRotationOnGameObject(Quaternion newRotation)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x804E60", Offset = "0x804E60", VA = "0x804E60", Slot = "20")]
		protected virtual void CacheTransforms()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x804FB0", Offset = "0x804FB0", VA = "0x804FB0")]
		public VRTK_TransformFollow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BD")]
	public sealed class VRTK_SDKInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660394", Offset = "0x660394")]
		private Type <type>k__BackingField;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6603A4", Offset = "0x6603A4")]
		private string <originalTypeNameWhenFallbackIsUsed>k__BackingField;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6603B4", Offset = "0x6603B4")]
		private SDK_DescriptionAttribute <description>k__BackingField;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string baseTypeName;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string fallbackTypeName;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string typeName;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int descriptionIndex;

		[Token(Token = "0x170000E3")]
		public Type type
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xA35550", Offset = "0xA35550", VA = "0xA35550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F314", Offset = "0x66F314")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xA35558", Offset = "0xA35558", VA = "0xA35558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F324", Offset = "0x66F324")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public string originalTypeNameWhenFallbackIsUsed
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xA35560", Offset = "0xA35560", VA = "0xA35560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F334", Offset = "0x66F334")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xA35568", Offset = "0xA35568", VA = "0xA35568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F344", Offset = "0x66F344")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public SDK_DescriptionAttribute description
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xA35570", Offset = "0xA35570", VA = "0xA35570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F354", Offset = "0x66F354")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xA35578", Offset = "0xA35578", VA = "0xA35578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F364", Offset = "0x66F364")]
			private set
			{
			}
		}

		[Token(Token = "0x60014D4")]
		public static VRTK_SDKInfo[] Create<BaseType, FallbackType, ActualType>() where BaseType : SDK_Base where FallbackType : BaseType where ActualType : BaseType
		{
			return null;
		}

		[Token(Token = "0x60014D5")]
		public static VRTK_SDKInfo[] Create<BaseType, FallbackType>(Type actualType) where BaseType : SDK_Base where FallbackType : BaseType
		{
			return null;
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xA35580", Offset = "0xA35580", VA = "0xA35580")]
		private VRTK_SDKInfo()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xA35588", Offset = "0xA35588", VA = "0xA35588")]
		public VRTK_SDKInfo(VRTK_SDKInfo infoToCopy)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xA35688", Offset = "0xA35688", VA = "0xA35688")]
		private void SetUp(Type baseType, Type fallbackType, string actualTypeName, int descriptionIndex)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xA35DE0", Offset = "0xA35DE0", VA = "0xA35DE0", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xA35DE4", Offset = "0xA35DE4", VA = "0xA35DE4", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xA35EC8", Offset = "0xA35EC8", VA = "0xA35EC8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xA36008", Offset = "0xA36008", VA = "0xA36008")]
		public bool Equals(VRTK_SDKInfo other)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xA3600C", Offset = "0xA3600C", VA = "0xA3600C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xA35F4C", Offset = "0xA35F4C", VA = "0xA35F4C")]
		public static bool operator ==(VRTK_SDKInfo x, VRTK_SDKInfo y)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xA36040", Offset = "0xA36040", VA = "0xA36040")]
		public static bool operator !=(VRTK_SDKInfo x, VRTK_SDKInfo y)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001BE")]
	public sealed class VRTK_SDKManager : MonoBehaviour
	{
		[Token(Token = "0x2000493")]
		public sealed class ScriptingDefineSymbolPredicateInfo
		{
			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly SDK_ScriptingDefineSymbolPredicateAttribute attribute;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly MethodInfo methodInfo;

			[Token(Token = "0x6002302")]
			[Address(RVA = "0x9B6D44", Offset = "0x9B6D44", VA = "0x9B6D44")]
			public ScriptingDefineSymbolPredicateInfo(SDK_ScriptingDefineSymbolPredicateAttribute attribute, MethodInfo methodInfo)
			{
			}
		}

		[Token(Token = "0x2000494")]
		public struct LoadedSetupChangeEventArgs
		{
			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly VRTK_SDKSetup previousSetup;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly VRTK_SDKSetup currentSetup;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string errorMessage;

			[Token(Token = "0x6002303")]
			[Address(RVA = "0x6E9860", Offset = "0x6E9860", VA = "0x6E9860")]
			public LoadedSetupChangeEventArgs(VRTK_SDKSetup previousSetup, VRTK_SDKSetup currentSetup, string errorMessage)
			{
			}
		}

		[Token(Token = "0x2000495")]
		public delegate void LoadedSetupChangeEventHandler(VRTK_SDKManager sender, LoadedSetupChangeEventArgs e);

		[Serializable]
		[Token(Token = "0x2000496")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D928", Offset = "0x64D928")]
		private sealed class <>c
		{
			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<VRTK_SDKSetup> <>9__83_0;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<VRTK_SDKSetup> <>9__83_1;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, bool> <>9__83_3;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<VRTK_SDKSetup> <>9__83_2;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<VRTK_SDKSetup, bool> <>9__84_1;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<VRTK_SDKSetup, bool> <>9__84_0;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<VRTK_SDKSetup, bool> <>9__84_3;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<VRTK_SDKSetup, IEnumerable<string>> <>9__84_4;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Comparison<ScriptingDefineSymbolPredicateInfo> <>9__96_0;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<ScriptingDefineSymbolPredicateInfo, bool> <>9__97_0;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<ScriptingDefineSymbolPredicateInfo, string> <>9__97_1;

			[Token(Token = "0x6002309")]
			[Address(RVA = "0x9B64C0", Offset = "0x9B64C0", VA = "0x9B64C0")]
			public <>c()
			{
			}

			[Token(Token = "0x600230A")]
			[Address(RVA = "0x9B64C8", Offset = "0x9B64C8", VA = "0x9B64C8")]
			internal bool <TryLoadSDKSetupFromList>b__83_0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x600230B")]
			[Address(RVA = "0x9B66C0", Offset = "0x9B66C0", VA = "0x9B66C0")]
			internal bool <TryLoadSDKSetupFromList>b__83_1(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x600230C")]
			[Address(RVA = "0x9B6734", Offset = "0x9B6734", VA = "0x9B6734")]
			internal bool <TryLoadSDKSetupFromList>b__83_2(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x600230D")]
			[Address(RVA = "0x9B6840", Offset = "0x9B6840", VA = "0x9B6840")]
			internal bool <TryLoadSDKSetupFromList>b__83_3(string vrDeviceName)
			{
				return default(bool);
			}

			[Token(Token = "0x600230E")]
			[Address(RVA = "0x9B6894", Offset = "0x9B6894", VA = "0x9B6894")]
			internal bool <TryLoadSDKSetup>b__84_1(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x600230F")]
			[Address(RVA = "0x9B68CC", Offset = "0x9B68CC", VA = "0x9B68CC")]
			internal bool <TryLoadSDKSetup>b__84_0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x6002310")]
			[Address(RVA = "0x9B68F8", Offset = "0x9B68F8", VA = "0x9B68F8")]
			internal bool <TryLoadSDKSetup>b__84_3(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x6002311")]
			[Address(RVA = "0x9B6A14", Offset = "0x9B6A14", VA = "0x9B6A14")]
			internal IEnumerable<string> <TryLoadSDKSetup>b__84_4(VRTK_SDKSetup setup)
			{
				return null;
			}

			[Token(Token = "0x6002312")]
			[Address(RVA = "0x9B6A40", Offset = "0x9B6A40", VA = "0x9B6A40")]
			internal int <PopulateAvailableScriptingDefineSymbolPredicateInfos>b__96_0(ScriptingDefineSymbolPredicateInfo x, ScriptingDefineSymbolPredicateInfo y)
			{
				return default(int);
			}

			[Token(Token = "0x6002313")]
			[Address(RVA = "0x9B6AAC", Offset = "0x9B6AAC", VA = "0x9B6AAC")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__97_0(ScriptingDefineSymbolPredicateInfo predicateInfo)
			{
				return default(bool);
			}

			[Token(Token = "0x6002314")]
			[Address(RVA = "0x9B6BA0", Offset = "0x9B6BA0", VA = "0x9B6BA0")]
			internal string <PopulateAvailableAndInstalledSDKInfos>b__97_1(ScriptingDefineSymbolPredicateInfo predicateInfo)
			{
				return null;
			}
		}

		[Token(Token = "0x2000497")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D938", Offset = "0x64D938")]
		private sealed class <>c__DisplayClass84_0
		{
			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string loadedDeviceName;

			[Token(Token = "0x6002315")]
			[Address(RVA = "0x9B382C", Offset = "0x9B382C", VA = "0x9B382C")]
			public <>c__DisplayClass84_0()
			{
			}

			[Token(Token = "0x6002316")]
			[Address(RVA = "0x9B6BDC", Offset = "0x9B6BDC", VA = "0x9B6BDC")]
			internal bool <TryLoadSDKSetup>b__2(VRTK_SDKSetup setup)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D948", Offset = "0x64D948")]
		private sealed class <>c__DisplayClass91_0
		{
			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string loadedDeviceName;

			[Token(Token = "0x6002317")]
			[Address(RVA = "0x9B6C58", Offset = "0x9B6C58", VA = "0x9B6C58")]
			public <>c__DisplayClass91_0()
			{
			}

			[Token(Token = "0x6002318")]
			[Address(RVA = "0x9B6C60", Offset = "0x9B6C60", VA = "0x9B6C60")]
			internal bool <FinishSDKSetupLoading>b__0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000499")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D958", Offset = "0x64D958")]
		private sealed class <FinishSDKSetupLoading>d__91 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass91_0 <>8__1;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_SDKManager <>4__this;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_SDKSetup[] sdkSetups;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public VRTK_SDKSetup previousLoadedSetup;

			[Token(Token = "0x170002BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600231C")]
				[Address(RVA = "0x9B7E34", Offset = "0x9B7E34", VA = "0x9B7E34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600231E")]
				[Address(RVA = "0x9B7EA4", Offset = "0x9B7EA4", VA = "0x9B7EA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002319")]
			[Address(RVA = "0x9B6124", Offset = "0x9B6124", VA = "0x9B6124")]
			[DebuggerHidden]
			public <FinishSDKSetupLoading>d__91(int <>1__state)
			{
			}

			[Token(Token = "0x600231A")]
			[Address(RVA = "0x9B7544", Offset = "0x9B7544", VA = "0x9B7544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600231B")]
			[Address(RVA = "0x9B7548", Offset = "0x9B7548", VA = "0x9B7548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600231D")]
			[Address(RVA = "0x9B7E3C", Offset = "0x9B7E3C", VA = "0x9B7E3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D968", Offset = "0x64D968")]
		private sealed class <CheckLeftControllerReady>d__93 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SDKManager <>4__this;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <delayInstruction>5__2;

			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <maxCheckTime>5__3;

			[Token(Token = "0x170002BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002322")]
				[Address(RVA = "0x9B71A8", Offset = "0x9B71A8", VA = "0x9B71A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002324")]
				[Address(RVA = "0x9B7218", Offset = "0x9B7218", VA = "0x9B7218", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600231F")]
			[Address(RVA = "0x9B62B4", Offset = "0x9B62B4", VA = "0x9B62B4")]
			[DebuggerHidden]
			public <CheckLeftControllerReady>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x6002320")]
			[Address(RVA = "0x9B6D7C", Offset = "0x9B6D7C", VA = "0x9B6D7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002321")]
			[Address(RVA = "0x9B6D80", Offset = "0x9B6D80", VA = "0x9B6D80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002323")]
			[Address(RVA = "0x9B71B0", Offset = "0x9B71B0", VA = "0x9B71B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D978", Offset = "0x64D978")]
		private sealed class <CheckRightControllerReady>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SDKManager <>4__this;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <delayInstruction>5__2;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <maxCheckTime>5__3;

			[Token(Token = "0x170002C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002328")]
				[Address(RVA = "0x9B74CC", Offset = "0x9B74CC", VA = "0x9B74CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600232A")]
				[Address(RVA = "0x9B753C", Offset = "0x9B753C", VA = "0x9B753C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002325")]
			[Address(RVA = "0x9B62E0", Offset = "0x9B62E0", VA = "0x9B62E0")]
			[DebuggerHidden]
			public <CheckRightControllerReady>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6002326")]
			[Address(RVA = "0x9B7220", Offset = "0x9B7220", VA = "0x9B7220", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002327")]
			[Address(RVA = "0x9B7224", Offset = "0x9B7224", VA = "0x9B7224", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002329")]
			[Address(RVA = "0x9B74D4", Offset = "0x9B74D4", VA = "0x9B74D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D988", Offset = "0x64D988")]
		private sealed class <>c__DisplayClass96_0
		{
			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MethodInfo methodInfo;

			[Token(Token = "0x600232B")]
			[Address(RVA = "0x9B6360", Offset = "0x9B6360", VA = "0x9B6360")]
			public <>c__DisplayClass96_0()
			{
			}

			[Token(Token = "0x600232C")]
			[Address(RVA = "0x9B6CD0", Offset = "0x9B6CD0", VA = "0x9B6CD0")]
			internal ScriptingDefineSymbolPredicateInfo <PopulateAvailableScriptingDefineSymbolPredicateInfos>b__1(SDK_ScriptingDefineSymbolPredicateAttribute predicateAttribute)
			{
				return null;
			}
		}

		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D998", Offset = "0x64D998")]
		private sealed class <>c__DisplayClass98_0<BaseType, FallbackType> where BaseType : SDK_Base where FallbackType : BaseType
		{
			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type baseType;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type fallbackType;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ICollection<string> symbolsOfInstalledSDKs;

			[Token(Token = "0x600232D")]
			public <>c__DisplayClass98_0()
			{
			}

			[Token(Token = "0x600232E")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__0(Type type)
			{
				return default(bool);
			}

			[Token(Token = "0x600232F")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__2(VRTK_SDKInfo info)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D9A8", Offset = "0x64D9A8")]
		private sealed class <>c__98<BaseType, FallbackType> where BaseType : SDK_Base where FallbackType : BaseType
		{
			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__98<BaseType, FallbackType> <>9;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<VRTK_SDKInfo> <>9__98_1;

			[Token(Token = "0x6002331")]
			public <>c__98()
			{
			}

			[Token(Token = "0x6002332")]
			internal int <PopulateAvailableAndInstalledSDKInfos>b__98_1(VRTK_SDKInfo x, VRTK_SDKInfo y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660404", Offset = "0x660404")]
		private static ReadOnlyCollection<ScriptingDefineSymbolPredicateInfo> <AvailableScriptingDefineSymbolPredicateInfos>k__BackingField;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<Type, Type> SDKFallbackTypesByBaseType;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660414", Offset = "0x660414")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableSystemSDKInfos>k__BackingField;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660424", Offset = "0x660424")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableBoundariesSDKInfos>k__BackingField;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660434", Offset = "0x660434")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableHeadsetSDKInfos>k__BackingField;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660444", Offset = "0x660444")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableControllerSDKInfos>k__BackingField;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660454", Offset = "0x660454")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledSystemSDKInfos>k__BackingField;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660464", Offset = "0x660464")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledBoundariesSDKInfos>k__BackingField;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660474", Offset = "0x660474")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledHeadsetSDKInfos>k__BackingField;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660484", Offset = "0x660484")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledControllerSDKInfos>k__BackingField;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static HashSet<Behaviour> delayedToggleBehaviours;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static VRTK_SDKManager _instance;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660494", Offset = "0x660494")]
		public bool autoManageScriptDefines;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SDK_ScriptingDefineSymbolPredicateAttribute> activeScriptingDefineSymbolsWithoutSDKClasses;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6604CC", Offset = "0x6604CC")]
		public GameObject scriptAliasLeftController;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660504", Offset = "0x660504")]
		public GameObject scriptAliasRightController;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66053C", Offset = "0x66053C")]
		public bool autoManageVRSettings;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660574", Offset = "0x660574")]
		public bool autoLoadSetup;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6605AC", Offset = "0x6605AC")]
		public VRTK_SDKSetup[] setups;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6605E4", Offset = "0x6605E4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6605E4", Offset = "0x6605E4")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x6605E4", Offset = "0x6605E4")]
		public bool persistOnLoad;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRTK_SDKSetup _loadedSetup;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static HashSet<VRTK_SDKInfo> _previouslyUsedSetupInfos;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660654", Offset = "0x660654")]
		private ReadOnlyCollection<Behaviour> <behavioursToToggleOnLoadedSetupChange>k__BackingField;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Behaviour> _behavioursToToggleOnLoadedSetupChange;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<Behaviour, bool> _behavioursInitialState;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine checkLeftControllerReadyRoutine;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine checkRightControllerReadyRoutine;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float checkControllerReadyDelay;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int checkControllerValidTimer;

		[Token(Token = "0x170000E6")]
		public static ReadOnlyCollection<ScriptingDefineSymbolPredicateInfo> AvailableScriptingDefineSymbolPredicateInfos
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x9B0DC8", Offset = "0x9B0DC8", VA = "0x9B0DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F374", Offset = "0x66F374")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0x9B0E30", Offset = "0x9B0E30", VA = "0x9B0E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F384", Offset = "0x66F384")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableSystemSDKInfos
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x9B0E9C", Offset = "0x9B0E9C", VA = "0x9B0E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F394", Offset = "0x66F394")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x9B0F04", Offset = "0x9B0F04", VA = "0x9B0F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F3A4", Offset = "0x66F3A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableBoundariesSDKInfos
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x9B0F70", Offset = "0x9B0F70", VA = "0x9B0F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F3B4", Offset = "0x66F3B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x9B0FD8", Offset = "0x9B0FD8", VA = "0x9B0FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F3C4", Offset = "0x66F3C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableHeadsetSDKInfos
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x9B1044", Offset = "0x9B1044", VA = "0x9B1044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F3D4", Offset = "0x66F3D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x9B10AC", Offset = "0x9B10AC", VA = "0x9B10AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F3E4", Offset = "0x66F3E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableControllerSDKInfos
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x9B1118", Offset = "0x9B1118", VA = "0x9B1118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F3F4", Offset = "0x66F3F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x9B1180", Offset = "0x9B1180", VA = "0x9B1180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F404", Offset = "0x66F404")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledSystemSDKInfos
		{
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x9B11EC", Offset = "0x9B11EC", VA = "0x9B11EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F414", Offset = "0x66F414")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x9B1254", Offset = "0x9B1254", VA = "0x9B1254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F424", Offset = "0x66F424")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledBoundariesSDKInfos
		{
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x9B12C0", Offset = "0x9B12C0", VA = "0x9B12C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F434", Offset = "0x66F434")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x9B1328", Offset = "0x9B1328", VA = "0x9B1328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F444", Offset = "0x66F444")]
			private set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledHeadsetSDKInfos
		{
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x9B1394", Offset = "0x9B1394", VA = "0x9B1394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F454", Offset = "0x66F454")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x9B13FC", Offset = "0x9B13FC", VA = "0x9B13FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F464", Offset = "0x66F464")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledControllerSDKInfos
		{
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x9B1468", Offset = "0x9B1468", VA = "0x9B1468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F474", Offset = "0x66F474")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x9B14D0", Offset = "0x9B14D0", VA = "0x9B14D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F484", Offset = "0x66F484")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public static VRTK_SDKManager instance
		{
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x9B153C", Offset = "0x9B153C", VA = "0x9B153C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public VRTK_SDKSetup loadedSetup
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x9B21B4", Offset = "0x9B21B4", VA = "0x9B21B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x9B380C", Offset = "0x9B380C", VA = "0x9B380C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public ReadOnlyCollection<Behaviour> behavioursToToggleOnLoadedSetupChange
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x9B3814", Offset = "0x9B3814", VA = "0x9B3814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F494", Offset = "0x66F494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001501")]
			[Address(RVA = "0x9B381C", Offset = "0x9B381C", VA = "0x9B381C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F4A4", Offset = "0x66F4A4")]
			private set
			{
			}
		}

		[Token(Token = "0x140000E2")]
		public event LoadedSetupChangeEventHandler LoadedSetupChanged
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x9B1F34", Offset = "0x9B1F34", VA = "0x9B1F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F4B4", Offset = "0x66F4B4")]
			add
			{
			}
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x9B20C8", Offset = "0x9B20C8", VA = "0x9B20C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F4C4", Offset = "0x66F4C4")]
			remove
			{
			}
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x9B1844", Offset = "0x9B1844", VA = "0x9B1844")]
		public static bool ValidInstance()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x9B18D8", Offset = "0x9B18D8", VA = "0x9B18D8")]
		public static bool AttemptAddBehaviourToToggleOnLoadedSetupChange(Behaviour givenBehaviour)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x9B1B38", Offset = "0x9B1B38", VA = "0x9B1B38")]
		public static bool AttemptRemoveBehaviourToToggleOnLoadedSetupChange(Behaviour givenBehaviour)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x9B1C88", Offset = "0x9B1C88", VA = "0x9B1C88")]
		public static void ProcessDelayedToggleBehaviours()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x9B1E8C", Offset = "0x9B1E8C", VA = "0x9B1E8C")]
		public static bool SubscribeLoadedSetupChanged(LoadedSetupChangeEventHandler callback)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x9B2020", Offset = "0x9B2020", VA = "0x9B2020")]
		public static bool UnsubscribeLoadedSetupChanged(LoadedSetupChangeEventHandler callback)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x9B0BF0", Offset = "0x9B0BF0", VA = "0x9B0BF0")]
		public static VRTK_SDKSetup GetLoadedSDKSetup()
		{
			return null;
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x9B2308", Offset = "0x9B2308", VA = "0x9B2308")]
		public static VRTK_SDKSetup[] GetAllSDKSetups()
		{
			return null;
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x9B23B0", Offset = "0x9B23B0", VA = "0x9B23B0")]
		public static bool AttemptTryLoadSDKSetup(int startIndex, bool tryToReinitialize, params VRTK_SDKSetup[] sdkSetups)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x9B2F70", Offset = "0x9B2F70", VA = "0x9B2F70")]
		public static bool AttemptTryLoadSDKSetupFromList(bool tryUseLastLoadedSetup = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x9B33AC", Offset = "0x9B33AC", VA = "0x9B33AC")]
		public static bool AttemptUnloadSDKSetup(bool disableVR = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x9B19C8", Offset = "0x9B19C8", VA = "0x9B19C8")]
		public void AddBehaviourToToggleOnLoadedSetupChange(Behaviour behaviour)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x9B1C18", Offset = "0x9B1C18", VA = "0x9B1C18")]
		public void RemoveBehaviourToToggleOnLoadedSetupChange(Behaviour behaviour)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x9B3018", Offset = "0x9B3018", VA = "0x9B3018")]
		public void TryLoadSDKSetupFromList(bool tryUseLastLoadedSetup = true)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x9B2470", Offset = "0x9B2470", VA = "0x9B2470")]
		public void TryLoadSDKSetup(int startIndex, bool tryToReinitialize, params VRTK_SDKSetup[] sdkSetups)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x9B3454", Offset = "0x9B3454", VA = "0x9B3454")]
		public void UnloadSDKSetup(bool disableVR = false)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x9B4788", Offset = "0x9B4788", VA = "0x9B4788")]
		static VRTK_SDKManager()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x9B5410", Offset = "0x9B5410", VA = "0x9B5410")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x9B54E0", Offset = "0x9B54E0", VA = "0x9B54E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x9B1664", Offset = "0x9B1664", VA = "0x9B1664")]
		private void CreateInstance()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x9B4728", Offset = "0x9B4728", VA = "0x9B4728")]
		private void OnLoadedSetupChanged(LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x9B4670", Offset = "0x9B4670", VA = "0x9B4670")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66F4D4", Offset = "0x66F4D4")]
		private IEnumerator FinishSDKSetupLoading(VRTK_SDKSetup[] sdkSetups, VRTK_SDKSetup previousLoadedSetup)
		{
			return null;
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x9B6150", Offset = "0x9B6150", VA = "0x9B6150")]
		private void CheckControllersReady()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x9B61CC", Offset = "0x9B61CC", VA = "0x9B61CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66F538", Offset = "0x66F538")]
		private IEnumerator CheckLeftControllerReady()
		{
			return null;
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x9B6240", Offset = "0x9B6240", VA = "0x9B6240")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66F59C", Offset = "0x66F59C")]
		private IEnumerator CheckRightControllerReady()
		{
			return null;
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x9B3EB4", Offset = "0x9B3EB4", VA = "0x9B3EB4")]
		private void ToggleBehaviours(bool state)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x9B49E4", Offset = "0x9B49E4", VA = "0x9B49E4")]
		private static void PopulateAvailableScriptingDefineSymbolPredicateInfos()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x9B4FF4", Offset = "0x9B4FF4", VA = "0x9B4FF4")]
		private static void PopulateAvailableAndInstalledSDKInfos()
		{
		}

		[Token(Token = "0x6001515")]
		private static void PopulateAvailableAndInstalledSDKInfos<BaseType, FallbackType>(List<VRTK_SDKInfo> availableSDKInfos, List<VRTK_SDKInfo> installedSDKInfos, ICollection<string> symbolsOfInstalledSDKs) where BaseType : SDK_Base where FallbackType : BaseType
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x9B6368", Offset = "0x9B6368", VA = "0x9B6368")]
		public VRTK_SDKManager()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public sealed class VRTK_SDKSetup : MonoBehaviour
	{
		[Token(Token = "0x200049F")]
		public delegate void LoadEventHandler(VRTK_SDKManager sender, VRTK_SDKSetup setup);

		[Serializable]
		[Token(Token = "0x20004A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D9B8", Offset = "0x64D9B8")]
		private sealed class <>c
		{
			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKInfo, string> <>9__35_0;

			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject, GameObject> <>9__54_0;

			[Token(Token = "0x6002338")]
			[Address(RVA = "0x9BAC34", Offset = "0x9BAC34", VA = "0x9BAC34")]
			public <>c()
			{
			}

			[Token(Token = "0x6002339")]
			[Address(RVA = "0x9BAC3C", Offset = "0x9BAC3C", VA = "0x9BAC3C")]
			internal string <get_usedVRDeviceNames>b__35_0(VRTK_SDKInfo info)
			{
				return null;
			}

			[Token(Token = "0x600233A")]
			[Address(RVA = "0x9BAC80", Offset = "0x9BAC80", VA = "0x9BAC80")]
			internal void <SetupControllers>b__54_0(GameObject scriptAliasGameObject, GameObject actualGameObject)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D9C8", Offset = "0x64D9C8")]
		private sealed class <>c__52<BaseType> where BaseType : SDK_Base
		{
			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__52<BaseType> <>9;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<VRTK_SDKInfo, Type> <>9__52_0;

			[Token(Token = "0x600233C")]
			public <>c__52()
			{
			}

			[Token(Token = "0x600233D")]
			internal Type <GetSDKErrorDescription>b__52_0(VRTK_SDKInfo installedInfo)
			{
				return null;
			}
		}

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660674", Offset = "0x660674")]
		public bool autoPopulateObjectReferences;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6606AC", Offset = "0x6606AC")]
		public GameObject actualBoundaries;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6606E4", Offset = "0x6606E4")]
		public GameObject actualHeadset;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66071C", Offset = "0x66071C")]
		public GameObject actualLeftController;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660754", Offset = "0x660754")]
		public GameObject actualRightController;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66078C", Offset = "0x66078C")]
		public GameObject modelAliasLeftController;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6607C4", Offset = "0x6607C4")]
		public GameObject modelAliasRightController;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRTK_SDKInfo cachedSystemSDKInfo;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private VRTK_SDKInfo cachedBoundariesSDKInfo;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private VRTK_SDKInfo cachedHeadsetSDKInfo;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private VRTK_SDKInfo cachedControllerSDKInfo;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SDK_BaseSystem cachedSystemSDK;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SDK_BaseBoundaries cachedBoundariesSDK;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDK_BaseHeadset cachedHeadsetSDK;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SDK_BaseController cachedControllerSDK;

		[Token(Token = "0x170000F2")]
		public VRTK_SDKInfo systemSDKInfo
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x9B4768", Offset = "0x9B4768", VA = "0x9B4768")]
			get
			{
				return null;
			}
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x9B91EC", Offset = "0x9B91EC", VA = "0x9B91EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public VRTK_SDKInfo boundariesSDKInfo
		{
			[Token(Token = "0x600151D")]
			[Address(RVA = "0x9B4770", Offset = "0x9B4770", VA = "0x9B4770")]
			get
			{
				return null;
			}
			[Token(Token = "0x600151E")]
			[Address(RVA = "0x9B9548", Offset = "0x9B9548", VA = "0x9B9548")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public VRTK_SDKInfo headsetSDKInfo
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0x9B4778", Offset = "0x9B4778", VA = "0x9B4778")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001520")]
			[Address(RVA = "0x9B9654", Offset = "0x9B9654", VA = "0x9B9654")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public VRTK_SDKInfo controllerSDKInfo
		{
			[Token(Token = "0x6001521")]
			[Address(RVA = "0x9B4780", Offset = "0x9B4780", VA = "0x9B4780")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x9B9760", Offset = "0x9B9760", VA = "0x9B9760")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public SDK_BaseSystem systemSDK
		{
			[Token(Token = "0x6001523")]
			[Address(RVA = "0x9B986C", Offset = "0x9B986C", VA = "0x9B986C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public SDK_BaseBoundaries boundariesSDK
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x9B99EC", Offset = "0x9B99EC", VA = "0x9B99EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public SDK_BaseHeadset headsetSDK
		{
			[Token(Token = "0x6001525")]
			[Address(RVA = "0x9B9B6C", Offset = "0x9B9B6C", VA = "0x9B9B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public SDK_BaseController controllerSDK
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x9B7028", Offset = "0x9B7028", VA = "0x9B7028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public string[] usedVRDeviceNames
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x9B4418", Offset = "0x9B4418", VA = "0x9B4418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public bool isValid
		{
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x9B37D8", Offset = "0x9B37D8", VA = "0x9B37D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x140000E3")]
		public event LoadEventHandler Loaded
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x9B8E3C", Offset = "0x9B8E3C", VA = "0x9B8E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F600", Offset = "0x66F600")]
			add
			{
			}
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x9B8F28", Offset = "0x9B8F28", VA = "0x9B8F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F610", Offset = "0x66F610")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E4")]
		public event LoadEventHandler Unloaded
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x9B9014", Offset = "0x9B9014", VA = "0x9B9014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F620", Offset = "0x66F620")]
			add
			{
			}
			[Token(Token = "0x600151A")]
			[Address(RVA = "0x9B9100", Offset = "0x9B9100", VA = "0x9B9100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F630", Offset = "0x66F630")]
			remove
			{
			}
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x9B92F8", Offset = "0x9B92F8", VA = "0x9B92F8")]
		public void PopulateObjectReferences(bool force)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x9B3834", Offset = "0x9B3834", VA = "0x9B3834")]
		public string[] GetSimplifiedErrorDescriptions()
		{
			return null;
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x9B7B04", Offset = "0x9B7B04", VA = "0x9B7B04")]
		public void OnLoaded(VRTK_SDKManager sender)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x9B4140", Offset = "0x9B4140", VA = "0x9B4140")]
		public void OnUnloaded(VRTK_SDKManager sender)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x9BA8F4", Offset = "0x9BA8F4", VA = "0x9BA8F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600152E")]
		private static void HandleSDKGetter<BaseType>(string prettyName, VRTK_SDKInfo info, IEnumerable<VRTK_SDKInfo> installedInfos) where BaseType : SDK_Base
		{
		}

		[Token(Token = "0x600152F")]
		private static string GetSDKErrorDescription<BaseType>(string prettyName, VRTK_SDKInfo info, IEnumerable<VRTK_SDKInfo> installedInfos) where BaseType : SDK_Base
		{
			return null;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x9B9D20", Offset = "0x9B9D20", VA = "0x9B9D20")]
		private void SetupHeadset()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x9B9E24", Offset = "0x9B9E24", VA = "0x9B9E24")]
		private void SetupControllers()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x9BA9A0", Offset = "0x9BA9A0", VA = "0x9BA9A0")]
		public VRTK_SDKSetup()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x9BAAE0", Offset = "0x9BAAE0", VA = "0x9BAAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F640", Offset = "0x66F640")]
		private void <OnLoaded>b__48_0(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x9BAB1C", Offset = "0x9BAB1C", VA = "0x9BAB1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F650", Offset = "0x66F650")]
		private void <OnLoaded>b__48_1(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x9BAB58", Offset = "0x9BAB58", VA = "0x9BAB58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F660", Offset = "0x66F660")]
		private void <OnUnloaded>b__49_0(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x9BAB94", Offset = "0x9BAB94", VA = "0x9BAB94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F670", Offset = "0x66F670")]
		private void <OnUnloaded>b__49_1(SDK_Base sdkBase)
		{
		}
	}
	[Token(Token = "0x20001C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x649FCC", Offset = "0x649FCC")]
	public sealed class VRTK_AdaptiveQuality : MonoBehaviour
	{
		[Token(Token = "0x20004A2")]
		private sealed class AdaptiveSetting<T>
		{
			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6654E0", Offset = "0x6654E0")]
			private T <previousValue>k__BackingField;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6654F0", Offset = "0x6654F0")]
			private int <lastChangeFrameCount>k__BackingField;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int increaseFrameCost;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int decreaseFrameCost;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T _currentValue;

			[Token(Token = "0x170002C3")]
			public T currentValue
			{
				[Token(Token = "0x600233E")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x600233F")]
				set
				{
				}
			}

			[Token(Token = "0x170002C4")]
			public T previousValue
			{
				[Token(Token = "0x6002340")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x674964", Offset = "0x674964")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6002341")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x674974", Offset = "0x674974")]
				private set
				{
				}
			}

			[Token(Token = "0x170002C5")]
			public int lastChangeFrameCount
			{
				[Token(Token = "0x6002342")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x674984", Offset = "0x674984")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002343")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x674994", Offset = "0x674994")]
				private set
				{
				}
			}

			[Token(Token = "0x6002344")]
			public AdaptiveSetting(T currentValue, int increaseFrameCost, int decreaseFrameCost)
			{
			}
		}

		[Token(Token = "0x20004A3")]
		private static class CommandLineArguments
		{
			[Token(Token = "0x40020BE")]
			public const string Disable = "-noaq";

			[Token(Token = "0x40020BF")]
			public const string MinimumRenderScale = "-aqminscale";

			[Token(Token = "0x40020C0")]
			public const string MaximumRenderScale = "-aqmaxscale";

			[Token(Token = "0x40020C1")]
			public const string MaximumRenderTargetDimension = "-aqmaxres";

			[Token(Token = "0x40020C2")]
			public const string RenderScaleFillRateStepSizeInPercent = "-aqfillratestep";

			[Token(Token = "0x40020C3")]
			public const string OverrideRenderScaleLevel = "-aqoverride";

			[Token(Token = "0x40020C4")]
			public const string DrawDebugVisualization = "-vrdebug";

			[Token(Token = "0x40020C5")]
			public const string MSAALevel = "-msaa";
		}

		[Token(Token = "0x20004A4")]
		private static class KeyboardShortcuts
		{
			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly KeyCode[] Modifiers;

			[Token(Token = "0x40020C7")]
			public const KeyCode ToggleDrawDebugVisualization = KeyCode.F1;

			[Token(Token = "0x40020C8")]
			public const KeyCode ToggleOverrideRenderScale = KeyCode.F2;

			[Token(Token = "0x40020C9")]
			public const KeyCode DecreaseOverrideRenderScaleLevel = KeyCode.F3;

			[Token(Token = "0x40020CA")]
			public const KeyCode IncreaseOverrideRenderScaleLevel = KeyCode.F4;
		}

		[Token(Token = "0x20004A5")]
		private static class ShaderPropertyIDs
		{
			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int RenderScaleLevelsCount;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int DefaultRenderViewportScaleLevel;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int CurrentRenderViewportScaleLevel;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static readonly int CurrentRenderScaleLevel;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static readonly int LastFrameIsInBudget;
		}

		[Token(Token = "0x20004A6")]
		private sealed class Timing
		{
			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly float[] buffer;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int bufferIndex;

			[Token(Token = "0x6002347")]
			[Address(RVA = "0xCA2828", Offset = "0xCA2828", VA = "0xCA2828")]
			public void SaveCurrentFrameTiming()
			{
			}

			[Token(Token = "0x6002348")]
			[Address(RVA = "0xCA28C4", Offset = "0xCA28C4", VA = "0xCA28C4")]
			public float GetFrameTiming(int framesAgo)
			{
				return default(float);
			}

			[Token(Token = "0x6002349")]
			[Address(RVA = "0xCA2960", Offset = "0xCA2960", VA = "0xCA2960")]
			public bool WasFrameTimingBad(int framesAgo, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x600234A")]
			[Address(RVA = "0xCA2A30", Offset = "0xCA2A30", VA = "0xCA2A30")]
			public bool WasFrameTimingGood(int framesAgo, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x600234B")]
			[Address(RVA = "0xCA2ABC", Offset = "0xCA2ABC", VA = "0xCA2ABC")]
			public bool WillFrameTimingBeBad(float extrapolationThresholdInMilliseconds, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x600234C")]
			[Address(RVA = "0xCA29EC", Offset = "0xCA29EC", VA = "0xCA29EC")]
			private static bool AreFramesAvailable(int framesAgo, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x600234D")]
			[Address(RVA = "0xCA2BE0", Offset = "0xCA2BE0", VA = "0xCA2BE0")]
			public Timing()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D9D8", Offset = "0x64D9D8")]
		private sealed class <>c
		{
			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<float> <>9__50_0;

			[Token(Token = "0x600234F")]
			[Address(RVA = "0xCA2678", Offset = "0xCA2678", VA = "0xCA2678")]
			public <>c()
			{
			}

			[Token(Token = "0x6002350")]
			[Address(RVA = "0xCA2680", Offset = "0xCA2680", VA = "0xCA2680")]
			internal bool <UpdateRenderScaleLevels>b__50_0(float renderScale)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66085C", Offset = "0x66085C")]
		public bool drawDebugVisualization;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660894", Offset = "0x660894")]
		public bool allowKeyboardShortcuts;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6608CC", Offset = "0x6608CC")]
		public bool allowCommandLineArguments;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660904", Offset = "0x660904")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660904", Offset = "0x660904")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x660904", Offset = "0x660904")]
		public int msaaLevel;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66097C", Offset = "0x66097C")]
		public bool scaleRenderViewport;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6609B4", Offset = "0x6609B4")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x6609B4", Offset = "0x6609B4")]
		public Limits2D renderScaleLimits;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x660A0C", Offset = "0x660A0C")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x660A0C", Offset = "0x660A0C")]
		public float minimumRenderScale;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x660A58", Offset = "0x660A58")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x660A58", Offset = "0x660A58")]
		public float maximumRenderScale;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660AA4", Offset = "0x660AA4")]
		public int maximumRenderTargetDimension;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660ADC", Offset = "0x660ADC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x660ADC", Offset = "0x660ADC")]
		public int renderScaleFillRateStepSizeInPercent;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660B34", Offset = "0x660B34")]
		public bool scaleRenderTargetResolution;

		[NonSerialized]
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660B6C", Offset = "0x660B6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660B6C", Offset = "0x660B6C")]
		public bool overrideRenderViewportScale;

		[NonSerialized]
		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660BCC", Offset = "0x660BCC")]
		public int overrideRenderViewportScaleLevel;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly ReadOnlyCollection<float> renderScales;

		[Token(Token = "0x4001072")]
		private const float DefaultFrameDurationInMilliseconds = 11.111111f;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly AdaptiveSetting<int> renderViewportScaleSetting;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly AdaptiveSetting<int> renderScaleSetting;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<float> allRenderScales;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int defaultRenderViewportScaleLevel;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float previousMinimumRenderScale;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float previousMaximumRenderScale;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float previousRenderScaleFillRateStepSizeInPercent;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly Timing timing;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastRenderViewportScaleLevelBelowRenderScaleLevelFrameCount;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool interleavedReprojectionEnabled;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool hmdDisplayIsOnDesktop;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float singleFrameDurationInMilliseconds;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugVisualizationQuad;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material debugVisualizationQuadMaterial;

		[Token(Token = "0x170000FC")]
		public static float CurrentRenderScale
		{
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x7FC6E4", Offset = "0x7FC6E4", VA = "0x7FC6E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FD")]
		public Vector2 defaultRenderTargetResolution
		{
			[Token(Token = "0x6001538")]
			[Address(RVA = "0x7FC714", Offset = "0x7FC714", VA = "0x7FC714")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000FE")]
		public Vector2 currentRenderTargetResolution
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0x7FC814", Offset = "0x7FC814", VA = "0x7FC814")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x7FC844", Offset = "0x7FC844", VA = "0x7FC844")]
		public VRTK_AdaptiveQuality()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x7FC780", Offset = "0x7FC780", VA = "0x7FC780")]
		public static Vector2 RenderTargetResolutionForRenderScale(float renderScale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x7FC9C4", Offset = "0x7FC9C4", VA = "0x7FC9C4")]
		public float BiggestAllowedMaximumRenderScale()
		{
			return default(float);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x7FCAD4", Offset = "0x7FCAD4", VA = "0x7FCAD4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x7FCF5C", Offset = "0x7FCF5C", VA = "0x7FCF5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x7FCFC4", Offset = "0x7FCFC4", VA = "0x7FCFC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x7FD610", Offset = "0x7FD610", VA = "0x7FD610")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x7FD818", Offset = "0x7FD818", VA = "0x7FD818")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x7FD4C8", Offset = "0x7FD4C8", VA = "0x7FD4C8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x7FD880", Offset = "0x7FD880", VA = "0x7FD880")]
		private void Update()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x7FE7B8", Offset = "0x7FE7B8", VA = "0x7FE7B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x7FF21C", Offset = "0x7FF21C", VA = "0x7FF21C")]
		private void OnCameraPreCull(Camera camera)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x7FD184", Offset = "0x7FD184", VA = "0x7FD184")]
		private void HandleCommandLineArguments()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x7FD8D0", Offset = "0x7FD8D0", VA = "0x7FD8D0")]
		private void HandleKeyPresses()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x7FF300", Offset = "0x7FF300", VA = "0x7FF300")]
		private void UpdateMSAALevel()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x7FDA1C", Offset = "0x7FDA1C", VA = "0x7FDA1C")]
		private void UpdateRenderScaleLevels()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x7FE7BC", Offset = "0x7FE7BC", VA = "0x7FE7BC")]
		private void UpdateRenderScale()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x7FD724", Offset = "0x7FD724", VA = "0x7FD724")]
		private static void SetRenderScale(float renderScale, float renderViewportScale)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x7FF344", Offset = "0x7FF344", VA = "0x7FF344")]
		private int ClampRenderScaleLevel(int renderScaleLevel)
		{
			return default(int);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x7FDE34", Offset = "0x7FDE34", VA = "0x7FDE34")]
		private void CreateOrDestroyDebugVisualization()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x7FE560", Offset = "0x7FE560", VA = "0x7FE560")]
		private void UpdateDebugVisualization()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64A004", Offset = "0x64A004")]
	public class VRTK_CustomRaycast : MonoBehaviour
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660C04", Offset = "0x660C04")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660C3C", Offset = "0x660C3C")]
		public QueryTriggerInteraction triggerInteraction;

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xDB2FAC", Offset = "0xDB2FAC", VA = "0xDB2FAC")]
		public static bool Raycast(VRTK_CustomRaycast customCast, Ray ray, out RaycastHit hitData, LayerMask ignoreLayers, float length = float.PositiveInfinity, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xDB30E0", Offset = "0xDB30E0", VA = "0xDB30E0")]
		public static bool Linecast(VRTK_CustomRaycast customCast, Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xDB3228", Offset = "0xDB3228", VA = "0xDB3228")]
		public static bool CapsuleCast(VRTK_CustomRaycast customCast, Vector3 point1, Vector3 point2, float radius, Vector3 direction, float maxDistance, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xDB33AC", Offset = "0xDB33AC", VA = "0xDB33AC")]
		public static bool BoxCast(VRTK_CustomRaycast customCast, Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, float maxDistance, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xDB3524", Offset = "0xDB3524", VA = "0xDB3524", Slot = "4")]
		public virtual bool CustomRaycast(Ray ray, out RaycastHit hitData, float length = float.PositiveInfinity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xDB3594", Offset = "0xDB3594", VA = "0xDB3594", Slot = "5")]
		public virtual bool CustomLinecast(Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xDB3618", Offset = "0xDB3618", VA = "0xDB3618", Slot = "6")]
		public virtual bool CustomCapsuleCast(Vector3 point1, Vector3 point2, float radius, Vector3 direction, float maxDistance, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xDB36C4", Offset = "0xDB36C4", VA = "0xDB36C4", Slot = "7")]
		public virtual bool CustomBoxCast(Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, float maxDistance, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xDB3780", Offset = "0xDB3780", VA = "0xDB3780")]
		public VRTK_CustomRaycast()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public static class VRTK_DeviceFinder
	{
		[Token(Token = "0x20004A8")]
		public enum Devices
		{
			[Token(Token = "0x40020D5")]
			Headset,
			[Token(Token = "0x40020D6")]
			LeftController,
			[Token(Token = "0x40020D7")]
			RightController
		}

		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x64D9E8", Offset = "0x64D9E8")]
		public enum Headsets
		{
			[Token(Token = "0x40020D9")]
			Unknown,
			[Token(Token = "0x40020DA")]
			OculusRift,
			[Token(Token = "0x40020DB")]
			OculusRiftCV1,
			[Token(Token = "0x40020DC")]
			Vive,
			[Token(Token = "0x40020DD")]
			ViveMV,
			[Token(Token = "0x40020DE")]
			ViveDVT,
			[Token(Token = "0x40020DF")]
			OculusRiftES07
		}

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string cachedHeadsetType;

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xBD9D68", Offset = "0xBD9D68", VA = "0xBD9D68")]
		public static SDK_BaseController.ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xBD9DD0", Offset = "0xBD9DD0", VA = "0xBD9DD0")]
		public static uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xBD9E38", Offset = "0xBD9E38", VA = "0xBD9E38")]
		public static GameObject GetControllerByIndex(uint index, bool getActual)
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xBD9EB0", Offset = "0xBD9EB0", VA = "0xBD9EB0")]
		public static Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xBD9F18", Offset = "0xBD9F18", VA = "0xBD9F18")]
		public static Transform DeviceTransform(Devices device)
		{
			return null;
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xBDA010", Offset = "0xBDA010", VA = "0xBDA010")]
		public static SDK_BaseController.ControllerHand GetControllerHandType(string hand)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xBDA0B0", Offset = "0xBDA0B0", VA = "0xBDA0B0")]
		public static SDK_BaseController.ControllerHand GetControllerHand(GameObject controller)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xBD8658", Offset = "0xBD8658", VA = "0xBD8658")]
		public static GameObject GetControllerLeftHand(bool getActual = false)
		{
			return null;
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xBD86C0", Offset = "0xBD86C0", VA = "0xBD86C0")]
		public static GameObject GetControllerRightHand(bool getActual = false)
		{
			return null;
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xBDA158", Offset = "0xBDA158", VA = "0xBDA158")]
		public static VRTK_ControllerReference GetControllerReferenceLeftHand()
		{
			return null;
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xBDA1BC", Offset = "0xBDA1BC", VA = "0xBDA1BC")]
		public static VRTK_ControllerReference GetControllerReferenceRightHand()
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xBDA220", Offset = "0xBDA220", VA = "0xBDA220")]
		public static VRTK_ControllerReference GetControllerReferenceForHand(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xBDA288", Offset = "0xBDA288", VA = "0xBDA288")]
		public static bool IsControllerOfHand(GameObject checkController, SDK_BaseController.ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xBDA350", Offset = "0xBDA350", VA = "0xBDA350")]
		public static bool IsControllerLeftHand(GameObject checkController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xBDA3B8", Offset = "0xBDA3B8", VA = "0xBDA3B8")]
		public static bool IsControllerRightHand(GameObject checkController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xBDA420", Offset = "0xBDA420", VA = "0xBDA420")]
		public static SDK_BaseController.ControllerHand GetOppositeHand(SDK_BaseController.ControllerHand currentHand)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xBDA43C", Offset = "0xBDA43C", VA = "0xBDA43C")]
		public static GameObject GetActualController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xBDA594", Offset = "0xBDA594", VA = "0xBDA594")]
		public static GameObject GetScriptAliasController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xBDA6EC", Offset = "0xBDA6EC", VA = "0xBDA6EC")]
		public static GameObject GetModelAliasController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xBDA754", Offset = "0xBDA754", VA = "0xBDA754")]
		public static SDK_BaseController.ControllerHand GetModelAliasControllerHand(GameObject givenObject)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xBDA86C", Offset = "0xBDA86C", VA = "0xBDA86C")]
		public static Vector3 GetControllerVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xBDA8D4", Offset = "0xBDA8D4", VA = "0xBDA8D4")]
		public static Vector3 GetControllerAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xBDA93C", Offset = "0xBDA93C", VA = "0xBDA93C")]
		public static Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xBDA99C", Offset = "0xBDA99C", VA = "0xBDA99C")]
		public static Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xBD7FF4", Offset = "0xBD7FF4", VA = "0xBD7FF4")]
		public static Transform HeadsetTransform()
		{
			return null;
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xBDA9FC", Offset = "0xBDA9FC", VA = "0xBDA9FC")]
		public static Transform HeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xBDAA5C", Offset = "0xBDAA5C", VA = "0xBDAA5C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66F680", Offset = "0x66F680")]
		public static void ResetHeadsetTypeCache()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xBDAAD0", Offset = "0xBDAAD0", VA = "0xBDAAD0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66F6B8", Offset = "0x66F6B8")]
		public static Headsets GetHeadsetType(bool summary = false)
		{
			return default(Headsets);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xBDAE44", Offset = "0xBDAE44", VA = "0xBDAE44")]
		public static string GetHeadsetTypeAsString()
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xBDAEA4", Offset = "0xBDAEA4", VA = "0xBDAEA4")]
		public static SDK_BaseHeadset.HeadsetType GetHeadsetType()
		{
			return default(SDK_BaseHeadset.HeadsetType);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xBD7F94", Offset = "0xBD7F94", VA = "0xBD7F94")]
		public static Transform PlayAreaTransform()
		{
			return null;
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64A03C", Offset = "0x64A03C")]
	public class VRTK_NavMeshData : MonoBehaviour
	{
		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660C74", Offset = "0x660C74")]
		public float distanceLimit;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660CAC", Offset = "0x660CAC")]
		public int validAreas;

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xC2B4CC", Offset = "0xC2B4CC", VA = "0xC2B4CC")]
		public VRTK_NavMeshData()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64A074", Offset = "0x64A074")]
	public class VRTK_PolicyList : MonoBehaviour
	{
		[Token(Token = "0x20004AA")]
		public enum OperationTypes
		{
			[Token(Token = "0x40020E1")]
			Ignore,
			[Token(Token = "0x40020E2")]
			Include
		}

		[Token(Token = "0x20004AB")]
		public enum CheckTypes
		{
			[Token(Token = "0x40020E4")]
			Tag = 1,
			[Token(Token = "0x40020E5")]
			Script = 2,
			[Token(Token = "0x40020E6")]
			Layer = 4
		}

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660CE4", Offset = "0x660CE4")]
		public OperationTypes operation;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660D1C", Offset = "0x660D1C")]
		public CheckTypes checkType;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660D54", Offset = "0x660D54")]
		public List<string> identifiers;

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xA2E520", Offset = "0xA2E520", VA = "0xA2E520", Slot = "4")]
		public virtual bool Find(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xA24420", Offset = "0xA24420", VA = "0xA24420")]
		public static bool Check(GameObject obj, VRTK_PolicyList list)
		{
			return default(bool);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xA2E538", Offset = "0xA2E538", VA = "0xA2E538", Slot = "5")]
		protected virtual bool ScriptCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xA2E658", Offset = "0xA2E658", VA = "0xA2E658", Slot = "6")]
		protected virtual bool TagCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xA2E6F4", Offset = "0xA2E6F4", VA = "0xA2E6F4", Slot = "7")]
		protected virtual bool LayerCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xA2E798", Offset = "0xA2E798", VA = "0xA2E798", Slot = "8")]
		protected virtual bool TypeCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xA2E95C", Offset = "0xA2E95C", VA = "0xA2E95C")]
		public VRTK_PolicyList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C5")]
	public class VRTK_SDKInputOverrideType
	{
		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660D8C", Offset = "0x660D8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660D8C", Offset = "0x660D8C")]
		public VRTK_SDKSetup loadedSDKSetup;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660DEC", Offset = "0x660DEC")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x9B0DC0", Offset = "0x9B0DC0", VA = "0x9B0DC0")]
		public VRTK_SDKInputOverrideType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C6")]
	public class VRTK_SDKButtonInputOverrideType : VRTK_SDKInputOverrideType
	{
		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660E24", Offset = "0x660E24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660E24", Offset = "0x660E24")]
		public VRTK_ControllerEvents.ButtonAlias overrideButton;

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xA34B88", Offset = "0xA34B88", VA = "0xA34B88")]
		public VRTK_SDKButtonInputOverrideType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C7")]
	public class VRTK_SDKVector2AxisInputOverrideType : VRTK_SDKInputOverrideType
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660E84", Offset = "0x660E84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660E84", Offset = "0x660E84")]
		public VRTK_ControllerEvents.Vector2AxisAlias overrideAxis;

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x9BD010", Offset = "0x9BD010", VA = "0x9BD010")]
		public VRTK_SDKVector2AxisInputOverrideType()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class VRTK_SDKInputOverride : VRTK_SDKControllerReady
	{
		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DA20", Offset = "0x64DA20")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SDK_BaseController.ControllerType currentControllerType;

			[Token(Token = "0x6002351")]
			[Address(RVA = "0x9B0D38", Offset = "0x9B0D38", VA = "0x9B0D38")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002352")]
			[Address(RVA = "0x9B0D40", Offset = "0x9B0D40", VA = "0x9B0D40")]
			internal bool <GetSelectedModifier>b__1(VRTK_SDKButtonInputOverrideType item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DA30", Offset = "0x64DA30")]
		private sealed class <>c
		{
			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKButtonInputOverrideType, bool> <>9__32_0;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VRTK_SDKVector2AxisInputOverrideType, bool> <>9__33_0;

			[Token(Token = "0x6002354")]
			[Address(RVA = "0x9B0B40", Offset = "0x9B0B40", VA = "0x9B0B40")]
			public <>c()
			{
			}

			[Token(Token = "0x6002355")]
			[Address(RVA = "0x9B0B48", Offset = "0x9B0B48", VA = "0x9B0B48")]
			internal bool <GetSelectedModifier>b__32_0(VRTK_SDKButtonInputOverrideType item)
			{
				return default(bool);
			}

			[Token(Token = "0x6002356")]
			[Address(RVA = "0x9B0C90", Offset = "0x9B0C90", VA = "0x9B0C90")]
			internal bool <GetSelectedModifier>b__33_0(VRTK_SDKVector2AxisInputOverrideType item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DA40", Offset = "0x64DA40")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SDK_BaseController.ControllerType currentControllerType;

			[Token(Token = "0x6002357")]
			[Address(RVA = "0x9B0D7C", Offset = "0x9B0D7C", VA = "0x9B0D7C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002358")]
			[Address(RVA = "0x9B0D84", Offset = "0x9B0D84", VA = "0x9B0D84")]
			internal bool <GetSelectedModifier>b__1(VRTK_SDKVector2AxisInputOverrideType item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660EE4", Offset = "0x660EE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660EE4", Offset = "0x660EE4")]
		public VRTK_InteractGrab interactGrabScript;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660F44", Offset = "0x660F44")]
		public List<VRTK_SDKButtonInputOverrideType> interactGrabOverrides;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660F7C", Offset = "0x660F7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660F7C", Offset = "0x660F7C")]
		public VRTK_InteractUse interactUseScript;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660FDC", Offset = "0x660FDC")]
		public List<VRTK_SDKButtonInputOverrideType> interactUseOverrides;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661014", Offset = "0x661014")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661014", Offset = "0x661014")]
		public VRTK_Pointer pointerScript;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661074", Offset = "0x661074")]
		public List<VRTK_SDKButtonInputOverrideType> pointerActivationOverrides;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6610AC", Offset = "0x6610AC")]
		public List<VRTK_SDKButtonInputOverrideType> pointerSelectionOverrides;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6610E4", Offset = "0x6610E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6610E4", Offset = "0x6610E4")]
		public VRTK_UIPointer uiPointerScript;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661144", Offset = "0x661144")]
		public List<VRTK_SDKButtonInputOverrideType> uiPointerActivationOverrides;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66117C", Offset = "0x66117C")]
		public List<VRTK_SDKButtonInputOverrideType> uiPointerSelectionOverrides;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6611B4", Offset = "0x6611B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6611B4", Offset = "0x6611B4")]
		public VRTK_PointerDirectionIndicator pointerDirectionIndicatorScript;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661214", Offset = "0x661214")]
		public List<VRTK_SDKVector2AxisInputOverrideType> directionIndicatorCoordinateOverrides;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66124C", Offset = "0x66124C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66124C", Offset = "0x66124C")]
		public VRTK_TouchpadControl touchpadControlScript;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6612AC", Offset = "0x6612AC")]
		public List<VRTK_SDKVector2AxisInputOverrideType> touchpadControlCoordinateOverrides;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6612E4", Offset = "0x6612E4")]
		public List<VRTK_SDKButtonInputOverrideType> touchpadControlActivationOverrides;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66131C", Offset = "0x66131C")]
		public List<VRTK_SDKButtonInputOverrideType> touchpadControlModifierOverrides;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661354", Offset = "0x661354")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661354", Offset = "0x661354")]
		public VRTK_ButtonControl buttonControlScript;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6613B4", Offset = "0x6613B4")]
		public List<VRTK_SDKButtonInputOverrideType> buttonControlForwardOverrides;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6613EC", Offset = "0x6613EC")]
		public List<VRTK_SDKButtonInputOverrideType> buttonControlBackwardOverrides;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661424", Offset = "0x661424")]
		public List<VRTK_SDKButtonInputOverrideType> buttonControlLeftOverrides;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66145C", Offset = "0x66145C")]
		public List<VRTK_SDKButtonInputOverrideType> buttonControlRightOverrides;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661494", Offset = "0x661494")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661494", Offset = "0x661494")]
		public VRTK_SlingshotJump slingshotJumpScript;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6614F4", Offset = "0x6614F4")]
		public List<VRTK_SDKButtonInputOverrideType> slingshotJumpActivationOverrides;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66152C", Offset = "0x66152C")]
		public List<VRTK_SDKButtonInputOverrideType> slingshotJumpCancelOverrides;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661564", Offset = "0x661564")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661564", Offset = "0x661564")]
		public VRTK_MoveInPlace moveInPlaceScript;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6615C4", Offset = "0x6615C4")]
		public List<VRTK_SDKButtonInputOverrideType> moveInPlaceEngageOverrides;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6615FC", Offset = "0x6615FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6615FC", Offset = "0x6615FC")]
		public VRTK_StepMultiplier stepMultiplierScript;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66165C", Offset = "0x66165C")]
		public List<VRTK_SDKButtonInputOverrideType> stepMultiplierActivationOverrides;

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xA3605C", Offset = "0xA3605C", VA = "0xA3605C", Slot = "15")]
		public virtual void ForceManage()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xA3606C", Offset = "0xA3606C", VA = "0xA3606C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xA3609C", Offset = "0xA3609C", VA = "0xA3609C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xA360EC", Offset = "0xA360EC", VA = "0xA360EC", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xA361D4", Offset = "0xA361D4", VA = "0xA361D4", Slot = "16")]
		protected virtual VRTK_SDKButtonInputOverrideType GetSelectedModifier(List<VRTK_SDKButtonInputOverrideType> overrideTypes, VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xA363F0", Offset = "0xA363F0", VA = "0xA363F0", Slot = "17")]
		protected virtual VRTK_SDKVector2AxisInputOverrideType GetSelectedModifier(List<VRTK_SDKVector2AxisInputOverrideType> overrideTypes, VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xA365A0", Offset = "0xA365A0", VA = "0xA365A0", Slot = "18")]
		protected virtual void ManageInputs()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xA3667C", Offset = "0xA3667C", VA = "0xA3667C", Slot = "19")]
		protected virtual VRTK_ControllerReference GetReferenceFromEvents(VRTK_ControllerEvents controllerEvents)
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xA36738", Offset = "0xA36738", VA = "0xA36738", Slot = "20")]
		protected virtual VRTK_ControllerReference GetRightThenLeftReference()
		{
			return null;
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xA367E0", Offset = "0xA367E0", VA = "0xA367E0", Slot = "21")]
		protected virtual void ManageInteractGrab()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xA36918", Offset = "0xA36918", VA = "0xA36918", Slot = "22")]
		protected virtual void ManageInteractUse()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xA36A50", Offset = "0xA36A50", VA = "0xA36A50", Slot = "23")]
		protected virtual void ManagePointer()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xA36C10", Offset = "0xA36C10", VA = "0xA36C10", Slot = "24")]
		protected virtual void ManageUIPointer()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xA36DD0", Offset = "0xA36DD0", VA = "0xA36DD0", Slot = "25")]
		protected virtual void ManagePointerDirectionIndicator()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xA36F18", Offset = "0xA36F18", VA = "0xA36F18", Slot = "26")]
		protected virtual void ManageTouchpadControl()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xA3715C", Offset = "0xA3715C", VA = "0xA3715C", Slot = "27")]
		protected virtual void ManageButtonControl()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xA37424", Offset = "0xA37424", VA = "0xA37424", Slot = "28")]
		protected virtual void ManageSlingshotJump()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xA375F0", Offset = "0xA375F0", VA = "0xA375F0", Slot = "29")]
		protected virtual void ManageMoveInPlace()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xA37714", Offset = "0xA37714", VA = "0xA37714", Slot = "30")]
		protected virtual void ManageStepMultiplier()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xA3784C", Offset = "0xA3784C", VA = "0xA3784C")]
		public VRTK_SDKInputOverride()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64A0AC", Offset = "0x64A0AC")]
	public class VRTK_SDKObjectAlias : MonoBehaviour
	{
		[Token(Token = "0x20004AF")]
		public enum SDKObject
		{
			[Token(Token = "0x40020ED")]
			Boundary,
			[Token(Token = "0x40020EE")]
			Headset
		}

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661694", Offset = "0x661694")]
		public SDKObject sdkObject;

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x9B7F64", Offset = "0x9B7F64", VA = "0x9B7F64", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x9B800C", Offset = "0x9B800C", VA = "0x9B800C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x9B80D8", Offset = "0x9B80D8", VA = "0x9B80D8", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x9B8180", Offset = "0x9B8180", VA = "0x9B8180", Slot = "7")]
		protected virtual void ChildToSDKObject()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x9B8398", Offset = "0x9B8398", VA = "0x9B8398")]
		public VRTK_SDKObjectAlias()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64A0E4", Offset = "0x64A0E4")]
	public class VRTK_SDKObjectState : VRTK_SDKControllerReady
	{
		[Token(Token = "0x20004B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DA50", Offset = "0x64DA50")]
		private sealed class <CheckToggleAtEndOfFrame>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SDKObjectState <>4__this;

			[Token(Token = "0x170002C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600235C")]
				[Address(RVA = "0x9B8DC4", Offset = "0x9B8DC4", VA = "0x9B8DC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600235E")]
				[Address(RVA = "0x9B8E34", Offset = "0x9B8E34", VA = "0x9B8E34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0x9B8600", Offset = "0x9B8600", VA = "0x9B8600")]
			[DebuggerHidden]
			public <CheckToggleAtEndOfFrame>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600235A")]
			[Address(RVA = "0x9B8D0C", Offset = "0x9B8D0C", VA = "0x9B8D0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600235B")]
			[Address(RVA = "0x9B8D10", Offset = "0x9B8D10", VA = "0x9B8D10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600235D")]
			[Address(RVA = "0x9B8DCC", Offset = "0x9B8DCC", VA = "0x9B8DCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6616CC", Offset = "0x6616CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6616CC", Offset = "0x6616CC")]
		public UnityEngine.Object target;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66172C", Offset = "0x66172C")]
		public bool objectState;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661764", Offset = "0x661764")]
		public VRTK_SDKSetup loadedSDKSetup;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66179C", Offset = "0x66179C")]
		public SDK_BaseHeadset.HeadsetType headsetType;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6617D4", Offset = "0x6617D4")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Coroutine checkToggleRoutine;

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x9B83A0", Offset = "0x9B83A0", VA = "0x9B83A0", Slot = "15")]
		public virtual void SetStateByControllerReference(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x9B8478", Offset = "0x9B8478", VA = "0x9B8478", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x9B853C", Offset = "0x9B853C", VA = "0x9B853C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x9B857C", Offset = "0x9B857C", VA = "0x9B857C", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x9B858C", Offset = "0x9B858C", VA = "0x9B858C", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66F6F0", Offset = "0x66F6F0")]
		protected virtual IEnumerator CheckToggleAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x9B862C", Offset = "0x9B862C", VA = "0x9B862C", Slot = "17")]
		protected virtual void CheckToggle()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x9B8668", Offset = "0x9B8668", VA = "0x9B8668", Slot = "18")]
		protected virtual void ToggleOnSDK()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x9B8764", Offset = "0x9B8764", VA = "0x9B8764", Slot = "19")]
		protected virtual void ToggleOnHeadset()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x9B87F8", Offset = "0x9B87F8", VA = "0x9B87F8", Slot = "20")]
		protected virtual void ToggleOnController(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x9B88A8", Offset = "0x9B88A8", VA = "0x9B88A8", Slot = "21")]
		protected virtual void ToggleObject()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x9B89FC", Offset = "0x9B89FC", VA = "0x9B89FC", Slot = "22")]
		protected virtual void ToggleGameObject()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x9B8B60", Offset = "0x9B8B60", VA = "0x9B8B60", Slot = "23")]
		protected virtual void ToggleComponent()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x9B8D04", Offset = "0x9B8D04", VA = "0x9B8D04")]
		public VRTK_SDKObjectState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CB")]
	public class VRTK_SDKTransformModifiers
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66180C", Offset = "0x66180C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66180C", Offset = "0x66180C")]
		public VRTK_SDKSetup loadedSDKSetup;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66186C", Offset = "0x66186C")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6618A4", Offset = "0x6618A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6618A4", Offset = "0x6618A4")]
		public Vector3 position;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661904", Offset = "0x661904")]
		public Vector3 rotation;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66193C", Offset = "0x66193C")]
		public Vector3 scale;

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x9BC730", Offset = "0x9BC730", VA = "0x9BC730")]
		public VRTK_SDKTransformModifiers()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64A11C", Offset = "0x64A11C")]
	public class VRTK_SDKTransformModify : VRTK_SDKControllerReady
	{
		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DA60", Offset = "0x64DA60")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SDK_BaseController.ControllerType currentControllerType;

			[Token(Token = "0x600235F")]
			[Address(RVA = "0x9BCE40", Offset = "0x9BCE40", VA = "0x9BCE40")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0x9BCFD4", Offset = "0x9BCFD4", VA = "0x9BCFD4")]
			internal bool <GetSelectedModifier>b__1(VRTK_SDKTransformModifiers item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DA70", Offset = "0x64DA70")]
		private sealed class <>c
		{
			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKTransformModifiers, bool> <>9__11_0;

			[Token(Token = "0x6002362")]
			[Address(RVA = "0x9BCF24", Offset = "0x9BCF24", VA = "0x9BCF24")]
			public <>c()
			{
			}

			[Token(Token = "0x6002363")]
			[Address(RVA = "0x9BCF2C", Offset = "0x9BCF2C", VA = "0x9BCF2C")]
			internal bool <GetSelectedModifier>b__11_0(VRTK_SDKTransformModifiers item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661974", Offset = "0x661974")]
		public Transform target;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6619AC", Offset = "0x6619AC")]
		public bool resetOnDisable;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6619E4", Offset = "0x6619E4")]
		public List<VRTK_SDKTransformModifiers> sdkOverrides;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 originalPosition;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Quaternion originalRotation;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalScale;

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x9BC7C8", Offset = "0x9BC7C8", VA = "0x9BC7C8", Slot = "15")]
		public virtual void UpdateTransform([Optional] VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x9BC920", Offset = "0x9BC920", VA = "0x9BC920", Slot = "16")]
		public virtual void SetOrigins()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x9BCA04", Offset = "0x9BCA04", VA = "0x9BCA04", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x9BCAB0", Offset = "0x9BCAB0", VA = "0x9BCAB0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x9BCB90", Offset = "0x9BCB90", VA = "0x9BCB90", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x9BCC88", Offset = "0x9BCC88", VA = "0x9BCC88", Slot = "17")]
		protected virtual VRTK_SDKTransformModifiers GetSelectedModifier(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x9BCE48", Offset = "0x9BCE48", VA = "0x9BCE48")]
		public VRTK_SDKTransformModify()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public static class VRTK_SharedMethods
	{
		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DA80", Offset = "0x64DA80")]
		private sealed class <>c__DisplayClass11_0<T> where T : Component
		{
			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string gameObjectName;

			[Token(Token = "0x6002364")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002365")]
			internal GameObject <FindEvenInactiveGameObject>b__0(T component)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20004B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DA90", Offset = "0x64DA90")]
		private sealed class <>c__11<T> where T : Component
		{
			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__11<T> <>9;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<GameObject, bool> <>9__11_1;

			[Token(Token = "0x6002367")]
			public <>c__11()
			{
			}

			[Token(Token = "0x6002368")]
			internal bool <FindEvenInactiveGameObject>b__11_1(GameObject gameObject)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x9BF968", Offset = "0x9BF968", VA = "0x9BF968")]
		public static Bounds GetBounds(Transform transform, [Optional] Transform excludeRotation, [Optional] Transform excludeTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x9BFF24", Offset = "0x9BFF24", VA = "0x9BFF24")]
		public static bool IsLowest(float value, float[] others)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x9BFFAC", Offset = "0x9BFFAC", VA = "0x9BFFAC")]
		public static Transform AddCameraFade()
		{
			return null;
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x9C0044", Offset = "0x9C0044", VA = "0x9C0044")]
		public static void CreateColliders(GameObject obj)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x9C01B4", Offset = "0x9C01B4", VA = "0x9C01B4")]
		public static Collider[] ColliderExclude(Collider[] setA, Collider[] setB)
		{
			return null;
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x9C0224", Offset = "0x9C0224", VA = "0x9C0224")]
		public static Collider[] GetCollidersInGameObjects(GameObject[] gameObjects, bool searchChildren, bool includeInactive)
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x9C03C0", Offset = "0x9C03C0", VA = "0x9C03C0")]
		public static Component CloneComponent(Component source, GameObject destination, bool copyProperties = false)
		{
			return null;
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x9C05F4", Offset = "0x9C05F4", VA = "0x9C05F4")]
		public static Color ColorDarken(Color color, float percent)
		{
			return default(Color);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x9C0724", Offset = "0x9C0724", VA = "0x9C0724")]
		public static float RoundFloat(float givenFloat, int decimalPlaces, bool rawFidelity = false)
		{
			return default(float);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x9C0854", Offset = "0x9C0854", VA = "0x9C0854")]
		public static bool IsEditTime()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x9C085C", Offset = "0x9C085C", VA = "0x9C085C")]
		public static float Mod(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x60015BC")]
		public static GameObject FindEvenInactiveGameObject<T>([Optional] string gameObjectName, bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60015BD")]
		public static T[] FindEvenInactiveComponents<T>(bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60015BE")]
		public static T FindEvenInactiveComponent<T>(bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x9C08D8", Offset = "0x9C08D8", VA = "0x9C08D8")]
		public static string GenerateVRTKObjectName(bool autoGen, params object[] replacements)
		{
			return null;
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x9C0B24", Offset = "0x9C0B24", VA = "0x9C0B24")]
		public static float GetGPUTimeLastFrame()
		{
			return default(float);
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x9C0B5C", Offset = "0x9C0B5C", VA = "0x9C0B5C")]
		public static bool Vector2ShallowCompare(Vector2 vectorA, Vector2 vectorB, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x9C0CC4", Offset = "0x9C0CC4", VA = "0x9C0CC4")]
		public static bool Vector3ShallowCompare(Vector3 vectorA, Vector3 vectorB, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x9C0684", Offset = "0x9C0684", VA = "0x9C0684")]
		public static float NumberPercent(float value, float percent)
		{
			return default(float);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x9BB51C", Offset = "0x9BB51C", VA = "0x9BB51C")]
		public static void SetGlobalScale(this Transform transform, Vector3 globalScale)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x9C0D84", Offset = "0x9C0D84", VA = "0x9C0D84")]
		public static Vector3 VectorHeading(Vector3 originPosition, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x9C0E2C", Offset = "0x9C0E2C", VA = "0x9C0E2C")]
		public static Vector3 VectorDirection(Vector3 originPosition, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x9C0F24", Offset = "0x9C0F24", VA = "0x9C0F24")]
		public static float DividerToMultiplier(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x9C0F38", Offset = "0x9C0F38", VA = "0x9C0F38")]
		public static float NormalizeValue(float value, float minValue, float maxValue, float threshold = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x9C0FFC", Offset = "0x9C0FFC", VA = "0x9C0FFC")]
		public static Vector3 AxisDirection(int axisIndex, [Optional] Transform givenTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015CA")]
		public static bool AddListValue<TValue>(List<TValue> list, TValue value, bool preventDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CB")]
		public static TValue GetDictionaryValue<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey key, [Optional] TValue defaultValue, bool setMissingKey = false)
		{
			return (TValue)null;
		}

		[Token(Token = "0x60015CC")]
		public static TValue GetDictionaryValue<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey key, out bool keyExists, [Optional] TValue defaultValue, bool setMissingKey = false)
		{
			return (TValue)null;
		}

		[Token(Token = "0x60015CD")]
		public static bool AddDictionaryValue<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey key, TValue value, bool overwriteExisting = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x9C129C", Offset = "0x9C129C", VA = "0x9C129C")]
		public static Type GetTypeUnknownAssembly(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x9C141C", Offset = "0x9C141C", VA = "0x9C141C")]
		public static float GetEyeTextureResolutionScale()
		{
			return default(float);
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x9C1424", Offset = "0x9C1424", VA = "0x9C1424")]
		public static void SetEyeTextureResolutionScale(float value)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x9B89C0", Offset = "0x9B89C0", VA = "0x9B89C0")]
		public static bool IsTypeSubclassOf(Type givenType, Type givenBaseType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x9C142C", Offset = "0x9C142C", VA = "0x9C142C")]
		public static object[] GetTypeCustomAttributes(Type givenType, Type attributeType, bool inherit)
		{
			return null;
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x9B9CEC", Offset = "0x9B9CEC", VA = "0x9B9CEC")]
		public static Type GetBaseType(Type givenType)
		{
			return null;
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x9C1474", Offset = "0x9C1474", VA = "0x9C1474")]
		public static bool IsTypeAssignableFrom(Type givenType, Type sourceType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x9C14B0", Offset = "0x9C14B0", VA = "0x9C14B0")]
		public static Type GetNestedType(Type givenType, string name)
		{
			return null;
		}

		[Token(Token = "0x60015D6")]
		public static string GetPropertyFirstName<T>()
		{
			return null;
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x9B3824", Offset = "0x9B3824", VA = "0x9B3824")]
		public static string[] GetCommandLineArguements()
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x9B630C", Offset = "0x9B630C", VA = "0x9B630C")]
		public static Type[] GetTypesOfType(Type givenType)
		{
			return null;
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x9C14E4", Offset = "0x9C14E4", VA = "0x9C14E4")]
		public static Type[] GetExportedTypesOfType(Type givenType)
		{
			return null;
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x9C1538", Offset = "0x9C1538", VA = "0x9C1538")]
		public static bool IsTypeAbstract(Type givenType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DB")]
		private static IEnumerable<T> FindEvenInactiveComponentsInValidScenes<T>(bool searchAllScenes, bool stopOnMatch = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60015DC")]
		private static IEnumerable<T> FindEvenInactiveComponentsInScene<T>(Scene scene, bool stopOnMatch = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64A164", Offset = "0x64A164")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x64A164", Offset = "0x64A164")]
	public class VRTK_Simulator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B5")]
		public class Keys
		{
			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode forward;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode backward;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode strafeLeft;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public KeyCode strafeRight;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode left;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public KeyCode right;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyCode up;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public KeyCode down;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KeyCode reset;

			[Token(Token = "0x6002369")]
			[Address(RVA = "0x9C1E04", Offset = "0x9C1E04", VA = "0x9C1E04")]
			public Keys()
			{
			}
		}

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661A1C", Offset = "0x661A1C")]
		public Keys keys;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661A54", Offset = "0x661A54")]
		public bool onlyInEditor;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661A8C", Offset = "0x661A8C")]
		public float stepSize;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661AC4", Offset = "0x661AC4")]
		public Transform camStart;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform headset;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform playArea;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 initialPosition;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x9C1564", Offset = "0x9C1564", VA = "0x9C1564", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x9C15C8", Offset = "0x9C15C8", VA = "0x9C15C8", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x9C1968", Offset = "0x9C1968", VA = "0x9C1968", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x9C19CC", Offset = "0x9C19CC", VA = "0x9C19CC", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x9C1DB0", Offset = "0x9C1DB0", VA = "0x9C1DB0", Slot = "8")]
		protected virtual Vector3 overwriteY(Vector3 vector, float value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x9C1DE8", Offset = "0x9C1DE8", VA = "0x9C1DE8")]
		public VRTK_Simulator()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64A1C4", Offset = "0x64A1C4")]
	public class VRTK_VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DAA0", Offset = "0x64DAA0")]
		private sealed class <EstimateVelocity>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_VelocityEstimator <>4__this;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x170002C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600236D")]
				[Address(RVA = "0x810668", Offset = "0x810668", VA = "0x810668", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600236F")]
				[Address(RVA = "0x8106D8", Offset = "0x8106D8", VA = "0x8106D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600236A")]
			[Address(RVA = "0x810134", Offset = "0x810134", VA = "0x810134")]
			[DebuggerHidden]
			public <EstimateVelocity>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600236B")]
			[Address(RVA = "0x81017C", Offset = "0x81017C", VA = "0x81017C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600236C")]
			[Address(RVA = "0x810180", Offset = "0x810180", VA = "0x810180", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600236E")]
			[Address(RVA = "0x810670", Offset = "0x810670", VA = "0x810670", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661AFC", Offset = "0x661AFC")]
		public bool autoStartSampling;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661B34", Offset = "0x661B34")]
		public int velocityAverageFrames;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661B6C", Offset = "0x661B6C")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vector3[] velocitySamples;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3[] angularVelocitySamples;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int currentSampleCount;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Coroutine calculateSamplesRoutine;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x80F980", Offset = "0x80F980", VA = "0x80F980", Slot = "4")]
		public virtual void StartEstimation()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x80F9CC", Offset = "0x80F9CC", VA = "0x80F9CC", Slot = "5")]
		public virtual void EndEstimation()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x80FA00", Offset = "0x80FA00", VA = "0x80FA00", Slot = "6")]
		public virtual Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x80FBE0", Offset = "0x80FBE0", VA = "0x80FBE0", Slot = "7")]
		public virtual Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x80FDC0", Offset = "0x80FDC0", VA = "0x80FDC0", Slot = "8")]
		public virtual Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x810004", Offset = "0x810004", VA = "0x810004", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x81004C", Offset = "0x81004C", VA = "0x81004C", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x810058", Offset = "0x810058", VA = "0x810058", Slot = "11")]
		protected virtual void InitArrays()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x8100C0", Offset = "0x8100C0", VA = "0x8100C0", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66F764", Offset = "0x66F764")]
		protected virtual IEnumerator EstimateVelocity()
		{
			return null;
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x810160", Offset = "0x810160", VA = "0x810160")]
		public VRTK_VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public abstract class SDK_Base : ScriptableObject
	{
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xB4C87C", Offset = "0xB4C87C", VA = "0xB4C87C", Slot = "4")]
		public virtual void OnBeforeSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xB4C880", Offset = "0xB4C880", VA = "0xB4C880", Slot = "5")]
		public virtual void OnAfterSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xB4C884", Offset = "0xB4C884", VA = "0xB4C884", Slot = "6")]
		public virtual void OnBeforeSetupUnload(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xB4C888", Offset = "0xB4C888", VA = "0xB4C888", Slot = "7")]
		public virtual void OnAfterSetupUnload(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xB4C88C", Offset = "0xB4C88C", VA = "0xB4C88C")]
		protected SDK_Base()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public abstract class SDK_BaseBoundaries : SDK_Base
	{
		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform cachedPlayArea;

		[Token(Token = "0x60015F2")]
		public abstract void InitBoundaries();

		[Token(Token = "0x60015F3")]
		public abstract Transform GetPlayArea();

		[Token(Token = "0x60015F4")]
		public abstract Vector3[] GetPlayAreaVertices();

		[Token(Token = "0x60015F5")]
		public abstract float GetPlayAreaBorderThickness();

		[Token(Token = "0x60015F6")]
		public abstract bool IsPlayAreaSizeCalibrated();

		[Token(Token = "0x60015F7")]
		public abstract bool GetDrawAtRuntime();

		[Token(Token = "0x60015F8")]
		public abstract void SetDrawAtRuntime(bool value);

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xB4C894", Offset = "0xB4C894", VA = "0xB4C894")]
		protected Transform GetSDKManagerPlayArea()
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xB4CA48", Offset = "0xB4CA48", VA = "0xB4CA48")]
		protected SDK_BaseBoundaries()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public struct VRTKSDKBaseControllerEventArgs
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x20001D3")]
	public delegate void VRTKSDKBaseControllerEventHandler(object sender, VRTKSDKBaseControllerEventArgs e);
	[Token(Token = "0x20001D4")]
	public abstract class SDK_BaseController : SDK_Base
	{
		[Token(Token = "0x20004B7")]
		public enum ButtonTypes
		{
			[Token(Token = "0x4002107")]
			ButtonOne,
			[Token(Token = "0x4002108")]
			ButtonTwo,
			[Token(Token = "0x4002109")]
			Grip,
			[Token(Token = "0x400210A")]
			GripHairline,
			[Token(Token = "0x400210B")]
			StartMenu,
			[Token(Token = "0x400210C")]
			Trigger,
			[Token(Token = "0x400210D")]
			TriggerHairline,
			[Token(Token = "0x400210E")]
			Touchpad,
			[Token(Token = "0x400210F")]
			TouchpadTwo,
			[Token(Token = "0x4002110")]
			MiddleFinger,
			[Token(Token = "0x4002111")]
			RingFinger,
			[Token(Token = "0x4002112")]
			PinkyFinger
		}

		[Token(Token = "0x20004B8")]
		public enum ButtonPressTypes
		{
			[Token(Token = "0x4002114")]
			Press,
			[Token(Token = "0x4002115")]
			PressDown,
			[Token(Token = "0x4002116")]
			PressUp,
			[Token(Token = "0x4002117")]
			Touch,
			[Token(Token = "0x4002118")]
			TouchDown,
			[Token(Token = "0x4002119")]
			TouchUp
		}

		[Token(Token = "0x20004B9")]
		public enum ControllerElements
		{
			[Token(Token = "0x400211B")]
			AttachPoint,
			[Token(Token = "0x400211C")]
			Trigger,
			[Token(Token = "0x400211D")]
			GripLeft,
			[Token(Token = "0x400211E")]
			GripRight,
			[Token(Token = "0x400211F")]
			Touchpad,
			[Token(Token = "0x4002120")]
			ButtonOne,
			[Token(Token = "0x4002121")]
			ButtonTwo,
			[Token(Token = "0x4002122")]
			SystemMenu,
			[Token(Token = "0x4002123")]
			Body,
			[Token(Token = "0x4002124")]
			StartMenu,
			[Token(Token = "0x4002125")]
			TouchpadTwo
		}

		[Token(Token = "0x20004BA")]
		public enum ControllerHand
		{
			[Token(Token = "0x4002127")]
			None,
			[Token(Token = "0x4002128")]
			Left,
			[Token(Token = "0x4002129")]
			Right
		}

		[Token(Token = "0x20004BB")]
		public enum ControllerType
		{
			[Token(Token = "0x400212B")]
			Undefined,
			[Token(Token = "0x400212C")]
			Custom,
			[Token(Token = "0x400212D")]
			Simulator_Hand,
			[Token(Token = "0x400212E")]
			SteamVR_ViveWand,
			[Token(Token = "0x400212F")]
			SteamVR_OculusTouch,
			[Token(Token = "0x4002130")]
			Oculus_OculusTouch,
			[Token(Token = "0x4002131")]
			Daydream_Controller,
			[Token(Token = "0x4002132")]
			Ximmerse_Flip,
			[Token(Token = "0x4002133")]
			SteamVR_ValveKnuckles,
			[Token(Token = "0x4002134")]
			Oculus_OculusGamepad,
			[Token(Token = "0x4002135")]
			Oculus_OculusRemote,
			[Token(Token = "0x4002136")]
			Oculus_GearVRHMD,
			[Token(Token = "0x4002137")]
			Oculus_GearVRController,
			[Token(Token = "0x4002138")]
			WindowsMR_MotionController,
			[Token(Token = "0x4002139")]
			SteamVR_WindowsMRController,
			[Token(Token = "0x400213A")]
			PlayStation_MotionController
		}

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform defaultSDKLeftControllerModel;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform defaultSDKRightControllerModel;

		[Token(Token = "0x140000E5")]
		public event VRTKSDKBaseControllerEventHandler LeftControllerReady
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0xB4CA50", Offset = "0xB4CA50", VA = "0xB4CA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F7C8", Offset = "0x66F7C8")]
			add
			{
			}
			[Token(Token = "0x6001600")]
			[Address(RVA = "0xB4CB3C", Offset = "0xB4CB3C", VA = "0xB4CB3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F7D8", Offset = "0x66F7D8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E6")]
		public event VRTKSDKBaseControllerEventHandler RightControllerReady
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0xB4CC28", Offset = "0xB4CC28", VA = "0xB4CC28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F7E8", Offset = "0x66F7E8")]
			add
			{
			}
			[Token(Token = "0x6001602")]
			[Address(RVA = "0xB4CD14", Offset = "0xB4CD14", VA = "0xB4CD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F7F8", Offset = "0x66F7F8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E7")]
		public event VRTKSDKBaseControllerEventHandler LeftControllerModelReady
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0xB4CE00", Offset = "0xB4CE00", VA = "0xB4CE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F808", Offset = "0x66F808")]
			add
			{
			}
			[Token(Token = "0x6001604")]
			[Address(RVA = "0xB4CEEC", Offset = "0xB4CEEC", VA = "0xB4CEEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F818", Offset = "0x66F818")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E8")]
		public event VRTKSDKBaseControllerEventHandler RightControllerModelReady
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0xB4CFD8", Offset = "0xB4CFD8", VA = "0xB4CFD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F828", Offset = "0x66F828")]
			add
			{
			}
			[Token(Token = "0x6001606")]
			[Address(RVA = "0xB4D0C4", Offset = "0xB4D0C4", VA = "0xB4D0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66F838", Offset = "0x66F838")]
			remove
			{
			}
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xB4D1B0", Offset = "0xB4D1B0", VA = "0xB4D1B0", Slot = "8")]
		public virtual void OnControllerReady(ControllerHand hand)
		{
		}

		[Token(Token = "0x6001608")]
		public abstract void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options);

		[Token(Token = "0x6001609")]
		public abstract void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options);

		[Token(Token = "0x600160A")]
		public abstract ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference);

		[Token(Token = "0x600160B")]
		public abstract string GetControllerDefaultColliderPath(ControllerHand hand);

		[Token(Token = "0x600160C")]
		public abstract string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false);

		[Token(Token = "0x600160D")]
		public abstract uint GetControllerIndex(GameObject controller);

		[Token(Token = "0x600160E")]
		public abstract GameObject GetControllerByIndex(uint index, bool actual = false);

		[Token(Token = "0x600160F")]
		public abstract Transform GetControllerOrigin(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001610")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66F848", Offset = "0x66F848")]
		public abstract Transform GenerateControllerPointerOrigin(GameObject parent);

		[Token(Token = "0x6001611")]
		public abstract GameObject GetControllerLeftHand(bool actual = false);

		[Token(Token = "0x6001612")]
		public abstract GameObject GetControllerRightHand(bool actual = false);

		[Token(Token = "0x6001613")]
		public abstract bool IsControllerLeftHand(GameObject controller);

		[Token(Token = "0x6001614")]
		public abstract bool IsControllerRightHand(GameObject controller);

		[Token(Token = "0x6001615")]
		public abstract bool IsControllerLeftHand(GameObject controller, bool actual);

		[Token(Token = "0x6001616")]
		public abstract bool IsControllerRightHand(GameObject controller, bool actual);

		[Token(Token = "0x6001617")]
		public abstract bool WaitForControllerModel(ControllerHand hand);

		[Token(Token = "0x6001618")]
		public abstract GameObject GetControllerModel(GameObject controller);

		[Token(Token = "0x6001619")]
		public abstract GameObject GetControllerModel(ControllerHand hand);

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xB4D264", Offset = "0xB4D264", VA = "0xB4D264", Slot = "27")]
		public virtual ControllerHand GetControllerModelHand(GameObject controllerModel)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x600161B")]
		public abstract GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x600161C")]
		public abstract void SetControllerRenderModelWheel(GameObject renderModel, bool state);

		[Token(Token = "0x600161D")]
		public abstract void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f);

		[Token(Token = "0x600161E")]
		public abstract bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip);

		[Token(Token = "0x600161F")]
		public abstract SDK_ControllerHapticModifiers GetHapticModifiers();

		[Token(Token = "0x6001620")]
		public abstract Vector3 GetVelocity(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001621")]
		public abstract Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001622")]
		public abstract bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity);

		[Token(Token = "0x6001623")]
		public abstract Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001624")]
		public abstract float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001625")]
		public abstract float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001626")]
		public abstract bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xB4D418", Offset = "0xB4D418", VA = "0xB4D418", Slot = "40")]
		protected virtual GameObject GetSDKManagerControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xB4D558", Offset = "0xB4D558", VA = "0xB4D558", Slot = "41")]
		protected virtual GameObject GetSDKManagerControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xB4D698", Offset = "0xB4D698", VA = "0xB4D698", Slot = "42")]
		protected virtual bool CheckActualOrScriptAliasControllerIsLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xB4D6F8", Offset = "0xB4D6F8", VA = "0xB4D6F8", Slot = "43")]
		protected virtual bool CheckActualOrScriptAliasControllerIsRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xB4D758", Offset = "0xB4D758", VA = "0xB4D758", Slot = "44")]
		protected virtual bool CheckControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xB4D908", Offset = "0xB4D908", VA = "0xB4D908", Slot = "45")]
		protected virtual bool CheckControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xB4DAB8", Offset = "0xB4DAB8", VA = "0xB4DAB8", Slot = "46")]
		protected virtual GameObject GetControllerModelFromController(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xB4DB44", Offset = "0xB4DB44", VA = "0xB4DB44", Slot = "47")]
		protected virtual GameObject GetSDKManagerControllerModelForHand(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xB4DCB8", Offset = "0xB4DCB8", VA = "0xB4DCB8", Slot = "48")]
		protected virtual GameObject GetActualController(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xB4DE58", Offset = "0xB4DE58", VA = "0xB4DE58", Slot = "49")]
		protected virtual void OnControllerModelReady(ControllerHand hand, VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xB4DE8C", Offset = "0xB4DE8C", VA = "0xB4DE8C", Slot = "50")]
		protected virtual bool ShouldWaitForControllerModel(ControllerHand hand, bool ignoreChildCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xB4DF18", Offset = "0xB4DF18", VA = "0xB4DF18", Slot = "51")]
		protected virtual bool IsDefaultControllerModel(Transform givenDefault, GameObject givenActual, bool ignoreChildCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xB4E05C", Offset = "0xB4E05C", VA = "0xB4E05C")]
		protected SDK_BaseController()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class SDK_ControllerHapticModifiers
	{
		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float durationModifier;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float intervalModifier;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ushort maxHapticVibration;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int hapticsBufferSize;

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xB4E700", Offset = "0xB4E700", VA = "0xB4E700")]
		public SDK_ControllerHapticModifiers()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public abstract class SDK_BaseHeadset : SDK_Base
	{
		[Token(Token = "0x20004BC")]
		public enum HeadsetType
		{
			[Token(Token = "0x400213C")]
			Undefined,
			[Token(Token = "0x400213D")]
			Simulator,
			[Token(Token = "0x400213E")]
			HTCVive,
			[Token(Token = "0x400213F")]
			OculusRiftDK1,
			[Token(Token = "0x4002140")]
			OculusRiftDK2,
			[Token(Token = "0x4002141")]
			OculusRift,
			[Token(Token = "0x4002142")]
			OculusGearVR,
			[Token(Token = "0x4002143")]
			GoogleDaydream,
			[Token(Token = "0x4002144")]
			GoogleCardboard,
			[Token(Token = "0x4002145")]
			HyperealVR,
			[Token(Token = "0x4002146")]
			WindowsMixedReality
		}

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform cachedHeadset;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Transform cachedHeadsetCamera;

		[Token(Token = "0x6001635")]
		public abstract void ProcessUpdate(Dictionary<string, object> options);

		[Token(Token = "0x6001636")]
		public abstract void ProcessFixedUpdate(Dictionary<string, object> options);

		[Token(Token = "0x6001637")]
		public abstract Transform GetHeadset();

		[Token(Token = "0x6001638")]
		public abstract Transform GetHeadsetCamera();

		[Token(Token = "0x6001639")]
		public abstract string GetHeadsetType();

		[Token(Token = "0x600163A")]
		public abstract Vector3 GetHeadsetVelocity();

		[Token(Token = "0x600163B")]
		public abstract Vector3 GetHeadsetAngularVelocity();

		[Token(Token = "0x600163C")]
		public abstract void HeadsetFade(Color color, float duration, bool fadeOverlay = false);

		[Token(Token = "0x600163D")]
		public abstract bool HasHeadsetFade(Transform obj);

		[Token(Token = "0x600163E")]
		public abstract void AddHeadsetFade(Transform camera);

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xB4E064", Offset = "0xB4E064", VA = "0xB4E064")]
		protected Transform GetSDKManagerHeadset()
		{
			return null;
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xB4E268", Offset = "0xB4E268", VA = "0xB4E268", Slot = "18")]
		protected virtual string ScrapeHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xB4E61C", Offset = "0xB4E61C", VA = "0xB4E61C")]
		protected string CleanPropertyString(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xB4E6F0", Offset = "0xB4E6F0", VA = "0xB4E6F0")]
		protected SDK_BaseHeadset()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public abstract class SDK_BaseSystem : SDK_Base
	{
		[Token(Token = "0x6001643")]
		public abstract bool IsDisplayOnDesktop();

		[Token(Token = "0x6001644")]
		public abstract bool ShouldAppRenderWithLowResources();

		[Token(Token = "0x6001645")]
		public abstract void ForceInterleavedReprojectionOn(bool force);

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xB4E6F8", Offset = "0xB4E6F8", VA = "0xB4E6F8")]
		protected SDK_BaseSystem()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x64A1FC", Offset = "0x64A1FC")]
	public sealed class SDK_DescriptionAttribute : Attribute
	{
		[Serializable]
		[Token(Token = "0x20004BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DAB0", Offset = "0x64DAB0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SDK_DescriptionAttribute, int> <>9__8_0;

			[Token(Token = "0x6002371")]
			[Address(RVA = "0xB4F09C", Offset = "0xB4F09C", VA = "0xB4F09C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002372")]
			[Address(RVA = "0xB4F0A4", Offset = "0xB4F0A4", VA = "0xB4F0A4")]
			internal int <GetDescriptions>b__8_0(SDK_DescriptionAttribute attribute)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string prettyName;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string symbol;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string vrDeviceName;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int index;

		[Token(Token = "0x170000FF")]
		public bool describesFallbackSDK
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0xB4E988", Offset = "0xB4E988", VA = "0xB4E988")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xB4E9DC", Offset = "0xB4E9DC", VA = "0xB4E9DC")]
		public SDK_DescriptionAttribute(string prettyName, string symbol, string vrDeviceName, string buildTargetGroupName, int index = 0)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xB4EB64", Offset = "0xB4EB64", VA = "0xB4EB64")]
		public SDK_DescriptionAttribute(Type typeToCopyExistingDescriptionFrom, int index = 0)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xB4EED4", Offset = "0xB4EED4", VA = "0xB4EED4")]
		public static SDK_DescriptionAttribute[] GetDescriptions(Type type)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x64A248", Offset = "0x64A248")]
	public sealed class SDK_ScriptingDefineSymbolPredicateAttribute : Attribute, ISerializationCallbackReceiver
	{
		[Token(Token = "0x40010DC")]
		public const string RemovableSymbolPrefix = "VRTK_DEFINE_";

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string symbol;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string buildTargetGroupName;

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xB579B0", Offset = "0xB579B0", VA = "0xB579B0")]
		private SDK_ScriptingDefineSymbolPredicateAttribute()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xB579B8", Offset = "0xB579B8", VA = "0xB579B8")]
		public SDK_ScriptingDefineSymbolPredicateAttribute(string symbol, string buildTargetGroupName)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xB57B88", Offset = "0xB57B88", VA = "0xB57B88")]
		public SDK_ScriptingDefineSymbolPredicateAttribute(SDK_ScriptingDefineSymbolPredicateAttribute attributeToCopy)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xB57BE4", Offset = "0xB57BE4", VA = "0xB57BE4", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xB57BE8", Offset = "0xB57BE8", VA = "0xB57BE8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xB57B80", Offset = "0xB57B80", VA = "0xB57B80")]
		private void SetBuildTarget(string groupName)
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A294", Offset = "0x64A294")]
	public class SDK_DaydreamBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6001651")]
		[Address(RVA = "0xB4E8C4", Offset = "0xB4E8C4", VA = "0xB4E8C4")]
		public SDK_DaydreamBoundaries()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A2FC", Offset = "0x64A2FC")]
	public class SDK_DaydreamController : SDK_FallbackController
	{
		[Token(Token = "0x6001652")]
		[Address(RVA = "0xB4E8D4", Offset = "0xB4E8D4", VA = "0xB4E8D4")]
		public SDK_DaydreamController()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public static class SDK_DaydreamDefines
	{
		[Token(Token = "0x40010DF")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_DAYDREAM";

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xB4E8E4", Offset = "0xB4E8E4", VA = "0xB4E8E4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66F880", Offset = "0x66F880")]
		private static bool IsDaydreamAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A364", Offset = "0x64A364")]
	public class SDK_DaydreamHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6001654")]
		[Address(RVA = "0xB4E968", Offset = "0xB4E968", VA = "0xB4E968")]
		public SDK_DaydreamHeadset()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A3CC", Offset = "0x64A3CC")]
	public class SDK_DaydreamSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6001655")]
		[Address(RVA = "0xB4E978", Offset = "0xB4E978", VA = "0xB4E978")]
		public SDK_DaydreamSystem()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A44C", Offset = "0x64A44C")]
	public class SDK_FallbackBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x6001656")]
		[Address(RVA = "0xB4F0D0", Offset = "0xB4F0D0", VA = "0xB4F0D0", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xB4F0D4", Offset = "0xB4F0D4", VA = "0xB4F0D4", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xB4F0DC", Offset = "0xB4F0DC", VA = "0xB4F0DC", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xB4F0E4", Offset = "0xB4F0E4", VA = "0xB4F0E4", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xB4F0EC", Offset = "0xB4F0EC", VA = "0xB4F0EC", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xB4F0F4", Offset = "0xB4F0F4", VA = "0xB4F0F4", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xB4F0FC", Offset = "0xB4F0FC", VA = "0xB4F0FC", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xB4E8CC", Offset = "0xB4E8CC", VA = "0xB4E8CC")]
		public SDK_FallbackBoundaries()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A4B4", Offset = "0x64A4B4")]
	public class SDK_FallbackController : SDK_BaseController
	{
		[Token(Token = "0x600165E")]
		[Address(RVA = "0xB4F100", Offset = "0xB4F100", VA = "0xB4F100", Slot = "9")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xB4F104", Offset = "0xB4F104", VA = "0xB4F104", Slot = "10")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xB4F108", Offset = "0xB4F108", VA = "0xB4F108", Slot = "11")]
		public override ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xB4F110", Offset = "0xB4F110", VA = "0xB4F110", Slot = "12")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xB4F158", Offset = "0xB4F158", VA = "0xB4F158", Slot = "13")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xB4F1A0", Offset = "0xB4F1A0", VA = "0xB4F1A0", Slot = "14")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xB4F1A8", Offset = "0xB4F1A8", VA = "0xB4F1A8", Slot = "15")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xB4F1B0", Offset = "0xB4F1B0", VA = "0xB4F1B0", Slot = "16")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xB4F1B8", Offset = "0xB4F1B8", VA = "0xB4F1B8", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66F8CC", Offset = "0x66F8CC")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xB4F1C0", Offset = "0xB4F1C0", VA = "0xB4F1C0", Slot = "18")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xB4F1C8", Offset = "0xB4F1C8", VA = "0xB4F1C8", Slot = "19")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xB4F1D0", Offset = "0xB4F1D0", VA = "0xB4F1D0", Slot = "20")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xB4F1D8", Offset = "0xB4F1D8", VA = "0xB4F1D8", Slot = "21")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xB4F1E0", Offset = "0xB4F1E0", VA = "0xB4F1E0", Slot = "22")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xB4F1E8", Offset = "0xB4F1E8", VA = "0xB4F1E8", Slot = "23")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xB4F1F0", Offset = "0xB4F1F0", VA = "0xB4F1F0", Slot = "24")]
		public override bool WaitForControllerModel(ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xB4F1F8", Offset = "0xB4F1F8", VA = "0xB4F1F8", Slot = "25")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xB4F200", Offset = "0xB4F200", VA = "0xB4F200", Slot = "26")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xB4F208", Offset = "0xB4F208", VA = "0xB4F208", Slot = "28")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xB4F210", Offset = "0xB4F210", VA = "0xB4F210", Slot = "29")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xB4F214", Offset = "0xB4F214", VA = "0xB4F214", Slot = "30")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xB4F218", Offset = "0xB4F218", VA = "0xB4F218", Slot = "31")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xB4F220", Offset = "0xB4F220", VA = "0xB4F220", Slot = "32")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xB4F294", Offset = "0xB4F294", VA = "0xB4F294", Slot = "33")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xB4F2F4", Offset = "0xB4F2F4", VA = "0xB4F2F4", Slot = "34")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xB4F354", Offset = "0xB4F354", VA = "0xB4F354", Slot = "35")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xB4F36C", Offset = "0xB4F36C", VA = "0xB4F36C", Slot = "36")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xB4F3CC", Offset = "0xB4F3CC", VA = "0xB4F3CC", Slot = "37")]
		public override float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB4F3D4", Offset = "0xB4F3D4", VA = "0xB4F3D4", Slot = "38")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xB4F3DC", Offset = "0xB4F3DC", VA = "0xB4F3DC", Slot = "39")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xB4E8DC", Offset = "0xB4E8DC", VA = "0xB4E8DC")]
		public SDK_FallbackController()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A51C", Offset = "0x64A51C")]
	public class SDK_FallbackHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x600167D")]
		[Address(RVA = "0xB4F3E4", Offset = "0xB4F3E4", VA = "0xB4F3E4", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xB4F3E8", Offset = "0xB4F3E8", VA = "0xB4F3E8", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xB4F3EC", Offset = "0xB4F3EC", VA = "0xB4F3EC", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xB4F3F4", Offset = "0xB4F3F4", VA = "0xB4F3F4", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xB4F3FC", Offset = "0xB4F3FC", VA = "0xB4F3FC", Slot = "12")]
		public override string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xB4F444", Offset = "0xB4F444", VA = "0xB4F444", Slot = "13")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xB4F4A4", Offset = "0xB4F4A4", VA = "0xB4F4A4", Slot = "14")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xB4F504", Offset = "0xB4F504", VA = "0xB4F504", Slot = "15")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xB4F508", Offset = "0xB4F508", VA = "0xB4F508", Slot = "16")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xB4F510", Offset = "0xB4F510", VA = "0xB4F510", Slot = "17")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xB4E970", Offset = "0xB4E970", VA = "0xB4E970")]
		public SDK_FallbackHeadset()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A584", Offset = "0x64A584")]
	public class SDK_FallbackSystem : SDK_BaseSystem
	{
		[Token(Token = "0x6001688")]
		[Address(RVA = "0xB4F514", Offset = "0xB4F514", VA = "0xB4F514", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xB4F51C", Offset = "0xB4F51C", VA = "0xB4F51C", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xB4F524", Offset = "0xB4F524", VA = "0xB4F524", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xB4E980", Offset = "0xB4E980", VA = "0xB4E980")]
		public SDK_FallbackSystem()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A5CC", Offset = "0x64A5CC")]
	public class SDK_HyperealVRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x600168C")]
		[Address(RVA = "0xB4F528", Offset = "0xB4F528", VA = "0xB4F528")]
		public SDK_HyperealVRBoundaries()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A634", Offset = "0x64A634")]
	public class SDK_HyperealVRController : SDK_FallbackController
	{
		[Token(Token = "0x600168D")]
		[Address(RVA = "0xB4F530", Offset = "0xB4F530", VA = "0xB4F530")]
		public SDK_HyperealVRController()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public static class SDK_HyperealVRDefines
	{
		[Token(Token = "0x40010E0")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_HYPEREALVR";

		[Token(Token = "0x40010E1")]
		private const string BuildTargetGroupName = "Standalone";

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xB4F538", Offset = "0xB4F538", VA = "0xB4F538")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66F904", Offset = "0x66F904")]
		private static bool IsHyperealVRAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A69C", Offset = "0x64A69C")]
	public class SDK_HyperealVRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x600168F")]
		[Address(RVA = "0xB4F5BC", Offset = "0xB4F5BC", VA = "0xB4F5BC")]
		public SDK_HyperealVRHeadset()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A704", Offset = "0x64A704")]
	public class SDK_HyperealVRSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6001690")]
		[Address(RVA = "0xB4F5C4", Offset = "0xB4F5C4", VA = "0xB4F5C4")]
		public SDK_HyperealVRSystem()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A774", Offset = "0x64A774")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A774", Offset = "0x64A774")]
	public class SDK_OculusBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x6001691")]
		[Address(RVA = "0xB53658", Offset = "0xB53658", VA = "0xB53658", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xB5365C", Offset = "0xB5365C", VA = "0xB5365C", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xB53750", Offset = "0xB53750", VA = "0xB53750", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xB53AB0", Offset = "0xB53AB0", VA = "0xB53AB0", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xB53ABC", Offset = "0xB53ABC", VA = "0xB53ABC", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xB53AC4", Offset = "0xB53AC4", VA = "0xB53AC4", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xB53ACC", Offset = "0xB53ACC", VA = "0xB53ACC", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xB53AD0", Offset = "0xB53AD0", VA = "0xB53AD0")]
		public SDK_OculusBoundaries()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A808", Offset = "0x64A808")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A808", Offset = "0x64A808")]
	public class SDK_OculusController : SDK_BaseController
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SDK_OculusBoundaries cachedBoundariesSDK;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected OVRInput.RawAxis2D[] thumbsticks;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected OVRInput.RawAxis2D[] touchpads;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected OVRInput.RawAxis1D[] triggers;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected OVRInput.RawAxis1D[] grips;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected OVRInput.RawNearTouch[] triggerSense;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected OVRInput.RawNearTouch[] touchpadSense;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected VRTK_VelocityEstimator cachedLeftVelocityEstimator;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected VRTK_VelocityEstimator cachedRightVelocityEstimator;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool[] previousHairTriggerState;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected bool[] currentHairTriggerState;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool[] previousHairGripState;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool[] currentHairGripState;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float[] hairTriggerLimit;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float[] hairGripLimit;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected OVRHapticsClip hapticsProceduralClipLeft;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected OVRHapticsClip hapticsProceduralClipRight;

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xB53AD8", Offset = "0xB53AD8", VA = "0xB53AD8", Slot = "5")]
		public override void OnAfterSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xB53B90", Offset = "0xB53B90", VA = "0xB53B90", Slot = "9")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xB53BA0", Offset = "0xB53BA0", VA = "0xB53BA0", Slot = "10")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xB53BA4", Offset = "0xB53BA4", VA = "0xB53BA4", Slot = "11")]
		public override ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(ControllerType);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xB53C30", Offset = "0xB53C30", VA = "0xB53C30", Slot = "12")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xB53D2C", Offset = "0xB53D2C", VA = "0xB53D2C", Slot = "13")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xB542EC", Offset = "0xB542EC", VA = "0xB542EC", Slot = "14")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xB543A4", Offset = "0xB543A4", VA = "0xB543A4", Slot = "15")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xB5459C", Offset = "0xB5459C", VA = "0xB5459C", Slot = "16")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xB545FC", Offset = "0xB545FC", VA = "0xB545FC", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66F950", Offset = "0x66F950")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xB54604", Offset = "0xB54604", VA = "0xB54604", Slot = "18")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xB546D8", Offset = "0xB546D8", VA = "0xB546D8", Slot = "19")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xB547AC", Offset = "0xB547AC", VA = "0xB547AC", Slot = "20")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xB547BC", Offset = "0xB547BC", VA = "0xB547BC", Slot = "21")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xB547CC", Offset = "0xB547CC", VA = "0xB547CC", Slot = "22")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xB547E0", Offset = "0xB547E0", VA = "0xB547E0", Slot = "23")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xB547F4", Offset = "0xB547F4", VA = "0xB547F4", Slot = "24")]
		public override bool WaitForControllerModel(ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xB54854", Offset = "0xB54854", VA = "0xB54854", Slot = "25")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xB54864", Offset = "0xB54864", VA = "0xB54864", Slot = "26")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xB54AF8", Offset = "0xB54AF8", VA = "0xB54AF8", Slot = "28")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xB54B00", Offset = "0xB54B00", VA = "0xB54B00", Slot = "29")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xB54B04", Offset = "0xB54B04", VA = "0xB54B04", Slot = "30")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xB54D3C", Offset = "0xB54D3C", VA = "0xB54D3C", Slot = "31")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xB54EE0", Offset = "0xB54EE0", VA = "0xB54EE0", Slot = "32")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xB54F8C", Offset = "0xB54F8C", VA = "0xB54F8C", Slot = "33")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xB5509C", Offset = "0xB5509C", VA = "0xB5509C", Slot = "34")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xB55224", Offset = "0xB55224", VA = "0xB55224", Slot = "35")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xB55230", Offset = "0xB55230", VA = "0xB55230", Slot = "36")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xB55448", Offset = "0xB55448", VA = "0xB55448", Slot = "37")]
		public override float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xB555BC", Offset = "0xB555BC", VA = "0xB555BC", Slot = "38")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xB5563C", Offset = "0xB5563C", VA = "0xB5563C", Slot = "39")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xB559F0", Offset = "0xB559F0", VA = "0xB559F0", Slot = "52")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xB55B18", Offset = "0xB55B18", VA = "0xB55B18", Slot = "53")]
		protected virtual void RegisterAvatarEvents()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xB55B68", Offset = "0xB55B68", VA = "0xB55B68", Slot = "54")]
		protected virtual void BothControllersReady()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xB55C14", Offset = "0xB55C14", VA = "0xB55C14", Slot = "55")]
		protected virtual void ProcessControllerUpdate(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xB55F60", Offset = "0xB55F60", VA = "0xB55F60", Slot = "56")]
		protected virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xB5639C", Offset = "0xB5639C", VA = "0xB5639C", Slot = "57")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xB56420", Offset = "0xB56420", VA = "0xB56420", Slot = "58")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, OVRInput.Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xB565E8", Offset = "0xB565E8", VA = "0xB565E8", Slot = "59")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, OVRInput.Touch button)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xB567B4", Offset = "0xB567B4", VA = "0xB567B4", Slot = "60")]
		protected virtual OVRInput.Controller GetControllerMask(uint index)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xB5686C", Offset = "0xB5686C", VA = "0xB5686C", Slot = "61")]
		protected virtual OVRInput.RawAxis2D GetTouchpadAxisMask(uint index)
		{
			return default(OVRInput.RawAxis2D);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xB568F0", Offset = "0xB568F0", VA = "0xB568F0", Slot = "62")]
		protected virtual OVRInput.Touch GetTouchpadTouchMask()
		{
			return default(OVRInput.Touch);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xB56934", Offset = "0xB56934", VA = "0xB56934", Slot = "63")]
		protected virtual OVRInput.Button GetTouchpadButtonMask()
		{
			return default(OVRInput.Button);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xB56978", Offset = "0xB56978", VA = "0xB56978", Slot = "64")]
		protected virtual void UpdateHairValues(uint index, float axisValue, float hairDelta, ref bool previousState, ref bool currentState, ref float hairLimit)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xB56A98", Offset = "0xB56A98", VA = "0xB56A98", Slot = "65")]
		protected virtual SDK_OculusBoundaries GetBoundariesSDK()
		{
			return null;
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xB56C24", Offset = "0xB56C24", VA = "0xB56C24", Slot = "66")]
		protected virtual bool HasAvatar(bool controllersAreVisible = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xB56C48", Offset = "0xB56C48", VA = "0xB56C48", Slot = "67")]
		protected virtual GameObject GetAvatar()
		{
			return null;
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xB56C6C", Offset = "0xB56C6C", VA = "0xB56C6C")]
		public SDK_OculusController()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public static class SDK_OculusDefines
	{
		[Token(Token = "0x40010F5")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_OCULUS";

		[Token(Token = "0x40010F6")]
		public const string AvatarScriptingDefineSymbol = "VRTK_DEFINE_SDK_OCULUS_AVATAR";

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xB56F84", Offset = "0xB56F84", VA = "0xB56F84")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66F988", Offset = "0x66F988")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66F988", Offset = "0x66F988")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66F988", Offset = "0x66F988")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66F988", Offset = "0x66F988")]
		private static bool IsUtilitiesVersion1120OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xB571C8", Offset = "0xB571C8", VA = "0xB571C8")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FA90", Offset = "0x66FA90")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FA90", Offset = "0x66FA90")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FA90", Offset = "0x66FA90")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FA90", Offset = "0x66FA90")]
		private static bool IsUtilitiesVersion1110OrOlder()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xB572A4", Offset = "0xB572A4", VA = "0xB572A4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FB98", Offset = "0x66FB98")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FB98", Offset = "0x66FB98")]
		private static bool IsAvatarAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xB57060", Offset = "0xB57060", VA = "0xB57060")]
		private static Version GetOculusWrapperVersion()
		{
			return null;
		}
	}
	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A89C", Offset = "0x64A89C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A89C", Offset = "0x64A89C")]
	public class SDK_OculusHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_VelocityEstimator cachedHeadsetVelocityEstimator;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xB57348", Offset = "0xB57348", VA = "0xB57348", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xB5734C", Offset = "0xB5734C", VA = "0xB5734C", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xB57350", Offset = "0xB57350", VA = "0xB57350", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xB57418", Offset = "0xB57418", VA = "0xB57418", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xB574B8", Offset = "0xB574B8", VA = "0xB574B8", Slot = "12")]
		public override string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xB57544", Offset = "0xB57544", VA = "0xB57544", Slot = "13")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xB57610", Offset = "0xB57610", VA = "0xB57610", Slot = "14")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xB57658", Offset = "0xB57658", VA = "0xB57658", Slot = "15")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xB57660", Offset = "0xB57660", VA = "0xB57660", Slot = "16")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xB576F0", Offset = "0xB576F0", VA = "0xB576F0", Slot = "17")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xB577F0", Offset = "0xB577F0", VA = "0xB577F0", Slot = "19")]
		protected virtual void SetHeadsetCaches()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xB57964", Offset = "0xB57964", VA = "0xB57964")]
		public SDK_OculusHeadset()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A930", Offset = "0x64A930")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64A930", Offset = "0x64A930")]
	public class SDK_OculusSystem : SDK_BaseSystem
	{
		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xB5796C", Offset = "0xB5796C", VA = "0xB5796C", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xB57974", Offset = "0xB57974", VA = "0xB57974", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xB5797C", Offset = "0xB5797C", VA = "0xB5797C", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xB57980", Offset = "0xB57980", VA = "0xB57980")]
		public SDK_OculusSystem()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class PSVRKeyMappings : MonoBehaviour
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PSVRMoveController.PlayStationKeys trigger;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PSVRMoveController.PlayStationKeys triggerHairline;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PSVRMoveController.PlayStationKeys grip;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PSVRMoveController.PlayStationKeys gripHairline;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PSVRMoveController.PlayStationKeys touchpad;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PSVRMoveController.PlayStationKeys buttonOne;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PSVRMoveController.PlayStationKeys buttonTwo;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PSVRMoveController.PlayStationKeys startMenu;

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xB49CF4", Offset = "0xB49CF4", VA = "0xB49CF4")]
		public PSVRKeyMappings()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AA28", Offset = "0x64AA28")]
	public class SDK_PlayStationBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xB57988", Offset = "0xB57988", VA = "0xB57988")]
		public SDK_PlayStationBoundaries()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AA90", Offset = "0x64AA90")]
	public class SDK_PlayStationController : SDK_FallbackController
	{
		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xB57990", Offset = "0xB57990", VA = "0xB57990")]
		public SDK_PlayStationController()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public static class SDK_PlayStationDefines
	{
		[Token(Token = "0x4001100")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_PLAYSTATION";

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xB57998", Offset = "0xB57998", VA = "0xB57998")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FC28", Offset = "0x66FC28")]
		public static bool IsAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AAF8", Offset = "0x64AAF8")]
	public class SDK_PlayStationHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xB579A0", Offset = "0xB579A0", VA = "0xB579A0")]
		public SDK_PlayStationHeadset()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AB60", Offset = "0x64AB60")]
	public class SDK_PlayStationSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xB579A8", Offset = "0xB579A8", VA = "0xB579A8")]
		public SDK_PlayStationSystem()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class SDK_ControllerSim : MonoBehaviour
	{
		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x661BF4", Offset = "0x661BF4")]
		public bool selected;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_VelocityEstimator cachedVelocityEstimator;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float magnitude;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Vector3 axis;

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xB4E720", Offset = "0xB4E720", VA = "0xB4E720")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xB4E764", Offset = "0xB4E764", VA = "0xB4E764")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xB4E7A8", Offset = "0xB4E7A8", VA = "0xB4E7A8", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xB4E7B4", Offset = "0xB4E7B4", VA = "0xB4E7B4", Slot = "5")]
		protected virtual void SetCaches()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xB4E8BC", Offset = "0xB4E8BC", VA = "0xB4E8BC")]
		public SDK_ControllerSim()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class SDK_InputSimulator : MonoBehaviour
	{
		[Token(Token = "0x20004BE")]
		public enum MouseInputMode
		{
			[Token(Token = "0x400214A")]
			Always,
			[Token(Token = "0x400214B")]
			RequiresButtonPress
		}

		[Serializable]
		[Token(Token = "0x20004BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DAC0", Offset = "0x64DAC0")]
		private sealed class <>c
		{
			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyCode, string> <>9__68_0;

			[Token(Token = "0x6002374")]
			[Address(RVA = "0xB53594", Offset = "0xB53594", VA = "0xB53594")]
			public <>c()
			{
			}

			[Token(Token = "0x6002375")]
			[Address(RVA = "0xB5359C", Offset = "0xB5359C", VA = "0xB5359C")]
			internal string <UpdateHints>b__68_0(KeyCode k)
			{
				return null;
			}
		}

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661C04", Offset = "0x661C04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661C04", Offset = "0x661C04")]
		public bool showControlHints;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661C64", Offset = "0x661C64")]
		public bool hideHandsAtSwitch;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661C9C", Offset = "0x661C9C")]
		public bool resetHandsAtSwitch;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661CD4", Offset = "0x661CD4")]
		public bool showHandAxisHelpers;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661D0C", Offset = "0x661D0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661D0C", Offset = "0x661D0C")]
		public bool lockMouseToView;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661D6C", Offset = "0x661D6C")]
		public MouseInputMode mouseMovementInput;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661DA4", Offset = "0x661DA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661DA4", Offset = "0x661DA4")]
		public float handMoveMultiplier;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661E04", Offset = "0x661E04")]
		public float handRotationMultiplier;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661E3C", Offset = "0x661E3C")]
		public float playerMoveMultiplier;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661E74", Offset = "0x661E74")]
		public float playerRotationMultiplier;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661EAC", Offset = "0x661EAC")]
		public float playerSprintMultiplier;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661EE4", Offset = "0x661EE4")]
		public float lockedCursorMultiplier;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661F1C", Offset = "0x661F1C")]
		public Color leftHandColor;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661F54", Offset = "0x661F54")]
		public Color rightHandColor;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661F8C", Offset = "0x661F8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661F8C", Offset = "0x661F8C")]
		public KeyCode mouseMovementKey;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661FEC", Offset = "0x661FEC")]
		public KeyCode toggleControlHints;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662024", Offset = "0x662024")]
		public KeyCode toggleMouseLock;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66205C", Offset = "0x66205C")]
		public KeyCode changeHands;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662094", Offset = "0x662094")]
		public KeyCode handsOnOff;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6620CC", Offset = "0x6620CC")]
		public KeyCode rotationPosition;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662104", Offset = "0x662104")]
		public KeyCode changeAxis;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66213C", Offset = "0x66213C")]
		public KeyCode distancePickupLeft;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662174", Offset = "0x662174")]
		public KeyCode distancePickupRight;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6621AC", Offset = "0x6621AC")]
		public KeyCode distancePickupModifier;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6621E4", Offset = "0x6621E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6621E4", Offset = "0x6621E4")]
		public KeyCode moveForward;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662244", Offset = "0x662244")]
		public KeyCode moveLeft;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66227C", Offset = "0x66227C")]
		public KeyCode moveBackward;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6622B4", Offset = "0x6622B4")]
		public KeyCode moveRight;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6622EC", Offset = "0x6622EC")]
		public KeyCode sprint;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662324", Offset = "0x662324")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662324", Offset = "0x662324")]
		public KeyCode triggerAlias;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662384", Offset = "0x662384")]
		public KeyCode gripAlias;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6623BC", Offset = "0x6623BC")]
		public KeyCode touchpadAlias;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6623F4", Offset = "0x6623F4")]
		public KeyCode buttonOneAlias;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66242C", Offset = "0x66242C")]
		public KeyCode buttonTwoAlias;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662464", Offset = "0x662464")]
		public KeyCode startMenuAlias;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66249C", Offset = "0x66249C")]
		public KeyCode touchModifier;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6624D4", Offset = "0x6624D4")]
		public KeyCode hairTouchModifier;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool isHand;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected GameObject hintCanvas;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Text hintText;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Transform rightHand;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Transform leftHand;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Transform currentHand;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Vector3 oldPos;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Transform neck;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected SDK_ControllerSim rightController;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected SDK_ControllerSim leftController;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static GameObject cachedCameraRig;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static bool destroyed;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected float sprintMultiplier;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected GameObject crossHairPanel;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Transform leftHandHorizontalAxisGuide;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform leftHandVerticalAxisGuide;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Transform rightHandHorizontalAxisGuide;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Transform rightHandVerticalAxisGuide;

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xB4F5CC", Offset = "0xB4F5CC", VA = "0xB4F5CC")]
		public static GameObject FindInScene()
		{
			return null;
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xB4F88C", Offset = "0xB4F88C", VA = "0xB4F88C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xB4F8F4", Offset = "0xB4F8F4", VA = "0xB4F8F4", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xB4FF98", Offset = "0xB4FF98", VA = "0xB4FF98", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xB50034", Offset = "0xB50034", VA = "0xB50034", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xB50364", Offset = "0xB50364", VA = "0xB50364", Slot = "8")]
		protected virtual void SetHandColor(Transform hand, Color givenColor)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xB50510", Offset = "0xB50510", VA = "0xB50510", Slot = "9")]
		protected virtual void TryPickup(bool rightHand)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xB507A4", Offset = "0xB507A4", VA = "0xB507A4", Slot = "10")]
		protected virtual void UpdateHands()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xB50BBC", Offset = "0xB50BBC", VA = "0xB50BBC", Slot = "11")]
		protected virtual void UpdateRotation()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xB50EC0", Offset = "0xB50EC0", VA = "0xB50EC0", Slot = "12")]
		protected virtual void UpdatePosition()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xB511CC", Offset = "0xB511CC", VA = "0xB511CC", Slot = "13")]
		protected virtual void SetHand()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xB5147C", Offset = "0xB5147C", VA = "0xB5147C", Slot = "14")]
		protected virtual void SetMove()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xB51528", Offset = "0xB51528", VA = "0xB51528", Slot = "15")]
		protected virtual void UpdateHints()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xB530A0", Offset = "0xB530A0", VA = "0xB530A0", Slot = "16")]
		protected virtual bool IsAcceptingMouseInput()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xB530BC", Offset = "0xB530BC", VA = "0xB530BC", Slot = "17")]
		protected virtual Vector3 GetMouseDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xB53240", Offset = "0xB53240", VA = "0xB53240", Slot = "18")]
		protected virtual void ToggleGuidePlanes(bool horizontalState, bool verticalState)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xB53464", Offset = "0xB53464", VA = "0xB53464")]
		public SDK_InputSimulator()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64ABE0", Offset = "0x64ABE0")]
	public class SDK_SimBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform area;

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xB57BEC", Offset = "0xB57BEC", VA = "0xB57BEC", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xB57BF0", Offset = "0xB57BF0", VA = "0xB57BF0", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xB57CE4", Offset = "0xB57CE4", VA = "0xB57CE4", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xB57FCC", Offset = "0xB57FCC", VA = "0xB57FCC", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xB57FD8", Offset = "0xB57FD8", VA = "0xB57FD8", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xB57FE0", Offset = "0xB57FE0", VA = "0xB57FE0", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xB57FE8", Offset = "0xB57FE8", VA = "0xB57FE8", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xB57FEC", Offset = "0xB57FEC", VA = "0xB57FEC")]
		public SDK_SimBoundaries()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AC48", Offset = "0x64AC48")]
	public class SDK_SimController : SDK_BaseController
	{
		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SDK_ControllerSim rightController;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected SDK_ControllerSim leftController;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<string, KeyCode> keyMappings;

		[Token(Token = "0x4001140")]
		protected const string RIGHT_HAND_CONTROLLER_NAME = "RightHand";

		[Token(Token = "0x4001141")]
		protected const string LEFT_HAND_CONTROLLER_NAME = "LeftHand";

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xB57FF4", Offset = "0xB57FF4", VA = "0xB57FF4", Slot = "52")]
		public virtual void SetKeyMappings(Dictionary<string, KeyCode> givenKeyMappings)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xB57FFC", Offset = "0xB57FFC", VA = "0xB57FFC", Slot = "9")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xB58000", Offset = "0xB58000", VA = "0xB58000", Slot = "10")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xB58004", Offset = "0xB58004", VA = "0xB58004", Slot = "11")]
		public override ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xB5800C", Offset = "0xB5800C", VA = "0xB5800C", Slot = "12")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xB58054", Offset = "0xB58054", VA = "0xB58054", Slot = "13")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xB580E8", Offset = "0xB580E8", VA = "0xB580E8", Slot = "14")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xB58148", Offset = "0xB58148", VA = "0xB58148", Slot = "15")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xB58328", Offset = "0xB58328", VA = "0xB58328", Slot = "16")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xB583E4", Offset = "0xB583E4", VA = "0xB583E4", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66FC74", Offset = "0x66FC74")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xB583EC", Offset = "0xB583EC", VA = "0xB583EC", Slot = "18")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xB584B8", Offset = "0xB584B8", VA = "0xB584B8", Slot = "19")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xB58584", Offset = "0xB58584", VA = "0xB58584", Slot = "20")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xB58594", Offset = "0xB58594", VA = "0xB58594", Slot = "21")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xB585A4", Offset = "0xB585A4", VA = "0xB585A4", Slot = "22")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xB585B8", Offset = "0xB585B8", VA = "0xB585B8", Slot = "23")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xB585CC", Offset = "0xB585CC", VA = "0xB585CC", Slot = "24")]
		public override bool WaitForControllerModel(ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xB585D4", Offset = "0xB585D4", VA = "0xB585D4", Slot = "25")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xB585E4", Offset = "0xB585E4", VA = "0xB585E4", Slot = "26")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xB58744", Offset = "0xB58744", VA = "0xB58744", Slot = "28")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xB58804", Offset = "0xB58804", VA = "0xB58804", Slot = "29")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xB58808", Offset = "0xB58808", VA = "0xB58808", Slot = "30")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xB5880C", Offset = "0xB5880C", VA = "0xB5880C", Slot = "31")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xB58814", Offset = "0xB58814", VA = "0xB58814", Slot = "32")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xB58888", Offset = "0xB58888", VA = "0xB58888", Slot = "33")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xB589E8", Offset = "0xB589E8", VA = "0xB589E8", Slot = "34")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xB58B48", Offset = "0xB58B48", VA = "0xB58B48", Slot = "35")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xB58B60", Offset = "0xB58B60", VA = "0xB58B60", Slot = "36")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xB58BC0", Offset = "0xB58BC0", VA = "0xB58BC0", Slot = "37")]
		public override float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xB58BC8", Offset = "0xB58BC8", VA = "0xB58BC8", Slot = "38")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xB58BD0", Offset = "0xB58BD0", VA = "0xB58BD0", Slot = "39")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xB58CA0", Offset = "0xB58CA0", VA = "0xB58CA0", Slot = "53")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xB58CB0", Offset = "0xB58CB0", VA = "0xB58CB0", Slot = "54")]
		protected virtual void SetupPlayer()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xB58EE8", Offset = "0xB58EE8", VA = "0xB58EE8", Slot = "55")]
		protected virtual bool IsTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xB58F54", Offset = "0xB58F54", VA = "0xB58F54", Slot = "56")]
		protected virtual bool IsHairTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xB58FC0", Offset = "0xB58FC0", VA = "0xB58FC0", Slot = "57")]
		protected virtual bool IsButtonPressIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xB59010", Offset = "0xB59010", VA = "0xB59010", Slot = "58")]
		protected virtual bool IsButtonHairTouchIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xB59064", Offset = "0xB59064", VA = "0xB59064", Slot = "59")]
		protected virtual bool GetControllerButtonState(uint index, string keyMapping, ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xB591A8", Offset = "0xB591A8", VA = "0xB591A8", Slot = "60")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, KeyCode button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xB59328", Offset = "0xB59328", VA = "0xB59328", Slot = "61")]
		protected virtual GameObject GetActualController(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xB59468", Offset = "0xB59468", VA = "0xB59468")]
		public SDK_SimController()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64ACB0", Offset = "0x64ACB0")]
	public class SDK_SimHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform camera;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected VRTK_VelocityEstimator cachedHeadsetVelocityEstimator;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float magnitude;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 axis;

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xB596A8", Offset = "0xB596A8", VA = "0xB596A8", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xB596AC", Offset = "0xB596AC", VA = "0xB596AC", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xB596B0", Offset = "0xB596B0", VA = "0xB596B0", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xB597C8", Offset = "0xB597C8", VA = "0xB597C8", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xB597D4", Offset = "0xB597D4", VA = "0xB597D4", Slot = "12")]
		public override string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xB5981C", Offset = "0xB5981C", VA = "0xB5981C", Slot = "13")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xB59864", Offset = "0xB59864", VA = "0xB59864", Slot = "14")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xB598AC", Offset = "0xB598AC", VA = "0xB598AC", Slot = "15")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xB598B4", Offset = "0xB598B4", VA = "0xB598B4", Slot = "16")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xB59948", Offset = "0xB59948", VA = "0xB59948", Slot = "17")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xB59A50", Offset = "0xB59A50", VA = "0xB59A50", Slot = "19")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xB59A60", Offset = "0xB59A60", VA = "0xB59A60", Slot = "20")]
		protected virtual void SetHeadsetCaches()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xB59BD4", Offset = "0xB59BD4", VA = "0xB59BD4")]
		public SDK_SimHeadset()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AD18", Offset = "0x64AD18")]
	public class SDK_SimSystem : SDK_BaseSystem
	{
		[Token(Token = "0x6001738")]
		[Address(RVA = "0xB59BDC", Offset = "0xB59BDC", VA = "0xB59BDC", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xB59BE4", Offset = "0xB59BE4", VA = "0xB59BE4", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xB59BEC", Offset = "0xB59BEC", VA = "0xB59BEC", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xB59BF0", Offset = "0xB59BF0", VA = "0xB59BF0")]
		public SDK_SimSystem()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AD70", Offset = "0x64AD70")]
	public class SDK_SteamVRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x600173C")]
		[Address(RVA = "0xB59BF8", Offset = "0xB59BF8", VA = "0xB59BF8")]
		public SDK_SteamVRBoundaries()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64ADD8", Offset = "0x64ADD8")]
	public class SDK_SteamVRController : SDK_FallbackController
	{
		[Token(Token = "0x600173D")]
		[Address(RVA = "0xB59C00", Offset = "0xB59C00", VA = "0xB59C00")]
		public SDK_SteamVRController()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public static class SDK_SteamVRDefines
	{
		[Token(Token = "0x4001146")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_STEAMVR";

		[Token(Token = "0x4001147")]
		private const string BuildTargetGroupName = "Standalone";

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xB59C08", Offset = "0xB59C08", VA = "0xB59C08")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FCAC", Offset = "0x66FCAC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FCAC", Offset = "0x66FCAC")]
		private static bool IsPluginVersion122OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xB59CD4", Offset = "0xB59CD4", VA = "0xB59CD4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FD3C", Offset = "0x66FD3C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FD3C", Offset = "0x66FD3C")]
		private static bool IsPluginVersion121OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xB59E4C", Offset = "0xB59E4C", VA = "0xB59E4C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FDCC", Offset = "0x66FDCC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FDCC", Offset = "0x66FDCC")]
		private static bool IsPluginVersion120()
		{
			return default(bool);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xB59FC0", Offset = "0xB59FC0", VA = "0xB59FC0")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FE5C", Offset = "0x66FE5C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FE5C", Offset = "0x66FE5C")]
		private static bool IsPluginVersion111OrOlder()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AE40", Offset = "0x64AE40")]
	public class SDK_SteamVRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6001742")]
		[Address(RVA = "0xB5A0D8", Offset = "0xB5A0D8", VA = "0xB5A0D8")]
		public SDK_SteamVRHeadset()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AEA8", Offset = "0x64AEA8")]
	public class SDK_SteamVRSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6001743")]
		[Address(RVA = "0xB5A0E0", Offset = "0xB5A0E0", VA = "0xB5A0E0")]
		public SDK_SteamVRSystem()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AF28", Offset = "0x64AF28")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AF28", Offset = "0x64AF28")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AF28", Offset = "0x64AF28")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AF28", Offset = "0x64AF28")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AF28", Offset = "0x64AF28")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64AF28", Offset = "0x64AF28")]
	public class SDK_UnityBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x6001744")]
		[Address(RVA = "0xB5A0E8", Offset = "0xB5A0E8", VA = "0xB5A0E8", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xB5A0EC", Offset = "0xB5A0EC", VA = "0xB5A0EC", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xB5A1E4", Offset = "0xB5A1E4", VA = "0xB5A1E4", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xB5A1EC", Offset = "0xB5A1EC", VA = "0xB5A1EC", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xB5A1F8", Offset = "0xB5A1F8", VA = "0xB5A1F8", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xB5A200", Offset = "0xB5A200", VA = "0xB5A200", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xB5A208", Offset = "0xB5A208", VA = "0xB5A208", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xB5A20C", Offset = "0xB5A20C", VA = "0xB5A20C")]
		public SDK_UnityBoundaries()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class SDK_UnityCameraRig : MonoBehaviour
	{
		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66250C", Offset = "0x66250C")]
		public bool lockPhysicsUpdateRateToRenderFrequency;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xB5A214", Offset = "0xB5A214", VA = "0xB5A214", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xB5A2C0", Offset = "0xB5A2C0", VA = "0xB5A2C0")]
		public SDK_UnityCameraRig()
		{
		}
	}
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B04C", Offset = "0x64B04C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B04C", Offset = "0x64B04C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B04C", Offset = "0x64B04C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B04C", Offset = "0x64B04C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B04C", Offset = "0x64B04C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B04C", Offset = "0x64B04C")]
	public class SDK_UnityController : SDK_BaseController
	{
		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected SDK_UnityControllerTracker cachedLeftTracker;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected SDK_UnityControllerTracker cachedRightTracker;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_VelocityEstimator cachedLeftVelocityEstimator;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_VelocityEstimator cachedRightVelocityEstimator;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector2 buttonPressThreshold;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Dictionary<ButtonTypes, bool> rightAxisButtonPressState;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Dictionary<ButtonTypes, bool> leftAxisButtonPressState;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected List<string> validRightHands;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected List<string> validLeftHands;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int[] rightControllerTouchCodes;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int[] rightControllerPressCodes;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected int[] rightOculusRemotePressCodes;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int[] leftControllerTouchCodes;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected int[] leftControllerPressCodes;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected ControllerType cachedControllerType;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Dictionary<ButtonTypes, KeyCode?> rightControllerTouchKeyCodes;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Dictionary<ButtonTypes, KeyCode?> rightControllerPressKeyCodes;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Dictionary<ButtonTypes, KeyCode?> leftControllerTouchKeyCodes;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Dictionary<ButtonTypes, KeyCode?> leftControllerPressKeyCodes;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool settingCaches;

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xB5A2D0", Offset = "0xB5A2D0", VA = "0xB5A2D0", Slot = "9")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xB5A2D4", Offset = "0xB5A2D4", VA = "0xB5A2D4", Slot = "10")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xB5A2D8", Offset = "0xB5A2D8", VA = "0xB5A2D8", Slot = "11")]
		public override ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xB5A30C", Offset = "0xB5A30C", VA = "0xB5A30C", Slot = "12")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xB5A354", Offset = "0xB5A354", VA = "0xB5A354", Slot = "13")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xB5A3B0", Offset = "0xB5A3B0", VA = "0xB5A3B0", Slot = "14")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xB5A468", Offset = "0xB5A468", VA = "0xB5A468", Slot = "15")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xB5A660", Offset = "0xB5A660", VA = "0xB5A660", Slot = "16")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xB5A6C0", Offset = "0xB5A6C0", VA = "0xB5A6C0", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66FEEC", Offset = "0x66FEEC")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xB5A6C8", Offset = "0xB5A6C8", VA = "0xB5A6C8", Slot = "18")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xB5A79C", Offset = "0xB5A79C", VA = "0xB5A79C", Slot = "19")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xB5A870", Offset = "0xB5A870", VA = "0xB5A870", Slot = "20")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xB5A880", Offset = "0xB5A880", VA = "0xB5A880", Slot = "21")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xB5A890", Offset = "0xB5A890", VA = "0xB5A890", Slot = "22")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xB5A8A4", Offset = "0xB5A8A4", VA = "0xB5A8A4", Slot = "23")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xB5A8B8", Offset = "0xB5A8B8", VA = "0xB5A8B8", Slot = "24")]
		public override bool WaitForControllerModel(ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xB5A8C0", Offset = "0xB5A8C0", VA = "0xB5A8C0", Slot = "25")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xB5A8D0", Offset = "0xB5A8D0", VA = "0xB5A8D0", Slot = "26")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xB5AA40", Offset = "0xB5AA40", VA = "0xB5AA40", Slot = "28")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xB5AA48", Offset = "0xB5AA48", VA = "0xB5AA48", Slot = "29")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xB5AA4C", Offset = "0xB5AA4C", VA = "0xB5AA4C", Slot = "30")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xB5AA50", Offset = "0xB5AA50", VA = "0xB5AA50", Slot = "31")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xB5AA58", Offset = "0xB5AA58", VA = "0xB5AA58", Slot = "32")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xB5AACC", Offset = "0xB5AACC", VA = "0xB5AACC", Slot = "33")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xB5AC54", Offset = "0xB5AC54", VA = "0xB5AC54", Slot = "34")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xB5ADDC", Offset = "0xB5ADDC", VA = "0xB5ADDC", Slot = "35")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xB5ADF4", Offset = "0xB5ADF4", VA = "0xB5ADF4", Slot = "36")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xB5B02C", Offset = "0xB5B02C", VA = "0xB5B02C", Slot = "37")]
		public override float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xB5B034", Offset = "0xB5B034", VA = "0xB5B034", Slot = "38")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xB5B03C", Offset = "0xB5B03C", VA = "0xB5B03C", Slot = "39")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xB5B25C", Offset = "0xB5B25C", VA = "0xB5B25C", Slot = "52")]
		protected virtual bool IsMouseAliasPress(bool validController, ButtonTypes buttonType, ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xB5B2B0", Offset = "0xB5B2B0", VA = "0xB5B2B0", Slot = "53")]
		protected virtual bool MousePressType(ButtonPressTypes pressType, int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xB5B2F0", Offset = "0xB5B2F0", VA = "0xB5B2F0", Slot = "54")]
		protected virtual float GetAxisValue(string axisName)
		{
			return default(float);
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xB5B3B0", Offset = "0xB5B3B0", VA = "0xB5B3B0", Slot = "55")]
		protected virtual bool IsAxisOnHandButtonPress(Dictionary<ButtonTypes, bool> axisHandState, ButtonTypes buttonType, ButtonPressTypes pressType, Vector2 axisValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xB5B4EC", Offset = "0xB5B4EC", VA = "0xB5B4EC", Slot = "56")]
		protected virtual bool IsAxisButtonPress(VRTK_ControllerReference controllerReference, ButtonTypes buttonType, ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xB5B5B0", Offset = "0xB5B5B0", VA = "0xB5B5B0", Slot = "57")]
		protected virtual bool GetAxisPressState(bool currentState, float axisValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xB5B5DC", Offset = "0xB5B5DC", VA = "0xB5B5DC", Slot = "58")]
		protected virtual bool IsButtonPressed(ButtonPressTypes pressType, KeyCode? touchKey, KeyCode? pressKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xB5B770", Offset = "0xB5B770", VA = "0xB5B770", Slot = "59")]
		protected virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xB5BB98", Offset = "0xB5BB98", VA = "0xB5BB98", Slot = "60")]
		protected virtual void SetControllerButtons(ControllerHand hand)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xB5C024", Offset = "0xB5C024", VA = "0xB5C024", Slot = "61")]
		protected virtual void SetCachedControllerType(string givenType)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xB5C170", Offset = "0xB5C170", VA = "0xB5C170", Slot = "62")]
		protected virtual void SetControllerButtonValues(ref Dictionary<ButtonTypes, KeyCode?> touchKeyCodes, ref Dictionary<ButtonTypes, KeyCode?> pressKeyCodes, int joystickIndex, int[] touchCodes, int[] pressCodes)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xB5C54C", Offset = "0xB5C54C", VA = "0xB5C54C", Slot = "63")]
		protected virtual KeyCode StringToKeyCode(int index, int code)
		{
			return default(KeyCode);
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xB5C82C", Offset = "0xB5C82C", VA = "0xB5C82C", Slot = "64")]
		protected virtual void SetControllerIndex(ref VRTK_TrackedController trackedController)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xB5C928", Offset = "0xB5C928", VA = "0xB5C928", Slot = "65")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xB5C9AC", Offset = "0xB5C9AC", VA = "0xB5C9AC")]
		public SDK_UnityController()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class SDK_UnityControllerTracker : MonoBehaviour
	{
		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662544", Offset = "0x662544")]
		public XRNode nodeType;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66257C", Offset = "0x66257C")]
		public uint index;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6625B4", Offset = "0x6625B4")]
		public string triggerAxisName;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6625EC", Offset = "0x6625EC")]
		public string gripAxisName;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662624", Offset = "0x662624")]
		public string touchpadHorizontalAxisName;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66265C", Offset = "0x66265C")]
		public string touchpadVerticalAxisName;

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x7E3A00", Offset = "0x7E3A00", VA = "0x7E3A00", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600177C")]
		protected virtual string GetVarName<T>(T item) where T : class
		{
			return null;
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x7E3ABC", Offset = "0x7E3ABC", VA = "0x7E3ABC", Slot = "6")]
		protected virtual void CheckAxisIsValid(string axisName, string varName)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x7E3E0C", Offset = "0x7E3E0C", VA = "0x7E3E0C", Slot = "7")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x7E3F2C", Offset = "0x7E3F2C", VA = "0x7E3F2C")]
		public SDK_UnityControllerTracker()
		{
		}
	}
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B170", Offset = "0x64B170")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B170", Offset = "0x64B170")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B170", Offset = "0x64B170")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B170", Offset = "0x64B170")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B170", Offset = "0x64B170")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B170", Offset = "0x64B170")]
	public class SDK_UnityHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_VelocityEstimator cachedHeadsetVelocityEstimator;

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x7E3F88", Offset = "0x7E3F88", VA = "0x7E3F88", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x7E3F8C", Offset = "0x7E3F8C", VA = "0x7E3F8C", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x7E3F90", Offset = "0x7E3F90", VA = "0x7E3F90", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x7E408C", Offset = "0x7E408C", VA = "0x7E408C", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x7E4098", Offset = "0x7E4098", VA = "0x7E4098", Slot = "12")]
		public override string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x7E40A8", Offset = "0x7E40A8", VA = "0x7E40A8", Slot = "13")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x7E40F0", Offset = "0x7E40F0", VA = "0x7E40F0", Slot = "14")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x7E4138", Offset = "0x7E4138", VA = "0x7E4138", Slot = "15")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x7E4140", Offset = "0x7E4140", VA = "0x7E4140", Slot = "16")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x7E41D0", Offset = "0x7E41D0", VA = "0x7E41D0", Slot = "17")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x7E42D4", Offset = "0x7E42D4", VA = "0x7E42D4", Slot = "19")]
		protected virtual void SetHeadsetCaches()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x7E43BC", Offset = "0x7E43BC", VA = "0x7E43BC")]
		public SDK_UnityHeadset()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class SDK_UnityHeadsetTracker : MonoBehaviour
	{
		[Token(Token = "0x600178C")]
		[Address(RVA = "0x7E43C4", Offset = "0x7E43C4", VA = "0x7E43C4")]
		public SDK_UnityHeadsetTracker()
		{
		}
	}
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B294", Offset = "0x64B294")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B294", Offset = "0x64B294")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B294", Offset = "0x64B294")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B294", Offset = "0x64B294")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B294", Offset = "0x64B294")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B294", Offset = "0x64B294")]
	public class SDK_UnitySystem : SDK_BaseSystem
	{
		[Token(Token = "0x600178D")]
		[Address(RVA = "0x7E43CC", Offset = "0x7E43CC", VA = "0x7E43CC", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x7E43D4", Offset = "0x7E43D4", VA = "0x7E43D4", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x7E43DC", Offset = "0x7E43DC", VA = "0x7E43DC", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x7E43E0", Offset = "0x7E43E0", VA = "0x7E43E0")]
		public SDK_UnitySystem()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public static class VRTK_SDK_Bridge
	{
		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDK_BaseSystem systemSDK;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SDK_BaseHeadset headsetSDK;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static SDK_BaseController controllerSDK;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SDK_BaseBoundaries boundariesSDK;

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x9BD018", Offset = "0x9BD018", VA = "0x9BD018")]
		public static void ControllerProcessUpdate(VRTK_ControllerReference controllerReference, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x9BD2C4", Offset = "0x9BD2C4", VA = "0x9BD2C4")]
		public static void ControllerProcessFixedUpdate(VRTK_ControllerReference controllerReference, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x9BD354", Offset = "0x9BD354", VA = "0x9BD354")]
		public static SDK_BaseController.ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x9BD3D4", Offset = "0x9BD3D4", VA = "0x9BD3D4")]
		public static string GetControllerDefaultColliderPath(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x9BD454", Offset = "0x9BD454", VA = "0x9BD454")]
		public static string GetControllerElementPath(SDK_BaseController.ControllerElements element, SDK_BaseController.ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x9BD4EC", Offset = "0x9BD4EC", VA = "0x9BD4EC")]
		public static uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x9BD570", Offset = "0x9BD570", VA = "0x9BD570")]
		public static GameObject GetControllerByIndex(uint index, bool actual)
		{
			return null;
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x9BD604", Offset = "0x9BD604", VA = "0x9BD604")]
		public static Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x9BD688", Offset = "0x9BD688", VA = "0x9BD688")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66FF24", Offset = "0x66FF24")]
		public static Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x9BD70C", Offset = "0x9BD70C", VA = "0x9BD70C")]
		public static GameObject GetControllerLeftHand(bool actual)
		{
			return null;
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x9BD790", Offset = "0x9BD790", VA = "0x9BD790")]
		public static GameObject GetControllerRightHand(bool actual)
		{
			return null;
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x9BD814", Offset = "0x9BD814", VA = "0x9BD814")]
		public static GameObject GetControllerByHand(SDK_BaseController.ControllerHand hand, bool actual)
		{
			return null;
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x9BD8DC", Offset = "0x9BD8DC", VA = "0x9BD8DC")]
		public static bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x9BD960", Offset = "0x9BD960", VA = "0x9BD960")]
		public static bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x9BD9E4", Offset = "0x9BD9E4", VA = "0x9BD9E4")]
		public static bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x9BDA78", Offset = "0x9BDA78", VA = "0x9BDA78")]
		public static bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x9BDB0C", Offset = "0x9BDB0C", VA = "0x9BDB0C")]
		public static bool WaitForControllerModel(SDK_BaseController.ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x9BDB90", Offset = "0x9BDB90", VA = "0x9BDB90")]
		public static GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x9BDC14", Offset = "0x9BDC14", VA = "0x9BDC14")]
		public static GameObject GetControllerModel(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x9BDC98", Offset = "0x9BDC98", VA = "0x9BDC98")]
		public static SDK_BaseController.ControllerHand GetControllerModelHand(GameObject controllerModel)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x9BDD1C", Offset = "0x9BDD1C", VA = "0x9BDD1C")]
		public static GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x9BDDA0", Offset = "0x9BDDA0", VA = "0x9BDDA0")]
		public static void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x9BDE34", Offset = "0x9BDE34", VA = "0x9BDE34")]
		public static void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x9BDEC8", Offset = "0x9BDEC8", VA = "0x9BDEC8")]
		public static bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x9BDF5C", Offset = "0x9BDF5C", VA = "0x9BDF5C")]
		public static SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x9BDFD8", Offset = "0x9BDFD8", VA = "0x9BDFD8")]
		public static Vector3 GetControllerVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x9BE05C", Offset = "0x9BE05C", VA = "0x9BE05C")]
		public static Vector3 GetControllerAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x9BE0E0", Offset = "0x9BE0E0", VA = "0x9BE0E0")]
		public static bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x9BE1A4", Offset = "0x9BE1A4", VA = "0x9BE1A4")]
		public static Vector2 GetControllerAxis(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x9BE238", Offset = "0x9BE238", VA = "0x9BE238")]
		public static float GetControllerSenseAxis(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x9BE2CC", Offset = "0x9BE2CC", VA = "0x9BE2CC")]
		public static float GetControllerHairlineDelta(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x9BE360", Offset = "0x9BE360", VA = "0x9BE360")]
		public static bool GetControllerButtonState(SDK_BaseController.ButtonTypes buttonType, SDK_BaseController.ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x9BE3FC", Offset = "0x9BE3FC", VA = "0x9BE3FC")]
		public static void HeadsetProcessUpdate([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x9BE698", Offset = "0x9BE698", VA = "0x9BE698")]
		public static void HeadsetProcessFixedUpdate([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x9BE718", Offset = "0x9BE718", VA = "0x9BE718")]
		public static Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x9BE790", Offset = "0x9BE790", VA = "0x9BE790")]
		public static Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x9BE808", Offset = "0x9BE808", VA = "0x9BE808")]
		public static string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x9BE880", Offset = "0x9BE880", VA = "0x9BE880")]
		public static Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x9BE8F8", Offset = "0x9BE8F8", VA = "0x9BE8F8")]
		public static Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x9BE974", Offset = "0x9BE974", VA = "0x9BE974")]
		public static void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x9BEA38", Offset = "0x9BEA38", VA = "0x9BEA38")]
		public static bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x9BEABC", Offset = "0x9BEABC", VA = "0x9BEABC")]
		public static void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x9BEB40", Offset = "0x9BEB40", VA = "0x9BEB40")]
		public static Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x9BEDD4", Offset = "0x9BEDD4", VA = "0x9BEDD4")]
		public static Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x9BEE4C", Offset = "0x9BEE4C", VA = "0x9BEE4C")]
		public static float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x9BEEC4", Offset = "0x9BEEC4", VA = "0x9BEEC4")]
		public static bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x9BEF3C", Offset = "0x9BEF3C", VA = "0x9BEF3C")]
		public static bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x9BEFB4", Offset = "0x9BEFB4", VA = "0x9BEFB4")]
		public static void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x9BF038", Offset = "0x9BF038", VA = "0x9BF038")]
		public static bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x9BF2C4", Offset = "0x9BF2C4", VA = "0x9BF2C4")]
		public static bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x9BF33C", Offset = "0x9BF33C", VA = "0x9BF33C")]
		public static void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x9BF0B0", Offset = "0x9BF0B0", VA = "0x9BF0B0")]
		public static SDK_BaseSystem GetSystemSDK()
		{
			return null;
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x9BE47C", Offset = "0x9BE47C", VA = "0x9BE47C")]
		public static SDK_BaseHeadset GetHeadsetSDK()
		{
			return null;
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x9BD0A8", Offset = "0x9BD0A8", VA = "0x9BD0A8")]
		public static SDK_BaseController GetControllerSDK()
		{
			return null;
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x9BEBB8", Offset = "0x9BEBB8", VA = "0x9BEBB8")]
		public static SDK_BaseBoundaries GetBoundariesSDK()
		{
			return null;
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x9B55C8", Offset = "0x9B55C8", VA = "0x9B55C8")]
		public static void InvalidateCaches()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x64B4B4", Offset = "0x64B4B4")]
	public class WindowsMR_Camera : MonoBehaviour
	{
		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662694", Offset = "0x662694")]
		private bool forceRoomScaleTracking;

		[Token(Token = "0x400116B")]
		private const string DEVICE_NAME = "WindowsMR";

		[Token(Token = "0x17000100")]
		public bool ForceRoomScaleTracking
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x811EC4", Offset = "0x811EC4", VA = "0x811EC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x811ECC", Offset = "0x811ECC", VA = "0x811ECC")]
			set
			{
			}
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x811ED8", Offset = "0x811ED8", VA = "0x811ED8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x811F1C", Offset = "0x811F1C", VA = "0x811F1C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x812010", Offset = "0x812010", VA = "0x812010", Slot = "6")]
		protected virtual bool CheckForMixedRealitySupport()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x812144", Offset = "0x812144", VA = "0x812144", Slot = "7")]
		protected virtual void SetupMRCamera()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x812274", Offset = "0x812274", VA = "0x812274")]
		public WindowsMR_Camera()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class WindowsMR_ControllerManager : MonoBehaviour
	{
		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x812284", Offset = "0x812284", VA = "0x812284")]
		public WindowsMR_ControllerManager()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class WindowsMR_TrackedObject : MonoBehaviour
	{
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x81228C", Offset = "0x81228C", VA = "0x81228C")]
		public WindowsMR_TrackedObject()
		{
		}
	}
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B518", Offset = "0x64B518")]
	public class SDK_WindowsMRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x7E43F0", Offset = "0x7E43F0", VA = "0x7E43F0")]
		public SDK_WindowsMRBoundaries()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B580", Offset = "0x64B580")]
	public class SDK_WindowsMRController : SDK_FallbackController
	{
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x7E43F8", Offset = "0x7E43F8", VA = "0x7E43F8")]
		public SDK_WindowsMRController()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public static class SDK_WindowsMRDefines
	{
		[Token(Token = "0x400116C")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_WINDOWSMR";

		[Token(Token = "0x400116D")]
		private const string BuildTargetGroupName = "WSA";

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x7E4400", Offset = "0x7E4400", VA = "0x7E4400")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FF5C", Offset = "0x66FF5C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FF5C", Offset = "0x66FF5C")]
		private static bool HasControllerVisualization()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x7E4484", Offset = "0x7E4484", VA = "0x7E4484")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66FFEC", Offset = "0x66FFEC")]
		private static bool IsXRSettingsEnabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B5E8", Offset = "0x64B5E8")]
	public class SDK_WindowsMRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x7E448C", Offset = "0x7E448C", VA = "0x7E448C")]
		public SDK_WindowsMRHeadset()
		{
		}
	}
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B650", Offset = "0x64B650")]
	public class SDK_WindowsMR : SDK_FallbackSystem
	{
		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x7E43E8", Offset = "0x7E43E8", VA = "0x7E43E8")]
		public SDK_WindowsMR()
		{
		}
	}
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B6D0", Offset = "0x64B6D0")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B6D0", Offset = "0x64B6D0")]
	public class SDK_XimmerseBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x7E4494", Offset = "0x7E4494", VA = "0x7E4494")]
		public SDK_XimmerseBoundaries()
		{
		}
	}
	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B764", Offset = "0x64B764")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B764", Offset = "0x64B764")]
	public class SDK_XimmerseController : SDK_FallbackController
	{
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x7E449C", Offset = "0x7E449C", VA = "0x7E449C")]
		public SDK_XimmerseController()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public static class SDK_XimmerseDefines
	{
		[Token(Token = "0x400116E")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_XIMMERSE";

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x7E44A4", Offset = "0x7E44A4", VA = "0x7E44A4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x670038", Offset = "0x670038")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x670038", Offset = "0x670038")]
		private static bool IsXimmerseAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B7F8", Offset = "0x64B7F8")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B7F8", Offset = "0x64B7F8")]
	public class SDK_XimmerseHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x7E4528", Offset = "0x7E4528", VA = "0x7E4528")]
		public SDK_XimmerseHeadset()
		{
		}
	}
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B88C", Offset = "0x64B88C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64B88C", Offset = "0x64B88C")]
	public class SDK_XimmerseSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x7E4530", Offset = "0x7E4530", VA = "0x7E4530")]
		public SDK_XimmerseSystem()
		{
		}
	}
}
namespace VRTK.WindowsMixedReality.Utilities
{
	[Token(Token = "0x2000213")]
	public static class InteractionSourceExtensions
	{
		[Token(Token = "0x400116F")]
		private const ushort ContinuousBuzzWaveform = 4100;
	}
	[Token(Token = "0x2000214")]
	public static class WindowsApiChecker
	{
		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6626E0", Offset = "0x6626E0")]
		private static bool <UniversalApiContractV5_IsAvailable>k__BackingField;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6626F0", Offset = "0x6626F0")]
		private static bool <UniversalApiContractV4_IsAvailable>k__BackingField;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x662700", Offset = "0x662700")]
		private static bool <UniversalApiContractV3_IsAvailable>k__BackingField;

		[Token(Token = "0x17000101")]
		public static bool UniversalApiContractV5_IsAvailable
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x812408", Offset = "0x812408", VA = "0x812408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6700C8", Offset = "0x6700C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x8122B8", Offset = "0x8122B8", VA = "0x8122B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6700D8", Offset = "0x6700D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public static bool UniversalApiContractV4_IsAvailable
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x812470", Offset = "0x812470", VA = "0x812470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6700E8", Offset = "0x6700E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x812328", Offset = "0x812328", VA = "0x812328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6700F8", Offset = "0x6700F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public static bool UniversalApiContractV3_IsAvailable
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x8124D8", Offset = "0x8124D8", VA = "0x8124D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670108", Offset = "0x670108")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x812398", Offset = "0x812398", VA = "0x812398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670118", Offset = "0x670118")]
			private set
			{
			}
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x812294", Offset = "0x812294", VA = "0x812294")]
		static WindowsApiChecker()
		{
		}
	}
}
namespace VRTK.UnityEventHelper
{
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64B97C", Offset = "0x64B97C")]
	public sealed class VRTK_BaseControllable_UnityEvents : VRTK_UnityEvents<VRTK_BaseControllable>
	{
		[Serializable]
		[Token(Token = "0x20004C0")]
		public sealed class BaseControllablEvent : UnityEvent<object, ControllableEventArgs>
		{
			[Token(Token = "0x6002376")]
			[Address(RVA = "0x7E9F28", Offset = "0x7E9F28", VA = "0x7E9F28")]
			public BaseControllablEvent()
			{
			}
		}

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseControllablEvent OnValueChanged;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BaseControllablEvent OnRestingPointReached;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BaseControllablEvent OnMinLimitReached;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BaseControllablEvent OnMinLimitExited;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BaseControllablEvent OnMaxLimitReached;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BaseControllablEvent OnMaxLimitExited;

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x7E96D8", Offset = "0x7E96D8", VA = "0x7E96D8", Slot = "4")]
		protected override void AddListeners(VRTK_BaseControllable component)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x7E98A8", Offset = "0x7E98A8", VA = "0x7E98A8", Slot = "5")]
		protected override void RemoveListeners(VRTK_BaseControllable component)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x7E9A78", Offset = "0x7E9A78", VA = "0x7E9A78")]
		private void ValueChanged(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x7E9B1C", Offset = "0x7E9B1C", VA = "0x7E9B1C")]
		private void RestingPointReached(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x7E9BC0", Offset = "0x7E9BC0", VA = "0x7E9BC0")]
		private void MinLimitReached(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x7E9C64", Offset = "0x7E9C64", VA = "0x7E9C64")]
		private void MinLimitExited(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x7E9D08", Offset = "0x7E9D08", VA = "0x7E9D08")]
		private void MaxLimitReached(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x7E9DAC", Offset = "0x7E9DAC", VA = "0x7E9DAC")]
		private void MaxLimitExited(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x7E9E50", Offset = "0x7E9E50", VA = "0x7E9E50")]
		public VRTK_BaseControllable_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64B9B4", Offset = "0x64B9B4")]
	public sealed class VRTK_BasicTeleport_UnityEvents : VRTK_UnityEvents<VRTK_BasicTeleport>
	{
		[Serializable]
		[Token(Token = "0x20004C1")]
		public sealed class TeleportEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x6002377")]
			[Address(RVA = "0x7EA300", Offset = "0x7EA300", VA = "0x7EA300")]
			public TeleportEvent()
			{
			}
		}

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportEvent OnTeleporting;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TeleportEvent OnTeleported;

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x7E9F78", Offset = "0x7E9F78", VA = "0x7E9F78", Slot = "4")]
		protected override void AddListeners(VRTK_BasicTeleport component)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x7EA048", Offset = "0x7EA048", VA = "0x7EA048", Slot = "5")]
		protected override void RemoveListeners(VRTK_BasicTeleport component)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x7EA118", Offset = "0x7EA118", VA = "0x7EA118")]
		private void Teleporting(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x7EA1C8", Offset = "0x7EA1C8", VA = "0x7EA1C8")]
		private void Teleported(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x7EA278", Offset = "0x7EA278", VA = "0x7EA278")]
		public VRTK_BasicTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64B9EC", Offset = "0x64B9EC")]
	public sealed class VRTK_BodyPhysics_UnityEvents : VRTK_UnityEvents<VRTK_BodyPhysics>
	{
		[Serializable]
		[Token(Token = "0x20004C2")]
		public sealed class BodyPhysicsEvent : UnityEvent<object, BodyPhysicsEventArgs>
		{
			[Token(Token = "0x6002378")]
			[Address(RVA = "0x7EAF68", Offset = "0x7EAF68", VA = "0x7EAF68")]
			public BodyPhysicsEvent()
			{
			}
		}

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BodyPhysicsEvent OnStartFalling;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BodyPhysicsEvent OnStopFalling;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BodyPhysicsEvent OnStartMoving;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BodyPhysicsEvent OnStopMoving;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BodyPhysicsEvent OnStartColliding;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BodyPhysicsEvent OnStopColliding;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BodyPhysicsEvent OnStartLeaning;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BodyPhysicsEvent OnStopLeaning;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BodyPhysicsEvent OnStartTouchingGround;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BodyPhysicsEvent OnStopTouchingGround;

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x7EA350", Offset = "0x7EA350", VA = "0x7EA350", Slot = "4")]
		protected override void AddListeners(VRTK_BodyPhysics component)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x7EA620", Offset = "0x7EA620", VA = "0x7EA620", Slot = "5")]
		protected override void RemoveListeners(VRTK_BodyPhysics component)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x7EA8F0", Offset = "0x7EA8F0", VA = "0x7EA8F0")]
		private void StartFalling(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x7EA978", Offset = "0x7EA978", VA = "0x7EA978")]
		private void StopFalling(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x7EAA00", Offset = "0x7EAA00", VA = "0x7EAA00")]
		private void StartMoving(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x7EAA88", Offset = "0x7EAA88", VA = "0x7EAA88")]
		private void StopMoving(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x7EAB10", Offset = "0x7EAB10", VA = "0x7EAB10")]
		private void StartColliding(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x7EAB98", Offset = "0x7EAB98", VA = "0x7EAB98")]
		private void StopColliding(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x7EAC20", Offset = "0x7EAC20", VA = "0x7EAC20")]
		private void StartLeaning(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x7EACA8", Offset = "0x7EACA8", VA = "0x7EACA8")]
		private void StopLeaning(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x7EAD30", Offset = "0x7EAD30", VA = "0x7EAD30")]
		private void StartTouchingGround(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x7EADB8", Offset = "0x7EADB8", VA = "0x7EADB8")]
		private void StopTouchingGround(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x7EAE40", Offset = "0x7EAE40", VA = "0x7EAE40")]
		public VRTK_BodyPhysics_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BA24", Offset = "0x64BA24")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x64BA24", Offset = "0x64BA24")]
	public sealed class VRTK_Button_UnityEvents : VRTK_UnityEvents<VRTK_Button>
	{
		[Serializable]
		[Token(Token = "0x20004C3")]
		public sealed class Button3DEvent : UnityEvent<object, Control3DEventArgs>
		{
			[Token(Token = "0x6002379")]
			[Address(RVA = "0x7EB2F0", Offset = "0x7EB2F0", VA = "0x7EB2F0")]
			public Button3DEvent()
			{
			}
		}

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button3DEvent OnPushed;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button3DEvent OnReleased;

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x7EAFB8", Offset = "0x7EAFB8", VA = "0x7EAFB8", Slot = "4")]
		protected override void AddListeners(VRTK_Button component)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x7EB088", Offset = "0x7EB088", VA = "0x7EB088", Slot = "5")]
		protected override void RemoveListeners(VRTK_Button component)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x7EB158", Offset = "0x7EB158", VA = "0x7EB158")]
		private void Pushed(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x7EB1E0", Offset = "0x7EB1E0", VA = "0x7EB1E0")]
		public void Released(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x7EB268", Offset = "0x7EB268", VA = "0x7EB268")]
		public VRTK_Button_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BA84", Offset = "0x64BA84")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x64BA84", Offset = "0x64BA84")]
	public sealed class VRTK_Control_UnityEvents : VRTK_UnityEvents<VRTK_Control>
	{
		[Serializable]
		[Token(Token = "0x20004C4")]
		public sealed class Control3DEvent : UnityEvent<object, Control3DEventArgs>
		{
			[Token(Token = "0x600237A")]
			[Address(RVA = "0x7EB9F8", Offset = "0x7EB9F8", VA = "0x7EB9F8")]
			public Control3DEvent()
			{
			}
		}

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Control3DEvent OnValueChanged;

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x7EB7E4", Offset = "0x7EB7E4", VA = "0x7EB7E4", Slot = "4")]
		protected override void AddListeners(VRTK_Control component)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x7EB874", Offset = "0x7EB874", VA = "0x7EB874", Slot = "5")]
		protected override void RemoveListeners(VRTK_Control component)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x7EB904", Offset = "0x7EB904", VA = "0x7EB904")]
		private void ValueChanged(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x7EB98C", Offset = "0x7EB98C", VA = "0x7EB98C")]
		public VRTK_Control_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BAE4", Offset = "0x64BAE4")]
	public sealed class VRTK_ControlAnimationGrabAttach_UnityEvents : VRTK_UnityEvents<VRTK_ControlAnimationGrabAttach>
	{
		[Serializable]
		[Token(Token = "0x20004C5")]
		public sealed class ControlAnimationGrabAttachEvent : UnityEvent<object, ControlAnimationGrabAttachEventArgs>
		{
			[Token(Token = "0x600237B")]
			[Address(RVA = "0x7EB794", Offset = "0x7EB794", VA = "0x7EB794")]
			public ControlAnimationGrabAttachEvent()
			{
			}
		}

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControlAnimationGrabAttachEvent OnAnimationFrameAtStart;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControlAnimationGrabAttachEvent OnAnimationFrameAtEnd;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControlAnimationGrabAttachEvent OnAnimationFrameChanged;

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x7EB340", Offset = "0x7EB340", VA = "0x7EB340", Slot = "4")]
		protected override void AddListeners(VRTK_ControlAnimationGrabAttach component)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x7EB450", Offset = "0x7EB450", VA = "0x7EB450", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControlAnimationGrabAttach component)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x7EB560", Offset = "0x7EB560", VA = "0x7EB560")]
		private void AnimationFrameAtStart(object o, ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x7EB5E8", Offset = "0x7EB5E8", VA = "0x7EB5E8")]
		private void AnimationFrameAtEnd(object o, ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x7EB670", Offset = "0x7EB670", VA = "0x7EB670")]
		private void AnimationFrameChanged(object o, ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x7EB6F8", Offset = "0x7EB6F8", VA = "0x7EB6F8")]
		public VRTK_ControlAnimationGrabAttach_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BB1C", Offset = "0x64BB1C")]
	public sealed class VRTK_ControllerEvents_UnityEvents : VRTK_UnityEvents<VRTK_ControllerEvents>
	{
		[Serializable]
		[Token(Token = "0x20004C6")]
		public sealed class ControllerInteractionEvent : UnityEvent<object, ControllerInteractionEventArgs>
		{
			[Token(Token = "0x600237C")]
			[Address(RVA = "0x7EF448", Offset = "0x7EF448", VA = "0x7EF448")]
			public ControllerInteractionEvent()
			{
			}
		}

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerInteractionEvent OnTriggerPressed;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerInteractionEvent OnTriggerReleased;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControllerInteractionEvent OnTriggerTouchStart;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ControllerInteractionEvent OnTriggerTouchEnd;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ControllerInteractionEvent OnTriggerHairlineStart;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ControllerInteractionEvent OnTriggerHairlineEnd;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ControllerInteractionEvent OnTriggerClicked;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerInteractionEvent OnTriggerUnclicked;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ControllerInteractionEvent OnTriggerAxisChanged;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ControllerInteractionEvent OnGripPressed;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ControllerInteractionEvent OnGripReleased;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ControllerInteractionEvent OnGripTouchStart;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ControllerInteractionEvent OnGripTouchEnd;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ControllerInteractionEvent OnGripHairlineStart;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ControllerInteractionEvent OnGripHairlineEnd;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ControllerInteractionEvent OnGripClicked;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ControllerInteractionEvent OnGripUnclicked;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerInteractionEvent OnGripAxisChanged;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ControllerInteractionEvent OnTouchpadPressed;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ControllerInteractionEvent OnTouchpadReleased;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ControllerInteractionEvent OnTouchpadTouchStart;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ControllerInteractionEvent OnTouchpadTouchEnd;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ControllerInteractionEvent OnTouchpadAxisChanged;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ControllerInteractionEvent OnButtonOnePressed;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public ControllerInteractionEvent OnButtonOneReleased;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public ControllerInteractionEvent OnButtonOneTouchStart;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ControllerInteractionEvent OnButtonOneTouchEnd;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public ControllerInteractionEvent OnButtonTwoPressed;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public ControllerInteractionEvent OnButtonTwoReleased;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ControllerInteractionEvent OnButtonTwoTouchStart;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public ControllerInteractionEvent OnButtonTwoTouchEnd;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ControllerInteractionEvent OnStartMenuPressed;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ControllerInteractionEvent OnStartMenuReleased;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public ControllerInteractionEvent OnAliasPointerOn;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public ControllerInteractionEvent OnAliasPointerOff;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public ControllerInteractionEvent OnAliasPointerSet;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ControllerInteractionEvent OnAliasGrabOn;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ControllerInteractionEvent OnAliasGrabOff;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public ControllerInteractionEvent OnAliasUseOn;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public ControllerInteractionEvent OnAliasUseOff;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public ControllerInteractionEvent OnAliasUIClickOn;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public ControllerInteractionEvent OnAliasUIClickOff;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ControllerInteractionEvent OnAliasMenuOn;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public ControllerInteractionEvent OnAliasMenuOff;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public ControllerInteractionEvent OnControllerEnabled;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public ControllerInteractionEvent OnControllerDisabled;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public ControllerInteractionEvent OnControllerIndexChanged;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ControllerInteractionEvent OnControllerModelAvailable;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ControllerInteractionEvent OnControllerVisible;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public ControllerInteractionEvent OnControllerHidden;

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x7EBA48", Offset = "0x7EBA48", VA = "0x7EBA48", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerEvents component)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x7EC458", Offset = "0x7EC458", VA = "0x7EC458", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerEvents component)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x7ECE68", Offset = "0x7ECE68", VA = "0x7ECE68")]
		private void TriggerPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x7ECF14", Offset = "0x7ECF14", VA = "0x7ECF14")]
		private void TriggerReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x7ECFC0", Offset = "0x7ECFC0", VA = "0x7ECFC0")]
		private void TriggerTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x7ED06C", Offset = "0x7ED06C", VA = "0x7ED06C")]
		private void TriggerTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x7ED118", Offset = "0x7ED118", VA = "0x7ED118")]
		private void TriggerHairlineStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x7ED1C4", Offset = "0x7ED1C4", VA = "0x7ED1C4")]
		private void TriggerHairlineEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x7ED270", Offset = "0x7ED270", VA = "0x7ED270")]
		private void TriggerClicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x7ED31C", Offset = "0x7ED31C", VA = "0x7ED31C")]
		private void TriggerUnclicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x7ED3C8", Offset = "0x7ED3C8", VA = "0x7ED3C8")]
		private void TriggerAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x7ED474", Offset = "0x7ED474", VA = "0x7ED474")]
		private void GripPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x7ED520", Offset = "0x7ED520", VA = "0x7ED520")]
		private void GripReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x7ED5CC", Offset = "0x7ED5CC", VA = "0x7ED5CC")]
		private void GripTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x7ED678", Offset = "0x7ED678", VA = "0x7ED678")]
		private void GripTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x7ED724", Offset = "0x7ED724", VA = "0x7ED724")]
		private void GripHairlineStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x7ED7D0", Offset = "0x7ED7D0", VA = "0x7ED7D0")]
		private void GripHairlineEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x7ED87C", Offset = "0x7ED87C", VA = "0x7ED87C")]
		private void GripClicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x7ED928", Offset = "0x7ED928", VA = "0x7ED928")]
		private void GripUnclicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x7ED9D4", Offset = "0x7ED9D4", VA = "0x7ED9D4")]
		private void GripAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x7EDA80", Offset = "0x7EDA80", VA = "0x7EDA80")]
		private void TouchpadPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x7EDB2C", Offset = "0x7EDB2C", VA = "0x7EDB2C")]
		private void TouchpadReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x7EDBD8", Offset = "0x7EDBD8", VA = "0x7EDBD8")]
		private void TouchpadTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x7EDC84", Offset = "0x7EDC84", VA = "0x7EDC84")]
		private void TouchpadTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x7EDD30", Offset = "0x7EDD30", VA = "0x7EDD30")]
		private void TouchpadAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x7EDDDC", Offset = "0x7EDDDC", VA = "0x7EDDDC")]
		private void ButtonOnePressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x7EDE88", Offset = "0x7EDE88", VA = "0x7EDE88")]
		private void ButtonOneReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x7EDF34", Offset = "0x7EDF34", VA = "0x7EDF34")]
		private void ButtonOneTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x7EDFE0", Offset = "0x7EDFE0", VA = "0x7EDFE0")]
		private void ButtonOneTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x7EE08C", Offset = "0x7EE08C", VA = "0x7EE08C")]
		private void ButtonTwoPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x7EE138", Offset = "0x7EE138", VA = "0x7EE138")]
		private void ButtonTwoReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x7EE1E4", Offset = "0x7EE1E4", VA = "0x7EE1E4")]
		private void ButtonTwoTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x7EE290", Offset = "0x7EE290", VA = "0x7EE290")]
		private void ButtonTwoTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x7EE33C", Offset = "0x7EE33C", VA = "0x7EE33C")]
		private void StartMenuPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x7EE3E8", Offset = "0x7EE3E8", VA = "0x7EE3E8")]
		private void StartMenuReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x7EE494", Offset = "0x7EE494", VA = "0x7EE494")]
		private void AliasPointerOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x7EE540", Offset = "0x7EE540", VA = "0x7EE540")]
		private void AliasPointerOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x7EE5EC", Offset = "0x7EE5EC", VA = "0x7EE5EC")]
		private void AliasPointerSet(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x7EE698", Offset = "0x7EE698", VA = "0x7EE698")]
		private void AliasGrabOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x7EE744", Offset = "0x7EE744", VA = "0x7EE744")]
		private void AliasGrabOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x7EE7F0", Offset = "0x7EE7F0", VA = "0x7EE7F0")]
		private void AliasUseOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x7EE89C", Offset = "0x7EE89C", VA = "0x7EE89C")]
		private void AliasUseOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x7EE948", Offset = "0x7EE948", VA = "0x7EE948")]
		private void AliasUIClickOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x7EE9F4", Offset = "0x7EE9F4", VA = "0x7EE9F4")]
		private void AliasUIClickOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x7EEAA0", Offset = "0x7EEAA0", VA = "0x7EEAA0")]
		private void AliasMenuOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x7EEB4C", Offset = "0x7EEB4C", VA = "0x7EEB4C")]
		private void AliasMenuOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x7EEBF8", Offset = "0x7EEBF8", VA = "0x7EEBF8")]
		private void ControllerEnabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x7EECA4", Offset = "0x7EECA4", VA = "0x7EECA4")]
		private void ControllerDisabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x7EED50", Offset = "0x7EED50", VA = "0x7EED50")]
		private void ControllerIndexChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x7EEDFC", Offset = "0x7EEDFC", VA = "0x7EEDFC")]
		private void ControllerModelAvailable(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x7EEEA8", Offset = "0x7EEEA8", VA = "0x7EEEA8")]
		private void ControllerVisible(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x7EEF54", Offset = "0x7EEF54", VA = "0x7EEF54")]
		private void ControllerHidden(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x7EF000", Offset = "0x7EF000", VA = "0x7EF000")]
		public VRTK_ControllerEvents_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BB54", Offset = "0x64BB54")]
	public sealed class VRTK_ControllerRigidbodyActivator_UnityEvents : VRTK_UnityEvents<VRTK_ControllerRigidbodyActivator>
	{
		[Serializable]
		[Token(Token = "0x20004C7")]
		public sealed class ControllerRigidbodyActivatorEvent : UnityEvent<object, ControllerRigidbodyActivatorEventArgs>
		{
			[Token(Token = "0x600237D")]
			[Address(RVA = "0x7EF7B0", Offset = "0x7EF7B0", VA = "0x7EF7B0")]
			public ControllerRigidbodyActivatorEvent()
			{
			}
		}

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerRigidbodyActivatorEvent OnControllerRigidbodyOn;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerRigidbodyActivatorEvent OnControllerRigidbodyOff;

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x7EF498", Offset = "0x7EF498", VA = "0x7EF498", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerRigidbodyActivator component)
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x7EF568", Offset = "0x7EF568", VA = "0x7EF568", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerRigidbodyActivator component)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x7EF638", Offset = "0x7EF638", VA = "0x7EF638")]
		private void ControllerRigidbodyOn(object o, ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x7EF6B0", Offset = "0x7EF6B0", VA = "0x7EF6B0")]
		private void ControllerRigidbodyOff(object o, ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x7EF728", Offset = "0x7EF728", VA = "0x7EF728")]
		public VRTK_ControllerRigidbodyActivator_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BB8C", Offset = "0x64BB8C")]
	public sealed class VRTK_ControllerTooltips_UnityEvents : VRTK_UnityEvents<VRTK_ControllerTooltips>
	{
		[Serializable]
		[Token(Token = "0x20004C8")]
		public sealed class ControllerTooltipsEvent : UnityEvent<object, ControllerTooltipsEventArgs>
		{
			[Token(Token = "0x600237E")]
			[Address(RVA = "0x7EFB18", Offset = "0x7EFB18", VA = "0x7EFB18")]
			public ControllerTooltipsEvent()
			{
			}
		}

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerTooltipsEvent OnControllerTooltipOn;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerTooltipsEvent OnControllerTooltipOff;

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x7EF800", Offset = "0x7EF800", VA = "0x7EF800", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerTooltips component)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x7EF8D0", Offset = "0x7EF8D0", VA = "0x7EF8D0", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerTooltips component)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x7EF9A0", Offset = "0x7EF9A0", VA = "0x7EF9A0")]
		private void ControllerTooltipOn(object o, ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x7EFA18", Offset = "0x7EFA18", VA = "0x7EFA18")]
		private void ControllerTooltipOff(object o, ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x7EFA90", Offset = "0x7EFA90", VA = "0x7EFA90")]
		public VRTK_ControllerTooltips_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BBC4", Offset = "0x64BBC4")]
	public sealed class VRTK_DashTeleport_UnityEvents : VRTK_UnityEvents<VRTK_DashTeleport>
	{
		[Serializable]
		[Token(Token = "0x20004C9")]
		public sealed class DashTeleportEvent : UnityEvent<object, DashTeleportEventArgs>
		{
			[Token(Token = "0x600237F")]
			[Address(RVA = "0x7EFE80", Offset = "0x7EFE80", VA = "0x7EFE80")]
			public DashTeleportEvent()
			{
			}
		}

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashTeleportEvent OnWillDashThruObjects;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DashTeleportEvent OnDashedThruObjects;

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x7EFB68", Offset = "0x7EFB68", VA = "0x7EFB68", Slot = "4")]
		protected override void AddListeners(VRTK_DashTeleport component)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x7EFC38", Offset = "0x7EFC38", VA = "0x7EFC38", Slot = "5")]
		protected override void RemoveListeners(VRTK_DashTeleport component)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x7EFD08", Offset = "0x7EFD08", VA = "0x7EFD08")]
		private void WillDashThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x7EFD80", Offset = "0x7EFD80", VA = "0x7EFD80")]
		private void DashedThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x7EFDF8", Offset = "0x7EFDF8", VA = "0x7EFDF8")]
		public VRTK_DashTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BBFC", Offset = "0x64BBFC")]
	public sealed class VRTK_DestinationMarker_UnityEvents : VRTK_UnityEvents<VRTK_DestinationMarker>
	{
		[Serializable]
		[Token(Token = "0x20004CA")]
		public sealed class DestinationMarkerEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x6002380")]
			[Address(RVA = "0x7F04E0", Offset = "0x7F04E0", VA = "0x7F04E0")]
			public DestinationMarkerEvent()
			{
			}
		}

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestinationMarkerEvent OnDestinationMarkerEnter;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DestinationMarkerEvent OnDestinationMarkerExit;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DestinationMarkerEvent OnDestinationMarkerHover;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestinationMarkerEvent OnDestinationMarkerSet;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x7EFED0", Offset = "0x7EFED0", VA = "0x7EFED0", Slot = "4")]
		protected override void AddListeners(VRTK_DestinationMarker component)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x7F0020", Offset = "0x7F0020", VA = "0x7F0020", Slot = "5")]
		protected override void RemoveListeners(VRTK_DestinationMarker component)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x7F0170", Offset = "0x7F0170", VA = "0x7F0170")]
		private void DestinationMarkerEnter(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x7F0220", Offset = "0x7F0220", VA = "0x7F0220")]
		private void DestinationMarkerExit(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x7F02D0", Offset = "0x7F02D0", VA = "0x7F02D0")]
		private void DestinationMarkerHover(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x7F0380", Offset = "0x7F0380", VA = "0x7F0380")]
		private void DestinationMarkerSet(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x7F0430", Offset = "0x7F0430", VA = "0x7F0430")]
		public VRTK_DestinationMarker_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BC34", Offset = "0x64BC34")]
	public sealed class VRTK_DestinationPoint_UnityEvents : VRTK_UnityEvents<VRTK_DestinationPoint>
	{
		[Serializable]
		[Token(Token = "0x20004CB")]
		public sealed class DestinationPointEvent : UnityEvent<object>
		{
			[Token(Token = "0x6002381")]
			[Address(RVA = "0x7F0B44", Offset = "0x7F0B44", VA = "0x7F0B44")]
			public DestinationPointEvent()
			{
			}
		}

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestinationPointEvent OnDestinationPointEnabled;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DestinationPointEvent OnDestinationPointDisabled;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DestinationPointEvent OnDestinationPointLocked;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestinationPointEvent OnDestinationPointUnlocked;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DestinationPointEvent OnDestinationPointReset;

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x7F0530", Offset = "0x7F0530", VA = "0x7F0530", Slot = "4")]
		protected override void AddListeners(VRTK_DestinationPoint component)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x7F06C0", Offset = "0x7F06C0", VA = "0x7F06C0", Slot = "5")]
		protected override void RemoveListeners(VRTK_DestinationPoint component)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x7F0850", Offset = "0x7F0850", VA = "0x7F0850")]
		private void DestinationPointEnabled(object o)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x7F08C0", Offset = "0x7F08C0", VA = "0x7F08C0")]
		private void DestinationPointDisabled(object o)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x7F0930", Offset = "0x7F0930", VA = "0x7F0930")]
		private void DestinationPointLocked(object o)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x7F09A0", Offset = "0x7F09A0", VA = "0x7F09A0")]
		private void DestinationPointUnlocked(object o)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x7F0A10", Offset = "0x7F0A10", VA = "0x7F0A10")]
		private void DestinationPointReset(object o)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x7F0A80", Offset = "0x7F0A80", VA = "0x7F0A80")]
		public VRTK_DestinationPoint_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BC6C", Offset = "0x64BC6C")]
	public sealed class VRTK_HeadsetCollision_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetCollision>
	{
		[Serializable]
		[Token(Token = "0x20004CC")]
		public sealed class HeadsetCollisionEvent : UnityEvent<object, HeadsetCollisionEventArgs>
		{
			[Token(Token = "0x6002382")]
			[Address(RVA = "0x7F0ECC", Offset = "0x7F0ECC", VA = "0x7F0ECC")]
			public HeadsetCollisionEvent()
			{
			}
		}

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetCollisionEvent OnHeadsetCollisionDetect;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetCollisionEvent OnHeadsetCollisionEnded;

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x7F0B94", Offset = "0x7F0B94", VA = "0x7F0B94", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetCollision component)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x7F0C64", Offset = "0x7F0C64", VA = "0x7F0C64", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetCollision component)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x7F0D34", Offset = "0x7F0D34", VA = "0x7F0D34")]
		private void HeadsetCollisionDetect(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x7F0DBC", Offset = "0x7F0DBC", VA = "0x7F0DBC")]
		private void HeadsetCollisionEnded(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x7F0E44", Offset = "0x7F0E44", VA = "0x7F0E44")]
		public VRTK_HeadsetCollision_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BCA4", Offset = "0x64BCA4")]
	public sealed class VRTK_HeadsetControllerAware_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetControllerAware>
	{
		[Serializable]
		[Token(Token = "0x20004CD")]
		public sealed class HeadsetControllerAwareEvent : UnityEvent<object, HeadsetControllerAwareEventArgs>
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0x7F155C", Offset = "0x7F155C", VA = "0x7F155C")]
			public HeadsetControllerAwareEvent()
			{
			}
		}

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetControllerAwareEvent OnControllerObscured;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetControllerAwareEvent OnControllerUnobscured;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HeadsetControllerAwareEvent OnControllerGlanceEnter;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HeadsetControllerAwareEvent OnControllerGlanceExit;

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x7F0F1C", Offset = "0x7F0F1C", VA = "0x7F0F1C", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetControllerAware component)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x7F106C", Offset = "0x7F106C", VA = "0x7F106C", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetControllerAware component)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x7F11BC", Offset = "0x7F11BC", VA = "0x7F11BC")]
		private void ControllerObscured(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x7F1278", Offset = "0x7F1278", VA = "0x7F1278")]
		private void ControllerUnobscured(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x7F1334", Offset = "0x7F1334", VA = "0x7F1334")]
		private void ControllerGlanceEnter(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x7F13F0", Offset = "0x7F13F0", VA = "0x7F13F0")]
		private void ControllerGlanceExit(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x7F14AC", Offset = "0x7F14AC", VA = "0x7F14AC")]
		public VRTK_HeadsetControllerAware_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000223")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BCDC", Offset = "0x64BCDC")]
	public sealed class VRTK_HeadsetFade_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetFade>
	{
		[Serializable]
		[Token(Token = "0x20004CE")]
		public sealed class HeadsetFadeEvent : UnityEvent<object, HeadsetFadeEventArgs>
		{
			[Token(Token = "0x6002384")]
			[Address(RVA = "0x7F1B1C", Offset = "0x7F1B1C", VA = "0x7F1B1C")]
			public HeadsetFadeEvent()
			{
			}
		}

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetFadeEvent OnHeadsetFadeStart;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetFadeEvent OnHeadsetFadeComplete;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HeadsetFadeEvent OnHeadsetUnfadeStart;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HeadsetFadeEvent OnHeadsetUnfadeComplete;

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x7F15AC", Offset = "0x7F15AC", VA = "0x7F15AC", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetFade component)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x7F16FC", Offset = "0x7F16FC", VA = "0x7F16FC", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetFade component)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x7F184C", Offset = "0x7F184C", VA = "0x7F184C")]
		private void HeadsetFadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x7F18D4", Offset = "0x7F18D4", VA = "0x7F18D4")]
		private void HeadsetFadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x7F195C", Offset = "0x7F195C", VA = "0x7F195C")]
		private void HeadsetUnfadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x7F19E4", Offset = "0x7F19E4", VA = "0x7F19E4")]
		private void HeadsetUnfadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x7F1A6C", Offset = "0x7F1A6C", VA = "0x7F1A6C")]
		public VRTK_HeadsetFade_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BD14", Offset = "0x64BD14")]
	public sealed class VRTK_InteractableObject_UnityEvents : VRTK_UnityEvents<VRTK_InteractableObject>
	{
		[Serializable]
		[Token(Token = "0x20004CF")]
		public sealed class InteractableObjectEvent : UnityEvent<object, InteractableObjectEventArgs>
		{
			[Token(Token = "0x6002385")]
			[Address(RVA = "0x7F60D4", Offset = "0x7F60D4", VA = "0x7F60D4")]
			public InteractableObjectEvent()
			{
			}
		}

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableObjectEvent OnObjectEnable;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractableObjectEvent OnObjectDisable;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractableObjectEvent OnNearTouch;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractableObjectEvent OnNearUntouch;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractableObjectEvent OnTouch;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableObjectEvent OnUntouch;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractableObjectEvent OnGrab;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InteractableObjectEvent OnUngrab;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractableObjectEvent OnUse;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractableObjectEvent OnUnuse;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractableObjectEvent OnEnterSnapDropZone;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractableObjectEvent OnExitSnapDropZone;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractableObjectEvent OnSnapToDropZone;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractableObjectEvent OnUnsnapFromDropZone;

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x7F512C", Offset = "0x7F512C", VA = "0x7F512C", Slot = "4")]
		protected override void AddListeners(VRTK_InteractableObject component)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x7F54FC", Offset = "0x7F54FC", VA = "0x7F54FC", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractableObject component)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x7F58CC", Offset = "0x7F58CC", VA = "0x7F58CC")]
		private void Enable(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x7F5944", Offset = "0x7F5944", VA = "0x7F5944")]
		private void Disable(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x7F59BC", Offset = "0x7F59BC", VA = "0x7F59BC")]
		private void NearTouch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x7F5A34", Offset = "0x7F5A34", VA = "0x7F5A34")]
		private void NearUnTouch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x7F5AAC", Offset = "0x7F5AAC", VA = "0x7F5AAC")]
		private void Touch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x7F5B24", Offset = "0x7F5B24", VA = "0x7F5B24")]
		private void UnTouch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x7F5B9C", Offset = "0x7F5B9C", VA = "0x7F5B9C")]
		private void Grab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x7F5C14", Offset = "0x7F5C14", VA = "0x7F5C14")]
		private void UnGrab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x7F5C8C", Offset = "0x7F5C8C", VA = "0x7F5C8C")]
		private void Use(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x7F5D04", Offset = "0x7F5D04", VA = "0x7F5D04")]
		private void Unuse(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x7F5D7C", Offset = "0x7F5D7C", VA = "0x7F5D7C")]
		private void EnterSnapDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x7F5DF4", Offset = "0x7F5DF4", VA = "0x7F5DF4")]
		private void ExitSnapDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x7F5E6C", Offset = "0x7F5E6C", VA = "0x7F5E6C")]
		private void SnapToDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x7F5EE4", Offset = "0x7F5EE4", VA = "0x7F5EE4")]
		private void UnsnapFromDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x7F5F5C", Offset = "0x7F5F5C", VA = "0x7F5F5C")]
		public VRTK_InteractableObject_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BD4C", Offset = "0x64BD4C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x64BD4C", Offset = "0x64BD4C")]
	public sealed class VRTK_InteractControllerAppearance_UnityEvents : VRTK_UnityEvents<VRTK_InteractControllerAppearance>
	{
		[Serializable]
		[Token(Token = "0x20004D0")]
		public sealed class InteractControllerAppearanceEvent : UnityEvent<object, InteractControllerAppearanceEventArgs>
		{
			[Token(Token = "0x6002386")]
			[Address(RVA = "0x7F254C", Offset = "0x7F254C", VA = "0x7F254C")]
			public InteractControllerAppearanceEvent()
			{
			}
		}

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractControllerAppearanceEvent OnControllerHidden;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractControllerAppearanceEvent OnControllerVisible;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractControllerAppearanceEvent OnHiddenOnTouch;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractControllerAppearanceEvent OnVisibleOnTouch;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractControllerAppearanceEvent OnHiddenOnGrab;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractControllerAppearanceEvent OnVisibleOnGrab;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractControllerAppearanceEvent OnHiddenOnUse;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InteractControllerAppearanceEvent OnVisibleOnUse;

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x7F1B6C", Offset = "0x7F1B6C", VA = "0x7F1B6C", Slot = "4")]
		protected override void AddListeners(VRTK_InteractControllerAppearance component)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x7F1DBC", Offset = "0x7F1DBC", VA = "0x7F1DBC", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractControllerAppearance component)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x7F200C", Offset = "0x7F200C", VA = "0x7F200C")]
		private void ControllerHidden(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x7F2094", Offset = "0x7F2094", VA = "0x7F2094")]
		private void ControllerVisible(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x7F211C", Offset = "0x7F211C", VA = "0x7F211C")]
		private void HiddenOnTouch(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x7F21A4", Offset = "0x7F21A4", VA = "0x7F21A4")]
		private void VisibleOnTouch(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x7F222C", Offset = "0x7F222C", VA = "0x7F222C")]
		private void HiddenOnGrab(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x7F22B4", Offset = "0x7F22B4", VA = "0x7F22B4")]
		private void VisibleOnGrab(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x7F233C", Offset = "0x7F233C", VA = "0x7F233C")]
		private void HiddenOnUse(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x7F23C4", Offset = "0x7F23C4", VA = "0x7F23C4")]
		private void VisibleOnUse(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x7F244C", Offset = "0x7F244C", VA = "0x7F244C")]
		public VRTK_InteractControllerAppearance_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BDAC", Offset = "0x64BDAC")]
	public sealed class VRTK_InteractGrab_UnityEvents : VRTK_UnityEvents<VRTK_InteractGrab>
	{
		[Serializable]
		[Token(Token = "0x20004D1")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6002387")]
			[Address(RVA = "0x7F2DA4", Offset = "0x7F2DA4", VA = "0x7F2DA4")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartGrabInteractableObject;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerGrabInteractableObject;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUngrabInteractableObject;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUngrabInteractableObject;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnGrabButtonPressed;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnGrabButtonReleased;

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x7F259C", Offset = "0x7F259C", VA = "0x7F259C", Slot = "4")]
		protected override void AddListeners(VRTK_InteractGrab component)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x7F2774", Offset = "0x7F2774", VA = "0x7F2774", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractGrab component)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x7F294C", Offset = "0x7F294C", VA = "0x7F294C")]
		private void ControllerStartGrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x7F29D4", Offset = "0x7F29D4", VA = "0x7F29D4")]
		private void ControllerGrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x7F2A5C", Offset = "0x7F2A5C", VA = "0x7F2A5C")]
		private void ControllerStartUngrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x7F2AE4", Offset = "0x7F2AE4", VA = "0x7F2AE4")]
		private void ControllerUngrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x7F2B6C", Offset = "0x7F2B6C", VA = "0x7F2B6C")]
		private void GrabButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x7F2C18", Offset = "0x7F2C18", VA = "0x7F2C18")]
		private void GrabButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x7F2CC4", Offset = "0x7F2CC4", VA = "0x7F2CC4")]
		public VRTK_InteractGrab_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BDE4", Offset = "0x64BDE4")]
	public sealed class VRTK_InteractHaptics_UnityEvents : VRTK_UnityEvents<VRTK_InteractHaptics>
	{
		[Serializable]
		[Token(Token = "0x20004D2")]
		public sealed class InteractHapticsEvent : UnityEvent<object, InteractHapticsEventArgs>
		{
			[Token(Token = "0x6002388")]
			[Address(RVA = "0x7F3324", Offset = "0x7F3324", VA = "0x7F3324")]
			public InteractHapticsEvent()
			{
			}
		}

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractHapticsEvent OnInteractHapticsNearTouched;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractHapticsEvent OnInteractHapticsTouched;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractHapticsEvent OnInteractHapticsGrabbed;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractHapticsEvent OnInteractHapticsUsed;

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x7F2DF4", Offset = "0x7F2DF4", VA = "0x7F2DF4", Slot = "4")]
		protected override void AddListeners(VRTK_InteractHaptics component)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x7F2F44", Offset = "0x7F2F44", VA = "0x7F2F44", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractHaptics component)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x7F3094", Offset = "0x7F3094", VA = "0x7F3094")]
		private void InteractHapticsNearTouched(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x7F310C", Offset = "0x7F310C", VA = "0x7F310C")]
		private void InteractHapticsTouched(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x7F3184", Offset = "0x7F3184", VA = "0x7F3184")]
		private void InteractHapticsGrabbed(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x7F31FC", Offset = "0x7F31FC", VA = "0x7F31FC")]
		private void InteractHapticsUsed(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x7F3274", Offset = "0x7F3274", VA = "0x7F3274")]
		public VRTK_InteractHaptics_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BE1C", Offset = "0x64BE1C")]
	public sealed class VRTK_InteractNearTouch_UnityEvents : VRTK_UnityEvents<VRTK_InteractNearTouch>
	{
		[Serializable]
		[Token(Token = "0x20004D3")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6002389")]
			[Address(RVA = "0x7F36AC", Offset = "0x7F36AC", VA = "0x7F36AC")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerNearTouchInteractableObject;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerNearUntouchInteractableObject;

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x7F3374", Offset = "0x7F3374", VA = "0x7F3374", Slot = "4")]
		protected override void AddListeners(VRTK_InteractNearTouch component)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x7F3444", Offset = "0x7F3444", VA = "0x7F3444", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractNearTouch component)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x7F3514", Offset = "0x7F3514", VA = "0x7F3514")]
		private void ControllerNearTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x7F359C", Offset = "0x7F359C", VA = "0x7F359C")]
		private void ControllerNearUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x7F3624", Offset = "0x7F3624", VA = "0x7F3624")]
		public VRTK_InteractNearTouch_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BE54", Offset = "0x64BE54")]
	public sealed class VRTK_InteractObjectAppearance_UnityEvents : VRTK_UnityEvents<VRTK_InteractObjectAppearance>
	{
		[Serializable]
		[Token(Token = "0x20004D4")]
		public sealed class InteractObjectAppearanceEvent : UnityEvent<object, InteractObjectAppearanceEventArgs>
		{
			[Token(Token = "0x600238A")]
			[Address(RVA = "0x7F3CBC", Offset = "0x7F3CBC", VA = "0x7F3CBC")]
			public InteractObjectAppearanceEvent()
			{
			}
		}

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractObjectAppearanceEvent OnGameObjectEnabled;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractObjectAppearanceEvent OnGameObjectDisabled;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractObjectAppearanceEvent OnRenderersEnabled;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractObjectAppearanceEvent OnRenderersDisabled;

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x7F36FC", Offset = "0x7F36FC", VA = "0x7F36FC", Slot = "4")]
		protected override void AddListeners(VRTK_InteractObjectAppearance component)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x7F384C", Offset = "0x7F384C", VA = "0x7F384C", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractObjectAppearance component)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x7F399C", Offset = "0x7F399C", VA = "0x7F399C")]
		private void GameObjectEnabled(object o, InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x7F3A38", Offset = "0x7F3A38", VA = "0x7F3A38")]
		private void GameObjectDisabled(object o, InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x7F3AD4", Offset = "0x7F3AD4", VA = "0x7F3AD4")]
		private void RenderersEnabled(object o, InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x7F3B70", Offset = "0x7F3B70", VA = "0x7F3B70")]
		private void RenderersDisabled(object o, InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x7F3C0C", Offset = "0x7F3C0C", VA = "0x7F3C0C")]
		public VRTK_InteractObjectAppearance_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BE8C", Offset = "0x64BE8C")]
	public sealed class VRTK_InteractObjectHighlighter_UnityEvents : VRTK_UnityEvents<VRTK_InteractObjectHighlighter>
	{
		[Serializable]
		[Token(Token = "0x20004D5")]
		public sealed class InteractObjectHighlighterEvent : UnityEvent<object, InteractObjectHighlighterEventArgs>
		{
			[Token(Token = "0x600238B")]
			[Address(RVA = "0x7F408C", Offset = "0x7F408C", VA = "0x7F408C")]
			public InteractObjectHighlighterEvent()
			{
			}
		}

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractObjectHighlighterEvent OnInteractObjectHighlighterHighlighted;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractObjectHighlighterEvent OnInteractObjectHighlighterUnhighlighted;

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x7F3D0C", Offset = "0x7F3D0C", VA = "0x7F3D0C", Slot = "4")]
		protected override void AddListeners(VRTK_InteractObjectHighlighter component)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x7F3DDC", Offset = "0x7F3DDC", VA = "0x7F3DDC", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractObjectHighlighter component)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x7F3EAC", Offset = "0x7F3EAC", VA = "0x7F3EAC")]
		private void InteractObjectHighlighterHighlighted(object o, InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x7F3F58", Offset = "0x7F3F58", VA = "0x7F3F58")]
		private void InteractObjectHighlighterUnhighlighted(object o, InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x7F4004", Offset = "0x7F4004", VA = "0x7F4004")]
		public VRTK_InteractObjectHighlighter_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BEC4", Offset = "0x64BEC4")]
	public sealed class VRTK_InteractTouch_UnityEvents : VRTK_UnityEvents<VRTK_InteractTouch>
	{
		[Serializable]
		[Token(Token = "0x20004D6")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x600238C")]
			[Address(RVA = "0x7F4884", Offset = "0x7F4884", VA = "0x7F4884")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartTouchInteractableObject;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerTouchInteractableObject;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUntouchInteractableObject;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUntouchInteractableObject;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ObjectInteractEvent OnControllerRigidbodyActivated;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ObjectInteractEvent OnControllerRigidbodyDeactivated;

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x7F40DC", Offset = "0x7F40DC", VA = "0x7F40DC", Slot = "4")]
		protected override void AddListeners(VRTK_InteractTouch component)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x7F42AC", Offset = "0x7F42AC", VA = "0x7F42AC", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractTouch component)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x7F447C", Offset = "0x7F447C", VA = "0x7F447C")]
		private void ControllerStartTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x7F4504", Offset = "0x7F4504", VA = "0x7F4504")]
		private void ControllerTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x7F458C", Offset = "0x7F458C", VA = "0x7F458C")]
		private void ControllerStartUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x7F4614", Offset = "0x7F4614", VA = "0x7F4614")]
		private void ControllerUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x7F469C", Offset = "0x7F469C", VA = "0x7F469C")]
		private void ControllerRigidbodyActivated(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x7F4724", Offset = "0x7F4724", VA = "0x7F4724")]
		private void ControllerRigidbodyDeactivated(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x7F47AC", Offset = "0x7F47AC", VA = "0x7F47AC")]
		public VRTK_InteractTouch_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BEFC", Offset = "0x64BEFC")]
	public sealed class VRTK_InteractUse_UnityEvents : VRTK_UnityEvents<VRTK_InteractUse>
	{
		[Serializable]
		[Token(Token = "0x20004D7")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0x7F50DC", Offset = "0x7F50DC", VA = "0x7F50DC")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartUseInteractableObject;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerUseInteractableObject;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUnuseInteractableObject;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUnuseInteractableObject;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnUseButtonPressed;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnUseButtonReleased;

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x7F48D4", Offset = "0x7F48D4", VA = "0x7F48D4", Slot = "4")]
		protected override void AddListeners(VRTK_InteractUse component)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x7F4AAC", Offset = "0x7F4AAC", VA = "0x7F4AAC", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractUse component)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x7F4C84", Offset = "0x7F4C84", VA = "0x7F4C84")]
		private void ControllerStartUseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x7F4D0C", Offset = "0x7F4D0C", VA = "0x7F4D0C")]
		private void ControllerUseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x7F4D94", Offset = "0x7F4D94", VA = "0x7F4D94")]
		private void ControllerStartUnuseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x7F4E1C", Offset = "0x7F4E1C", VA = "0x7F4E1C")]
		private void ControllerUnuseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x7F4EA4", Offset = "0x7F4EA4", VA = "0x7F4EA4")]
		private void UseButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x7F4F50", Offset = "0x7F4F50", VA = "0x7F4F50")]
		private void UseButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x7F4FFC", Offset = "0x7F4FFC", VA = "0x7F4FFC")]
		public VRTK_InteractUse_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BF34", Offset = "0x64BF34")]
	public sealed class VRTK_MoveTransformGrabAttach_UnityEvents : VRTK_UnityEvents<VRTK_MoveTransformGrabAttach>
	{
		[Serializable]
		[Token(Token = "0x20004D8")]
		public sealed class MoveTransformGrabAttachEvent : UnityEvent<object, MoveTransformGrabAttachEventArgs>
		{
			[Token(Token = "0x600238E")]
			[Address(RVA = "0x7F7334", Offset = "0x7F7334", VA = "0x7F7334")]
			public MoveTransformGrabAttachEvent()
			{
			}
		}

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveTransformGrabAttachEvent OnTransformPositionChanged;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MoveTransformGrabAttachEvent OnXAxisMinLimitReached;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MoveTransformGrabAttachEvent OnXAxisMinLimitExited;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MoveTransformGrabAttachEvent OnXAxisMaxLimitReached;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MoveTransformGrabAttachEvent OnXAxisMaxLimitExited;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MoveTransformGrabAttachEvent OnYAxisMinLimitReached;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MoveTransformGrabAttachEvent OnYAxisMinLimitExited;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MoveTransformGrabAttachEvent OnYAxisMaxLimitReached;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MoveTransformGrabAttachEvent OnYAxisMaxLimitExited;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MoveTransformGrabAttachEvent OnZAxisMinLimitReached;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MoveTransformGrabAttachEvent OnZAxisMinLimitExited;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MoveTransformGrabAttachEvent OnZAxisMaxLimitReached;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MoveTransformGrabAttachEvent OnZAxisMaxLimitExited;

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x7F6124", Offset = "0x7F6124", VA = "0x7F6124", Slot = "4")]
		protected override void AddListeners(VRTK_MoveTransformGrabAttach component)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x7F64B4", Offset = "0x7F64B4", VA = "0x7F64B4", Slot = "5")]
		protected override void RemoveListeners(VRTK_MoveTransformGrabAttach component)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x7F6844", Offset = "0x7F6844", VA = "0x7F6844")]
		private void TransformPositionChanged(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x7F6900", Offset = "0x7F6900", VA = "0x7F6900")]
		private void XAxisMinLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x7F69BC", Offset = "0x7F69BC", VA = "0x7F69BC")]
		private void XAxisMaxLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x7F6A78", Offset = "0x7F6A78", VA = "0x7F6A78")]
		private void YAxisMinLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x7F6B34", Offset = "0x7F6B34", VA = "0x7F6B34")]
		private void YAxisMaxLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x7F6BF0", Offset = "0x7F6BF0", VA = "0x7F6BF0")]
		private void ZAxisMinLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x7F6CAC", Offset = "0x7F6CAC", VA = "0x7F6CAC")]
		private void ZAxisMaxLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x7F6D68", Offset = "0x7F6D68", VA = "0x7F6D68")]
		private void XAxisMinLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x7F6E24", Offset = "0x7F6E24", VA = "0x7F6E24")]
		private void XAxisMaxLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x7F6EE0", Offset = "0x7F6EE0", VA = "0x7F6EE0")]
		private void YAxisMinLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x7F6F9C", Offset = "0x7F6F9C", VA = "0x7F6F9C")]
		private void YAxisMaxLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x7F7058", Offset = "0x7F7058", VA = "0x7F7058")]
		private void ZAxisMinLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x7F7114", Offset = "0x7F7114", VA = "0x7F7114")]
		private void ZAxisMaxLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x7F71D0", Offset = "0x7F71D0", VA = "0x7F71D0")]
		public VRTK_MoveTransformGrabAttach_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BF6C", Offset = "0x64BF6C")]
	public sealed class VRTK_ObjectAutoGrab_UnityEvents : VRTK_UnityEvents<VRTK_ObjectAutoGrab>
	{
		[Serializable]
		[Token(Token = "0x20004D9")]
		public sealed class ObjectAutoGrabEvent : UnityEvent<object>
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0x7F7580", Offset = "0x7F7580", VA = "0x7F7580")]
			public ObjectAutoGrabEvent()
			{
			}
		}

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectAutoGrabEvent OnObjectAutoGrabCompleted;

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x7F7384", Offset = "0x7F7384", VA = "0x7F7384", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectAutoGrab component)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x7F7414", Offset = "0x7F7414", VA = "0x7F7414", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectAutoGrab component)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x7F74A4", Offset = "0x7F74A4", VA = "0x7F74A4")]
		private void ObjectAutoGrabCompleted(object o)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x7F7514", Offset = "0x7F7514", VA = "0x7F7514")]
		public VRTK_ObjectAutoGrab_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BFA4", Offset = "0x64BFA4")]
	public sealed class VRTK_ObjectControl_UnityEvents : VRTK_UnityEvents<VRTK_ObjectControl>
	{
		[Serializable]
		[Token(Token = "0x20004DA")]
		public sealed class ObjectControlEvent : UnityEvent<object, ObjectControlEventArgs>
		{
			[Token(Token = "0x6002390")]
			[Address(RVA = "0x7F7950", Offset = "0x7F7950", VA = "0x7F7950")]
			public ObjectControlEvent()
			{
			}
		}

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectControlEvent OnXAxisChanged;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectControlEvent OnYAxisChanged;

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x7F75D0", Offset = "0x7F75D0", VA = "0x7F75D0", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectControl component)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x7F76A0", Offset = "0x7F76A0", VA = "0x7F76A0", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectControl component)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x7F7770", Offset = "0x7F7770", VA = "0x7F7770")]
		private void XAxisChanged(object o, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x7F781C", Offset = "0x7F781C", VA = "0x7F781C")]
		private void YAxisChanged(object o, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x7F78C8", Offset = "0x7F78C8", VA = "0x7F78C8")]
		public VRTK_ObjectControl_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64BFDC", Offset = "0x64BFDC")]
	public sealed class VRTK_ObjectTooltip_UnityEvents : VRTK_UnityEvents<VRTK_ObjectTooltip>
	{
		[Serializable]
		[Token(Token = "0x20004DB")]
		public sealed class ObjectTooltipEvent : UnityEvent<object, ObjectTooltipEventArgs>
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x7F7CB8", Offset = "0x7F7CB8", VA = "0x7F7CB8")]
			public ObjectTooltipEvent()
			{
			}
		}

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTooltipEvent OnObjectTooltipReset;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectTooltipEvent OnObjectTooltipTextUpdated;

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x7F79A0", Offset = "0x7F79A0", VA = "0x7F79A0", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectTooltip component)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x7F7A70", Offset = "0x7F7A70", VA = "0x7F7A70", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectTooltip component)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x7F7B40", Offset = "0x7F7B40", VA = "0x7F7B40")]
		private void ObjectTooltipReset(object o, ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x7F7BB8", Offset = "0x7F7BB8", VA = "0x7F7BB8")]
		private void ObjectTooltipTextUpdated(object o, ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x7F7C30", Offset = "0x7F7C30", VA = "0x7F7C30")]
		public VRTK_ObjectTooltip_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C014", Offset = "0x64C014")]
	public sealed class VRTK_PlayAreaCursor_UnityEvents : VRTK_UnityEvents<VRTK_PlayAreaCursor>
	{
		[Serializable]
		[Token(Token = "0x20004DC")]
		public sealed class PlayAreaCursorEvent : UnityEvent<object, PlayAreaCursorEventArgs>
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0x7F8020", Offset = "0x7F8020", VA = "0x7F8020")]
			public PlayAreaCursorEvent()
			{
			}
		}

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayAreaCursorEvent OnPlayAreaCursorStartCollision;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayAreaCursorEvent OnPlayAreaCursorEndCollision;

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x7F7D08", Offset = "0x7F7D08", VA = "0x7F7D08", Slot = "4")]
		protected override void AddListeners(VRTK_PlayAreaCursor component)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x7F7DD8", Offset = "0x7F7DD8", VA = "0x7F7DD8", Slot = "5")]
		protected override void RemoveListeners(VRTK_PlayAreaCursor component)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x7F7EA8", Offset = "0x7F7EA8", VA = "0x7F7EA8")]
		private void PlayAreaCursorStartCollision(object o, PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x7F7F20", Offset = "0x7F7F20", VA = "0x7F7F20")]
		private void PlayAreaCursorEndCollision(object o, PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x7F7F98", Offset = "0x7F7F98", VA = "0x7F7F98")]
		public VRTK_PlayAreaCursor_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C04C", Offset = "0x64C04C")]
	public sealed class VRTK_PlayerClimb_UnityEvents : VRTK_UnityEvents<VRTK_PlayerClimb>
	{
		[Serializable]
		[Token(Token = "0x20004DD")]
		public sealed class PlayerClimbEvent : UnityEvent<object, PlayerClimbEventArgs>
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0x7F83A8", Offset = "0x7F83A8", VA = "0x7F83A8")]
			public PlayerClimbEvent()
			{
			}
		}

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerClimbEvent OnPlayerClimbStarted;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerClimbEvent OnPlayerClimbEnded;

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x7F8070", Offset = "0x7F8070", VA = "0x7F8070", Slot = "4")]
		protected override void AddListeners(VRTK_PlayerClimb component)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x7F8140", Offset = "0x7F8140", VA = "0x7F8140", Slot = "5")]
		protected override void RemoveListeners(VRTK_PlayerClimb component)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x7F8210", Offset = "0x7F8210", VA = "0x7F8210")]
		private void PlayerClimbStarted(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x7F8298", Offset = "0x7F8298", VA = "0x7F8298")]
		private void PlayerClimbEnded(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x7F8320", Offset = "0x7F8320", VA = "0x7F8320")]
		public VRTK_PlayerClimb_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C084", Offset = "0x64C084")]
	public sealed class VRTK_Pointer_UnityEvents : VRTK_UnityEvents<VRTK_Pointer>
	{
		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonPressed;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonReleased;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonPressed;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonReleased;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_DestinationMarker_UnityEvents.DestinationMarkerEvent OnPointerStateValid;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_DestinationMarker_UnityEvents.DestinationMarkerEvent OnPointerStateInvalid;

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x7F8644", Offset = "0x7F8644", VA = "0x7F8644", Slot = "4")]
		protected override void AddListeners(VRTK_Pointer component)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x7F881C", Offset = "0x7F881C", VA = "0x7F881C", Slot = "5")]
		protected override void RemoveListeners(VRTK_Pointer component)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x7F89F4", Offset = "0x7F89F4", VA = "0x7F89F4")]
		private void ActivationButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x7F8AA0", Offset = "0x7F8AA0", VA = "0x7F8AA0")]
		private void ActivationButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x7F8B4C", Offset = "0x7F8B4C", VA = "0x7F8B4C")]
		private void SelectionButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x7F8BF8", Offset = "0x7F8BF8", VA = "0x7F8BF8")]
		private void SelectionButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x7F8CA4", Offset = "0x7F8CA4", VA = "0x7F8CA4")]
		private void PointerStateValid(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x7F8D54", Offset = "0x7F8D54", VA = "0x7F8D54")]
		private void PointerStateInvalid(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x7F8E04", Offset = "0x7F8E04", VA = "0x7F8E04")]
		public VRTK_Pointer_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C0BC", Offset = "0x64C0BC")]
	public sealed class VRTK_PointerDirectionIndicator_UnityEvents : VRTK_UnityEvents<VRTK_PointerDirectionIndicator>
	{
		[Serializable]
		[Token(Token = "0x20004DE")]
		public sealed class PointerDirectionIndicatorEvent : UnityEvent<object>
		{
			[Token(Token = "0x6002394")]
			[Address(RVA = "0x7F85F4", Offset = "0x7F85F4", VA = "0x7F85F4")]
			public PointerDirectionIndicatorEvent()
			{
			}
		}

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PointerDirectionIndicatorEvent OnPointerDirectionIndicatorPositionSet;

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x7F83F8", Offset = "0x7F83F8", VA = "0x7F83F8", Slot = "4")]
		protected override void AddListeners(VRTK_PointerDirectionIndicator component)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x7F8488", Offset = "0x7F8488", VA = "0x7F8488", Slot = "5")]
		protected override void RemoveListeners(VRTK_PointerDirectionIndicator component)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x7F8518", Offset = "0x7F8518", VA = "0x7F8518")]
		private void PointerDirectionIndicatorPositionSet(object o)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x7F8588", Offset = "0x7F8588", VA = "0x7F8588")]
		public VRTK_PointerDirectionIndicator_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C0F4", Offset = "0x64C0F4")]
	public sealed class VRTK_PositionRewind_UnityEvents : VRTK_UnityEvents<VRTK_PositionRewind>
	{
		[Serializable]
		[Token(Token = "0x20004DF")]
		public sealed class PositionRewindEvent : UnityEvent<object, PositionRewindEventArgs>
		{
			[Token(Token = "0x6002395")]
			[Address(RVA = "0x7F9114", Offset = "0x7F9114", VA = "0x7F9114")]
			public PositionRewindEvent()
			{
			}
		}

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionRewindEvent OnPositionRewindToSafe;

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x7F8EE4", Offset = "0x7F8EE4", VA = "0x7F8EE4", Slot = "4")]
		protected override void AddListeners(VRTK_PositionRewind component)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x7F8F74", Offset = "0x7F8F74", VA = "0x7F8F74", Slot = "5")]
		protected override void RemoveListeners(VRTK_PositionRewind component)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x7F9004", Offset = "0x7F9004", VA = "0x7F9004")]
		private void PositionRewindToSafe(object o, PositionRewindEventArgs e)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x7F90A8", Offset = "0x7F90A8", VA = "0x7F90A8")]
		public VRTK_PositionRewind_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C12C", Offset = "0x64C12C")]
	public sealed class VRTK_RotateTransformGrabAttach_UnityEvents : VRTK_UnityEvents<VRTK_RotateTransformGrabAttach>
	{
		[Serializable]
		[Token(Token = "0x20004E0")]
		public sealed class RotateTransformGrabAttachEvent : UnityEvent<object, RotateTransformGrabAttachEventArgs>
		{
			[Token(Token = "0x6002396")]
			[Address(RVA = "0x7F9854", Offset = "0x7F9854", VA = "0x7F9854")]
			public RotateTransformGrabAttachEvent()
			{
			}
		}

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RotateTransformGrabAttachEvent OnAngleChanged;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RotateTransformGrabAttachEvent OnMinAngleReached;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RotateTransformGrabAttachEvent OnMinAngleExited;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RotateTransformGrabAttachEvent OnMaxAngleReached;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RotateTransformGrabAttachEvent OnMaxAngleExited;

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x7F9164", Offset = "0x7F9164", VA = "0x7F9164", Slot = "4")]
		protected override void AddListeners(VRTK_RotateTransformGrabAttach component)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x7F92F4", Offset = "0x7F92F4", VA = "0x7F92F4", Slot = "5")]
		protected override void RemoveListeners(VRTK_RotateTransformGrabAttach component)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x7F9484", Offset = "0x7F9484", VA = "0x7F9484")]
		private void AngleChanged(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x7F9520", Offset = "0x7F9520", VA = "0x7F9520")]
		private void MinAngleReached(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x7F95BC", Offset = "0x7F95BC", VA = "0x7F95BC")]
		private void MinAngleExited(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x7F9658", Offset = "0x7F9658", VA = "0x7F9658")]
		private void MaxAngleReached(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x7F96F4", Offset = "0x7F96F4", VA = "0x7F96F4")]
		private void MaxAngleExited(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x7F9790", Offset = "0x7F9790", VA = "0x7F9790")]
		public VRTK_RotateTransformGrabAttach_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public sealed class VRTK_SDKManager_UnityEvents : VRTK_UnityEvents<VRTK_SDKManager>
	{
		[Serializable]
		[Token(Token = "0x20004E1")]
		public sealed class LoadedSetupChangeEvent : UnityEvent<VRTK_SDKManager, VRTK_SDKManager.LoadedSetupChangeEventArgs>
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0x7F9AD4", Offset = "0x7F9AD4", VA = "0x7F9AD4")]
			public LoadedSetupChangeEvent()
			{
			}
		}

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadedSetupChangeEvent OnLoadedSetupChanged;

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x7F98A4", Offset = "0x7F98A4", VA = "0x7F98A4", Slot = "4")]
		protected override void AddListeners(VRTK_SDKManager component)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x7F9934", Offset = "0x7F9934", VA = "0x7F9934", Slot = "5")]
		protected override void RemoveListeners(VRTK_SDKManager component)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x7F99C4", Offset = "0x7F99C4", VA = "0x7F99C4")]
		private void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x7F9A68", Offset = "0x7F9A68", VA = "0x7F9A68")]
		public VRTK_SDKManager_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public sealed class VRTK_SDKSetup_UnityEvents : VRTK_UnityEvents<VRTK_SDKSetup>
	{
		[Serializable]
		[Token(Token = "0x20004E2")]
		public sealed class LoadEvent : UnityEvent<VRTK_SDKManager, VRTK_SDKSetup>
		{
			[Token(Token = "0x6002398")]
			[Address(RVA = "0x7F9E3C", Offset = "0x7F9E3C", VA = "0x7F9E3C")]
			public LoadEvent()
			{
			}
		}

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadEvent OnLoaded;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadEvent OnUnloaded;

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x7F9B24", Offset = "0x7F9B24", VA = "0x7F9B24", Slot = "4")]
		protected override void AddListeners(VRTK_SDKSetup component)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x7F9BF4", Offset = "0x7F9BF4", VA = "0x7F9BF4", Slot = "5")]
		protected override void RemoveListeners(VRTK_SDKSetup component)
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x7F9CC4", Offset = "0x7F9CC4", VA = "0x7F9CC4")]
		private void Loaded(VRTK_SDKManager sender, VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x7F9D3C", Offset = "0x7F9D3C", VA = "0x7F9D3C")]
		private void Unloaded(VRTK_SDKManager sender, VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x7F9DB4", Offset = "0x7F9DB4", VA = "0x7F9DB4")]
		public VRTK_SDKSetup_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C164", Offset = "0x64C164")]
	public sealed class VRTK_SlingshotJump_UnityEvents : VRTK_UnityEvents<VRTK_SlingshotJump>
	{
		[Serializable]
		[Token(Token = "0x20004E3")]
		public sealed class SlingshotJumpEvent : UnityEvent<object>
		{
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x7FA088", Offset = "0x7FA088", VA = "0x7FA088")]
			public SlingshotJumpEvent()
			{
			}
		}

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlingshotJumpEvent OnSlingshotJumped;

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x7F9E8C", Offset = "0x7F9E8C", VA = "0x7F9E8C", Slot = "4")]
		protected override void AddListeners(VRTK_SlingshotJump component)
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x7F9F1C", Offset = "0x7F9F1C", VA = "0x7F9F1C", Slot = "5")]
		protected override void RemoveListeners(VRTK_SlingshotJump component)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x7F9FAC", Offset = "0x7F9FAC", VA = "0x7F9FAC")]
		private void SlingshotJumped(object o)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x7FA01C", Offset = "0x7FA01C", VA = "0x7FA01C")]
		public VRTK_SlingshotJump_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C19C", Offset = "0x64C19C")]
	public sealed class VRTK_SnapDropZone_UnityEvents : VRTK_UnityEvents<VRTK_SnapDropZone>
	{
		[Serializable]
		[Token(Token = "0x20004E4")]
		public sealed class SnapDropZoneEvent : UnityEvent<object, SnapDropZoneEventArgs>
		{
			[Token(Token = "0x600239A")]
			[Address(RVA = "0x7FA608", Offset = "0x7FA608", VA = "0x7FA608")]
			public SnapDropZoneEvent()
			{
			}
		}

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnapDropZoneEvent OnObjectEnteredSnapDropZone;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SnapDropZoneEvent OnObjectExitedSnapDropZone;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SnapDropZoneEvent OnObjectSnappedToDropZone;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SnapDropZoneEvent OnObjectUnsnappedFromDropZone;

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x7FA0D8", Offset = "0x7FA0D8", VA = "0x7FA0D8", Slot = "4")]
		protected override void AddListeners(VRTK_SnapDropZone component)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x7FA228", Offset = "0x7FA228", VA = "0x7FA228", Slot = "5")]
		protected override void RemoveListeners(VRTK_SnapDropZone component)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x7FA378", Offset = "0x7FA378", VA = "0x7FA378")]
		private void ObjectEnteredSnapDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x7FA3F0", Offset = "0x7FA3F0", VA = "0x7FA3F0")]
		private void ObjectExitedSnapDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x7FA468", Offset = "0x7FA468", VA = "0x7FA468")]
		private void ObjectSnappedToDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x7FA4E0", Offset = "0x7FA4E0", VA = "0x7FA4E0")]
		private void ObjectUnsnappedFromDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x7FA558", Offset = "0x7FA558", VA = "0x7FA558")]
		public VRTK_SnapDropZone_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C1D4", Offset = "0x64C1D4")]
	public sealed class VRTK_UIDraggableItem_UnityEvents : VRTK_UnityEvents<VRTK_UIDraggableItem>
	{
		[Serializable]
		[Token(Token = "0x20004E5")]
		public sealed class UIDraggableItemEvent : UnityEvent<object, UIDraggableItemEventArgs>
		{
			[Token(Token = "0x600239B")]
			[Address(RVA = "0x7FA970", Offset = "0x7FA970", VA = "0x7FA970")]
			public UIDraggableItemEvent()
			{
			}
		}

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIDraggableItemEvent OnDraggableItemDropped;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIDraggableItemEvent OnDraggableItemReset;

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x7FA658", Offset = "0x7FA658", VA = "0x7FA658", Slot = "4")]
		protected override void AddListeners(VRTK_UIDraggableItem component)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x7FA728", Offset = "0x7FA728", VA = "0x7FA728", Slot = "5")]
		protected override void RemoveListeners(VRTK_UIDraggableItem component)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x7FA7F8", Offset = "0x7FA7F8", VA = "0x7FA7F8")]
		private void DraggableItemDropped(object o, UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x7FA870", Offset = "0x7FA870", VA = "0x7FA870")]
		private void DraggableItemReset(object o, UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x7FA8E8", Offset = "0x7FA8E8", VA = "0x7FA8E8")]
		public VRTK_UIDraggableItem_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C20C", Offset = "0x64C20C")]
	public sealed class VRTK_UIPointer_UnityEvents : VRTK_UnityEvents<VRTK_UIPointer>
	{
		[Serializable]
		[Token(Token = "0x20004E6")]
		public sealed class UIPointerEvent : UnityEvent<object, UIPointerEventArgs>
		{
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x7FB62C", Offset = "0x7FB62C", VA = "0x7FB62C")]
			public UIPointerEvent()
			{
			}
		}

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIPointerEvent OnUIPointerElementEnter;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIPointerEvent OnUIPointerElementExit;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIPointerEvent OnUIPointerElementClick;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIPointerEvent OnUIPointerElementDragStart;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIPointerEvent OnUIPointerElementDragEnd;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonPressed;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonReleased;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonPressed;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonReleased;

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x7FA9C0", Offset = "0x7FA9C0", VA = "0x7FA9C0", Slot = "4")]
		protected override void AddListeners(VRTK_UIPointer component)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x7FAC58", Offset = "0x7FAC58", VA = "0x7FAC58", Slot = "5")]
		protected override void RemoveListeners(VRTK_UIPointer component)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x7FAEF0", Offset = "0x7FAEF0", VA = "0x7FAEF0")]
		private void UIPointerElementEnter(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x7FAFA0", Offset = "0x7FAFA0", VA = "0x7FAFA0")]
		private void UIPointerElementExit(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x7FB050", Offset = "0x7FB050", VA = "0x7FB050")]
		private void UIPointerElementClick(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x7FB100", Offset = "0x7FB100", VA = "0x7FB100")]
		private void UIPointerElementDragStart(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x7FB1B0", Offset = "0x7FB1B0", VA = "0x7FB1B0")]
		private void UIPointerElementDragEnd(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x7FB260", Offset = "0x7FB260", VA = "0x7FB260")]
		private void ActivationButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x7FB30C", Offset = "0x7FB30C", VA = "0x7FB30C")]
		private void ActivationButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x7FB3B8", Offset = "0x7FB3B8", VA = "0x7FB3B8")]
		private void SelectionButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x7FB464", Offset = "0x7FB464", VA = "0x7FB464")]
		private void SelectionButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x7FB510", Offset = "0x7FB510", VA = "0x7FB510")]
		public VRTK_UIPointer_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public abstract class VRTK_UnityEvents<T> : MonoBehaviour where T : Component
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T component;

		[Token(Token = "0x600192A")]
		protected abstract void AddListeners(T component);

		[Token(Token = "0x600192B")]
		protected abstract void RemoveListeners(T component);

		[Token(Token = "0x600192C")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600192D")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600192E")]
		protected VRTK_UnityEvents()
		{
		}
	}
}
namespace VRTK.SecondaryControllerGrabActions
{
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C244", Offset = "0x64C244")]
	public class VRTK_AxisScaleGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662710", Offset = "0x662710")]
		public float ungrabDistance;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662748", Offset = "0x662748")]
		public Vector3State lockAxis;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662780", Offset = "0x662780")]
		public bool uniformScaling;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6627B8", Offset = "0x6627B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6627B8", Offset = "0x6627B8")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x6627B8", Offset = "0x6627B8")]
		public bool lockXAxis;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x662828", Offset = "0x662828")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x662828", Offset = "0x662828")]
		public bool lockYAxis;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x662874", Offset = "0x662874")]
		[AttributeAttribute(Name = "ObsoleteInspectorAttribute", RVA = "0x662874", Offset = "0x662874")]
		public bool lockZAxis;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 initialScale;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float initalLength;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float initialScaleFactor;

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x7E4538", Offset = "0x7E4538", VA = "0x7E4538", Slot = "4")]
		public override void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x7E47A8", Offset = "0x7E47A8", VA = "0x7E47A8", Slot = "8")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x7E47BC", Offset = "0x7E47BC", VA = "0x7E47BC", Slot = "9")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x7E47EC", Offset = "0x7E47EC", VA = "0x7E47EC", Slot = "12")]
		protected virtual void ApplyScale(Vector3 newScale)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x7E495C", Offset = "0x7E495C", VA = "0x7E495C", Slot = "13")]
		protected virtual void NonUniformScale()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x7E4CAC", Offset = "0x7E4CAC", VA = "0x7E4CAC", Slot = "14")]
		protected virtual void UniformScale()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x7E4E24", Offset = "0x7E4E24", VA = "0x7E4E24", Slot = "15")]
		protected virtual float CalculateAxisScale(float centerPosition, float initialPosition, float currentPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x7E4E38", Offset = "0x7E4E38", VA = "0x7E4E38")]
		public VRTK_AxisScaleGrabAction()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public abstract class VRTK_BaseGrabAction : MonoBehaviour
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_InteractableObject grabbedObject;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_InteractGrab primaryGrabbingObject;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_InteractGrab secondaryGrabbingObject;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform primaryInitialGrabPoint;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform secondaryInitialGrabPoint;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool initialised;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		protected bool isActionable;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		protected bool isSwappable;

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x7E4790", Offset = "0x7E4790", VA = "0x7E4790", Slot = "4")]
		public virtual void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x7E4E88", Offset = "0x7E4E88", VA = "0x7E4E88", Slot = "5")]
		public virtual void ResetAction()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x7E4EA0", Offset = "0x7E4EA0", VA = "0x7E4EA0", Slot = "6")]
		public virtual bool IsActionable()
		{
			return default(bool);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x7E4EA8", Offset = "0x7E4EA8", VA = "0x7E4EA8", Slot = "7")]
		public virtual bool IsSwappable()
		{
			return default(bool);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x7E47B8", Offset = "0x7E47B8", VA = "0x7E47B8", Slot = "8")]
		public virtual void ProcessUpdate()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x7E47E8", Offset = "0x7E47E8", VA = "0x7E47E8", Slot = "9")]
		public virtual void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x7E4EB0", Offset = "0x7E4EB0", VA = "0x7E4EB0", Slot = "10")]
		public virtual void OnDropAction()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x7E4EB4", Offset = "0x7E4EB4", VA = "0x7E4EB4", Slot = "11")]
		protected virtual void CheckForceStopDistance(float ungrabDistance)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x7E4E78", Offset = "0x7E4E78", VA = "0x7E4E78")]
		protected VRTK_BaseGrabAction()
		{
		}
	}
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C27C", Offset = "0x64C27C")]
	public class VRTK_ControlDirectionGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DAD0", Offset = "0x64DAD0")]
		private sealed class <RealignOnRelease>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControlDirectionGrabAction <>4__this;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170002CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023A0")]
				[Address(RVA = "0x7E5DCC", Offset = "0x7E5DCC", VA = "0x7E5DCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023A2")]
				[Address(RVA = "0x7E5E3C", Offset = "0x7E5E3C", VA = "0x7E5E3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600239D")]
			[Address(RVA = "0x7E52C4", Offset = "0x7E52C4", VA = "0x7E52C4")]
			[DebuggerHidden]
			public <RealignOnRelease>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600239E")]
			[Address(RVA = "0x7E5B24", Offset = "0x7E5B24", VA = "0x7E5B24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600239F")]
			[Address(RVA = "0x7E5B28", Offset = "0x7E5B28", VA = "0x7E5B28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023A1")]
			[Address(RVA = "0x7E5DD4", Offset = "0x7E5DD4", VA = "0x7E5DD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6628C0", Offset = "0x6628C0")]
		public float ungrabDistance;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6628F8", Offset = "0x6628F8")]
		public float releaseSnapSpeed;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662930", Offset = "0x662930")]
		public bool lockZRotation;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 initialPosition;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Quaternion releaseRotation;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Coroutine snappingOnRelease;

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x7E500C", Offset = "0x7E500C", VA = "0x7E500C", Slot = "4")]
		public override void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x7E50C4", Offset = "0x7E50C4", VA = "0x7E50C4", Slot = "5")]
		public override void ResetAction()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x7E51E4", Offset = "0x7E51E4", VA = "0x7E51E4", Slot = "10")]
		public override void OnDropAction()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x7E51F0", Offset = "0x7E51F0", VA = "0x7E51F0", Slot = "8")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x7E5200", Offset = "0x7E5200", VA = "0x7E5200", Slot = "9")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x7E521C", Offset = "0x7E521C", VA = "0x7E521C", Slot = "12")]
		protected virtual void StopRealignOnRelease()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x7E5250", Offset = "0x7E5250", VA = "0x7E5250", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x670128", Offset = "0x670128")]
		protected virtual IEnumerator RealignOnRelease()
		{
			return null;
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x7E52F0", Offset = "0x7E52F0", VA = "0x7E52F0", Slot = "14")]
		protected virtual void AimObject()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x7E5664", Offset = "0x7E5664", VA = "0x7E5664", Slot = "15")]
		protected virtual void ZLockedAim()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x7E5B00", Offset = "0x7E5B00", VA = "0x7E5B00")]
		public VRTK_ControlDirectionGrabAction()
		{
		}
	}
	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C2B4", Offset = "0x64C2B4")]
	public class VRTK_SwapControllerGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x600194A")]
		[Address(RVA = "0x7E5E44", Offset = "0x7E5E44", VA = "0x7E5E44", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x7E5E50", Offset = "0x7E5E50", VA = "0x7E5E50")]
		public VRTK_SwapControllerGrabAction()
		{
		}
	}
}
namespace VRTK.GrabAttachMechanics
{
	[Token(Token = "0x2000242")]
	public abstract class VRTK_BaseGrabAttach : MonoBehaviour
	{
		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662968", Offset = "0x662968")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662968", Offset = "0x662968")]
		public bool precisionGrab;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6629D8", Offset = "0x6629D8")]
		public Transform rightSnapHandle;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662A10", Offset = "0x662A10")]
		public Transform leftSnapHandle;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662A48", Offset = "0x662A48")]
		public bool throwVelocityWithAttachDistance;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662A80", Offset = "0x662A80")]
		public float throwMultiplier;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662AB8", Offset = "0x662AB8")]
		public float onGrabCollisionDelay;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected bool tracked;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		protected bool climbable;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		protected bool kinematic;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject grabbedObject;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody grabbedObjectRigidBody;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_InteractableObject grabbedObjectScript;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform trackPoint;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform grabbedSnapHandle;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform initialAttachPoint;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Rigidbody controllerAttachPoint;

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x103B710", Offset = "0x103B710", VA = "0x103B710", Slot = "4")]
		public virtual bool IsTracked()
		{
			return default(bool);
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x103B718", Offset = "0x103B718", VA = "0x103B718", Slot = "5")]
		public virtual bool IsClimbable()
		{
			return default(bool);
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x103B720", Offset = "0x103B720", VA = "0x103B720", Slot = "6")]
		public virtual bool IsKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x103B728", Offset = "0x103B728", VA = "0x103B728", Slot = "7")]
		public virtual bool ValidGrab(Rigidbody checkAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x103B730", Offset = "0x103B730", VA = "0x103B730", Slot = "8")]
		public virtual void SetTrackPoint(Transform givenTrackPoint)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x103B738", Offset = "0x103B738", VA = "0x103B738", Slot = "9")]
		public virtual void SetInitialAttachPoint(Transform givenInitialAttachPoint)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x103B740", Offset = "0x103B740", VA = "0x103B740", Slot = "10")]
		public virtual bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x103B8C8", Offset = "0x103B8C8", VA = "0x103B8C8", Slot = "11")]
		public virtual void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x103B8DC", Offset = "0x103B8DC", VA = "0x103B8DC", Slot = "12")]
		public virtual Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x103B8E8", Offset = "0x103B8E8", VA = "0x103B8E8", Slot = "13")]
		public virtual void ProcessUpdate()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x103B8EC", Offset = "0x103B8EC", VA = "0x103B8EC", Slot = "14")]
		public virtual void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x103B8F0", Offset = "0x103B8F0", VA = "0x103B8F0", Slot = "15")]
		public virtual void ResetState()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x103B900", Offset = "0x103B900", VA = "0x103B900", Slot = "16")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001959")]
		protected abstract void Initialise();

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x103B910", Offset = "0x103B910", VA = "0x103B910", Slot = "18")]
		protected virtual Rigidbody ReleaseFromController(bool applyGrabbingObjectVelocity)
		{
			return null;
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x103B918", Offset = "0x103B918", VA = "0x103B918", Slot = "19")]
		protected virtual void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x103BA6C", Offset = "0x103BA6C", VA = "0x103BA6C", Slot = "20")]
		protected virtual void ReleaseObject(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x103BB34", Offset = "0x103BB34", VA = "0x103BB34", Slot = "21")]
		protected virtual void ThrowReleasedObject(Rigidbody objectRigidbody)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x103C19C", Offset = "0x103C19C", VA = "0x103C19C", Slot = "22")]
		protected virtual Transform GetSnapHandle(GameObject grabbingObject)
		{
			return null;
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x103C338", Offset = "0x103C338", VA = "0x103C338", Slot = "23")]
		protected virtual void ProcessSDKTransformModify(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x103C49C", Offset = "0x103C49C", VA = "0x103C49C")]
		protected VRTK_BaseGrabAttach()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public abstract class VRTK_BaseJointGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662AF0", Offset = "0x662AF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662AF0", Offset = "0x662AF0")]
		public bool destroyImmediatelyOnThrow;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Joint givenJoint;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Joint controllerAttachJoint;

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x103C4AC", Offset = "0x103C4AC", VA = "0x103C4AC", Slot = "7")]
		public override bool ValidGrab(Rigidbody checkAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x103C58C", Offset = "0x103C58C", VA = "0x103C58C", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x103C5D8", Offset = "0x103C5D8", VA = "0x103C5D8", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x103C618", Offset = "0x103C618", VA = "0x103C618", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x103C628", Offset = "0x103C628", VA = "0x103C628", Slot = "18")]
		protected override Rigidbody ReleaseFromController(bool applyGrabbingObjectVelocity)
		{
			return null;
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x103C6FC", Offset = "0x103C6FC", VA = "0x103C6FC", Slot = "24")]
		protected virtual void OnJointBreak(float force)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x103C70C", Offset = "0x103C70C", VA = "0x103C70C", Slot = "25")]
		protected virtual void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x103C898", Offset = "0x103C898", VA = "0x103C898", Slot = "26")]
		protected virtual void DestroyJoint(bool withDestroyImmediate, bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x103C964", Offset = "0x103C964", VA = "0x103C964", Slot = "27")]
		protected virtual void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x103CCC8", Offset = "0x103CCC8", VA = "0x103CCC8", Slot = "28")]
		protected virtual void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x103CD1C", Offset = "0x103CD1C", VA = "0x103CD1C")]
		protected VRTK_BaseJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C2EC", Offset = "0x64C2EC")]
	public class VRTK_ChildOfControllerGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x600196C")]
		[Address(RVA = "0x103CD34", Offset = "0x103CD34", VA = "0x103CD34", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x103CDA4", Offset = "0x103CDA4", VA = "0x103CDA4", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x103CDE4", Offset = "0x103CDE4", VA = "0x103CDE4", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x103CDF4", Offset = "0x103CDF4", VA = "0x103CDF4", Slot = "24")]
		protected virtual void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x103D158", Offset = "0x103D158", VA = "0x103D158", Slot = "25")]
		protected virtual void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x103D1F4", Offset = "0x103D1F4", VA = "0x103D1F4")]
		public VRTK_ChildOfControllerGrabAttach()
		{
		}
	}
	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C324", Offset = "0x64C324")]
	public class VRTK_ClimbableGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662B60", Offset = "0x662B60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662B60", Offset = "0x662B60")]
		public bool useObjectRotation;

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x103D204", Offset = "0x103D204", VA = "0x103D204", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x103D218", Offset = "0x103D218", VA = "0x103D218")]
		public VRTK_ClimbableGrabAttach()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public struct ControlAnimationGrabAttachEventArgs
	{
		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float currentFrame;
	}
	[Token(Token = "0x2000247")]
	public delegate void ControlAnimationGrabAttachEventHandler(object sender, ControlAnimationGrabAttachEventArgs e);
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C35C", Offset = "0x64C35C")]
	public class VRTK_ControlAnimationGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x20004E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DAE0", Offset = "0x64DAE0")]
		private sealed class <ResetTimeline>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControlAnimationGrabAttach <>4__this;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float frame;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023A6")]
				[Address(RVA = "0x103E900", Offset = "0x103E900", VA = "0x103E900", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023A8")]
				[Address(RVA = "0x103E970", Offset = "0x103E970", VA = "0x103E970", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x103E6A8", Offset = "0x103E6A8", VA = "0x103E6A8")]
			[DebuggerHidden]
			public <ResetTimeline>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60023A4")]
			[Address(RVA = "0x103E7F4", Offset = "0x103E7F4", VA = "0x103E7F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x103E7F8", Offset = "0x103E7F8", VA = "0x103E7F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x103E908", Offset = "0x103E908", VA = "0x103E908", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662BD0", Offset = "0x662BD0")]
		public float detachDistance;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662C08", Offset = "0x662C08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662C08", Offset = "0x662C08")]
		public Animation animationTimeline;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662C78", Offset = "0x662C78")]
		public Animator animatorTimeline;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662CB0", Offset = "0x662CB0")]
		public float maxFrames;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662CE8", Offset = "0x662CE8")]
		public float distanceMultiplier;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662D20", Offset = "0x662D20")]
		public bool rewindOnRelease;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662D58", Offset = "0x662D58")]
		public float rewindSpeedMultplier;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected float animationSpeed;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected float frameOffset;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float currentFrame;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Coroutine resetTimelineRoutine;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool atEnd;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected string animationName;

		[Token(Token = "0x140000E9")]
		public event ControlAnimationGrabAttachEventHandler AnimationFrameAtStart
		{
			[Token(Token = "0x6001978")]
			[Address(RVA = "0x103D228", Offset = "0x103D228", VA = "0x103D228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67018C", Offset = "0x67018C")]
			add
			{
			}
			[Token(Token = "0x6001979")]
			[Address(RVA = "0x103D314", Offset = "0x103D314", VA = "0x103D314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67019C", Offset = "0x67019C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EA")]
		public event ControlAnimationGrabAttachEventHandler AnimationFrameAtEnd
		{
			[Token(Token = "0x600197A")]
			[Address(RVA = "0x103D400", Offset = "0x103D400", VA = "0x103D400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6701AC", Offset = "0x6701AC")]
			add
			{
			}
			[Token(Token = "0x600197B")]
			[Address(RVA = "0x103D4EC", Offset = "0x103D4EC", VA = "0x103D4EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6701BC", Offset = "0x6701BC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EB")]
		public event ControlAnimationGrabAttachEventHandler AnimationFrameChanged
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0x103D5D8", Offset = "0x103D5D8", VA = "0x103D5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6701CC", Offset = "0x6701CC")]
			add
			{
			}
			[Token(Token = "0x600197D")]
			[Address(RVA = "0x103D6C4", Offset = "0x103D6C4", VA = "0x103D6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6701DC", Offset = "0x6701DC")]
			remove
			{
			}
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x103D7B0", Offset = "0x103D7B0", VA = "0x103D7B0", Slot = "24")]
		public virtual void OnAnimationFrameChanged(ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x103D7D8", Offset = "0x103D7D8", VA = "0x103D7D8", Slot = "25")]
		public virtual void OnAnimationFrameAtStart(ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x103D800", Offset = "0x103D800", VA = "0x103D800", Slot = "26")]
		public virtual void OnAnimationFrameAtEnd(ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x103D828", Offset = "0x103D828", VA = "0x103D828", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x103D880", Offset = "0x103D880", VA = "0x103D880", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x103D8B4", Offset = "0x103D8B4", VA = "0x103D8B4", Slot = "12")]
		public override Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x103DB38", Offset = "0x103DB38", VA = "0x103DB38", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x103DD94", Offset = "0x103DD94", VA = "0x103DD94", Slot = "27")]
		public virtual void SetFrame(float frame)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x103DED8", Offset = "0x103DED8", VA = "0x103DED8", Slot = "28")]
		public virtual void RewindAnimation()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x103DF30", Offset = "0x103DF30", VA = "0x103DF30", Slot = "29")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x103DF40", Offset = "0x103DF40", VA = "0x103DF40", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x103DF5C", Offset = "0x103DF5C", VA = "0x103DF5C", Slot = "30")]
		protected virtual void InitTimeline()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x103E358", Offset = "0x103E358", VA = "0x103E358", Slot = "31")]
		protected virtual void SetTimelineSpeed(float speed)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x103E494", Offset = "0x103E494", VA = "0x103E494", Slot = "32")]
		protected virtual void SetTimelinePosition(float framePosition)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x103E5FC", Offset = "0x103E5FC", VA = "0x103E5FC", Slot = "33")]
		protected virtual void CancelResetTimeline()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x103E610", Offset = "0x103E610", VA = "0x103E610", Slot = "34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6701EC", Offset = "0x6701EC")]
		protected virtual IEnumerator ResetTimeline(float frame)
		{
			return null;
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x103E6D4", Offset = "0x103E6D4", VA = "0x103E6D4", Slot = "35")]
		protected virtual ControlAnimationGrabAttachEventArgs SetEventPayload(float frame)
		{
			return default(ControlAnimationGrabAttachEventArgs);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x103E788", Offset = "0x103E788", VA = "0x103E788")]
		public VRTK_ControlAnimationGrabAttach()
		{
		}
	}
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C394", Offset = "0x64C394")]
	public class VRTK_CustomJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662DC0", Offset = "0x662DC0")]
		public Joint customJoint;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject jointHolder;

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x103E978", Offset = "0x103E978", VA = "0x103E978", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x103E994", Offset = "0x103E994", VA = "0x103E994", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x103ECE8", Offset = "0x103ECE8", VA = "0x103ECE8", Slot = "26")]
		protected override void DestroyJoint(bool withDestroyImmediate, bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x103ECF4", Offset = "0x103ECF4", VA = "0x103ECF4", Slot = "29")]
		protected virtual void CopyCustomJoint()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x103EF48", Offset = "0x103EF48", VA = "0x103EF48")]
		public VRTK_CustomJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C3CC", Offset = "0x64C3CC")]
	public class VRTK_FixedJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662DF8", Offset = "0x662DF8")]
		public float breakForce;

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x103EF60", Offset = "0x103EF60", VA = "0x103EF60", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x103F03C", Offset = "0x103F03C", VA = "0x103F03C")]
		public VRTK_FixedJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public struct MoveTransformGrabAttachEventArgs
	{
		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 normalizedPosition;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 currentDirection;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 originDirection;
	}
	[Token(Token = "0x200024C")]
	public delegate void MoveTransformGrabAttachEventHandler(object sender, MoveTransformGrabAttachEventArgs e);
	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C404", Offset = "0x64C404")]
	public class VRTK_MoveTransformGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x20004E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DAF0", Offset = "0x64DAF0")]
		private sealed class <MoveToPosition>d__93 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_MoveTransformGrabAttach <>4__this;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetPosition;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float speed;

			[Token(Token = "0x170002CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023AC")]
				[Address(RVA = "0x1043090", Offset = "0x1043090", VA = "0x1043090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023AE")]
				[Address(RVA = "0x1043100", Offset = "0x1043100", VA = "0x1043100", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x1041E48", Offset = "0x1041E48", VA = "0x1041E48")]
			[DebuggerHidden]
			public <MoveToPosition>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x60023AA")]
			[Address(RVA = "0x1042E68", Offset = "0x1042E68", VA = "0x1042E68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x1042E6C", Offset = "0x1042E6C", VA = "0x1042E6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023AD")]
			[Address(RVA = "0x1043098", Offset = "0x1043098", VA = "0x1043098", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB00", Offset = "0x64DB00")]
		private sealed class <DeceleratePosition>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_MoveTransformGrabAttach <>4__this;

			[Token(Token = "0x170002D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023B2")]
				[Address(RVA = "0x1042DF0", Offset = "0x1042DF0", VA = "0x1042DF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023B4")]
				[Address(RVA = "0x1042E60", Offset = "0x1042E60", VA = "0x1042E60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023AF")]
			[Address(RVA = "0x1041EE8", Offset = "0x1041EE8", VA = "0x1041EE8")]
			[DebuggerHidden]
			public <DeceleratePosition>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x60023B0")]
			[Address(RVA = "0x1042C2C", Offset = "0x1042C2C", VA = "0x1042C2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B1")]
			[Address(RVA = "0x1042C30", Offset = "0x1042C30", VA = "0x1042C30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B3")]
			[Address(RVA = "0x1042DF8", Offset = "0x1042DF8", VA = "0x1042DF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662E30", Offset = "0x662E30")]
		public float detachDistance;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662E68", Offset = "0x662E68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662E68", Offset = "0x662E68")]
		public float trackingSpeed;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662EC8", Offset = "0x662EC8")]
		public bool forceKinematicOnGrab;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662F00", Offset = "0x662F00")]
		public float releaseDecelerationDamper;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662F38", Offset = "0x662F38")]
		public float resetToOrignOnReleaseSpeed;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662F70", Offset = "0x662F70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662F70", Offset = "0x662F70")]
		public Limits2D xAxisLimits;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662FD0", Offset = "0x662FD0")]
		public Limits2D yAxisLimits;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663008", Offset = "0x663008")]
		public Limits2D zAxisLimits;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663040", Offset = "0x663040")]
		public float minMaxThreshold;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663078", Offset = "0x663078")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x663078", Offset = "0x663078")]
		public float minMaxNormalizedThreshold;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x6630D0", Offset = "0x6630D0")]
		public Vector3 localOrigin;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected bool previousKinematicState;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected bool[] limitsReached;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Limits2D xOriginLimits;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected Limits2D yOriginLimits;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected Limits2D zOriginLimits;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected Vector3 previousPosition;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		protected Vector3 movementVelocity;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected Coroutine resetPositionRoutine;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected Coroutine deceleratePositionRoutine;

		[Token(Token = "0x140000EC")]
		public event MoveTransformGrabAttachEventHandler TransformPositionChanged
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x102D560", Offset = "0x102D560", VA = "0x102D560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670250", Offset = "0x670250")]
			add
			{
			}
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x102D64C", Offset = "0x102D64C", VA = "0x102D64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670260", Offset = "0x670260")]
			remove
			{
			}
		}

		[Token(Token = "0x140000ED")]
		public event MoveTransformGrabAttachEventHandler XAxisMinLimitReached
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x103F060", Offset = "0x103F060", VA = "0x103F060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670270", Offset = "0x670270")]
			add
			{
			}
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x103F14C", Offset = "0x103F14C", VA = "0x103F14C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670280", Offset = "0x670280")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EE")]
		public event MoveTransformGrabAttachEventHandler XAxisMinLimitExited
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x103F238", Offset = "0x103F238", VA = "0x103F238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670290", Offset = "0x670290")]
			add
			{
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x103F324", Offset = "0x103F324", VA = "0x103F324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6702A0", Offset = "0x6702A0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EF")]
		public event MoveTransformGrabAttachEventHandler XAxisMaxLimitReached
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x103F410", Offset = "0x103F410", VA = "0x103F410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6702B0", Offset = "0x6702B0")]
			add
			{
			}
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x103F4FC", Offset = "0x103F4FC", VA = "0x103F4FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6702C0", Offset = "0x6702C0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F0")]
		public event MoveTransformGrabAttachEventHandler XAxisMaxLimitExited
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x103F5E8", Offset = "0x103F5E8", VA = "0x103F5E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6702D0", Offset = "0x6702D0")]
			add
			{
			}
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x103F6D4", Offset = "0x103F6D4", VA = "0x103F6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6702E0", Offset = "0x6702E0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F1")]
		public event MoveTransformGrabAttachEventHandler YAxisMinLimitReached
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x103F7C0", Offset = "0x103F7C0", VA = "0x103F7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6702F0", Offset = "0x6702F0")]
			add
			{
			}
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x103F8AC", Offset = "0x103F8AC", VA = "0x103F8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670300", Offset = "0x670300")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F2")]
		public event MoveTransformGrabAttachEventHandler YAxisMinLimitExited
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x103F998", Offset = "0x103F998", VA = "0x103F998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670310", Offset = "0x670310")]
			add
			{
			}
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x103FA84", Offset = "0x103FA84", VA = "0x103FA84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670320", Offset = "0x670320")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F3")]
		public event MoveTransformGrabAttachEventHandler YAxisMaxLimitReached
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x103FB70", Offset = "0x103FB70", VA = "0x103FB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670330", Offset = "0x670330")]
			add
			{
			}
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x103FC5C", Offset = "0x103FC5C", VA = "0x103FC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670340", Offset = "0x670340")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F4")]
		public event MoveTransformGrabAttachEventHandler YAxisMaxLimitExited
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x103FD48", Offset = "0x103FD48", VA = "0x103FD48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670350", Offset = "0x670350")]
			add
			{
			}
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x103FE38", Offset = "0x103FE38", VA = "0x103FE38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670360", Offset = "0x670360")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F5")]
		public event MoveTransformGrabAttachEventHandler ZAxisMinLimitReached
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0x103FF28", Offset = "0x103FF28", VA = "0x103FF28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670370", Offset = "0x670370")]
			add
			{
			}
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0x1040018", Offset = "0x1040018", VA = "0x1040018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670380", Offset = "0x670380")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F6")]
		public event MoveTransformGrabAttachEventHandler ZAxisMinLimitExited
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0x1040108", Offset = "0x1040108", VA = "0x1040108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670390", Offset = "0x670390")]
			add
			{
			}
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0x10401F8", Offset = "0x10401F8", VA = "0x10401F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6703A0", Offset = "0x6703A0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F7")]
		public event MoveTransformGrabAttachEventHandler ZAxisMaxLimitReached
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x10402E8", Offset = "0x10402E8", VA = "0x10402E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6703B0", Offset = "0x6703B0")]
			add
			{
			}
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x10403D8", Offset = "0x10403D8", VA = "0x10403D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6703C0", Offset = "0x6703C0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F8")]
		public event MoveTransformGrabAttachEventHandler ZAxisMaxLimitExited
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0x10404C8", Offset = "0x10404C8", VA = "0x10404C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6703D0", Offset = "0x6703D0")]
			add
			{
			}
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x10405B8", Offset = "0x10405B8", VA = "0x10405B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6703E0", Offset = "0x6703E0")]
			remove
			{
			}
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x10406A8", Offset = "0x10406A8", VA = "0x10406A8", Slot = "24")]
		public virtual void OnTransformPositionChanged(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x10406F8", Offset = "0x10406F8", VA = "0x10406F8", Slot = "25")]
		public virtual void OnXAxisMinLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x1040748", Offset = "0x1040748", VA = "0x1040748", Slot = "26")]
		public virtual void OnXAxisMinLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x1040798", Offset = "0x1040798", VA = "0x1040798", Slot = "27")]
		public virtual void OnXAxisMaxLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x10407E8", Offset = "0x10407E8", VA = "0x10407E8", Slot = "28")]
		public virtual void OnXAxisMaxLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x1040838", Offset = "0x1040838", VA = "0x1040838", Slot = "29")]
		public virtual void OnYAxisMinLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x1040888", Offset = "0x1040888", VA = "0x1040888", Slot = "30")]
		public virtual void OnYAxisMinLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x10408D8", Offset = "0x10408D8", VA = "0x10408D8", Slot = "31")]
		public virtual void OnYAxisMaxLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x1040928", Offset = "0x1040928", VA = "0x1040928", Slot = "32")]
		public virtual void OnYAxisMaxLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x1040978", Offset = "0x1040978", VA = "0x1040978", Slot = "33")]
		public virtual void OnZAxisMinLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x10409C8", Offset = "0x10409C8", VA = "0x10409C8", Slot = "34")]
		public virtual void OnZAxisMinLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x1040A18", Offset = "0x1040A18", VA = "0x1040A18", Slot = "35")]
		public virtual void OnZAxisMaxLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x1040A68", Offset = "0x1040A68", VA = "0x1040A68", Slot = "36")]
		public virtual void OnZAxisMaxLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x1040AB8", Offset = "0x1040AB8", VA = "0x1040AB8", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x1040C04", Offset = "0x1040C04", VA = "0x1040C04", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x1040D30", Offset = "0x1040D30", VA = "0x1040D30", Slot = "12")]
		public override Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x1040EC4", Offset = "0x1040EC4", VA = "0x1040EC4", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x104132C", Offset = "0x104132C", VA = "0x104132C", Slot = "37")]
		public virtual Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x1041398", Offset = "0x1041398", VA = "0x1041398", Slot = "38")]
		public virtual Vector3 GetNormalizedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x10413D4", Offset = "0x10413D4", VA = "0x10413D4", Slot = "39")]
		public virtual Vector3 GetCurrentDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x1041444", Offset = "0x1041444", VA = "0x1041444", Slot = "40")]
		public virtual Vector3 GetDirectionFromOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x10414B0", Offset = "0x10414B0", VA = "0x10414B0", Slot = "41")]
		public virtual void SetCurrentPosition(Vector3 newPosition, float speed)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x1041574", Offset = "0x1041574", VA = "0x1041574", Slot = "42")]
		public virtual void ResetPosition()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x1041590", Offset = "0x1041590", VA = "0x1041590", Slot = "43")]
		public virtual Limits2D[] GetWorldLimits()
		{
			return null;
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x10416E4", Offset = "0x10416E4", VA = "0x10416E4", Slot = "44")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x10416F4", Offset = "0x10416F4", VA = "0x10416F4", Slot = "45")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x1041730", Offset = "0x1041730", VA = "0x1041730", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x104174C", Offset = "0x104174C", VA = "0x104174C", Slot = "46")]
		protected virtual void SetupOrigin()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x10418F0", Offset = "0x10418F0", VA = "0x10418F0", Slot = "47")]
		protected virtual float ClampAxis(Limits2D limits, float axisValue)
		{
			return default(float);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x10419AC", Offset = "0x10419AC", VA = "0x10419AC", Slot = "48")]
		protected virtual void ClampPosition()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1041AFC", Offset = "0x1041AFC", VA = "0x1041AFC", Slot = "49")]
		protected virtual Vector3 NormalizePosition(Vector3 givenHeading)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1041C10", Offset = "0x1041C10", VA = "0x1041C10", Slot = "50")]
		protected virtual void CancelResetPosition()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x1041C24", Offset = "0x1041C24", VA = "0x1041C24", Slot = "51")]
		protected virtual void CancelDeceleratePosition()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x1041C38", Offset = "0x1041C38", VA = "0x1041C38", Slot = "52")]
		protected virtual void UpdatePosition(Vector3 newPosition, bool additive, bool forceClamp = true)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1041D88", Offset = "0x1041D88", VA = "0x1041D88", Slot = "53")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6703F0", Offset = "0x6703F0")]
		protected virtual IEnumerator MoveToPosition(Vector3 targetPosition, float speed)
		{
			return null;
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x1041E74", Offset = "0x1041E74", VA = "0x1041E74", Slot = "54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x670454", Offset = "0x670454")]
		protected virtual IEnumerator DeceleratePosition()
		{
			return null;
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x1041F14", Offset = "0x1041F14", VA = "0x1041F14", Slot = "55")]
		protected virtual void CheckAxisLimits()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x1041F80", Offset = "0x1041F80", VA = "0x1041F80", Slot = "56")]
		protected virtual Limits2D FixAxisLimits(Limits2D givenLimits)
		{
			return null;
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x1042038", Offset = "0x1042038", VA = "0x1042038", Slot = "57")]
		protected virtual void EmitEvents()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x1042A10", Offset = "0x1042A10", VA = "0x1042A10", Slot = "58")]
		protected virtual MoveTransformGrabAttachEventArgs SetEventPayload()
		{
			return default(MoveTransformGrabAttachEventArgs);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x1042B74", Offset = "0x1042B74", VA = "0x1042B74")]
		public VRTK_MoveTransformGrabAttach()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public struct RotateTransformGrabAttachEventArgs
	{
		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float currentAngle;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float normalizedAngle;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 rotationSpeed;
	}
	[Token(Token = "0x200024F")]
	public delegate void RotateTransformGrabAttachEventHandler(object sender, RotateTransformGrabAttachEventArgs e);
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C43C", Offset = "0x64C43C")]
	public class VRTK_RotateTransformGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x20004EB")]
		public enum RotationAxis
		{
			[Token(Token = "0x400215F")]
			xAxis,
			[Token(Token = "0x4002160")]
			yAxis,
			[Token(Token = "0x4002161")]
			zAxis
		}

		[Token(Token = "0x20004EC")]
		public enum RotationType
		{
			[Token(Token = "0x4002163")]
			FollowAttachPoint,
			[Token(Token = "0x4002164")]
			FollowLongitudinalAxis,
			[Token(Token = "0x4002165")]
			FollowLateralAxis,
			[Token(Token = "0x4002166")]
			FollowPerpendicularAxis
		}

		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB10", Offset = "0x64DB10")]
		private sealed class <RotateToAngle>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_RotateTransformGrabAttach <>4__this;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetAngle;

			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float rotationSpeed;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <previousRotation>5__2;

			[Token(Token = "0x170002D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023B8")]
				[Address(RVA = "0xB3DA20", Offset = "0xB3DA20", VA = "0xB3DA20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023BA")]
				[Address(RVA = "0xB3DA90", Offset = "0xB3DA90", VA = "0xB3DA90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xB3D7C0", Offset = "0xB3D7C0", VA = "0xB3D7C0")]
			[DebuggerHidden]
			public <RotateToAngle>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xB3D7EC", Offset = "0xB3D7EC", VA = "0xB3D7EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xB3D7F0", Offset = "0xB3D7F0", VA = "0xB3D7F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B9")]
			[Address(RVA = "0xB3DA28", Offset = "0xB3DA28", VA = "0xB3DA28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB20", Offset = "0x64DB20")]
		private sealed class <DecelerateRotation>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_RotateTransformGrabAttach <>4__this;

			[Token(Token = "0x170002D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023BE")]
				[Address(RVA = "0xB3D748", Offset = "0xB3D748", VA = "0xB3D748", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023C0")]
				[Address(RVA = "0xB3D7B8", Offset = "0xB3D7B8", VA = "0xB3D7B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0xB3D58C", Offset = "0xB3D58C", VA = "0xB3D58C")]
			[DebuggerHidden]
			public <DecelerateRotation>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x60023BC")]
			[Address(RVA = "0xB3D5B8", Offset = "0xB3D5B8", VA = "0xB3D5B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0xB3D5BC", Offset = "0xB3D5BC", VA = "0xB3D5BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0xB3D750", Offset = "0xB3D750", VA = "0xB3D750", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6631B0", Offset = "0x6631B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6631B0", Offset = "0x6631B0")]
		public float detachDistance;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663210", Offset = "0x663210")]
		public float originDeadzone;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663248", Offset = "0x663248")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663248", Offset = "0x663248")]
		public RotationAxis rotateAround;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6632A8", Offset = "0x6632A8")]
		public RotationType rotationAction;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6632E0", Offset = "0x6632E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6632E0", Offset = "0x6632E0")]
		public float rotationFriction;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663338", Offset = "0x663338")]
		public float releaseDecelerationDamper;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663370", Offset = "0x663370")]
		public float resetToOrignOnReleaseSpeed;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6633A8", Offset = "0x6633A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6633A8", Offset = "0x6633A8")]
		public Limits2D angleLimits;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663408", Offset = "0x663408")]
		public float minMaxThreshold;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663440", Offset = "0x663440")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x663440", Offset = "0x663440")]
		public float minMaxNormalizedThreshold;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x663498", Offset = "0x663498")]
		public Quaternion originRotation;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Vector3 previousAttachPointPosition;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected Vector3 currentRotation;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Bounds grabbedObjectBounds;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected Vector3 currentRotationSpeed;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Coroutine updateRotationRoutine;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Coroutine decelerateRotationRoutine;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected bool[] limitsReached;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected VRTK_ControllerReference grabbingObjectReference;

		[Token(Token = "0x140000F9")]
		public event RotateTransformGrabAttachEventHandler AngleChanged
		{
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x102B278", Offset = "0x102B278", VA = "0x102B278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6704B8", Offset = "0x6704B8")]
			add
			{
			}
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0x102B364", Offset = "0x102B364", VA = "0x102B364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6704C8", Offset = "0x6704C8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FA")]
		public event RotateTransformGrabAttachEventHandler MinAngleReached
		{
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0x1043108", Offset = "0x1043108", VA = "0x1043108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6704D8", Offset = "0x6704D8")]
			add
			{
			}
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x10431F4", Offset = "0x10431F4", VA = "0x10431F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6704E8", Offset = "0x6704E8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FB")]
		public event RotateTransformGrabAttachEventHandler MinAngleExited
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x10432E0", Offset = "0x10432E0", VA = "0x10432E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6704F8", Offset = "0x6704F8")]
			add
			{
			}
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x10433CC", Offset = "0x10433CC", VA = "0x10433CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670508", Offset = "0x670508")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FC")]
		public event RotateTransformGrabAttachEventHandler MaxAngleReached
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x10434B8", Offset = "0x10434B8", VA = "0x10434B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670518", Offset = "0x670518")]
			add
			{
			}
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x10435A4", Offset = "0x10435A4", VA = "0x10435A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670528", Offset = "0x670528")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FD")]
		public event RotateTransformGrabAttachEventHandler MaxAngleExited
		{
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x1043690", Offset = "0x1043690", VA = "0x1043690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670538", Offset = "0x670538")]
			add
			{
			}
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x104377C", Offset = "0x104377C", VA = "0x104377C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670548", Offset = "0x670548")]
			remove
			{
			}
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x1043868", Offset = "0x1043868", VA = "0x1043868", Slot = "24")]
		public virtual void OnAngleChanged(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x10438A8", Offset = "0x10438A8", VA = "0x10438A8", Slot = "25")]
		public virtual void OnMinAngleReached(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x10438E8", Offset = "0x10438E8", VA = "0x10438E8", Slot = "26")]
		public virtual void OnMinAngleExited(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1043928", Offset = "0x1043928", VA = "0x1043928", Slot = "27")]
		public virtual void OnMaxAngleReached(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x1043968", Offset = "0x1043968", VA = "0x1043968", Slot = "28")]
		public virtual void OnMaxAngleExited(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x10439A8", Offset = "0x10439A8", VA = "0x10439A8", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x1043B28", Offset = "0x1043B28", VA = "0x1043B28", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x1043BC8", Offset = "0x1043BC8", VA = "0x1043BC8", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x1043E24", Offset = "0x1043E24", VA = "0x1043E24", Slot = "29")]
		public virtual void SetRotation(float newAngle, float transitionTime = 0f)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x1043FEC", Offset = "0x1043FEC", VA = "0x1043FEC", Slot = "30")]
		public virtual void ResetRotation(bool ignoreTransition = false)
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x1044134", Offset = "0x1044134", VA = "0x1044134", Slot = "31")]
		public virtual float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x104416C", Offset = "0x104416C", VA = "0x104416C", Slot = "32")]
		public virtual float GetNormalizedAngle()
		{
			return default(float);
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x104423C", Offset = "0x104423C", VA = "0x104423C", Slot = "33")]
		public virtual Vector3 GetRotationSpeed()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x104424C", Offset = "0x104424C", VA = "0x104424C", Slot = "34")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x1044288", Offset = "0x1044288", VA = "0x1044288", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1044334", Offset = "0x1044334", VA = "0x1044334", Slot = "35")]
		protected virtual Vector3 GetNewRotation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x10445DC", Offset = "0x10445DC", VA = "0x10445DC", Slot = "36")]
		protected virtual Vector3 BuildFollowAxisVector(float givenAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x1044634", Offset = "0x1044634", VA = "0x1044634", Slot = "37")]
		protected virtual Vector3 CalculateAngle(Vector3 originPoint, Vector3 originalGrabPoint, Vector3 currentGrabPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x1044834", Offset = "0x1044834", VA = "0x1044834", Slot = "38")]
		protected virtual float CalculateAngle(Vector3 originPoint, Vector3 previousPoint, Vector3 currentPoint, Vector3 direction)
		{
			return default(float);
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x1044984", Offset = "0x1044984", VA = "0x1044984", Slot = "39")]
		protected virtual void UpdateRotation(Vector3 newRotation, bool additive, bool updateCurrentRotation)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x1044BF0", Offset = "0x1044BF0", VA = "0x1044BF0", Slot = "40")]
		protected virtual bool WithinRotationLimit(Vector3 rotationCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x1044CA8", Offset = "0x1044CA8", VA = "0x1044CA8", Slot = "41")]
		protected virtual float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x1044DFC", Offset = "0x1044DFC", VA = "0x1044DFC", Slot = "42")]
		protected virtual bool StillTouching()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x1044F64", Offset = "0x1044F64", VA = "0x1044F64", Slot = "43")]
		protected virtual void CancelUpdateRotation()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x1044F78", Offset = "0x1044F78", VA = "0x1044F78", Slot = "44")]
		protected virtual void CancelDecelerateRotation()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1044F8C", Offset = "0x1044F8C", VA = "0x1044F8C", Slot = "45")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x670558", Offset = "0x670558")]
		protected virtual IEnumerator RotateToAngle(Vector3 targetAngle, float rotationSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x104504C", Offset = "0x104504C", VA = "0x104504C", Slot = "46")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6705BC", Offset = "0x6705BC")]
		protected virtual IEnumerator DecelerateRotation()
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x10450C0", Offset = "0x10450C0", VA = "0x10450C0", Slot = "47")]
		protected virtual float GetLimitedAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x10450E0", Offset = "0x10450E0", VA = "0x10450E0", Slot = "48")]
		protected virtual void CheckAngleLimits()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x10451B4", Offset = "0x10451B4", VA = "0x10451B4", Slot = "49")]
		protected virtual void EmitEvents()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x104552C", Offset = "0x104552C", VA = "0x104552C", Slot = "50")]
		protected virtual RotateTransformGrabAttachEventArgs SetEventPayload()
		{
			return default(RotateTransformGrabAttachEventArgs);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x1045628", Offset = "0x1045628", VA = "0x1045628")]
		public VRTK_RotateTransformGrabAttach()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C474", Offset = "0x64C474")]
	public class VRTK_RotatorTrackGrabAttach : VRTK_TrackObjectGrabAttach
	{
		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xB3DA98", Offset = "0xB3DA98", VA = "0xB3DA98", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xB3DAF0", Offset = "0xB3DAF0", VA = "0xB3DAF0", Slot = "14")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xB3DC40", Offset = "0xB3DC40", VA = "0xB3DC40", Slot = "24")]
		protected override Transform SetTrackPointOrientation(Transform givenTrackPoint, Transform currentGrabbedObject, Transform controllerPoint)
		{
			return null;
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xB3DD0C", Offset = "0xB3DD0C", VA = "0xB3DD0C")]
		public VRTK_RotatorTrackGrabAttach()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C4AC", Offset = "0x64C4AC")]
	public class VRTK_SpringJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6634F8", Offset = "0x6634F8")]
		public float breakForce;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663530", Offset = "0x663530")]
		public float strength;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663568", Offset = "0x663568")]
		public float damper;

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xB3DD44", Offset = "0xB3DD44", VA = "0xB3DD44", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xB3DE80", Offset = "0xB3DE80", VA = "0xB3DE80")]
		public VRTK_SpringJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C4E4", Offset = "0x64C4E4")]
	public class VRTK_TrackObjectGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6635A0", Offset = "0x6635A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6635A0", Offset = "0x6635A0")]
		public float detachDistance;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663610", Offset = "0x663610")]
		public float velocityLimit;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663648", Offset = "0x663648")]
		public float angularVelocityLimit;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663680", Offset = "0x663680")]
		public float maxDistanceDelta;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool isReleasable;

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xB3DAA4", Offset = "0xB3DAA4", VA = "0xB3DAA4", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xB3DEA0", Offset = "0xB3DEA0", VA = "0xB3DEA0", Slot = "12")]
		public override Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xB3E18C", Offset = "0xB3E18C", VA = "0xB3E18C", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xB3E308", Offset = "0xB3E308", VA = "0xB3E308", Slot = "14")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xB3E7E8", Offset = "0xB3E7E8", VA = "0xB3E7E8", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xB3E7F8", Offset = "0xB3E7F8", VA = "0xB3E7F8", Slot = "24")]
		protected virtual Transform SetTrackPointOrientation(Transform givenTrackPoint, Transform currentGrabbedObject, Transform controllerPoint)
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xB3DD28", Offset = "0xB3DD28", VA = "0xB3DD28")]
		public VRTK_TrackObjectGrabAttach()
		{
		}
	}
}
namespace VRTK.Controllables
{
	[Token(Token = "0x2000254")]
	public struct ControllableEventArgs
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider interactingCollider;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_InteractTouch interactingTouchScript;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float value;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float normalizedValue;
	}
	[Token(Token = "0x2000255")]
	public delegate void ControllableEventHandler(object sender, ControllableEventArgs e);
	[Token(Token = "0x2000256")]
	public abstract class VRTK_BaseControllable : MonoBehaviour
	{
		[Token(Token = "0x20004EF")]
		public enum OperatingAxis
		{
			[Token(Token = "0x4002171")]
			xAxis,
			[Token(Token = "0x4002172")]
			yAxis,
			[Token(Token = "0x4002173")]
			zAxis
		}

		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB30", Offset = "0x64DB30")]
		private sealed class <ProcessAtEndOfFrame>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BaseControllable <>4__this;

			[Token(Token = "0x170002D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023C4")]
				[Address(RVA = "0x1035F0C", Offset = "0x1035F0C", VA = "0x1035F0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023C6")]
				[Address(RVA = "0x1035F7C", Offset = "0x1035F7C", VA = "0x1035F7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023C1")]
			[Address(RVA = "0x1035AE0", Offset = "0x1035AE0", VA = "0x1035AE0")]
			[DebuggerHidden]
			public <ProcessAtEndOfFrame>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60023C2")]
			[Address(RVA = "0x1035E04", Offset = "0x1035E04", VA = "0x1035E04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x1035E08", Offset = "0x1035E08", VA = "0x1035E08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0x1035F14", Offset = "0x1035F14", VA = "0x1035F14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6636B8", Offset = "0x6636B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6636B8", Offset = "0x6636B8")]
		public OperatingAxis operateAxis;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663718", Offset = "0x663718")]
		public GameObject[] ignoreCollisionsWith;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663750", Offset = "0x663750")]
		public GameObject[] excludeColliderCheckOn;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663788", Offset = "0x663788")]
		public float equalityFidelity;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 originalLocalPosition;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Quaternion originalLocalRotation;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 actualTransformPosition;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool atMinLimit;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		protected bool atMaxLimit;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Collider interactingCollider;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected VRTK_InteractTouch interactingTouchScript;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Collider[] controlColliders;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool createCustomCollider;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Coroutine processAtEndOfFrame;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float storedValue;

		[Token(Token = "0x140000FE")]
		public event ControllableEventHandler ValueChanged
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x1034AEC", Offset = "0x1034AEC", VA = "0x1034AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670620", Offset = "0x670620")]
			add
			{
			}
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0x1034BD8", Offset = "0x1034BD8", VA = "0x1034BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670630", Offset = "0x670630")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FF")]
		public event ControllableEventHandler RestingPointReached
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0x1034CC4", Offset = "0x1034CC4", VA = "0x1034CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670640", Offset = "0x670640")]
			add
			{
			}
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x1034DB0", Offset = "0x1034DB0", VA = "0x1034DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670650", Offset = "0x670650")]
			remove
			{
			}
		}

		[Token(Token = "0x14000100")]
		public event ControllableEventHandler MinLimitReached
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x1034E9C", Offset = "0x1034E9C", VA = "0x1034E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670660", Offset = "0x670660")]
			add
			{
			}
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x1034F88", Offset = "0x1034F88", VA = "0x1034F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670670", Offset = "0x670670")]
			remove
			{
			}
		}

		[Token(Token = "0x14000101")]
		public event ControllableEventHandler MinLimitExited
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x1035074", Offset = "0x1035074", VA = "0x1035074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670680", Offset = "0x670680")]
			add
			{
			}
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x1035160", Offset = "0x1035160", VA = "0x1035160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670690", Offset = "0x670690")]
			remove
			{
			}
		}

		[Token(Token = "0x14000102")]
		public event ControllableEventHandler MaxLimitReached
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x103524C", Offset = "0x103524C", VA = "0x103524C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6706A0", Offset = "0x6706A0")]
			add
			{
			}
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x1035338", Offset = "0x1035338", VA = "0x1035338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6706B0", Offset = "0x6706B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000103")]
		public event ControllableEventHandler MaxLimitExited
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x1035424", Offset = "0x1035424", VA = "0x1035424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6706C0", Offset = "0x6706C0")]
			add
			{
			}
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x1035510", Offset = "0x1035510", VA = "0x1035510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6706D0", Offset = "0x6706D0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x10355FC", Offset = "0x10355FC", VA = "0x10355FC", Slot = "4")]
		public virtual void OnValueChanged(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x103563C", Offset = "0x103563C", VA = "0x103563C", Slot = "5")]
		public virtual void OnRestingPointReached(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x103567C", Offset = "0x103567C", VA = "0x103567C", Slot = "6")]
		public virtual void OnMinLimitReached(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x10356BC", Offset = "0x10356BC", VA = "0x10356BC", Slot = "7")]
		public virtual void OnMinLimitExited(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x10356FC", Offset = "0x10356FC", VA = "0x10356FC", Slot = "8")]
		public virtual void OnMaxLimitReached(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x103573C", Offset = "0x103573C", VA = "0x103573C", Slot = "9")]
		public virtual void OnMaxLimitExited(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6001A2F")]
		public abstract float GetValue();

		[Token(Token = "0x6001A30")]
		public abstract float GetNormalizedValue();

		[Token(Token = "0x6001A31")]
		public abstract void SetValue(float value);

		[Token(Token = "0x6001A32")]
		public abstract bool IsResting();

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x103577C", Offset = "0x103577C", VA = "0x103577C", Slot = "14")]
		public virtual bool AtMinLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x1035784", Offset = "0x1035784", VA = "0x1035784", Slot = "15")]
		public virtual bool AtMaxLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x103578C", Offset = "0x103578C", VA = "0x103578C", Slot = "16")]
		public virtual Vector3 GetOriginalLocalPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x1035798", Offset = "0x1035798", VA = "0x1035798", Slot = "17")]
		public virtual Quaternion GetOriginalLocalRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x10357A4", Offset = "0x10357A4", VA = "0x10357A4", Slot = "18")]
		public virtual Collider[] GetControlColliders()
		{
			return null;
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x10357AC", Offset = "0x10357AC", VA = "0x10357AC", Slot = "19")]
		public virtual Collider GetInteractingCollider()
		{
			return null;
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x10357B4", Offset = "0x10357B4", VA = "0x10357B4", Slot = "20")]
		public virtual VRTK_InteractTouch GetInteractingTouch()
		{
			return null;
		}

		[Token(Token = "0x6001A3A")]
		protected abstract void EmitEvents();

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x10357BC", Offset = "0x10357BC", VA = "0x10357BC", Slot = "22")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x1028028", Offset = "0x1028028", VA = "0x1028028", Slot = "23")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x10280C4", Offset = "0x10280C4", VA = "0x10280C4", Slot = "24")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1027F80", Offset = "0x1027F80", VA = "0x1027F80", Slot = "25")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x1035840", Offset = "0x1035840", VA = "0x1035840", Slot = "26")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x103588C", Offset = "0x103588C", VA = "0x103588C", Slot = "27")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x10358D8", Offset = "0x10358D8", VA = "0x10358D8", Slot = "28")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x10358E8", Offset = "0x10358E8", VA = "0x10358E8", Slot = "29")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x1028600", Offset = "0x1028600", VA = "0x1028600", Slot = "30")]
		protected virtual void OnTouched(Collider collider)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x10358F8", Offset = "0x10358F8", VA = "0x10358F8", Slot = "31")]
		protected virtual void OnUntouched(Collider collider)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x1035900", Offset = "0x1035900", VA = "0x1035900", Slot = "32")]
		protected virtual void SetupCollider()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x1035A68", Offset = "0x1035A68", VA = "0x1035A68", Slot = "33")]
		protected virtual void ConfigureColliders()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x1035A6C", Offset = "0x1035A6C", VA = "0x1035A6C", Slot = "34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6706E0", Offset = "0x6706E0")]
		protected virtual IEnumerator ProcessAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x1035B0C", Offset = "0x1035B0C", VA = "0x1035B0C", Slot = "35")]
		protected virtual void ManageCollisions(bool ignore)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x1035DC8", Offset = "0x1035DC8", VA = "0x1035DC8", Slot = "36")]
		protected virtual Vector3 AxisDirection(bool local = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x102A1E4", Offset = "0x102A1E4", VA = "0x102A1E4", Slot = "37")]
		protected virtual ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x1028DCC", Offset = "0x1028DCC", VA = "0x1028DCC")]
		protected VRTK_BaseControllable()
		{
		}
	}
}
namespace VRTK.Controllables.PhysicsBased
{
	[Token(Token = "0x2000257")]
	public abstract class VRTK_BasePhysicsControllable : VRTK_BaseControllable
	{
		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663820", Offset = "0x663820")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663820", Offset = "0x663820")]
		public Rigidbody connectedTo;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Rigidbody controlRigidbody;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool createCustomRigidbody;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected GameObject rigidbodyActivatorContainer;

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x102E4E4", Offset = "0x102E4E4", VA = "0x102E4E4", Slot = "38")]
		public virtual Rigidbody GetControlRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x102E4EC", Offset = "0x102E4EC", VA = "0x102E4EC", Slot = "39")]
		public virtual GameObject GetControlActivatorContainer()
		{
			return null;
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x102E4F4", Offset = "0x102E4F4", VA = "0x102E4F4", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x102E538", Offset = "0x102E538", VA = "0x102E538", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x102E5B4", Offset = "0x102E5B4", VA = "0x102E5B4", Slot = "40")]
		protected virtual void SetupRigidbodyActivator()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x102E67C", Offset = "0x102E67C", VA = "0x102E67C", Slot = "41")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x102E770", Offset = "0x102E770", VA = "0x102E770", Slot = "42")]
		protected virtual void ConfigueRigidbody()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x102E774", Offset = "0x102E774", VA = "0x102E774", Slot = "43")]
		protected virtual void SetRigidbodyVelocity(Vector3 newVelocity)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x102E840", Offset = "0x102E840", VA = "0x102E840", Slot = "44")]
		protected virtual void SetRigidbodyDrag(float givenDrag)
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x102E8F0", Offset = "0x102E8F0", VA = "0x102E8F0", Slot = "45")]
		protected virtual void SetRigidbodyAngularDrag(float givenDrag)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x102E9A0", Offset = "0x102E9A0", VA = "0x102E9A0", Slot = "46")]
		protected virtual void SetRigidbodyGravity(bool useGravity)
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x102EA50", Offset = "0x102EA50", VA = "0x102EA50", Slot = "47")]
		protected virtual void SetRigidbodyKinematic(bool isKinematic)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x102EB00", Offset = "0x102EB00", VA = "0x102EB00", Slot = "48")]
		protected virtual void SetRigidbodyConstraints(RigidbodyConstraints newConstraints)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x102EBB0", Offset = "0x102EBB0", VA = "0x102EBB0", Slot = "49")]
		protected virtual void SetRigidbodyCollisionDetectionMode(CollisionDetectionMode newDetectionMode)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x102EC60", Offset = "0x102EC60", VA = "0x102EC60")]
		protected VRTK_BasePhysicsControllable()
		{
		}
	}
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C51C", Offset = "0x64C51C")]
	public class VRTK_PhysicsPusher : VRTK_BasePhysicsControllable
	{
		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663880", Offset = "0x663880")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663880", Offset = "0x663880")]
		public float pressedDistance;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6638E0", Offset = "0x6638E0")]
		public bool stayPressed;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663918", Offset = "0x663918")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x663918", Offset = "0x663918")]
		public float minMaxLimitThreshold;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66396C", Offset = "0x66396C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66396C", Offset = "0x66396C")]
		public float restingPosition;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6639C0", Offset = "0x6639C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6639C0", Offset = "0x6639C0")]
		public float restingPositionThreshold;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663A14", Offset = "0x663A14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x663A14", Offset = "0x663A14")]
		public float positionTarget;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663A68", Offset = "0x663A68")]
		public float targetForce;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected ConfigurableJoint controlJoint;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected bool createControlJoint;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected Vector3 previousLocalPosition;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected bool pressedDown;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected float previousPositionTarget;

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x102EC64", Offset = "0x102EC64", VA = "0x102EC64", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x102ECC8", Offset = "0x102ECC8", VA = "0x102ECC8", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x102ED64", Offset = "0x102ED64", VA = "0x102ED64", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x102ED68", Offset = "0x102ED68", VA = "0x102ED68", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x102EE20", Offset = "0x102EE20", VA = "0x102EE20", Slot = "50")]
		public virtual ConfigurableJoint GetControlJoint()
		{
			return null;
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x102EE28", Offset = "0x102EE28", VA = "0x102EE28", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x102F07C", Offset = "0x102F07C", VA = "0x102F07C", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x102F148", Offset = "0x102F148", VA = "0x102F148", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x102F1E4", Offset = "0x102F1E4", VA = "0x102F1E4", Slot = "51")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x102F270", Offset = "0x102F270", VA = "0x102F270", Slot = "52")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x102F308", Offset = "0x102F308", VA = "0x102F308", Slot = "42")]
		protected override void ConfigueRigidbody()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x102F364", Offset = "0x102F364", VA = "0x102F364", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x102F88C", Offset = "0x102F88C", VA = "0x102F88C", Slot = "53")]
		protected virtual void ForceLocalPosition()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x102F9C0", Offset = "0x102F9C0", VA = "0x102F9C0", Slot = "54")]
		protected virtual void CheckUnpress()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x102FA10", Offset = "0x102FA10", VA = "0x102FA10", Slot = "55")]
		protected virtual void SetTargetPosition()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x102FC10", Offset = "0x102FC10", VA = "0x102FC10", Slot = "56")]
		protected virtual Vector3 PressedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x102FCF4", Offset = "0x102FCF4", VA = "0x102FCF4", Slot = "57")]
		protected virtual void SetupJoint()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x103010C", Offset = "0x103010C", VA = "0x103010C", Slot = "58")]
		protected virtual void StayPressed()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x1030150", Offset = "0x1030150", VA = "0x1030150")]
		public VRTK_PhysicsPusher()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C554", Offset = "0x64C554")]
	public class VRTK_PhysicsRotator : VRTK_BasePhysicsControllable
	{
		[Token(Token = "0x20004F1")]
		public enum GrabMechanic
		{
			[Token(Token = "0x4002178")]
			TrackObject,
			[Token(Token = "0x4002179")]
			RotatorTrack
		}

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663AA0", Offset = "0x663AA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663AA0", Offset = "0x663AA0")]
		public Transform hingePoint;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663B00", Offset = "0x663B00")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x663B00", Offset = "0x663B00")]
		public Limits2D angleLimits;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663B5C", Offset = "0x663B5C")]
		public float minMaxThresholdAngle;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663B94", Offset = "0x663B94")]
		public float restingAngle;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663BCC", Offset = "0x663BCC")]
		public float forceRestingAngleThreshold;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663C04", Offset = "0x663C04")]
		public float angleTarget;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663C3C", Offset = "0x663C3C")]
		public bool isLocked;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663C74", Offset = "0x663C74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663C74", Offset = "0x663C74")]
		public Limits2D stepValueRange;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663CD4", Offset = "0x663CD4")]
		public float stepSize;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663D0C", Offset = "0x663D0C")]
		public bool useStepAsValue;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663D44", Offset = "0x663D44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663D44", Offset = "0x663D44")]
		public bool snapToStep;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663DA4", Offset = "0x663DA4")]
		public float snapForce;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663DDC", Offset = "0x663DDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663DDC", Offset = "0x663DDC")]
		public GrabMechanic grabMechanic;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663E3C", Offset = "0x663E3C")]
		public bool precisionGrab;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663E74", Offset = "0x663E74")]
		public float detachDistance;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663EAC", Offset = "0x663EAC")]
		public bool useFrictionOverrides;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663EE4", Offset = "0x663EE4")]
		public float grabbedFriction;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663F1C", Offset = "0x663F1C")]
		public float releasedFriction;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663F54", Offset = "0x663F54")]
		public GameObject[] onlyInteractWith;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VRTK_InteractableObject controlInteractableObject;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected VRTK_TrackObjectGrabAttach controlGrabAttach;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected VRTK_SwapControllerGrabAction controlSecondaryGrabAction;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected bool createControlInteractableObject;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected HingeJoint controlJoint;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected JointSpring controlJointSpring;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		protected JointLimits controlJointLimits;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected bool createControlJoint;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected RigidbodyConstraints savedConstraints;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected bool stillLocked;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		protected bool stillResting;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		protected float previousValue;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected float previousAngleTarget;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x1030178", Offset = "0x1030178", VA = "0x1030178", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x10302FC", Offset = "0x10302FC", VA = "0x10302FC", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x1030368", Offset = "0x1030368", VA = "0x1030368", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x1030378", Offset = "0x1030378", VA = "0x1030378", Slot = "50")]
		public virtual float GetStepValue(float currentValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x10304E8", Offset = "0x10304E8", VA = "0x10304E8", Slot = "51")]
		public virtual void SetAngleTargetWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x103056C", Offset = "0x103056C", VA = "0x103056C", Slot = "52")]
		public virtual void SetRestingAngleWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x10305D4", Offset = "0x10305D4", VA = "0x10305D4", Slot = "53")]
		public virtual float GetAngleFromStepValue(float givenStepValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x1030780", Offset = "0x1030780", VA = "0x1030780", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x10307F0", Offset = "0x10307F0", VA = "0x10307F0", Slot = "54")]
		public virtual HingeJoint GetControlJoint()
		{
			return null;
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x10307F8", Offset = "0x10307F8", VA = "0x10307F8", Slot = "55")]
		public virtual VRTK_InteractableObject GetControlInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x1030800", Offset = "0x1030800", VA = "0x1030800", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x1030B20", Offset = "0x1030B20", VA = "0x1030B20", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x1030C04", Offset = "0x1030C04", VA = "0x1030C04", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x1030D08", Offset = "0x1030D08", VA = "0x1030D08", Slot = "56")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x1030D80", Offset = "0x1030D80", VA = "0x1030D80", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x10310D8", Offset = "0x10310D8", VA = "0x10310D8", Slot = "37")]
		protected override ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x103117C", Offset = "0x103117C", VA = "0x103117C", Slot = "57")]
		protected virtual void SetupJoint()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x1031424", Offset = "0x1031424", VA = "0x1031424", Slot = "58")]
		protected virtual void SetJointLimits()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x1031530", Offset = "0x1031530", VA = "0x1031530", Slot = "59")]
		protected virtual void ManageSpring(bool activate, float springTarget)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x103162C", Offset = "0x103162C", VA = "0x103162C", Slot = "60")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x10317E4", Offset = "0x10317E4", VA = "0x10317E4", Slot = "61")]
		protected virtual void SetupGrabMechanic()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x10318D0", Offset = "0x10318D0", VA = "0x10318D0", Slot = "62")]
		protected virtual void SetGrabMechanicParameters()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x1031980", Offset = "0x1031980", VA = "0x1031980", Slot = "63")]
		protected virtual void SetupSecondaryAction()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x1031A20", Offset = "0x1031A20", VA = "0x1031A20", Slot = "64")]
		protected virtual void ManageInteractableObjectListeners(bool state)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x1031CAC", Offset = "0x1031CAC", VA = "0x1031CAC", Slot = "65")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x1031D6C", Offset = "0x1031D6C", VA = "0x1031D6C", Slot = "66")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x1031E2C", Offset = "0x1031E2C", VA = "0x1031E2C", Slot = "67")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x1031E68", Offset = "0x1031E68", VA = "0x1031E68", Slot = "68")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x1031E78", Offset = "0x1031E78", VA = "0x1031E78", Slot = "69")]
		protected virtual void AttemptMove()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x1031EC0", Offset = "0x1031EC0", VA = "0x1031EC0", Slot = "70")]
		protected virtual void AttemptRelease()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x1031ED4", Offset = "0x1031ED4", VA = "0x1031ED4", Slot = "71")]
		protected virtual void SetFrictions(float frictionValue)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x1031F40", Offset = "0x1031F40", VA = "0x1031F40", Slot = "72")]
		protected virtual void CheckLock()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x103202C", Offset = "0x103202C", VA = "0x103202C", Slot = "73")]
		protected virtual void SetAngleWithNormalizedValue(float normalizedTargetAngle)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x10321A0", Offset = "0x10321A0", VA = "0x10321A0", Slot = "74")]
		protected virtual void UpdateToAngle(float givenTargetAngle)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x1032248", Offset = "0x1032248", VA = "0x1032248", Slot = "75")]
		protected virtual void ForceRestingPosition()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x10323D8", Offset = "0x10323D8", VA = "0x10323D8", Slot = "76")]
		protected virtual void ForceAngleTarget()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x1032450", Offset = "0x1032450", VA = "0x1032450", Slot = "77")]
		protected virtual void ForceSnapToStep()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x10325EC", Offset = "0x10325EC", VA = "0x10325EC", Slot = "78")]
		protected virtual bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x1032698", Offset = "0x1032698", VA = "0x1032698")]
		public VRTK_PhysicsRotator()
		{
		}
	}
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C58C", Offset = "0x64C58C")]
	public class VRTK_PhysicsSlider : VRTK_BasePhysicsControllable
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663F8C", Offset = "0x663F8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663F8C", Offset = "0x663F8C")]
		public float maximumLength;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663FEC", Offset = "0x663FEC")]
		public float minMaxThreshold;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664024", Offset = "0x664024")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x664024", Offset = "0x664024")]
		public float positionTarget;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664078", Offset = "0x664078")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x664078", Offset = "0x664078")]
		public float restingPosition;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6640CC", Offset = "0x6640CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6640CC", Offset = "0x6640CC")]
		public float forceRestingPositionThreshold;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x664120", Offset = "0x664120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664120", Offset = "0x664120")]
		public Limits2D stepValueRange;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664180", Offset = "0x664180")]
		public float stepSize;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6641B8", Offset = "0x6641B8")]
		public bool useStepAsValue;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6641F0", Offset = "0x6641F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6641F0", Offset = "0x6641F0")]
		public bool snapToStep;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664250", Offset = "0x664250")]
		public float snapForce;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x664288", Offset = "0x664288")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664288", Offset = "0x664288")]
		public bool precisionGrab;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6642E8", Offset = "0x6642E8")]
		public float detachDistance;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664320", Offset = "0x664320")]
		public float releaseFriction;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664358", Offset = "0x664358")]
		public GameObject[] onlyInteractWith;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected ConfigurableJoint controlJoint;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected bool createControlJoint;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected VRTK_InteractableObject controlInteractableObject;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected VRTK_TrackObjectGrabAttach controlGrabAttach;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VRTK_SwapControllerGrabAction controlSecondaryGrabAction;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected bool createControlInteractableObject;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		protected Vector3 previousLocalPosition;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected float previousPositionTarget;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		protected bool stillResting;

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x1032780", Offset = "0x1032780", VA = "0x1032780", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x10327E4", Offset = "0x10327E4", VA = "0x10327E4", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x1032880", Offset = "0x1032880", VA = "0x1032880", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x10329AC", Offset = "0x10329AC", VA = "0x10329AC", Slot = "50")]
		public virtual float GetStepValue(float currentValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x1032B04", Offset = "0x1032B04", VA = "0x1032B04", Slot = "51")]
		public virtual void SetPositionTargetWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x1032B7C", Offset = "0x1032B7C", VA = "0x1032B7C", Slot = "52")]
		public virtual void SetRestingPositionWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x1032BE4", Offset = "0x1032BE4", VA = "0x1032BE4", Slot = "53")]
		public virtual float GetPositionFromStepValue(float givenStepValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x1032D30", Offset = "0x1032D30", VA = "0x1032D30", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x1032DA0", Offset = "0x1032DA0", VA = "0x1032DA0", Slot = "54")]
		public virtual ConfigurableJoint GetControlJoint()
		{
			return null;
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x1032DA8", Offset = "0x1032DA8", VA = "0x1032DA8", Slot = "55")]
		public virtual VRTK_InteractableObject GetControlInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x1032DB0", Offset = "0x1032DB0", VA = "0x1032DB0", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x1032F28", Offset = "0x1032F28", VA = "0x1032F28", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x1033020", Offset = "0x1033020", VA = "0x1033020", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x1033118", Offset = "0x1033118", VA = "0x1033118", Slot = "56")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x103317C", Offset = "0x103317C", VA = "0x103317C", Slot = "42")]
		protected override void ConfigueRigidbody()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x10331E8", Offset = "0x10331E8", VA = "0x10331E8", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x10334D0", Offset = "0x10334D0", VA = "0x10334D0", Slot = "37")]
		protected override ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x1033574", Offset = "0x1033574", VA = "0x1033574", Slot = "57")]
		protected virtual void ForceRestingPosition()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x1033664", Offset = "0x1033664", VA = "0x1033664", Slot = "58")]
		protected virtual void ForcePositionTarget()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x10336E0", Offset = "0x10336E0", VA = "0x10336E0", Slot = "59")]
		protected virtual void ForceSnapToStep()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x10338C8", Offset = "0x10338C8", VA = "0x10338C8", Slot = "60")]
		protected virtual void SetPositionWithNormalizedValue(float givenTargetPosition)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x10339E8", Offset = "0x10339E8", VA = "0x10339E8", Slot = "61")]
		protected virtual void SnapToPosition(float positionOnAxis)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x1033B60", Offset = "0x1033B60", VA = "0x1033B60", Slot = "62")]
		protected virtual Vector3 MaximumLength()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x1033C44", Offset = "0x1033C44", VA = "0x1033C44", Slot = "63")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x1033E00", Offset = "0x1033E00", VA = "0x1033E00", Slot = "64")]
		protected virtual void SetupGrabMechanic()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x1033EA8", Offset = "0x1033EA8", VA = "0x1033EA8", Slot = "65")]
		protected virtual void SetGrabMechanicParameters()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x1033F58", Offset = "0x1033F58", VA = "0x1033F58", Slot = "66")]
		protected virtual void SetupSecondaryAction()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x1033FF8", Offset = "0x1033FF8", VA = "0x1033FF8", Slot = "67")]
		protected virtual void SetupJoint()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x1034350", Offset = "0x1034350", VA = "0x1034350", Slot = "68")]
		protected virtual void EnableJointDriver()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x1034364", Offset = "0x1034364", VA = "0x1034364", Slot = "69")]
		protected virtual void DisableJointDriver()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x1034378", Offset = "0x1034378", VA = "0x1034378", Slot = "70")]
		protected virtual void SetJointDrive(float driverForce)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x1034480", Offset = "0x1034480", VA = "0x1034480", Slot = "71")]
		protected virtual void ManageInteractableObjectListeners(bool state)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x103470C", Offset = "0x103470C", VA = "0x103470C", Slot = "72")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x10347B8", Offset = "0x10347B8", VA = "0x10347B8", Slot = "73")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x1034864", Offset = "0x1034864", VA = "0x1034864", Slot = "74")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x10348A0", Offset = "0x10348A0", VA = "0x10348A0", Slot = "75")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x10348B0", Offset = "0x10348B0", VA = "0x10348B0", Slot = "76")]
		protected virtual void AttemptMove()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x10348F0", Offset = "0x10348F0", VA = "0x10348F0", Slot = "77")]
		protected virtual void AttemptRelease()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x103497C", Offset = "0x103497C", VA = "0x103497C", Slot = "78")]
		protected virtual bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x1034A28", Offset = "0x1034A28", VA = "0x1034A28")]
		public VRTK_PhysicsSlider()
		{
		}
	}
}
namespace VRTK.Controllables.ArtificialBased
{
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C5C4", Offset = "0x64C5C4")]
	public class VRTK_ArtificialPusher : VRTK_BaseControllable
	{
		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB40", Offset = "0x64DB40")]
		private sealed class <PositionLerp>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ArtificialPusher <>4__this;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetPosition;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float moveSpeed;

			[Token(Token = "0x170002D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023CA")]
				[Address(RVA = "0x1029144", Offset = "0x1029144", VA = "0x1029144", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023CC")]
				[Address(RVA = "0x10291B4", Offset = "0x10291B4", VA = "0x10291B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x10289D0", Offset = "0x10289D0", VA = "0x10289D0")]
			[DebuggerHidden]
			public <PositionLerp>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x1028E68", Offset = "0x1028E68", VA = "0x1028E68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x1028E6C", Offset = "0x1028E6C", VA = "0x1028E6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023CB")]
			[Address(RVA = "0x102914C", Offset = "0x102914C", VA = "0x102914C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB50", Offset = "0x64DB50")]
		private sealed class <SetTargetPositionAtEndOfFrame>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ArtificialPusher <>4__this;

			[Token(Token = "0x170002DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023D0")]
				[Address(RVA = "0x1029274", Offset = "0x1029274", VA = "0x1029274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D2")]
				[Address(RVA = "0x10292E4", Offset = "0x10292E4", VA = "0x10292E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x1028A70", Offset = "0x1028A70", VA = "0x1028A70")]
			[DebuggerHidden]
			public <SetTargetPositionAtEndOfFrame>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x10291BC", Offset = "0x10291BC", VA = "0x10291BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x10291C0", Offset = "0x10291C0", VA = "0x10291C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x102927C", Offset = "0x102927C", VA = "0x102927C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x664390", Offset = "0x664390")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664390", Offset = "0x664390")]
		public float pressedDistance;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6643F0", Offset = "0x6643F0")]
		[SerializeField]
		protected bool stayPressed;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66443C", Offset = "0x66443C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66443C", Offset = "0x66443C")]
		public float minMaxLimitThreshold;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664490", Offset = "0x664490")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x664490", Offset = "0x664490")]
		public float restingPosition;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6644E4", Offset = "0x6644E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6644E4", Offset = "0x6644E4")]
		public float restingPositionThreshold;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664538", Offset = "0x664538")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x664538", Offset = "0x664538")]
		[SerializeField]
		protected float positionTarget;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66459C", Offset = "0x66459C")]
		public float pressSpeed;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6645D4", Offset = "0x6645D4")]
		public float returnSpeed;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Coroutine positionLerpRoutine;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Coroutine setTargetPositionRoutine;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected float vectorEqualityThreshold;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected bool isPressed;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		protected bool isMoving;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
		protected bool isTouched;

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x1027AB0", Offset = "0x1027AB0", VA = "0x1027AB0", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x1027B14", Offset = "0x1027B14", VA = "0x1027B14", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x1027BB0", Offset = "0x1027BB0", VA = "0x1027BB0", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x1027BB4", Offset = "0x1027BB4", VA = "0x1027BB4", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x1027C6C", Offset = "0x1027C6C", VA = "0x1027C6C", Slot = "38")]
		public virtual void SetStayPressed(bool state)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x1027CC8", Offset = "0x1027CC8", VA = "0x1027CC8", Slot = "39")]
		public virtual void SetPositionTarget(float normalizedTarget)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x1027D54", Offset = "0x1027D54", VA = "0x1027D54", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x1027FD8", Offset = "0x1027FD8", VA = "0x1027FD8", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x1028080", Offset = "0x1028080", VA = "0x1028080", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x10281E8", Offset = "0x10281E8", VA = "0x10281E8", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x1028408", Offset = "0x1028408", VA = "0x1028408", Slot = "30")]
		protected override void OnTouched(Collider collider)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x1028674", Offset = "0x1028674", VA = "0x1028674", Slot = "31")]
		protected override void OnUntouched(Collider collider)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x102867C", Offset = "0x102867C", VA = "0x102867C", Slot = "40")]
		protected virtual void SetTargetPosition()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x10287C4", Offset = "0x10287C4", VA = "0x10287C4", Slot = "41")]
		protected virtual Vector3 PressedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x10288A8", Offset = "0x10288A8", VA = "0x10288A8", Slot = "42")]
		protected virtual void CancelPositionLerp()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x10288DC", Offset = "0x10288DC", VA = "0x10288DC", Slot = "43")]
		protected virtual void CancelSetTargetPosition()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x1028910", Offset = "0x1028910", VA = "0x1028910", Slot = "44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x670744", Offset = "0x670744")]
		protected virtual IEnumerator PositionLerp(Vector3 targetPosition, float moveSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x10289FC", Offset = "0x10289FC", VA = "0x10289FC", Slot = "45")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6707A8", Offset = "0x6707A8")]
		protected virtual IEnumerator SetTargetPositionAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x1028A9C", Offset = "0x1028A9C", VA = "0x1028A9C", Slot = "46")]
		protected virtual void ManageAtPressedPosition()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x1028AFC", Offset = "0x1028AFC", VA = "0x1028AFC", Slot = "47")]
		protected virtual void ManageAtOriginPosition()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x1028B50", Offset = "0x1028B50", VA = "0x1028B50", Slot = "48")]
		protected virtual bool AtOriginPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x1028B9C", Offset = "0x1028B9C", VA = "0x1028B9C", Slot = "49")]
		protected virtual bool AtPressedPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x1028C28", Offset = "0x1028C28", VA = "0x1028C28", Slot = "50")]
		public virtual bool AtTargetPosition(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x1028C94", Offset = "0x1028C94", VA = "0x1028C94", Slot = "51")]
		protected virtual void ResetInteractor()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x1028C9C", Offset = "0x1028C9C", VA = "0x1028C9C", Slot = "52")]
		protected virtual void SetToRestingPosition()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x1028D98", Offset = "0x1028D98", VA = "0x1028D98")]
		public VRTK_ArtificialPusher()
		{
		}
	}
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C5FC", Offset = "0x64C5FC")]
	public class VRTK_ArtificialRotator : VRTK_BaseControllable
	{
		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66460C", Offset = "0x66460C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66460C", Offset = "0x66460C")]
		public Transform hingePoint;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66466C", Offset = "0x66466C")]
		public Limits2D angleLimits;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6646A4", Offset = "0x6646A4")]
		public float minMaxThresholdAngle;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6646DC", Offset = "0x6646DC")]
		public float restingAngle;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664714", Offset = "0x664714")]
		public float forceRestingAngleThreshold;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66474C", Offset = "0x66474C")]
		[SerializeField]
		protected float angleTarget;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664798", Offset = "0x664798")]
		public bool isLocked;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6647D0", Offset = "0x6647D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6647D0", Offset = "0x6647D0")]
		public Limits2D stepValueRange;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664830", Offset = "0x664830")]
		public float stepSize;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664868", Offset = "0x664868")]
		public bool useStepAsValue;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6648A0", Offset = "0x6648A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6648A0", Offset = "0x6648A0")]
		public bool snapToStep;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664900", Offset = "0x664900")]
		public float snapForce;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x664938", Offset = "0x664938")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664938", Offset = "0x664938")]
		public bool precisionGrab;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664998", Offset = "0x664998")]
		public float detachDistance;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6649D0", Offset = "0x6649D0")]
		public VRTK_RotateTransformGrabAttach.RotationType rotationAction;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664A08", Offset = "0x664A08")]
		public float grabbedFriction;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664A40", Offset = "0x664A40")]
		public float releasedFriction;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664A78", Offset = "0x664A78")]
		public GameObject[] onlyInteractWith;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected VRTK_InteractableObject controlInteractableObject;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected VRTK_RotateTransformGrabAttach controlGrabAttach;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected VRTK_SwapControllerGrabAction controlSecondaryGrabAction;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected bool createInteractableObject;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected GameObject rotatorContainer;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected bool rotationReset;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		protected bool stillResting;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		protected float previousValue;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected float previousAngleTarget;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected Transform savedParent;

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x10292EC", Offset = "0x10292EC", VA = "0x10292EC", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x1029394", Offset = "0x1029394", VA = "0x1029394", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x1029400", Offset = "0x1029400", VA = "0x1029400", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x1029410", Offset = "0x1029410", VA = "0x1029410", Slot = "38")]
		public virtual GameObject GetContainer()
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x1029418", Offset = "0x1029418", VA = "0x1029418", Slot = "39")]
		public virtual float GetStepValue(float currentValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x1029588", Offset = "0x1029588", VA = "0x1029588", Slot = "40")]
		public virtual void SetAngleTargetWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x1029608", Offset = "0x1029608", VA = "0x1029608", Slot = "41")]
		public virtual void SetRestingAngleWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x1029670", Offset = "0x1029670", VA = "0x1029670", Slot = "42")]
		public virtual float GetAngleFromStepValue(float givenStepValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x10297D8", Offset = "0x10297D8", VA = "0x10297D8", Slot = "43")]
		public virtual void SetAngleTarget(float newAngle)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x10298F0", Offset = "0x10298F0", VA = "0x10298F0", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x1029960", Offset = "0x1029960", VA = "0x1029960", Slot = "44")]
		public virtual VRTK_InteractableObject GetControlInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x1029968", Offset = "0x1029968", VA = "0x1029968", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x1029C88", Offset = "0x1029C88", VA = "0x1029C88", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x1029D28", Offset = "0x1029D28", VA = "0x1029D28", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x1029DE8", Offset = "0x1029DE8", VA = "0x1029DE8", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x102A140", Offset = "0x102A140", VA = "0x102A140", Slot = "37")]
		protected override ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x102A240", Offset = "0x102A240", VA = "0x102A240", Slot = "45")]
		protected virtual void SetupParentContainer()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x102A8A4", Offset = "0x102A8A4", VA = "0x102A8A4", Slot = "46")]
		protected virtual void RemoveParentContainer()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x102A954", Offset = "0x102A954", VA = "0x102A954", Slot = "47")]
		protected virtual void ResetParentContainer()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x102AA34", Offset = "0x102AA34", VA = "0x102AA34", Slot = "48")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x102ABCC", Offset = "0x102ABCC", VA = "0x102ABCC", Slot = "49")]
		protected virtual void SetupGrabMechanic()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x102ACD8", Offset = "0x102ACD8", VA = "0x102ACD8", Slot = "50")]
		protected virtual void SetGrabMechanicParameters()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x102AE00", Offset = "0x102AE00", VA = "0x102AE00", Slot = "51")]
		protected virtual void SetupSecondaryAction()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x102AED8", Offset = "0x102AED8", VA = "0x102AED8", Slot = "52")]
		protected virtual void ManageInteractableListeners(bool state)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x102B064", Offset = "0x102B064", VA = "0x102B064", Slot = "53")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x102B074", Offset = "0x102B074", VA = "0x102B074", Slot = "54")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x102B0B4", Offset = "0x102B0B4", VA = "0x102B0B4", Slot = "55")]
		protected virtual void CheckLock()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x102B174", Offset = "0x102B174", VA = "0x102B174", Slot = "56")]
		protected virtual void ManageGrabbableListeners(bool state)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x102B450", Offset = "0x102B450", VA = "0x102B450", Slot = "57")]
		protected virtual void GrabMechanicAngleChanged(object sender, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x102B540", Offset = "0x102B540", VA = "0x102B540", Slot = "58")]
		protected virtual float SetAngleWithNormalizedValue(float normalizedTargetAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x102B690", Offset = "0x102B690", VA = "0x102B690", Slot = "59")]
		protected virtual void ForceRestingPosition()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x102B76C", Offset = "0x102B76C", VA = "0x102B76C", Slot = "60")]
		protected virtual void ForceSnapToStep()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x102B8F0", Offset = "0x102B8F0", VA = "0x102B8F0", Slot = "61")]
		protected virtual void SetRotation(float newAngle, float speed)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x102B948", Offset = "0x102B948", VA = "0x102B948", Slot = "62")]
		protected virtual bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x102B9F4", Offset = "0x102B9F4", VA = "0x102B9F4")]
		public VRTK_ArtificialRotator()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C634", Offset = "0x64C634")]
	public class VRTK_ArtificialSlider : VRTK_BaseControllable
	{
		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB60", Offset = "0x64DB60")]
		private sealed class <SetPositionTargetAtEndOfFrameRoutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ArtificialSlider <>4__this;

			[Token(Token = "0x170002DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023D6")]
				[Address(RVA = "0x102D954", Offset = "0x102D954", VA = "0x102D954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D8")]
				[Address(RVA = "0x102D9C4", Offset = "0x102D9C4", VA = "0x102D9C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x102C7CC", Offset = "0x102C7CC", VA = "0x102C7CC")]
			[DebuggerHidden]
			public <SetPositionTargetAtEndOfFrameRoutine>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x102D810", Offset = "0x102D810", VA = "0x102D810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x102D814", Offset = "0x102D814", VA = "0x102D814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D7")]
			[Address(RVA = "0x102D95C", Offset = "0x102D95C", VA = "0x102D95C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x664AB0", Offset = "0x664AB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664AB0", Offset = "0x664AB0")]
		public float maximumLength;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664B10", Offset = "0x664B10")]
		public float minMaxThreshold;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664B48", Offset = "0x664B48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x664B48", Offset = "0x664B48")]
		[SerializeField]
		protected float positionTarget;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664BAC", Offset = "0x664BAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x664BAC", Offset = "0x664BAC")]
		public float restingPosition;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664C00", Offset = "0x664C00")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x664C00", Offset = "0x664C00")]
		public float forceRestingPositionThreshold;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x664C54", Offset = "0x664C54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664C54", Offset = "0x664C54")]
		public Limits2D stepValueRange;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664CB4", Offset = "0x664CB4")]
		public float stepSize;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664CEC", Offset = "0x664CEC")]
		public bool useStepAsValue;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x664D24", Offset = "0x664D24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664D24", Offset = "0x664D24")]
		public bool snapToStep;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664D84", Offset = "0x664D84")]
		public float snapForce;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x664DBC", Offset = "0x664DBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664DBC", Offset = "0x664DBC")]
		public float trackingSpeed;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664E1C", Offset = "0x664E1C")]
		public bool precisionGrab;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664E54", Offset = "0x664E54")]
		public float detachDistance;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664E8C", Offset = "0x664E8C")]
		public float releaseFriction;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664EC4", Offset = "0x664EC4")]
		public GameObject[] onlyInteractWith;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected VRTK_InteractableObject controlInteractableObject;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected VRTK_MoveTransformGrabAttach controlGrabAttach;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected VRTK_SwapControllerGrabAction controlSecondaryGrabAction;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected bool createInteractableObject;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Limits2D axisLimits;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Vector3 previousLocalPosition;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected Coroutine setPositionTargetAtEndOfFrameRoutine;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected bool stillResting;

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x102BAE0", Offset = "0x102BAE0", VA = "0x102BAE0", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x102BB44", Offset = "0x102BB44", VA = "0x102BB44", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x102BBE0", Offset = "0x102BBE0", VA = "0x102BBE0", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x102BC94", Offset = "0x102BC94", VA = "0x102BC94", Slot = "38")]
		public virtual float GetStepValue(float currentValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x102BDEC", Offset = "0x102BDEC", VA = "0x102BDEC", Slot = "39")]
		public virtual void SetPositionTarget(float newPositionTarget, float speed)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x102BE00", Offset = "0x102BE00", VA = "0x102BE00", Slot = "40")]
		public virtual void SetPositionTargetWithStepValue(float givenStepValue, float speed)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x102BE7C", Offset = "0x102BE7C", VA = "0x102BE7C", Slot = "41")]
		public virtual void SetRestingPositionWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x102BEE4", Offset = "0x102BEE4", VA = "0x102BEE4", Slot = "42")]
		public virtual float GetPositionFromStepValue(float givenStepValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x102BFD8", Offset = "0x102BFD8", VA = "0x102BFD8", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x102C048", Offset = "0x102C048", VA = "0x102C048", Slot = "43")]
		public virtual VRTK_InteractableObject GetControlInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x102C050", Offset = "0x102C050", VA = "0x102C050", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x102C1C8", Offset = "0x102C1C8", VA = "0x102C1C8", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x102C2A8", Offset = "0x102C2A8", VA = "0x102C2A8", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x102C3CC", Offset = "0x102C3CC", VA = "0x102C3CC", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x102C6B4", Offset = "0x102C6B4", VA = "0x102C6B4", Slot = "37")]
		protected override ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x102C758", Offset = "0x102C758", VA = "0x102C758", Slot = "44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67080C", Offset = "0x67080C")]
		protected virtual IEnumerator SetPositionTargetAtEndOfFrameRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x102C7F8", Offset = "0x102C7F8", VA = "0x102C7F8", Slot = "45")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x102C998", Offset = "0x102C998", VA = "0x102C998", Slot = "46")]
		protected virtual void SetupGrabMechanic()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x102CAC8", Offset = "0x102CAC8", VA = "0x102CAC8", Slot = "47")]
		protected virtual void SetGrabMechanicParameters()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x102CC8C", Offset = "0x102CC8C", VA = "0x102CC8C", Slot = "48")]
		protected virtual void SetupSecondaryAction()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x102CD64", Offset = "0x102CD64", VA = "0x102CD64", Slot = "49")]
		protected virtual Vector3 MaximumLength()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x102CE48", Offset = "0x102CE48", VA = "0x102CE48", Slot = "50")]
		protected virtual void SetPositionWithNormalizedValue(float givenTargetPosition, float speed)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x102CF20", Offset = "0x102CF20", VA = "0x102CF20", Slot = "51")]
		protected virtual void SnapToPosition(float positionOnAxis, float speed)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x102D0A8", Offset = "0x102D0A8", VA = "0x102D0A8", Slot = "52")]
		protected virtual void ManageInteractableListeners(bool state)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x102D234", Offset = "0x102D234", VA = "0x102D234", Slot = "53")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x102D244", Offset = "0x102D244", VA = "0x102D244", Slot = "54")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x102D2F0", Offset = "0x102D2F0", VA = "0x102D2F0", Slot = "55")]
		protected virtual bool ForceRestingPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x102D3B0", Offset = "0x102D3B0", VA = "0x102D3B0", Slot = "56")]
		protected virtual bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x102D45C", Offset = "0x102D45C", VA = "0x102D45C", Slot = "57")]
		protected virtual void ManageGrabbableListeners(bool state)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x102D738", Offset = "0x102D738", VA = "0x102D738", Slot = "58")]
		protected virtual void GrabMechanicTransformPositionChanged(object sender, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x102D748", Offset = "0x102D748", VA = "0x102D748")]
		public VRTK_ArtificialSlider()
		{
		}
	}
}
namespace VRTK.Highlighters
{
	[Token(Token = "0x200025E")]
	public abstract class VRTK_BaseHighlighter : MonoBehaviour
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664EFC", Offset = "0x664EFC")]
		public bool active;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664F34", Offset = "0x664F34")]
		public bool unhighlightOnDisable;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool usesClonedObject;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected GameObject objectToAffect;

		[Token(Token = "0x6001B19")]
		public abstract void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options);

		[Token(Token = "0x6001B1A")]
		public abstract void ResetHighlighter();

		[Token(Token = "0x6001B1B")]
		public abstract void Highlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x6001B1C")]
		public abstract void Unhighlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x6001B1D")]
		public virtual T GetOption<T>(Dictionary<string, object> options, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xB40C0C", Offset = "0xB40C0C", VA = "0xB40C0C", Slot = "9")]
		public virtual bool UsesClonedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xB40C14", Offset = "0xB40C14", VA = "0xB40C14")]
		public static VRTK_BaseHighlighter GetActiveHighlighter(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xB40CE4", Offset = "0xB40CE4", VA = "0xB40CE4", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xB40D24", Offset = "0xB40D24", VA = "0xB40D24")]
		protected VRTK_BaseHighlighter()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C66C", Offset = "0x64C66C")]
	public class VRTK_MaterialColorSwapHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB70", Offset = "0x64DB70")]
		private sealed class <CycleColor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material material;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startColor;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endColor;

			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public VRTK_MaterialColorSwapHighlighter <>4__this;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170002DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023DC")]
				[Address(RVA = "0xB41E84", Offset = "0xB41E84", VA = "0xB41E84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023DE")]
				[Address(RVA = "0xB41EF4", Offset = "0xB41EF4", VA = "0xB41EF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0xB41B4C", Offset = "0xB41B4C", VA = "0xB41B4C")]
			[DebuggerHidden]
			public <CycleColor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0xB41C40", Offset = "0xB41C40", VA = "0xB41C40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0xB41C44", Offset = "0xB41C44", VA = "0xB41C44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023DD")]
			[Address(RVA = "0xB41E8C", Offset = "0xB41E8C", VA = "0xB41E8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664F6C", Offset = "0x664F6C")]
		public float emissionDarken;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664FA4", Offset = "0x664FA4")]
		public Material customMaterial;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Dictionary<string, Material[]> originalSharedRendererMaterials;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Dictionary<string, Material[]> originalRendererMaterials;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Dictionary<string, Coroutine> faderRoutines;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool resetMainTexture;

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xB40D34", Offset = "0xB40D34", VA = "0xB40D34", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xB40EA0", Offset = "0xB40EA0", VA = "0xB40EA0", Slot = "5")]
		public override void ResetHighlighter()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xB40EAC", Offset = "0xB40EAC", VA = "0xB40EAC", Slot = "6")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xB40F54", Offset = "0xB40F54", VA = "0xB40F54", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xB4125C", Offset = "0xB4125C", VA = "0xB4125C", Slot = "11")]
		protected virtual void StoreOriginalMaterials()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xB41468", Offset = "0xB41468", VA = "0xB41468", Slot = "12")]
		protected virtual void ChangeToHighlightColor(Color color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xB41A34", Offset = "0xB41A34", VA = "0xB41A34", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x670870", Offset = "0x670870")]
		protected virtual IEnumerator CycleColor(Material material, Color startColor, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xB41B78", Offset = "0xB41B78", VA = "0xB41B78")]
		public VRTK_MaterialColorSwapHighlighter()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C6A4", Offset = "0x64C6A4")]
	public class VRTK_MaterialPropertyBlockColorSwapHighlighter : VRTK_MaterialColorSwapHighlighter
	{
		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB80", Offset = "0x64DB80")]
		private sealed class <CycleColor>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaterialPropertyBlock highlightMaterialPropertyBlock;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color endColor;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Renderer renderer;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170002E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023E2")]
				[Address(RVA = "0xB42C40", Offset = "0xB42C40", VA = "0xB42C40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023E4")]
				[Address(RVA = "0xB42CB0", Offset = "0xB42CB0", VA = "0xB42CB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0xB4293C", Offset = "0xB4293C", VA = "0xB4293C")]
			[DebuggerHidden]
			public <CycleColor>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xB429F4", Offset = "0xB429F4", VA = "0xB429F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xB429F8", Offset = "0xB429F8", VA = "0xB429F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023E3")]
			[Address(RVA = "0xB42C48", Offset = "0xB42C48", VA = "0xB42C48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<string, MaterialPropertyBlock> originalMaterialPropertyBlocks;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Dictionary<string, MaterialPropertyBlock> highlightMaterialPropertyBlocks;

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xB41EFC", Offset = "0xB41EFC", VA = "0xB41EFC", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xB41FF8", Offset = "0xB41FF8", VA = "0xB41FF8", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xB422A4", Offset = "0xB422A4", VA = "0xB422A4", Slot = "11")]
		protected override void StoreOriginalMaterials()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xB424A4", Offset = "0xB424A4", VA = "0xB424A4", Slot = "12")]
		protected override void ChangeToHighlightColor(Color color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xB42850", Offset = "0xB42850", VA = "0xB42850", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6708D4", Offset = "0x6708D4")]
		protected virtual IEnumerator CycleColor(Renderer renderer, MaterialPropertyBlock highlightMaterialPropertyBlock, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xB42968", Offset = "0xB42968", VA = "0xB42968")]
		public VRTK_MaterialPropertyBlockColorSwapHighlighter()
		{
		}
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64C6DC", Offset = "0x64C6DC")]
	public class VRTK_OutlineObjectCopyHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664FDC", Offset = "0x664FDC")]
		public float thickness;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x665014", Offset = "0x665014")]
		public GameObject[] customOutlineModels;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66504C", Offset = "0x66504C")]
		public string[] customOutlineModelPaths;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x665084", Offset = "0x665084")]
		public bool enableSubmeshHighlight;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Material stencilOutline;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Renderer[] highlightModels;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected string[] copyComponents;

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xB42CB8", Offset = "0xB42CB8", VA = "0xB42CB8", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xB42E98", Offset = "0xB42E98", VA = "0xB42E98", Slot = "5")]
		public override void ResetHighlighter()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xB42EF8", Offset = "0xB42EF8", VA = "0xB42EF8", Slot = "6")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xB43178", Offset = "0xB43178", VA = "0xB43178", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xB432FC", Offset = "0xB432FC", VA = "0xB432FC", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xB4337C", Offset = "0xB4337C", VA = "0xB4337C", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xB434EC", Offset = "0xB434EC", VA = "0xB434EC", Slot = "13")]
		protected virtual void ResetHighlighterWithCustomModels()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xB4364C", Offset = "0xB4364C", VA = "0xB4364C", Slot = "14")]
		protected virtual void ResetHighlighterWithCustomModelPaths()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xB437A4", Offset = "0xB437A4", VA = "0xB437A4", Slot = "15")]
		protected virtual void ResetHighlightersWithCurrentGameObject()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xB43888", Offset = "0xB43888", VA = "0xB43888", Slot = "16")]
		protected virtual void SetOptions([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xB439C8", Offset = "0xB439C8", VA = "0xB439C8", Slot = "17")]
		protected virtual void DeleteExistingHighlightModels()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xB43B28", Offset = "0xB43B28", VA = "0xB43B28", Slot = "18")]
		protected virtual Renderer CreateHighlightModel(GameObject givenOutlineModel, string givenOutlineModelPath)
		{
			return null;
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xB446D8", Offset = "0xB446D8", VA = "0xB446D8")]
		public VRTK_OutlineObjectCopyHighlighter()
		{
		}
	}
}
namespace Sigtrap
{
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x64C714", Offset = "0x64C714")]
	public class VrGizmos : MonoBehaviour
	{
		[Token(Token = "0x20004F7")]
		private struct DrawCommand
		{
			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float duration;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly Mesh _mesh;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Matrix4x4 _matrix;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private readonly Color _color;

			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x6E8350", Offset = "0x6E8350", VA = "0x6E8350")]
			public DrawCommand(Mesh mesh, Color color, Matrix4x4 matrix, float duration)
			{
			}

			[Token(Token = "0x60023E6")]
			[Address(RVA = "0x6E8394", Offset = "0x6E8394", VA = "0x6E8394")]
			public void Draw(Material m)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64DB90", Offset = "0x64DB90")]
		private sealed class <>c
		{
			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<DrawCommand> <>9__17_0;

			[Token(Token = "0x60023E8")]
			[Address(RVA = "0x8C82E8", Offset = "0x8C82E8", VA = "0x8C82E8")]
			public <>c()
			{
			}

			[Token(Token = "0x60023E9")]
			[Address(RVA = "0x8C82F0", Offset = "0x8C82F0", VA = "0x8C82F0")]
			internal bool <OnPostRender>b__17_0(DrawCommand c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001380")]
		private const string SHADER = "Hidden/SigtrapKit/VrGizmoOverlay";

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<VrGizmos> _drawers;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<PrimitiveType, Mesh> _meshes;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _initd;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float alpha;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool active;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _mat;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<DrawCommand> _cmds;

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x8C6ED0", Offset = "0x8C6ED0", VA = "0x8C6ED0")]
		private static void Init()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x8C71BC", Offset = "0x8C71BC", VA = "0x8C71BC")]
		private static bool AddDrawer(Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x8C734C", Offset = "0x8C734C", VA = "0x8C734C")]
		private static void Draw(PrimitiveType primitiveType, Color color, Matrix4x4 matrix, float duration)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x8C77EC", Offset = "0x8C77EC", VA = "0x8C77EC")]
		public static void DrawSphere(Vector3 position, float radius, [Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x8C79D4", Offset = "0x8C79D4", VA = "0x8C79D4")]
		public static void DrawBox(Matrix4x4 matrix, [Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x8C7B0C", Offset = "0x8C7B0C", VA = "0x8C7B0C")]
		public static void DrawBox(Vector3 position, Quaternion rotation, Vector3 size, [Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x8C7C84", Offset = "0x8C7C84", VA = "0x8C7C84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x8C7D78", Offset = "0x8C7D78", VA = "0x8C7D78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x8C7E34", Offset = "0x8C7E34", VA = "0x8C7E34")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x8C817C", Offset = "0x8C817C", VA = "0x8C817C")]
		public VrGizmos()
		{
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x2000263")]
	public struct IVRSystem
	{
		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DBA0", Offset = "0x64DBA0")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DBB4", Offset = "0x64DBB4")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DBC8", Offset = "0x64DBC8")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DBDC", Offset = "0x64DBDC")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DBF0", Offset = "0x64DBF0")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DC04", Offset = "0x64DC04")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DC18", Offset = "0x64DC18")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DC2C", Offset = "0x64DC2C")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DC40", Offset = "0x64DC40")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x2000502")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DC54", Offset = "0x64DC54")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DC68", Offset = "0x64DC68")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DC7C", Offset = "0x64DC7C")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DC90", Offset = "0x64DC90")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DCA4", Offset = "0x64DCA4")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DCB8", Offset = "0x64DCB8")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DCCC", Offset = "0x64DCCC")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DCE0", Offset = "0x64DCE0")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DCF4", Offset = "0x64DCF4")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DD08", Offset = "0x64DD08")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DD1C", Offset = "0x64DD1C")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DD30", Offset = "0x64DD30")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DD44", Offset = "0x64DD44")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DD58", Offset = "0x64DD58")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DD6C", Offset = "0x64DD6C")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DD80", Offset = "0x64DD80")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DD94", Offset = "0x64DD94")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DDA8", Offset = "0x64DDA8")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DDBC", Offset = "0x64DDBC")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DDD0", Offset = "0x64DDD0")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DDE4", Offset = "0x64DDE4")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DDF8", Offset = "0x64DDF8")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DE0C", Offset = "0x64DE0C")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DE20", Offset = "0x64DE20")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DE34", Offset = "0x64DE34")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DE48", Offset = "0x64DE48")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DE5C", Offset = "0x64DE5C")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DE70", Offset = "0x64DE70")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DE84", Offset = "0x64DE84")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DE98", Offset = "0x64DE98")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DEAC", Offset = "0x64DEAC")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DEC0", Offset = "0x64DEC0")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DED4", Offset = "0x64DED4")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DEE8", Offset = "0x64DEE8")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DEFC", Offset = "0x64DEFC")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DF10", Offset = "0x64DF10")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DF24", Offset = "0x64DF24")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DF38", Offset = "0x64DF38")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x2000264")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DF4C", Offset = "0x64DF4C")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DF60", Offset = "0x64DF60")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DF74", Offset = "0x64DF74")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x2000265")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DF88", Offset = "0x64DF88")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DF9C", Offset = "0x64DF9C")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DFB0", Offset = "0x64DFB0")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DFC4", Offset = "0x64DFC4")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DFD8", Offset = "0x64DFD8")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64DFEC", Offset = "0x64DFEC")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E000", Offset = "0x64E000")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E014", Offset = "0x64E014")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E028", Offset = "0x64E028")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E03C", Offset = "0x64E03C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E050", Offset = "0x64E050")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E064", Offset = "0x64E064")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x2000266")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E078", Offset = "0x64E078")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E08C", Offset = "0x64E08C")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E0A0", Offset = "0x64E0A0")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E0B4", Offset = "0x64E0B4")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E0C8", Offset = "0x64E0C8")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E0DC", Offset = "0x64E0DC")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E0F0", Offset = "0x64E0F0")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x200053E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E104", Offset = "0x64E104")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E118", Offset = "0x64E118")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E12C", Offset = "0x64E12C")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E140", Offset = "0x64E140")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E154", Offset = "0x64E154")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E168", Offset = "0x64E168")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E17C", Offset = "0x64E17C")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E190", Offset = "0x64E190")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E1A4", Offset = "0x64E1A4")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E1B8", Offset = "0x64E1B8")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E1CC", Offset = "0x64E1CC")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E1E0", Offset = "0x64E1E0")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E1F4", Offset = "0x64E1F4")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E208", Offset = "0x64E208")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E21C", Offset = "0x64E21C")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E230", Offset = "0x64E230")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E244", Offset = "0x64E244")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E258", Offset = "0x64E258")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E26C", Offset = "0x64E26C")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E280", Offset = "0x64E280")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E294", Offset = "0x64E294")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E2A8", Offset = "0x64E2A8")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E2BC", Offset = "0x64E2BC")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E2D0", Offset = "0x64E2D0")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x2000267")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E2E4", Offset = "0x64E2E4")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E2F8", Offset = "0x64E2F8")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E30C", Offset = "0x64E30C")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E320", Offset = "0x64E320")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E334", Offset = "0x64E334")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E348", Offset = "0x64E348")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E35C", Offset = "0x64E35C")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x200055D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E370", Offset = "0x64E370")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x2000268")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E384", Offset = "0x64E384")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E398", Offset = "0x64E398")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E3AC", Offset = "0x64E3AC")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E3C0", Offset = "0x64E3C0")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E3D4", Offset = "0x64E3D4")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E3E8", Offset = "0x64E3E8")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E3FC", Offset = "0x64E3FC")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E410", Offset = "0x64E410")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E424", Offset = "0x64E424")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E438", Offset = "0x64E438")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E44C", Offset = "0x64E44C")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E460", Offset = "0x64E460")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x200056A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E474", Offset = "0x64E474")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E488", Offset = "0x64E488")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E49C", Offset = "0x64E49C")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E4B0", Offset = "0x64E4B0")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E4C4", Offset = "0x64E4C4")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E4D8", Offset = "0x64E4D8")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E4EC", Offset = "0x64E4EC")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E500", Offset = "0x64E500")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x2000269")]
	public struct IVRCompositor
	{
		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E514", Offset = "0x64E514")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E528", Offset = "0x64E528")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E53C", Offset = "0x64E53C")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E550", Offset = "0x64E550")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E564", Offset = "0x64E564")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E578", Offset = "0x64E578")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E58C", Offset = "0x64E58C")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E5A0", Offset = "0x64E5A0")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E5B4", Offset = "0x64E5B4")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x200057B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E5C8", Offset = "0x64E5C8")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E5DC", Offset = "0x64E5DC")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E5F0", Offset = "0x64E5F0")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E604", Offset = "0x64E604")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E618", Offset = "0x64E618")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E62C", Offset = "0x64E62C")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E640", Offset = "0x64E640")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E654", Offset = "0x64E654")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E668", Offset = "0x64E668")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E67C", Offset = "0x64E67C")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E690", Offset = "0x64E690")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E6A4", Offset = "0x64E6A4")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E6B8", Offset = "0x64E6B8")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E6CC", Offset = "0x64E6CC")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E6E0", Offset = "0x64E6E0")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E6F4", Offset = "0x64E6F4")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E708", Offset = "0x64E708")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x200058C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E71C", Offset = "0x64E71C")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E730", Offset = "0x64E730")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E744", Offset = "0x64E744")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x200058F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E758", Offset = "0x64E758")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E76C", Offset = "0x64E76C")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E780", Offset = "0x64E780")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E794", Offset = "0x64E794")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E7A8", Offset = "0x64E7A8")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E7BC", Offset = "0x64E7BC")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E7D0", Offset = "0x64E7D0")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E7E4", Offset = "0x64E7E4")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E7F8", Offset = "0x64E7F8")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E80C", Offset = "0x64E80C")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E820", Offset = "0x64E820")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E834", Offset = "0x64E834")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E848", Offset = "0x64E848")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E85C", Offset = "0x64E85C")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x200026A")]
	public struct IVROverlay
	{
		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E870", Offset = "0x64E870")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E884", Offset = "0x64E884")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E898", Offset = "0x64E898")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E8AC", Offset = "0x64E8AC")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E8C0", Offset = "0x64E8C0")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E8D4", Offset = "0x64E8D4")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E8E8", Offset = "0x64E8E8")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E8FC", Offset = "0x64E8FC")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E910", Offset = "0x64E910")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E924", Offset = "0x64E924")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x20005A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E938", Offset = "0x64E938")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x20005A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E94C", Offset = "0x64E94C")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E960", Offset = "0x64E960")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E974", Offset = "0x64E974")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E988", Offset = "0x64E988")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E99C", Offset = "0x64E99C")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E9B0", Offset = "0x64E9B0")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E9C4", Offset = "0x64E9C4")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E9D8", Offset = "0x64E9D8")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64E9EC", Offset = "0x64E9EC")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EA00", Offset = "0x64EA00")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EA14", Offset = "0x64EA14")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EA28", Offset = "0x64EA28")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EA3C", Offset = "0x64EA3C")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EA50", Offset = "0x64EA50")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EA64", Offset = "0x64EA64")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EA78", Offset = "0x64EA78")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EA8C", Offset = "0x64EA8C")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EAA0", Offset = "0x64EAA0")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EAB4", Offset = "0x64EAB4")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EAC8", Offset = "0x64EAC8")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EADC", Offset = "0x64EADC")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EAF0", Offset = "0x64EAF0")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EB04", Offset = "0x64EB04")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EB18", Offset = "0x64EB18")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EB2C", Offset = "0x64EB2C")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EB40", Offset = "0x64EB40")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EB54", Offset = "0x64EB54")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EB68", Offset = "0x64EB68")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EB7C", Offset = "0x64EB7C")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EB90", Offset = "0x64EB90")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EBA4", Offset = "0x64EBA4")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EBB8", Offset = "0x64EBB8")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EBCC", Offset = "0x64EBCC")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EBE0", Offset = "0x64EBE0")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EBF4", Offset = "0x64EBF4")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EC08", Offset = "0x64EC08")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EC1C", Offset = "0x64EC1C")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EC30", Offset = "0x64EC30")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EC44", Offset = "0x64EC44")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EC58", Offset = "0x64EC58")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EC6C", Offset = "0x64EC6C")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EC80", Offset = "0x64EC80")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EC94", Offset = "0x64EC94")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ECA8", Offset = "0x64ECA8")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ECBC", Offset = "0x64ECBC")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ECD0", Offset = "0x64ECD0")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ECE4", Offset = "0x64ECE4")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ECF8", Offset = "0x64ECF8")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ED0C", Offset = "0x64ED0C")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ED20", Offset = "0x64ED20")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ED34", Offset = "0x64ED34")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ED48", Offset = "0x64ED48")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ED5C", Offset = "0x64ED5C")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ED70", Offset = "0x64ED70")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ED84", Offset = "0x64ED84")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64ED98", Offset = "0x64ED98")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EDAC", Offset = "0x64EDAC")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EDC0", Offset = "0x64EDC0")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EDD4", Offset = "0x64EDD4")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EDE8", Offset = "0x64EDE8")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EDFC", Offset = "0x64EDFC")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EE10", Offset = "0x64EE10")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EE24", Offset = "0x64EE24")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EE38", Offset = "0x64EE38")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EE4C", Offset = "0x64EE4C")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EE60", Offset = "0x64EE60")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EE74", Offset = "0x64EE74")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EE88", Offset = "0x64EE88")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EE9C", Offset = "0x64EE9C")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EEB0", Offset = "0x64EEB0")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EEC4", Offset = "0x64EEC4")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x200026B")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EED8", Offset = "0x64EED8")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EEEC", Offset = "0x64EEEC")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EF00", Offset = "0x64EF00")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EF14", Offset = "0x64EF14")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EF28", Offset = "0x64EF28")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EF3C", Offset = "0x64EF3C")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EF50", Offset = "0x64EF50")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EF64", Offset = "0x64EF64")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EF78", Offset = "0x64EF78")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EF8C", Offset = "0x64EF8C")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EFA0", Offset = "0x64EFA0")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EFB4", Offset = "0x64EFB4")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EFC8", Offset = "0x64EFC8")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x20005FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EFDC", Offset = "0x64EFDC")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64EFF0", Offset = "0x64EFF0")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F004", Offset = "0x64F004")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F018", Offset = "0x64F018")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F02C", Offset = "0x64F02C")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x200026C")]
	public struct IVRNotifications
	{
		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F040", Offset = "0x64F040")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F054", Offset = "0x64F054")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x200026D")]
	public struct IVRSettings
	{
		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F068", Offset = "0x64F068")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F07C", Offset = "0x64F07C")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F090", Offset = "0x64F090")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F0A4", Offset = "0x64F0A4")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F0B8", Offset = "0x64F0B8")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F0CC", Offset = "0x64F0CC")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F0E0", Offset = "0x64F0E0")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F0F4", Offset = "0x64F0F4")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F108", Offset = "0x64F108")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F11C", Offset = "0x64F11C")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F130", Offset = "0x64F130")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F144", Offset = "0x64F144")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x200026E")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F158", Offset = "0x64F158")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F16C", Offset = "0x64F16C")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F180", Offset = "0x64F180")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F194", Offset = "0x64F194")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F1A8", Offset = "0x64F1A8")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F1BC", Offset = "0x64F1BC")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F1D0", Offset = "0x64F1D0")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x200026F")]
	public struct IVRResources
	{
		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F1E4", Offset = "0x64F1E4")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F1F8", Offset = "0x64F1F8")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x2000270")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F20C", Offset = "0x64F20C")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F220", Offset = "0x64F220")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;
	}
	[Token(Token = "0x2000271")]
	public class CVRSystem
	{
		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F234", Offset = "0x64F234")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x200061B")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F248", Offset = "0x64F248")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x200061D")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F25C", Offset = "0x64F25C")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x200061F")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x818818", Offset = "0x818818", VA = "0x818818")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x818900", Offset = "0x818900", VA = "0x818900")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x818950", Offset = "0x818950", VA = "0x818950")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x8189B0", Offset = "0x8189B0", VA = "0x8189B0")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x818A28", Offset = "0x818A28", VA = "0x818A28")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x818A88", Offset = "0x818A88", VA = "0x818A88")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x818AD0", Offset = "0x818AD0", VA = "0x818AD0")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x818B20", Offset = "0x818B20", VA = "0x818B20")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x818B50", Offset = "0x818B50", VA = "0x818B50")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x818B8C", Offset = "0x818B8C", VA = "0x818B8C")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x818BE0", Offset = "0x818BE0", VA = "0x818BE0")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x818C10", Offset = "0x818C10", VA = "0x818C10")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x818C48", Offset = "0x818C48", VA = "0x818C48")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x818CB8", Offset = "0x818CB8", VA = "0x818CB8")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x818CE8", Offset = "0x818CE8", VA = "0x818CE8")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x818D20", Offset = "0x818D20", VA = "0x818D20")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x818D58", Offset = "0x818D58", VA = "0x818D58")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x818DC0", Offset = "0x818DC0", VA = "0x818DC0")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x818DF8", Offset = "0x818DF8", VA = "0x818DF8")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x818E48", Offset = "0x818E48", VA = "0x818E48")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x818E80", Offset = "0x818E80", VA = "0x818E80")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x818EB8", Offset = "0x818EB8", VA = "0x818EB8")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x818EF0", Offset = "0x818EF0", VA = "0x818EF0")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x818F28", Offset = "0x818F28", VA = "0x818F28")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x818F78", Offset = "0x818F78", VA = "0x818F78")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x818FC8", Offset = "0x818FC8", VA = "0x818FC8")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x819018", Offset = "0x819018", VA = "0x819018")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x819068", Offset = "0x819068", VA = "0x819068")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x8190C8", Offset = "0x8190C8", VA = "0x8190C8")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x819140", Offset = "0x819140", VA = "0x819140")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x8191A8", Offset = "0x8191A8", VA = "0x8191A8")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x819244", Offset = "0x819244", VA = "0x819244")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x8193E4", Offset = "0x8193E4", VA = "0x8193E4")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x819444", Offset = "0x819444", VA = "0x819444")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x8194E0", Offset = "0x8194E0", VA = "0x8194E0")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x819528", Offset = "0x819528", VA = "0x819528")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x819700", Offset = "0x819700", VA = "0x819700")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x8198F8", Offset = "0x8198F8", VA = "0x8198F8")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x819948", Offset = "0x819948", VA = "0x819948")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x8199E4", Offset = "0x8199E4", VA = "0x8199E4")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x819A80", Offset = "0x819A80", VA = "0x819A80")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x819AB0", Offset = "0x819AB0", VA = "0x819AB0")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x819AE0", Offset = "0x819AE0", VA = "0x819AE0")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x819B10", Offset = "0x819B10", VA = "0x819B10")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x819B40", Offset = "0x819B40", VA = "0x819B40")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x819BA0", Offset = "0x819BA0", VA = "0x819BA0")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x819BD8", Offset = "0x819BD8", VA = "0x819BD8")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x819C08", Offset = "0x819C08", VA = "0x819C08")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x8147B0", Offset = "0x8147B0", VA = "0x8147B0")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x814898", Offset = "0x814898", VA = "0x814898")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x814908", Offset = "0x814908", VA = "0x814908")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x814980", Offset = "0x814980", VA = "0x814980")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x11A7D38", Offset = "0x11A7D38", VA = "0x11A7D38")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x11A7E90", Offset = "0x11A7E90", VA = "0x11A7E90")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x11A7F2C", Offset = "0x11A7F2C", VA = "0x11A7F2C")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x11A7F78", Offset = "0x11A7F78", VA = "0x11A7F78")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x11A7FEC", Offset = "0x11A7FEC", VA = "0x11A7FEC")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x11A804C", Offset = "0x11A804C", VA = "0x11A804C")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x11A80B4", Offset = "0x11A80B4", VA = "0x11A80B4")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x11A8100", Offset = "0x11A8100", VA = "0x11A8100")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x11A8138", Offset = "0x11A8138", VA = "0x11A8138")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x11A81B0", Offset = "0x11A81B0", VA = "0x11A81B0")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x11A8220", Offset = "0x11A8220", VA = "0x11A8220")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x11A8298", Offset = "0x11A8298", VA = "0x11A8298")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x11A8304", Offset = "0x11A8304", VA = "0x11A8304")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x2000274")]
	public class CVRApplications
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x812628", Offset = "0x812628", VA = "0x812628")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x812710", Offset = "0x812710", VA = "0x812710")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x812758", Offset = "0x812758", VA = "0x812758")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x812790", Offset = "0x812790", VA = "0x812790")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x8127C8", Offset = "0x8127C8", VA = "0x8127C8")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x8127F8", Offset = "0x8127F8", VA = "0x8127F8")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x812848", Offset = "0x812848", VA = "0x812848")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x812898", Offset = "0x812898", VA = "0x812898")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x8128D0", Offset = "0x8128D0", VA = "0x8128D0")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x812938", Offset = "0x812938", VA = "0x812938")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x812980", Offset = "0x812980", VA = "0x812980")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x8129B8", Offset = "0x8129B8", VA = "0x8129B8")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x8129F0", Offset = "0x8129F0", VA = "0x8129F0")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x812A38", Offset = "0x812A38", VA = "0x812A38")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x812A70", Offset = "0x812A70", VA = "0x812A70")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x812B0C", Offset = "0x812B0C", VA = "0x812B0C")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x812B74", Offset = "0x812B74", VA = "0x812B74")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x812BC4", Offset = "0x812BC4", VA = "0x812BC4")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x812C14", Offset = "0x812C14", VA = "0x812C14")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x812C5C", Offset = "0x812C5C", VA = "0x812C5C")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x812C94", Offset = "0x812C94", VA = "0x812C94")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x812CDC", Offset = "0x812CDC", VA = "0x812CDC")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x812D2C", Offset = "0x812D2C", VA = "0x812D2C")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x812D7C", Offset = "0x812D7C", VA = "0x812D7C")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x812DCC", Offset = "0x812DCC", VA = "0x812DCC")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x812E1C", Offset = "0x812E1C", VA = "0x812E1C")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x812E64", Offset = "0x812E64", VA = "0x812E64")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x812E94", Offset = "0x812E94", VA = "0x812E94")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x812ECC", Offset = "0x812ECC", VA = "0x812ECC")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x812F68", Offset = "0x812F68", VA = "0x812F68")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x812F98", Offset = "0x812F98", VA = "0x812F98")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x812FE8", Offset = "0x812FE8", VA = "0x812FE8")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000275")]
	public class CVRChaperone
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x813018", Offset = "0x813018", VA = "0x813018")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x813100", Offset = "0x813100", VA = "0x813100")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x813130", Offset = "0x813130", VA = "0x813130")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x813180", Offset = "0x813180", VA = "0x813180")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x8131B8", Offset = "0x8131B8", VA = "0x8131B8")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x8131E8", Offset = "0x8131E8", VA = "0x8131E8")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x813248", Offset = "0x813248", VA = "0x813248")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x8132A8", Offset = "0x8132A8", VA = "0x8132A8")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x8132D8", Offset = "0x8132D8", VA = "0x8132D8")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x813310", Offset = "0x813310", VA = "0x813310")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x8133F8", Offset = "0x8133F8", VA = "0x8133F8")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x813430", Offset = "0x813430", VA = "0x813430")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x813460", Offset = "0x813460", VA = "0x813460")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x8134B0", Offset = "0x8134B0", VA = "0x8134B0")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x8134E8", Offset = "0x8134E8", VA = "0x8134E8")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x8135A0", Offset = "0x8135A0", VA = "0x8135A0")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x813658", Offset = "0x813658", VA = "0x813658")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x813690", Offset = "0x813690", VA = "0x813690")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x8136C8", Offset = "0x8136C8", VA = "0x8136C8")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x813710", Offset = "0x813710", VA = "0x813710")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x813760", Offset = "0x813760", VA = "0x813760")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x813798", Offset = "0x813798", VA = "0x813798")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x8137D0", Offset = "0x8137D0", VA = "0x8137D0")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x813808", Offset = "0x813808", VA = "0x813808")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x813840", Offset = "0x813840", VA = "0x813840")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x813890", Offset = "0x813890", VA = "0x813890")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x813948", Offset = "0x813948", VA = "0x813948")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x813998", Offset = "0x813998", VA = "0x813998")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x813A50", Offset = "0x813A50", VA = "0x813A50")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x813A9C", Offset = "0x813A9C", VA = "0x813A9C")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000277")]
	public class CVRCompositor
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x813AE4", Offset = "0x813AE4", VA = "0x813AE4")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x813BCC", Offset = "0x813BCC", VA = "0x813BCC")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x813C04", Offset = "0x813C04", VA = "0x813C04")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x813C34", Offset = "0x813C34", VA = "0x813C34")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x813CA8", Offset = "0x813CA8", VA = "0x813CA8")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x813D1C", Offset = "0x813D1C", VA = "0x813D1C")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x813D6C", Offset = "0x813D6C", VA = "0x813D6C")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x813DCC", Offset = "0x813DCC", VA = "0x813DCC")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x813DFC", Offset = "0x813DFC", VA = "0x813DFC")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x813E2C", Offset = "0x813E2C", VA = "0x813E2C")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x813E74", Offset = "0x813E74", VA = "0x813E74")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x813EBC", Offset = "0x813EBC", VA = "0x813EBC")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x813EEC", Offset = "0x813EEC", VA = "0x813EEC")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x813F34", Offset = "0x813F34", VA = "0x813F34")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x813FAC", Offset = "0x813FAC", VA = "0x813FAC")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x813FE4", Offset = "0x813FE4", VA = "0x813FE4")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x81402C", Offset = "0x81402C", VA = "0x81402C")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x81405C", Offset = "0x81405C", VA = "0x81405C")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x8140AC", Offset = "0x8140AC", VA = "0x8140AC")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x8140DC", Offset = "0x8140DC", VA = "0x8140DC")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x81410C", Offset = "0x81410C", VA = "0x81410C")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x81413C", Offset = "0x81413C", VA = "0x81413C")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x81416C", Offset = "0x81416C", VA = "0x81416C")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x81419C", Offset = "0x81419C", VA = "0x81419C")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x8141CC", Offset = "0x8141CC", VA = "0x8141CC")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x8141FC", Offset = "0x8141FC", VA = "0x8141FC")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x81422C", Offset = "0x81422C", VA = "0x81422C")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x81425C", Offset = "0x81425C", VA = "0x81425C")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x81428C", Offset = "0x81428C", VA = "0x81428C")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x8142BC", Offset = "0x8142BC", VA = "0x8142BC")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x8142EC", Offset = "0x8142EC", VA = "0x8142EC")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x81431C", Offset = "0x81431C", VA = "0x81431C")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x814354", Offset = "0x814354", VA = "0x814354")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x814384", Offset = "0x814384", VA = "0x814384")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x8143BC", Offset = "0x8143BC", VA = "0x8143BC")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x81440C", Offset = "0x81440C", VA = "0x81440C")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x814444", Offset = "0x814444", VA = "0x814444")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x814498", Offset = "0x814498", VA = "0x814498")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x8144E0", Offset = "0x8144E0", VA = "0x8144E0")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x814518", Offset = "0x814518", VA = "0x814518")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x814550", Offset = "0x814550", VA = "0x814550")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x814598", Offset = "0x814598", VA = "0x814598")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x8145E8", Offset = "0x8145E8", VA = "0x8145E8")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x814620", Offset = "0x814620", VA = "0x814620")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x2000278")]
	public class CVROverlay
	{
		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F270", Offset = "0x64F270")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000621")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x814B6C", Offset = "0x814B6C", VA = "0x814B6C")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x814C54", Offset = "0x814C54", VA = "0x814C54")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x814CA0", Offset = "0x814CA0", VA = "0x814CA0")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x814CF4", Offset = "0x814CF4", VA = "0x814CF4")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x814D2C", Offset = "0x814D2C", VA = "0x814D2C")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x814D64", Offset = "0x814D64", VA = "0x814D64")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x814D94", Offset = "0x814D94", VA = "0x814D94")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x814DF4", Offset = "0x814DF4", VA = "0x814DF4")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x814E54", Offset = "0x814E54", VA = "0x814E54")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x814E9C", Offset = "0x814E9C", VA = "0x814E9C")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x814F0C", Offset = "0x814F0C", VA = "0x814F0C")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x814FA8", Offset = "0x814FA8", VA = "0x814FA8")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x814FF0", Offset = "0x814FF0", VA = "0x814FF0")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x815028", Offset = "0x815028", VA = "0x815028")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x815078", Offset = "0x815078", VA = "0x815078")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x8150CC", Offset = "0x8150CC", VA = "0x8150CC")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x81512C", Offset = "0x81512C", VA = "0x81512C")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x815198", Offset = "0x815198", VA = "0x815198")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x8151E0", Offset = "0x8151E0", VA = "0x8151E0")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x81522C", Offset = "0x81522C", VA = "0x81522C")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x815274", Offset = "0x815274", VA = "0x815274")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x8152C0", Offset = "0x8152C0", VA = "0x8152C0")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x815308", Offset = "0x815308", VA = "0x815308")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x815354", Offset = "0x815354", VA = "0x815354")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x81539C", Offset = "0x81539C", VA = "0x81539C")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x8153E8", Offset = "0x8153E8", VA = "0x8153E8")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x815438", Offset = "0x815438", VA = "0x815438")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x815490", Offset = "0x815490", VA = "0x815490")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x8154D8", Offset = "0x8154D8", VA = "0x8154D8")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x815520", Offset = "0x815520", VA = "0x815520")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x815568", Offset = "0x815568", VA = "0x815568")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x8155B0", Offset = "0x8155B0", VA = "0x8155B0")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x815618", Offset = "0x815618", VA = "0x815618")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x815668", Offset = "0x815668", VA = "0x815668")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x8156B0", Offset = "0x8156B0", VA = "0x8156B0")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x815700", Offset = "0x815700", VA = "0x815700")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x815750", Offset = "0x815750", VA = "0x815750")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x8157A0", Offset = "0x8157A0", VA = "0x8157A0")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x8157F4", Offset = "0x8157F4", VA = "0x8157F4")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x815844", Offset = "0x815844", VA = "0x815844")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x8158A8", Offset = "0x8158A8", VA = "0x8158A8")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x8158FC", Offset = "0x8158FC", VA = "0x8158FC")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x81594C", Offset = "0x81594C", VA = "0x81594C")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x815984", Offset = "0x815984", VA = "0x815984")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x8159BC", Offset = "0x8159BC", VA = "0x8159BC")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x8159F4", Offset = "0x8159F4", VA = "0x8159F4")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x815A5C", Offset = "0x815A5C", VA = "0x815A5C")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x8160CC", Offset = "0x8160CC", VA = "0x8160CC")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x816114", Offset = "0x816114", VA = "0x816114")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x81615C", Offset = "0x81615C", VA = "0x81615C")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x8161A4", Offset = "0x8161A4", VA = "0x8161A4")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x8161EC", Offset = "0x8161EC", VA = "0x8161EC")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x81623C", Offset = "0x81623C", VA = "0x81623C")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x816274", Offset = "0x816274", VA = "0x816274")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x8162A4", Offset = "0x8162A4", VA = "0x8162A4")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x8162DC", Offset = "0x8162DC", VA = "0x8162DC")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x81632C", Offset = "0x81632C", VA = "0x81632C")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x816374", Offset = "0x816374", VA = "0x816374")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x8163D4", Offset = "0x8163D4", VA = "0x8163D4")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x816438", Offset = "0x816438", VA = "0x816438")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x816480", Offset = "0x816480", VA = "0x816480")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x8164B8", Offset = "0x8164B8", VA = "0x8164B8")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x816520", Offset = "0x816520", VA = "0x816520")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x816568", Offset = "0x816568", VA = "0x816568")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x816604", Offset = "0x816604", VA = "0x816604")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x81664C", Offset = "0x81664C", VA = "0x81664C")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x8166A4", Offset = "0x8166A4", VA = "0x8166A4")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x81670C", Offset = "0x81670C", VA = "0x81670C")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x81673C", Offset = "0x81673C", VA = "0x81673C")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x816774", Offset = "0x816774", VA = "0x816774")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x8167BC", Offset = "0x8167BC", VA = "0x8167BC")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x816808", Offset = "0x816808", VA = "0x816808")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x816840", Offset = "0x816840", VA = "0x816840")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x816870", Offset = "0x816870", VA = "0x816870")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x8168F0", Offset = "0x8168F0", VA = "0x8168F0")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x81697C", Offset = "0x81697C", VA = "0x81697C")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x8169C4", Offset = "0x8169C4", VA = "0x8169C4")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x8169F4", Offset = "0x8169F4", VA = "0x8169F4")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x816A3C", Offset = "0x816A3C", VA = "0x816A3C")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x816AA4", Offset = "0x816AA4", VA = "0x816AA4")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x816B04", Offset = "0x816B04", VA = "0x816B04")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x816B50", Offset = "0x816B50", VA = "0x816B50")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x816BC8", Offset = "0x816BC8", VA = "0x816BC8")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class CVRRenderModels
	{
		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64F284", Offset = "0x64F284")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x2000623")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x816D1C", Offset = "0x816D1C", VA = "0x816D1C")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x816E04", Offset = "0x816E04", VA = "0x816E04")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x816E4C", Offset = "0x816E4C", VA = "0x816E4C")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x816E84", Offset = "0x816E84", VA = "0x816E84")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x816ECC", Offset = "0x816ECC", VA = "0x816ECC")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x816F04", Offset = "0x816F04", VA = "0x816F04")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x816F54", Offset = "0x816F54", VA = "0x816F54")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x816F9C", Offset = "0x816F9C", VA = "0x816F9C")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x816FD4", Offset = "0x816FD4", VA = "0x816FD4")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x817024", Offset = "0x817024", VA = "0x817024")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x817054", Offset = "0x817054", VA = "0x817054")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x81708C", Offset = "0x81708C", VA = "0x81708C")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x8170EC", Offset = "0x8170EC", VA = "0x8170EC")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x817134", Offset = "0x817134", VA = "0x817134")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x817194", Offset = "0x817194", VA = "0x817194")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x817B10", Offset = "0x817B10", VA = "0x817B10")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x817B58", Offset = "0x817B58", VA = "0x817B58")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x817BB8", Offset = "0x817BB8", VA = "0x817BB8")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x817C18", Offset = "0x817C18", VA = "0x817C18")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x200027A")]
	public class CVRNotifications
	{
		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x8149D0", Offset = "0x8149D0", VA = "0x8149D0")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x814AB0", Offset = "0x814AB0", VA = "0x814AB0")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x814B34", Offset = "0x814B34", VA = "0x814B34")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x200027B")]
	public class CVRSettings
	{
		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x8182DC", Offset = "0x8182DC", VA = "0x8182DC")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x8183C4", Offset = "0x8183C4", VA = "0x8183C4")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x818460", Offset = "0x818460", VA = "0x818460")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x8184A8", Offset = "0x8184A8", VA = "0x8184A8")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x818508", Offset = "0x818508", VA = "0x818508")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x818568", Offset = "0x818568", VA = "0x818568")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x8185C8", Offset = "0x8185C8", VA = "0x8185C8")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x818628", Offset = "0x818628", VA = "0x818628")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x818678", Offset = "0x818678", VA = "0x818678")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x8186C8", Offset = "0x8186C8", VA = "0x8186C8")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x818718", Offset = "0x818718", VA = "0x818718")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x818780", Offset = "0x818780", VA = "0x818780")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x8187C8", Offset = "0x8187C8", VA = "0x8187C8")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class CVRScreenshots
	{
		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x817F8C", Offset = "0x817F8C", VA = "0x817F8C")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x81807C", Offset = "0x81807C", VA = "0x81807C")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x8180E0", Offset = "0x8180E0", VA = "0x8180E0")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x818130", Offset = "0x818130", VA = "0x818130")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x818178", Offset = "0x818178", VA = "0x818178")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x8181E0", Offset = "0x8181E0", VA = "0x8181E0")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x818228", Offset = "0x818228", VA = "0x818228")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x81827C", Offset = "0x81827C", VA = "0x81827C")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x200027D")]
	public class CVRResources
	{
		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x817DFC", Offset = "0x817DFC", VA = "0x817DFC")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x817EDC", Offset = "0x817EDC", VA = "0x817EDC")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x817F2C", Offset = "0x817F2C", VA = "0x817F2C")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200027E")]
	public class CVRDriverManager
	{
		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x814650", Offset = "0x814650", VA = "0x814650")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x814730", Offset = "0x814730", VA = "0x814730")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x814760", Offset = "0x814760", VA = "0x814760")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200027F")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x9412C4", Offset = "0x9412C4", VA = "0x9412C4")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x941378", Offset = "0x941378", VA = "0x941378")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x94140C", Offset = "0x94140C", VA = "0x94140C")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x9414A8", Offset = "0x9414A8", VA = "0x9414A8")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x9415B8", Offset = "0x9415B8", VA = "0x9415B8")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x94165C", Offset = "0x94165C", VA = "0x94165C")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x941728", Offset = "0x941728", VA = "0x941728")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x9417E8", Offset = "0x9417E8", VA = "0x9417E8")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x9429C8", Offset = "0x9429C8", VA = "0x9429C8")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public enum EVREye
	{
		[Token(Token = "0x40014B8")]
		Eye_Left,
		[Token(Token = "0x40014B9")]
		Eye_Right
	}
	[Token(Token = "0x2000281")]
	public enum ETextureType
	{
		[Token(Token = "0x40014BB")]
		DirectX,
		[Token(Token = "0x40014BC")]
		OpenGL,
		[Token(Token = "0x40014BD")]
		Vulkan,
		[Token(Token = "0x40014BE")]
		IOSurface,
		[Token(Token = "0x40014BF")]
		DirectX12
	}
	[Token(Token = "0x2000282")]
	public enum EColorSpace
	{
		[Token(Token = "0x40014C1")]
		Auto,
		[Token(Token = "0x40014C2")]
		Gamma,
		[Token(Token = "0x40014C3")]
		Linear
	}
	[Token(Token = "0x2000283")]
	public enum ETrackingResult
	{
		[Token(Token = "0x40014C5")]
		Uninitialized = 1,
		[Token(Token = "0x40014C6")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x40014C7")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x40014C8")]
		Running_OK = 200,
		[Token(Token = "0x40014C9")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x2000284")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x40014CB")]
		Invalid,
		[Token(Token = "0x40014CC")]
		HMD,
		[Token(Token = "0x40014CD")]
		Controller,
		[Token(Token = "0x40014CE")]
		GenericTracker,
		[Token(Token = "0x40014CF")]
		TrackingReference,
		[Token(Token = "0x40014D0")]
		DisplayRedirect
	}
	[Token(Token = "0x2000285")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x40014D2")]
		Invalid,
		[Token(Token = "0x40014D3")]
		LeftHand,
		[Token(Token = "0x40014D4")]
		RightHand
	}
	[Token(Token = "0x2000286")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x40014D6")]
		TrackingUniverseSeated,
		[Token(Token = "0x40014D7")]
		TrackingUniverseStanding,
		[Token(Token = "0x40014D8")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x2000287")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x40014DA")]
		Prop_Invalid = 0,
		[Token(Token = "0x40014DB")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x40014DC")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x40014DD")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x40014DE")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x40014DF")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x40014E0")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x40014E1")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x40014E2")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x40014E3")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x40014E4")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x40014E5")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x40014E6")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x40014E7")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x40014E8")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x40014E9")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x40014EA")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x40014EB")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x40014EC")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x40014ED")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x40014EE")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x40014EF")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x40014F0")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x40014F1")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x40014F2")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x40014F3")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x40014F4")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x40014F5")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x40014F6")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x40014F7")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x40014F8")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x40014F9")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x40014FA")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x40014FB")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x40014FC")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x40014FD")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x40014FE")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x40014FF")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001500")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001501")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001502")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001503")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001504")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001505")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001506")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4001507")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x4001508")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x4001509")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x400150A")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x400150B")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x400150C")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x400150D")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x400150E")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x400150F")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001510")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001511")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001512")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001513")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001514")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001515")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001516")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4001517")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x4001518")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x4001519")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x400151A")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x400151B")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x400151C")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x400151D")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x400151E")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x400151F")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001520")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001521")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001522")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001523")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001524")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001525")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001526")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4001527")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x4001528")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x4001529")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x400152A")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x400152B")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x400152C")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x400152D")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x400152E")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x400152F")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001530")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001531")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4001532")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001533")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001534")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001535")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x4001536")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x4001537")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x4001538")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x4001539")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x400153A")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x400153B")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x400153C")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x400153D")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x400153E")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x400153F")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4001540")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4001541")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x4001542")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4001543")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4001544")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4001545")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4001546")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x4001547")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4001548")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4001549")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x400154A")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x400154B")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x400154C")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x400154D")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x400154E")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x400154F")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4001550")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4001551")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4001552")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4001553")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4001554")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x4001555")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x4001556")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x4001557")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4001558")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4001559")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x400155A")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x400155B")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x400155C")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x400155D")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x400155E")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x400155F")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4001560")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x2000288")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4001562")]
		TrackedProp_Success,
		[Token(Token = "0x4001563")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4001564")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4001565")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x4001566")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x4001567")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4001568")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4001569")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x400156A")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x400156B")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x400156C")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x400156D")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x400156E")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x2000289")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4001570")]
		Submit_Default = 0,
		[Token(Token = "0x4001571")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4001572")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4001573")]
		Submit_Reserved = 4,
		[Token(Token = "0x4001574")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x4001575")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x200028A")]
	public enum EVRState
	{
		[Token(Token = "0x4001577")]
		Undefined = -1,
		[Token(Token = "0x4001578")]
		Off,
		[Token(Token = "0x4001579")]
		Searching,
		[Token(Token = "0x400157A")]
		Searching_Alert,
		[Token(Token = "0x400157B")]
		Ready,
		[Token(Token = "0x400157C")]
		Ready_Alert,
		[Token(Token = "0x400157D")]
		NotReady,
		[Token(Token = "0x400157E")]
		Standby,
		[Token(Token = "0x400157F")]
		Ready_Alert_Low
	}
	[Token(Token = "0x200028B")]
	public enum EVREventType
	{
		[Token(Token = "0x4001581")]
		VREvent_None = 0,
		[Token(Token = "0x4001582")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4001583")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4001584")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4001585")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4001586")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4001587")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4001588")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4001589")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x400158A")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x400158B")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x400158C")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x400158D")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x400158E")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x400158F")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4001590")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4001591")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4001592")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4001593")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4001594")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4001595")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4001596")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4001597")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4001598")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4001599")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x400159A")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x400159B")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x400159C")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x400159D")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x400159E")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x400159F")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x40015A0")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x40015A1")]
		VREvent_Scroll = 305,
		[Token(Token = "0x40015A2")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x40015A3")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x40015A4")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x40015A5")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x40015A6")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x40015A7")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x40015A8")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x40015A9")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x40015AA")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x40015AB")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x40015AC")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x40015AD")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x40015AE")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x40015AF")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x40015B0")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x40015B1")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x40015B2")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x40015B3")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x40015B4")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x40015B5")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x40015B6")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x40015B7")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x40015B8")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x40015B9")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x40015BA")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x40015BB")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x40015BC")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x40015BD")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x40015BE")]
		VREvent_DashboardGuideButtonDown = 514,
		[Token(Token = "0x40015BF")]
		VREvent_DashboardGuideButtonUp = 515,
		[Token(Token = "0x40015C0")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x40015C1")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x40015C2")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x40015C3")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x40015C4")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x40015C5")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x40015C6")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x40015C7")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x40015C8")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x40015C9")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x40015CA")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x40015CB")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x40015CC")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x40015CD")]
		VREvent_Quit = 700,
		[Token(Token = "0x40015CE")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x40015CF")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x40015D0")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x40015D1")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x40015D2")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x40015D3")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x40015D4")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x40015D5")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x40015D6")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x40015D7")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x40015D8")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x40015D9")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x40015DA")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x40015DB")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x40015DC")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x40015DD")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x40015DE")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x40015DF")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x40015E0")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x40015E1")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x40015E2")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x40015E3")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x40015E4")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x40015E5")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x40015E6")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x40015E7")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x40015E8")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x40015E9")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x40015EA")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x40015EB")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x40015EC")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x40015ED")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x40015EE")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x40015EF")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x40015F0")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x40015F1")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x40015F2")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x40015F3")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x40015F4")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x40015F5")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x40015F6")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x40015F7")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x40015F8")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x40015F9")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x40015FA")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x40015FB")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x40015FC")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x40015FD")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x40015FE")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x40015FF")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001600")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001601")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001602")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001603")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001604")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001605")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001606")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x4001607")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001608")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x200028C")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x400160A")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x400160B")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x400160C")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x400160D")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x400160E")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x200028D")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001610")]
		k_EButton_System = 0,
		[Token(Token = "0x4001611")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001612")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001613")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001614")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001615")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001616")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4001617")]
		k_EButton_A = 7,
		[Token(Token = "0x4001618")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4001619")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x400161A")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x400161B")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x400161C")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x400161D")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x400161E")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x400161F")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001620")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001621")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x200028E")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001623")]
		Left = 1,
		[Token(Token = "0x4001624")]
		Right = 2,
		[Token(Token = "0x4001625")]
		Middle = 4
	}
	[Token(Token = "0x200028F")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x4001627")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4001628")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x2000290")]
	public enum EVRInputError
	{
		[Token(Token = "0x400162A")]
		None,
		[Token(Token = "0x400162B")]
		NameNotFound,
		[Token(Token = "0x400162C")]
		WrongType,
		[Token(Token = "0x400162D")]
		InvalidHandle,
		[Token(Token = "0x400162E")]
		InvalidParam,
		[Token(Token = "0x400162F")]
		NoSteam,
		[Token(Token = "0x4001630")]
		MaxCapacityReached,
		[Token(Token = "0x4001631")]
		IPCError,
		[Token(Token = "0x4001632")]
		NoActiveActionSet,
		[Token(Token = "0x4001633")]
		InvalidDevice
	}
	[Token(Token = "0x2000291")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001635")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001636")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001637")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001638")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x2000292")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x400163A")]
		k_eControllerAxis_None,
		[Token(Token = "0x400163B")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x400163C")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x400163D")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x2000293")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x400163F")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4001640")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x2000294")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4001642")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001643")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001644")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001645")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001646")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001647")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x2000295")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001649")]
		None = 0,
		[Token(Token = "0x400164A")]
		UnknownOverlay = 10,
		[Token(Token = "0x400164B")]
		InvalidHandle = 11,
		[Token(Token = "0x400164C")]
		PermissionDenied = 12,
		[Token(Token = "0x400164D")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x400164E")]
		WrongVisibilityType = 14,
		[Token(Token = "0x400164F")]
		KeyTooLong = 15,
		[Token(Token = "0x4001650")]
		NameTooLong = 16,
		[Token(Token = "0x4001651")]
		KeyInUse = 17,
		[Token(Token = "0x4001652")]
		WrongTransformType = 18,
		[Token(Token = "0x4001653")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4001654")]
		InvalidParameter = 20,
		[Token(Token = "0x4001655")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001656")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4001657")]
		RequestFailed = 23,
		[Token(Token = "0x4001658")]
		InvalidTexture = 24,
		[Token(Token = "0x4001659")]
		UnableToLoadFile = 25,
		[Token(Token = "0x400165A")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x400165B")]
		NoNeighbor = 27,
		[Token(Token = "0x400165C")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x400165D")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x400165E")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x400165F")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4001660")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x2000296")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4001662")]
		VRApplication_Other,
		[Token(Token = "0x4001663")]
		VRApplication_Scene,
		[Token(Token = "0x4001664")]
		VRApplication_Overlay,
		[Token(Token = "0x4001665")]
		VRApplication_Background,
		[Token(Token = "0x4001666")]
		VRApplication_Utility,
		[Token(Token = "0x4001667")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4001668")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4001669")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x400166A")]
		VRApplication_Max
	}
	[Token(Token = "0x2000297")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x400166C")]
		None,
		[Token(Token = "0x400166D")]
		Success,
		[Token(Token = "0x400166E")]
		Fail
	}
	[Token(Token = "0x2000298")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4001670")]
		OK = 0,
		[Token(Token = "0x4001671")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4001672")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4001673")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4001674")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x2000299")]
	public enum EVRInitError
	{
		[Token(Token = "0x4001676")]
		None = 0,
		[Token(Token = "0x4001677")]
		Unknown = 1,
		[Token(Token = "0x4001678")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4001679")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x400167A")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x400167B")]
		Init_FileNotFound = 103,
		[Token(Token = "0x400167C")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x400167D")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x400167E")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x400167F")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4001680")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4001681")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4001682")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4001683")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4001684")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4001685")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4001686")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4001687")]
		Init_Retry = 115,
		[Token(Token = "0x4001688")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4001689")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x400168A")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x400168B")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x400168C")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x400168D")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x400168E")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x400168F")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4001690")]
		Init_Internal = 124,
		[Token(Token = "0x4001691")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4001692")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4001693")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4001694")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4001695")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4001696")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4001697")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4001698")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4001699")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x400169A")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x400169B")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x400169C")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x400169D")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x400169E")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x400169F")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x40016A0")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x40016A1")]
		Driver_Failed = 200,
		[Token(Token = "0x40016A2")]
		Driver_Unknown = 201,
		[Token(Token = "0x40016A3")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x40016A4")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x40016A5")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x40016A6")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x40016A7")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x40016A8")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x40016A9")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x40016AA")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x40016AB")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x40016AC")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x40016AD")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x40016AE")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x40016AF")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x40016B0")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x40016B1")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x40016B2")]
		IPC_Failed = 305,
		[Token(Token = "0x40016B3")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x40016B4")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x40016B5")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x40016B6")]
		Compositor_Failed = 400,
		[Token(Token = "0x40016B7")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x40016B8")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x40016B9")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x40016BA")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x40016BB")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x40016BC")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x40016BD")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x40016BE")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x40016BF")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x40016C0")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x40016C1")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x40016C2")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x40016C3")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x40016C4")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x40016C5")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x40016C6")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x40016C7")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x40016C8")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x40016C9")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x40016CA")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x40016CB")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x200029A")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x40016CD")]
		None,
		[Token(Token = "0x40016CE")]
		Mono,
		[Token(Token = "0x40016CF")]
		Stereo,
		[Token(Token = "0x40016D0")]
		Cubemap,
		[Token(Token = "0x40016D1")]
		MonoPanorama,
		[Token(Token = "0x40016D2")]
		StereoPanorama
	}
	[Token(Token = "0x200029B")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x40016D4")]
		Preview,
		[Token(Token = "0x40016D5")]
		VR
	}
	[Token(Token = "0x200029C")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x40016D7")]
		None = 0,
		[Token(Token = "0x40016D8")]
		OperationFailed = 100,
		[Token(Token = "0x40016D9")]
		InvalidHandle = 101,
		[Token(Token = "0x40016DA")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x40016DB")]
		OutOfHandles = 103,
		[Token(Token = "0x40016DC")]
		IPCFailure = 104,
		[Token(Token = "0x40016DD")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x40016DE")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x40016DF")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x40016E0")]
		StreamSetupFailure = 108,
		[Token(Token = "0x40016E1")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x40016E2")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x40016E3")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x40016E4")]
		SharedTextureFailure = 112,
		[Token(Token = "0x40016E5")]
		NoFrameAvailable = 113,
		[Token(Token = "0x40016E6")]
		InvalidArgument = 114,
		[Token(Token = "0x40016E7")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x200029D")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x40016E9")]
		Distorted,
		[Token(Token = "0x40016EA")]
		Undistorted,
		[Token(Token = "0x40016EB")]
		MaximumUndistorted,
		[Token(Token = "0x40016EC")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x200029E")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x40016EE")]
		None = 0,
		[Token(Token = "0x40016EF")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x40016F0")]
		NoManifest = 101,
		[Token(Token = "0x40016F1")]
		NoApplication = 102,
		[Token(Token = "0x40016F2")]
		InvalidIndex = 103,
		[Token(Token = "0x40016F3")]
		UnknownApplication = 104,
		[Token(Token = "0x40016F4")]
		IPCFailed = 105,
		[Token(Token = "0x40016F5")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x40016F6")]
		InvalidManifest = 107,
		[Token(Token = "0x40016F7")]
		InvalidApplication = 108,
		[Token(Token = "0x40016F8")]
		LaunchFailed = 109,
		[Token(Token = "0x40016F9")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x40016FA")]
		LaunchInProgress = 111,
		[Token(Token = "0x40016FB")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x40016FC")]
		TransitionAborted = 113,
		[Token(Token = "0x40016FD")]
		IsTemplate = 114,
		[Token(Token = "0x40016FE")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x40016FF")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001700")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001701")]
		UnknownProperty = 202,
		[Token(Token = "0x4001702")]
		InvalidParameter = 203
	}
	[Token(Token = "0x200029F")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001704")]
		Name_String = 0,
		[Token(Token = "0x4001705")]
		LaunchType_String = 11,
		[Token(Token = "0x4001706")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001707")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001708")]
		Arguments_String = 14,
		[Token(Token = "0x4001709")]
		URL_String = 15,
		[Token(Token = "0x400170A")]
		Description_String = 50,
		[Token(Token = "0x400170B")]
		NewsURL_String = 51,
		[Token(Token = "0x400170C")]
		ImagePath_String = 52,
		[Token(Token = "0x400170D")]
		Source_String = 53,
		[Token(Token = "0x400170E")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x400170F")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4001710")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001711")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001712")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001713")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001714")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x20002A0")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001716")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4001717")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4001718")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4001719")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x20002A1")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x400171B")]
		OK = 1,
		[Token(Token = "0x400171C")]
		Warning = 100,
		[Token(Token = "0x400171D")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x400171E")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x400171F")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4001720")]
		Error = 200,
		[Token(Token = "0x4001721")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001722")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001723")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001724")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x20002A2")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001726")]
		Live = 1,
		[Token(Token = "0x4001727")]
		Temp
	}
	[Token(Token = "0x20002A3")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4001729")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x20002A4")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x400172B")]
		None = 0,
		[Token(Token = "0x400172C")]
		RequestFailed = 1,
		[Token(Token = "0x400172D")]
		IncompatibleVersion = 100,
		[Token(Token = "0x400172E")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x400172F")]
		InvalidTexture = 102,
		[Token(Token = "0x4001730")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4001731")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4001732")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4001733")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001734")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001735")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001736")]
		InvalidBounds = 109
	}
	[Token(Token = "0x20002A5")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001738")]
		Implicit,
		[Token(Token = "0x4001739")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x400173A")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x20002A6")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x400173C")]
		None,
		[Token(Token = "0x400173D")]
		Mouse,
		[Token(Token = "0x400173E")]
		DualAnalog
	}
	[Token(Token = "0x20002A7")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4001740")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4001741")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4001742")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4001743")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x20002A8")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001745")]
		None,
		[Token(Token = "0x4001746")]
		Curved,
		[Token(Token = "0x4001747")]
		RGSS4X,
		[Token(Token = "0x4001748")]
		NoDashboardTab,
		[Token(Token = "0x4001749")]
		AcceptsGamepadEvents,
		[Token(Token = "0x400174A")]
		ShowGamepadFocus,
		[Token(Token = "0x400174B")]
		SendVRScrollEvents,
		[Token(Token = "0x400174C")]
		SendVRTouchpadEvents,
		[Token(Token = "0x400174D")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x400174E")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x400174F")]
		SideBySide_Parallel,
		[Token(Token = "0x4001750")]
		SideBySide_Crossed,
		[Token(Token = "0x4001751")]
		Panorama,
		[Token(Token = "0x4001752")]
		StereoPanorama,
		[Token(Token = "0x4001753")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4001754")]
		VisibleInDashboard
	}
	[Token(Token = "0x20002A9")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4001756")]
		ButtonPress_0,
		[Token(Token = "0x4001757")]
		ButtonPress_1,
		[Token(Token = "0x4001758")]
		ButtonPress_2,
		[Token(Token = "0x4001759")]
		ButtonPress_3,
		[Token(Token = "0x400175A")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x400175B")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x400175C")]
		ApplicationQuit
	}
	[Token(Token = "0x20002AA")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x400175E")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x400175F")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4001760")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x20002AB")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4001762")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4001763")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x20002AC")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4001765")]
		Up,
		[Token(Token = "0x4001766")]
		Down,
		[Token(Token = "0x4001767")]
		Left,
		[Token(Token = "0x4001768")]
		Right,
		[Token(Token = "0x4001769")]
		Count
	}
	[Token(Token = "0x20002AD")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x400176B")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x400176C")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x20002AE")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x400176E")]
		None = 0,
		[Token(Token = "0x400176F")]
		Loading = 100,
		[Token(Token = "0x4001770")]
		NotSupported = 200,
		[Token(Token = "0x4001771")]
		InvalidArg = 300,
		[Token(Token = "0x4001772")]
		InvalidModel = 301,
		[Token(Token = "0x4001773")]
		NoShapes = 302,
		[Token(Token = "0x4001774")]
		MultipleShapes = 303,
		[Token(Token = "0x4001775")]
		TooManyVertices = 304,
		[Token(Token = "0x4001776")]
		MultipleTextures = 305,
		[Token(Token = "0x4001777")]
		BufferTooSmall = 306,
		[Token(Token = "0x4001778")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4001779")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x400177A")]
		InvalidTexture = 400
	}
	[Token(Token = "0x20002AF")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x400177C")]
		IsStatic = 1,
		[Token(Token = "0x400177D")]
		IsVisible = 2,
		[Token(Token = "0x400177E")]
		IsTouched = 4,
		[Token(Token = "0x400177F")]
		IsPressed = 8,
		[Token(Token = "0x4001780")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x20002B0")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4001782")]
		Transient,
		[Token(Token = "0x4001783")]
		Persistent,
		[Token(Token = "0x4001784")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x20002B1")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001786")]
		None = 0,
		[Token(Token = "0x4001787")]
		Application = 100,
		[Token(Token = "0x4001788")]
		Contact_Disabled = 200,
		[Token(Token = "0x4001789")]
		Contact_Enabled = 201,
		[Token(Token = "0x400178A")]
		Contact_Active = 202
	}
	[Token(Token = "0x20002B2")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x400178C")]
		None,
		[Token(Token = "0x400178D")]
		IPCFailed,
		[Token(Token = "0x400178E")]
		WriteFailed,
		[Token(Token = "0x400178F")]
		ReadFailed,
		[Token(Token = "0x4001790")]
		JsonParseFailed,
		[Token(Token = "0x4001791")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x20002B3")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001793")]
		None = 0,
		[Token(Token = "0x4001794")]
		RequestFailed = 1,
		[Token(Token = "0x4001795")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001796")]
		NotFound = 101,
		[Token(Token = "0x4001797")]
		BufferTooSmall = 102,
		[Token(Token = "0x4001798")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x20002B4")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x20002B5")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x20002B6")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x20002B7")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20002B8")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20002B9")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x20002BA")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x20002BB")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x20002BC")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x20002BD")]
	public struct HmdColor_t
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x20002BE")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x20002BF")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x20002C0")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x20002C1")]
	public struct Texture_t
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x20002C2")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x20002C3")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x20002C4")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x20002C5")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x20002C6")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20002C7")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20002C8")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x20002C9")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x20002CA")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x20002CB")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x20002CC")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x20002CD")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x20002CE")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x20002CF")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x20002D0")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x20002D1")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x20002D2")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x20002D3")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x20002D4")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x20002D5")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;
	}
	[Token(Token = "0x20002D6")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x20002D7")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x20002D8")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x20002D9")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x20002DA")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x20002DB")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x20002DC")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x20002DD")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x20002DE")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x20002DF")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x20002E0")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x20002E1")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x6E9224", Offset = "0x6E9224", VA = "0x6E9224")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x6E9278", Offset = "0x6E9278", VA = "0x6E9278")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x20002E3")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x20002E4")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x20002E5")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x6E91DC", Offset = "0x6E91DC", VA = "0x6E91DC")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x6E921C", Offset = "0x6E921C", VA = "0x6E921C")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x20002E7")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x20002E8")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x20002E9")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x20002EA")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x20002EB")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x20002EC")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x20002ED")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x20002EE")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x20002EF")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x20002F0")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x20002F1")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x20002F2")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x20002F3")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x20002F4")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x6E915C", Offset = "0x6E915C", VA = "0x6E915C")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x6E9170", Offset = "0x6E9170", VA = "0x6E9170")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public struct RenderModel_t
	{
		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x20002F6")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x6E918C", Offset = "0x6E918C", VA = "0x6E918C")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x6E91B0", Offset = "0x6E91B0", VA = "0x6E91B0")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x20002F8")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x20002F9")]
	public struct COpenVRContext
	{
		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x20002FA")]
	public class OpenVR
	{
		[Token(Token = "0x2000624")]
		private class COpenVRContext
		{
			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6002882")]
			[Address(RVA = "0x941A28", Offset = "0x941A28", VA = "0x941A28")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6002883")]
			[Address(RVA = "0x942888", Offset = "0x942888", VA = "0x942888")]
			public void Clear()
			{
			}

			[Token(Token = "0x6002884")]
			[Address(RVA = "0x942910", Offset = "0x942910", VA = "0x942910")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6002885")]
			[Address(RVA = "0x941AC8", Offset = "0x941AC8", VA = "0x941AC8")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x6002886")]
			[Address(RVA = "0x941BF8", Offset = "0x941BF8", VA = "0x941BF8")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x6002887")]
			[Address(RVA = "0x941D28", Offset = "0x941D28", VA = "0x941D28")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x6002888")]
			[Address(RVA = "0x941E58", Offset = "0x941E58", VA = "0x941E58")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x6002889")]
			[Address(RVA = "0x941F88", Offset = "0x941F88", VA = "0x941F88")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x600288A")]
			[Address(RVA = "0x9420B8", Offset = "0x9420B8", VA = "0x9420B8")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x600288B")]
			[Address(RVA = "0x9421E8", Offset = "0x9421E8", VA = "0x9421E8")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x600288C")]
			[Address(RVA = "0x942318", Offset = "0x942318", VA = "0x942318")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x600288D")]
			[Address(RVA = "0x942448", Offset = "0x942448", VA = "0x942448")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x600288E")]
			[Address(RVA = "0x942578", Offset = "0x942578", VA = "0x942578")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x600288F")]
			[Address(RVA = "0x9426A8", Offset = "0x9426A8", VA = "0x9426A8")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x40018DC")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x40018DD")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x40018DE")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x40018DF")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x40018E0")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x40018E1")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x40018E2")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x40018E3")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x40018E4")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x40018E5")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x40018E6")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x40018E7")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x40018E8")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x40018E9")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x40018EA")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x40018EB")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x40018EC")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x40018ED")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x40018EE")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x40018EF")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x40018F0")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x40018F1")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x40018F2")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x40018F3")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x40018F4")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x40018F5")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x40018F6")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x40018F7")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x40018F8")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x40018F9")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x40018FA")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x40018FB")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x40018FC")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x40018FD")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x40018FE")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x40018FF")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001900")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001901")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001902")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001903")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001904")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001905")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001906")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001907")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x4001908")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001909")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x400190A")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x400190B")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x400190C")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x400190D")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x400190E")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x400190F")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001910")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001911")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001912")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001913")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001914")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001915")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001916")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001917")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4001918")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001919")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x400191A")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x400191B")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x400191C")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x400191D")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x400191E")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x400191F")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001920")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001921")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001922")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001923")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001924")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001925")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001926")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4001927")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4001928")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4001929")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x400192A")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x400192B")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x400192C")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x400192D")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x400192E")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x400192F")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4001930")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4001931")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4001932")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001933")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001934")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001935")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001936")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001937")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4001938")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4001939")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x400193A")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x400193B")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x400193C")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x400193D")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x400193E")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x400193F")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4001940")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4001941")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4001942")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4001943")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4001944")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4001945")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4001946")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4001947")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4001948")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4001949")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x400194A")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x400194B")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x400194C")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x400194D")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x400194E")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x400194F")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4001950")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4001951")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4001952")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4001953")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4001954")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4001955")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4001956")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4001957")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4001958")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4001959")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x400195A")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x400195B")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x400195C")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x400195D")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x400195E")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x400195F")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4001960")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4001961")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4001962")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4001963")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4001964")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4001965")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4001966")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4001967")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4001968")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4001969")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x400196A")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x400196B")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x400196C")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x400196D")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x400196E")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x400196F")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4001970")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4001971")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4001972")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4001973")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4001974")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4001975")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4001976")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4001977")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4001978")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4001979")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x400197A")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x400197B")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x400197C")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x400197D")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x400197E")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x400197F")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4001980")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4001981")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4001982")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4001983")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4001984")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4001985")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4001986")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4001987")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4001988")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4001989")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x400198A")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x400198B")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x400198C")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x400198D")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x400198E")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x400198F")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001990")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4001991")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4001992")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001993")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001994")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6650BC", Offset = "0x6650BC")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4001996")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x17000104")]
		private static uint VRToken
		{
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0x941878", Offset = "0x941878", VA = "0x941878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670938", Offset = "0x670938")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x9418E0", Offset = "0x9418E0", VA = "0x9418E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670948", Offset = "0x670948")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0x94194C", Offset = "0x94194C", VA = "0x94194C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		public static CVRSystem System
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x941A58", Offset = "0x941A58", VA = "0x941A58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x941B88", Offset = "0x941B88", VA = "0x941B88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x941CB8", Offset = "0x941CB8", VA = "0x941CB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x941DE8", Offset = "0x941DE8", VA = "0x941DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x941F18", Offset = "0x941F18", VA = "0x941F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x942048", Offset = "0x942048", VA = "0x942048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x942178", Offset = "0x942178", VA = "0x942178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x9422A8", Offset = "0x9422A8", VA = "0x9422A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x9423D8", Offset = "0x9423D8", VA = "0x9423D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x942508", Offset = "0x942508", VA = "0x942508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x942638", Offset = "0x942638", VA = "0x942638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x9412C0", Offset = "0x9412C0", VA = "0x9412C0")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x941374", Offset = "0x941374", VA = "0x941374")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x941408", Offset = "0x941408", VA = "0x941408")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x9414A4", Offset = "0x9414A4", VA = "0x9414A4")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x941540", Offset = "0x941540", VA = "0x941540")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x941658", Offset = "0x941658", VA = "0x941658")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x941724", Offset = "0x941724", VA = "0x941724")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x9417E4", Offset = "0x9417E4", VA = "0x9417E4")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x942768", Offset = "0x942768", VA = "0x942768")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x9428A8", Offset = "0x9428A8", VA = "0x9428A8")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x942904", Offset = "0x942904", VA = "0x942904")]
		public OpenVR()
		{
		}
	}
}
namespace DentedPixel
{
	[Token(Token = "0x20002FB")]
	public class LeanDummy
	{
		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x8581DC", Offset = "0x8581DC", VA = "0x8581DC")]
		public LeanDummy()
		{
		}
	}
}
